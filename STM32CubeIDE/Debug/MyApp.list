
MyApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021668  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000021f8  08021818  08021818  00031818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003582  08023a10  08023a10  00033a10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002a4  08026f94  08026f94  00036f94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000019c  08027238  08027238  00037238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000fe0c8  080273d4  080273d4  000373d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0812549c  0812549c  0014016c  2**0
                  CONTENTS
  8 .ARM          00000008  0812549c  0812549c  0013549c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  081254a4  081254a4  0014016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  081254a4  081254a4  001354a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  081254b8  081254b8  001354b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  081254c0  00140000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001594c  2000016c  0812562c  0014016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20015ab8  0812562c  00145ab8  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  0014016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00150000  2**2
                  ALLOC
 17 .debug_line   00066681  00000000  00000000  0014019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   00118f4c  00000000  00000000  001a681d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001c318  00000000  00000000  002bf769  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000032e0  00000000  00000000  002dba88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00121c11  00000000  00000000  002ded68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000073d0  00000000  00000000  00400980  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00037c93  00000000  00000000  00407d50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00036374  00000000  00000000  0043f9e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  00475d57  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000a96c  00000000  00000000  00475e28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021800 	.word	0x08021800

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021800 	.word	0x08021800

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f006 fc01 	bl	8006dd4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f020 f823 	bl	802061c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff09 	bl	80013ec <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005dc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005e0:	081254c0 	.word	0x081254c0
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005ec:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005f0:	20015ab8 	.word	0x20015ab8

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005f6:	4770      	bx	lr

080005f8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005f8:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005fa:	f000 fc9b 	bl	8000f34 <touchgfx_components_init>
  touchgfx_init();
}
 80005fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000602:	f000 bc25 	b.w	8000e50 <touchgfx_init>

08000606 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000606:	f000 bc97 	b.w	8000f38 <touchgfx_taskEntry>

0800060a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800060a:	4770      	bx	lr

0800060c <_ZN20STM32TouchControllerD0Ev>:
 800060c:	b510      	push	{r4, lr}
 800060e:	2104      	movs	r1, #4
 8000610:	4604      	mov	r4, r0
 8000612:	f01f ff09 	bl	8020428 <_ZdlPvj>
 8000616:	4620      	mov	r0, r4
 8000618:	bd10      	pop	{r4, pc}
	...

0800061c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800061c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800061e:	4b0c      	ldr	r3, [pc, #48]	; (8000650 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000620:	4c0c      	ldr	r4, [pc, #48]	; (8000654 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000622:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000624:	4b0c      	ldr	r3, [pc, #48]	; (8000658 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000626:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000628:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800062a:	6863      	ldr	r3, [r4, #4]
 800062c:	4798      	blx	r3
 800062e:	f640 0311 	movw	r3, #2065	; 0x811
 8000632:	4298      	cmp	r0, r3
 8000634:	d10a      	bne.n	800064c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000636:	4d09      	ldr	r5, [pc, #36]	; (800065c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000638:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800063a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800063c:	2082      	movs	r0, #130	; 0x82
 800063e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000640:	682b      	ldr	r3, [r5, #0]
 8000642:	2082      	movs	r0, #130	; 0x82
 8000644:	68db      	ldr	r3, [r3, #12]
 8000646:	4798      	blx	r3
 8000648:	2000      	movs	r0, #0
    }

    return ret;
}
 800064a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800064c:	2001      	movs	r0, #1
 800064e:	e7fc      	b.n	800064a <_Z11BSP_TS_Inittt+0x2e>
 8000650:	20000188 	.word	0x20000188
 8000654:	2000004c 	.word	0x2000004c
 8000658:	2000018a 	.word	0x2000018a
 800065c:	2000018c 	.word	0x2000018c

08000660 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000660:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000664:	20f0      	movs	r0, #240	; 0xf0
 8000666:	f7ff bfd9 	b.w	800061c <_Z11BSP_TS_Inittt>
	...

0800066c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800066c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800066e:	4d34      	ldr	r5, [pc, #208]	; (8000740 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000670:	682b      	ldr	r3, [r5, #0]
{
 8000672:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000674:	691b      	ldr	r3, [r3, #16]
 8000676:	2082      	movs	r0, #130	; 0x82
 8000678:	4798      	blx	r3
 800067a:	b280      	uxth	r0, r0
 800067c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800067e:	2800      	cmp	r0, #0
 8000680:	d04c      	beq.n	800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000682:	682b      	ldr	r3, [r5, #0]
 8000684:	f10d 0206 	add.w	r2, sp, #6
 8000688:	695b      	ldr	r3, [r3, #20]
 800068a:	a901      	add	r1, sp, #4
 800068c:	2082      	movs	r0, #130	; 0x82
 800068e:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8000690:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000694:	f640 6274 	movw	r2, #3700	; 0xe74
 8000698:	4293      	cmp	r3, r2
 800069a:	d941      	bls.n	8000720 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>
        {
            y = 3700;
 800069c:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 80006a0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80006a4:	f5c2 6267 	rsb	r2, r2, #3696	; 0xe70
 80006a8:	3204      	adds	r2, #4
 80006aa:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80006ac:	2a0a      	cmp	r2, #10
 80006ae:	d93d      	bls.n	800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        yr = y / 11;
 80006b0:	230b      	movs	r3, #11
 80006b2:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80006b6:	4b23      	ldr	r3, [pc, #140]	; (8000744 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006b8:	881b      	ldrh	r3, [r3, #0]
 80006ba:	429a      	cmp	r2, r3
 80006bc:	d901      	bls.n	80006c2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x56>
        {
            yr = TsYBoundary - 1;
 80006be:	3b01      	subs	r3, #1
 80006c0:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006c2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006c6:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006ca:	428b      	cmp	r3, r1
 80006cc:	d830      	bhi.n	8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>
        {
            x = 3870 - x;
 80006ce:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006d2:	330e      	adds	r3, #14
 80006d4:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006d6:	210f      	movs	r1, #15
 80006d8:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006dc:	491a      	ldr	r1, [pc, #104]	; (8000748 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
 80006de:	8809      	ldrh	r1, [r1, #0]
 80006e0:	428b      	cmp	r3, r1
 80006e2:	d901      	bls.n	80006e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
        {
            xr = TsXBoundary - 1;
 80006e4:	1e4b      	subs	r3, r1, #1
 80006e6:	b29b      	uxth	r3, r3
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e8:	4e18      	ldr	r6, [pc, #96]	; (800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ea:	4d19      	ldr	r5, [pc, #100]	; (8000750 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006f0:	4283      	cmp	r3, r0
 80006f2:	b281      	uxth	r1, r0
 80006f4:	bf8c      	ite	hi
 80006f6:	1a59      	subhi	r1, r3, r1
 80006f8:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006fa:	b2b8      	uxth	r0, r7
 80006fc:	42ba      	cmp	r2, r7
 80006fe:	bf8c      	ite	hi
 8000700:	1a10      	subhi	r0, r2, r0
 8000702:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000704:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000706:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000708:	4401      	add	r1, r0
 800070a:	2905      	cmp	r1, #5
        {
            _x = x;
 800070c:	bfc8      	it	gt
 800070e:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8000710:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8000712:	bfc8      	it	gt
 8000714:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8000716:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000718:	682b      	ldr	r3, [r5, #0]
 800071a:	80a3      	strh	r3, [r4, #4]
    }
}
 800071c:	b003      	add	sp, #12
 800071e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000720:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8000722:	bf9c      	itt	ls
 8000724:	23b4      	movls	r3, #180	; 0xb4
 8000726:	f8ad 3006 	strhls.w	r3, [sp, #6]
 800072a:	e7b9      	b.n	80006a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 800072c:	2200      	movs	r2, #0
 800072e:	e7c8      	b.n	80006c2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x56>
            x = 3800 - x;
 8000730:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8000734:	3308      	adds	r3, #8
 8000736:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000738:	2b0e      	cmp	r3, #14
 800073a:	d8cc      	bhi.n	80006d6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
            xr = 0;
 800073c:	2300      	movs	r3, #0
 800073e:	e7d3      	b.n	80006e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
 8000740:	2000018c 	.word	0x2000018c
 8000744:	2000018a 	.word	0x2000018a
 8000748:	20000188 	.word	0x20000188
 800074c:	20000190 	.word	0x20000190
 8000750:	20000194 	.word	0x20000194

08000754 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000754:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000756:	4668      	mov	r0, sp
{
 8000758:	460d      	mov	r5, r1
 800075a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800075c:	f7ff ff86 	bl	800066c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000760:	f8bd 0000 	ldrh.w	r0, [sp]
 8000764:	b130      	cbz	r0, 8000774 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000766:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800076a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800076c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000770:	6023      	str	r3, [r4, #0]
        return true;
 8000772:	2001      	movs	r0, #1
}
 8000774:	b003      	add	sp, #12
 8000776:	bd30      	pop	{r4, r5, pc}

08000778 <_ZN8touchgfx4GPIO4initEv>:
            {
                GPIO_InvertedLevels[id] = 1;
            }
        }
    }
}
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    }
}
 800077a:	4770      	bx	lr

0800077c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800077c:	4770      	bx	lr

0800077e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000780:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000782:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000786:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800078a:	4770      	bx	lr

0800078c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800078c:	2000      	movs	r0, #0
 800078e:	4770      	bx	lr

08000790 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000790:	4b03      	ldr	r3, [pc, #12]	; (80007a0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000792:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000794:	3900      	subs	r1, #0
 8000796:	bf18      	it	ne
 8000798:	2101      	movne	r1, #1
 800079a:	7019      	strb	r1, [r3, #0]
    }
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	20014fc3 	.word	0x20014fc3

080007a4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80007a4:	2000      	movs	r0, #0
 80007a6:	4770      	bx	lr

080007a8 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80007a8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80007aa:	b10b      	cbz	r3, 80007b0 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80007ac:	4608      	mov	r0, r1
 80007ae:	4718      	bx	r3
        }
    }
 80007b0:	4770      	bx	lr

080007b2 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80007b2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80007b6:	4770      	bx	lr

080007b8 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80007b8:	6840      	ldr	r0, [r0, #4]
 80007ba:	6803      	ldr	r3, [r0, #0]
 80007bc:	699b      	ldr	r3, [r3, #24]
 80007be:	4718      	bx	r3

080007c0 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80007c0:	4770      	bx	lr

080007c2 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80007c2:	4770      	bx	lr

080007c4 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80007c4:	4770      	bx	lr
	...

080007c8 <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 80007c8:	b570      	push	{r4, r5, r6, lr}
 80007ca:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80007cc:	f000 fc82 	bl	80010d4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80007d0:	6823      	ldr	r3, [r4, #0]
 80007d2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80007d6:	4b04      	ldr	r3, [pc, #16]	; (80007e8 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 80007d8:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 80007dc:	4620      	mov	r0, r4
 80007de:	46ac      	mov	ip, r5
}
 80007e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80007e4:	4760      	bx	ip
 80007e6:	bf00      	nop
 80007e8:	d0000000 	.word	0xd0000000

080007ec <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80007ec:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80007ee:	6803      	ldr	r3, [r0, #0]
{
 80007f0:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80007f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80007f6:	4798      	blx	r3
    enableInterrupts();
 80007f8:	6823      	ldr	r3, [r4, #0]
 80007fa:	4620      	mov	r0, r4
 80007fc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007fe:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000800:	f000 f8ec 	bl	80009dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000804:	6823      	ldr	r3, [r4, #0]
 8000806:	4620      	mov	r0, r4
 8000808:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800080a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800080c:	2029      	movs	r0, #41	; 0x29
 800080e:	f001 f8b5 	bl	800197c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000812:	f000 f8e3 	bl	80009dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000816:	6823      	ldr	r3, [r4, #0]
 8000818:	4620      	mov	r0, r4
 800081a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800081c:	4798      	blx	r3
    for (;;)
 800081e:	e7f8      	b.n	8000812 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000820 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000820:	b510      	push	{r4, lr}
 8000822:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000824:	f00c f990 	bl	800cb48 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000828:	6823      	ldr	r3, [r4, #0]
 800082a:	4620      	mov	r0, r4
 800082c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000834:	4718      	bx	r3

08000836 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000836:	f000 bc3f 	b.w	80010b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800083a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800083a:	f000 bc43 	b.w	80010c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800083e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800083e:	f000 bc67 	b.w	8001110 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000842 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000842:	f000 bc15 	b.w	8001070 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000846 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000846:	f000 bc6f 	b.w	8001128 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800084a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800084a:	f000 bc77 	b.w	800113c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800084e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800084e:	f000 bc19 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000852 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000852:	f00b bbe5 	b.w	800c020 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000856 <_ZN11TouchGFXHALD0Ev>:
 8000856:	b510      	push	{r4, lr}
 8000858:	217c      	movs	r1, #124	; 0x7c
 800085a:	4604      	mov	r4, r0
 800085c:	f01f fde4 	bl	8020428 <_ZdlPvj>
 8000860:	4620      	mov	r0, r4
 8000862:	bd10      	pop	{r4, pc}

08000864 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000864:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000868:	b11b      	cbz	r3, 8000872 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800086a:	6840      	ldr	r0, [r0, #4]
 800086c:	6803      	ldr	r3, [r0, #0]
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	4718      	bx	r3
    }
 8000872:	4618      	mov	r0, r3
 8000874:	4770      	bx	lr
	...

08000878 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000878:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800087a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800087e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000882:	4b0c      	ldr	r3, [pc, #48]	; (80008b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000884:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000886:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000888:	d009      	beq.n	800089e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800088a:	b93a      	cbnz	r2, 800089c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800088c:	4a0a      	ldr	r2, [pc, #40]	; (80008b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800088e:	490b      	ldr	r1, [pc, #44]	; (80008bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000890:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000892:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000894:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000896:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000898:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800089a:	701a      	strb	r2, [r3, #0]
    }
 800089c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800089e:	2a00      	cmp	r2, #0
 80008a0:	d0fc      	beq.n	800089c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008a2:	4a05      	ldr	r2, [pc, #20]	; (80008b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80008a4:	4905      	ldr	r1, [pc, #20]	; (80008bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008a6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80008a8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80008aa:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008ac:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80008ae:	2200      	movs	r2, #0
 80008b0:	e7f3      	b.n	800089a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80008b2:	bf00      	nop
 80008b4:	20014fbc 	.word	0x20014fbc
 80008b8:	20014fb8 	.word	0x20014fb8
 80008bc:	20014fba 	.word	0x20014fba

080008c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80008c0:	b570      	push	{r4, r5, r6, lr}
 80008c2:	460d      	mov	r5, r1
 80008c4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80008c6:	b935      	cbnz	r5, 80008d6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80008c8:	4b09      	ldr	r3, [pc, #36]	; (80008f0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80008ca:	4a0a      	ldr	r2, [pc, #40]	; (80008f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80008cc:	480a      	ldr	r0, [pc, #40]	; (80008f8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80008ce:	f240 21d2 	movw	r1, #722	; 0x2d2
 80008d2:	f01f fe59 	bl	8020588 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80008d6:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80008da:	4b08      	ldr	r3, [pc, #32]	; (80008fc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80008dc:	3a00      	subs	r2, #0
 80008de:	bf18      	it	ne
 80008e0:	2201      	movne	r2, #1
 80008e2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80008e4:	6803      	ldr	r3, [r0, #0]
    }
 80008e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80008ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80008ee:	4718      	bx	r3
 80008f0:	08021870 	.word	0x08021870
 80008f4:	080218a8 	.word	0x080218a8
 80008f8:	080218f6 	.word	0x080218f6
 80008fc:	20014fc2 	.word	0x20014fc2

08000900 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000900:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000902:	4b09      	ldr	r3, [pc, #36]	; (8000928 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000904:	881b      	ldrh	r3, [r3, #0]
 8000906:	428b      	cmp	r3, r1
 8000908:	d803      	bhi.n	8000912 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800090a:	4b08      	ldr	r3, [pc, #32]	; (800092c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800090c:	881b      	ldrh	r3, [r3, #0]
 800090e:	4293      	cmp	r3, r2
 8000910:	d905      	bls.n	800091e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000912:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000914:	4a07      	ldr	r2, [pc, #28]	; (8000934 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000916:	4808      	ldr	r0, [pc, #32]	; (8000938 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000918:	219e      	movs	r1, #158	; 0x9e
 800091a:	f01f fe35 	bl	8020588 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800091e:	4b07      	ldr	r3, [pc, #28]	; (800093c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000920:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000922:	4b07      	ldr	r3, [pc, #28]	; (8000940 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000924:	801a      	strh	r2, [r3, #0]
    }
 8000926:	bd08      	pop	{r3, pc}
 8000928:	20014fb8 	.word	0x20014fb8
 800092c:	20014fba 	.word	0x20014fba
 8000930:	0802193b 	.word	0x0802193b
 8000934:	0802199e 	.word	0x0802199e
 8000938:	080218f6 	.word	0x080218f6
 800093c:	20014fbe 	.word	0x20014fbe
 8000940:	20014fc0 	.word	0x20014fc0

08000944 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000944:	2101      	movs	r1, #1
{
 8000946:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000948:	2200      	movs	r2, #0
 800094a:	4608      	mov	r0, r1
 800094c:	f008 fffd 	bl	800994a <osSemaphoreNew>
 8000950:	4b0a      	ldr	r3, [pc, #40]	; (800097c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000952:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000954:	b928      	cbnz	r0, 8000962 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000956:	4b0a      	ldr	r3, [pc, #40]	; (8000980 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000958:	4a0a      	ldr	r2, [pc, #40]	; (8000984 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800095a:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800095c:	480a      	ldr	r0, [pc, #40]	; (8000988 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800095e:	f01f fe13 	bl	8020588 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000962:	2200      	movs	r2, #0
 8000964:	2104      	movs	r1, #4
 8000966:	2001      	movs	r0, #1
 8000968:	f009 f895 	bl	8009a96 <osMessageQueueNew>
 800096c:	4b07      	ldr	r3, [pc, #28]	; (800098c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800096e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000970:	b918      	cbnz	r0, 800097a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000972:	4b07      	ldr	r3, [pc, #28]	; (8000990 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000974:	4a03      	ldr	r2, [pc, #12]	; (8000984 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000976:	212c      	movs	r1, #44	; 0x2c
 8000978:	e7f0      	b.n	800095c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800097a:	bd08      	pop	{r3, pc}
 800097c:	2000019c 	.word	0x2000019c
 8000980:	08021abc 	.word	0x08021abc
 8000984:	08021b05 	.word	0x08021b05
 8000988:	08021b34 	.word	0x08021b34
 800098c:	20000198 	.word	0x20000198
 8000990:	08021b76 	.word	0x08021b76

08000994 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000994:	4b02      	ldr	r3, [pc, #8]	; (80009a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000996:	f04f 31ff 	mov.w	r1, #4294967295
 800099a:	6818      	ldr	r0, [r3, #0]
 800099c:	f009 b81f 	b.w	80099de <osSemaphoreAcquire>
 80009a0:	2000019c 	.word	0x2000019c

080009a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80009a4:	4b01      	ldr	r3, [pc, #4]	; (80009ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80009a6:	6818      	ldr	r0, [r3, #0]
 80009a8:	f009 b844 	b.w	8009a34 <osSemaphoreRelease>
 80009ac:	2000019c 	.word	0x2000019c

080009b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80009b0:	4b02      	ldr	r3, [pc, #8]	; (80009bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80009b2:	2100      	movs	r1, #0
 80009b4:	6818      	ldr	r0, [r3, #0]
 80009b6:	f009 b812 	b.w	80099de <osSemaphoreAcquire>
 80009ba:	bf00      	nop
 80009bc:	2000019c 	.word	0x2000019c

080009c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80009c0:	f7ff bff0 	b.w	80009a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080009c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80009c4:	4803      	ldr	r0, [pc, #12]	; (80009d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80009c6:	4904      	ldr	r1, [pc, #16]	; (80009d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80009c8:	6800      	ldr	r0, [r0, #0]
 80009ca:	2300      	movs	r3, #0
 80009cc:	461a      	mov	r2, r3
 80009ce:	f009 b89d 	b.w	8009b0c <osMessageQueuePut>
 80009d2:	bf00      	nop
 80009d4:	20000198 	.word	0x20000198
 80009d8:	20000004 	.word	0x20000004

080009dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80009dc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80009de:	4c08      	ldr	r4, [pc, #32]	; (8000a00 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80009e0:	2300      	movs	r3, #0
 80009e2:	461a      	mov	r2, r3
 80009e4:	a901      	add	r1, sp, #4
 80009e6:	6820      	ldr	r0, [r4, #0]
 80009e8:	f009 f8c0 	bl	8009b6c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80009ec:	6820      	ldr	r0, [r4, #0]
 80009ee:	f04f 33ff 	mov.w	r3, #4294967295
 80009f2:	2200      	movs	r2, #0
 80009f4:	a901      	add	r1, sp, #4
 80009f6:	f009 f8b9 	bl	8009b6c <osMessageQueueGet>
}
 80009fa:	b002      	add	sp, #8
 80009fc:	bd10      	pop	{r4, pc}
 80009fe:	bf00      	nop
 8000a00:	20000198 	.word	0x20000198

08000a04 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000a04:	6803      	ldr	r3, [r0, #0]
 8000a06:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a08:	4718      	bx	r3

08000a0a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000a0a:	2001      	movs	r0, #1
 8000a0c:	4770      	bx	lr

08000a0e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000a0e:	6803      	ldr	r3, [r0, #0]
 8000a10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000a12:	4718      	bx	r3

08000a14 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000a14:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000a16:	2300      	movs	r3, #0
 8000a18:	9301      	str	r3, [sp, #4]
 8000a1a:	4b0d      	ldr	r3, [pc, #52]	; (8000a50 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000a1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000a1e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000a22:	631a      	str	r2, [r3, #48]	; 0x30
 8000a24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000a26:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000a2a:	9201      	str	r2, [sp, #4]
 8000a2c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000a2e:	691a      	ldr	r2, [r3, #16]
 8000a30:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000a34:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000a36:	691a      	ldr	r2, [r3, #16]
 8000a38:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000a3c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000a3e:	4b05      	ldr	r3, [pc, #20]	; (8000a54 <_ZN8STM32DMA10initializeEv+0x40>)
 8000a40:	4a05      	ldr	r2, [pc, #20]	; (8000a58 <_ZN8STM32DMA10initializeEv+0x44>)
 8000a42:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a44:	4b05      	ldr	r3, [pc, #20]	; (8000a5c <_ZN8STM32DMA10initializeEv+0x48>)
 8000a46:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a4a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000a4c:	b002      	add	sp, #8
 8000a4e:	4770      	bx	lr
 8000a50:	40023800 	.word	0x40023800
 8000a54:	20003e60 	.word	0x20003e60
 8000a58:	08000aa1 	.word	0x08000aa1
 8000a5c:	e000e100 	.word	0xe000e100

08000a60 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a60:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a64:	4770      	bx	lr
	...

08000a68 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a68:	4b05      	ldr	r3, [pc, #20]	; (8000a80 <_ZN8STM32DMAD1Ev+0x18>)
 8000a6a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a6c:	4b05      	ldr	r3, [pc, #20]	; (8000a84 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a6e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a72:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a7a:	f3bf 8f6f 	isb	sy
}
 8000a7e:	4770      	bx	lr
 8000a80:	08021d08 	.word	0x08021d08
 8000a84:	e000e100 	.word	0xe000e100

08000a88 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a88:	b510      	push	{r4, lr}
 8000a8a:	4604      	mov	r4, r0
}
 8000a8c:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a90:	f7ff ffea 	bl	8000a68 <_ZN8STM32DMAD1Ev>
 8000a94:	4620      	mov	r0, r4
 8000a96:	f01f fcc7 	bl	8020428 <_ZdlPvj>
 8000a9a:	4620      	mov	r0, r4
 8000a9c:	bd10      	pop	{r4, pc}
	...

08000aa0 <DMA2D_XferCpltCallback>:
        return instance;
 8000aa0:	4b02      	ldr	r3, [pc, #8]	; (8000aac <DMA2D_XferCpltCallback+0xc>)
 8000aa2:	681b      	ldr	r3, [r3, #0]
 8000aa4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000aa6:	6803      	ldr	r3, [r0, #0]
 8000aa8:	695b      	ldr	r3, [r3, #20]
 8000aaa:	4718      	bx	r3
 8000aac:	20014fc4 	.word	0x20014fc4

08000ab0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000ab4:	4625      	mov	r5, r4
 8000ab6:	4b0a      	ldr	r3, [pc, #40]	; (8000ae0 <_ZN8STM32DMAC1Ev+0x30>)
 8000ab8:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000aba:	2600      	movs	r6, #0
 8000abc:	6060      	str	r0, [r4, #4]
 8000abe:	7226      	strb	r6, [r4, #8]
 8000ac0:	7266      	strb	r6, [r4, #9]
 8000ac2:	f845 3b20 	str.w	r3, [r5], #32
 8000ac6:	2260      	movs	r2, #96	; 0x60
 8000ac8:	4629      	mov	r1, r5
 8000aca:	f00c f97b 	bl	800cdc4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000ace:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000ad2:	60ee      	str	r6, [r5, #12]
 8000ad4:	3524      	adds	r5, #36	; 0x24
 8000ad6:	42ab      	cmp	r3, r5
 8000ad8:	d1fb      	bne.n	8000ad2 <_ZN8STM32DMAC1Ev+0x22>
}
 8000ada:	4620      	mov	r0, r4
 8000adc:	bd70      	pop	{r4, r5, r6, pc}
 8000ade:	bf00      	nop
 8000ae0:	08021d08 	.word	0x08021d08

08000ae4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ae4:	b508      	push	{r3, lr}
    switch (format)
 8000ae6:	290b      	cmp	r1, #11
 8000ae8:	d80b      	bhi.n	8000b02 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000aea:	e8df f001 	tbb	[pc, r1]
 8000aee:	0612      	.short	0x0612
 8000af0:	0a0a0a10 	.word	0x0a0a0a10
 8000af4:	0808080a 	.word	0x0808080a
 8000af8:	0808      	.short	0x0808
 8000afa:	2001      	movs	r0, #1
}
 8000afc:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000afe:	2005      	movs	r0, #5
        break;
 8000b00:	e7fc      	b.n	8000afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000b02:	4b05      	ldr	r3, [pc, #20]	; (8000b18 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000b04:	4a05      	ldr	r2, [pc, #20]	; (8000b1c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000b06:	4806      	ldr	r0, [pc, #24]	; (8000b20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000b08:	2165      	movs	r1, #101	; 0x65
 8000b0a:	f01f fd3d 	bl	8020588 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000b0e:	2000      	movs	r0, #0
 8000b10:	e7f4      	b.n	8000afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000b12:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000b14:	e7f2      	b.n	8000afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000b16:	bf00      	nop
 8000b18:	08021bb8 	.word	0x08021bb8
 8000b1c:	08021bd3 	.word	0x08021bd3
 8000b20:	08021c1d 	.word	0x08021c1d

08000b24 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b24:	b508      	push	{r3, lr}
    switch (format)
 8000b26:	290a      	cmp	r1, #10
 8000b28:	d809      	bhi.n	8000b3e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000b2a:	e8df f001 	tbb	[pc, r1]
 8000b2e:	0610      	.short	0x0610
 8000b30:	0808080e 	.word	0x0808080e
 8000b34:	06060608 	.word	0x06060608
 8000b38:	06          	.byte	0x06
 8000b39:	00          	.byte	0x00
 8000b3a:	2001      	movs	r0, #1
}
 8000b3c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000b3e:	4b05      	ldr	r3, [pc, #20]	; (8000b54 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000b40:	4a05      	ldr	r2, [pc, #20]	; (8000b58 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000b42:	4806      	ldr	r0, [pc, #24]	; (8000b5c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000b44:	2186      	movs	r1, #134	; 0x86
 8000b46:	f01f fd1f 	bl	8020588 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000b4a:	2000      	movs	r0, #0
 8000b4c:	e7f6      	b.n	8000b3c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000b4e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000b50:	e7f4      	b.n	8000b3c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000b52:	bf00      	nop
 8000b54:	08021bb8 	.word	0x08021bb8
 8000b58:	08021c5d 	.word	0x08021c5d
 8000b5c:	08021c1d 	.word	0x08021c1d

08000b60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b64:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b66:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b68:	4639      	mov	r1, r7
{
 8000b6a:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b6c:	f7ff ffba 	bl	8000ae4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b70:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b74:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b76:	4641      	mov	r1, r8
 8000b78:	4648      	mov	r0, r9
 8000b7a:	f7ff ffb3 	bl	8000ae4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b7e:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b80:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b82:	4648      	mov	r0, r9
 8000b84:	f7ff ffce 	bl	8000b24 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b88:	8aa1      	ldrh	r1, [r4, #20]
 8000b8a:	8b62      	ldrh	r2, [r4, #26]
 8000b8c:	4b42      	ldr	r3, [pc, #264]	; (8000c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b8e:	1a52      	subs	r2, r2, r1
 8000b90:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b92:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b94:	8b22      	ldrh	r2, [r4, #24]
 8000b96:	1a52      	subs	r2, r2, r1
 8000b98:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b9a:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b9c:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b9e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ba2:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba4:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000ba6:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000baa:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000bac:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000bb2:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb4:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000bb8:	d026      	beq.n	8000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000bba:	d810      	bhi.n	8000bde <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000bbc:	2920      	cmp	r1, #32
 8000bbe:	ea45 0402 	orr.w	r4, r5, r2
 8000bc2:	d061      	beq.n	8000c88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000bc4:	2940      	cmp	r1, #64	; 0x40
 8000bc6:	d05f      	beq.n	8000c88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000bc8:	2904      	cmp	r1, #4
 8000bca:	d05d      	beq.n	8000c88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bcc:	4b32      	ldr	r3, [pc, #200]	; (8000c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bce:	432a      	orrs	r2, r5
 8000bd0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000bd4:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bd6:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000bd8:	d05a      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000bda:	4a30      	ldr	r2, [pc, #192]	; (8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000bdc:	e040      	b.n	8000c60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000bde:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000be2:	d007      	beq.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000be4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000be8:	d1f0      	bne.n	8000bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bea:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000bee:	f042 0209 	orr.w	r2, r2, #9
 8000bf2:	e003      	b.n	8000bfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bf4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000bf8:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bfc:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000bfe:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c00:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c02:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c04:	6158      	str	r0, [r3, #20]
 8000c06:	e02a      	b.n	8000c5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000c08:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c0a:	432a      	orrs	r2, r5
 8000c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000c10:	1d21      	adds	r1, r4, #4
 8000c12:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c14:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000c16:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c18:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c1a:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000c1c:	b142      	cbz	r2, 8000c30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000c1e:	2a01      	cmp	r2, #1
 8000c20:	d021      	beq.n	8000c66 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000c22:	4b1f      	ldr	r3, [pc, #124]	; (8000ca0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c24:	4a1f      	ldr	r2, [pc, #124]	; (8000ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c26:	4820      	ldr	r0, [pc, #128]	; (8000ca8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000c28:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000c2c:	f01f fcac 	bl	8020588 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c30:	69da      	ldr	r2, [r3, #28]
 8000c32:	8861      	ldrh	r1, [r4, #2]
 8000c34:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000c38:	3901      	subs	r1, #1
 8000c3a:	f022 0210 	bic.w	r2, r2, #16
 8000c3e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000c42:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000c44:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000c46:	4b14      	ldr	r3, [pc, #80]	; (8000c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000c48:	69da      	ldr	r2, [r3, #28]
 8000c4a:	f042 0220 	orr.w	r2, r2, #32
 8000c4e:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000c50:	69da      	ldr	r2, [r3, #28]
 8000c52:	0692      	lsls	r2, r2, #26
 8000c54:	d4fc      	bmi.n	8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000c56:	2210      	movs	r2, #16
 8000c58:	609a      	str	r2, [r3, #8]
            if (blend)
 8000c5a:	2800      	cmp	r0, #0
 8000c5c:	d0bd      	beq.n	8000bda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c5e:	4a13      	ldr	r2, [pc, #76]	; (8000cac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c60:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c66:	8862      	ldrh	r2, [r4, #2]
 8000c68:	69d9      	ldr	r1, [r3, #28]
 8000c6a:	1e54      	subs	r4, r2, #1
 8000c6c:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c70:	f022 0210 	bic.w	r2, r2, #16
 8000c74:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if (blitOp.alpha == 255)
 8000c78:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c7c:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000c80:	bf18      	it	ne
 8000c82:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c84:	61da      	str	r2, [r3, #28]
                break;
 8000c86:	e7de      	b.n	8000c46 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c88:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c8c:	61dc      	str	r4, [r3, #28]
 8000c8e:	e7b8      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c90:	f240 2201 	movw	r2, #513	; 0x201
 8000c94:	e7e4      	b.n	8000c60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c96:	bf00      	nop
 8000c98:	4002b000 	.word	0x4002b000
 8000c9c:	00010201 	.word	0x00010201
 8000ca0:	08021ca8 	.word	0x08021ca8
 8000ca4:	08021cc2 	.word	0x08021cc2
 8000ca8:	08021c1d 	.word	0x08021c1d
 8000cac:	00020201 	.word	0x00020201

08000cb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000cb0:	b570      	push	{r4, r5, r6, lr}
 8000cb2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cb4:	7f89      	ldrb	r1, [r1, #30]
 8000cb6:	f7ff ff35 	bl	8000b24 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cba:	8aa6      	ldrh	r6, [r4, #20]
 8000cbc:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cbe:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cc0:	4b15      	ldr	r3, [pc, #84]	; (8000d18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc2:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cc4:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cc6:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cca:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000ccc:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cce:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cd0:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000cd2:	6826      	ldr	r6, [r4, #0]
 8000cd4:	68e1      	ldr	r1, [r4, #12]
 8000cd6:	2e08      	cmp	r6, #8
 8000cd8:	d10d      	bne.n	8000cf6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cda:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cdc:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cde:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000ce0:	7f20      	ldrb	r0, [r4, #28]
 8000ce2:	4a0e      	ldr	r2, [pc, #56]	; (8000d1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000ce4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000ce8:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000cea:	4a0d      	ldr	r2, [pc, #52]	; (8000d20 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000cec:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cee:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf0:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cf2:	601a      	str	r2, [r3, #0]
    }
}
 8000cf4:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000cf6:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000cf8:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000cfa:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000cfc:	0948      	lsrs	r0, r1, #5
 8000cfe:	0a0a      	lsrs	r2, r1, #8
 8000d00:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000d04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000d08:	4302      	orrs	r2, r0
 8000d0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d0e:	430a      	orrs	r2, r1
 8000d10:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000d12:	4a04      	ldr	r2, [pc, #16]	; (8000d24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d14:	e7ed      	b.n	8000cf2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d16:	bf00      	nop
 8000d18:	4002b000 	.word	0x4002b000
 8000d1c:	00010009 	.word	0x00010009
 8000d20:	00020201 	.word	0x00020201
 8000d24:	00030201 	.word	0x00030201

08000d28 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d28:	2001      	movs	r0, #1
 8000d2a:	4770      	bx	lr

08000d2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d2c:	2040      	movs	r0, #64	; 0x40
 8000d2e:	4770      	bx	lr

08000d30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d30:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000d34:	3008      	adds	r0, #8
 8000d36:	4770      	bx	lr

08000d38 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d38:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000d3c:	3008      	adds	r0, #8
 8000d3e:	4770      	bx	lr

08000d40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d40:	2001      	movs	r0, #1
 8000d42:	4770      	bx	lr

08000d44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d44:	f242 50b8 	movw	r0, #9656	; 0x25b8
 8000d48:	4770      	bx	lr

08000d4a <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d4a:	f242 53b8 	movw	r3, #9656	; 0x25b8
 8000d4e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d52:	3008      	adds	r0, #8
 8000d54:	4770      	bx	lr

08000d56 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 53b8 	movw	r3, #9656	; 0x25b8
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d62:	2001      	movs	r0, #1
 8000d64:	4770      	bx	lr

08000d66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d66:	2010      	movs	r0, #16
 8000d68:	4770      	bx	lr

08000d6a <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d6a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d6e:	3008      	adds	r0, #8
 8000d70:	4770      	bx	lr

08000d72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d72:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d76:	3008      	adds	r0, #8
 8000d78:	4770      	bx	lr

08000d7a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoHomeScreenScreenNoTransition();
 8000d7a:	4608      	mov	r0, r1
 8000d7c:	f001 be74 	b.w	8002a68 <_ZN23FrontendApplicationBase32gotoHomeScreenScreenNoTransitionEv>

08000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d80:	b510      	push	{r4, lr}
 8000d82:	4b03      	ldr	r3, [pc, #12]	; (8000d90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d84:	6003      	str	r3, [r0, #0]
 8000d86:	4604      	mov	r4, r0
 8000d88:	f00a fe91 	bl	800baae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d8c:	4620      	mov	r0, r4
 8000d8e:	bd10      	pop	{r4, pc}
 8000d90:	08021dc0 	.word	0x08021dc0

08000d94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000d94:	b510      	push	{r4, lr}
 8000d96:	4604      	mov	r4, r0
 8000d98:	f7ff fff2 	bl	8000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000d9c:	4620      	mov	r0, r4
 8000d9e:	2148      	movs	r1, #72	; 0x48
 8000da0:	f01f fb42 	bl	8020428 <_ZdlPvj>
 8000da4:	4620      	mov	r0, r4
 8000da6:	bd10      	pop	{r4, pc}

08000da8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000da8:	b510      	push	{r4, lr}
 8000daa:	4b03      	ldr	r3, [pc, #12]	; (8000db8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000dac:	6003      	str	r3, [r0, #0]
 8000dae:	4604      	mov	r4, r0
 8000db0:	f00a fe7d 	bl	800baae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000db4:	4620      	mov	r0, r4
 8000db6:	bd10      	pop	{r4, pc}
 8000db8:	08021d8c 	.word	0x08021d8c

08000dbc <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dbc:	b510      	push	{r4, lr}
 8000dbe:	4604      	mov	r4, r0
 8000dc0:	f7ff fff2 	bl	8000da8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dc4:	4620      	mov	r0, r4
 8000dc6:	f44f 5117 	mov.w	r1, #9664	; 0x25c0
 8000dca:	f01f fb2d 	bl	8020428 <_ZdlPvj>
 8000dce:	4620      	mov	r0, r4
 8000dd0:	bd10      	pop	{r4, pc}
	...

08000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000dd4:	b510      	push	{r4, lr}
 8000dd6:	4b03      	ldr	r3, [pc, #12]	; (8000de4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000dd8:	6003      	str	r3, [r0, #0]
 8000dda:	4604      	mov	r4, r0
 8000ddc:	f00a fe67 	bl	800baae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000de0:	4620      	mov	r0, r4
 8000de2:	bd10      	pop	{r4, pc}
 8000de4:	08021d58 	.word	0x08021d58

08000de8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000de8:	b510      	push	{r4, lr}
 8000dea:	4604      	mov	r4, r0
 8000dec:	f7ff fff2 	bl	8000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000df0:	4620      	mov	r0, r4
 8000df2:	2118      	movs	r1, #24
 8000df4:	f01f fb18 	bl	8020428 <_ZdlPvj>
 8000df8:	4620      	mov	r0, r4
 8000dfa:	bd10      	pop	{r4, pc}

08000dfc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000dfc:	b510      	push	{r4, lr}
 8000dfe:	4b09      	ldr	r3, [pc, #36]	; (8000e24 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e00:	6003      	str	r3, [r0, #0]
 8000e02:	4604      	mov	r4, r0
 8000e04:	f500 5017 	add.w	r0, r0, #9664	; 0x25c0
 8000e08:	302c      	adds	r0, #44	; 0x2c
 8000e0a:	f7ff ffb9 	bl	8000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e0e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e12:	f7ff ffc9 	bl	8000da8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e16:	f104 0014 	add.w	r0, r4, #20
 8000e1a:	f7ff ffdb 	bl	8000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e1e:	4620      	mov	r0, r4
 8000e20:	bd10      	pop	{r4, pc}
 8000e22:	bf00      	nop
 8000e24:	08021df4 	.word	0x08021df4

08000e28 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e28:	b508      	push	{r3, lr}
 8000e2a:	4802      	ldr	r0, [pc, #8]	; (8000e34 <__tcf_0+0xc>)
 8000e2c:	f7ff ffe6 	bl	8000dfc <_ZN12FrontendHeapD1Ev>
 8000e30:	bd08      	pop	{r3, pc}
 8000e32:	bf00      	nop
 8000e34:	200001a4 	.word	0x200001a4

08000e38 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e38:	b510      	push	{r4, lr}
 8000e3a:	4604      	mov	r4, r0
 8000e3c:	f7ff ffde 	bl	8000dfc <_ZN12FrontendHeapD1Ev>
 8000e40:	4620      	mov	r0, r4
 8000e42:	f642 51e4 	movw	r1, #11748	; 0x2de4
 8000e46:	f01f faef 	bl	8020428 <_ZdlPvj>
 8000e4a:	4620      	mov	r0, r4
 8000e4c:	bd10      	pop	{r4, pc}
	...

08000e50 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e50:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e54:	f001 f9be 	bl	80021d4 <_ZN14BitmapDatabase11getInstanceEv>
 8000e58:	4605      	mov	r5, r0
 8000e5a:	f001 f9bf 	bl	80021dc <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e5e:	2400      	movs	r4, #0
 8000e60:	4601      	mov	r1, r0
 8000e62:	4623      	mov	r3, r4
 8000e64:	4628      	mov	r0, r5
 8000e66:	4622      	mov	r2, r4
 8000e68:	9400      	str	r4, [sp, #0]
 8000e6a:	f011 fe71 	bl	8012b50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e6e:	4b26      	ldr	r3, [pc, #152]	; (8000f08 <touchgfx_init+0xb8>)
 8000e70:	4a26      	ldr	r2, [pc, #152]	; (8000f0c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e72:	4d27      	ldr	r5, [pc, #156]	; (8000f10 <touchgfx_init+0xc0>)
 8000e74:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e76:	4620      	mov	r0, r4
 8000e78:	f004 f82c 	bl	8004ed4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e7c:	4825      	ldr	r0, [pc, #148]	; (8000f14 <touchgfx_init+0xc4>)
 8000e7e:	f011 fdcf 	bl	8012a20 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e82:	782b      	ldrb	r3, [r5, #0]
 8000e84:	f3bf 8f5b 	dmb	ish
 8000e88:	07db      	lsls	r3, r3, #31
 8000e8a:	d437      	bmi.n	8000efc <touchgfx_init+0xac>
 8000e8c:	4628      	mov	r0, r5
 8000e8e:	f01f facd 	bl	802042c <__cxa_guard_acquire>
 8000e92:	b398      	cbz	r0, 8000efc <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000e94:	4c20      	ldr	r4, [pc, #128]	; (8000f18 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000e96:	4b21      	ldr	r3, [pc, #132]	; (8000f1c <touchgfx_init+0xcc>)
 8000e98:	6023      	str	r3, [r4, #0]
 8000e9a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000e9e:	f508 5717 	add.w	r7, r8, #9664	; 0x25c0
 8000ea2:	f207 669c 	addw	r6, r7, #1692	; 0x69c
 8000ea6:	f104 0014 	add.w	r0, r4, #20
 8000eaa:	6060      	str	r0, [r4, #4]
 8000eac:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eb0:	60e7      	str	r7, [r4, #12]
 8000eb2:	6126      	str	r6, [r4, #16]
 8000eb4:	f00a fdfc 	bl	800bab0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000eb8:	4b19      	ldr	r3, [pc, #100]	; (8000f20 <touchgfx_init+0xd0>)
 8000eba:	6163      	str	r3, [r4, #20]
 8000ebc:	4640      	mov	r0, r8
 8000ebe:	f00a fdf7 	bl	800bab0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b18      	ldr	r3, [pc, #96]	; (8000f24 <touchgfx_init+0xd4>)
 8000ec4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ec6:	4638      	mov	r0, r7
 8000ec8:	f00a fdf2 	bl	800bab0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000ed0:	4a15      	ldr	r2, [pc, #84]	; (8000f28 <touchgfx_init+0xd8>)
 8000ed2:	f8c3 25ec 	str.w	r2, [r3, #1516]	; 0x5ec
 8000ed6:	f203 6034 	addw	r0, r3, #1588	; 0x634
 8000eda:	f004 ff77 	bl	8005dcc <_ZN5ModelC1Ev>
 8000ede:	4622      	mov	r2, r4
 8000ee0:	f107 0148 	add.w	r1, r7, #72	; 0x48
 8000ee4:	4630      	mov	r0, r6
 8000ee6:	f004 f8f1 	bl	80050cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000eea:	4630      	mov	r0, r6
 8000eec:	f001 fdbc 	bl	8002a68 <_ZN23FrontendApplicationBase32gotoHomeScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8000ef0:	480e      	ldr	r0, [pc, #56]	; (8000f2c <touchgfx_init+0xdc>)
 8000ef2:	f01f fb67 	bl	80205c4 <atexit>
 8000ef6:	4628      	mov	r0, r5
 8000ef8:	f01f faa4 	bl	8020444 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000efc:	480c      	ldr	r0, [pc, #48]	; (8000f30 <touchgfx_init+0xe0>)
}
 8000efe:	b002      	add	sp, #8
 8000f00:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f04:	f7ff bc60 	b.w	80007c8 <_ZN11TouchGFXHAL10initializeEv>
 8000f08:	20015020 	.word	0x20015020
 8000f0c:	20003da8 	.word	0x20003da8
 8000f10:	200001a0 	.word	0x200001a0
 8000f14:	20000008 	.word	0x20000008
 8000f18:	200001a4 	.word	0x200001a4
 8000f1c:	08021df4 	.word	0x08021df4
 8000f20:	08021d58 	.word	0x08021d58
 8000f24:	08021d8c 	.word	0x08021d8c
 8000f28:	08021dc0 	.word	0x08021dc0
 8000f2c:	08000e29 	.word	0x08000e29
 8000f30:	20003d2c 	.word	0x20003d2c

08000f34 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000f34:	4770      	bx	lr
	...

08000f38 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f38:	4801      	ldr	r0, [pc, #4]	; (8000f40 <touchgfx_taskEntry+0x8>)
 8000f3a:	f7ff bc57 	b.w	80007ec <_ZN11TouchGFXHAL9taskEntryEv>
 8000f3e:	bf00      	nop
 8000f40:	20003d2c 	.word	0x20003d2c

08000f44 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f44:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000f46:	4e22      	ldr	r6, [pc, #136]	; (8000fd0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000f48:	4c22      	ldr	r4, [pc, #136]	; (8000fd4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000f4a:	4d23      	ldr	r5, [pc, #140]	; (8000fd8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f4c:	4b23      	ldr	r3, [pc, #140]	; (8000fdc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000f4e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f50:	4630      	mov	r0, r6
 8000f52:	f7ff fdad 	bl	8000ab0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f56:	4628      	mov	r0, r5
 8000f58:	f016 f8c6 	bl	80170e8 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f5c:	4b20      	ldr	r3, [pc, #128]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f5e:	4821      	ldr	r0, [pc, #132]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          lastRenderMethod(HARDWARE)
 8000f60:	60dc      	str	r4, [r3, #12]
 8000f62:	2200      	movs	r2, #0
 8000f64:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f68:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8000f6c:	491e      	ldr	r1, [pc, #120]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f6e:	861a      	strh	r2, [r3, #48]	; 0x30
 8000f70:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
 8000f74:	491d      	ldr	r1, [pc, #116]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000f76:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000f78:	491d      	ldr	r1, [pc, #116]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f7a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000f7e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	21f0      	movs	r1, #240	; 0xf0
 8000f82:	8001      	strh	r1, [r0, #0]
 8000f84:	481b      	ldr	r0, [pc, #108]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8000f86:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f88:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	481b      	ldr	r0, [pc, #108]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8000f8c:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f90:	f44f 71a0 	mov.w	r1, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f94:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f98:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f9c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000fa4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fa8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fac:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
 8000fb4:	675a      	str	r2, [r3, #116]	; 0x74
 8000fb6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fba:	8001      	strh	r1, [r0, #0]
 8000fbc:	480f      	ldr	r0, [pc, #60]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000fbe:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000fc0:	490f      	ldr	r1, [pc, #60]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fc2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fc4:	2201      	movs	r2, #1
 8000fc6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fca:	4a0e      	ldr	r2, [pc, #56]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fcc:	601a      	str	r2, [r3, #0]
}
 8000fce:	bd70      	pop	{r4, r5, r6, pc}
 8000fd0:	20002f8c 	.word	0x20002f8c
 8000fd4:	20002f88 	.word	0x20002f88
 8000fd8:	20003dac 	.word	0x20003dac
 8000fdc:	08021860 	.word	0x08021860
 8000fe0:	20003d2c 	.word	0x20003d2c
 8000fe4:	20014fb8 	.word	0x20014fb8
 8000fe8:	01000001 	.word	0x01000001
 8000fec:	01010000 	.word	0x01010000
 8000ff0:	20014fc4 	.word	0x20014fc4
 8000ff4:	20014fbe 	.word	0x20014fbe
 8000ff8:	20014fba 	.word	0x20014fba
 8000ffc:	20014fc0 	.word	0x20014fc0
 8001000:	20014fbc 	.word	0x20014fbc
 8001004:	080219ec 	.word	0x080219ec

08001008 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001008:	4801      	ldr	r0, [pc, #4]	; (8001010 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800100a:	f7ff bd2d 	b.w	8000a68 <_ZN8STM32DMAD1Ev>
 800100e:	bf00      	nop
 8001010:	20002f8c 	.word	0x20002f8c

08001014 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001014:	2000      	movs	r0, #0
 8001016:	4770      	bx	lr

08001018 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001018:	8081      	strh	r1, [r0, #4]
    }
 800101a:	4770      	bx	lr

0800101c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800101c:	80c1      	strh	r1, [r0, #6]
    }
 800101e:	4770      	bx	lr

08001020 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001020:	8101      	strh	r1, [r0, #8]
    }
 8001022:	4770      	bx	lr

08001024 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001024:	8141      	strh	r1, [r0, #10]
    }
 8001026:	4770      	bx	lr

08001028 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001028:	4770      	bx	lr

0800102a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800102a:	4770      	bx	lr

0800102c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800102c:	4770      	bx	lr

0800102e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800102e:	4770      	bx	lr

08001030 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001030:	4770      	bx	lr

08001032 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001032:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001034:	88c4      	ldrh	r4, [r0, #6]
 8001036:	6803      	ldr	r3, [r0, #0]
 8001038:	1b12      	subs	r2, r2, r4
 800103a:	8884      	ldrh	r4, [r0, #4]
 800103c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800103e:	1b09      	subs	r1, r1, r4
 8001040:	b212      	sxth	r2, r2
    }
 8001042:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001046:	b209      	sxth	r1, r1
 8001048:	4718      	bx	r3

0800104a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800104a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800104e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001050:	f04f 33ff 	mov.w	r3, #4294967295
 8001054:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001056:	6813      	ldr	r3, [r2, #0]
 8001058:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800105a:	6010      	str	r0, [r2, #0]
    }
 800105c:	4770      	bx	lr

0800105e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800105e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001062:	b11a      	cbz	r2, 800106c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001064:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001068:	b102      	cbz	r2, 800106c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800106a:	6018      	str	r0, [r3, #0]
        }
    }
 800106c:	4770      	bx	lr
	...

08001070 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001070:	4b03      	ldr	r3, [pc, #12]	; (8001080 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001072:	2290      	movs	r2, #144	; 0x90
 8001074:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001078:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800107c:	4770      	bx	lr
 800107e:	bf00      	nop
 8001080:	e000e100 	.word	0xe000e100

08001084 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001084:	4a09      	ldr	r2, [pc, #36]	; (80010ac <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001086:	490a      	ldr	r1, [pc, #40]	; (80010b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001088:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800108a:	480a      	ldr	r0, [pc, #40]	; (80010b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800108c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001090:	3b01      	subs	r3, #1
 8001092:	b29b      	uxth	r3, r3
 8001094:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001096:	6911      	ldr	r1, [r2, #16]
 8001098:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800109c:	3901      	subs	r1, #1
 800109e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80010a0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80010a2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80010a4:	f043 0301 	orr.w	r3, r3, #1
 80010a8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80010aa:	4770      	bx	lr
 80010ac:	40016800 	.word	0x40016800
 80010b0:	20003e32 	.word	0x20003e32
 80010b4:	20003e30 	.word	0x20003e30

080010b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80010b8:	4b01      	ldr	r3, [pc, #4]	; (80010c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80010ba:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80010be:	4770      	bx	lr
 80010c0:	40016800 	.word	0x40016800

080010c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010c4:	4b02      	ldr	r3, [pc, #8]	; (80010d0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010c6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010c8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010cc:	625a      	str	r2, [r3, #36]	; 0x24
}
 80010ce:	4770      	bx	lr
 80010d0:	40016800 	.word	0x40016800

080010d4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80010d4:	b570      	push	{r4, r5, r6, lr}
 80010d6:	4604      	mov	r4, r0
    HAL::initialize();
 80010d8:	f00a fff7 	bl	800c0ca <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80010dc:	6823      	ldr	r3, [r4, #0]
 80010de:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80010e0:	f00e fc9a 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
 80010e4:	4601      	mov	r1, r0
 80010e6:	4620      	mov	r0, r4
 80010e8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ea:	6823      	ldr	r3, [r4, #0]
 80010ec:	4a05      	ldr	r2, [pc, #20]	; (8001104 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80010ee:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010f2:	4620      	mov	r0, r4
 80010f4:	46ac      	mov	ip, r5
 80010f6:	2300      	movs	r3, #0
}
 80010f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010fc:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001100:	4760      	bx	ip
 8001102:	bf00      	nop
 8001104:	d004b000 	.word	0xd004b000

08001108 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001108:	f00a bfc6 	b.w	800c098 <_ZN8touchgfx3HAL10beginFrameEv>

0800110c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800110c:	f00a bfd0 	b.w	800c0b0 <_ZN8touchgfx3HAL8endFrameEv>

08001110 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001110:	f00a bf8c 	b.w	800c02c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001114 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001114:	f00b b8ed 	b.w	800c2f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001118:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800111c:	b112      	cbz	r2, 8001124 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800111e:	6803      	ldr	r3, [r0, #0]
 8001120:	695b      	ldr	r3, [r3, #20]
 8001122:	4718      	bx	r3
    }
 8001124:	4770      	bx	lr
	...

08001128 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001128:	4b03      	ldr	r3, [pc, #12]	; (8001138 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800112a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800112e:	609a      	str	r2, [r3, #8]
 8001130:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001134:	609a      	str	r2, [r3, #8]
}
 8001136:	4770      	bx	lr
 8001138:	e000e100 	.word	0xe000e100

0800113c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800113c:	4b08      	ldr	r3, [pc, #32]	; (8001160 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800113e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001142:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001146:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800114a:	f3bf 8f6f 	isb	sy
 800114e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001152:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001156:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800115a:	f3bf 8f6f 	isb	sy
}
 800115e:	4770      	bx	lr
 8001160:	e000e100 	.word	0xe000e100

08001164 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001164:	b510      	push	{r4, lr}
        return instance;
 8001166:	4c14      	ldr	r4, [pc, #80]	; (80011b8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001168:	6823      	ldr	r3, [r4, #0]
 800116a:	b323      	cbz	r3, 80011b6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800116c:	4b13      	ldr	r3, [pc, #76]	; (80011bc <HAL_LTDC_LineEventCallback+0x58>)
 800116e:	4a14      	ldr	r2, [pc, #80]	; (80011c0 <HAL_LTDC_LineEventCallback+0x5c>)
 8001170:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001172:	8811      	ldrh	r1, [r2, #0]
 8001174:	428b      	cmp	r3, r1
 8001176:	d113      	bne.n	80011a0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001178:	4b12      	ldr	r3, [pc, #72]	; (80011c4 <HAL_LTDC_LineEventCallback+0x60>)
 800117a:	8819      	ldrh	r1, [r3, #0]
 800117c:	f006 fef6 	bl	8007f6c <HAL_LTDC_ProgramLineEvent>
 8001180:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001182:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001186:	3301      	adds	r3, #1
 8001188:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800118c:	f7ff fc1a 	bl	80009c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001190:	6820      	ldr	r0, [r4, #0]
 8001192:	f00b fcd9 	bl	800cb48 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001196:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800119a:	2000      	movs	r0, #0
 800119c:	f7ff baed 	b.w	800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80011a0:	f006 fee4 	bl	8007f6c <HAL_LTDC_ProgramLineEvent>
        return instance;
 80011a4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80011a6:	6803      	ldr	r3, [r0, #0]
 80011a8:	6a1b      	ldr	r3, [r3, #32]
 80011aa:	4798      	blx	r3
    }
 80011ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80011b0:	2000      	movs	r0, #0
 80011b2:	f7ff bae3 	b.w	800077c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80011b6:	bd10      	pop	{r4, pc}
 80011b8:	20014fc4 	.word	0x20014fc4
 80011bc:	40016800 	.word	0x40016800
 80011c0:	20003e32 	.word	0x20003e32
 80011c4:	20003e30 	.word	0x20003e30

080011c8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80011c8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011ca:	4b06      	ldr	r3, [pc, #24]	; (80011e4 <SPI5_Write+0x1c>)
{
 80011cc:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	4805      	ldr	r0, [pc, #20]	; (80011e8 <SPI5_Write+0x20>)
 80011d4:	2201      	movs	r2, #1
 80011d6:	f10d 0106 	add.w	r1, sp, #6
 80011da:	f007 fc23 	bl	8008a24 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80011de:	b003      	add	sp, #12
 80011e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80011e4:	20000010 	.word	0x20000010
 80011e8:	20003fd0 	.word	0x20003fd0

080011ec <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80011ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Infinite loop */
	for (;;)
	{
		uint8_t command;

		if (HAL_GPIO_ReadPin(LEFT_BUTTON_GPIO_Port, LEFT_BUTTON_Pin) == GPIO_PIN_SET) {
 80011ee:	4c50      	ldr	r4, [pc, #320]	; (8001330 <StartDefaultTask+0x144>)
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
			if (count < 2) {
				osMessageQueuePut(Queue1Handle, &command, 0, 200);
			}
		}
		if (HAL_GPIO_ReadPin(START_BUTTON_GPIO_Port, START_BUTTON_Pin) == GPIO_PIN_RESET) {
 80011f0:	4e50      	ldr	r6, [pc, #320]	; (8001334 <StartDefaultTask+0x148>)
		if (HAL_GPIO_ReadPin(LEFT_BUTTON_GPIO_Port, LEFT_BUTTON_Pin) == GPIO_PIN_SET) {
 80011f2:	2104      	movs	r1, #4
 80011f4:	4620      	mov	r0, r4
 80011f6:	f006 f8d5 	bl	80073a4 <HAL_GPIO_ReadPin>
 80011fa:	2801      	cmp	r0, #1
 80011fc:	d10f      	bne.n	800121e <StartDefaultTask+0x32>
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80011fe:	4d4e      	ldr	r5, [pc, #312]	; (8001338 <StartDefaultTask+0x14c>)
			command = 'L';
 8001200:	234c      	movs	r3, #76	; 0x4c
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8001202:	6828      	ldr	r0, [r5, #0]
			command = 'L';
 8001204:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8001208:	f008 fcdf 	bl	8009bca <osMessageQueueGetCount>
			if (count < 2) {
 800120c:	2801      	cmp	r0, #1
 800120e:	d806      	bhi.n	800121e <StartDefaultTask+0x32>
				osMessageQueuePut(Queue1Handle, &command, 0, 200);
 8001210:	6828      	ldr	r0, [r5, #0]
 8001212:	23c8      	movs	r3, #200	; 0xc8
 8001214:	2200      	movs	r2, #0
 8001216:	f10d 0107 	add.w	r1, sp, #7
 800121a:	f008 fc77 	bl	8009b0c <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(RIGHT_BUTTON_GPIO_Port, RIGHT_BUTTON_Pin) == GPIO_PIN_SET) {
 800121e:	2108      	movs	r1, #8
 8001220:	4620      	mov	r0, r4
 8001222:	f006 f8bf 	bl	80073a4 <HAL_GPIO_ReadPin>
 8001226:	2801      	cmp	r0, #1
 8001228:	d10f      	bne.n	800124a <StartDefaultTask+0x5e>
			uint32_t count = osMessageQueueGetCount(Queue2Handle);
 800122a:	4d44      	ldr	r5, [pc, #272]	; (800133c <StartDefaultTask+0x150>)
			command = 'R';
 800122c:	2352      	movs	r3, #82	; 0x52
			uint32_t count = osMessageQueueGetCount(Queue2Handle);
 800122e:	6828      	ldr	r0, [r5, #0]
			command = 'R';
 8001230:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue2Handle);
 8001234:	f008 fcc9 	bl	8009bca <osMessageQueueGetCount>
			if (count < 2) {
 8001238:	2801      	cmp	r0, #1
 800123a:	d806      	bhi.n	800124a <StartDefaultTask+0x5e>
				osMessageQueuePut(Queue2Handle, &command, 0, 200);
 800123c:	6828      	ldr	r0, [r5, #0]
 800123e:	23c8      	movs	r3, #200	; 0xc8
 8001240:	2200      	movs	r2, #0
 8001242:	f10d 0107 	add.w	r1, sp, #7
 8001246:	f008 fc61 	bl	8009b0c <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(UP_BUTTON_GPIO_Port, UP_BUTTON_Pin) == GPIO_PIN_SET) {
 800124a:	2110      	movs	r1, #16
 800124c:	4620      	mov	r0, r4
 800124e:	f006 f8a9 	bl	80073a4 <HAL_GPIO_ReadPin>
 8001252:	2801      	cmp	r0, #1
 8001254:	d10f      	bne.n	8001276 <StartDefaultTask+0x8a>
			uint32_t count = osMessageQueueGetCount(Queue3Handle);
 8001256:	4d3a      	ldr	r5, [pc, #232]	; (8001340 <StartDefaultTask+0x154>)
			command = 'U';
 8001258:	2355      	movs	r3, #85	; 0x55
			uint32_t count = osMessageQueueGetCount(Queue3Handle);
 800125a:	6828      	ldr	r0, [r5, #0]
			command = 'U';
 800125c:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue3Handle);
 8001260:	f008 fcb3 	bl	8009bca <osMessageQueueGetCount>
			if (count < 2) {
 8001264:	2801      	cmp	r0, #1
 8001266:	d806      	bhi.n	8001276 <StartDefaultTask+0x8a>
				osMessageQueuePut(Queue3Handle, &command, 0, 200);
 8001268:	6828      	ldr	r0, [r5, #0]
 800126a:	23c8      	movs	r3, #200	; 0xc8
 800126c:	2200      	movs	r2, #0
 800126e:	f10d 0107 	add.w	r1, sp, #7
 8001272:	f008 fc4b 	bl	8009b0c <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(DOWN_BUTTON_GPIO_Port, DOWN_BUTTON_Pin) == GPIO_PIN_SET) {
 8001276:	2120      	movs	r1, #32
 8001278:	4620      	mov	r0, r4
 800127a:	f006 f893 	bl	80073a4 <HAL_GPIO_ReadPin>
 800127e:	2801      	cmp	r0, #1
 8001280:	d10f      	bne.n	80012a2 <StartDefaultTask+0xb6>
			uint32_t count = osMessageQueueGetCount(Queue4Handle);
 8001282:	4d30      	ldr	r5, [pc, #192]	; (8001344 <StartDefaultTask+0x158>)
			command = 'D';
 8001284:	2344      	movs	r3, #68	; 0x44
			uint32_t count = osMessageQueueGetCount(Queue4Handle);
 8001286:	6828      	ldr	r0, [r5, #0]
			command = 'D';
 8001288:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue4Handle);
 800128c:	f008 fc9d 	bl	8009bca <osMessageQueueGetCount>
			if (count < 2) {
 8001290:	2801      	cmp	r0, #1
 8001292:	d806      	bhi.n	80012a2 <StartDefaultTask+0xb6>
				osMessageQueuePut(Queue4Handle, &command, 0, 200);
 8001294:	6828      	ldr	r0, [r5, #0]
 8001296:	23c8      	movs	r3, #200	; 0xc8
 8001298:	2200      	movs	r2, #0
 800129a:	f10d 0107 	add.w	r1, sp, #7
 800129e:	f008 fc35 	bl	8009b0c <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(GPIOA, USER_BUTTON_Pin) == GPIO_PIN_SET) {
 80012a2:	4829      	ldr	r0, [pc, #164]	; (8001348 <StartDefaultTask+0x15c>)
 80012a4:	2101      	movs	r1, #1
 80012a6:	f006 f87d 	bl	80073a4 <HAL_GPIO_ReadPin>
 80012aa:	2801      	cmp	r0, #1
 80012ac:	d10f      	bne.n	80012ce <StartDefaultTask+0xe2>
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80012ae:	4d22      	ldr	r5, [pc, #136]	; (8001338 <StartDefaultTask+0x14c>)
			command = 'S';
 80012b0:	2353      	movs	r3, #83	; 0x53
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80012b2:	6828      	ldr	r0, [r5, #0]
			command = 'S';
 80012b4:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80012b8:	f008 fc87 	bl	8009bca <osMessageQueueGetCount>
			if (count < 2) {
 80012bc:	2801      	cmp	r0, #1
 80012be:	d806      	bhi.n	80012ce <StartDefaultTask+0xe2>
				osMessageQueuePut(Queue1Handle, &command, 0, 200);
 80012c0:	6828      	ldr	r0, [r5, #0]
 80012c2:	23c8      	movs	r3, #200	; 0xc8
 80012c4:	2200      	movs	r2, #0
 80012c6:	f10d 0107 	add.w	r1, sp, #7
 80012ca:	f008 fc1f 	bl	8009b0c <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(START_BUTTON_GPIO_Port, START_BUTTON_Pin) == GPIO_PIN_RESET) {
 80012ce:	2104      	movs	r1, #4
 80012d0:	4630      	mov	r0, r6
 80012d2:	f006 f867 	bl	80073a4 <HAL_GPIO_ReadPin>
 80012d6:	4605      	mov	r5, r0
 80012d8:	b978      	cbnz	r0, 80012fa <StartDefaultTask+0x10e>
			command = 'A';
			uint32_t count = osMessageQueueGetCount(Queue5Handle);
 80012da:	4f1c      	ldr	r7, [pc, #112]	; (800134c <StartDefaultTask+0x160>)
			command = 'A';
 80012dc:	2341      	movs	r3, #65	; 0x41
			uint32_t count = osMessageQueueGetCount(Queue5Handle);
 80012de:	6838      	ldr	r0, [r7, #0]
			command = 'A';
 80012e0:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue5Handle);
 80012e4:	f008 fc71 	bl	8009bca <osMessageQueueGetCount>
			if (count < 2) {
 80012e8:	2801      	cmp	r0, #1
 80012ea:	d806      	bhi.n	80012fa <StartDefaultTask+0x10e>
				osMessageQueuePut(Queue5Handle, &command, 0, 200);
 80012ec:	6838      	ldr	r0, [r7, #0]
 80012ee:	23c8      	movs	r3, #200	; 0xc8
 80012f0:	462a      	mov	r2, r5
 80012f2:	f10d 0107 	add.w	r1, sp, #7
 80012f6:	f008 fc09 	bl	8009b0c <osMessageQueuePut>
			}
		}
		if (HAL_GPIO_ReadPin(RESET_BUTTON_GPIO_Port, RESET_BUTTON_Pin) == GPIO_PIN_RESET){
 80012fa:	2108      	movs	r1, #8
 80012fc:	4630      	mov	r0, r6
 80012fe:	f006 f851 	bl	80073a4 <HAL_GPIO_ReadPin>
 8001302:	4605      	mov	r5, r0
 8001304:	b978      	cbnz	r0, 8001326 <StartDefaultTask+0x13a>
			command = 'B';
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 8001306:	4f12      	ldr	r7, [pc, #72]	; (8001350 <StartDefaultTask+0x164>)
			command = 'B';
 8001308:	2342      	movs	r3, #66	; 0x42
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 800130a:	6838      	ldr	r0, [r7, #0]
			command = 'B';
 800130c:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 8001310:	f008 fc5b 	bl	8009bca <osMessageQueueGetCount>
			if (count < 2) {
 8001314:	2801      	cmp	r0, #1
 8001316:	d806      	bhi.n	8001326 <StartDefaultTask+0x13a>
				osMessageQueuePut(Queue6Handle, &command, 0, 200);
 8001318:	6838      	ldr	r0, [r7, #0]
 800131a:	23c8      	movs	r3, #200	; 0xc8
 800131c:	462a      	mov	r2, r5
 800131e:	f10d 0107 	add.w	r1, sp, #7
 8001322:	f008 fbf3 	bl	8009b0c <osMessageQueuePut>
			}
		}
    osDelay(100);
 8001326:	2064      	movs	r0, #100	; 0x64
 8001328:	f008 fb03 	bl	8009932 <osDelay>
	{
 800132c:	e761      	b.n	80011f2 <StartDefaultTask+0x6>
 800132e:	bf00      	nop
 8001330:	40021000 	.word	0x40021000
 8001334:	40021800 	.word	0x40021800
 8001338:	20003e3c 	.word	0x20003e3c
 800133c:	20003e40 	.word	0x20003e40
 8001340:	20003e44 	.word	0x20003e44
 8001344:	20003e48 	.word	0x20003e48
 8001348:	40020000 	.word	0x40020000
 800134c:	20003e4c 	.word	0x20003e4c
 8001350:	20003e50 	.word	0x20003e50

08001354 <SystemClock_Config>:
{
 8001354:	b530      	push	{r4, r5, lr}
 8001356:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001358:	2210      	movs	r2, #16
 800135a:	2100      	movs	r1, #0
 800135c:	a80a      	add	r0, sp, #40	; 0x28
 800135e:	f01f f9af 	bl	80206c0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001362:	2214      	movs	r2, #20
 8001364:	2100      	movs	r1, #0
 8001366:	a803      	add	r0, sp, #12
 8001368:	f01f f9aa 	bl	80206c0 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800136c:	2400      	movs	r4, #0
 800136e:	4b1d      	ldr	r3, [pc, #116]	; (80013e4 <SystemClock_Config+0x90>)
 8001370:	9401      	str	r4, [sp, #4]
 8001372:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001374:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001378:	641a      	str	r2, [r3, #64]	; 0x40
 800137a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800137c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001380:	9301      	str	r3, [sp, #4]
 8001382:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001384:	4b18      	ldr	r3, [pc, #96]	; (80013e8 <SystemClock_Config+0x94>)
 8001386:	9402      	str	r4, [sp, #8]
 8001388:	681a      	ldr	r2, [r3, #0]
 800138a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800138e:	601a      	str	r2, [r3, #0]
 8001390:	681b      	ldr	r3, [r3, #0]
 8001392:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001396:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001398:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800139a:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800139c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013a0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013a4:	2502      	movs	r5, #2
 80013a6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80013aa:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013ae:	2108      	movs	r1, #8
 80013b0:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80013b4:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013b8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80013ba:	2304      	movs	r3, #4
 80013bc:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013be:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013c0:	f006 fdf2 	bl	8007fa8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80013c4:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80013c6:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80013ca:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 80013ce:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013d2:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80013d6:	2105      	movs	r1, #5
 80013d8:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80013da:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80013dc:	f006 ffc2 	bl	8008364 <HAL_RCC_ClockConfig>
}
 80013e0:	b015      	add	sp, #84	; 0x54
 80013e2:	bd30      	pop	{r4, r5, pc}
 80013e4:	40023800 	.word	0x40023800
 80013e8:	40007000 	.word	0x40007000

080013ec <main>:
{
 80013ec:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80013f0:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80013f2:	f005 fcfd 	bl	8006df0 <HAL_Init>
  SystemClock_Config();
 80013f6:	f7ff ffad 	bl	8001354 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013fa:	2214      	movs	r2, #20
 80013fc:	2100      	movs	r1, #0
 80013fe:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001400:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001402:	f01f f95d 	bl	80206c0 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001406:	4bc5      	ldr	r3, [pc, #788]	; (800171c <main+0x330>)
 8001408:	9400      	str	r4, [sp, #0]
 800140a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800140c:	48c4      	ldr	r0, [pc, #784]	; (8001720 <main+0x334>)
  hi2c3.Instance = I2C3;
 800140e:	4ec5      	ldr	r6, [pc, #788]	; (8001724 <main+0x338>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001410:	f042 0210 	orr.w	r2, r2, #16
 8001414:	631a      	str	r2, [r3, #48]	; 0x30
 8001416:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001418:	f002 0210 	and.w	r2, r2, #16
 800141c:	9200      	str	r2, [sp, #0]
 800141e:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001420:	9401      	str	r4, [sp, #4]
 8001422:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001424:	f042 0220 	orr.w	r2, r2, #32
 8001428:	631a      	str	r2, [r3, #48]	; 0x30
 800142a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800142c:	f002 0220 	and.w	r2, r2, #32
 8001430:	9201      	str	r2, [sp, #4]
 8001432:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001434:	9402      	str	r4, [sp, #8]
 8001436:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001438:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800143c:	631a      	str	r2, [r3, #48]	; 0x30
 800143e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001440:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001444:	9202      	str	r2, [sp, #8]
 8001446:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001448:	9403      	str	r4, [sp, #12]
 800144a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800144c:	f042 0204 	orr.w	r2, r2, #4
 8001450:	631a      	str	r2, [r3, #48]	; 0x30
 8001452:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001454:	f002 0204 	and.w	r2, r2, #4
 8001458:	9203      	str	r2, [sp, #12]
 800145a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800145c:	9404      	str	r4, [sp, #16]
 800145e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001460:	f042 0201 	orr.w	r2, r2, #1
 8001464:	631a      	str	r2, [r3, #48]	; 0x30
 8001466:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001468:	f002 0201 	and.w	r2, r2, #1
 800146c:	9204      	str	r2, [sp, #16]
 800146e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001470:	9405      	str	r4, [sp, #20]
 8001472:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001474:	f042 0202 	orr.w	r2, r2, #2
 8001478:	631a      	str	r2, [r3, #48]	; 0x30
 800147a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800147c:	f002 0202 	and.w	r2, r2, #2
 8001480:	9205      	str	r2, [sp, #20]
 8001482:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001484:	9406      	str	r4, [sp, #24]
 8001486:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001488:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800148c:	631a      	str	r2, [r3, #48]	; 0x30
 800148e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001490:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001494:	9206      	str	r2, [sp, #24]
 8001496:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001498:	9407      	str	r4, [sp, #28]
 800149a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800149c:	f042 0208 	orr.w	r2, r2, #8
 80014a0:	631a      	str	r2, [r3, #48]	; 0x30
 80014a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014a4:	f003 0308 	and.w	r3, r3, #8
 80014a8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014aa:	4622      	mov	r2, r4
 80014ac:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014ae:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014b0:	f005 ff7e 	bl	80073b0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014b4:	4622      	mov	r2, r4
 80014b6:	489c      	ldr	r0, [pc, #624]	; (8001728 <main+0x33c>)
 80014b8:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80014bc:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80014be:	f005 ff77 	bl	80073b0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = LEFT_BUTTON_Pin|RIGHT_BUTTON_Pin|UP_BUTTON_Pin|DOWN_BUTTON_Pin;
 80014c2:	233c      	movs	r3, #60	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014c4:	4899      	ldr	r0, [pc, #612]	; (800172c <main+0x340>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80014c6:	950f      	str	r5, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014c8:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014ca:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80014ce:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80014d2:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80014d6:	f005 fe7f 	bl	80071d8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014da:	4891      	ldr	r0, [pc, #580]	; (8001720 <main+0x334>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014dc:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014de:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014e0:	e9cd a50d 	strd	sl, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014e4:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014e8:	f005 fe76 	bl	80071d8 <HAL_GPIO_Init>
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80014ec:	4890      	ldr	r0, [pc, #576]	; (8001730 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ee:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80014f0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80014f2:	e9cd 540d 	strd	r5, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 80014f6:	f005 fe6f 	bl	80071d8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014fa:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014fe:	488a      	ldr	r0, [pc, #552]	; (8001728 <main+0x33c>)
 8001500:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001502:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Pin = START_BUTTON_Pin|RESET_BUTTON_Pin;
 8001506:	f04f 090c 	mov.w	r9, #12
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800150a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800150e:	f005 fe63 	bl	80071d8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001512:	a90d      	add	r1, sp, #52	; 0x34
 8001514:	4887      	ldr	r0, [pc, #540]	; (8001734 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001516:	950f      	str	r5, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001518:	e9cd 940d 	strd	r9, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800151c:	f005 fe5c 	bl	80071d8 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001520:	4885      	ldr	r0, [pc, #532]	; (8001738 <main+0x34c>)
 8001522:	4b86      	ldr	r3, [pc, #536]	; (800173c <main+0x350>)
 8001524:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001526:	f005 fcf5 	bl	8006f14 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800152a:	4a85      	ldr	r2, [pc, #532]	; (8001740 <main+0x354>)
 800152c:	4b85      	ldr	r3, [pc, #532]	; (8001744 <main+0x358>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800152e:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001530:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001534:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001536:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800153a:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800153e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001542:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001546:	f006 f915 	bl	8007774 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800154a:	2110      	movs	r1, #16
 800154c:	4630      	mov	r0, r6
 800154e:	f006 fb51 	bl	8007bf4 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001552:	4621      	mov	r1, r4
 8001554:	4630      	mov	r0, r6
 8001556:	f006 fb6c 	bl	8007c32 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800155a:	487b      	ldr	r0, [pc, #492]	; (8001748 <main+0x35c>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800155c:	497b      	ldr	r1, [pc, #492]	; (800174c <main+0x360>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800155e:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001560:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001564:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001568:	f44f 7600 	mov.w	r6, #512	; 0x200
 800156c:	2318      	movs	r3, #24
 800156e:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001572:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001574:	4e76      	ldr	r6, [pc, #472]	; (8001750 <main+0x364>)
  hspi5.Init.CRCPolynomial = 10;
 8001576:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001578:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800157c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001580:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001584:	f007 f9f2 	bl	800896c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001588:	4b72      	ldr	r3, [pc, #456]	; (8001754 <main+0x368>)
  SdramTiming.LoadToActiveDelay = 2;
 800158a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 800158e:	e9c6 3500 	strd	r3, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001592:	2710      	movs	r7, #16
 8001594:	2340      	movs	r3, #64	; 0x40
 8001596:	e9c6 7304 	strd	r7, r3, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800159a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800159e:	e9c6 3406 	strd	r3, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80015a2:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80015a6:	e9c6 3408 	strd	r3, r4, [r6, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015aa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 80015ae:	f04f 0b03 	mov.w	fp, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80015b2:	62b3      	str	r3, [r6, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015b4:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 80015b6:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015b8:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015ba:	2708      	movs	r7, #8
  SdramTiming.SelfRefreshTime = 4;
 80015bc:	e9cd 3a0e 	strd	r3, sl, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 80015c0:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80015c2:	e9c6 4a02 	strd	r4, sl, [r6, #8]
  SdramTiming.RPDelay = 2;
 80015c6:	e9cd b811 	strd	fp, r8, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 80015ca:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80015ce:	f007 f8cd 	bl	800876c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015d2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015d6:	a909      	add	r1, sp, #36	; 0x24
 80015d8:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 80015da:	e9cd 750a 	strd	r7, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 80015de:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80015e0:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015e2:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015e4:	f007 f8e2 	bl	80087ac <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80015e8:	4628      	mov	r0, r5
 80015ea:	f005 fc2d 	bl	8006e48 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ee:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015f2:	a909      	add	r1, sp, #36	; 0x24
 80015f4:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015f6:	e9cd 8709 	strd	r8, r7, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015fa:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015fe:	f007 f8d5 	bl	80087ac <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001602:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001606:	a909      	add	r1, sp, #36	; 0x24
 8001608:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800160a:	e9cd b709 	strd	fp, r7, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800160e:	e9cd a40b 	strd	sl, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001612:	f007 f8cb 	bl	80087ac <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001616:	f44f 730c 	mov.w	r3, #560	; 0x230
 800161a:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800161c:	9b08      	ldr	r3, [sp, #32]
 800161e:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001620:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001624:	a909      	add	r1, sp, #36	; 0x24
 8001626:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001628:	e9cd a709 	strd	sl, r7, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 800162c:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800162e:	f007 f8bd 	bl	80087ac <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001632:	f240 516a 	movw	r1, #1386	; 0x56a
 8001636:	4630      	mov	r0, r6
 8001638:	f007 f8d6 	bl	80087e8 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800163c:	2234      	movs	r2, #52	; 0x34
 800163e:	4621      	mov	r1, r4
 8001640:	eb0d 0002 	add.w	r0, sp, r2
 8001644:	f01f f83c 	bl	80206c0 <memset>
  hltdc.Instance = LTDC;
 8001648:	4e43      	ldr	r6, [pc, #268]	; (8001758 <main+0x36c>)
 800164a:	4b44      	ldr	r3, [pc, #272]	; (800175c <main+0x370>)
  hltdc.Init.Backcolor.Blue = 0;
 800164c:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800164e:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 8001652:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001654:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001658:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 800165a:	f240 1c0d 	movw	ip, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 800165e:	e9c6 3b07 	strd	r3, fp, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001662:	f240 1343 	movw	r3, #323	; 0x143
 8001666:	e9c6 c309 	strd	ip, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 800166a:	f240 1e17 	movw	lr, #279	; 0x117
 800166e:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001672:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 8001674:	e9c6 e30b 	strd	lr, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001678:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800167c:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 800167e:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001682:	f006 fb7b 	bl	8007d7c <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001686:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001688:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 800168a:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800168e:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8001692:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001694:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001698:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800169c:	e9cd a114 	strd	sl, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 80016a0:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016a4:	a90d      	add	r1, sp, #52	; 0x34
 80016a6:	4622      	mov	r2, r4
 80016a8:	4630      	mov	r0, r6
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80016aa:	e9cd 3810 	strd	r3, r8, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 80016ae:	4e2c      	ldr	r6, [pc, #176]	; (8001760 <main+0x374>)
  pLayerCfg.ImageHeight = 320;
 80016b0:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 80016b2:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80016b4:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80016b8:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80016bc:	f006 fc29 	bl	8007f12 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80016c0:	4b28      	ldr	r3, [pc, #160]	; (8001764 <main+0x378>)
 80016c2:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 80016c4:	681b      	ldr	r3, [r3, #0]
  htim7.Init.Prescaler = 89;
 80016c6:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 8001780 <main+0x394>
  LcdDrv->Init();
 80016ca:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80016cc:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 80016ce:	4e26      	ldr	r6, [pc, #152]	; (8001768 <main+0x37c>)
  LcdDrv->DisplayOff();
 80016d0:	68db      	ldr	r3, [r3, #12]
 80016d2:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80016d4:	4b25      	ldr	r3, [pc, #148]	; (800176c <main+0x380>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80016d6:	e9c6 480a 	strd	r4, r8, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80016da:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016de:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 80016e0:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 80016e4:	e9c6 8402 	strd	r8, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016e8:	f005 fc7a 	bl	8006fe0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016ec:	4629      	mov	r1, r5
 80016ee:	4630      	mov	r0, r6
 80016f0:	f005 fd2e 	bl	8007150 <HAL_DMA2D_ConfigLayer>
  huart1.Instance = USART1;
 80016f4:	481e      	ldr	r0, [pc, #120]	; (8001770 <main+0x384>)
  huart1.Init.BaudRate = 115200;
 80016f6:	4b1f      	ldr	r3, [pc, #124]	; (8001774 <main+0x388>)
 80016f8:	f44f 36e1 	mov.w	r6, #115200	; 0x1c200
 80016fc:	e9c0 3600 	strd	r3, r6, [r0]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001700:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001704:	e9c0 4904 	strd	r4, r9, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001708:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800170c:	f007 fe0e 	bl	800932c <HAL_UART_Init>
  huart5.Instance = UART5;
 8001710:	4819      	ldr	r0, [pc, #100]	; (8001778 <main+0x38c>)
 8001712:	4b1a      	ldr	r3, [pc, #104]	; (800177c <main+0x390>)
  huart5.Init.BaudRate = 115200;
 8001714:	e9c0 3600 	strd	r3, r6, [r0]
 8001718:	e034      	b.n	8001784 <main+0x398>
 800171a:	bf00      	nop
 800171c:	40023800 	.word	0x40023800
 8001720:	40020800 	.word	0x40020800
 8001724:	20003ea0 	.word	0x20003ea0
 8001728:	40020c00 	.word	0x40020c00
 800172c:	40021000 	.word	0x40021000
 8001730:	40020000 	.word	0x40020000
 8001734:	40021800 	.word	0x40021800
 8001738:	20003e58 	.word	0x20003e58
 800173c:	40023000 	.word	0x40023000
 8001740:	40005c00 	.word	0x40005c00
 8001744:	000186a0 	.word	0x000186a0
 8001748:	20003fd0 	.word	0x20003fd0
 800174c:	40015000 	.word	0x40015000
 8001750:	20003f9c 	.word	0x20003f9c
 8001754:	a0000140 	.word	0xa0000140
 8001758:	20003ef4 	.word	0x20003ef4
 800175c:	40016800 	.word	0x40016800
 8001760:	20003e38 	.word	0x20003e38
 8001764:	20000014 	.word	0x20000014
 8001768:	20003e60 	.word	0x20003e60
 800176c:	4002b000 	.word	0x4002b000
 8001770:	20004070 	.word	0x20004070
 8001774:	40011000 	.word	0x40011000
 8001778:	200040b4 	.word	0x200040b4
 800177c:	40005000 	.word	0x40005000
 8001780:	40001400 	.word	0x40001400
  htim7.Instance = TIM7;
 8001784:	4e2e      	ldr	r6, [pc, #184]	; (8001840 <main+0x454>)
  huart5.Init.StopBits = UART_STOPBITS_1;
 8001786:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart5.Init.Mode = UART_MODE_TX_RX;
 800178a:	e9c0 4904 	strd	r4, r9, [r0, #16]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 800178e:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 8001792:	f007 fdcb 	bl	800932c <HAL_UART_Init>
  htim7.Init.Prescaler = 89;
 8001796:	2359      	movs	r3, #89	; 0x59
 8001798:	e9c6 b300 	strd	fp, r3, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800179c:	4630      	mov	r0, r6
  htim7.Init.Period = 49999;
 800179e:	f24c 334f 	movw	r3, #49999	; 0xc34f
 80017a2:	60f3      	str	r3, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80017a4:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80017a8:	60b4      	str	r4, [r6, #8]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80017aa:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 80017ac:	f007 fcc6 	bl	800913c <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80017b0:	a90d      	add	r1, sp, #52	; 0x34
 80017b2:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017b4:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 80017b8:	f007 fcec 	bl	8009194 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 80017bc:	f7fe ff1c 	bl	80005f8 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80017c0:	f7fe ff19 	bl	80005f6 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 80017c4:	f008 f840 	bl	8009848 <osKernelInitialize>
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_attributes);
 80017c8:	4a1e      	ldr	r2, [pc, #120]	; (8001844 <main+0x458>)
 80017ca:	4629      	mov	r1, r5
 80017cc:	4638      	mov	r0, r7
 80017ce:	f008 f962 	bl	8009a96 <osMessageQueueNew>
 80017d2:	4b1d      	ldr	r3, [pc, #116]	; (8001848 <main+0x45c>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 80017d4:	4a1d      	ldr	r2, [pc, #116]	; (800184c <main+0x460>)
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_attributes);
 80017d6:	6018      	str	r0, [r3, #0]
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 80017d8:	4629      	mov	r1, r5
 80017da:	4638      	mov	r0, r7
 80017dc:	f008 f95b 	bl	8009a96 <osMessageQueueNew>
 80017e0:	4b1b      	ldr	r3, [pc, #108]	; (8001850 <main+0x464>)
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 80017e2:	4a1c      	ldr	r2, [pc, #112]	; (8001854 <main+0x468>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 80017e4:	6018      	str	r0, [r3, #0]
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 80017e6:	4629      	mov	r1, r5
 80017e8:	4638      	mov	r0, r7
 80017ea:	f008 f954 	bl	8009a96 <osMessageQueueNew>
 80017ee:	4b1a      	ldr	r3, [pc, #104]	; (8001858 <main+0x46c>)
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 80017f0:	4a1a      	ldr	r2, [pc, #104]	; (800185c <main+0x470>)
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 80017f2:	6018      	str	r0, [r3, #0]
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 80017f4:	4629      	mov	r1, r5
 80017f6:	4638      	mov	r0, r7
 80017f8:	f008 f94d 	bl	8009a96 <osMessageQueueNew>
 80017fc:	4b18      	ldr	r3, [pc, #96]	; (8001860 <main+0x474>)
  Queue5Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue5_attributes);
 80017fe:	4a19      	ldr	r2, [pc, #100]	; (8001864 <main+0x478>)
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 8001800:	6018      	str	r0, [r3, #0]
  Queue5Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue5_attributes);
 8001802:	4629      	mov	r1, r5
 8001804:	4638      	mov	r0, r7
 8001806:	f008 f946 	bl	8009a96 <osMessageQueueNew>
 800180a:	4b17      	ldr	r3, [pc, #92]	; (8001868 <main+0x47c>)
  Queue6Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue6_attributes);
 800180c:	4a17      	ldr	r2, [pc, #92]	; (800186c <main+0x480>)
  Queue5Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue5_attributes);
 800180e:	6018      	str	r0, [r3, #0]
  Queue6Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue6_attributes);
 8001810:	4629      	mov	r1, r5
 8001812:	4638      	mov	r0, r7
 8001814:	f008 f93f 	bl	8009a96 <osMessageQueueNew>
 8001818:	4b15      	ldr	r3, [pc, #84]	; (8001870 <main+0x484>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800181a:	4a16      	ldr	r2, [pc, #88]	; (8001874 <main+0x488>)
  Queue6Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue6_attributes);
 800181c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800181e:	4621      	mov	r1, r4
 8001820:	4815      	ldr	r0, [pc, #84]	; (8001878 <main+0x48c>)
 8001822:	f008 f83d 	bl	80098a0 <osThreadNew>
 8001826:	4b15      	ldr	r3, [pc, #84]	; (800187c <main+0x490>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001828:	4a15      	ldr	r2, [pc, #84]	; (8001880 <main+0x494>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800182a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800182c:	4621      	mov	r1, r4
 800182e:	4815      	ldr	r0, [pc, #84]	; (8001884 <main+0x498>)
 8001830:	f008 f836 	bl	80098a0 <osThreadNew>
 8001834:	4b14      	ldr	r3, [pc, #80]	; (8001888 <main+0x49c>)
 8001836:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001838:	f008 f818 	bl	800986c <osKernelStart>
  while (1)
 800183c:	e7fe      	b.n	800183c <main+0x450>
 800183e:	bf00      	nop
 8001840:	20004028 	.word	0x20004028
 8001844:	08021e64 	.word	0x08021e64
 8001848:	20003e3c 	.word	0x20003e3c
 800184c:	08021e7c 	.word	0x08021e7c
 8001850:	20003e40 	.word	0x20003e40
 8001854:	08021e94 	.word	0x08021e94
 8001858:	20003e44 	.word	0x20003e44
 800185c:	08021eac 	.word	0x08021eac
 8001860:	20003e48 	.word	0x20003e48
 8001864:	08021ec4 	.word	0x08021ec4
 8001868:	20003e4c 	.word	0x20003e4c
 800186c:	08021edc 	.word	0x08021edc
 8001870:	20003e50 	.word	0x20003e50
 8001874:	08021ef4 	.word	0x08021ef4
 8001878:	080011ed 	.word	0x080011ed
 800187c:	20003e54 	.word	0x20003e54
 8001880:	08021e40 	.word	0x08021e40
 8001884:	08000607 	.word	0x08000607
 8001888:	20003e34 	.word	0x20003e34

0800188c <IOE_Init>:
 800188c:	4770      	bx	lr

0800188e <IOE_ITConfig>:
 800188e:	4770      	bx	lr

08001890 <IOE_Write>:
{
 8001890:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001892:	4b09      	ldr	r3, [pc, #36]	; (80018b8 <IOE_Write+0x28>)
 8001894:	f88d 2017 	strb.w	r2, [sp, #23]
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	9302      	str	r3, [sp, #8]
 800189c:	f10d 0217 	add.w	r2, sp, #23
 80018a0:	2301      	movs	r3, #1
 80018a2:	9200      	str	r2, [sp, #0]
 80018a4:	9301      	str	r3, [sp, #4]
 80018a6:	460a      	mov	r2, r1
 80018a8:	4601      	mov	r1, r0
 80018aa:	4804      	ldr	r0, [pc, #16]	; (80018bc <IOE_Write+0x2c>)
 80018ac:	f006 f80a 	bl	80078c4 <HAL_I2C_Mem_Write>
}
 80018b0:	b007      	add	sp, #28
 80018b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80018b6:	bf00      	nop
 80018b8:	2000000c 	.word	0x2000000c
 80018bc:	20003ea0 	.word	0x20003ea0

080018c0 <IOE_Read>:
{
 80018c0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80018c2:	2300      	movs	r3, #0
 80018c4:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018c8:	4b08      	ldr	r3, [pc, #32]	; (80018ec <IOE_Read+0x2c>)
 80018ca:	681b      	ldr	r3, [r3, #0]
 80018cc:	9302      	str	r3, [sp, #8]
{
 80018ce:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018d0:	2301      	movs	r3, #1
 80018d2:	f10d 0117 	add.w	r1, sp, #23
 80018d6:	9100      	str	r1, [sp, #0]
 80018d8:	9301      	str	r3, [sp, #4]
 80018da:	4601      	mov	r1, r0
 80018dc:	4804      	ldr	r0, [pc, #16]	; (80018f0 <IOE_Read+0x30>)
 80018de:	f006 f881 	bl	80079e4 <HAL_I2C_Mem_Read>
}
 80018e2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80018e6:	b007      	add	sp, #28
 80018e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80018ec:	2000000c 	.word	0x2000000c
 80018f0:	20003ea0 	.word	0x20003ea0

080018f4 <IOE_ReadMultiple>:
{
 80018f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80018f6:	4c08      	ldr	r4, [pc, #32]	; (8001918 <IOE_ReadMultiple+0x24>)
 80018f8:	6824      	ldr	r4, [r4, #0]
 80018fa:	9200      	str	r2, [sp, #0]
 80018fc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001900:	460a      	mov	r2, r1
 8001902:	2301      	movs	r3, #1
 8001904:	4601      	mov	r1, r0
 8001906:	4805      	ldr	r0, [pc, #20]	; (800191c <IOE_ReadMultiple+0x28>)
 8001908:	f006 f86c 	bl	80079e4 <HAL_I2C_Mem_Read>
}
 800190c:	3800      	subs	r0, #0
 800190e:	bf18      	it	ne
 8001910:	2001      	movne	r0, #1
 8001912:	b004      	add	sp, #16
 8001914:	bd10      	pop	{r4, pc}
 8001916:	bf00      	nop
 8001918:	2000000c 	.word	0x2000000c
 800191c:	20003ea0 	.word	0x20003ea0

08001920 <IOE_Delay>:
 8001920:	f005 ba92 	b.w	8006e48 <HAL_Delay>

08001924 <LCD_IO_Init>:
{
 8001924:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001926:	4806      	ldr	r0, [pc, #24]	; (8001940 <LCD_IO_Init+0x1c>)
 8001928:	2200      	movs	r2, #0
 800192a:	2104      	movs	r1, #4
 800192c:	f005 fd40 	bl	80073b0 <HAL_GPIO_WritePin>
}
 8001930:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001934:	4802      	ldr	r0, [pc, #8]	; (8001940 <LCD_IO_Init+0x1c>)
 8001936:	2201      	movs	r2, #1
 8001938:	2104      	movs	r1, #4
 800193a:	f005 bd39 	b.w	80073b0 <HAL_GPIO_WritePin>
 800193e:	bf00      	nop
 8001940:	40020800 	.word	0x40020800

08001944 <LCD_IO_WriteData>:
{
 8001944:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001946:	4d0b      	ldr	r5, [pc, #44]	; (8001974 <LCD_IO_WriteData+0x30>)
{
 8001948:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800194a:	2201      	movs	r2, #1
 800194c:	480a      	ldr	r0, [pc, #40]	; (8001978 <LCD_IO_WriteData+0x34>)
 800194e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001952:	f005 fd2d 	bl	80073b0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001956:	2200      	movs	r2, #0
 8001958:	2104      	movs	r1, #4
 800195a:	4628      	mov	r0, r5
 800195c:	f005 fd28 	bl	80073b0 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001960:	4620      	mov	r0, r4
 8001962:	f7ff fc31 	bl	80011c8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001966:	4628      	mov	r0, r5
 8001968:	2201      	movs	r2, #1
}
 800196a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800196e:	2104      	movs	r1, #4
 8001970:	f005 bd1e 	b.w	80073b0 <HAL_GPIO_WritePin>
 8001974:	40020800 	.word	0x40020800
 8001978:	40020c00 	.word	0x40020c00

0800197c <LCD_IO_WriteReg>:
{
 800197c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800197e:	4d0b      	ldr	r5, [pc, #44]	; (80019ac <LCD_IO_WriteReg+0x30>)
{
 8001980:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001982:	2200      	movs	r2, #0
 8001984:	480a      	ldr	r0, [pc, #40]	; (80019b0 <LCD_IO_WriteReg+0x34>)
 8001986:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800198a:	f005 fd11 	bl	80073b0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800198e:	2200      	movs	r2, #0
 8001990:	2104      	movs	r1, #4
 8001992:	4628      	mov	r0, r5
 8001994:	f005 fd0c 	bl	80073b0 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001998:	4620      	mov	r0, r4
 800199a:	f7ff fc15 	bl	80011c8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800199e:	4628      	mov	r0, r5
 80019a0:	2201      	movs	r2, #1
}
 80019a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019a6:	2104      	movs	r1, #4
 80019a8:	f005 bd02 	b.w	80073b0 <HAL_GPIO_WritePin>
 80019ac:	40020800 	.word	0x40020800
 80019b0:	40020c00 	.word	0x40020c00

080019b4 <LCD_IO_ReadData>:
{
 80019b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b6:	4e14      	ldr	r6, [pc, #80]	; (8001a08 <LCD_IO_ReadData+0x54>)
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019b8:	4f14      	ldr	r7, [pc, #80]	; (8001a0c <LCD_IO_ReadData+0x58>)
{
 80019ba:	4605      	mov	r5, r0
 80019bc:	460c      	mov	r4, r1
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019be:	4630      	mov	r0, r6
 80019c0:	2200      	movs	r2, #0
 80019c2:	2104      	movs	r1, #4
 80019c4:	f005 fcf4 	bl	80073b0 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019c8:	2200      	movs	r2, #0
 80019ca:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019ce:	4638      	mov	r0, r7
 80019d0:	f005 fcee 	bl	80073b0 <HAL_GPIO_WritePin>
	SPI5_Write(RegValue);
 80019d4:	4628      	mov	r0, r5
 80019d6:	f7ff fbf7 	bl	80011c8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80019da:	4b0d      	ldr	r3, [pc, #52]	; (8001a10 <LCD_IO_ReadData+0x5c>)
 80019dc:	480d      	ldr	r0, [pc, #52]	; (8001a14 <LCD_IO_ReadData+0x60>)
 80019de:	681b      	ldr	r3, [r3, #0]
 80019e0:	4622      	mov	r2, r4
 80019e2:	a901      	add	r1, sp, #4
 80019e4:	f007 f9c0 	bl	8008d68 <HAL_SPI_Receive>
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019e8:	4638      	mov	r0, r7
 80019ea:	2201      	movs	r2, #1
 80019ec:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80019f0:	9c01      	ldr	r4, [sp, #4]
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019f2:	f005 fcdd 	bl	80073b0 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019f6:	4630      	mov	r0, r6
 80019f8:	2201      	movs	r2, #1
 80019fa:	2104      	movs	r1, #4
 80019fc:	f005 fcd8 	bl	80073b0 <HAL_GPIO_WritePin>
}
 8001a00:	4620      	mov	r0, r4
 8001a02:	b003      	add	sp, #12
 8001a04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a06:	bf00      	nop
 8001a08:	40020800 	.word	0x40020800
 8001a0c:	40020c00 	.word	0x40020c00
 8001a10:	20000010 	.word	0x20000010
 8001a14:	20003fd0 	.word	0x20003fd0

08001a18 <LCD_Delay>:
	HAL_Delay(Delay);
 8001a18:	f005 ba16 	b.w	8006e48 <HAL_Delay>

08001a1c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001a1c:	6802      	ldr	r2, [r0, #0]
 8001a1e:	4b03      	ldr	r3, [pc, #12]	; (8001a2c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a20:	429a      	cmp	r2, r3
 8001a22:	d101      	bne.n	8001a28 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001a24:	f005 b9fe 	b.w	8006e24 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001a28:	4770      	bx	lr
 8001a2a:	bf00      	nop
 8001a2c:	40001000 	.word	0x40001000

08001a30 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001a30:	4770      	bx	lr
	...

08001a34 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a34:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001a36:	4b0e      	ldr	r3, [pc, #56]	; (8001a70 <HAL_MspInit+0x3c>)
 8001a38:	2200      	movs	r2, #0
 8001a3a:	9200      	str	r2, [sp, #0]
 8001a3c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a3e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001a42:	6459      	str	r1, [r3, #68]	; 0x44
 8001a44:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a46:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001a4a:	9100      	str	r1, [sp, #0]
 8001a4c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a4e:	9201      	str	r2, [sp, #4]
 8001a50:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001a52:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001a56:	6419      	str	r1, [r3, #64]	; 0x40
 8001a58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a5a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a5e:	9301      	str	r3, [sp, #4]
 8001a60:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a62:	210f      	movs	r1, #15
 8001a64:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a68:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a6a:	f005 ba13 	b.w	8006e94 <HAL_NVIC_SetPriority>
 8001a6e:	bf00      	nop
 8001a70:	40023800 	.word	0x40023800

08001a74 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a74:	6802      	ldr	r2, [r0, #0]
 8001a76:	4b09      	ldr	r3, [pc, #36]	; (8001a9c <HAL_CRC_MspInit+0x28>)
 8001a78:	429a      	cmp	r2, r3
{
 8001a7a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a7c:	d10b      	bne.n	8001a96 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a7e:	2300      	movs	r3, #0
 8001a80:	9301      	str	r3, [sp, #4]
 8001a82:	4b07      	ldr	r3, [pc, #28]	; (8001aa0 <HAL_CRC_MspInit+0x2c>)
 8001a84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a86:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a8a:	631a      	str	r2, [r3, #48]	; 0x30
 8001a8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a8e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a92:	9301      	str	r3, [sp, #4]
 8001a94:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a96:	b002      	add	sp, #8
 8001a98:	4770      	bx	lr
 8001a9a:	bf00      	nop
 8001a9c:	40023000 	.word	0x40023000
 8001aa0:	40023800 	.word	0x40023800

08001aa4 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001aa4:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001aa6:	4b0f      	ldr	r3, [pc, #60]	; (8001ae4 <HAL_DMA2D_MspInit+0x40>)
 8001aa8:	6802      	ldr	r2, [r0, #0]
 8001aaa:	429a      	cmp	r2, r3
 8001aac:	d116      	bne.n	8001adc <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001aae:	2200      	movs	r2, #0
 8001ab0:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001ab4:	9201      	str	r2, [sp, #4]
 8001ab6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ab8:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001abc:	6319      	str	r1, [r3, #48]	; 0x30
 8001abe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ac0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001ac4:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001ac6:	2105      	movs	r1, #5
 8001ac8:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001aca:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001acc:	f005 f9e2 	bl	8006e94 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ad0:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001ad2:	b003      	add	sp, #12
 8001ad4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ad8:	f005 ba0e 	b.w	8006ef8 <HAL_NVIC_EnableIRQ>
}
 8001adc:	b003      	add	sp, #12
 8001ade:	f85d fb04 	ldr.w	pc, [sp], #4
 8001ae2:	bf00      	nop
 8001ae4:	4002b000 	.word	0x4002b000

08001ae8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001ae8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001aec:	4604      	mov	r4, r0
 8001aee:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001af0:	2214      	movs	r2, #20
 8001af2:	2100      	movs	r1, #0
 8001af4:	a803      	add	r0, sp, #12
 8001af6:	f01e fde3 	bl	80206c0 <memset>
  if(hi2c->Instance==I2C3)
 8001afa:	6822      	ldr	r2, [r4, #0]
 8001afc:	4b24      	ldr	r3, [pc, #144]	; (8001b90 <HAL_I2C_MspInit+0xa8>)
 8001afe:	429a      	cmp	r2, r3
 8001b00:	d143      	bne.n	8001b8a <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b02:	4c24      	ldr	r4, [pc, #144]	; (8001b94 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b04:	4824      	ldr	r0, [pc, #144]	; (8001b98 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b06:	2500      	movs	r5, #0
 8001b08:	9500      	str	r5, [sp, #0]
 8001b0a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b0c:	f043 0304 	orr.w	r3, r3, #4
 8001b10:	6323      	str	r3, [r4, #48]	; 0x30
 8001b12:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b14:	f003 0304 	and.w	r3, r3, #4
 8001b18:	9300      	str	r3, [sp, #0]
 8001b1a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b1c:	9501      	str	r5, [sp, #4]
 8001b1e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b20:	f043 0301 	orr.w	r3, r3, #1
 8001b24:	6323      	str	r3, [r4, #48]	; 0x30
 8001b26:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b28:	f003 0301 	and.w	r3, r3, #1
 8001b2c:	9301      	str	r3, [sp, #4]
 8001b2e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b30:	f04f 0912 	mov.w	r9, #18
 8001b34:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b38:	f04f 0801 	mov.w	r8, #1
 8001b3c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b3e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b40:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b42:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b46:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b4a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b4c:	f005 fb44 	bl	80071d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001b50:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b54:	4811      	ldr	r0, [pc, #68]	; (8001b9c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b56:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b58:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b5a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b5e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b62:	f005 fb39 	bl	80071d8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001b66:	9502      	str	r5, [sp, #8]
 8001b68:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b6a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b6e:	6423      	str	r3, [r4, #64]	; 0x40
 8001b70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b72:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b76:	9302      	str	r3, [sp, #8]
 8001b78:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001b7a:	6a23      	ldr	r3, [r4, #32]
 8001b7c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001b80:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001b82:	6a23      	ldr	r3, [r4, #32]
 8001b84:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001b88:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001b8a:	b009      	add	sp, #36	; 0x24
 8001b8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001b90:	40005c00 	.word	0x40005c00
 8001b94:	40023800 	.word	0x40023800
 8001b98:	40020800 	.word	0x40020800
 8001b9c:	40020000 	.word	0x40020000

08001ba0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001ba0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001ba2:	b099      	sub	sp, #100	; 0x64
 8001ba4:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ba6:	2214      	movs	r2, #20
 8001ba8:	2100      	movs	r1, #0
 8001baa:	a807      	add	r0, sp, #28
 8001bac:	f01e fd88 	bl	80206c0 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001bb0:	2230      	movs	r2, #48	; 0x30
 8001bb2:	eb0d 0002 	add.w	r0, sp, r2
 8001bb6:	2100      	movs	r1, #0
 8001bb8:	f01e fd82 	bl	80206c0 <memset>
  if(hltdc->Instance==LTDC)
 8001bbc:	6822      	ldr	r2, [r4, #0]
 8001bbe:	4b5e      	ldr	r3, [pc, #376]	; (8001d38 <HAL_LTDC_MspInit+0x198>)
 8001bc0:	429a      	cmp	r2, r3
 8001bc2:	f040 80b7 	bne.w	8001d34 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001bc6:	2308      	movs	r3, #8
 8001bc8:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001bca:	23c0      	movs	r3, #192	; 0xc0
 8001bcc:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001bce:	2304      	movs	r3, #4
 8001bd0:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bd2:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001bd4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001bd8:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001bda:	f006 fc9d 	bl	8008518 <HAL_RCCEx_PeriphCLKConfig>
 8001bde:	b108      	cbz	r0, 8001be4 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001be0:	f7ff ff26 	bl	8001a30 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001be4:	4b55      	ldr	r3, [pc, #340]	; (8001d3c <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001be6:	4856      	ldr	r0, [pc, #344]	; (8001d40 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001be8:	2400      	movs	r4, #0
 8001bea:	9400      	str	r4, [sp, #0]
 8001bec:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bee:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001bf2:	645a      	str	r2, [r3, #68]	; 0x44
 8001bf4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001bf6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001bfa:	9200      	str	r2, [sp, #0]
 8001bfc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001bfe:	9401      	str	r4, [sp, #4]
 8001c00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c02:	f042 0220 	orr.w	r2, r2, #32
 8001c06:	631a      	str	r2, [r3, #48]	; 0x30
 8001c08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c0a:	f002 0220 	and.w	r2, r2, #32
 8001c0e:	9201      	str	r2, [sp, #4]
 8001c10:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c12:	9402      	str	r4, [sp, #8]
 8001c14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c16:	f042 0201 	orr.w	r2, r2, #1
 8001c1a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c1e:	f002 0201 	and.w	r2, r2, #1
 8001c22:	9202      	str	r2, [sp, #8]
 8001c24:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c26:	9403      	str	r4, [sp, #12]
 8001c28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c2a:	f042 0202 	orr.w	r2, r2, #2
 8001c2e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c32:	f002 0202 	and.w	r2, r2, #2
 8001c36:	9203      	str	r2, [sp, #12]
 8001c38:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c3a:	9404      	str	r4, [sp, #16]
 8001c3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001c42:	631a      	str	r2, [r3, #48]	; 0x30
 8001c44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c46:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001c4a:	9204      	str	r2, [sp, #16]
 8001c4c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c4e:	9405      	str	r4, [sp, #20]
 8001c50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c52:	f042 0204 	orr.w	r2, r2, #4
 8001c56:	631a      	str	r2, [r3, #48]	; 0x30
 8001c58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c5a:	f002 0204 	and.w	r2, r2, #4
 8001c5e:	9205      	str	r2, [sp, #20]
 8001c60:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c62:	9406      	str	r4, [sp, #24]
 8001c64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c66:	f042 0208 	orr.w	r2, r2, #8
 8001c6a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c6e:	f003 0308 	and.w	r3, r3, #8
 8001c72:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c74:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c76:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c78:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c7a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c7c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c80:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c82:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c86:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c8a:	f005 faa5 	bl	80071d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001c8e:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c92:	482c      	ldr	r0, [pc, #176]	; (8001d44 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001c94:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c96:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c98:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c9c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c9e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ca2:	f005 fa99 	bl	80071d8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001ca6:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ca8:	4827      	ldr	r0, [pc, #156]	; (8001d48 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001caa:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cac:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cae:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cb2:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cb6:	f005 fa8f 	bl	80071d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001cba:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cbe:	4822      	ldr	r0, [pc, #136]	; (8001d48 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cc0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cc2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cc8:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ccc:	f005 fa84 	bl	80071d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001cd0:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cd4:	481d      	ldr	r0, [pc, #116]	; (8001d4c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cd6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cd8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cda:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cde:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ce2:	f005 fa79 	bl	80071d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001ce6:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ce8:	4819      	ldr	r0, [pc, #100]	; (8001d50 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cea:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cec:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cee:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cf2:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cf6:	f005 fa6f 	bl	80071d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001cfa:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001cfc:	4815      	ldr	r0, [pc, #84]	; (8001d54 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cfe:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d00:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d02:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d06:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d0a:	f005 fa65 	bl	80071d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001d0e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d12:	480e      	ldr	r0, [pc, #56]	; (8001d4c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d14:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d16:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d18:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d1c:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d20:	f005 fa5a 	bl	80071d8 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001d24:	2058      	movs	r0, #88	; 0x58
 8001d26:	4622      	mov	r2, r4
 8001d28:	2105      	movs	r1, #5
 8001d2a:	f005 f8b3 	bl	8006e94 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001d2e:	2058      	movs	r0, #88	; 0x58
 8001d30:	f005 f8e2 	bl	8006ef8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d34:	b019      	add	sp, #100	; 0x64
 8001d36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d38:	40016800 	.word	0x40016800
 8001d3c:	40023800 	.word	0x40023800
 8001d40:	40021400 	.word	0x40021400
 8001d44:	40020000 	.word	0x40020000
 8001d48:	40020400 	.word	0x40020400
 8001d4c:	40021800 	.word	0x40021800
 8001d50:	40020800 	.word	0x40020800
 8001d54:	40020c00 	.word	0x40020c00

08001d58 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001d58:	b510      	push	{r4, lr}
 8001d5a:	4604      	mov	r4, r0
 8001d5c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d5e:	2214      	movs	r2, #20
 8001d60:	2100      	movs	r1, #0
 8001d62:	a803      	add	r0, sp, #12
 8001d64:	f01e fcac 	bl	80206c0 <memset>
  if(hspi->Instance==SPI5)
 8001d68:	6822      	ldr	r2, [r4, #0]
 8001d6a:	4b14      	ldr	r3, [pc, #80]	; (8001dbc <HAL_SPI_MspInit+0x64>)
 8001d6c:	429a      	cmp	r2, r3
 8001d6e:	d123      	bne.n	8001db8 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001d70:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001d74:	2100      	movs	r1, #0
 8001d76:	9101      	str	r1, [sp, #4]
 8001d78:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d7a:	4811      	ldr	r0, [pc, #68]	; (8001dc0 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001d7c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001d80:	645a      	str	r2, [r3, #68]	; 0x44
 8001d82:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d84:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001d88:	9201      	str	r2, [sp, #4]
 8001d8a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d8c:	9102      	str	r1, [sp, #8]
 8001d8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d90:	f042 0220 	orr.w	r2, r2, #32
 8001d94:	631a      	str	r2, [r3, #48]	; 0x30
 8001d96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d98:	f003 0320 	and.w	r3, r3, #32
 8001d9c:	9302      	str	r3, [sp, #8]
 8001d9e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da0:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001da4:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001da6:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001dac:	2305      	movs	r3, #5
 8001dae:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db2:	a903      	add	r1, sp, #12
 8001db4:	f005 fa10 	bl	80071d8 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001db8:	b008      	add	sp, #32
 8001dba:	bd10      	pop	{r4, pc}
 8001dbc:	40015000 	.word	0x40015000
 8001dc0:	40021400 	.word	0x40021400

08001dc4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001dc4:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001dc6:	4b0f      	ldr	r3, [pc, #60]	; (8001e04 <HAL_TIM_Base_MspInit+0x40>)
 8001dc8:	6802      	ldr	r2, [r0, #0]
 8001dca:	429a      	cmp	r2, r3
 8001dcc:	d116      	bne.n	8001dfc <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001dce:	2200      	movs	r2, #0
 8001dd0:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001dd4:	9201      	str	r2, [sp, #4]
 8001dd6:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001dd8:	f041 0120 	orr.w	r1, r1, #32
 8001ddc:	6419      	str	r1, [r3, #64]	; 0x40
 8001dde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001de0:	f003 0320 	and.w	r3, r3, #32
 8001de4:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001de6:	2105      	movs	r1, #5
 8001de8:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001dea:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001dec:	f005 f852 	bl	8006e94 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001df0:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001df2:	b003      	add	sp, #12
 8001df4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001df8:	f005 b87e 	b.w	8006ef8 <HAL_NVIC_EnableIRQ>
}
 8001dfc:	b003      	add	sp, #12
 8001dfe:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e02:	bf00      	nop
 8001e04:	40001400 	.word	0x40001400

08001e08 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001e08:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e0a:	2214      	movs	r2, #20
{
 8001e0c:	b08b      	sub	sp, #44	; 0x2c
 8001e0e:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e10:	2100      	movs	r1, #0
 8001e12:	eb0d 0002 	add.w	r0, sp, r2
 8001e16:	f01e fc53 	bl	80206c0 <memset>
  if(huart->Instance==UART5)
 8001e1a:	6823      	ldr	r3, [r4, #0]
 8001e1c:	4a38      	ldr	r2, [pc, #224]	; (8001f00 <HAL_UART_MspInit+0xf8>)
 8001e1e:	4293      	cmp	r3, r2
 8001e20:	d140      	bne.n	8001ea4 <HAL_UART_MspInit+0x9c>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 8001e22:	4b38      	ldr	r3, [pc, #224]	; (8001f04 <HAL_UART_MspInit+0xfc>)
    GPIO_InitStruct.Pin = GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e24:	4838      	ldr	r0, [pc, #224]	; (8001f08 <HAL_UART_MspInit+0x100>)
    __HAL_RCC_UART5_CLK_ENABLE();
 8001e26:	2400      	movs	r4, #0
 8001e28:	9400      	str	r4, [sp, #0]
 8001e2a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001e2c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001e30:	641a      	str	r2, [r3, #64]	; 0x40
 8001e32:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001e34:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001e38:	9200      	str	r2, [sp, #0]
 8001e3a:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e3c:	9401      	str	r4, [sp, #4]
 8001e3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e40:	f042 0204 	orr.w	r2, r2, #4
 8001e44:	631a      	str	r2, [r3, #48]	; 0x30
 8001e46:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e48:	f002 0204 	and.w	r2, r2, #4
 8001e4c:	9201      	str	r2, [sp, #4]
 8001e4e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e50:	9402      	str	r4, [sp, #8]
 8001e52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e54:	f042 0208 	orr.w	r2, r2, #8
 8001e58:	631a      	str	r2, [r3, #48]	; 0x30
 8001e5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e5c:	f003 0308 	and.w	r3, r3, #8
 8001e60:	9302      	str	r3, [sp, #8]
 8001e62:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e64:	2702      	movs	r7, #2
 8001e66:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8001e6a:	2603      	movs	r6, #3
 8001e6c:	2508      	movs	r5, #8
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e6e:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e70:	e9cd 3705 	strd	r3, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8001e74:	e9cd 6508 	strd	r6, r5, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e78:	f005 f9ae 	bl	80071d8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001e7c:	2304      	movs	r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e7e:	4823      	ldr	r0, [pc, #140]	; (8001f0c <HAL_UART_MspInit+0x104>)
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8001e80:	9509      	str	r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e82:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e84:	e9cd 3705 	strd	r3, r7, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e88:	e9cd 4607 	strd	r4, r6, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e8c:	f005 f9a4 	bl	80071d8 <HAL_GPIO_Init>

    /* UART5 interrupt Init */
    HAL_NVIC_SetPriority(UART5_IRQn, 5, 0);
 8001e90:	2035      	movs	r0, #53	; 0x35
 8001e92:	4622      	mov	r2, r4
 8001e94:	2105      	movs	r1, #5
 8001e96:	f004 fffd 	bl	8006e94 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART5_IRQn);
 8001e9a:	2035      	movs	r0, #53	; 0x35
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001e9c:	f005 f82c 	bl	8006ef8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001ea0:	b00b      	add	sp, #44	; 0x2c
 8001ea2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if(huart->Instance==USART1)
 8001ea4:	4a1a      	ldr	r2, [pc, #104]	; (8001f10 <HAL_UART_MspInit+0x108>)
 8001ea6:	4293      	cmp	r3, r2
 8001ea8:	d1fa      	bne.n	8001ea0 <HAL_UART_MspInit+0x98>
    __HAL_RCC_USART1_CLK_ENABLE();
 8001eaa:	4b16      	ldr	r3, [pc, #88]	; (8001f04 <HAL_UART_MspInit+0xfc>)
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001eac:	4819      	ldr	r0, [pc, #100]	; (8001f14 <HAL_UART_MspInit+0x10c>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8001eae:	2400      	movs	r4, #0
 8001eb0:	9403      	str	r4, [sp, #12]
 8001eb2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001eb4:	f042 0210 	orr.w	r2, r2, #16
 8001eb8:	645a      	str	r2, [r3, #68]	; 0x44
 8001eba:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ebc:	f002 0210 	and.w	r2, r2, #16
 8001ec0:	9203      	str	r2, [sp, #12]
 8001ec2:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ec4:	9404      	str	r4, [sp, #16]
 8001ec6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ec8:	f042 0201 	orr.w	r2, r2, #1
 8001ecc:	631a      	str	r2, [r3, #48]	; 0x30
 8001ece:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ed0:	f003 0301 	and.w	r3, r3, #1
 8001ed4:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ed6:	f44f 62c0 	mov.w	r2, #1536	; 0x600
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eda:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001edc:	2302      	movs	r3, #2
 8001ede:	e9cd 2305 	strd	r2, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001ee2:	2103      	movs	r1, #3
 8001ee4:	2307      	movs	r3, #7
 8001ee6:	e9cd 1308 	strd	r1, r3, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001eea:	a905      	add	r1, sp, #20
 8001eec:	f005 f974 	bl	80071d8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8001ef0:	2025      	movs	r0, #37	; 0x25
 8001ef2:	4622      	mov	r2, r4
 8001ef4:	2105      	movs	r1, #5
 8001ef6:	f004 ffcd 	bl	8006e94 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001efa:	2025      	movs	r0, #37	; 0x25
 8001efc:	e7ce      	b.n	8001e9c <HAL_UART_MspInit+0x94>
 8001efe:	bf00      	nop
 8001f00:	40005000 	.word	0x40005000
 8001f04:	40023800 	.word	0x40023800
 8001f08:	40020800 	.word	0x40020800
 8001f0c:	40020c00 	.word	0x40020c00
 8001f10:	40011000 	.word	0x40011000
 8001f14:	40020000 	.word	0x40020000

08001f18 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001f18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f1c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001f1e:	2300      	movs	r3, #0
 8001f20:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001f22:	4b2b      	ldr	r3, [pc, #172]	; (8001fd0 <HAL_SDRAM_MspInit+0xb8>)
 8001f24:	681c      	ldr	r4, [r3, #0]
 8001f26:	2c00      	cmp	r4, #0
 8001f28:	d14f      	bne.n	8001fca <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001f2a:	f04f 0801 	mov.w	r8, #1
 8001f2e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f32:	4b28      	ldr	r3, [pc, #160]	; (8001fd4 <HAL_SDRAM_MspInit+0xbc>)
 8001f34:	9400      	str	r4, [sp, #0]
 8001f36:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f38:	4827      	ldr	r0, [pc, #156]	; (8001fd8 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f3a:	ea42 0208 	orr.w	r2, r2, r8
 8001f3e:	639a      	str	r2, [r3, #56]	; 0x38
 8001f40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001f42:	ea03 0308 	and.w	r3, r3, r8
 8001f46:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f48:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f4a:	2603      	movs	r6, #3
 8001f4c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f4e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f50:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f52:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001f56:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f5a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f5e:	f005 f93b 	bl	80071d8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f62:	481e      	ldr	r0, [pc, #120]	; (8001fdc <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f64:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f66:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f68:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f6c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f70:	f005 f932 	bl	80071d8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001f74:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f78:	4819      	ldr	r0, [pc, #100]	; (8001fe0 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f7a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f7c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f7e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f82:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f86:	f005 f927 	bl	80071d8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001f8a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f8e:	4815      	ldr	r0, [pc, #84]	; (8001fe4 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001f90:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f92:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f94:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f98:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f9c:	f005 f91c 	bl	80071d8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001fa0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fa4:	4810      	ldr	r0, [pc, #64]	; (8001fe8 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fa6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fa8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001faa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fae:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fb2:	f005 f911 	bl	80071d8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001fb6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fb8:	480c      	ldr	r0, [pc, #48]	; (8001fec <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fba:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fbc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fbe:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fc2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fc6:	f005 f907 	bl	80071d8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001fca:	b006      	add	sp, #24
 8001fcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001fd0:	200040f8 	.word	0x200040f8
 8001fd4:	40023800 	.word	0x40023800
 8001fd8:	40021400 	.word	0x40021400
 8001fdc:	40020800 	.word	0x40020800
 8001fe0:	40021800 	.word	0x40021800
 8001fe4:	40021000 	.word	0x40021000
 8001fe8:	40020c00 	.word	0x40020c00
 8001fec:	40020400 	.word	0x40020400

08001ff0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001ff0:	b570      	push	{r4, r5, r6, lr}
 8001ff2:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ff4:	2300      	movs	r3, #0
 8001ff6:	9302      	str	r3, [sp, #8]
 8001ff8:	4b20      	ldr	r3, [pc, #128]	; (800207c <HAL_InitTick+0x8c>)
 8001ffa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ffc:	f042 0210 	orr.w	r2, r2, #16
 8002000:	641a      	str	r2, [r3, #64]	; 0x40
 8002002:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002004:	f003 0310 	and.w	r3, r3, #16
 8002008:	9302      	str	r3, [sp, #8]
{
 800200a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800200c:	a901      	add	r1, sp, #4
 800200e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002010:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002012:	f006 fa63 	bl	80084dc <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002016:	9b06      	ldr	r3, [sp, #24]
 8002018:	bb4b      	cbnz	r3, 800206e <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800201a:	f006 fa3f 	bl	800849c <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800201e:	4e18      	ldr	r6, [pc, #96]	; (8002080 <HAL_InitTick+0x90>)
 8002020:	4b18      	ldr	r3, [pc, #96]	; (8002084 <HAL_InitTick+0x94>)
 8002022:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002024:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002028:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800202a:	4b17      	ldr	r3, [pc, #92]	; (8002088 <HAL_InitTick+0x98>)
 800202c:	fbb0 f3f3 	udiv	r3, r0, r3
 8002030:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002032:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002034:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002036:	2300      	movs	r3, #0
 8002038:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800203a:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800203c:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 800203e:	f007 f87d 	bl	800913c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002042:	4604      	mov	r4, r0
 8002044:	b980      	cbnz	r0, 8002068 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002046:	4630      	mov	r0, r6
 8002048:	f006 ff32 	bl	8008eb0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800204c:	4604      	mov	r4, r0
 800204e:	b958      	cbnz	r0, 8002068 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002050:	2036      	movs	r0, #54	; 0x36
 8002052:	f004 ff51 	bl	8006ef8 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002056:	2d0f      	cmp	r5, #15
 8002058:	d80d      	bhi.n	8002076 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800205a:	4622      	mov	r2, r4
 800205c:	4629      	mov	r1, r5
 800205e:	2036      	movs	r0, #54	; 0x36
 8002060:	f004 ff18 	bl	8006e94 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002064:	4b09      	ldr	r3, [pc, #36]	; (800208c <HAL_InitTick+0x9c>)
 8002066:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002068:	4620      	mov	r0, r4
 800206a:	b008      	add	sp, #32
 800206c:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800206e:	f006 fa15 	bl	800849c <HAL_RCC_GetPCLK1Freq>
 8002072:	0040      	lsls	r0, r0, #1
 8002074:	e7d3      	b.n	800201e <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002076:	2401      	movs	r4, #1
 8002078:	e7f6      	b.n	8002068 <HAL_InitTick+0x78>
 800207a:	bf00      	nop
 800207c:	40023800 	.word	0x40023800
 8002080:	200040fc 	.word	0x200040fc
 8002084:	40001000 	.word	0x40001000
 8002088:	000f4240 	.word	0x000f4240
 800208c:	2000007c 	.word	0x2000007c

08002090 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002090:	4770      	bx	lr

08002092 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002092:	e7fe      	b.n	8002092 <HardFault_Handler>

08002094 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002094:	e7fe      	b.n	8002094 <MemManage_Handler>

08002096 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002096:	e7fe      	b.n	8002096 <BusFault_Handler>

08002098 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002098:	e7fe      	b.n	8002098 <UsageFault_Handler>

0800209a <DebugMon_Handler>:
 800209a:	4770      	bx	lr

0800209c <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 800209c:	4801      	ldr	r0, [pc, #4]	; (80020a4 <USART1_IRQHandler+0x8>)
 800209e:	f007 b9d5 	b.w	800944c <HAL_UART_IRQHandler>
 80020a2:	bf00      	nop
 80020a4:	20004070 	.word	0x20004070

080020a8 <UART5_IRQHandler>:
void UART5_IRQHandler(void)
{
  /* USER CODE BEGIN UART5_IRQn 0 */

  /* USER CODE END UART5_IRQn 0 */
  HAL_UART_IRQHandler(&huart5);
 80020a8:	4801      	ldr	r0, [pc, #4]	; (80020b0 <UART5_IRQHandler+0x8>)
 80020aa:	f007 b9cf 	b.w	800944c <HAL_UART_IRQHandler>
 80020ae:	bf00      	nop
 80020b0:	200040b4 	.word	0x200040b4

080020b4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80020b4:	4801      	ldr	r0, [pc, #4]	; (80020bc <TIM6_DAC_IRQHandler+0x8>)
 80020b6:	f006 bf39 	b.w	8008f2c <HAL_TIM_IRQHandler>
 80020ba:	bf00      	nop
 80020bc:	200040fc 	.word	0x200040fc

080020c0 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 80020c0:	4801      	ldr	r0, [pc, #4]	; (80020c8 <TIM7_IRQHandler+0x8>)
 80020c2:	f006 bf33 	b.w	8008f2c <HAL_TIM_IRQHandler>
 80020c6:	bf00      	nop
 80020c8:	20004028 	.word	0x20004028

080020cc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80020cc:	4801      	ldr	r0, [pc, #4]	; (80020d4 <LTDC_IRQHandler+0x8>)
 80020ce:	f005 bec3 	b.w	8007e58 <HAL_LTDC_IRQHandler>
 80020d2:	bf00      	nop
 80020d4:	20003ef4 	.word	0x20003ef4

080020d8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80020d8:	4801      	ldr	r0, [pc, #4]	; (80020e0 <DMA2D_IRQHandler+0x8>)
 80020da:	f004 bfaf 	b.w	800703c <HAL_DMA2D_IRQHandler>
 80020de:	bf00      	nop
 80020e0:	20003e60 	.word	0x20003e60

080020e4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80020e4:	2001      	movs	r0, #1
 80020e6:	4770      	bx	lr

080020e8 <_kill>:

int _kill(int pid, int sig)
{
 80020e8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80020ea:	f01e fa7f 	bl	80205ec <__errno>
 80020ee:	2316      	movs	r3, #22
 80020f0:	6003      	str	r3, [r0, #0]
	return -1;
}
 80020f2:	f04f 30ff 	mov.w	r0, #4294967295
 80020f6:	bd08      	pop	{r3, pc}

080020f8 <_exit>:

void _exit (int status)
{
 80020f8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80020fa:	f01e fa77 	bl	80205ec <__errno>
 80020fe:	2316      	movs	r3, #22
 8002100:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002102:	e7fe      	b.n	8002102 <_exit+0xa>

08002104 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002104:	b570      	push	{r4, r5, r6, lr}
 8002106:	460d      	mov	r5, r1
 8002108:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800210a:	460e      	mov	r6, r1
 800210c:	1b73      	subs	r3, r6, r5
 800210e:	429c      	cmp	r4, r3
 8002110:	dc01      	bgt.n	8002116 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002112:	4620      	mov	r0, r4
 8002114:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002116:	f3af 8000 	nop.w
 800211a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800211e:	e7f5      	b.n	800210c <_read+0x8>

08002120 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002120:	b570      	push	{r4, r5, r6, lr}
 8002122:	460d      	mov	r5, r1
 8002124:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002126:	460e      	mov	r6, r1
 8002128:	1b73      	subs	r3, r6, r5
 800212a:	429c      	cmp	r4, r3
 800212c:	dc01      	bgt.n	8002132 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800212e:	4620      	mov	r0, r4
 8002130:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002132:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002136:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800213a:	e7f5      	b.n	8002128 <_write+0x8>

0800213c <_close>:

int _close(int file)
{
	return -1;
}
 800213c:	f04f 30ff 	mov.w	r0, #4294967295
 8002140:	4770      	bx	lr

08002142 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002142:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002146:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002148:	2000      	movs	r0, #0
 800214a:	4770      	bx	lr

0800214c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800214c:	2001      	movs	r0, #1
 800214e:	4770      	bx	lr

08002150 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002150:	2000      	movs	r0, #0
 8002152:	4770      	bx	lr

08002154 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002154:	4a0a      	ldr	r2, [pc, #40]	; (8002180 <_sbrk+0x2c>)
 8002156:	6811      	ldr	r1, [r2, #0]
{
 8002158:	b508      	push	{r3, lr}
 800215a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800215c:	b909      	cbnz	r1, 8002162 <_sbrk+0xe>
		heap_end = &end;
 800215e:	4909      	ldr	r1, [pc, #36]	; (8002184 <_sbrk+0x30>)
 8002160:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002162:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002164:	4669      	mov	r1, sp
 8002166:	4403      	add	r3, r0
 8002168:	428b      	cmp	r3, r1
 800216a:	d906      	bls.n	800217a <_sbrk+0x26>
	{
		errno = ENOMEM;
 800216c:	f01e fa3e 	bl	80205ec <__errno>
 8002170:	230c      	movs	r3, #12
 8002172:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002174:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002178:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800217a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 800217c:	e7fc      	b.n	8002178 <_sbrk+0x24>
 800217e:	bf00      	nop
 8002180:	20004144 	.word	0x20004144
 8002184:	20015ab8 	.word	0x20015ab8

08002188 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId MEDIUM = 3;  // rechargebd_otf_30_4bpp
    static const touchgfx::FontId BTNTEXT = 4; // rechargebd_otf_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002188:	4770      	bx	lr

0800218a <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800218a:	b508      	push	{r3, lr}
    switch (typography)
 800218c:	2904      	cmp	r1, #4
 800218e:	d818      	bhi.n	80021c2 <_ZN23ApplicationFontProvider7getFontEt+0x38>
 8002190:	e8df f001 	tbb	[pc, r1]
 8002194:	0f0b0703 	.word	0x0f0b0703
 8002198:	13          	.byte	0x13
 8002199:	00          	.byte	0x00
    {
    case Typography::DEFAULT:
        // rechargebd_otf_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800219a:	f002 fee7 	bl	8004f6c <_ZN17TypedTextDatabase8getFontsEv>
 800219e:	6800      	ldr	r0, [r0, #0]
        // rechargebd_otf_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    default:
        return 0;
    }
}
 80021a0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80021a2:	f002 fee3 	bl	8004f6c <_ZN17TypedTextDatabase8getFontsEv>
 80021a6:	6840      	ldr	r0, [r0, #4]
 80021a8:	e7fa      	b.n	80021a0 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80021aa:	f002 fedf 	bl	8004f6c <_ZN17TypedTextDatabase8getFontsEv>
 80021ae:	6880      	ldr	r0, [r0, #8]
 80021b0:	e7f6      	b.n	80021a0 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80021b2:	f002 fedb 	bl	8004f6c <_ZN17TypedTextDatabase8getFontsEv>
 80021b6:	68c0      	ldr	r0, [r0, #12]
 80021b8:	e7f2      	b.n	80021a0 <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 80021ba:	f002 fed7 	bl	8004f6c <_ZN17TypedTextDatabase8getFontsEv>
 80021be:	6900      	ldr	r0, [r0, #16]
 80021c0:	e7ee      	b.n	80021a0 <_ZN23ApplicationFontProvider7getFontEt+0x16>
    switch (typography)
 80021c2:	2000      	movs	r0, #0
 80021c4:	e7ec      	b.n	80021a0 <_ZN23ApplicationFontProvider7getFontEt+0x16>

080021c6 <_ZN23ApplicationFontProviderD0Ev>:
 80021c6:	b510      	push	{r4, lr}
 80021c8:	2104      	movs	r1, #4
 80021ca:	4604      	mov	r4, r0
 80021cc:	f01e f92c 	bl	8020428 <_ZdlPvj>
 80021d0:	4620      	mov	r0, r4
 80021d2:	bd10      	pop	{r4, pc}

080021d4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80021d4:	4800      	ldr	r0, [pc, #0]	; (80021d8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80021d6:	4770      	bx	lr
 80021d8:	08021f2c 	.word	0x08021f2c

080021dc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021dc:	2010      	movs	r0, #16
 80021de:	4770      	bx	lr

080021e0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021e0:	b513      	push	{r0, r1, r4, lr}
 80021e2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80021e4:	b151      	cbz	r1, 80021fc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021e6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80021e8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80021ea:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80021ee:	aa01      	add	r2, sp, #4
 80021f0:	689c      	ldr	r4, [r3, #8]
 80021f2:	f10d 0303 	add.w	r3, sp, #3
 80021f6:	47a0      	blx	r4
        return glyph;
    }
 80021f8:	b002      	add	sp, #8
 80021fa:	bd10      	pop	{r4, pc}
            return 0;
 80021fc:	4608      	mov	r0, r1
 80021fe:	e7fb      	b.n	80021f8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002200 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002200:	89c0      	ldrh	r0, [r0, #14]
 8002202:	4770      	bx	lr

08002204 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002204:	8a00      	ldrh	r0, [r0, #16]
 8002206:	4770      	bx	lr

08002208 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002208:	88c0      	ldrh	r0, [r0, #6]
 800220a:	4770      	bx	lr

0800220c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 800220c:	8880      	ldrh	r0, [r0, #4]
 800220e:	4770      	bx	lr

08002210 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002210:	7a80      	ldrb	r0, [r0, #10]
    }
 8002212:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002216:	4770      	bx	lr

08002218 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002218:	7a80      	ldrb	r0, [r0, #10]
    }
 800221a:	09c0      	lsrs	r0, r0, #7
 800221c:	4770      	bx	lr

0800221e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800221e:	4770      	bx	lr

08002220 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002220:	4770      	bx	lr

08002222 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002222:	4770      	bx	lr

08002224 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002224:	4770      	bx	lr

08002226 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002226:	4770      	bx	lr

08002228 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002228:	4770      	bx	lr

0800222a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800222a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800222c:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800222e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002230:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002232:	466d      	mov	r5, sp
 8002234:	4601      	mov	r1, r0
 8002236:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800223a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800223c:	4628      	mov	r0, r5
 800223e:	4798      	blx	r3
 8002240:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002244:	343c      	adds	r4, #60	; 0x3c
 8002246:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800224a:	b005      	add	sp, #20
 800224c:	bd30      	pop	{r4, r5, pc}

0800224e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800224e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002250:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002252:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002254:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002256:	466d      	mov	r5, sp
 8002258:	4601      	mov	r1, r0
 800225a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800225e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002260:	4628      	mov	r0, r5
 8002262:	4798      	blx	r3
 8002264:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002268:	343c      	adds	r4, #60	; 0x3c
 800226a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800226e:	b005      	add	sp, #20
 8002270:	bd30      	pop	{r4, r5, pc}

08002272 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002272:	2200      	movs	r2, #0
 8002274:	8002      	strh	r2, [r0, #0]
 8002276:	8042      	strh	r2, [r0, #2]
 8002278:	8082      	strh	r2, [r0, #4]
 800227a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800227c:	4770      	bx	lr

0800227e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800227e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002282:	4770      	bx	lr

08002284 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002284:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002286:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002288:	4604      	mov	r4, r0
        setX(x);
 800228a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800228c:	4615      	mov	r5, r2
        setX(x);
 800228e:	4798      	blx	r3
        setBaselineY(baselineY);
 8002290:	6823      	ldr	r3, [r4, #0]
 8002292:	4629      	mov	r1, r5
 8002294:	4620      	mov	r0, r4
 8002296:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002298:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 800229c:	4718      	bx	r3

0800229e <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800229e:	2000      	movs	r0, #0
 80022a0:	4770      	bx	lr

080022a2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80022a2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80022a4:	4770      	bx	lr

080022a6 <_ZN21EndGameScreenViewBaseD1Ev>:
}

EndGameScreenViewBase::~EndGameScreenViewBase()
{

}
 80022a6:	4770      	bx	lr

080022a8 <_ZN21EndGameScreenViewBase11setupScreenEv>:

void EndGameScreenViewBase::setupScreen()
{

}
 80022a8:	4770      	bx	lr

080022aa <_ZN8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80022aa:	4770      	bx	lr

080022ac <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80022ac:	4770      	bx	lr

080022ae <_ZN8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80022ae:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80022b0:	68c2      	ldr	r2, [r0, #12]
 80022b2:	6844      	ldr	r4, [r0, #4]
 80022b4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80022b6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80022b8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80022bc:	07d2      	lsls	r2, r2, #31
 80022be:	bf48      	it	mi
 80022c0:	5962      	ldrmi	r2, [r4, r5]
 80022c2:	689b      	ldr	r3, [r3, #8]
    }
 80022c4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80022c6:	bf48      	it	mi
 80022c8:	58d3      	ldrmi	r3, [r2, r3]
 80022ca:	4718      	bx	r3

080022cc <_ZNK8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80022cc:	6843      	ldr	r3, [r0, #4]
 80022ce:	b12b      	cbz	r3, 80022dc <_ZNK8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80022d0:	6883      	ldr	r3, [r0, #8]
 80022d2:	b92b      	cbnz	r3, 80022e0 <_ZNK8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80022d4:	68c0      	ldr	r0, [r0, #12]
 80022d6:	f000 0001 	and.w	r0, r0, #1
 80022da:	4770      	bx	lr
 80022dc:	4618      	mov	r0, r3
 80022de:	4770      	bx	lr
 80022e0:	2001      	movs	r0, #1
    }
 80022e2:	4770      	bx	lr

080022e4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80022e4:	b510      	push	{r4, lr}
    }
 80022e6:	2108      	movs	r1, #8
    virtual ~TypedText()
 80022e8:	4604      	mov	r4, r0
    }
 80022ea:	f01e f89d 	bl	8020428 <_ZdlPvj>
 80022ee:	4620      	mov	r0, r4
 80022f0:	bd10      	pop	{r4, pc}

080022f2 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80022f2:	b510      	push	{r4, lr}
 80022f4:	214c      	movs	r1, #76	; 0x4c
 80022f6:	4604      	mov	r4, r0
 80022f8:	f01e f896 	bl	8020428 <_ZdlPvj>
 80022fc:	4620      	mov	r0, r4
 80022fe:	bd10      	pop	{r4, pc}

08002300 <_ZN8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002300:	b510      	push	{r4, lr}
 8002302:	2110      	movs	r1, #16
 8002304:	4604      	mov	r4, r0
 8002306:	f01e f88f 	bl	8020428 <_ZdlPvj>
 800230a:	4620      	mov	r0, r4
 800230c:	bd10      	pop	{r4, pc}

0800230e <_ZN21EndGameScreenViewBaseD0Ev>:
EndGameScreenViewBase::~EndGameScreenViewBase()
 800230e:	b510      	push	{r4, lr}
}
 8002310:	f44f 71cc 	mov.w	r1, #408	; 0x198
EndGameScreenViewBase::~EndGameScreenViewBase()
 8002314:	4604      	mov	r4, r0
}
 8002316:	f01e f887 	bl	8020428 <_ZdlPvj>
 800231a:	4620      	mov	r0, r4
 800231c:	bd10      	pop	{r4, pc}

0800231e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800231e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002320:	f7fe fefa 	bl	8001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002324:	bd08      	pop	{r3, pc}
	...

08002328 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002328:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800232a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800232c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800232e:	4b12      	ldr	r3, [pc, #72]	; (8002378 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002330:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002332:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002334:	b28d      	uxth	r5, r1
 8002336:	b92b      	cbnz	r3, 8002344 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002338:	4b10      	ldr	r3, [pc, #64]	; (800237c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800233a:	4a11      	ldr	r2, [pc, #68]	; (8002380 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800233c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800233e:	4811      	ldr	r0, [pc, #68]	; (8002384 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002340:	f01e f922 	bl	8020588 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002344:	4910      	ldr	r1, [pc, #64]	; (8002388 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002346:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002348:	8809      	ldrh	r1, [r1, #0]
 800234a:	4291      	cmp	r1, r2
 800234c:	d803      	bhi.n	8002356 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800234e:	4b0f      	ldr	r3, [pc, #60]	; (800238c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002350:	4a0b      	ldr	r2, [pc, #44]	; (8002380 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002352:	216d      	movs	r1, #109	; 0x6d
 8002354:	e7f3      	b.n	800233e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002356:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800235a:	4b0d      	ldr	r3, [pc, #52]	; (8002390 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002362:	6803      	ldr	r3, [r0, #0]
 8002364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002366:	4798      	blx	r3
 8002368:	1a28      	subs	r0, r5, r0
 800236a:	b201      	sxth	r1, r0
 800236c:	4633      	mov	r3, r6
 800236e:	4620      	mov	r0, r4
    }
 8002370:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002374:	4718      	bx	r3
 8002376:	bf00      	nop
 8002378:	20015014 	.word	0x20015014
 800237c:	0802206c 	.word	0x0802206c
 8002380:	080220ae 	.word	0x080220ae
 8002384:	080220e9 	.word	0x080220e9
 8002388:	20015018 	.word	0x20015018
 800238c:	08022130 	.word	0x08022130
 8002390:	2001501c 	.word	0x2001501c

08002394 <_ZN21EndGameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void EndGameScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 8002394:	3098      	adds	r0, #152	; 0x98
 8002396:	4288      	cmp	r0, r1
{
 8002398:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel1)
 800239a:	d105      	bne.n	80023a8 <_ZN21EndGameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~EndGameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800239c:	f00d fb3c 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel1 clicked change screen to HomeScreen
        //Go to HomeScreen with screen transition towards East
        application().gotoHomeScreenScreenSlideTransitionEast();
    }
}
 80023a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoHomeScreenScreenSlideTransitionEast();
 80023a4:	f000 bb70 	b.w	8002a88 <_ZN23FrontendApplicationBase39gotoHomeScreenScreenSlideTransitionEastEv>
}
 80023a8:	bd08      	pop	{r3, pc}

080023aa <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80023aa:	2200      	movs	r2, #0
 80023ac:	f04f 31ff 	mov.w	r1, #4294967295
 80023b0:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80023b4:	6082      	str	r2, [r0, #8]
    }
 80023b6:	4770      	bx	lr

080023b8 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80023b8:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80023ba:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80023bc:	4604      	mov	r4, r0
        setX(x);
 80023be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80023c0:	4615      	mov	r5, r2
        setX(x);
 80023c2:	4798      	blx	r3
        setY(y);
 80023c4:	6823      	ldr	r3, [r4, #0]
 80023c6:	4629      	mov	r1, r5
 80023c8:	4620      	mov	r0, r4
 80023ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80023cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80023d0:	4718      	bx	r3

080023d2 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80023d2:	b570      	push	{r4, r5, r6, lr}
 80023d4:	4604      	mov	r4, r0
 80023d6:	461d      	mov	r5, r3
 80023d8:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80023dc:	f7ff ffec 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80023e0:	6823      	ldr	r3, [r4, #0]
 80023e2:	4629      	mov	r1, r5
 80023e4:	4620      	mov	r0, r4
 80023e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80023e8:	4798      	blx	r3
        setHeight(height);
 80023ea:	6823      	ldr	r3, [r4, #0]
 80023ec:	4631      	mov	r1, r6
 80023ee:	4620      	mov	r0, r4
 80023f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80023f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80023f6:	4718      	bx	r3

080023f8 <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80023f8:	4a09      	ldr	r2, [pc, #36]	; (8002420 <_ZN8touchgfx3BoxC1Ev+0x28>)
 80023fa:	6002      	str	r2, [r0, #0]
          visible(true)
 80023fc:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002400:	2200      	movs	r2, #0
 8002402:	8481      	strh	r1, [r0, #36]	; 0x24
 8002404:	21ff      	movs	r1, #255	; 0xff
 8002406:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800240a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800240e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002412:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002416:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 800241a:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 800241c:	4770      	bx	lr
 800241e:	bf00      	nop
 8002420:	08023250 	.word	0x08023250

08002424 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002424:	4b1a      	ldr	r3, [pc, #104]	; (8002490 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002426:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002428:	881b      	ldrh	r3, [r3, #0]
 800242a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800242c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800242e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002430:	d92a      	bls.n	8002488 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002432:	4b18      	ldr	r3, [pc, #96]	; (8002494 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	b92b      	cbnz	r3, 8002444 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002438:	4b17      	ldr	r3, [pc, #92]	; (8002498 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800243a:	4a18      	ldr	r2, [pc, #96]	; (800249c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800243c:	4818      	ldr	r0, [pc, #96]	; (80024a0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800243e:	216c      	movs	r1, #108	; 0x6c
 8002440:	f01e f8a2 	bl	8020588 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002444:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002448:	4b16      	ldr	r3, [pc, #88]	; (80024a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002450:	4b15      	ldr	r3, [pc, #84]	; (80024a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002452:	6818      	ldr	r0, [r3, #0]
 8002454:	f002 fd7a 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002458:	682b      	ldr	r3, [r5, #0]
 800245a:	9001      	str	r0, [sp, #4]
 800245c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800245e:	4628      	mov	r0, r5
 8002460:	4798      	blx	r3
 8002462:	682b      	ldr	r3, [r5, #0]
 8002464:	9901      	ldr	r1, [sp, #4]
 8002466:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002468:	4604      	mov	r4, r0
 800246a:	4628      	mov	r0, r5
 800246c:	4798      	blx	r3
 800246e:	682b      	ldr	r3, [r5, #0]
 8002470:	9901      	ldr	r1, [sp, #4]
 8002472:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002474:	fb14 f400 	smulbb	r4, r4, r0
 8002478:	4628      	mov	r0, r5
 800247a:	4798      	blx	r3
 800247c:	b2a4      	uxth	r4, r4
 800247e:	4404      	add	r4, r0
 8002480:	f8a6 4046 	strh.w	r4, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002484:	b002      	add	sp, #8
 8002486:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002488:	2300      	movs	r3, #0
 800248a:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
    }
 800248e:	e7f9      	b.n	8002484 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x60>
 8002490:	20015018 	.word	0x20015018
 8002494:	20015014 	.word	0x20015014
 8002498:	0802206c 	.word	0x0802206c
 800249c:	080220ae 	.word	0x080220ae
 80024a0:	080220e9 	.word	0x080220e9
 80024a4:	2001501c 	.word	0x2001501c
 80024a8:	20015020 	.word	0x20015020

080024ac <_ZN8touchgfx8TextAreaC1Ev>:
 80024ac:	f44f 7180 	mov.w	r1, #256	; 0x100
 80024b0:	8481      	strh	r1, [r0, #36]	; 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024b2:	490d      	ldr	r1, [pc, #52]	; (80024e8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80024b4:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 80024b6:	490d      	ldr	r1, [pc, #52]	; (80024ec <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80024b8:	6281      	str	r1, [r0, #40]	; 0x28
 80024ba:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80024be:	8581      	strh	r1, [r0, #44]	; 0x2c
 80024c0:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
        : x(0), y(0), width(0), height(0)
 80024c4:	2200      	movs	r2, #0
 80024c6:	6341      	str	r1, [r0, #52]	; 0x34
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80024c8:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 80024cc:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80024d0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80024d4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80024d8:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 80024dc:	e9c0 1210 	strd	r1, r2, [r0, #64]	; 0x40
        : color(col)
 80024e0:	6302      	str	r2, [r0, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024e2:	8702      	strh	r2, [r0, #56]	; 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80024e4:	63c2      	str	r2, [r0, #60]	; 0x3c
    }
 80024e6:	4770      	bx	lr
 80024e8:	080231c0 	.word	0x080231c0
 80024ec:	080221b4 	.word	0x080221b4

080024f0 <_ZN21EndGameScreenViewBaseC1Ev>:
EndGameScreenViewBase::EndGameScreenViewBase() :
 80024f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024f4:	4604      	mov	r4, r0
 80024f6:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &EndGameScreenViewBase::buttonCallbackHandler)
 80024f8:	46a2      	mov	sl, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80024fa:	2500      	movs	r5, #0
 80024fc:	f00e fdcc 	bl	8011098 <_ZN8touchgfx6ScreenC1Ev>
 8002500:	4b6b      	ldr	r3, [pc, #428]	; (80026b0 <_ZN21EndGameScreenViewBaseC1Ev+0x1c0>)
 8002502:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002504:	f84a 3b40 	str.w	r3, [sl], #64
 8002508:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 800250c:	4650      	mov	r0, sl
 800250e:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8002512:	f7ff ff71 	bl	80023f8 <_ZN8touchgfx3BoxC1Ev>
 8002516:	4658      	mov	r0, fp
 8002518:	f7ff ff6e 	bl	80023f8 <_ZN8touchgfx3BoxC1Ev>
 800251c:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8002520:	4648      	mov	r0, r9
 8002522:	f00b fd5f 	bl	800dfe4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002526:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800252a:	4640      	mov	r0, r8
 800252c:	f7ff ffbe 	bl	80024ac <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8002530:	4638      	mov	r0, r7
 8002532:	f7ff ffbb 	bl	80024ac <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002536:	4b5f      	ldr	r3, [pc, #380]	; (80026b4 <_ZN21EndGameScreenViewBaseC1Ev+0x1c4>)
 8002538:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
        : pobject(pObject), pmemfun(pmemfun_1)
 800253c:	4b5e      	ldr	r3, [pc, #376]	; (80026b8 <_ZN21EndGameScreenViewBaseC1Ev+0x1c8>)
 800253e:	f8c4 5170 	str.w	r5, [r4, #368]	; 0x170
 8002542:	e9c4 3462 	strd	r3, r4, [r4, #392]	; 0x188
 8002546:	4b5d      	ldr	r3, [pc, #372]	; (80026bc <_ZN21EndGameScreenViewBaseC1Ev+0x1cc>)
 8002548:	e9c4 3564 	strd	r3, r5, [r4, #400]	; 0x190
    __background.setPosition(0, 0, 240, 320);
 800254c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002550:	462a      	mov	r2, r5
 8002552:	4629      	mov	r1, r5
 8002554:	4650      	mov	r0, sl
 8002556:	9300      	str	r3, [sp, #0]
 8002558:	23f0      	movs	r3, #240	; 0xf0
 800255a:	f7ff ff3a 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800255e:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002560:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002564:	4651      	mov	r1, sl
 8002566:	66a3      	str	r3, [r4, #104]	; 0x68
 8002568:	4630      	mov	r0, r6
 800256a:	f009 fac2 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setPosition(0, 0, 240, 320);
 800256e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002572:	462a      	mov	r2, r5
 8002574:	4629      	mov	r1, r5
 8002576:	4658      	mov	r0, fp
 8002578:	9300      	str	r3, [sp, #0]
 800257a:	23f0      	movs	r3, #240	; 0xf0
 800257c:	f7ff ff29 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002580:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002584:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002588:	4659      	mov	r1, fp
 800258a:	4630      	mov	r0, r6
 800258c:	f009 fab1 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 191);
 8002590:	4648      	mov	r0, r9
 8002592:	22bf      	movs	r2, #191	; 0xbf
 8002594:	2121      	movs	r1, #33	; 0x21
 8002596:	f7ff ff0f 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800259a:	2301      	movs	r3, #1
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID));
 800259c:	aa08      	add	r2, sp, #32
 800259e:	a907      	add	r1, sp, #28
 80025a0:	4648      	mov	r0, r9
 80025a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80025a6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80025aa:	f00b fab2 	bl	800db12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80025ae:	2303      	movs	r3, #3
        updateTextPosition();
 80025b0:	4648      	mov	r0, r9
 80025b2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80025b6:	f7ff ff35 	bl	8002424 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80025ba:	f04f 3aff 	mov.w	sl, #4294967295
    buttonWithLabel1.setAction(buttonCallback);
 80025be:	f504 73c4 	add.w	r3, r4, #392	; 0x188
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80025c2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80025c6:	4649      	mov	r1, r9
 80025c8:	4630      	mov	r0, r6
        colorPressed = col;
 80025ca:	e9c4 aa35 	strd	sl, sl, [r4, #212]	; 0xd4
 80025ce:	f009 fa90 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
 80025d2:	f10d 0908 	add.w	r9, sp, #8
    textArea1.setXY(53, 38);
 80025d6:	2226      	movs	r2, #38	; 0x26
 80025d8:	2135      	movs	r1, #53	; 0x35
 80025da:	4640      	mov	r0, r8
 80025dc:	f7ff feec 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 80025e0:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80025e4:	4641      	mov	r1, r8
 80025e6:	4648      	mov	r0, r9
        color = newColor;
 80025e8:	f8c4 a110 	str.w	sl, [r4, #272]	; 0x110
        boundingArea = calculateBoundingArea();
 80025ec:	f00a ff9a 	bl	800d524 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80025f0:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80025f4:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80025f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80025fc:	f8df b0e0 	ldr.w	fp, [pc, #224]	; 80026e0 <_ZN21EndGameScreenViewBaseC1Ev+0x1f0>
 8002600:	f8cd b020 	str.w	fp, [sp, #32]
 8002604:	2307      	movs	r3, #7
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FLUU));
 8002606:	a908      	add	r1, sp, #32
 8002608:	4640      	mov	r0, r8
 800260a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800260e:	f00b fa23 	bl	800da58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002612:	4641      	mov	r1, r8
 8002614:	4630      	mov	r0, r6
 8002616:	f009 fa6c 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setPosition(33, 109, 185, 37);
 800261a:	2325      	movs	r3, #37	; 0x25
 800261c:	226d      	movs	r2, #109	; 0x6d
 800261e:	9300      	str	r3, [sp, #0]
 8002620:	2121      	movs	r1, #33	; 0x21
 8002622:	23b9      	movs	r3, #185	; 0xb9
 8002624:	4638      	mov	r0, r7
 8002626:	f7ff fed4 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800262a:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
        linespace = space;
 800262e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8002632:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002636:	f8c4 a158 	str.w	sl, [r4, #344]	; 0x158
        boundingArea = calculateBoundingArea();
 800263a:	4639      	mov	r1, r7
 800263c:	4648      	mov	r0, r9
 800263e:	4798      	blx	r3
 8002640:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002644:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8002648:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800264c:	4b1c      	ldr	r3, [pc, #112]	; (80026c0 <_ZN21EndGameScreenViewBaseC1Ev+0x1d0>)
 800264e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T_PLAYER1).getText());
 8002650:	f504 75ba 	add.w	r5, r4, #372	; 0x174
 8002654:	b92b      	cbnz	r3, 8002662 <_ZN21EndGameScreenViewBaseC1Ev+0x172>
 8002656:	4b1b      	ldr	r3, [pc, #108]	; (80026c4 <_ZN21EndGameScreenViewBaseC1Ev+0x1d4>)
 8002658:	4a1b      	ldr	r2, [pc, #108]	; (80026c8 <_ZN21EndGameScreenViewBaseC1Ev+0x1d8>)
 800265a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800265c:	481b      	ldr	r0, [pc, #108]	; (80026cc <_ZN21EndGameScreenViewBaseC1Ev+0x1dc>)
 800265e:	f01d ff93 	bl	8020588 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002662:	4b1b      	ldr	r3, [pc, #108]	; (80026d0 <_ZN21EndGameScreenViewBaseC1Ev+0x1e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002664:	881b      	ldrh	r3, [r3, #0]
 8002666:	2b06      	cmp	r3, #6
 8002668:	d803      	bhi.n	8002672 <_ZN21EndGameScreenViewBaseC1Ev+0x182>
 800266a:	4b1a      	ldr	r3, [pc, #104]	; (80026d4 <_ZN21EndGameScreenViewBaseC1Ev+0x1e4>)
 800266c:	4a16      	ldr	r2, [pc, #88]	; (80026c8 <_ZN21EndGameScreenViewBaseC1Ev+0x1d8>)
 800266e:	2161      	movs	r1, #97	; 0x61
 8002670:	e7f4      	b.n	800265c <_ZN21EndGameScreenViewBaseC1Ev+0x16c>
        return texts->getText(typedTextId);
 8002672:	4b19      	ldr	r3, [pc, #100]	; (80026d8 <_ZN21EndGameScreenViewBaseC1Ev+0x1e8>)
 8002674:	2106      	movs	r1, #6
 8002676:	6818      	ldr	r0, [r3, #0]
 8002678:	f002 fc68 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800267c:	4a17      	ldr	r2, [pc, #92]	; (80026dc <_ZN21EndGameScreenViewBaseC1Ev+0x1ec>)
 800267e:	4603      	mov	r3, r0
 8002680:	210a      	movs	r1, #10
 8002682:	4628      	mov	r0, r5
 8002684:	f010 f9be 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002688:	2304      	movs	r3, #4
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4PHE));
 800268a:	a908      	add	r1, sp, #32
 800268c:	4638      	mov	r0, r7
        wc1 = value;
 800268e:	f8c4 5170 	str.w	r5, [r4, #368]	; 0x170
 8002692:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002696:	f8cd b020 	str.w	fp, [sp, #32]
 800269a:	f00b f9dd 	bl	800da58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800269e:	4630      	mov	r0, r6
 80026a0:	4639      	mov	r1, r7
 80026a2:	f009 fa26 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80026a6:	4620      	mov	r0, r4
 80026a8:	b00b      	add	sp, #44	; 0x2c
 80026aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026ae:	bf00      	nop
 80026b0:	0802226c 	.word	0x0802226c
 80026b4:	080221c4 	.word	0x080221c4
 80026b8:	08022254 	.word	0x08022254
 80026bc:	08002395 	.word	0x08002395
 80026c0:	20015014 	.word	0x20015014
 80026c4:	0802206c 	.word	0x0802206c
 80026c8:	0802216e 	.word	0x0802216e
 80026cc:	080220e9 	.word	0x080220e9
 80026d0:	20015018 	.word	0x20015018
 80026d4:	08022130 	.word	0x08022130
 80026d8:	20015020 	.word	0x20015020
 80026dc:	080221a6 	.word	0x080221a6
 80026e0:	080221b4 	.word	0x080221b4

080026e4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80026e4:	4770      	bx	lr

080026e6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80026e6:	4770      	bx	lr

080026e8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80026e8:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80026ec:	6808      	ldr	r0, [r1, #0]
 80026ee:	6849      	ldr	r1, [r1, #4]
 80026f0:	c303      	stmia	r3!, {r0, r1}
    }
 80026f2:	4770      	bx	lr

080026f4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80026f4:	4770      	bx	lr

080026f6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80026f6:	4770      	bx	lr

080026f8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80026f8:	6041      	str	r1, [r0, #4]
    }
 80026fa:	4770      	bx	lr

080026fc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80026fc:	4770      	bx	lr
	...

08002700 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002700:	4b06      	ldr	r3, [pc, #24]	; (800271c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002702:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002706:	2300      	movs	r3, #0
 8002708:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// HomeScreen

void FrontendApplicationBase::gotoHomeScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHomeScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800270c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002710:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002714:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoHomeScreenScreenNoTransition();
    }
 8002718:	4770      	bx	lr
 800271a:	bf00      	nop
 800271c:	080028a1 	.word	0x080028a1

08002720 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002720:	2301      	movs	r3, #1
 8002722:	7203      	strb	r3, [r0, #8]
    }
 8002724:	4770      	bx	lr

08002726 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8002726:	4770      	bx	lr

08002728 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002728:	4770      	bx	lr

0800272a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800272a:	4770      	bx	lr

0800272c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800272c:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800272e:	68c2      	ldr	r2, [r0, #12]
 8002730:	6841      	ldr	r1, [r0, #4]
 8002732:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002734:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002736:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800273a:	07d2      	lsls	r2, r2, #31
 800273c:	bf48      	it	mi
 800273e:	590a      	ldrmi	r2, [r1, r4]
 8002740:	689b      	ldr	r3, [r3, #8]
    }
 8002742:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002746:	bf48      	it	mi
 8002748:	58d3      	ldrmi	r3, [r2, r3]
 800274a:	4718      	bx	r3

0800274c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800274c:	6843      	ldr	r3, [r0, #4]
 800274e:	b12b      	cbz	r3, 800275c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002750:	6883      	ldr	r3, [r0, #8]
 8002752:	b92b      	cbnz	r3, 8002760 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002754:	68c0      	ldr	r0, [r0, #12]
 8002756:	f000 0001 	and.w	r0, r0, #1
 800275a:	4770      	bx	lr
 800275c:	4618      	mov	r0, r3
 800275e:	4770      	bx	lr
 8002760:	2001      	movs	r0, #1
    }
 8002762:	4770      	bx	lr

08002764 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002764:	b510      	push	{r4, lr}
 8002766:	210c      	movs	r1, #12
 8002768:	4604      	mov	r4, r0
 800276a:	f01d fe5d 	bl	8020428 <_ZdlPvj>
 800276e:	4620      	mov	r0, r4
 8002770:	bd10      	pop	{r4, pc}

08002772 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002772:	b510      	push	{r4, lr}
 8002774:	2110      	movs	r1, #16
 8002776:	4604      	mov	r4, r0
 8002778:	f01d fe56 	bl	8020428 <_ZdlPvj>
 800277c:	4620      	mov	r0, r4
 800277e:	bd10      	pop	{r4, pc}

08002780 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002780:	b510      	push	{r4, lr}
 8002782:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002786:	4604      	mov	r4, r0
 8002788:	f01d fe4e 	bl	8020428 <_ZdlPvj>
 800278c:	4620      	mov	r0, r4
 800278e:	bd10      	pop	{r4, pc}

08002790 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8002790:	b510      	push	{r4, lr}
 8002792:	2140      	movs	r1, #64	; 0x40
 8002794:	4604      	mov	r4, r0
 8002796:	f01d fe47 	bl	8020428 <_ZdlPvj>
 800279a:	4620      	mov	r0, r4
 800279c:	bd10      	pop	{r4, pc}

0800279e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800279e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80027a0:	f00d f93a 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
 80027a4:	6803      	ldr	r3, [r0, #0]
    }
 80027a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80027aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80027ac:	4718      	bx	r3
	...

080027b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80027b0:	4b05      	ldr	r3, [pc, #20]	; (80027c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80027b2:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80027b4:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80027b6:	b12b      	cbz	r3, 80027c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 80027b8:	6840      	ldr	r0, [r0, #4]
 80027ba:	b118      	cbz	r0, 80027c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 80027bc:	6803      	ldr	r3, [r0, #0]
 80027be:	310c      	adds	r1, #12
 80027c0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80027c2:	4718      	bx	r3
        }
    }
 80027c4:	4770      	bx	lr
 80027c6:	bf00      	nop
 80027c8:	20014fc3 	.word	0x20014fc3

080027cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 80027cc:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 80027ce:	b570      	push	{r4, r5, r6, lr}
 80027d0:	4605      	mov	r5, r0
        if (done)
 80027d2:	b9bb      	cbnz	r3, 8002804 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 80027d4:	6840      	ldr	r0, [r0, #4]
 80027d6:	6803      	ldr	r3, [r0, #0]
 80027d8:	69db      	ldr	r3, [r3, #28]
 80027da:	4798      	blx	r3
 80027dc:	4604      	mov	r4, r0
        while (d)
 80027de:	b14c      	cbz	r4, 80027f4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x28>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 80027e0:	88a1      	ldrh	r1, [r4, #4]
 80027e2:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 80027e4:	1ac9      	subs	r1, r1, r3
 80027e6:	6823      	ldr	r3, [r4, #0]
 80027e8:	4620      	mov	r0, r4
 80027ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80027ec:	b209      	sxth	r1, r1
 80027ee:	4798      	blx	r3
        return nextSibling;
 80027f0:	69a4      	ldr	r4, [r4, #24]
        while (d)
 80027f2:	e7f4      	b.n	80027de <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 80027f4:	6868      	ldr	r0, [r5, #4]
 80027f6:	6803      	ldr	r3, [r0, #0]
 80027f8:	f105 010c 	add.w	r1, r5, #12
 80027fc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 80027fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 8002802:	4718      	bx	r3
    }
 8002804:	bd70      	pop	{r4, r5, r6, pc}

08002806 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002806:	b570      	push	{r4, r5, r6, lr}
 8002808:	4604      	mov	r4, r0
        animationCounter++;
 800280a:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 800280e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 8002812:	3001      	adds	r0, #1
 8002814:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002816:	4298      	cmp	r0, r3
        animationCounter++;
 8002818:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 800281c:	d905      	bls.n	800282a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 800281e:	2301      	movs	r3, #1
 8002820:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002822:	2300      	movs	r3, #0
 8002824:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8002828:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800282a:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800282e:	2100      	movs	r1, #0
 8002830:	f00e fde4 	bl	80113fc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002834:	f010 0201 	ands.w	r2, r0, #1
 8002838:	b283      	uxth	r3, r0
 800283a:	d006      	beq.n	800284a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800283c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002840:	2800      	cmp	r0, #0
 8002842:	bfd8      	it	le
 8002844:	460a      	movle	r2, r1
 8002846:	1898      	adds	r0, r3, r2
 8002848:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 800284a:	8a23      	ldrh	r3, [r4, #16]
 800284c:	1ac0      	subs	r0, r0, r3
 800284e:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8002850:	6860      	ldr	r0, [r4, #4]
 8002852:	6803      	ldr	r3, [r0, #0]
 8002854:	69db      	ldr	r3, [r3, #28]
 8002856:	4798      	blx	r3
 8002858:	4605      	mov	r5, r0
        while (d)
 800285a:	b14d      	cbz	r5, 8002870 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 800285c:	88a9      	ldrh	r1, [r5, #4]
 800285e:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8002860:	4419      	add	r1, r3
 8002862:	682b      	ldr	r3, [r5, #0]
 8002864:	4628      	mov	r0, r5
 8002866:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002868:	b209      	sxth	r1, r1
 800286a:	4798      	blx	r3
 800286c:	69ad      	ldr	r5, [r5, #24]
        while (d)
 800286e:	e7f4      	b.n	800285a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 8002870:	6860      	ldr	r0, [r4, #4]
 8002872:	6803      	ldr	r3, [r0, #0]
    }
 8002874:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8002878:	695b      	ldr	r3, [r3, #20]
 800287a:	4718      	bx	r3

0800287c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800287c:	b510      	push	{r4, lr}
 800287e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002880:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8002884:	b158      	cbz	r0, 800289e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002886:	6803      	ldr	r3, [r0, #0]
 8002888:	68db      	ldr	r3, [r3, #12]
 800288a:	4798      	blx	r3
 800288c:	b138      	cbz	r0, 800289e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800288e:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8002892:	6803      	ldr	r3, [r0, #0]
 8002894:	689b      	ldr	r3, [r3, #8]
 8002896:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002898:	2300      	movs	r3, #0
 800289a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800289e:	bd10      	pop	{r4, pc}

080028a0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoHomeScreenScreenNoTransitionImpl()
{
 80028a0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HomeScreenView, HomeScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80028a4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80028a8:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80028aa:	68a8      	ldr	r0, [r5, #8]
 80028ac:	6803      	ldr	r3, [r0, #0]
 80028ae:	6a1b      	ldr	r3, [r3, #32]
 80028b0:	4798      	blx	r3
 80028b2:	f5b0 7ff4 	cmp.w	r0, #488	; 0x1e8
 80028b6:	d205      	bcs.n	80028c4 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x24>
 80028b8:	4b45      	ldr	r3, [pc, #276]	; (80029d0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x130>)
 80028ba:	4a46      	ldr	r2, [pc, #280]	; (80029d4 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x134>)
 80028bc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80028be:	4846      	ldr	r0, [pc, #280]	; (80029d8 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x138>)
 80028c0:	f01d fe62 	bl	8020588 <__assert_func>
 80028c4:	6868      	ldr	r0, [r5, #4]
 80028c6:	6803      	ldr	r3, [r0, #0]
 80028c8:	6a1b      	ldr	r3, [r3, #32]
 80028ca:	4798      	blx	r3
 80028cc:	280f      	cmp	r0, #15
 80028ce:	d803      	bhi.n	80028d8 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x38>
 80028d0:	4b42      	ldr	r3, [pc, #264]	; (80029dc <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x13c>)
 80028d2:	4a40      	ldr	r2, [pc, #256]	; (80029d4 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x134>)
 80028d4:	21a4      	movs	r1, #164	; 0xa4
 80028d6:	e7f2      	b.n	80028be <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80028d8:	68e8      	ldr	r0, [r5, #12]
 80028da:	6803      	ldr	r3, [r0, #0]
 80028dc:	6a1b      	ldr	r3, [r3, #32]
 80028de:	4798      	blx	r3
 80028e0:	280b      	cmp	r0, #11
 80028e2:	d803      	bhi.n	80028ec <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x4c>
 80028e4:	4b3e      	ldr	r3, [pc, #248]	; (80029e0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x140>)
 80028e6:	4a3b      	ldr	r2, [pc, #236]	; (80029d4 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x134>)
 80028e8:	21a5      	movs	r1, #165	; 0xa5
 80028ea:	e7e8      	b.n	80028be <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80028ec:	f00d f894 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80028f0:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80029e8 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80028f4:	3004      	adds	r0, #4
 80028f6:	f00d f8b4 	bl	800fa62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80028fa:	f8d9 0000 	ldr.w	r0, [r9]
 80028fe:	b110      	cbz	r0, 8002906 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002900:	6803      	ldr	r3, [r0, #0]
 8002902:	68db      	ldr	r3, [r3, #12]
 8002904:	4798      	blx	r3
    if (*currentTrans)
 8002906:	f8d9 0000 	ldr.w	r0, [r9]
 800290a:	b110      	cbz	r0, 8002912 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 800290c:	6803      	ldr	r3, [r0, #0]
 800290e:	681b      	ldr	r3, [r3, #0]
 8002910:	4798      	blx	r3
    if (*currentScreen)
 8002912:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80029ec <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x14c>
 8002916:	f8d8 0000 	ldr.w	r0, [r8]
 800291a:	b110      	cbz	r0, 8002922 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800291c:	6803      	ldr	r3, [r0, #0]
 800291e:	695b      	ldr	r3, [r3, #20]
 8002920:	4798      	blx	r3
    if (*currentPresenter)
 8002922:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002926:	b110      	cbz	r0, 800292e <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002928:	6803      	ldr	r3, [r0, #0]
 800292a:	685b      	ldr	r3, [r3, #4]
 800292c:	4798      	blx	r3
    if (*currentScreen)
 800292e:	f8d8 0000 	ldr.w	r0, [r8]
 8002932:	b110      	cbz	r0, 800293a <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002934:	6803      	ldr	r3, [r0, #0]
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	4798      	blx	r3
    if (*currentPresenter)
 800293a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800293e:	b110      	cbz	r0, 8002946 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002940:	6803      	ldr	r3, [r0, #0]
 8002942:	689b      	ldr	r3, [r3, #8]
 8002944:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002946:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002948:	6803      	ldr	r3, [r0, #0]
 800294a:	2100      	movs	r1, #0
 800294c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800294e:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002950:	f04f 0b00 	mov.w	fp, #0
 8002954:	4b23      	ldr	r3, [pc, #140]	; (80029e4 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x144>)
 8002956:	6003      	str	r3, [r0, #0]
 8002958:	4604      	mov	r4, r0
 800295a:	f8c0 b004 	str.w	fp, [r0, #4]
 800295e:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002962:	68a8      	ldr	r0, [r5, #8]
 8002964:	6803      	ldr	r3, [r0, #0]
 8002966:	4659      	mov	r1, fp
 8002968:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800296a:	4798      	blx	r3
 800296c:	4606      	mov	r6, r0
 800296e:	f003 fa13 	bl	8005d98 <_ZN14HomeScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002972:	6868      	ldr	r0, [r5, #4]
 8002974:	6803      	ldr	r3, [r0, #0]
 8002976:	4659      	mov	r1, fp
 8002978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800297a:	4798      	blx	r3
 800297c:	4631      	mov	r1, r6
 800297e:	4605      	mov	r5, r0
 8002980:	f003 f9e4 	bl	8005d4c <_ZN19HomeScreenPresenterC1ER14HomeScreenView>
    *currentTrans = newTransition;
 8002984:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002988:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800298c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002990:	b1e5      	cbz	r5, 80029cc <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x12c>
 8002992:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002994:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002998:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800299a:	f8c5 a008 	str.w	sl, [r5, #8]
 800299e:	4630      	mov	r0, r6
 80029a0:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80029a2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80029a4:	4798      	blx	r3
    newPresenter->activate();
 80029a6:	682b      	ldr	r3, [r5, #0]
 80029a8:	4628      	mov	r0, r5
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80029ae:	4621      	mov	r1, r4
 80029b0:	4630      	mov	r0, r6
 80029b2:	f00e fd1d 	bl	80113f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80029b6:	6823      	ldr	r3, [r4, #0]
 80029b8:	4620      	mov	r0, r4
 80029ba:	691b      	ldr	r3, [r3, #16]
 80029bc:	4798      	blx	r3
    newTransition->invalidate();
 80029be:	6823      	ldr	r3, [r4, #0]
 80029c0:	695b      	ldr	r3, [r3, #20]
 80029c2:	4620      	mov	r0, r4
}
 80029c4:	b001      	add	sp, #4
 80029c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029ca:	4718      	bx	r3
    model->bind(newPresenter);
 80029cc:	462b      	mov	r3, r5
 80029ce:	e7e1      	b.n	8002994 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0xf4>
 80029d0:	08022298 	.word	0x08022298
 80029d4:	08022326 	.word	0x08022326
 80029d8:	08022430 	.word	0x08022430
 80029dc:	08022477 	.word	0x08022477
 80029e0:	0802251a 	.word	0x0802251a
 80029e4:	08022ab4 	.word	0x08022ab4
 80029e8:	20015004 	.word	0x20015004
 80029ec:	20015000 	.word	0x20015000

080029f0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80029f0:	4b04      	ldr	r3, [pc, #16]	; (8002a04 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80029f8:	b10a      	cbz	r2, 80029fe <_ZN8touchgfx3HAL3lcdEv+0xe>
 80029fa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80029fc:	b900      	cbnz	r0, 8002a00 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80029fe:	6898      	ldr	r0, [r3, #8]
    }
 8002a00:	4770      	bx	lr
 8002a02:	bf00      	nop
 8002a04:	20014fc4 	.word	0x20014fc4

08002a08 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a0a:	4604      	mov	r4, r0
 8002a0c:	4617      	mov	r7, r2
 8002a0e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002a10:	f00d f8c4 	bl	800fb9c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002a14:	4b10      	ldr	r3, [pc, #64]	; (8002a58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002a16:	601c      	str	r4, [r3, #0]
      model(m)
 8002a18:	4b10      	ldr	r3, [pc, #64]	; (8002a5c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002a1a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002a1c:	4b10      	ldr	r3, [pc, #64]	; (8002a60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
          pendingScreenTransitionCallback(0)
 8002a1e:	2500      	movs	r5, #0
 8002a20:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8002a24:	4b0f      	ldr	r3, [pc, #60]	; (8002a64 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002a26:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002a2a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002a2c:	6803      	ldr	r3, [r0, #0]
 8002a2e:	2101      	movs	r1, #1
 8002a30:	689b      	ldr	r3, [r3, #8]
 8002a32:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8002a36:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002a3a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002a3c:	4628      	mov	r0, r5
 8002a3e:	f002 fa49 	bl	8004ed4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002a42:	f7ff ffd5 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 8002a46:	f016 f97e 	bl	8018d46 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002a4a:	f7ff ffd1 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 8002a4e:	f016 f9f5 	bl	8018e3c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002a52:	4620      	mov	r0, r4
 8002a54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a56:	bf00      	nop
 8002a58:	20015010 	.word	0x20015010
 8002a5c:	08022a60 	.word	0x08022a60
 8002a60:	08022a48 	.word	0x08022a48
 8002a64:	20014fc4 	.word	0x20014fc4

08002a68 <_ZN23FrontendApplicationBase32gotoHomeScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a68:	4b06      	ldr	r3, [pc, #24]	; (8002a84 <_ZN23FrontendApplicationBase32gotoHomeScreenScreenNoTransitionEv+0x1c>)
 8002a6a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002a6e:	2300      	movs	r3, #0
 8002a70:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002a74:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002a78:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002a7c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002a80:	4770      	bx	lr
 8002a82:	bf00      	nop
 8002a84:	080028a1 	.word	0x080028a1

08002a88 <_ZN23FrontendApplicationBase39gotoHomeScreenScreenSlideTransitionEastEv>:
 8002a88:	4b06      	ldr	r3, [pc, #24]	; (8002aa4 <_ZN23FrontendApplicationBase39gotoHomeScreenScreenSlideTransitionEastEv+0x1c>)
 8002a8a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002a8e:	2300      	movs	r3, #0
 8002a90:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150

void FrontendApplicationBase::gotoHomeScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHomeScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002a94:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002a98:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002a9c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002aa0:	4770      	bx	lr
 8002aa2:	bf00      	nop
 8002aa4:	08002f45 	.word	0x08002f45

08002aa8 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>:
 8002aa8:	4b06      	ldr	r3, [pc, #24]	; (8002ac4 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv+0x1c>)
 8002aaa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002aae:	2300      	movs	r3, #0
 8002ab0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// GameScreen

void FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002ab4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002ab8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002abc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002ac0:	4770      	bx	lr
 8002ac2:	bf00      	nop
 8002ac4:	08002e05 	.word	0x08002e05

08002ac8 <_ZN23FrontendApplicationBase43gotoOpponentScreenScreenSlideTransitionEastEv>:
 8002ac8:	4b06      	ldr	r3, [pc, #24]	; (8002ae4 <_ZN23FrontendApplicationBase43gotoOpponentScreenScreenSlideTransitionEastEv+0x1c>)
 8002aca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002ace:	2300      	movs	r3, #0
 8002ad0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// OpponentScreen

void FrontendApplicationBase::gotoOpponentScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoOpponentScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002ad4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002ad8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002adc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002ae0:	4770      	bx	lr
 8002ae2:	bf00      	nop
 8002ae4:	08002cc5 	.word	0x08002cc5

08002ae8 <_ZN23FrontendApplicationBase42gotoEndGameScreenScreenSlideTransitionEastEv>:
 8002ae8:	4b06      	ldr	r3, [pc, #24]	; (8002b04 <_ZN23FrontendApplicationBase42gotoEndGameScreenScreenSlideTransitionEastEv+0x1c>)
 8002aea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002aee:	2300      	movs	r3, #0
 8002af0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// EndGameScreen

void FrontendApplicationBase::gotoEndGameScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEndGameScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002af4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002af8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002afc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002b00:	4770      	bx	lr
 8002b02:	bf00      	nop
 8002b04:	08002b85 	.word	0x08002b85

08002b08 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
 8002b08:	6803      	ldr	r3, [r0, #0]
 8002b0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b0c:	4718      	bx	r3
	...

08002b10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8002b10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
          relativeValue(0)
 8002b14:	4605      	mov	r5, r0
 8002b16:	2600      	movs	r6, #0
 8002b18:	4b16      	ldr	r3, [pc, #88]	; (8002b74 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 8002b1a:	6046      	str	r6, [r0, #4]
 8002b1c:	7206      	strb	r6, [r0, #8]
 8002b1e:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8002b22:	4604      	mov	r4, r0
          relativeValue(0)
 8002b24:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8002b26:	460f      	mov	r7, r1
          relativeValue(0)
 8002b28:	f00a f9e8 	bl	800cefc <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8002b2c:	4b12      	ldr	r3, [pc, #72]	; (8002b78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
          relativeValue(0)
 8002b2e:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8002b32:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8002b34:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8002b38:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8002b3a:	b923      	cbnz	r3, 8002b46 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x36>
            done = true;
 8002b3c:	2301      	movs	r3, #1
 8002b3e:	7223      	strb	r3, [r4, #8]
    }
 8002b40:	4620      	mov	r0, r4
 8002b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002b46:	4b0d      	ldr	r3, [pc, #52]	; (8002b7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x6c>)
 8002b48:	4f0d      	ldr	r7, [pc, #52]	; (8002b80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x70>)
 8002b4a:	f9b3 8000 	ldrsh.w	r8, [r3]
        setX(x);
 8002b4e:	68e3      	ldr	r3, [r4, #12]
        setWidth(width);
 8002b50:	f9b7 1000 	ldrsh.w	r1, [r7]
 8002b54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
        rect.x = x;
 8002b56:	6126      	str	r6, [r4, #16]
        setWidth(width);
 8002b58:	4628      	mov	r0, r5
 8002b5a:	4798      	blx	r3
        setHeight(height);
 8002b5c:	68e3      	ldr	r3, [r4, #12]
 8002b5e:	4641      	mov	r1, r8
 8002b60:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b62:	4628      	mov	r0, r5
 8002b64:	4798      	blx	r3
        snapshot.makeSnapshot();
 8002b66:	4628      	mov	r0, r5
 8002b68:	f00a f943 	bl	800cdf2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 8002b6c:	883b      	ldrh	r3, [r7, #0]
 8002b6e:	425b      	negs	r3, r3
 8002b70:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8002b72:	e7e5      	b.n	8002b40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x30>
 8002b74:	08022ad8 	.word	0x08022ad8
 8002b78:	20014fc3 	.word	0x20014fc3
 8002b7c:	20014fba 	.word	0x20014fba
 8002b80:	20014fb8 	.word	0x20014fb8

08002b84 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoEndGameScreenScreenSlideTransitionEastImpl()
{
 8002b84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<EndGameScreenView, EndGameScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b88:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8002b8c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002b8e:	68a0      	ldr	r0, [r4, #8]
 8002b90:	6803      	ldr	r3, [r0, #0]
 8002b92:	6a1b      	ldr	r3, [r3, #32]
 8002b94:	4798      	blx	r3
 8002b96:	f5b0 7fcc 	cmp.w	r0, #408	; 0x198
 8002b9a:	d205      	bcs.n	8002ba8 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x24>
 8002b9c:	4b42      	ldr	r3, [pc, #264]	; (8002ca8 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x124>)
 8002b9e:	4a43      	ldr	r2, [pc, #268]	; (8002cac <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002ba0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002ba2:	4843      	ldr	r0, [pc, #268]	; (8002cb0 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x12c>)
 8002ba4:	f01d fcf0 	bl	8020588 <__assert_func>
 8002ba8:	6860      	ldr	r0, [r4, #4]
 8002baa:	6803      	ldr	r3, [r0, #0]
 8002bac:	6a1b      	ldr	r3, [r3, #32]
 8002bae:	4798      	blx	r3
 8002bb0:	280f      	cmp	r0, #15
 8002bb2:	d803      	bhi.n	8002bbc <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x38>
 8002bb4:	4b3f      	ldr	r3, [pc, #252]	; (8002cb4 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x130>)
 8002bb6:	4a3d      	ldr	r2, [pc, #244]	; (8002cac <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002bb8:	21a4      	movs	r1, #164	; 0xa4
 8002bba:	e7f2      	b.n	8002ba2 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bbc:	68e0      	ldr	r0, [r4, #12]
 8002bbe:	6803      	ldr	r3, [r0, #0]
 8002bc0:	6a1b      	ldr	r3, [r3, #32]
 8002bc2:	4798      	blx	r3
 8002bc4:	283f      	cmp	r0, #63	; 0x3f
 8002bc6:	d803      	bhi.n	8002bd0 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x4c>
 8002bc8:	4b3b      	ldr	r3, [pc, #236]	; (8002cb8 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x134>)
 8002bca:	4a38      	ldr	r2, [pc, #224]	; (8002cac <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002bcc:	21a5      	movs	r1, #165	; 0xa5
 8002bce:	e7e8      	b.n	8002ba2 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002bd0:	f00c ff22 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002bd4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8002cbc <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x138>
 8002bd8:	3004      	adds	r0, #4
 8002bda:	f00c ff42 	bl	800fa62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002bde:	f8d9 0000 	ldr.w	r0, [r9]
 8002be2:	b110      	cbz	r0, 8002bea <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002be4:	6803      	ldr	r3, [r0, #0]
 8002be6:	68db      	ldr	r3, [r3, #12]
 8002be8:	4798      	blx	r3
    if (*currentTrans)
 8002bea:	f8d9 0000 	ldr.w	r0, [r9]
 8002bee:	b110      	cbz	r0, 8002bf6 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8002bf0:	6803      	ldr	r3, [r0, #0]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	4798      	blx	r3
    if (*currentScreen)
 8002bf6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002cc0 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x13c>
 8002bfa:	f8d8 0000 	ldr.w	r0, [r8]
 8002bfe:	b110      	cbz	r0, 8002c06 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002c00:	6803      	ldr	r3, [r0, #0]
 8002c02:	695b      	ldr	r3, [r3, #20]
 8002c04:	4798      	blx	r3
    if (*currentPresenter)
 8002c06:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c0a:	b110      	cbz	r0, 8002c12 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002c0c:	6803      	ldr	r3, [r0, #0]
 8002c0e:	685b      	ldr	r3, [r3, #4]
 8002c10:	4798      	blx	r3
    if (*currentScreen)
 8002c12:	f8d8 0000 	ldr.w	r0, [r8]
 8002c16:	b110      	cbz	r0, 8002c1e <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002c18:	6803      	ldr	r3, [r0, #0]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	4798      	blx	r3
    if (*currentPresenter)
 8002c1e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c22:	b110      	cbz	r0, 8002c2a <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002c24:	6803      	ldr	r3, [r0, #0]
 8002c26:	689b      	ldr	r3, [r3, #8]
 8002c28:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c2a:	68e0      	ldr	r0, [r4, #12]
 8002c2c:	2100      	movs	r1, #0
 8002c2e:	f7ff ff6b 	bl	8002b08 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8002c32:	2114      	movs	r1, #20
 8002c34:	4605      	mov	r5, r0
 8002c36:	f7ff ff6b 	bl	8002b10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c3a:	68a0      	ldr	r0, [r4, #8]
 8002c3c:	6803      	ldr	r3, [r0, #0]
 8002c3e:	2100      	movs	r1, #0
 8002c40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c42:	4798      	blx	r3
 8002c44:	4606      	mov	r6, r0
 8002c46:	f002 f9dd 	bl	8005004 <_ZN17EndGameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c4a:	6860      	ldr	r0, [r4, #4]
 8002c4c:	6803      	ldr	r3, [r0, #0]
 8002c4e:	2100      	movs	r1, #0
 8002c50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c52:	4798      	blx	r3
 8002c54:	4631      	mov	r1, r6
 8002c56:	4604      	mov	r4, r0
 8002c58:	f002 f9ae 	bl	8004fb8 <_ZN22EndGameScreenPresenterC1ER17EndGameScreenView>
    *currentTrans = newTransition;
 8002c5c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002c60:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002c64:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002c68:	b1dc      	cbz	r4, 8002ca2 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x11e>
 8002c6a:	1d23      	adds	r3, r4, #4
 8002c6c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c70:	6833      	ldr	r3, [r6, #0]
 8002c72:	f8c4 a008 	str.w	sl, [r4, #8]
 8002c76:	4630      	mov	r0, r6
 8002c78:	68db      	ldr	r3, [r3, #12]
 8002c7a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002c7c:	4798      	blx	r3
    newPresenter->activate();
 8002c7e:	6823      	ldr	r3, [r4, #0]
 8002c80:	4620      	mov	r0, r4
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c86:	4629      	mov	r1, r5
 8002c88:	4630      	mov	r0, r6
 8002c8a:	f00e fbb1 	bl	80113f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002c8e:	682b      	ldr	r3, [r5, #0]
 8002c90:	4628      	mov	r0, r5
 8002c92:	691b      	ldr	r3, [r3, #16]
 8002c94:	4798      	blx	r3
    newTransition->invalidate();
 8002c96:	682b      	ldr	r3, [r5, #0]
 8002c98:	4628      	mov	r0, r5
 8002c9a:	695b      	ldr	r3, [r3, #20]
}
 8002c9c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002ca0:	4718      	bx	r3
    model->bind(newPresenter);
 8002ca2:	4623      	mov	r3, r4
 8002ca4:	e7e2      	b.n	8002c6c <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0xe8>
 8002ca6:	bf00      	nop
 8002ca8:	08022298 	.word	0x08022298
 8002cac:	080225bd 	.word	0x080225bd
 8002cb0:	08022430 	.word	0x08022430
 8002cb4:	08022477 	.word	0x08022477
 8002cb8:	0802251a 	.word	0x0802251a
 8002cbc:	20015004 	.word	0x20015004
 8002cc0:	20015000 	.word	0x20015000

08002cc4 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv>:
{
 8002cc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<OpponentScreenView, OpponentScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002cc8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8002ccc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002cce:	68a0      	ldr	r0, [r4, #8]
 8002cd0:	6803      	ldr	r3, [r0, #0]
 8002cd2:	6a1b      	ldr	r3, [r3, #32]
 8002cd4:	4798      	blx	r3
 8002cd6:	f641 637b 	movw	r3, #7803	; 0x1e7b
 8002cda:	4298      	cmp	r0, r3
 8002cdc:	d805      	bhi.n	8002cea <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x26>
 8002cde:	4b42      	ldr	r3, [pc, #264]	; (8002de8 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x124>)
 8002ce0:	4a42      	ldr	r2, [pc, #264]	; (8002dec <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x128>)
 8002ce2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002ce4:	4842      	ldr	r0, [pc, #264]	; (8002df0 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x12c>)
 8002ce6:	f01d fc4f 	bl	8020588 <__assert_func>
 8002cea:	6860      	ldr	r0, [r4, #4]
 8002cec:	6803      	ldr	r3, [r0, #0]
 8002cee:	6a1b      	ldr	r3, [r3, #32]
 8002cf0:	4798      	blx	r3
 8002cf2:	280f      	cmp	r0, #15
 8002cf4:	d803      	bhi.n	8002cfe <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x3a>
 8002cf6:	4b3f      	ldr	r3, [pc, #252]	; (8002df4 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x130>)
 8002cf8:	4a3c      	ldr	r2, [pc, #240]	; (8002dec <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x128>)
 8002cfa:	21a4      	movs	r1, #164	; 0xa4
 8002cfc:	e7f2      	b.n	8002ce4 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002cfe:	68e0      	ldr	r0, [r4, #12]
 8002d00:	6803      	ldr	r3, [r0, #0]
 8002d02:	6a1b      	ldr	r3, [r3, #32]
 8002d04:	4798      	blx	r3
 8002d06:	283f      	cmp	r0, #63	; 0x3f
 8002d08:	d803      	bhi.n	8002d12 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x4e>
 8002d0a:	4b3b      	ldr	r3, [pc, #236]	; (8002df8 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x134>)
 8002d0c:	4a37      	ldr	r2, [pc, #220]	; (8002dec <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x128>)
 8002d0e:	21a5      	movs	r1, #165	; 0xa5
 8002d10:	e7e8      	b.n	8002ce4 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002d12:	f00c fe81 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002d16:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8002dfc <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x138>
 8002d1a:	3004      	adds	r0, #4
 8002d1c:	f00c fea1 	bl	800fa62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002d20:	f8d9 0000 	ldr.w	r0, [r9]
 8002d24:	b110      	cbz	r0, 8002d2c <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8002d26:	6803      	ldr	r3, [r0, #0]
 8002d28:	68db      	ldr	r3, [r3, #12]
 8002d2a:	4798      	blx	r3
    if (*currentTrans)
 8002d2c:	f8d9 0000 	ldr.w	r0, [r9]
 8002d30:	b110      	cbz	r0, 8002d38 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8002d32:	6803      	ldr	r3, [r0, #0]
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	4798      	blx	r3
    if (*currentScreen)
 8002d38:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8002e00 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x13c>
 8002d3c:	f8d8 0000 	ldr.w	r0, [r8]
 8002d40:	b110      	cbz	r0, 8002d48 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002d42:	6803      	ldr	r3, [r0, #0]
 8002d44:	695b      	ldr	r3, [r3, #20]
 8002d46:	4798      	blx	r3
    if (*currentPresenter)
 8002d48:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002d4c:	b110      	cbz	r0, 8002d54 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002d4e:	6803      	ldr	r3, [r0, #0]
 8002d50:	685b      	ldr	r3, [r3, #4]
 8002d52:	4798      	blx	r3
    if (*currentScreen)
 8002d54:	f8d8 0000 	ldr.w	r0, [r8]
 8002d58:	b110      	cbz	r0, 8002d60 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002d5a:	6803      	ldr	r3, [r0, #0]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	4798      	blx	r3
    if (*currentPresenter)
 8002d60:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002d64:	b110      	cbz	r0, 8002d6c <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002d66:	6803      	ldr	r3, [r0, #0]
 8002d68:	689b      	ldr	r3, [r3, #8]
 8002d6a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002d6c:	68e0      	ldr	r0, [r4, #12]
 8002d6e:	2100      	movs	r1, #0
 8002d70:	f7ff feca 	bl	8002b08 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8002d74:	2114      	movs	r1, #20
 8002d76:	4605      	mov	r5, r0
 8002d78:	f7ff feca 	bl	8002b10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002d7c:	68a0      	ldr	r0, [r4, #8]
 8002d7e:	6803      	ldr	r3, [r0, #0]
 8002d80:	2100      	movs	r1, #0
 8002d82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d84:	4798      	blx	r3
 8002d86:	4606      	mov	r6, r0
 8002d88:	f003 fa32 	bl	80061f0 <_ZN18OpponentScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002d8c:	6860      	ldr	r0, [r4, #4]
 8002d8e:	6803      	ldr	r3, [r0, #0]
 8002d90:	2100      	movs	r1, #0
 8002d92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d94:	4798      	blx	r3
 8002d96:	4631      	mov	r1, r6
 8002d98:	4604      	mov	r4, r0
 8002d9a:	f003 f833 	bl	8005e04 <_ZN23OpponentScreenPresenterC1ER18OpponentScreenView>
    *currentTrans = newTransition;
 8002d9e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002da2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002da6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002daa:	b1dc      	cbz	r4, 8002de4 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x120>
 8002dac:	1d23      	adds	r3, r4, #4
 8002dae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002db2:	6833      	ldr	r3, [r6, #0]
 8002db4:	f8c4 a008 	str.w	sl, [r4, #8]
 8002db8:	4630      	mov	r0, r6
 8002dba:	68db      	ldr	r3, [r3, #12]
 8002dbc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002dbe:	4798      	blx	r3
    newPresenter->activate();
 8002dc0:	6823      	ldr	r3, [r4, #0]
 8002dc2:	4620      	mov	r0, r4
 8002dc4:	681b      	ldr	r3, [r3, #0]
 8002dc6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002dc8:	4629      	mov	r1, r5
 8002dca:	4630      	mov	r0, r6
 8002dcc:	f00e fb10 	bl	80113f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002dd0:	682b      	ldr	r3, [r5, #0]
 8002dd2:	4628      	mov	r0, r5
 8002dd4:	691b      	ldr	r3, [r3, #16]
 8002dd6:	4798      	blx	r3
    newTransition->invalidate();
 8002dd8:	682b      	ldr	r3, [r5, #0]
 8002dda:	4628      	mov	r0, r5
 8002ddc:	695b      	ldr	r3, [r3, #20]
}
 8002dde:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002de2:	4718      	bx	r3
    model->bind(newPresenter);
 8002de4:	4623      	mov	r3, r4
 8002de6:	e7e2      	b.n	8002dae <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0xea>
 8002de8:	08022298 	.word	0x08022298
 8002dec:	080226e0 	.word	0x080226e0
 8002df0:	08022430 	.word	0x08022430
 8002df4:	08022477 	.word	0x08022477
 8002df8:	0802251a 	.word	0x0802251a
 8002dfc:	20015004 	.word	0x20015004
 8002e00:	20015000 	.word	0x20015000

08002e04 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv>:
{
 8002e04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<GameScreenView, GameScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002e08:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8002e0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002e0e:	68a0      	ldr	r0, [r4, #8]
 8002e10:	6803      	ldr	r3, [r0, #0]
 8002e12:	6a1b      	ldr	r3, [r3, #32]
 8002e14:	4798      	blx	r3
 8002e16:	f242 53b7 	movw	r3, #9655	; 0x25b7
 8002e1a:	4298      	cmp	r0, r3
 8002e1c:	d805      	bhi.n	8002e2a <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x26>
 8002e1e:	4b42      	ldr	r3, [pc, #264]	; (8002f28 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x124>)
 8002e20:	4a42      	ldr	r2, [pc, #264]	; (8002f2c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002e22:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002e24:	4842      	ldr	r0, [pc, #264]	; (8002f30 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x12c>)
 8002e26:	f01d fbaf 	bl	8020588 <__assert_func>
 8002e2a:	6860      	ldr	r0, [r4, #4]
 8002e2c:	6803      	ldr	r3, [r0, #0]
 8002e2e:	6a1b      	ldr	r3, [r3, #32]
 8002e30:	4798      	blx	r3
 8002e32:	280f      	cmp	r0, #15
 8002e34:	d803      	bhi.n	8002e3e <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x3a>
 8002e36:	4b3f      	ldr	r3, [pc, #252]	; (8002f34 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x130>)
 8002e38:	4a3c      	ldr	r2, [pc, #240]	; (8002f2c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002e3a:	21a4      	movs	r1, #164	; 0xa4
 8002e3c:	e7f2      	b.n	8002e24 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002e3e:	68e0      	ldr	r0, [r4, #12]
 8002e40:	6803      	ldr	r3, [r0, #0]
 8002e42:	6a1b      	ldr	r3, [r3, #32]
 8002e44:	4798      	blx	r3
 8002e46:	283f      	cmp	r0, #63	; 0x3f
 8002e48:	d803      	bhi.n	8002e52 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x4e>
 8002e4a:	4b3b      	ldr	r3, [pc, #236]	; (8002f38 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x134>)
 8002e4c:	4a37      	ldr	r2, [pc, #220]	; (8002f2c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002e4e:	21a5      	movs	r1, #165	; 0xa5
 8002e50:	e7e8      	b.n	8002e24 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8002e52:	f00c fde1 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002e56:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8002f3c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x138>
 8002e5a:	3004      	adds	r0, #4
 8002e5c:	f00c fe01 	bl	800fa62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002e60:	f8d9 0000 	ldr.w	r0, [r9]
 8002e64:	b110      	cbz	r0, 8002e6c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8002e66:	6803      	ldr	r3, [r0, #0]
 8002e68:	68db      	ldr	r3, [r3, #12]
 8002e6a:	4798      	blx	r3
    if (*currentTrans)
 8002e6c:	f8d9 0000 	ldr.w	r0, [r9]
 8002e70:	b110      	cbz	r0, 8002e78 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8002e72:	6803      	ldr	r3, [r0, #0]
 8002e74:	681b      	ldr	r3, [r3, #0]
 8002e76:	4798      	blx	r3
    if (*currentScreen)
 8002e78:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8002f40 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x13c>
 8002e7c:	f8d8 0000 	ldr.w	r0, [r8]
 8002e80:	b110      	cbz	r0, 8002e88 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8002e82:	6803      	ldr	r3, [r0, #0]
 8002e84:	695b      	ldr	r3, [r3, #20]
 8002e86:	4798      	blx	r3
    if (*currentPresenter)
 8002e88:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002e8c:	b110      	cbz	r0, 8002e94 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8002e8e:	6803      	ldr	r3, [r0, #0]
 8002e90:	685b      	ldr	r3, [r3, #4]
 8002e92:	4798      	blx	r3
    if (*currentScreen)
 8002e94:	f8d8 0000 	ldr.w	r0, [r8]
 8002e98:	b110      	cbz	r0, 8002ea0 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8002e9a:	6803      	ldr	r3, [r0, #0]
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	4798      	blx	r3
    if (*currentPresenter)
 8002ea0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002ea4:	b110      	cbz	r0, 8002eac <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8002ea6:	6803      	ldr	r3, [r0, #0]
 8002ea8:	689b      	ldr	r3, [r3, #8]
 8002eaa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002eac:	68e0      	ldr	r0, [r4, #12]
 8002eae:	2100      	movs	r1, #0
 8002eb0:	f7ff fe2a 	bl	8002b08 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8002eb4:	2114      	movs	r1, #20
 8002eb6:	4605      	mov	r5, r0
 8002eb8:	f7ff fe2a 	bl	8002b10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002ebc:	68a0      	ldr	r0, [r4, #8]
 8002ebe:	6803      	ldr	r3, [r0, #0]
 8002ec0:	2100      	movs	r1, #0
 8002ec2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ec4:	4798      	blx	r3
 8002ec6:	4606      	mov	r6, r0
 8002ec8:	f002 f9b4 	bl	8005234 <_ZN14GameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002ecc:	6860      	ldr	r0, [r4, #4]
 8002ece:	6803      	ldr	r3, [r0, #0]
 8002ed0:	2100      	movs	r1, #0
 8002ed2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ed4:	4798      	blx	r3
 8002ed6:	4631      	mov	r1, r6
 8002ed8:	4604      	mov	r4, r0
 8002eda:	f002 f90f 	bl	80050fc <_ZN19GameScreenPresenterC1ER14GameScreenView>
    *currentTrans = newTransition;
 8002ede:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002ee2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002ee6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002eea:	b1dc      	cbz	r4, 8002f24 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x120>
 8002eec:	1d23      	adds	r3, r4, #4
 8002eee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002ef2:	6833      	ldr	r3, [r6, #0]
 8002ef4:	f8c4 a008 	str.w	sl, [r4, #8]
 8002ef8:	4630      	mov	r0, r6
 8002efa:	68db      	ldr	r3, [r3, #12]
 8002efc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002efe:	4798      	blx	r3
    newPresenter->activate();
 8002f00:	6823      	ldr	r3, [r4, #0]
 8002f02:	4620      	mov	r0, r4
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002f08:	4629      	mov	r1, r5
 8002f0a:	4630      	mov	r0, r6
 8002f0c:	f00e fa70 	bl	80113f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002f10:	682b      	ldr	r3, [r5, #0]
 8002f12:	4628      	mov	r0, r5
 8002f14:	691b      	ldr	r3, [r3, #16]
 8002f16:	4798      	blx	r3
    newTransition->invalidate();
 8002f18:	682b      	ldr	r3, [r5, #0]
 8002f1a:	4628      	mov	r0, r5
 8002f1c:	695b      	ldr	r3, [r3, #20]
}
 8002f1e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002f22:	4718      	bx	r3
    model->bind(newPresenter);
 8002f24:	4623      	mov	r3, r4
 8002f26:	e7e2      	b.n	8002eee <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0xea>
 8002f28:	08022298 	.word	0x08022298
 8002f2c:	08022805 	.word	0x08022805
 8002f30:	08022430 	.word	0x08022430
 8002f34:	08022477 	.word	0x08022477
 8002f38:	0802251a 	.word	0x0802251a
 8002f3c:	20015004 	.word	0x20015004
 8002f40:	20015000 	.word	0x20015000

08002f44 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv>:
{
 8002f44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<HomeScreenView, HomeScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002f48:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8002f4c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002f4e:	68a0      	ldr	r0, [r4, #8]
 8002f50:	6803      	ldr	r3, [r0, #0]
 8002f52:	6a1b      	ldr	r3, [r3, #32]
 8002f54:	4798      	blx	r3
 8002f56:	f5b0 7ff4 	cmp.w	r0, #488	; 0x1e8
 8002f5a:	d205      	bcs.n	8002f68 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x24>
 8002f5c:	4b42      	ldr	r3, [pc, #264]	; (8003068 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x124>)
 8002f5e:	4a43      	ldr	r2, [pc, #268]	; (800306c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x128>)
 8002f60:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002f62:	4843      	ldr	r0, [pc, #268]	; (8003070 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x12c>)
 8002f64:	f01d fb10 	bl	8020588 <__assert_func>
 8002f68:	6860      	ldr	r0, [r4, #4]
 8002f6a:	6803      	ldr	r3, [r0, #0]
 8002f6c:	6a1b      	ldr	r3, [r3, #32]
 8002f6e:	4798      	blx	r3
 8002f70:	280f      	cmp	r0, #15
 8002f72:	d803      	bhi.n	8002f7c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x38>
 8002f74:	4b3f      	ldr	r3, [pc, #252]	; (8003074 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x130>)
 8002f76:	4a3d      	ldr	r2, [pc, #244]	; (800306c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x128>)
 8002f78:	21a4      	movs	r1, #164	; 0xa4
 8002f7a:	e7f2      	b.n	8002f62 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002f7c:	68e0      	ldr	r0, [r4, #12]
 8002f7e:	6803      	ldr	r3, [r0, #0]
 8002f80:	6a1b      	ldr	r3, [r3, #32]
 8002f82:	4798      	blx	r3
 8002f84:	283f      	cmp	r0, #63	; 0x3f
 8002f86:	d803      	bhi.n	8002f90 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x4c>
 8002f88:	4b3b      	ldr	r3, [pc, #236]	; (8003078 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x134>)
 8002f8a:	4a38      	ldr	r2, [pc, #224]	; (800306c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x128>)
 8002f8c:	21a5      	movs	r1, #165	; 0xa5
 8002f8e:	e7e8      	b.n	8002f62 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002f90:	f00c fd42 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002f94:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800307c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x138>
 8002f98:	3004      	adds	r0, #4
 8002f9a:	f00c fd62 	bl	800fa62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002f9e:	f8d9 0000 	ldr.w	r0, [r9]
 8002fa2:	b110      	cbz	r0, 8002faa <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002fa4:	6803      	ldr	r3, [r0, #0]
 8002fa6:	68db      	ldr	r3, [r3, #12]
 8002fa8:	4798      	blx	r3
    if (*currentTrans)
 8002faa:	f8d9 0000 	ldr.w	r0, [r9]
 8002fae:	b110      	cbz	r0, 8002fb6 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8002fb0:	6803      	ldr	r3, [r0, #0]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	4798      	blx	r3
    if (*currentScreen)
 8002fb6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003080 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x13c>
 8002fba:	f8d8 0000 	ldr.w	r0, [r8]
 8002fbe:	b110      	cbz	r0, 8002fc6 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002fc0:	6803      	ldr	r3, [r0, #0]
 8002fc2:	695b      	ldr	r3, [r3, #20]
 8002fc4:	4798      	blx	r3
    if (*currentPresenter)
 8002fc6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002fca:	b110      	cbz	r0, 8002fd2 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002fcc:	6803      	ldr	r3, [r0, #0]
 8002fce:	685b      	ldr	r3, [r3, #4]
 8002fd0:	4798      	blx	r3
    if (*currentScreen)
 8002fd2:	f8d8 0000 	ldr.w	r0, [r8]
 8002fd6:	b110      	cbz	r0, 8002fde <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002fd8:	6803      	ldr	r3, [r0, #0]
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	4798      	blx	r3
    if (*currentPresenter)
 8002fde:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002fe2:	b110      	cbz	r0, 8002fea <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002fe4:	6803      	ldr	r3, [r0, #0]
 8002fe6:	689b      	ldr	r3, [r3, #8]
 8002fe8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002fea:	68e0      	ldr	r0, [r4, #12]
 8002fec:	2100      	movs	r1, #0
 8002fee:	f7ff fd8b 	bl	8002b08 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8002ff2:	2114      	movs	r1, #20
 8002ff4:	4605      	mov	r5, r0
 8002ff6:	f7ff fd8b 	bl	8002b10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002ffa:	68a0      	ldr	r0, [r4, #8]
 8002ffc:	6803      	ldr	r3, [r0, #0]
 8002ffe:	2100      	movs	r1, #0
 8003000:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003002:	4798      	blx	r3
 8003004:	4606      	mov	r6, r0
 8003006:	f002 fec7 	bl	8005d98 <_ZN14HomeScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800300a:	6860      	ldr	r0, [r4, #4]
 800300c:	6803      	ldr	r3, [r0, #0]
 800300e:	2100      	movs	r1, #0
 8003010:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003012:	4798      	blx	r3
 8003014:	4631      	mov	r1, r6
 8003016:	4604      	mov	r4, r0
 8003018:	f002 fe98 	bl	8005d4c <_ZN19HomeScreenPresenterC1ER14HomeScreenView>
    *currentTrans = newTransition;
 800301c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003020:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003024:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003028:	b1dc      	cbz	r4, 8003062 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x11e>
 800302a:	1d23      	adds	r3, r4, #4
 800302c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003030:	6833      	ldr	r3, [r6, #0]
 8003032:	f8c4 a008 	str.w	sl, [r4, #8]
 8003036:	4630      	mov	r0, r6
 8003038:	68db      	ldr	r3, [r3, #12]
 800303a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800303c:	4798      	blx	r3
    newPresenter->activate();
 800303e:	6823      	ldr	r3, [r4, #0]
 8003040:	4620      	mov	r0, r4
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003046:	4629      	mov	r1, r5
 8003048:	4630      	mov	r0, r6
 800304a:	f00e f9d1 	bl	80113f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800304e:	682b      	ldr	r3, [r5, #0]
 8003050:	4628      	mov	r0, r5
 8003052:	691b      	ldr	r3, [r3, #16]
 8003054:	4798      	blx	r3
    newTransition->invalidate();
 8003056:	682b      	ldr	r3, [r5, #0]
 8003058:	4628      	mov	r0, r5
 800305a:	695b      	ldr	r3, [r3, #20]
}
 800305c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003060:	4718      	bx	r3
    model->bind(newPresenter);
 8003062:	4623      	mov	r3, r4
 8003064:	e7e2      	b.n	800302c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0xe8>
 8003066:	bf00      	nop
 8003068:	08022298 	.word	0x08022298
 800306c:	08022922 	.word	0x08022922
 8003070:	08022430 	.word	0x08022430
 8003074:	08022477 	.word	0x08022477
 8003078:	0802251a 	.word	0x0802251a
 800307c:	20015004 	.word	0x20015004
 8003080:	20015000 	.word	0x20015000

08003084 <_ZN18GameScreenViewBaseD1Ev>:
}

GameScreenViewBase::~GameScreenViewBase()
{

}
 8003084:	4770      	bx	lr

08003086 <_ZN18GameScreenViewBase11setupScreenEv>:

void GameScreenViewBase::setupScreen()
{

}
 8003086:	4770      	bx	lr

08003088 <_ZN18GameScreenViewBaseD0Ev>:
GameScreenViewBase::~GameScreenViewBase()
 8003088:	b510      	push	{r4, lr}
}
 800308a:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
GameScreenViewBase::~GameScreenViewBase()
 800308e:	4604      	mov	r4, r0
}
 8003090:	f01d f9ca 	bl	8020428 <_ZdlPvj>
 8003094:	4620      	mov	r0, r4
 8003096:	bd10      	pop	{r4, pc}

08003098 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8003098:	4a07      	ldr	r2, [pc, #28]	; (80030b8 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 800309a:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 800309c:	2200      	movs	r2, #0
 800309e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80030a2:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80030a6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80030aa:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80030ae:	f44f 7280 	mov.w	r2, #256	; 0x100
 80030b2:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 80030b4:	4770      	bx	lr
 80030b6:	bf00      	nop
 80030b8:	080233ec 	.word	0x080233ec

080030bc <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 80030bc:	b510      	push	{r4, lr}
 80030be:	4604      	mov	r4, r0
        : Drawable(),
          firstChild(0)
 80030c0:	f7ff ffea 	bl	8003098 <_ZN8touchgfx8DrawableC1Ev>
 80030c4:	4b02      	ldr	r3, [pc, #8]	; (80030d0 <_ZN8touchgfx9ContainerC1Ev+0x14>)
 80030c6:	6023      	str	r3, [r4, #0]
 80030c8:	2300      	movs	r3, #0
 80030ca:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 80030cc:	4620      	mov	r0, r4
 80030ce:	bd10      	pop	{r4, pc}
 80030d0:	0802301c 	.word	0x0802301c

080030d4 <_ZN18GameScreenViewBaseC1Ev>:
GameScreenViewBase::GameScreenViewBase()
 80030d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030d8:	ed2d 8b10 	vpush	{d8-d15}
 80030dc:	4605      	mov	r5, r0
 80030de:	b099      	sub	sp, #100	; 0x64
 80030e0:	46aa      	mov	sl, r5
        : presenter(0)
 80030e2:	2400      	movs	r4, #0
 80030e4:	f00d ffd8 	bl	8011098 <_ZN8touchgfx6ScreenC1Ev>
 80030e8:	4bde      	ldr	r3, [pc, #888]	; (8003464 <_ZN18GameScreenViewBaseC1Ev+0x390>)
 80030ea:	63ec      	str	r4, [r5, #60]	; 0x3c
 80030ec:	f84a 3b40 	str.w	r3, [sl], #64
 80030f0:	4650      	mov	r0, sl
 80030f2:	f7ff f981 	bl	80023f8 <_ZN8touchgfx3BoxC1Ev>
 80030f6:	f105 036c 	add.w	r3, r5, #108	; 0x6c
 80030fa:	f105 0998 	add.w	r9, r5, #152	; 0x98
 80030fe:	4618      	mov	r0, r3
 8003100:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8003104:	f105 07c4 	add.w	r7, r5, #196	; 0xc4
 8003108:	9315      	str	r3, [sp, #84]	; 0x54
 800310a:	f7ff f975 	bl	80023f8 <_ZN8touchgfx3BoxC1Ev>
 800310e:	a916      	add	r1, sp, #88	; 0x58
 8003110:	4648      	mov	r0, r9
 8003112:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003116:	f009 ff5b 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800311a:	4638      	mov	r0, r7
 800311c:	f7ff ffce 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8003120:	f105 03f0 	add.w	r3, r5, #240	; 0xf0
 8003124:	a916      	add	r1, sp, #88	; 0x58
 8003126:	4618      	mov	r0, r3
 8003128:	ee0a 3a10 	vmov	s20, r3
 800312c:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003130:	f009 ff4e 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003134:	f505 738e 	add.w	r3, r5, #284	; 0x11c
 8003138:	a916      	add	r1, sp, #88	; 0x58
 800313a:	4618      	mov	r0, r3
 800313c:	ee0a 3a90 	vmov	s21, r3
 8003140:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003144:	f009 ff44 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003148:	f505 73a4 	add.w	r3, r5, #328	; 0x148
 800314c:	a916      	add	r1, sp, #88	; 0x58
 800314e:	4618      	mov	r0, r3
 8003150:	ee0b 3a10 	vmov	s22, r3
 8003154:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003158:	f009 ff3a 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800315c:	f505 73ba 	add.w	r3, r5, #372	; 0x174
 8003160:	4618      	mov	r0, r3
 8003162:	ee08 3a10 	vmov	s16, r3
 8003166:	f7ff ffa9 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 800316a:	f505 73d0 	add.w	r3, r5, #416	; 0x1a0
 800316e:	a916      	add	r1, sp, #88	; 0x58
 8003170:	4618      	mov	r0, r3
 8003172:	ee0b 3a90 	vmov	s23, r3
 8003176:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800317a:	f009 ff29 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800317e:	f505 73e6 	add.w	r3, r5, #460	; 0x1cc
 8003182:	a916      	add	r1, sp, #88	; 0x58
 8003184:	4618      	mov	r0, r3
 8003186:	ee0c 3a10 	vmov	s24, r3
 800318a:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800318e:	f009 ff1f 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003192:	f505 73fc 	add.w	r3, r5, #504	; 0x1f8
 8003196:	a916      	add	r1, sp, #88	; 0x58
 8003198:	4618      	mov	r0, r3
 800319a:	ee0c 3a90 	vmov	s25, r3
 800319e:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80031a2:	f009 ff15 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80031a6:	f505 7309 	add.w	r3, r5, #548	; 0x224
 80031aa:	f505 7814 	add.w	r8, r5, #592	; 0x250
 80031ae:	a916      	add	r1, sp, #88	; 0x58
 80031b0:	4618      	mov	r0, r3
 80031b2:	ee0d 3a10 	vmov	s26, r3
 80031b6:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80031ba:	f009 ff09 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80031be:	4640      	mov	r0, r8
 80031c0:	f7ff ff7c 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 80031c4:	f505 731f 	add.w	r3, r5, #636	; 0x27c
 80031c8:	a916      	add	r1, sp, #88	; 0x58
 80031ca:	4618      	mov	r0, r3
 80031cc:	ee0d 3a90 	vmov	s27, r3
 80031d0:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80031d4:	f009 fefc 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80031d8:	f505 732a 	add.w	r3, r5, #680	; 0x2a8
 80031dc:	a916      	add	r1, sp, #88	; 0x58
 80031de:	4618      	mov	r0, r3
 80031e0:	ee0e 3a10 	vmov	s28, r3
 80031e4:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80031e8:	f009 fef2 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80031ec:	f505 7335 	add.w	r3, r5, #724	; 0x2d4
 80031f0:	a916      	add	r1, sp, #88	; 0x58
 80031f2:	4618      	mov	r0, r3
 80031f4:	ee0e 3a90 	vmov	s29, r3
 80031f8:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80031fc:	f009 fee8 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003200:	f505 7340 	add.w	r3, r5, #768	; 0x300
 8003204:	a916      	add	r1, sp, #88	; 0x58
 8003206:	4618      	mov	r0, r3
 8003208:	ee0f 3a10 	vmov	s30, r3
 800320c:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003210:	f009 fede 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003214:	f505 734b 	add.w	r3, r5, #812	; 0x32c
 8003218:	a916      	add	r1, sp, #88	; 0x58
 800321a:	4618      	mov	r0, r3
 800321c:	ee0f 3a90 	vmov	s31, r3
 8003220:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003224:	f009 fed4 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003228:	f505 7356 	add.w	r3, r5, #856	; 0x358
 800322c:	4618      	mov	r0, r3
 800322e:	9302      	str	r3, [sp, #8]
 8003230:	f7ff ff44 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8003234:	f505 7361 	add.w	r3, r5, #900	; 0x384
 8003238:	a916      	add	r1, sp, #88	; 0x58
 800323a:	4618      	mov	r0, r3
 800323c:	9303      	str	r3, [sp, #12]
 800323e:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003242:	f009 fec5 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003246:	f505 736c 	add.w	r3, r5, #944	; 0x3b0
 800324a:	a916      	add	r1, sp, #88	; 0x58
 800324c:	4618      	mov	r0, r3
 800324e:	9304      	str	r3, [sp, #16]
 8003250:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003254:	f009 febc 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003258:	f505 7377 	add.w	r3, r5, #988	; 0x3dc
 800325c:	4618      	mov	r0, r3
 800325e:	ee09 3a10 	vmov	s18, r3
 8003262:	f7ff ff2b 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8003266:	f505 6381 	add.w	r3, r5, #1032	; 0x408
 800326a:	a916      	add	r1, sp, #88	; 0x58
 800326c:	4618      	mov	r0, r3
 800326e:	9305      	str	r3, [sp, #20]
 8003270:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003274:	f009 feac 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003278:	f205 4334 	addw	r3, r5, #1076	; 0x434
 800327c:	a916      	add	r1, sp, #88	; 0x58
 800327e:	4618      	mov	r0, r3
 8003280:	9306      	str	r3, [sp, #24]
 8003282:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003286:	f009 fea3 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800328a:	f505 638c 	add.w	r3, r5, #1120	; 0x460
 800328e:	a916      	add	r1, sp, #88	; 0x58
 8003290:	4618      	mov	r0, r3
 8003292:	9307      	str	r3, [sp, #28]
 8003294:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003298:	f009 fe9a 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800329c:	f205 438c 	addw	r3, r5, #1164	; 0x48c
 80032a0:	4618      	mov	r0, r3
 80032a2:	ee08 3a90 	vmov	s17, r3
 80032a6:	f7ff ff09 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 80032aa:	f505 6397 	add.w	r3, r5, #1208	; 0x4b8
 80032ae:	a916      	add	r1, sp, #88	; 0x58
 80032b0:	4618      	mov	r0, r3
 80032b2:	9308      	str	r3, [sp, #32]
 80032b4:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80032b8:	f009 fe8a 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80032bc:	f205 43e4 	addw	r3, r5, #1252	; 0x4e4
 80032c0:	a916      	add	r1, sp, #88	; 0x58
 80032c2:	4618      	mov	r0, r3
 80032c4:	9309      	str	r3, [sp, #36]	; 0x24
 80032c6:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80032ca:	f009 fe81 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80032ce:	f505 63a2 	add.w	r3, r5, #1296	; 0x510
 80032d2:	a916      	add	r1, sp, #88	; 0x58
 80032d4:	4618      	mov	r0, r3
 80032d6:	930a      	str	r3, [sp, #40]	; 0x28
 80032d8:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80032dc:	f009 fe78 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80032e0:	f205 533c 	addw	r3, r5, #1340	; 0x53c
 80032e4:	f505 6bad 	add.w	fp, r5, #1384	; 0x568
 80032e8:	a916      	add	r1, sp, #88	; 0x58
 80032ea:	4618      	mov	r0, r3
 80032ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80032ee:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80032f2:	f009 fe6d 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80032f6:	4658      	mov	r0, fp
 80032f8:	f7ff fee0 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 80032fc:	f205 5394 	addw	r3, r5, #1428	; 0x594
 8003300:	a916      	add	r1, sp, #88	; 0x58
 8003302:	4618      	mov	r0, r3
 8003304:	930c      	str	r3, [sp, #48]	; 0x30
 8003306:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800330a:	f009 fe61 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800330e:	f505 63b8 	add.w	r3, r5, #1472	; 0x5c0
 8003312:	a916      	add	r1, sp, #88	; 0x58
 8003314:	4618      	mov	r0, r3
 8003316:	930d      	str	r3, [sp, #52]	; 0x34
 8003318:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800331c:	f009 fe58 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003320:	f205 53ec 	addw	r3, r5, #1516	; 0x5ec
 8003324:	a916      	add	r1, sp, #88	; 0x58
 8003326:	4618      	mov	r0, r3
 8003328:	930e      	str	r3, [sp, #56]	; 0x38
 800332a:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800332e:	f009 fe4f 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003332:	f505 63c3 	add.w	r3, r5, #1560	; 0x618
 8003336:	a916      	add	r1, sp, #88	; 0x58
 8003338:	4618      	mov	r0, r3
 800333a:	930f      	str	r3, [sp, #60]	; 0x3c
 800333c:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003340:	f009 fe46 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003344:	f205 6344 	addw	r3, r5, #1604	; 0x644
 8003348:	a916      	add	r1, sp, #88	; 0x58
 800334a:	4618      	mov	r0, r3
 800334c:	9310      	str	r3, [sp, #64]	; 0x40
 800334e:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003352:	f009 fe3d 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003356:	f505 63ce 	add.w	r3, r5, #1648	; 0x670
 800335a:	4618      	mov	r0, r3
 800335c:	9311      	str	r3, [sp, #68]	; 0x44
 800335e:	f7ff fead 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8003362:	f205 639c 	addw	r3, r5, #1692	; 0x69c
 8003366:	a916      	add	r1, sp, #88	; 0x58
 8003368:	4618      	mov	r0, r3
 800336a:	9312      	str	r3, [sp, #72]	; 0x48
 800336c:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003370:	f009 fe2e 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003374:	f505 63d9 	add.w	r3, r5, #1736	; 0x6c8
 8003378:	a916      	add	r1, sp, #88	; 0x58
 800337a:	4618      	mov	r0, r3
 800337c:	9313      	str	r3, [sp, #76]	; 0x4c
 800337e:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003382:	f009 fe25 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003386:	f205 63f4 	addw	r3, r5, #1780	; 0x6f4
 800338a:	ee09 3a90 	vmov	s19, r3
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800338e:	2226      	movs	r2, #38	; 0x26
 8003390:	4621      	mov	r1, r4
 8003392:	4618      	mov	r0, r3
 8003394:	f01d f994 	bl	80206c0 <memset>
class Widget : public Drawable
 8003398:	ee19 0a90 	vmov	r0, s19
 800339c:	f7ff fe7c 	bl	8003098 <_ZN8touchgfx8DrawableC1Ev>
 80033a0:	4b31      	ldr	r3, [pc, #196]	; (8003468 <_ZN18GameScreenViewBaseC1Ev+0x394>)
 80033a2:	f8c5 371c 	str.w	r3, [r5, #1820]	; 0x71c
 80033a6:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80033aa:	f8c5 3728 	str.w	r3, [r5, #1832]	; 0x728
        : TextAreaWithWildcardBase(), wc1(0)
 80033ae:	4b2f      	ldr	r3, [pc, #188]	; (800346c <_ZN18GameScreenViewBaseC1Ev+0x398>)
 80033b0:	f8c5 36f4 	str.w	r3, [r5, #1780]	; 0x6f4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80033b4:	f04f 33ff 	mov.w	r3, #4294967295
 80033b8:	f8c5 3734 	str.w	r3, [r5, #1844]	; 0x734
 80033bc:	f505 63e8 	add.w	r3, r5, #1856	; 0x740
 80033c0:	9314      	str	r3, [sp, #80]	; 0x50
 80033c2:	f8a5 6720 	strh.w	r6, [r5, #1824]	; 0x720
 80033c6:	f04f 33ff 	mov.w	r3, #4294967295
 80033ca:	a916      	add	r1, sp, #88	; 0x58
 80033cc:	9814      	ldr	r0, [sp, #80]	; 0x50
        : color(col)
 80033ce:	f8c5 4724 	str.w	r4, [r5, #1828]	; 0x724
 80033d2:	f8a5 472c 	strh.w	r4, [r5, #1836]	; 0x72c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80033d6:	f8c5 4730 	str.w	r4, [r5, #1840]	; 0x730
              text(0)
 80033da:	f8c5 4738 	str.w	r4, [r5, #1848]	; 0x738
 80033de:	f8c5 473c 	str.w	r4, [r5, #1852]	; 0x73c
 80033e2:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 80033e6:	f009 fdf3 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 240, 320);
 80033ea:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80033ee:	4622      	mov	r2, r4
 80033f0:	4650      	mov	r0, sl
 80033f2:	9300      	str	r3, [sp, #0]
 80033f4:	4621      	mov	r1, r4
 80033f6:	23f0      	movs	r3, #240	; 0xf0
 80033f8:	1d2e      	adds	r6, r5, #4
 80033fa:	f7fe ffea 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 80033fe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003402:	4651      	mov	r1, sl
 8003404:	66ab      	str	r3, [r5, #104]	; 0x68
 8003406:	4630      	mov	r0, r6
 8003408:	f008 fb73 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 240, 320);
 800340c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003410:	4622      	mov	r2, r4
 8003412:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003414:	9300      	str	r3, [sp, #0]
 8003416:	4621      	mov	r1, r4
 8003418:	23f0      	movs	r3, #240	; 0xf0
 800341a:	f7fe ffda 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800341e:	f04f 33ff 	mov.w	r3, #4294967295
 8003422:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003424:	f8c5 3094 	str.w	r3, [r5, #148]	; 0x94
 8003428:	4630      	mov	r0, r6
 800342a:	f008 fb62 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800342e:	2303      	movs	r3, #3
    board.setBitmap(touchgfx::Bitmap(BITMAP_BOARD_ID));
 8003430:	4648      	mov	r0, r9
 8003432:	a916      	add	r1, sp, #88	; 0x58
 8003434:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8003438:	f00a fc9d 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    board.setPosition(5, 83, 230, 230);
 800343c:	23e6      	movs	r3, #230	; 0xe6
 800343e:	9300      	str	r3, [sp, #0]
 8003440:	2253      	movs	r2, #83	; 0x53
 8003442:	4648      	mov	r0, r9
 8003444:	2105      	movs	r1, #5
 8003446:	f7fe ffc4 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    board.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800344a:	4648      	mov	r0, r9
 800344c:	4621      	mov	r1, r4
 800344e:	f009 fd7a 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003452:	4649      	mov	r1, r9
 8003454:	4630      	mov	r0, r6
 8003456:	f008 fb4c 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat3_r.setPosition(-34, -68, 23, 68);
 800345a:	2344      	movs	r3, #68	; 0x44
 800345c:	f06f 0243 	mvn.w	r2, #67	; 0x43
 8003460:	4638      	mov	r0, r7
 8003462:	e005      	b.n	8003470 <_ZN18GameScreenViewBaseC1Ev+0x39c>
 8003464:	08022afc 	.word	0x08022afc
 8003468:	080221b4 	.word	0x080221b4
 800346c:	080221c4 	.word	0x080221c4
 8003470:	9300      	str	r3, [sp, #0]
 8003472:	f06f 0121 	mvn.w	r1, #33	; 0x21
 8003476:	2317      	movs	r3, #23
    scalableImage1_1_1.setPosition(0, 22, 23, 23);
 8003478:	f04f 0917 	mov.w	r9, #23
 800347c:	f04f 0a05 	mov.w	sl, #5
    boat3_r.setPosition(-34, -68, 23, 68);
 8003480:	f7fe ffa7 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003484:	ee1a 0a10 	vmov	r0, s20
 8003488:	a916      	add	r1, sp, #88	; 0x58
 800348a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800348e:	f00a fc72 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1.setPosition(0, 22, 23, 23);
 8003492:	464b      	mov	r3, r9
 8003494:	2216      	movs	r2, #22
 8003496:	ee1a 0a10 	vmov	r0, s20
 800349a:	4621      	mov	r1, r4
 800349c:	f8cd 9000 	str.w	r9, [sp]
 80034a0:	f7fe ff97 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80034a4:	ee1a 0a10 	vmov	r0, s20
 80034a8:	4621      	mov	r1, r4
 80034aa:	f009 fd4c 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_1_1);
 80034ae:	4638      	mov	r0, r7
 80034b0:	ee1a 1a10 	vmov	r1, s20
 80034b4:	f008 fb1d 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80034b8:	ee1a 0a90 	vmov	r0, s21
 80034bc:	a916      	add	r1, sp, #88	; 0x58
 80034be:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80034c2:	f00a fc58 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1.setPosition(0, 0, 23, 23);
 80034c6:	464b      	mov	r3, r9
 80034c8:	4622      	mov	r2, r4
 80034ca:	ee1a 0a90 	vmov	r0, s21
 80034ce:	4621      	mov	r1, r4
 80034d0:	f8cd 9000 	str.w	r9, [sp]
 80034d4:	f7fe ff7d 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80034d8:	ee1a 0a90 	vmov	r0, s21
 80034dc:	4621      	mov	r1, r4
 80034de:	f009 fd32 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_1);
 80034e2:	4638      	mov	r0, r7
 80034e4:	ee1a 1a90 	vmov	r1, s21
 80034e8:	f008 fb03 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80034ec:	ee1b 0a10 	vmov	r0, s22
 80034f0:	a916      	add	r1, sp, #88	; 0x58
 80034f2:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80034f6:	f00a fc3e 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 44, 23, 23);
 80034fa:	464b      	mov	r3, r9
 80034fc:	222c      	movs	r2, #44	; 0x2c
 80034fe:	ee1b 0a10 	vmov	r0, s22
 8003502:	4621      	mov	r1, r4
 8003504:	f8cd 9000 	str.w	r9, [sp]
 8003508:	f7fe ff63 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800350c:	ee1b 0a10 	vmov	r0, s22
 8003510:	4621      	mov	r1, r4
 8003512:	f009 fd18 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1);
 8003516:	4638      	mov	r0, r7
 8003518:	ee1b 1a10 	vmov	r1, s22
 800351c:	f008 fae9 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003520:	4639      	mov	r1, r7
 8003522:	4630      	mov	r0, r6
 8003524:	f008 fae5 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat4_r.setPosition(-103, -92, 23, 90);
 8003528:	235a      	movs	r3, #90	; 0x5a
 800352a:	f06f 025b 	mvn.w	r2, #91	; 0x5b
 800352e:	ee18 0a10 	vmov	r0, s16
 8003532:	9300      	str	r3, [sp, #0]
 8003534:	f06f 0166 	mvn.w	r1, #102	; 0x66
 8003538:	464b      	mov	r3, r9
 800353a:	f7fe ff4a 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 800353e:	ee1b 0a90 	vmov	r0, s23
 8003542:	a916      	add	r1, sp, #88	; 0x58
 8003544:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003548:	f00a fc15 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_2.setPosition(0, 22, 23, 23);
 800354c:	464b      	mov	r3, r9
 800354e:	2216      	movs	r2, #22
 8003550:	ee1b 0a90 	vmov	r0, s23
 8003554:	4621      	mov	r1, r4
 8003556:	f8cd 9000 	str.w	r9, [sp]
 800355a:	f7fe ff3a 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800355e:	ee1b 0a90 	vmov	r0, s23
 8003562:	4621      	mov	r1, r4
 8003564:	f009 fcef 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_1_1_2);
 8003568:	ee1b 1a90 	vmov	r1, s23
 800356c:	ee18 0a10 	vmov	r0, s16
 8003570:	f008 fabf 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003574:	ee1c 0a10 	vmov	r0, s24
 8003578:	a916      	add	r1, sp, #88	; 0x58
 800357a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800357e:	f00a fbfa 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_2.setPosition(0, 0, 23, 23);
 8003582:	464b      	mov	r3, r9
 8003584:	4622      	mov	r2, r4
 8003586:	ee1c 0a10 	vmov	r0, s24
 800358a:	4621      	mov	r1, r4
 800358c:	f8cd 9000 	str.w	r9, [sp]
 8003590:	f7fe ff1f 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003594:	ee1c 0a10 	vmov	r0, s24
 8003598:	4621      	mov	r1, r4
 800359a:	f009 fcd4 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_1_2);
 800359e:	ee1c 1a10 	vmov	r1, s24
 80035a2:	ee18 0a10 	vmov	r0, s16
 80035a6:	f008 faa4 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80035aa:	ee1c 0a90 	vmov	r0, s25
 80035ae:	a916      	add	r1, sp, #88	; 0x58
 80035b0:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80035b4:	f00a fbdf 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3.setPosition(0, 44, 23, 23);
 80035b8:	464b      	mov	r3, r9
 80035ba:	222c      	movs	r2, #44	; 0x2c
 80035bc:	ee1c 0a90 	vmov	r0, s25
 80035c0:	4621      	mov	r1, r4
 80035c2:	f8cd 9000 	str.w	r9, [sp]
 80035c6:	f7fe ff04 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80035ca:	ee1c 0a90 	vmov	r0, s25
 80035ce:	4621      	mov	r1, r4
 80035d0:	f009 fcb9 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_3);
 80035d4:	ee1c 1a90 	vmov	r1, s25
 80035d8:	ee18 0a10 	vmov	r0, s16
 80035dc:	f008 fa89 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1.setPosition(0, 67, 23, 25);
 80035e0:	2719      	movs	r7, #25
    scalableImage1_3_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80035e2:	ee1d 0a10 	vmov	r0, s26
 80035e6:	a916      	add	r1, sp, #88	; 0x58
 80035e8:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80035ec:	f00a fbc3 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1.setPosition(0, 67, 23, 25);
 80035f0:	464b      	mov	r3, r9
 80035f2:	2243      	movs	r2, #67	; 0x43
 80035f4:	ee1d 0a10 	vmov	r0, s26
 80035f8:	9700      	str	r7, [sp, #0]
 80035fa:	4621      	mov	r1, r4
 80035fc:	f7fe fee9 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003600:	ee1d 0a10 	vmov	r0, s26
 8003604:	4621      	mov	r1, r4
 8003606:	f009 fc9e 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_3_1);
 800360a:	ee1d 1a10 	vmov	r1, s26
 800360e:	ee18 0a10 	vmov	r0, s16
 8003612:	f008 fa6e 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003616:	ee18 1a10 	vmov	r1, s16
 800361a:	4630      	mov	r0, r6
 800361c:	f008 fa69 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat5_r.setPosition(-135, -115, 23, 113);
 8003620:	2371      	movs	r3, #113	; 0x71
 8003622:	f06f 0272 	mvn.w	r2, #114	; 0x72
 8003626:	4640      	mov	r0, r8
 8003628:	9300      	str	r3, [sp, #0]
 800362a:	f06f 0186 	mvn.w	r1, #134	; 0x86
 800362e:	464b      	mov	r3, r9
 8003630:	f7fe fecf 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003634:	ee1d 0a90 	vmov	r0, s27
 8003638:	a916      	add	r1, sp, #88	; 0x58
 800363a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800363e:	f00a fb9a 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_2_1.setPosition(0, 22, 23, 23);
 8003642:	464b      	mov	r3, r9
 8003644:	2216      	movs	r2, #22
 8003646:	ee1d 0a90 	vmov	r0, s27
 800364a:	4621      	mov	r1, r4
 800364c:	f8cd 9000 	str.w	r9, [sp]
 8003650:	f7fe febf 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003654:	ee1d 0a90 	vmov	r0, s27
 8003658:	4621      	mov	r1, r4
 800365a:	f009 fc74 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_1_1_2_1);
 800365e:	4640      	mov	r0, r8
 8003660:	ee1d 1a90 	vmov	r1, s27
 8003664:	f008 fa45 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003668:	ee1e 0a10 	vmov	r0, s28
 800366c:	a916      	add	r1, sp, #88	; 0x58
 800366e:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003672:	f00a fb80 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_2_1.setPosition(0, 0, 23, 23);
 8003676:	464b      	mov	r3, r9
 8003678:	4622      	mov	r2, r4
 800367a:	ee1e 0a10 	vmov	r0, s28
 800367e:	4621      	mov	r1, r4
 8003680:	f8cd 9000 	str.w	r9, [sp]
 8003684:	f7fe fea5 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003688:	ee1e 0a10 	vmov	r0, s28
 800368c:	4621      	mov	r1, r4
 800368e:	f009 fc5a 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_1_2_1);
 8003692:	4640      	mov	r0, r8
 8003694:	ee1e 1a10 	vmov	r1, s28
 8003698:	f008 fa2b 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 800369c:	ee1e 0a90 	vmov	r0, s29
 80036a0:	a916      	add	r1, sp, #88	; 0x58
 80036a2:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80036a6:	f00a fb66 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_2.setPosition(0, 44, 23, 23);
 80036aa:	464b      	mov	r3, r9
 80036ac:	222c      	movs	r2, #44	; 0x2c
 80036ae:	ee1e 0a90 	vmov	r0, s29
 80036b2:	4621      	mov	r1, r4
 80036b4:	f8cd 9000 	str.w	r9, [sp]
 80036b8:	f7fe fe8b 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80036bc:	ee1e 0a90 	vmov	r0, s29
 80036c0:	4621      	mov	r1, r4
 80036c2:	f009 fc40 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_2);
 80036c6:	4640      	mov	r0, r8
 80036c8:	ee1e 1a90 	vmov	r1, s29
 80036cc:	f008 fa11 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80036d0:	ee1f 0a10 	vmov	r0, s30
 80036d4:	a916      	add	r1, sp, #88	; 0x58
 80036d6:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80036da:	f00a fb4c 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1_1.setPosition(0, 67, 23, 25);
 80036de:	464b      	mov	r3, r9
 80036e0:	2243      	movs	r2, #67	; 0x43
 80036e2:	ee1f 0a10 	vmov	r0, s30
 80036e6:	9700      	str	r7, [sp, #0]
 80036e8:	4621      	mov	r1, r4
 80036ea:	f7fe fe72 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80036ee:	ee1f 0a10 	vmov	r0, s30
 80036f2:	4621      	mov	r1, r4
 80036f4:	f009 fc27 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_1_1);
 80036f8:	4640      	mov	r0, r8
 80036fa:	ee1f 1a10 	vmov	r1, s30
 80036fe:	f008 f9f8 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003702:	ee1f 0a90 	vmov	r0, s31
 8003706:	a916      	add	r1, sp, #88	; 0x58
 8003708:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800370c:	f00a fb33 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1_1_1.setPosition(0, 90, 23, 25);
 8003710:	464b      	mov	r3, r9
 8003712:	225a      	movs	r2, #90	; 0x5a
 8003714:	ee1f 0a90 	vmov	r0, s31
 8003718:	9700      	str	r7, [sp, #0]
 800371a:	4621      	mov	r1, r4
 800371c:	f7fe fe59 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003720:	ee1f 0a90 	vmov	r0, s31
 8003724:	4621      	mov	r1, r4
 8003726:	f009 fc0e 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_1_1_1);
 800372a:	4640      	mov	r0, r8
 800372c:	ee1f 1a90 	vmov	r1, s31
 8003730:	f008 f9df 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003734:	4641      	mov	r1, r8
 8003736:	4630      	mov	r0, r6
    boat2_r.setPosition(-68, -46, 23, 44);
 8003738:	f04f 082c 	mov.w	r8, #44	; 0x2c
 800373c:	f008 f9d9 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003740:	464b      	mov	r3, r9
 8003742:	f06f 022d 	mvn.w	r2, #45	; 0x2d
 8003746:	9802      	ldr	r0, [sp, #8]
 8003748:	f8cd 8000 	str.w	r8, [sp]
 800374c:	f06f 0143 	mvn.w	r1, #67	; 0x43
 8003750:	f7fe fe3f 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003754:	9803      	ldr	r0, [sp, #12]
 8003756:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800375a:	a916      	add	r1, sp, #88	; 0x58
 800375c:	f00a fb0b 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_1.setPosition(0, 0, 23, 23);
 8003760:	464b      	mov	r3, r9
 8003762:	4622      	mov	r2, r4
 8003764:	9803      	ldr	r0, [sp, #12]
 8003766:	f8cd 9000 	str.w	r9, [sp]
 800376a:	4621      	mov	r1, r4
 800376c:	f7fe fe31 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003770:	9803      	ldr	r0, [sp, #12]
 8003772:	4621      	mov	r1, r4
 8003774:	f009 fbe7 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2_r.add(scalableImage1_1_1_1);
 8003778:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800377c:	f008 f9b9 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003780:	9804      	ldr	r0, [sp, #16]
 8003782:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003786:	a916      	add	r1, sp, #88	; 0x58
 8003788:	f00a faf5 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_2.setPosition(0, 22, 23, 23);
 800378c:	464b      	mov	r3, r9
 800378e:	2216      	movs	r2, #22
 8003790:	9804      	ldr	r0, [sp, #16]
 8003792:	f8cd 9000 	str.w	r9, [sp]
 8003796:	4621      	mov	r1, r4
 8003798:	f7fe fe1b 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800379c:	9804      	ldr	r0, [sp, #16]
 800379e:	4621      	mov	r1, r4
 80037a0:	f009 fbd1 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2_r.add(scalableImage1_2);
 80037a4:	9904      	ldr	r1, [sp, #16]
 80037a6:	9802      	ldr	r0, [sp, #8]
 80037a8:	f008 f9a3 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80037ac:	9902      	ldr	r1, [sp, #8]
 80037ae:	4630      	mov	r0, r6
 80037b0:	f008 f99f 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat3.setPosition(-79, 72, 68, 23);
 80037b4:	2344      	movs	r3, #68	; 0x44
 80037b6:	2248      	movs	r2, #72	; 0x48
 80037b8:	ee19 0a10 	vmov	r0, s18
 80037bc:	f06f 014e 	mvn.w	r1, #78	; 0x4e
 80037c0:	f8cd 9000 	str.w	r9, [sp]
 80037c4:	f04f 0a06 	mov.w	sl, #6
 80037c8:	f7fe fe03 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80037cc:	9805      	ldr	r0, [sp, #20]
 80037ce:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80037d2:	a916      	add	r1, sp, #88	; 0x58
 80037d4:	f00a facf 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2.setPosition(44, 0, 23, 23);
 80037d8:	464b      	mov	r3, r9
 80037da:	4622      	mov	r2, r4
 80037dc:	9805      	ldr	r0, [sp, #20]
 80037de:	f8cd 9000 	str.w	r9, [sp]
 80037e2:	4641      	mov	r1, r8
 80037e4:	f7fe fdf5 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80037e8:	9805      	ldr	r0, [sp, #20]
 80037ea:	4621      	mov	r1, r4
 80037ec:	f009 fbab 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2_2);
 80037f0:	9905      	ldr	r1, [sp, #20]
 80037f2:	ee19 0a10 	vmov	r0, s18
 80037f6:	f008 f97c 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80037fa:	9806      	ldr	r0, [sp, #24]
 80037fc:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003800:	a916      	add	r1, sp, #88	; 0x58
 8003802:	f00a fab8 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1.setPosition(22, 0, 23, 23);
 8003806:	464b      	mov	r3, r9
 8003808:	4622      	mov	r2, r4
 800380a:	9806      	ldr	r0, [sp, #24]
 800380c:	f8cd 9000 	str.w	r9, [sp]
 8003810:	2116      	movs	r1, #22
 8003812:	f7fe fdde 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003816:	9806      	ldr	r0, [sp, #24]
 8003818:	4621      	mov	r1, r4
 800381a:	f009 fb94 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2_1);
 800381e:	9906      	ldr	r1, [sp, #24]
 8003820:	ee19 0a10 	vmov	r0, s18
 8003824:	f008 f965 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003828:	9807      	ldr	r0, [sp, #28]
 800382a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800382e:	a916      	add	r1, sp, #88	; 0x58
 8003830:	f00a faa1 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2.setPosition(0, 0, 23, 23);
 8003834:	464b      	mov	r3, r9
 8003836:	4622      	mov	r2, r4
 8003838:	9807      	ldr	r0, [sp, #28]
 800383a:	f8cd 9000 	str.w	r9, [sp]
 800383e:	4621      	mov	r1, r4
 8003840:	f7fe fdc7 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003844:	9807      	ldr	r0, [sp, #28]
 8003846:	4621      	mov	r1, r4
 8003848:	f009 fb7d 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2);
 800384c:	9907      	ldr	r1, [sp, #28]
 800384e:	ee19 0a10 	vmov	r0, s18
 8003852:	f008 f94e 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003856:	ee19 1a10 	vmov	r1, s18
 800385a:	4630      	mov	r0, r6
 800385c:	f008 f949 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat4.setPosition(-102, 111, 90, 23);
 8003860:	235a      	movs	r3, #90	; 0x5a
 8003862:	226f      	movs	r2, #111	; 0x6f
 8003864:	ee18 0a90 	vmov	r0, s17
 8003868:	f06f 0165 	mvn.w	r1, #101	; 0x65
 800386c:	f8cd 9000 	str.w	r9, [sp]
 8003870:	f7fe fdaf 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003874:	9808      	ldr	r0, [sp, #32]
 8003876:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800387a:	a916      	add	r1, sp, #88	; 0x58
 800387c:	f00a fa7b 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1.setPosition(44, 0, 23, 23);
 8003880:	464b      	mov	r3, r9
 8003882:	4622      	mov	r2, r4
 8003884:	9808      	ldr	r0, [sp, #32]
 8003886:	f8cd 9000 	str.w	r9, [sp]
 800388a:	4641      	mov	r1, r8
 800388c:	f7fe fda1 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003890:	9808      	ldr	r0, [sp, #32]
 8003892:	4621      	mov	r1, r4
 8003894:	f009 fb57 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_2_1);
 8003898:	9908      	ldr	r1, [sp, #32]
 800389a:	ee18 0a90 	vmov	r0, s17
 800389e:	f008 f928 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80038a2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80038a4:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80038a8:	a916      	add	r1, sp, #88	; 0x58
 80038aa:	f00a fa64 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1.setPosition(66, 0, 25, 23);
 80038ae:	463b      	mov	r3, r7
 80038b0:	4622      	mov	r2, r4
 80038b2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80038b4:	f8cd 9000 	str.w	r9, [sp]
 80038b8:	2142      	movs	r1, #66	; 0x42
 80038ba:	f7fe fd8a 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80038be:	9809      	ldr	r0, [sp, #36]	; 0x24
 80038c0:	4621      	mov	r1, r4
 80038c2:	f009 fb40 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_2_1_1);
 80038c6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80038c8:	ee18 0a90 	vmov	r0, s17
 80038cc:	f008 f911 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80038d0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80038d2:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80038d6:	a916      	add	r1, sp, #88	; 0x58
 80038d8:	f00a fa4d 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_2.setPosition(22, 0, 23, 23);
 80038dc:	464b      	mov	r3, r9
 80038de:	4622      	mov	r2, r4
 80038e0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80038e2:	f8cd 9000 	str.w	r9, [sp]
 80038e6:	2116      	movs	r1, #22
 80038e8:	f7fe fd73 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80038ec:	980a      	ldr	r0, [sp, #40]	; 0x28
 80038ee:	4621      	mov	r1, r4
 80038f0:	f009 fb29 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_1_2);
 80038f4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80038f6:	ee18 0a90 	vmov	r0, s17
 80038fa:	f008 f8fa 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_4.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80038fe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003900:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003904:	a916      	add	r1, sp, #88	; 0x58
 8003906:	f00a fa36 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_4.setPosition(0, 0, 23, 23);
 800390a:	464b      	mov	r3, r9
 800390c:	4622      	mov	r2, r4
 800390e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003910:	f8cd 9000 	str.w	r9, [sp]
 8003914:	4621      	mov	r1, r4
 8003916:	f7fe fd5c 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_4.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800391a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800391c:	4621      	mov	r1, r4
 800391e:	f009 fb12 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_4);
 8003922:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003924:	ee18 0a90 	vmov	r0, s17
 8003928:	f008 f8e3 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800392c:	ee18 1a90 	vmov	r1, s17
 8003930:	4630      	mov	r0, r6
 8003932:	f008 f8de 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat5.setPosition(-123, 149, 113, 23);
 8003936:	2371      	movs	r3, #113	; 0x71
 8003938:	2295      	movs	r2, #149	; 0x95
 800393a:	f06f 017a 	mvn.w	r1, #122	; 0x7a
 800393e:	4658      	mov	r0, fp
 8003940:	f8cd 9000 	str.w	r9, [sp]
 8003944:	f7fe fd45 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003948:	980c      	ldr	r0, [sp, #48]	; 0x30
 800394a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800394e:	a916      	add	r1, sp, #88	; 0x58
 8003950:	f00a fa11 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_2.setPosition(44, 0, 23, 23);
 8003954:	464b      	mov	r3, r9
 8003956:	4622      	mov	r2, r4
 8003958:	980c      	ldr	r0, [sp, #48]	; 0x30
 800395a:	f8cd 9000 	str.w	r9, [sp]
 800395e:	4641      	mov	r1, r8
 8003960:	f7fe fd37 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003964:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003966:	4621      	mov	r1, r4
 8003968:	f009 faed 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_2);
 800396c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800396e:	4658      	mov	r0, fp
 8003970:	f008 f8bf 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003974:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003976:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800397a:	a916      	add	r1, sp, #88	; 0x58
 800397c:	f00a f9fb 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1_1.setPosition(66, 0, 25, 23);
 8003980:	463b      	mov	r3, r7
 8003982:	4622      	mov	r2, r4
 8003984:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003986:	f8cd 9000 	str.w	r9, [sp]
 800398a:	2142      	movs	r1, #66	; 0x42
 800398c:	f7fe fd21 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003990:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003992:	4621      	mov	r1, r4
 8003994:	f009 fad7 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_1_1);
 8003998:	990d      	ldr	r1, [sp, #52]	; 0x34
 800399a:	4658      	mov	r0, fp
 800399c:	f008 f8a9 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80039a0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80039a2:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80039a6:	a916      	add	r1, sp, #88	; 0x58
 80039a8:	f00a f9e5 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1_1_1.setPosition(90, 0, 25, 23);
 80039ac:	463b      	mov	r3, r7
 80039ae:	4622      	mov	r2, r4
 80039b0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80039b2:	f8cd 9000 	str.w	r9, [sp]
 80039b6:	215a      	movs	r1, #90	; 0x5a
 80039b8:	f7fe fd0b 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80039bc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80039be:	4621      	mov	r1, r4
 80039c0:	f009 fac1 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_1_1_1);
 80039c4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80039c6:	4658      	mov	r0, fp
 80039c8:	f008 f893 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80039cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80039ce:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80039d2:	a916      	add	r1, sp, #88	; 0x58
 80039d4:	f00a f9cf 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_2_1.setPosition(22, 0, 23, 23);
 80039d8:	464b      	mov	r3, r9
 80039da:	4622      	mov	r2, r4
 80039dc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80039de:	f8cd 9000 	str.w	r9, [sp]
 80039e2:	2116      	movs	r1, #22
 80039e4:	f7fe fcf5 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80039e8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80039ea:	4621      	mov	r1, r4
 80039ec:	f009 faab 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_1_2_1);
 80039f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80039f2:	4658      	mov	r0, fp
 80039f4:	f008 f87d 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_4_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80039f8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80039fa:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 80039fe:	a916      	add	r1, sp, #88	; 0x58
 8003a00:	f00a f9b9 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_4_1.setPosition(0, 0, 23, 23);
 8003a04:	464b      	mov	r3, r9
 8003a06:	4622      	mov	r2, r4
 8003a08:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003a0a:	f8cd 9000 	str.w	r9, [sp]
 8003a0e:	4621      	mov	r1, r4
 8003a10:	f7fe fcdf 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_4_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003a14:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003a16:	4621      	mov	r1, r4
 8003a18:	f009 fa95 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_4_1);
 8003a1c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003a1e:	4658      	mov	r0, fp
 8003a20:	f008 f867 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a24:	4659      	mov	r1, fp
 8003a26:	4630      	mov	r0, r6
 8003a28:	f008 f863 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat2.setPosition(6, 83, 44, 23);
 8003a2c:	4643      	mov	r3, r8
 8003a2e:	2253      	movs	r2, #83	; 0x53
 8003a30:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003a32:	f8cd 9000 	str.w	r9, [sp]
 8003a36:	4651      	mov	r1, sl
 8003a38:	f7fe fccb 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003a3c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003a3e:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003a42:	a916      	add	r1, sp, #88	; 0x58
 8003a44:	f00a f997 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_1.setPosition(22, 0, 23, 23);
 8003a48:	464b      	mov	r3, r9
 8003a4a:	4622      	mov	r2, r4
 8003a4c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003a4e:	f8cd 9000 	str.w	r9, [sp]
 8003a52:	2116      	movs	r1, #22
 8003a54:	f7fe fcbd 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003a58:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003a5a:	4621      	mov	r1, r4
 8003a5c:	f009 fa73 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2.add(scalableImage2_1_1);
 8003a60:	e9dd 0111 	ldrd	r0, r1, [sp, #68]	; 0x44
 8003a64:	f008 f845 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_3.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003a68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003a6a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003a6e:	a916      	add	r1, sp, #88	; 0x58
 8003a70:	f00a f981 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_3.setPosition(0, 0, 23, 23);
 8003a74:	464b      	mov	r3, r9
 8003a76:	4622      	mov	r2, r4
 8003a78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003a7a:	f8cd 9000 	str.w	r9, [sp]
 8003a7e:	4621      	mov	r1, r4
 8003a80:	f7fe fca7 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003a84:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003a86:	4621      	mov	r1, r4
 8003a88:	f009 fa5d 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2.add(scalableImage2_3);
 8003a8c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003a8e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003a90:	f008 f82f 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a94:	9911      	ldr	r1, [sp, #68]	; 0x44
 8003a96:	4630      	mov	r0, r6
 8003a98:	f008 f82b 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textShip.setXY(6, 54);
 8003a9c:	ee19 0a90 	vmov	r0, s19
 8003aa0:	2236      	movs	r2, #54	; 0x36
 8003aa2:	4651      	mov	r1, sl
 8003aa4:	f7fe fc88 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003aa8:	4b2e      	ldr	r3, [pc, #184]	; (8003b64 <_ZN18GameScreenViewBaseC1Ev+0xa90>)
 8003aaa:	f8c5 3724 	str.w	r3, [r5, #1828]	; 0x724
        boundingArea = calculateBoundingArea();
 8003aae:	f04f 33ff 	mov.w	r3, #4294967295
 8003ab2:	f8c5 3734 	str.w	r3, [r5, #1844]	; 0x734
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ab6:	4b2c      	ldr	r3, [pc, #176]	; (8003b68 <_ZN18GameScreenViewBaseC1Ev+0xa94>)
        linespace = space;
 8003ab8:	f8a5 4728 	strh.w	r4, [r5, #1832]	; 0x728
 8003abc:	681b      	ldr	r3, [r3, #0]
        boundingArea = calculateBoundingArea();
 8003abe:	f8c5 4730 	str.w	r4, [r5, #1840]	; 0x730
 8003ac2:	f8c5 4738 	str.w	r4, [r5, #1848]	; 0x738
    Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_DESTROYER).getText());
 8003ac6:	f205 776c 	addw	r7, r5, #1900	; 0x76c
 8003aca:	b92b      	cbnz	r3, 8003ad8 <_ZN18GameScreenViewBaseC1Ev+0xa04>
 8003acc:	4b27      	ldr	r3, [pc, #156]	; (8003b6c <_ZN18GameScreenViewBaseC1Ev+0xa98>)
 8003ace:	4a28      	ldr	r2, [pc, #160]	; (8003b70 <_ZN18GameScreenViewBaseC1Ev+0xa9c>)
 8003ad0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ad2:	4828      	ldr	r0, [pc, #160]	; (8003b74 <_ZN18GameScreenViewBaseC1Ev+0xaa0>)
 8003ad4:	f01c fd58 	bl	8020588 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003ad8:	4b27      	ldr	r3, [pc, #156]	; (8003b78 <_ZN18GameScreenViewBaseC1Ev+0xaa4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ada:	881b      	ldrh	r3, [r3, #0]
 8003adc:	2b0f      	cmp	r3, #15
 8003ade:	d803      	bhi.n	8003ae8 <_ZN18GameScreenViewBaseC1Ev+0xa14>
 8003ae0:	4b26      	ldr	r3, [pc, #152]	; (8003b7c <_ZN18GameScreenViewBaseC1Ev+0xaa8>)
 8003ae2:	4a23      	ldr	r2, [pc, #140]	; (8003b70 <_ZN18GameScreenViewBaseC1Ev+0xa9c>)
 8003ae4:	2161      	movs	r1, #97	; 0x61
 8003ae6:	e7f4      	b.n	8003ad2 <_ZN18GameScreenViewBaseC1Ev+0x9fe>
        return texts->getText(typedTextId);
 8003ae8:	4b25      	ldr	r3, [pc, #148]	; (8003b80 <_ZN18GameScreenViewBaseC1Ev+0xaac>)
 8003aea:	210f      	movs	r1, #15
 8003aec:	6818      	ldr	r0, [r3, #0]
 8003aee:	f001 fa2d 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 8003af2:	4a24      	ldr	r2, [pc, #144]	; (8003b84 <_ZN18GameScreenViewBaseC1Ev+0xab0>)
 8003af4:	4603      	mov	r3, r0
 8003af6:	2132      	movs	r1, #50	; 0x32
 8003af8:	4638      	mov	r0, r7
 8003afa:	f00e ff83 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textShip.resizeToCurrentText();
 8003afe:	ee19 0a90 	vmov	r0, s19
        wc1 = value;
 8003b02:	f8c5 773c 	str.w	r7, [r5, #1852]	; 0x73c
 8003b06:	f009 ff87 	bl	800da18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b0a:	4b1f      	ldr	r3, [pc, #124]	; (8003b88 <_ZN18GameScreenViewBaseC1Ev+0xab4>)
 8003b0c:	9316      	str	r3, [sp, #88]	; 0x58
    textShip.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4OIJ));
 8003b0e:	ee19 0a90 	vmov	r0, s19
 8003b12:	2310      	movs	r3, #16
 8003b14:	a916      	add	r1, sp, #88	; 0x58
 8003b16:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 8003b1a:	f009 ff9d 	bl	800da58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b1e:	ee19 1a90 	vmov	r1, s19
 8003b22:	4630      	mov	r0, r6
 8003b24:	f007 ffe5 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_YOUR_FLEET_ID));
 8003b28:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003b2a:	230f      	movs	r3, #15
 8003b2c:	a916      	add	r1, sp, #88	; 0x58
 8003b2e:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8003b32:	f00a f920 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage3.setPosition(6, 6, 229, 32);
 8003b36:	2320      	movs	r3, #32
 8003b38:	4652      	mov	r2, sl
 8003b3a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003b3c:	9300      	str	r3, [sp, #0]
 8003b3e:	4651      	mov	r1, sl
 8003b40:	23e5      	movs	r3, #229	; 0xe5
 8003b42:	f7fe fc46 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003b46:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003b48:	4621      	mov	r1, r4
 8003b4a:	f009 f9fc 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003b4e:	4630      	mov	r0, r6
 8003b50:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003b52:	f007 ffce 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003b56:	4628      	mov	r0, r5
 8003b58:	b019      	add	sp, #100	; 0x64
 8003b5a:	ecbd 8b10 	vpop	{d8-d15}
 8003b5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b62:	bf00      	nop
 8003b64:	ff1434a8 	.word	0xff1434a8
 8003b68:	20015014 	.word	0x20015014
 8003b6c:	0802206c 	.word	0x0802206c
 8003b70:	0802216e 	.word	0x0802216e
 8003b74:	080220e9 	.word	0x080220e9
 8003b78:	20015018 	.word	0x20015018
 8003b7c:	08022130 	.word	0x08022130
 8003b80:	20015020 	.word	0x20015020
 8003b84:	080221a6 	.word	0x080221a6
 8003b88:	080221b4 	.word	0x080221b4

08003b8c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003b8c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003b8e:	4770      	bx	lr

08003b90 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003b90:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003b92:	4770      	bx	lr

08003b94 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003b94:	4770      	bx	lr

08003b96 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003b96:	888b      	ldrh	r3, [r1, #4]
 8003b98:	69c0      	ldr	r0, [r0, #28]
 8003b9a:	680a      	ldr	r2, [r1, #0]
 8003b9c:	0adb      	lsrs	r3, r3, #11
 8003b9e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8003ba2:	4410      	add	r0, r2
 8003ba4:	4770      	bx	lr

08003ba6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003ba6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8003ba8:	b1c2      	cbz	r2, 8003bdc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003baa:	7b13      	ldrb	r3, [r2, #12]
 8003bac:	b1b3      	cbz	r3, 8003bdc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003bae:	7b54      	ldrb	r4, [r2, #13]
 8003bb0:	7ad2      	ldrb	r2, [r2, #11]
 8003bb2:	0224      	lsls	r4, r4, #8
 8003bb4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003bb8:	4314      	orrs	r4, r2
 8003bba:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003bbc:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003bbe:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003bc2:	8813      	ldrh	r3, [r2, #0]
 8003bc4:	428b      	cmp	r3, r1
 8003bc6:	d102      	bne.n	8003bce <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003bc8:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8003bcc:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003bce:	d805      	bhi.n	8003bdc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003bd0:	3801      	subs	r0, #1
 8003bd2:	b280      	uxth	r0, r0
 8003bd4:	3204      	adds	r2, #4
 8003bd6:	2800      	cmp	r0, #0
 8003bd8:	d1f3      	bne.n	8003bc2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003bda:	e7f7      	b.n	8003bcc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003bdc:	2000      	movs	r0, #0
 8003bde:	e7f5      	b.n	8003bcc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003be0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003be0:	b510      	push	{r4, lr}
 8003be2:	212c      	movs	r1, #44	; 0x2c
 8003be4:	4604      	mov	r4, r0
 8003be6:	f01c fc1f 	bl	8020428 <_ZdlPvj>
 8003bea:	4620      	mov	r0, r4
 8003bec:	bd10      	pop	{r4, pc}
	...

08003bf0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003bf0:	b530      	push	{r4, r5, lr}
 8003bf2:	b08b      	sub	sp, #44	; 0x2c
 8003bf4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8003bf6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8003bfa:	9508      	str	r5, [sp, #32]
 8003bfc:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8003c00:	9507      	str	r5, [sp, #28]
 8003c02:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8003c06:	9506      	str	r5, [sp, #24]
 8003c08:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8003c0c:	9505      	str	r5, [sp, #20]
 8003c0e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8003c12:	9504      	str	r5, [sp, #16]
 8003c14:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8003c18:	9503      	str	r5, [sp, #12]
 8003c1a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8003c1e:	9502      	str	r5, [sp, #8]
 8003c20:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8003c24:	9501      	str	r5, [sp, #4]
 8003c26:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8003c2a:	9500      	str	r5, [sp, #0]
 8003c2c:	f00d f818 	bl	8010c60 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8003c30:	4b06      	ldr	r3, [pc, #24]	; (8003c4c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8003c32:	6023      	str	r3, [r4, #0]
 8003c34:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003c36:	61e3      	str	r3, [r4, #28]
 8003c38:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003c3a:	6223      	str	r3, [r4, #32]
 8003c3c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003c3e:	6263      	str	r3, [r4, #36]	; 0x24
 8003c40:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8003c42:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8003c44:	4620      	mov	r0, r4
 8003c46:	b00b      	add	sp, #44	; 0x2c
 8003c48:	bd30      	pop	{r4, r5, pc}
 8003c4a:	bf00      	nop
 8003c4c:	08022b30 	.word	0x08022b30

08003c50 <_ZN18HomeScreenViewBaseD1Ev>:
}

HomeScreenViewBase::~HomeScreenViewBase()
{

}
 8003c50:	4770      	bx	lr

08003c52 <_ZN18HomeScreenViewBase11setupScreenEv>:

void HomeScreenViewBase::setupScreen()
{

}
 8003c52:	4770      	bx	lr

08003c54 <_ZN8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003c54:	4770      	bx	lr

08003c56 <_ZN8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003c56:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003c58:	68c2      	ldr	r2, [r0, #12]
 8003c5a:	6844      	ldr	r4, [r0, #4]
 8003c5c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003c5e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003c60:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003c64:	07d2      	lsls	r2, r2, #31
 8003c66:	bf48      	it	mi
 8003c68:	5962      	ldrmi	r2, [r4, r5]
 8003c6a:	689b      	ldr	r3, [r3, #8]
    }
 8003c6c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003c6e:	bf48      	it	mi
 8003c70:	58d3      	ldrmi	r3, [r2, r3]
 8003c72:	4718      	bx	r3

08003c74 <_ZNK8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003c74:	6843      	ldr	r3, [r0, #4]
 8003c76:	b12b      	cbz	r3, 8003c84 <_ZNK8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003c78:	6883      	ldr	r3, [r0, #8]
 8003c7a:	b92b      	cbnz	r3, 8003c88 <_ZNK8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003c7c:	68c0      	ldr	r0, [r0, #12]
 8003c7e:	f000 0001 	and.w	r0, r0, #1
 8003c82:	4770      	bx	lr
 8003c84:	4618      	mov	r0, r3
 8003c86:	4770      	bx	lr
 8003c88:	2001      	movs	r0, #1
    }
 8003c8a:	4770      	bx	lr

08003c8c <_ZN8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003c8c:	b510      	push	{r4, lr}
 8003c8e:	2110      	movs	r1, #16
 8003c90:	4604      	mov	r4, r0
 8003c92:	f01c fbc9 	bl	8020428 <_ZdlPvj>
 8003c96:	4620      	mov	r0, r4
 8003c98:	bd10      	pop	{r4, pc}

08003c9a <_ZN18HomeScreenViewBaseD0Ev>:
HomeScreenViewBase::~HomeScreenViewBase()
 8003c9a:	b510      	push	{r4, lr}
}
 8003c9c:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
HomeScreenViewBase::~HomeScreenViewBase()
 8003ca0:	4604      	mov	r4, r0
}
 8003ca2:	f01c fbc1 	bl	8020428 <_ZdlPvj>
 8003ca6:	4620      	mov	r0, r4
 8003ca8:	bd10      	pop	{r4, pc}

08003caa <_ZN18HomeScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void HomeScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 8003caa:	f500 70a4 	add.w	r0, r0, #328	; 0x148
 8003cae:	4288      	cmp	r0, r1
{
 8003cb0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel1)
 8003cb2:	d105      	bne.n	8003cc0 <_ZN18HomeScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~HomeScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003cb4:	f00b feb0 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel1 clicked change screen to GameScreen
        //Go to GameScreen with screen transition towards East
        application().gotoGameScreenScreenSlideTransitionEast();
    }
}
 8003cb8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoGameScreenScreenSlideTransitionEast();
 8003cbc:	f7fe bef4 	b.w	8002aa8 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>
}
 8003cc0:	bd08      	pop	{r3, pc}
	...

08003cc4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
        : x(0), y(0), width(0), height(0)
 8003cc4:	2300      	movs	r3, #0
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8003cc6:	b510      	push	{r4, lr}
 8003cc8:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8003ccc:	e9c0 3303 	strd	r3, r3, [r0, #12]
          visible(true)
 8003cd0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8003cd4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8003cd8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003cdc:	8483      	strh	r3, [r0, #36]	; 0x24
        : Widget(), bitmap(bmp), alpha(255)
 8003cde:	4b06      	ldr	r3, [pc, #24]	; (8003cf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 8003ce0:	6003      	str	r3, [r0, #0]
 8003ce2:	880b      	ldrh	r3, [r1, #0]
 8003ce4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8003ce6:	23ff      	movs	r3, #255	; 0xff
    Image(const Bitmap& bmp = Bitmap())
 8003ce8:	4604      	mov	r4, r0
        : Widget(), bitmap(bmp), alpha(255)
 8003cea:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
    {
        Image::setBitmap(bmp);
 8003cee:	f00a f842 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8003cf2:	4620      	mov	r0, r4
 8003cf4:	bd10      	pop	{r4, pc}
 8003cf6:	bf00      	nop
 8003cf8:	080232b8 	.word	0x080232b8

08003cfc <_ZN18HomeScreenViewBaseC1Ev>:
HomeScreenViewBase::HomeScreenViewBase() :
 8003cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d00:	ed2d 8b02 	vpush	{d8}
 8003d04:	4604      	mov	r4, r0
 8003d06:	b085      	sub	sp, #20
    buttonCallback(this, &HomeScreenViewBase::buttonCallbackHandler)
 8003d08:	46a0      	mov	r8, r4
 8003d0a:	f00d f9c5 	bl	8011098 <_ZN8touchgfx6ScreenC1Ev>
 8003d0e:	2200      	movs	r2, #0
 8003d10:	4b76      	ldr	r3, [pc, #472]	; (8003eec <_ZN18HomeScreenViewBaseC1Ev+0x1f0>)
 8003d12:	63e2      	str	r2, [r4, #60]	; 0x3c
 8003d14:	f848 3b40 	str.w	r3, [r8], #64
 8003d18:	4640      	mov	r0, r8
 8003d1a:	f7fe fb6d 	bl	80023f8 <_ZN8touchgfx3BoxC1Ev>
 8003d1e:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003d22:	4618      	mov	r0, r3
 8003d24:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003d28:	ee08 3a90 	vmov	s17, r3
 8003d2c:	f104 0ac4 	add.w	sl, r4, #196	; 0xc4
 8003d30:	f7fe fb62 	bl	80023f8 <_ZN8touchgfx3BoxC1Ev>
 8003d34:	f64f 75ff 	movw	r5, #65535	; 0xffff
 8003d38:	a903      	add	r1, sp, #12
 8003d3a:	4658      	mov	r0, fp
 8003d3c:	f104 09f0 	add.w	r9, r4, #240	; 0xf0
 8003d40:	f8ad 500c 	strh.w	r5, [sp, #12]
 8003d44:	f7ff ffbe 	bl	8003cc4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003d48:	a903      	add	r1, sp, #12
 8003d4a:	4650      	mov	r0, sl
 8003d4c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8003d50:	f7ff ffb8 	bl	8003cc4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003d54:	a903      	add	r1, sp, #12
 8003d56:	4648      	mov	r0, r9
 8003d58:	f8ad 500c 	strh.w	r5, [sp, #12]
 8003d5c:	f7ff ffb2 	bl	8003cc4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003d60:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003d64:	f504 77a4 	add.w	r7, r4, #328	; 0x148
 8003d68:	a903      	add	r1, sp, #12
 8003d6a:	4618      	mov	r0, r3
 8003d6c:	ee08 3a10 	vmov	s16, r3
 8003d70:	f504 76c8 	add.w	r6, r4, #400	; 0x190
 8003d74:	f8ad 500c 	strh.w	r5, [sp, #12]
 8003d78:	f7ff ffa4 	bl	8003cc4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003d7c:	4638      	mov	r0, r7
 8003d7e:	f00a f931 	bl	800dfe4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d82:	4630      	mov	r0, r6
 8003d84:	f00a f92e 	bl	800dfe4 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003d88:	4b59      	ldr	r3, [pc, #356]	; (8003ef0 <_ZN18HomeScreenViewBaseC1Ev+0x1f4>)
 8003d8a:	e9c4 3476 	strd	r3, r4, [r4, #472]	; 0x1d8
 8003d8e:	4b59      	ldr	r3, [pc, #356]	; (8003ef4 <_ZN18HomeScreenViewBaseC1Ev+0x1f8>)
 8003d90:	f8c4 31e0 	str.w	r3, [r4, #480]	; 0x1e0
 8003d94:	2200      	movs	r2, #0
    __background.setPosition(0, 0, 240, 320);
 8003d96:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003d9a:	f8c4 21e4 	str.w	r2, [r4, #484]	; 0x1e4
 8003d9e:	4611      	mov	r1, r2
 8003da0:	9300      	str	r3, [sp, #0]
 8003da2:	4640      	mov	r0, r8
 8003da4:	23f0      	movs	r3, #240	; 0xf0
 8003da6:	1d25      	adds	r5, r4, #4
 8003da8:	f7fe fb13 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003dac:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003db0:	66a3      	str	r3, [r4, #104]	; 0x68
 8003db2:	4641      	mov	r1, r8
 8003db4:	4628      	mov	r0, r5
 8003db6:	f007 fe9c 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 240, 320);
 8003dba:	2200      	movs	r2, #0
 8003dbc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003dc0:	4611      	mov	r1, r2
 8003dc2:	ee18 0a90 	vmov	r0, s17
 8003dc6:	9300      	str	r3, [sp, #0]
 8003dc8:	23f0      	movs	r3, #240	; 0xf0
 8003dca:	f7fe fb02 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003dce:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003dd2:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8003dd6:	ee18 1a90 	vmov	r1, s17
 8003dda:	4628      	mov	r0, r5
 8003ddc:	f007 fe89 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(10, 48);
 8003de0:	2230      	movs	r2, #48	; 0x30
 8003de2:	4658      	mov	r0, fp
 8003de4:	210a      	movs	r1, #10
 8003de6:	f7fe fae7 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 8003dea:	f04f 0802 	mov.w	r8, #2
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BATTLESHIP_ID));
 8003dee:	a903      	add	r1, sp, #12
 8003df0:	4658      	mov	r0, fp
 8003df2:	f8ad 800c 	strh.w	r8, [sp, #12]
 8003df6:	f009 ffbe 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003dfa:	4659      	mov	r1, fp
 8003dfc:	4628      	mov	r0, r5
 8003dfe:	f007 fe78 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(182, 14);
 8003e02:	220e      	movs	r2, #14
 8003e04:	4650      	mov	r0, sl
 8003e06:	21b6      	movs	r1, #182	; 0xb6
 8003e08:	f7fe fad6 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 8003e0c:	230c      	movs	r3, #12
    image2.setBitmap(touchgfx::Bitmap(BITMAP_SHIP2_ID));
 8003e0e:	eb0d 0103 	add.w	r1, sp, r3
 8003e12:	4650      	mov	r0, sl
 8003e14:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003e18:	f009 ffad 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e1c:	4651      	mov	r1, sl
 8003e1e:	4628      	mov	r0, r5
 8003e20:	f007 fe67 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setXY(84, 100);
 8003e24:	2264      	movs	r2, #100	; 0x64
 8003e26:	4648      	mov	r0, r9
 8003e28:	2154      	movs	r1, #84	; 0x54
 8003e2a:	f7fe fac5 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 8003e2e:	230d      	movs	r3, #13
    image3.setBitmap(touchgfx::Bitmap(BITMAP_SHIP31_ID));
 8003e30:	a903      	add	r1, sp, #12
 8003e32:	4648      	mov	r0, r9
 8003e34:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003e38:	f009 ff9d 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e3c:	4649      	mov	r1, r9
 8003e3e:	4628      	mov	r0, r5
 8003e40:	f007 fe57 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image4.setXY(5, 208);
 8003e44:	22d0      	movs	r2, #208	; 0xd0
 8003e46:	ee18 0a10 	vmov	r0, s16
 8003e4a:	2105      	movs	r1, #5
 8003e4c:	f7fe fab4 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 8003e50:	230e      	movs	r3, #14
    image4.setBitmap(touchgfx::Bitmap(BITMAP_SHIP4_ID));
 8003e52:	ee18 0a10 	vmov	r0, s16
 8003e56:	a903      	add	r1, sp, #12
 8003e58:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003e5c:	f009 ff8b 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e60:	ee18 1a10 	vmov	r1, s16
 8003e64:	4628      	mov	r0, r5
 8003e66:	f007 fe44 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 160);
 8003e6a:	4638      	mov	r0, r7
 8003e6c:	22a0      	movs	r2, #160	; 0xa0
 8003e6e:	2121      	movs	r1, #33	; 0x21
 8003e70:	f7fe faa2 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 8003e74:	f04f 0a01 	mov.w	sl, #1
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID));
 8003e78:	aa03      	add	r2, sp, #12
 8003e7a:	a902      	add	r1, sp, #8
 8003e7c:	4638      	mov	r0, r7
 8003e7e:	f8ad a008 	strh.w	sl, [sp, #8]
 8003e82:	f8ad a00c 	strh.w	sl, [sp, #12]
 8003e86:	f009 fe44 	bl	800db12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003e8a:	2311      	movs	r3, #17
 8003e8c:	f8a4 3180 	strh.w	r3, [r4, #384]	; 0x180
        updateTextPosition();
 8003e90:	4638      	mov	r0, r7
 8003e92:	f7fe fac7 	bl	8002424 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003e96:	f04f 39ff 	mov.w	r9, #4294967295
    buttonWithLabel1.setAction(buttonCallback);
 8003e9a:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8003e9e:	f8c4 3170 	str.w	r3, [r4, #368]	; 0x170
 8003ea2:	4639      	mov	r1, r7
 8003ea4:	4628      	mov	r0, r5
        colorPressed = col;
 8003ea6:	e9c4 9961 	strd	r9, r9, [r4, #388]	; 0x184
 8003eaa:	f007 fe22 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1_1.setXY(33, 231);
 8003eae:	4630      	mov	r0, r6
 8003eb0:	22e7      	movs	r2, #231	; 0xe7
 8003eb2:	2121      	movs	r1, #33	; 0x21
 8003eb4:	f7fe fa80 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID));
 8003eb8:	aa03      	add	r2, sp, #12
 8003eba:	a902      	add	r1, sp, #8
 8003ebc:	4630      	mov	r0, r6
 8003ebe:	f8ad a008 	strh.w	sl, [sp, #8]
 8003ec2:	f8ad a00c 	strh.w	sl, [sp, #12]
 8003ec6:	f009 fe24 	bl	800db12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8003eca:	4630      	mov	r0, r6
 8003ecc:	f8a4 81c8 	strh.w	r8, [r4, #456]	; 0x1c8
 8003ed0:	f7fe faa8 	bl	8002424 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8003ed4:	4628      	mov	r0, r5
        colorPressed = col;
 8003ed6:	e9c4 9973 	strd	r9, r9, [r4, #460]	; 0x1cc
 8003eda:	4631      	mov	r1, r6
 8003edc:	f007 fe09 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003ee0:	4620      	mov	r0, r4
 8003ee2:	b005      	add	sp, #20
 8003ee4:	ecbd 8b02 	vpop	{d8}
 8003ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003eec:	08022ba8 	.word	0x08022ba8
 8003ef0:	08022b90 	.word	0x08022b90
 8003ef4:	08003cab 	.word	0x08003cab

08003ef8 <_ZN22OpponentScreenViewBaseD1Ev>:
}

OpponentScreenViewBase::~OpponentScreenViewBase()
{

}
 8003ef8:	4770      	bx	lr

08003efa <_ZN22OpponentScreenViewBase11setupScreenEv>:

void OpponentScreenViewBase::setupScreen()
{

}
 8003efa:	4770      	bx	lr

08003efc <_ZN22OpponentScreenViewBaseD0Ev>:
OpponentScreenViewBase::~OpponentScreenViewBase()
 8003efc:	b510      	push	{r4, lr}
}
 8003efe:	f640 210c 	movw	r1, #2572	; 0xa0c
OpponentScreenViewBase::~OpponentScreenViewBase()
 8003f02:	4604      	mov	r4, r0
}
 8003f04:	f01c fa90 	bl	8020428 <_ZdlPvj>
 8003f08:	4620      	mov	r0, r4
 8003f0a:	bd10      	pop	{r4, pc}

08003f0c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003f0c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003f0e:	2226      	movs	r2, #38	; 0x26
 8003f10:	4604      	mov	r4, r0
 8003f12:	2100      	movs	r1, #0
 8003f14:	f01c fbd4 	bl	80206c0 <memset>
 8003f18:	4620      	mov	r0, r4
 8003f1a:	f7ff f8bd 	bl	8003098 <_ZN8touchgfx8DrawableC1Ev>
        : typedTextId(id)
 8003f1e:	4b0a      	ldr	r3, [pc, #40]	; (8003f48 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x3c>)
 8003f20:	62a3      	str	r3, [r4, #40]	; 0x28
 8003f22:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003f26:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003f28:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003f2c:	2300      	movs	r3, #0
 8003f2e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : TextAreaWithWildcardBase(), wc1(0)
 8003f32:	4a06      	ldr	r2, [pc, #24]	; (8003f4c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 8003f34:	6022      	str	r2, [r4, #0]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003f36:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8003f3a:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003f3e:	8723      	strh	r3, [r4, #56]	; 0x38
 8003f40:	63e3      	str	r3, [r4, #60]	; 0x3c
 8003f42:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003f44:	4620      	mov	r0, r4
 8003f46:	bd10      	pop	{r4, pc}
 8003f48:	080221b4 	.word	0x080221b4
 8003f4c:	080221c4 	.word	0x080221c4

08003f50 <_ZN22OpponentScreenViewBaseC1Ev>:
OpponentScreenViewBase::OpponentScreenViewBase()
 8003f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f54:	ed2d 8b10 	vpush	{d8-d15}
 8003f58:	4605      	mov	r5, r0
 8003f5a:	b09d      	sub	sp, #116	; 0x74
 8003f5c:	46ab      	mov	fp, r5
 8003f5e:	2400      	movs	r4, #0
 8003f60:	f00d f89a 	bl	8011098 <_ZN8touchgfx6ScreenC1Ev>
 8003f64:	4bdd      	ldr	r3, [pc, #884]	; (80042dc <_ZN22OpponentScreenViewBaseC1Ev+0x38c>)
 8003f66:	63ec      	str	r4, [r5, #60]	; 0x3c
 8003f68:	f84b 3b40 	str.w	r3, [fp], #64
 8003f6c:	4658      	mov	r0, fp
 8003f6e:	f7fe fa43 	bl	80023f8 <_ZN8touchgfx3BoxC1Ev>
 8003f72:	f105 036c 	add.w	r3, r5, #108	; 0x6c
 8003f76:	f105 0998 	add.w	r9, r5, #152	; 0x98
 8003f7a:	4618      	mov	r0, r3
 8003f7c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8003f80:	9319      	str	r3, [sp, #100]	; 0x64
 8003f82:	f7fe fa39 	bl	80023f8 <_ZN8touchgfx3BoxC1Ev>
 8003f86:	a91a      	add	r1, sp, #104	; 0x68
 8003f88:	4648      	mov	r0, r9
 8003f8a:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8003f8e:	f009 f81f 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003f92:	f105 03c4 	add.w	r3, r5, #196	; 0xc4
 8003f96:	4618      	mov	r0, r3
 8003f98:	ee09 3a90 	vmov	s19, r3
 8003f9c:	f7ff f88e 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8003fa0:	f105 03f0 	add.w	r3, r5, #240	; 0xf0
 8003fa4:	a91a      	add	r1, sp, #104	; 0x68
 8003fa6:	4618      	mov	r0, r3
 8003fa8:	ee0a 3a10 	vmov	s20, r3
 8003fac:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8003fb0:	f009 f80e 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003fb4:	f505 738e 	add.w	r3, r5, #284	; 0x11c
 8003fb8:	f505 77a4 	add.w	r7, r5, #328	; 0x148
 8003fbc:	a91a      	add	r1, sp, #104	; 0x68
 8003fbe:	4618      	mov	r0, r3
 8003fc0:	ee0a 3a90 	vmov	s21, r3
 8003fc4:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8003fc8:	f009 f802 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003fcc:	4638      	mov	r0, r7
 8003fce:	f7ff f875 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8003fd2:	f505 73ba 	add.w	r3, r5, #372	; 0x174
 8003fd6:	a91a      	add	r1, sp, #104	; 0x68
 8003fd8:	4618      	mov	r0, r3
 8003fda:	ee0b 3a10 	vmov	s22, r3
 8003fde:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8003fe2:	f008 fff5 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003fe6:	f505 73d0 	add.w	r3, r5, #416	; 0x1a0
 8003fea:	a91a      	add	r1, sp, #104	; 0x68
 8003fec:	4618      	mov	r0, r3
 8003fee:	ee0b 3a90 	vmov	s23, r3
 8003ff2:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8003ff6:	f008 ffeb 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003ffa:	f505 73e6 	add.w	r3, r5, #460	; 0x1cc
 8003ffe:	a91a      	add	r1, sp, #104	; 0x68
 8004000:	4618      	mov	r0, r3
 8004002:	ee0c 3a10 	vmov	s24, r3
 8004006:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 800400a:	f008 ffe1 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800400e:	f505 73fc 	add.w	r3, r5, #504	; 0x1f8
 8004012:	a91a      	add	r1, sp, #104	; 0x68
 8004014:	4618      	mov	r0, r3
 8004016:	ee0c 3a90 	vmov	s25, r3
 800401a:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 800401e:	f008 ffd7 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004022:	f505 7309 	add.w	r3, r5, #548	; 0x224
 8004026:	f505 7a14 	add.w	sl, r5, #592	; 0x250
 800402a:	a91a      	add	r1, sp, #104	; 0x68
 800402c:	4618      	mov	r0, r3
 800402e:	ee0d 3a10 	vmov	s26, r3
 8004032:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004036:	f008 ffcb 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800403a:	4650      	mov	r0, sl
 800403c:	f7ff f83e 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8004040:	f505 731f 	add.w	r3, r5, #636	; 0x27c
 8004044:	a91a      	add	r1, sp, #104	; 0x68
 8004046:	4618      	mov	r0, r3
 8004048:	ee0d 3a90 	vmov	s27, r3
 800404c:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004050:	f008 ffbe 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004054:	f505 732a 	add.w	r3, r5, #680	; 0x2a8
 8004058:	a91a      	add	r1, sp, #104	; 0x68
 800405a:	4618      	mov	r0, r3
 800405c:	ee0e 3a10 	vmov	s28, r3
 8004060:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004064:	f008 ffb4 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004068:	f505 7335 	add.w	r3, r5, #724	; 0x2d4
 800406c:	a91a      	add	r1, sp, #104	; 0x68
 800406e:	4618      	mov	r0, r3
 8004070:	ee0e 3a90 	vmov	s29, r3
 8004074:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004078:	f008 ffaa 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800407c:	f505 7340 	add.w	r3, r5, #768	; 0x300
 8004080:	a91a      	add	r1, sp, #104	; 0x68
 8004082:	4618      	mov	r0, r3
 8004084:	ee0f 3a10 	vmov	s30, r3
 8004088:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 800408c:	f008 ffa0 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004090:	f505 734b 	add.w	r3, r5, #812	; 0x32c
 8004094:	4618      	mov	r0, r3
 8004096:	ee08 3a90 	vmov	s17, r3
 800409a:	f7ff f80f 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 800409e:	f505 7356 	add.w	r3, r5, #856	; 0x358
 80040a2:	a91a      	add	r1, sp, #104	; 0x68
 80040a4:	4618      	mov	r0, r3
 80040a6:	ee0f 3a90 	vmov	s31, r3
 80040aa:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 80040ae:	f008 ff8f 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80040b2:	f505 7361 	add.w	r3, r5, #900	; 0x384
 80040b6:	a91a      	add	r1, sp, #104	; 0x68
 80040b8:	4618      	mov	r0, r3
 80040ba:	9302      	str	r3, [sp, #8]
 80040bc:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 80040c0:	f008 ff86 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80040c4:	f505 736c 	add.w	r3, r5, #944	; 0x3b0
 80040c8:	a91a      	add	r1, sp, #104	; 0x68
 80040ca:	4618      	mov	r0, r3
 80040cc:	9303      	str	r3, [sp, #12]
 80040ce:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 80040d2:	f008 ff7d 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80040d6:	f505 7377 	add.w	r3, r5, #988	; 0x3dc
 80040da:	4618      	mov	r0, r3
 80040dc:	9304      	str	r3, [sp, #16]
 80040de:	f7fe ffed 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 80040e2:	f505 6381 	add.w	r3, r5, #1032	; 0x408
 80040e6:	a91a      	add	r1, sp, #104	; 0x68
 80040e8:	4618      	mov	r0, r3
 80040ea:	9305      	str	r3, [sp, #20]
 80040ec:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 80040f0:	f008 ff6e 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80040f4:	f205 4334 	addw	r3, r5, #1076	; 0x434
 80040f8:	f505 688c 	add.w	r8, r5, #1120	; 0x460
 80040fc:	a91a      	add	r1, sp, #104	; 0x68
 80040fe:	4618      	mov	r0, r3
 8004100:	9306      	str	r3, [sp, #24]
 8004102:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004106:	f008 ff63 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800410a:	4640      	mov	r0, r8
 800410c:	f7fe ffd6 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8004110:	f205 438c 	addw	r3, r5, #1164	; 0x48c
 8004114:	a91a      	add	r1, sp, #104	; 0x68
 8004116:	4618      	mov	r0, r3
 8004118:	9307      	str	r3, [sp, #28]
 800411a:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 800411e:	f008 ff57 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004122:	f505 6397 	add.w	r3, r5, #1208	; 0x4b8
 8004126:	a91a      	add	r1, sp, #104	; 0x68
 8004128:	4618      	mov	r0, r3
 800412a:	9308      	str	r3, [sp, #32]
 800412c:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004130:	f008 ff4e 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004134:	f205 43e4 	addw	r3, r5, #1252	; 0x4e4
 8004138:	a91a      	add	r1, sp, #104	; 0x68
 800413a:	4618      	mov	r0, r3
 800413c:	9309      	str	r3, [sp, #36]	; 0x24
 800413e:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004142:	f008 ff45 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004146:	f505 63a2 	add.w	r3, r5, #1296	; 0x510
 800414a:	a91a      	add	r1, sp, #104	; 0x68
 800414c:	4618      	mov	r0, r3
 800414e:	930a      	str	r3, [sp, #40]	; 0x28
 8004150:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004154:	f008 ff3c 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004158:	f205 533c 	addw	r3, r5, #1340	; 0x53c
 800415c:	a91a      	add	r1, sp, #104	; 0x68
 800415e:	4618      	mov	r0, r3
 8004160:	930b      	str	r3, [sp, #44]	; 0x2c
 8004162:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004166:	f008 ff33 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800416a:	f505 63ad 	add.w	r3, r5, #1384	; 0x568
 800416e:	4618      	mov	r0, r3
 8004170:	ee08 3a10 	vmov	s16, r3
 8004174:	f7fe ffa2 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 8004178:	f205 5394 	addw	r3, r5, #1428	; 0x594
 800417c:	a91a      	add	r1, sp, #104	; 0x68
 800417e:	4618      	mov	r0, r3
 8004180:	930c      	str	r3, [sp, #48]	; 0x30
 8004182:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004186:	f008 ff23 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800418a:	f505 63b8 	add.w	r3, r5, #1472	; 0x5c0
 800418e:	a91a      	add	r1, sp, #104	; 0x68
 8004190:	4618      	mov	r0, r3
 8004192:	930d      	str	r3, [sp, #52]	; 0x34
 8004194:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004198:	f008 ff1a 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800419c:	f205 53ec 	addw	r3, r5, #1516	; 0x5ec
 80041a0:	a91a      	add	r1, sp, #104	; 0x68
 80041a2:	4618      	mov	r0, r3
 80041a4:	930e      	str	r3, [sp, #56]	; 0x38
 80041a6:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 80041aa:	f008 ff11 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80041ae:	f505 63c3 	add.w	r3, r5, #1560	; 0x618
 80041b2:	a91a      	add	r1, sp, #104	; 0x68
 80041b4:	4618      	mov	r0, r3
 80041b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80041b8:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 80041bc:	f008 ff08 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80041c0:	f205 6344 	addw	r3, r5, #1604	; 0x644
 80041c4:	4618      	mov	r0, r3
 80041c6:	ee09 3a10 	vmov	s18, r3
 80041ca:	f7fe ff77 	bl	80030bc <_ZN8touchgfx9ContainerC1Ev>
 80041ce:	f505 63ce 	add.w	r3, r5, #1648	; 0x670
 80041d2:	a91a      	add	r1, sp, #104	; 0x68
 80041d4:	4618      	mov	r0, r3
 80041d6:	9310      	str	r3, [sp, #64]	; 0x40
 80041d8:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 80041dc:	f008 fef8 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80041e0:	f205 639c 	addw	r3, r5, #1692	; 0x69c
 80041e4:	a91a      	add	r1, sp, #104	; 0x68
 80041e6:	4618      	mov	r0, r3
 80041e8:	9311      	str	r3, [sp, #68]	; 0x44
 80041ea:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 80041ee:	f008 feef 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80041f2:	f505 63d9 	add.w	r3, r5, #1736	; 0x6c8
 80041f6:	a91a      	add	r1, sp, #104	; 0x68
 80041f8:	4618      	mov	r0, r3
 80041fa:	9312      	str	r3, [sp, #72]	; 0x48
 80041fc:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004200:	f008 fee6 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004204:	f205 63f4 	addw	r3, r5, #1780	; 0x6f4
 8004208:	a91a      	add	r1, sp, #104	; 0x68
 800420a:	4618      	mov	r0, r3
 800420c:	9313      	str	r3, [sp, #76]	; 0x4c
 800420e:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004212:	f008 fedd 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004216:	f505 63e4 	add.w	r3, r5, #1824	; 0x720
 800421a:	4618      	mov	r0, r3
 800421c:	9314      	str	r3, [sp, #80]	; 0x50
 800421e:	f7ff fe75 	bl	8003f0c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004222:	f205 736c 	addw	r3, r5, #1900	; 0x76c
 8004226:	4618      	mov	r0, r3
 8004228:	9315      	str	r3, [sp, #84]	; 0x54
 800422a:	f7ff fe6f 	bl	8003f0c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800422e:	f505 63f7 	add.w	r3, r5, #1976	; 0x7b8
 8004232:	4618      	mov	r0, r3
 8004234:	9316      	str	r3, [sp, #88]	; 0x58
 8004236:	f7ff fe69 	bl	8003f0c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800423a:	f605 0304 	addw	r3, r5, #2052	; 0x804
 800423e:	4618      	mov	r0, r3
 8004240:	9317      	str	r3, [sp, #92]	; 0x5c
 8004242:	f7ff fe63 	bl	8003f0c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004246:	f505 6305 	add.w	r3, r5, #2128	; 0x850
 800424a:	a91a      	add	r1, sp, #104	; 0x68
 800424c:	4618      	mov	r0, r3
 800424e:	9318      	str	r3, [sp, #96]	; 0x60
 8004250:	f8ad 6068 	strh.w	r6, [sp, #104]	; 0x68
 8004254:	f008 febc 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 240, 320);
 8004258:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800425c:	4622      	mov	r2, r4
 800425e:	4658      	mov	r0, fp
 8004260:	9300      	str	r3, [sp, #0]
 8004262:	4621      	mov	r1, r4
 8004264:	23f0      	movs	r3, #240	; 0xf0
 8004266:	1d2e      	adds	r6, r5, #4
 8004268:	f7fe f8b3 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800426c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004270:	4659      	mov	r1, fp
 8004272:	66ab      	str	r3, [r5, #104]	; 0x68
 8004274:	4630      	mov	r0, r6
 8004276:	f007 fc3c 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setPosition(0, -1, 240, 320);
 800427a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800427e:	f04f 32ff 	mov.w	r2, #4294967295
 8004282:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004284:	9300      	str	r3, [sp, #0]
 8004286:	4621      	mov	r1, r4
 8004288:	23f0      	movs	r3, #240	; 0xf0
 800428a:	f7fe f8a2 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
 800428e:	f04f 33ff 	mov.w	r3, #4294967295
 8004292:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004294:	f8c5 3094 	str.w	r3, [r5, #148]	; 0x94
 8004298:	4630      	mov	r0, r6
 800429a:	f007 fc2a 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800429e:	2304      	movs	r3, #4
    board2.setBitmap(touchgfx::Bitmap(BITMAP_BOARD2_ID));
 80042a0:	4648      	mov	r0, r9
 80042a2:	a91a      	add	r1, sp, #104	; 0x68
 80042a4:	f8ad 3068 	strh.w	r3, [sp, #104]	; 0x68
 80042a8:	f009 fd65 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    board2.setPosition(5, 83, 230, 230);
 80042ac:	23e6      	movs	r3, #230	; 0xe6
 80042ae:	9300      	str	r3, [sp, #0]
 80042b0:	2253      	movs	r2, #83	; 0x53
 80042b2:	4648      	mov	r0, r9
 80042b4:	2105      	movs	r1, #5
 80042b6:	f7fe f88c 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    board2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80042ba:	4648      	mov	r0, r9
 80042bc:	4621      	mov	r1, r4
 80042be:	f008 fe42 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80042c2:	4649      	mov	r1, r9
 80042c4:	4630      	mov	r0, r6
    boat2.setPosition(-56, 38, 44, 23);
 80042c6:	f04f 0917 	mov.w	r9, #23
 80042ca:	f007 fc12 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80042ce:	232c      	movs	r3, #44	; 0x2c
 80042d0:	2226      	movs	r2, #38	; 0x26
 80042d2:	ee19 0a90 	vmov	r0, s19
 80042d6:	f06f 0137 	mvn.w	r1, #55	; 0x37
 80042da:	e001      	b.n	80042e0 <_ZN22OpponentScreenViewBaseC1Ev+0x390>
 80042dc:	08022bdc 	.word	0x08022bdc
 80042e0:	f8cd 9000 	str.w	r9, [sp]
 80042e4:	f04f 0b06 	mov.w	fp, #6
 80042e8:	f7fe f873 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80042ec:	ee1a 0a10 	vmov	r0, s20
 80042f0:	a91a      	add	r1, sp, #104	; 0x68
 80042f2:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 80042f6:	f009 fd3e 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_1.setPosition(22, 0, 23, 23);
 80042fa:	464b      	mov	r3, r9
 80042fc:	4622      	mov	r2, r4
 80042fe:	ee1a 0a10 	vmov	r0, s20
 8004302:	2116      	movs	r1, #22
 8004304:	f8cd 9000 	str.w	r9, [sp]
 8004308:	f7fe f863 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800430c:	ee1a 0a10 	vmov	r0, s20
 8004310:	4621      	mov	r1, r4
 8004312:	f008 fe18 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2.add(scalableImage2_1_1);
 8004316:	ee1a 1a10 	vmov	r1, s20
 800431a:	ee19 0a90 	vmov	r0, s19
 800431e:	f007 fbe8 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_3.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004322:	ee1a 0a90 	vmov	r0, s21
 8004326:	a91a      	add	r1, sp, #104	; 0x68
 8004328:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 800432c:	f009 fd23 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_3.setPosition(0, 0, 23, 23);
 8004330:	464b      	mov	r3, r9
 8004332:	4622      	mov	r2, r4
 8004334:	ee1a 0a90 	vmov	r0, s21
 8004338:	4621      	mov	r1, r4
 800433a:	f8cd 9000 	str.w	r9, [sp]
 800433e:	f7fe f848 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004342:	ee1a 0a90 	vmov	r0, s21
 8004346:	4621      	mov	r1, r4
 8004348:	f008 fdfd 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2.add(scalableImage2_3);
 800434c:	ee1a 1a90 	vmov	r1, s21
 8004350:	ee19 0a90 	vmov	r0, s19
 8004354:	f007 fbcd 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004358:	ee19 1a90 	vmov	r1, s19
 800435c:	4630      	mov	r0, r6
 800435e:	f007 fbc8 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat5.setPosition(-123, 149, 113, 23);
 8004362:	2371      	movs	r3, #113	; 0x71
 8004364:	2295      	movs	r2, #149	; 0x95
 8004366:	4638      	mov	r0, r7
 8004368:	f06f 017a 	mvn.w	r1, #122	; 0x7a
 800436c:	f8cd 9000 	str.w	r9, [sp]
 8004370:	f7fe f82f 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004374:	ee1b 0a10 	vmov	r0, s22
 8004378:	a91a      	add	r1, sp, #104	; 0x68
 800437a:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 800437e:	f009 fcfa 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_2.setPosition(44, 0, 23, 23);
 8004382:	464b      	mov	r3, r9
 8004384:	4622      	mov	r2, r4
 8004386:	ee1b 0a10 	vmov	r0, s22
 800438a:	212c      	movs	r1, #44	; 0x2c
 800438c:	f8cd 9000 	str.w	r9, [sp]
 8004390:	f7fe f81f 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004394:	ee1b 0a10 	vmov	r0, s22
 8004398:	4621      	mov	r1, r4
 800439a:	f008 fdd4 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_2);
 800439e:	4638      	mov	r0, r7
 80043a0:	ee1b 1a10 	vmov	r1, s22
 80043a4:	f007 fba5 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80043a8:	ee1b 0a90 	vmov	r0, s23
 80043ac:	a91a      	add	r1, sp, #104	; 0x68
 80043ae:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 80043b2:	f009 fce0 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1_1.setPosition(66, 0, 25, 23);
 80043b6:	2319      	movs	r3, #25
 80043b8:	4622      	mov	r2, r4
 80043ba:	ee1b 0a90 	vmov	r0, s23
 80043be:	2142      	movs	r1, #66	; 0x42
 80043c0:	f8cd 9000 	str.w	r9, [sp]
 80043c4:	f7fe f805 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80043c8:	ee1b 0a90 	vmov	r0, s23
 80043cc:	4621      	mov	r1, r4
 80043ce:	f008 fdba 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_1_1);
 80043d2:	4638      	mov	r0, r7
 80043d4:	ee1b 1a90 	vmov	r1, s23
 80043d8:	f007 fb8b 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80043dc:	ee1c 0a10 	vmov	r0, s24
 80043e0:	a91a      	add	r1, sp, #104	; 0x68
 80043e2:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 80043e6:	f009 fcc6 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1_1_1.setPosition(90, 0, 25, 23);
 80043ea:	2319      	movs	r3, #25
 80043ec:	4622      	mov	r2, r4
 80043ee:	ee1c 0a10 	vmov	r0, s24
 80043f2:	215a      	movs	r1, #90	; 0x5a
 80043f4:	f8cd 9000 	str.w	r9, [sp]
 80043f8:	f7fd ffeb 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80043fc:	ee1c 0a10 	vmov	r0, s24
 8004400:	4621      	mov	r1, r4
 8004402:	f008 fda0 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_1_1_1);
 8004406:	4638      	mov	r0, r7
 8004408:	ee1c 1a10 	vmov	r1, s24
 800440c:	f007 fb71 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004410:	ee1c 0a90 	vmov	r0, s25
 8004414:	a91a      	add	r1, sp, #104	; 0x68
 8004416:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 800441a:	f009 fcac 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_2_1.setPosition(22, 0, 23, 23);
 800441e:	464b      	mov	r3, r9
 8004420:	4622      	mov	r2, r4
 8004422:	ee1c 0a90 	vmov	r0, s25
 8004426:	2116      	movs	r1, #22
 8004428:	f8cd 9000 	str.w	r9, [sp]
 800442c:	f7fd ffd1 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004430:	ee1c 0a90 	vmov	r0, s25
 8004434:	4621      	mov	r1, r4
 8004436:	f008 fd86 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_1_2_1);
 800443a:	4638      	mov	r0, r7
 800443c:	ee1c 1a90 	vmov	r1, s25
 8004440:	f007 fb57 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_4_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004444:	ee1d 0a10 	vmov	r0, s26
 8004448:	a91a      	add	r1, sp, #104	; 0x68
 800444a:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 800444e:	f009 fc92 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_4_1.setPosition(0, 0, 23, 23);
 8004452:	464b      	mov	r3, r9
 8004454:	4622      	mov	r2, r4
 8004456:	ee1d 0a10 	vmov	r0, s26
 800445a:	4621      	mov	r1, r4
 800445c:	f8cd 9000 	str.w	r9, [sp]
 8004460:	f7fd ffb7 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_4_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004464:	ee1d 0a10 	vmov	r0, s26
 8004468:	4621      	mov	r1, r4
 800446a:	f008 fd6c 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_4_1);
 800446e:	4638      	mov	r0, r7
 8004470:	ee1d 1a10 	vmov	r1, s26
 8004474:	f007 fb3d 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004478:	4639      	mov	r1, r7
 800447a:	4630      	mov	r0, r6
 800447c:	f007 fb39 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat4.setPosition(-102, 111, 90, 23);
 8004480:	235a      	movs	r3, #90	; 0x5a
 8004482:	226f      	movs	r2, #111	; 0x6f
 8004484:	4650      	mov	r0, sl
 8004486:	f06f 0165 	mvn.w	r1, #101	; 0x65
 800448a:	f8cd 9000 	str.w	r9, [sp]
 800448e:	f7fd ffa0 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004492:	ee1d 0a90 	vmov	r0, s27
 8004496:	a91a      	add	r1, sp, #104	; 0x68
 8004498:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 800449c:	f009 fc6b 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1.setPosition(44, 0, 23, 23);
 80044a0:	464b      	mov	r3, r9
 80044a2:	4622      	mov	r2, r4
 80044a4:	ee1d 0a90 	vmov	r0, s27
 80044a8:	212c      	movs	r1, #44	; 0x2c
 80044aa:	f8cd 9000 	str.w	r9, [sp]
 80044ae:	f7fd ff90 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80044b2:	ee1d 0a90 	vmov	r0, s27
 80044b6:	4621      	mov	r1, r4
 80044b8:	f008 fd45 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_2_1);
 80044bc:	4650      	mov	r0, sl
 80044be:	ee1d 1a90 	vmov	r1, s27
 80044c2:	f007 fb16 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80044c6:	ee1e 0a10 	vmov	r0, s28
 80044ca:	a91a      	add	r1, sp, #104	; 0x68
 80044cc:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 80044d0:	f009 fc51 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1.setPosition(66, 0, 25, 23);
 80044d4:	2319      	movs	r3, #25
 80044d6:	4622      	mov	r2, r4
 80044d8:	ee1e 0a10 	vmov	r0, s28
 80044dc:	2142      	movs	r1, #66	; 0x42
 80044de:	f8cd 9000 	str.w	r9, [sp]
 80044e2:	f7fd ff76 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80044e6:	ee1e 0a10 	vmov	r0, s28
 80044ea:	4621      	mov	r1, r4
 80044ec:	f008 fd2b 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_2_1_1);
 80044f0:	4650      	mov	r0, sl
 80044f2:	ee1e 1a10 	vmov	r1, s28
 80044f6:	f007 fafc 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80044fa:	ee1e 0a90 	vmov	r0, s29
 80044fe:	a91a      	add	r1, sp, #104	; 0x68
 8004500:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 8004504:	f009 fc37 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_2.setPosition(22, 0, 23, 23);
 8004508:	464b      	mov	r3, r9
 800450a:	4622      	mov	r2, r4
 800450c:	ee1e 0a90 	vmov	r0, s29
 8004510:	2116      	movs	r1, #22
 8004512:	f8cd 9000 	str.w	r9, [sp]
 8004516:	f7fd ff5c 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800451a:	ee1e 0a90 	vmov	r0, s29
 800451e:	4621      	mov	r1, r4
 8004520:	f008 fd11 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_1_2);
 8004524:	4650      	mov	r0, sl
 8004526:	ee1e 1a90 	vmov	r1, s29
 800452a:	f007 fae2 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_4.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 800452e:	ee1f 0a10 	vmov	r0, s30
 8004532:	a91a      	add	r1, sp, #104	; 0x68
 8004534:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 8004538:	f009 fc1d 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_4.setPosition(0, 0, 23, 23);
 800453c:	464b      	mov	r3, r9
 800453e:	4622      	mov	r2, r4
 8004540:	ee1f 0a10 	vmov	r0, s30
 8004544:	4621      	mov	r1, r4
 8004546:	f8cd 9000 	str.w	r9, [sp]
 800454a:	f7fd ff42 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_4.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800454e:	ee1f 0a10 	vmov	r0, s30
 8004552:	4621      	mov	r1, r4
 8004554:	f008 fcf7 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_4);
 8004558:	4650      	mov	r0, sl
 800455a:	ee1f 1a10 	vmov	r1, s30
 800455e:	f007 fac8 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004562:	4651      	mov	r1, sl
 8004564:	4630      	mov	r0, r6
 8004566:	f007 fac4 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat3.setPosition(-79, 72, 68, 23);
 800456a:	2344      	movs	r3, #68	; 0x44
 800456c:	2248      	movs	r2, #72	; 0x48
 800456e:	ee18 0a90 	vmov	r0, s17
 8004572:	f06f 014e 	mvn.w	r1, #78	; 0x4e
 8004576:	f8cd 9000 	str.w	r9, [sp]
 800457a:	f7fd ff2a 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 800457e:	ee1f 0a90 	vmov	r0, s31
 8004582:	a91a      	add	r1, sp, #104	; 0x68
 8004584:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 8004588:	f009 fbf5 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2.setPosition(44, 0, 23, 23);
 800458c:	464b      	mov	r3, r9
 800458e:	4622      	mov	r2, r4
 8004590:	ee1f 0a90 	vmov	r0, s31
 8004594:	212c      	movs	r1, #44	; 0x2c
 8004596:	f8cd 9000 	str.w	r9, [sp]
 800459a:	f7fd ff1a 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800459e:	ee1f 0a90 	vmov	r0, s31
 80045a2:	4621      	mov	r1, r4
 80045a4:	f008 fccf 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2_2);
 80045a8:	ee1f 1a90 	vmov	r1, s31
 80045ac:	ee18 0a90 	vmov	r0, s17
 80045b0:	f007 fa9f 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80045b4:	9802      	ldr	r0, [sp, #8]
 80045b6:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 80045ba:	a91a      	add	r1, sp, #104	; 0x68
 80045bc:	f009 fbdb 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1.setPosition(22, 0, 23, 23);
 80045c0:	464b      	mov	r3, r9
 80045c2:	4622      	mov	r2, r4
 80045c4:	9802      	ldr	r0, [sp, #8]
 80045c6:	f8cd 9000 	str.w	r9, [sp]
 80045ca:	2116      	movs	r1, #22
 80045cc:	f7fd ff01 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80045d0:	9802      	ldr	r0, [sp, #8]
 80045d2:	4621      	mov	r1, r4
 80045d4:	f008 fcb7 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2_1);
 80045d8:	9902      	ldr	r1, [sp, #8]
 80045da:	ee18 0a90 	vmov	r0, s17
 80045de:	f007 fa88 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80045e2:	9803      	ldr	r0, [sp, #12]
 80045e4:	f8ad b068 	strh.w	fp, [sp, #104]	; 0x68
 80045e8:	a91a      	add	r1, sp, #104	; 0x68
 80045ea:	f009 fbc4 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2.setPosition(0, 0, 23, 23);
 80045ee:	464b      	mov	r3, r9
 80045f0:	4622      	mov	r2, r4
 80045f2:	9803      	ldr	r0, [sp, #12]
 80045f4:	f8cd 9000 	str.w	r9, [sp]
 80045f8:	4621      	mov	r1, r4
 80045fa:	f7fd feea 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80045fe:	9803      	ldr	r0, [sp, #12]
 8004600:	4621      	mov	r1, r4
 8004602:	f008 fca0 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2);
 8004606:	9903      	ldr	r1, [sp, #12]
 8004608:	ee18 0a90 	vmov	r0, s17
 800460c:	f007 fa71 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat2_r.setPosition(-68, -46, 23, 44);
 8004610:	272c      	movs	r7, #44	; 0x2c
 8004612:	ee18 1a90 	vmov	r1, s17
 8004616:	4630      	mov	r0, r6
 8004618:	f007 fa6b 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800461c:	464b      	mov	r3, r9
 800461e:	f06f 022d 	mvn.w	r2, #45	; 0x2d
 8004622:	9804      	ldr	r0, [sp, #16]
 8004624:	9700      	str	r7, [sp, #0]
 8004626:	f06f 0143 	mvn.w	r1, #67	; 0x43
 800462a:	f04f 0a05 	mov.w	sl, #5
 800462e:	f7fd fed0 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004632:	9805      	ldr	r0, [sp, #20]
 8004634:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004638:	a91a      	add	r1, sp, #104	; 0x68
 800463a:	f009 fb9c 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_1.setPosition(0, 0, 23, 23);
 800463e:	464b      	mov	r3, r9
 8004640:	4622      	mov	r2, r4
 8004642:	9805      	ldr	r0, [sp, #20]
 8004644:	f8cd 9000 	str.w	r9, [sp]
 8004648:	4621      	mov	r1, r4
 800464a:	f7fd fec2 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800464e:	9805      	ldr	r0, [sp, #20]
 8004650:	4621      	mov	r1, r4
 8004652:	f008 fc78 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2_r.add(scalableImage1_1_1_1);
 8004656:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800465a:	f007 fa4a 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 800465e:	9806      	ldr	r0, [sp, #24]
 8004660:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004664:	a91a      	add	r1, sp, #104	; 0x68
 8004666:	f009 fb86 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_2.setPosition(0, 22, 23, 23);
 800466a:	464b      	mov	r3, r9
 800466c:	2216      	movs	r2, #22
 800466e:	9806      	ldr	r0, [sp, #24]
 8004670:	f8cd 9000 	str.w	r9, [sp]
 8004674:	4621      	mov	r1, r4
 8004676:	f7fd feac 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800467a:	9806      	ldr	r0, [sp, #24]
 800467c:	4621      	mov	r1, r4
 800467e:	f008 fc62 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2_r.add(scalableImage1_2);
 8004682:	9906      	ldr	r1, [sp, #24]
 8004684:	9804      	ldr	r0, [sp, #16]
 8004686:	f007 fa34 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800468a:	9904      	ldr	r1, [sp, #16]
 800468c:	4630      	mov	r0, r6
 800468e:	f007 fa30 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat5_r.setPosition(-135, -115, 23, 113);
 8004692:	2371      	movs	r3, #113	; 0x71
 8004694:	f06f 0272 	mvn.w	r2, #114	; 0x72
 8004698:	4640      	mov	r0, r8
 800469a:	9300      	str	r3, [sp, #0]
 800469c:	f06f 0186 	mvn.w	r1, #134	; 0x86
 80046a0:	464b      	mov	r3, r9
 80046a2:	f7fd fe96 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80046a6:	9807      	ldr	r0, [sp, #28]
 80046a8:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 80046ac:	a91a      	add	r1, sp, #104	; 0x68
 80046ae:	f009 fb62 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_2_1.setPosition(0, 22, 23, 23);
 80046b2:	464b      	mov	r3, r9
 80046b4:	2216      	movs	r2, #22
 80046b6:	9807      	ldr	r0, [sp, #28]
 80046b8:	f8cd 9000 	str.w	r9, [sp]
 80046bc:	4621      	mov	r1, r4
 80046be:	f7fd fe88 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80046c2:	9807      	ldr	r0, [sp, #28]
 80046c4:	4621      	mov	r1, r4
 80046c6:	f008 fc3e 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_1_1_2_1);
 80046ca:	4640      	mov	r0, r8
 80046cc:	9907      	ldr	r1, [sp, #28]
 80046ce:	f007 fa10 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80046d2:	9808      	ldr	r0, [sp, #32]
 80046d4:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 80046d8:	a91a      	add	r1, sp, #104	; 0x68
 80046da:	f009 fb4c 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_2_1.setPosition(0, 0, 23, 23);
 80046de:	464b      	mov	r3, r9
 80046e0:	4622      	mov	r2, r4
 80046e2:	9808      	ldr	r0, [sp, #32]
 80046e4:	f8cd 9000 	str.w	r9, [sp]
 80046e8:	4621      	mov	r1, r4
 80046ea:	f7fd fe72 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80046ee:	9808      	ldr	r0, [sp, #32]
 80046f0:	4621      	mov	r1, r4
 80046f2:	f008 fc28 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_1_2_1);
 80046f6:	4640      	mov	r0, r8
 80046f8:	9908      	ldr	r1, [sp, #32]
 80046fa:	f007 f9fa 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80046fe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004700:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004704:	a91a      	add	r1, sp, #104	; 0x68
 8004706:	f009 fb36 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_2.setPosition(0, 44, 23, 23);
 800470a:	463a      	mov	r2, r7
 800470c:	464b      	mov	r3, r9
 800470e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004710:	f8cd 9000 	str.w	r9, [sp]
 8004714:	4621      	mov	r1, r4
 8004716:	f7fd fe5c 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800471a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800471c:	4621      	mov	r1, r4
 800471e:	f008 fc12 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_2);
 8004722:	4640      	mov	r0, r8
 8004724:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004726:	f007 f9e4 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 800472a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800472c:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004730:	a91a      	add	r1, sp, #104	; 0x68
 8004732:	f009 fb20 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1_1.setPosition(0, 67, 23, 25);
 8004736:	2319      	movs	r3, #25
 8004738:	2243      	movs	r2, #67	; 0x43
 800473a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800473c:	9300      	str	r3, [sp, #0]
 800473e:	4621      	mov	r1, r4
 8004740:	464b      	mov	r3, r9
 8004742:	f7fd fe46 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004746:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004748:	4621      	mov	r1, r4
 800474a:	f008 fbfc 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_1_1);
 800474e:	4640      	mov	r0, r8
 8004750:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004752:	f007 f9ce 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004756:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004758:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 800475c:	a91a      	add	r1, sp, #104	; 0x68
 800475e:	f009 fb0a 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1_1_1.setPosition(0, 90, 23, 25);
 8004762:	2319      	movs	r3, #25
 8004764:	225a      	movs	r2, #90	; 0x5a
 8004766:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004768:	9300      	str	r3, [sp, #0]
 800476a:	4621      	mov	r1, r4
 800476c:	464b      	mov	r3, r9
 800476e:	f7fd fe30 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004772:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004774:	4621      	mov	r1, r4
 8004776:	f008 fbe6 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_1_1_1);
 800477a:	4640      	mov	r0, r8
 800477c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800477e:	f007 f9b8 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004782:	4641      	mov	r1, r8
 8004784:	4630      	mov	r0, r6
 8004786:	f007 f9b4 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat4_r.setPosition(-103, -92, 23, 90);
 800478a:	235a      	movs	r3, #90	; 0x5a
 800478c:	f06f 025b 	mvn.w	r2, #91	; 0x5b
 8004790:	ee18 0a10 	vmov	r0, s16
 8004794:	9300      	str	r3, [sp, #0]
 8004796:	f06f 0166 	mvn.w	r1, #102	; 0x66
 800479a:	464b      	mov	r3, r9
 800479c:	f7fd fe19 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80047a0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80047a2:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 80047a6:	a91a      	add	r1, sp, #104	; 0x68
 80047a8:	f009 fae5 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_2.setPosition(0, 22, 23, 23);
 80047ac:	464b      	mov	r3, r9
 80047ae:	2216      	movs	r2, #22
 80047b0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80047b2:	f8cd 9000 	str.w	r9, [sp]
 80047b6:	4621      	mov	r1, r4
 80047b8:	f7fd fe0b 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80047bc:	980c      	ldr	r0, [sp, #48]	; 0x30
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047be:	f8df 83c4 	ldr.w	r8, [pc, #964]	; 8004b84 <_ZN22OpponentScreenViewBaseC1Ev+0xc34>
 80047c2:	4621      	mov	r1, r4
 80047c4:	f008 fbbf 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_1_1_2);
 80047c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80047ca:	ee18 0a10 	vmov	r0, s16
 80047ce:	f007 f990 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80047d2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80047d4:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 80047d8:	a91a      	add	r1, sp, #104	; 0x68
 80047da:	f009 facc 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_2.setPosition(0, 0, 23, 23);
 80047de:	464b      	mov	r3, r9
 80047e0:	4622      	mov	r2, r4
 80047e2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80047e4:	f8cd 9000 	str.w	r9, [sp]
 80047e8:	4621      	mov	r1, r4
 80047ea:	f7fd fdf2 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80047ee:	980d      	ldr	r0, [sp, #52]	; 0x34
 80047f0:	4621      	mov	r1, r4
 80047f2:	f008 fba8 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_1_2);
 80047f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80047f8:	ee18 0a10 	vmov	r0, s16
 80047fc:	f007 f979 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004800:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004802:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004806:	a91a      	add	r1, sp, #104	; 0x68
 8004808:	f009 fab5 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3.setPosition(0, 44, 23, 23);
 800480c:	463a      	mov	r2, r7
 800480e:	464b      	mov	r3, r9
 8004810:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004812:	f8cd 9000 	str.w	r9, [sp]
 8004816:	4621      	mov	r1, r4
 8004818:	f7fd fddb 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800481c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800481e:	4621      	mov	r1, r4
 8004820:	f008 fb91 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_3);
 8004824:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004826:	ee18 0a10 	vmov	r0, s16
 800482a:	f007 f962 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 800482e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004830:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004834:	a91a      	add	r1, sp, #104	; 0x68
 8004836:	f009 fa9e 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1.setPosition(0, 67, 23, 25);
 800483a:	2319      	movs	r3, #25
 800483c:	2243      	movs	r2, #67	; 0x43
 800483e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004840:	9300      	str	r3, [sp, #0]
 8004842:	4621      	mov	r1, r4
 8004844:	464b      	mov	r3, r9
 8004846:	f7fd fdc4 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800484a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800484c:	4621      	mov	r1, r4
 800484e:	f008 fb7a 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_3_1);
 8004852:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004854:	ee18 0a10 	vmov	r0, s16
 8004858:	f007 f94b 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800485c:	ee18 1a10 	vmov	r1, s16
 8004860:	4630      	mov	r0, r6
 8004862:	f007 f946 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat3_r.setPosition(-34, -68, 23, 68);
 8004866:	2344      	movs	r3, #68	; 0x44
 8004868:	f06f 0243 	mvn.w	r2, #67	; 0x43
 800486c:	ee19 0a10 	vmov	r0, s18
 8004870:	9300      	str	r3, [sp, #0]
 8004872:	f06f 0121 	mvn.w	r1, #33	; 0x21
 8004876:	464b      	mov	r3, r9
 8004878:	f7fd fdab 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 800487c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800487e:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004882:	a91a      	add	r1, sp, #104	; 0x68
 8004884:	f009 fa77 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1.setPosition(0, 22, 23, 23);
 8004888:	464b      	mov	r3, r9
 800488a:	2216      	movs	r2, #22
 800488c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800488e:	f8cd 9000 	str.w	r9, [sp]
 8004892:	4621      	mov	r1, r4
 8004894:	f7fd fd9d 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004898:	9810      	ldr	r0, [sp, #64]	; 0x40
 800489a:	4621      	mov	r1, r4
 800489c:	f008 fb53 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_1_1);
 80048a0:	9910      	ldr	r1, [sp, #64]	; 0x40
 80048a2:	ee19 0a10 	vmov	r0, s18
 80048a6:	f007 f924 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80048aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80048ac:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 80048b0:	a91a      	add	r1, sp, #104	; 0x68
 80048b2:	f009 fa60 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1.setPosition(0, 0, 23, 23);
 80048b6:	464b      	mov	r3, r9
 80048b8:	4622      	mov	r2, r4
 80048ba:	9811      	ldr	r0, [sp, #68]	; 0x44
 80048bc:	f8cd 9000 	str.w	r9, [sp]
 80048c0:	4621      	mov	r1, r4
 80048c2:	f7fd fd86 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80048c6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80048c8:	4621      	mov	r1, r4
 80048ca:	f008 fb3c 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_1);
 80048ce:	9911      	ldr	r1, [sp, #68]	; 0x44
 80048d0:	ee19 0a10 	vmov	r0, s18
 80048d4:	f007 f90d 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 80048d8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80048da:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 80048de:	a91a      	add	r1, sp, #104	; 0x68
 80048e0:	f009 fa49 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_2_1.setPosition(0, 44, 23, 23);
 80048e4:	463a      	mov	r2, r7
 80048e6:	464b      	mov	r3, r9
 80048e8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80048ea:	f8cd 9000 	str.w	r9, [sp]
 80048ee:	4621      	mov	r1, r4
 80048f0:	f7fd fd6f 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80048f4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80048f6:	4621      	mov	r1, r4
 80048f8:	f008 fb25 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_2_1);
 80048fc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80048fe:	ee19 0a10 	vmov	r0, s18
 8004902:	f007 f8f6 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004906:	ee19 1a10 	vmov	r1, s18
 800490a:	4630      	mov	r0, r6
 800490c:	f007 f8f1 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004910:	f04f 030a 	mov.w	r3, #10
    title2.setBitmap(touchgfx::Bitmap(BITMAP_OPPONENT_ID));
 8004914:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004916:	f8ad 3068 	strh.w	r3, [sp, #104]	; 0x68
 800491a:	a91a      	add	r1, sp, #104	; 0x68
 800491c:	f009 fa2b 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title2.setPosition(6, 6, 229, 32);
 8004920:	2320      	movs	r3, #32
 8004922:	465a      	mov	r2, fp
 8004924:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004926:	9300      	str	r3, [sp, #0]
 8004928:	4659      	mov	r1, fp
 800492a:	23e5      	movs	r3, #229	; 0xe5
 800492c:	f7fd fd51 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    title2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004930:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004932:	4621      	mov	r1, r4
 8004934:	f008 fb07 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8004938:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800493a:	4630      	mov	r0, r6
 800493c:	f007 f8d9 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRemainShip1.setXY(6, 42);
 8004940:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004942:	222a      	movs	r2, #42	; 0x2a
 8004944:	4659      	mov	r1, fp
 8004946:	f7fd fd37 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800494a:	4b85      	ldr	r3, [pc, #532]	; (8004b60 <_ZN22OpponentScreenViewBaseC1Ev+0xc10>)
 800494c:	f8c5 3750 	str.w	r3, [r5, #1872]	; 0x750
        boundingArea = calculateBoundingArea();
 8004950:	f04f 33ff 	mov.w	r3, #4294967295
 8004954:	f8c5 3760 	str.w	r3, [r5, #1888]	; 0x760
 8004958:	f8d8 3000 	ldr.w	r3, [r8]
        linespace = space;
 800495c:	f8a5 4754 	strh.w	r4, [r5, #1876]	; 0x754
        boundingArea = calculateBoundingArea();
 8004960:	f8c5 475c 	str.w	r4, [r5, #1884]	; 0x75c
 8004964:	f8c5 4764 	str.w	r4, [r5, #1892]	; 0x764
    Unicode::snprintf(txtRemainShip1Buffer, TXTREMAINSHIP1_SIZE, "%s", touchgfx::TypedText(T_DESTROYER).getText());
 8004968:	f605 077c 	addw	r7, r5, #2172	; 0x87c
 800496c:	b92b      	cbnz	r3, 800497a <_ZN22OpponentScreenViewBaseC1Ev+0xa2a>
 800496e:	4b7d      	ldr	r3, [pc, #500]	; (8004b64 <_ZN22OpponentScreenViewBaseC1Ev+0xc14>)
 8004970:	4a7d      	ldr	r2, [pc, #500]	; (8004b68 <_ZN22OpponentScreenViewBaseC1Ev+0xc18>)
 8004972:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004974:	487d      	ldr	r0, [pc, #500]	; (8004b6c <_ZN22OpponentScreenViewBaseC1Ev+0xc1c>)
 8004976:	f01b fe07 	bl	8020588 <__assert_func>
 800497a:	4b7d      	ldr	r3, [pc, #500]	; (8004b70 <_ZN22OpponentScreenViewBaseC1Ev+0xc20>)
 800497c:	881b      	ldrh	r3, [r3, #0]
 800497e:	2b0f      	cmp	r3, #15
 8004980:	d803      	bhi.n	800498a <_ZN22OpponentScreenViewBaseC1Ev+0xa3a>
 8004982:	4b7c      	ldr	r3, [pc, #496]	; (8004b74 <_ZN22OpponentScreenViewBaseC1Ev+0xc24>)
 8004984:	4a78      	ldr	r2, [pc, #480]	; (8004b68 <_ZN22OpponentScreenViewBaseC1Ev+0xc18>)
 8004986:	2161      	movs	r1, #97	; 0x61
 8004988:	e7f4      	b.n	8004974 <_ZN22OpponentScreenViewBaseC1Ev+0xa24>
        return texts->getText(typedTextId);
 800498a:	4b7b      	ldr	r3, [pc, #492]	; (8004b78 <_ZN22OpponentScreenViewBaseC1Ev+0xc28>)
 800498c:	210f      	movs	r1, #15
 800498e:	6818      	ldr	r0, [r3, #0]
 8004990:	f000 fadc 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 8004994:	4a79      	ldr	r2, [pc, #484]	; (8004b7c <_ZN22OpponentScreenViewBaseC1Ev+0xc2c>)
 8004996:	4603      	mov	r3, r0
 8004998:	2132      	movs	r1, #50	; 0x32
 800499a:	4638      	mov	r0, r7
 800499c:	f00e f832 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRemainShip1.resizeToCurrentText();
 80049a0:	9814      	ldr	r0, [sp, #80]	; 0x50
        wc1 = value;
 80049a2:	f8c5 7768 	str.w	r7, [r5, #1896]	; 0x768
 80049a6:	f009 f837 	bl	800da18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80049aa:	4f75      	ldr	r7, [pc, #468]	; (8004b80 <_ZN22OpponentScreenViewBaseC1Ev+0xc30>)
    txtRemainShip1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S9QX));
 80049ac:	9814      	ldr	r0, [sp, #80]	; 0x50
 80049ae:	971a      	str	r7, [sp, #104]	; 0x68
 80049b0:	f04f 020b 	mov.w	r2, #11
 80049b4:	a91a      	add	r1, sp, #104	; 0x68
 80049b6:	f8ad 206c 	strh.w	r2, [sp, #108]	; 0x6c
 80049ba:	f009 f84d 	bl	800da58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80049be:	9914      	ldr	r1, [sp, #80]	; 0x50
 80049c0:	4630      	mov	r0, r6
 80049c2:	f007 f896 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRemainShip3.setXY(130, 42);
 80049c6:	222a      	movs	r2, #42	; 0x2a
 80049c8:	2182      	movs	r1, #130	; 0x82
 80049ca:	9815      	ldr	r0, [sp, #84]	; 0x54
 80049cc:	f7fd fcf4 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 80049d0:	f04f 31ff 	mov.w	r1, #4294967295
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049d4:	f8d8 3000 	ldr.w	r3, [r8]
        color = newColor;
 80049d8:	4a61      	ldr	r2, [pc, #388]	; (8004b60 <_ZN22OpponentScreenViewBaseC1Ev+0xc10>)
        boundingArea = calculateBoundingArea();
 80049da:	f8c5 17ac 	str.w	r1, [r5, #1964]	; 0x7ac
    Unicode::snprintf(txtRemainShip3Buffer, TXTREMAINSHIP3_SIZE, "%s", touchgfx::TypedText(T_BATTLESHIP).getText());
 80049de:	f505 610e 	add.w	r1, r5, #2272	; 0x8e0
        color = newColor;
 80049e2:	f8c5 279c 	str.w	r2, [r5, #1948]	; 0x79c
        linespace = space;
 80049e6:	f8a5 47a0 	strh.w	r4, [r5, #1952]	; 0x7a0
        boundingArea = calculateBoundingArea();
 80049ea:	f8c5 47a8 	str.w	r4, [r5, #1960]	; 0x7a8
 80049ee:	f8c5 47b0 	str.w	r4, [r5, #1968]	; 0x7b0
 80049f2:	9102      	str	r1, [sp, #8]
 80049f4:	2b00      	cmp	r3, #0
 80049f6:	d0ba      	beq.n	800496e <_ZN22OpponentScreenViewBaseC1Ev+0xa1e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049f8:	495d      	ldr	r1, [pc, #372]	; (8004b70 <_ZN22OpponentScreenViewBaseC1Ev+0xc20>)
 80049fa:	880b      	ldrh	r3, [r1, #0]
 80049fc:	2b0d      	cmp	r3, #13
 80049fe:	d9c0      	bls.n	8004982 <_ZN22OpponentScreenViewBaseC1Ev+0xa32>
        return texts->getText(typedTextId);
 8004a00:	4b5d      	ldr	r3, [pc, #372]	; (8004b78 <_ZN22OpponentScreenViewBaseC1Ev+0xc28>)
 8004a02:	210d      	movs	r1, #13
 8004a04:	6818      	ldr	r0, [r3, #0]
 8004a06:	f000 faa1 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 8004a0a:	4a5c      	ldr	r2, [pc, #368]	; (8004b7c <_ZN22OpponentScreenViewBaseC1Ev+0xc2c>)
 8004a0c:	4603      	mov	r3, r0
 8004a0e:	2132      	movs	r1, #50	; 0x32
 8004a10:	9802      	ldr	r0, [sp, #8]
 8004a12:	f00d fff7 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8004a16:	9802      	ldr	r0, [sp, #8]
 8004a18:	f8c5 07b4 	str.w	r0, [r5, #1972]	; 0x7b4
    txtRemainShip3.resizeToCurrentText();
 8004a1c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004a1e:	f008 fffb 	bl	800da18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    txtRemainShip3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4QYS));
 8004a22:	a81a      	add	r0, sp, #104	; 0x68
        : typedTextId(id)
 8004a24:	2309      	movs	r3, #9
 8004a26:	4601      	mov	r1, r0
 8004a28:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004a2a:	f8ad 306c 	strh.w	r3, [sp, #108]	; 0x6c
 8004a2e:	971a      	str	r7, [sp, #104]	; 0x68
 8004a30:	f009 f812 	bl	800da58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004a34:	9915      	ldr	r1, [sp, #84]	; 0x54
 8004a36:	4630      	mov	r0, r6
 8004a38:	f007 f85b 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRemainShip2.setXY(6, 60);
 8004a3c:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004a3e:	223c      	movs	r2, #60	; 0x3c
 8004a40:	4659      	mov	r1, fp
 8004a42:	f7fd fcb9 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a46:	f8d8 3000 	ldr.w	r3, [r8]
        color = newColor;
 8004a4a:	4a45      	ldr	r2, [pc, #276]	; (8004b60 <_ZN22OpponentScreenViewBaseC1Ev+0xc10>)
 8004a4c:	f8c5 27e8 	str.w	r2, [r5, #2024]	; 0x7e8
        boundingArea = calculateBoundingArea();
 8004a50:	f04f 30ff 	mov.w	r0, #4294967295
        linespace = space;
 8004a54:	f8a5 47ec 	strh.w	r4, [r5, #2028]	; 0x7ec
        boundingArea = calculateBoundingArea();
 8004a58:	f8c5 47f4 	str.w	r4, [r5, #2036]	; 0x7f4
 8004a5c:	f8c5 07f8 	str.w	r0, [r5, #2040]	; 0x7f8
 8004a60:	f8c5 47fc 	str.w	r4, [r5, #2044]	; 0x7fc
    Unicode::snprintf(txtRemainShip2Buffer, TXTREMAINSHIP2_SIZE, "%s", touchgfx::TypedText(T_CRUISER).getText());
 8004a64:	f605 1b44 	addw	fp, r5, #2372	; 0x944
 8004a68:	2b00      	cmp	r3, #0
 8004a6a:	d080      	beq.n	800496e <_ZN22OpponentScreenViewBaseC1Ev+0xa1e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a6c:	4940      	ldr	r1, [pc, #256]	; (8004b70 <_ZN22OpponentScreenViewBaseC1Ev+0xc20>)
 8004a6e:	880b      	ldrh	r3, [r1, #0]
 8004a70:	2b0e      	cmp	r3, #14
 8004a72:	d986      	bls.n	8004982 <_ZN22OpponentScreenViewBaseC1Ev+0xa32>
        return texts->getText(typedTextId);
 8004a74:	4b40      	ldr	r3, [pc, #256]	; (8004b78 <_ZN22OpponentScreenViewBaseC1Ev+0xc28>)
 8004a76:	210e      	movs	r1, #14
 8004a78:	6818      	ldr	r0, [r3, #0]
 8004a7a:	f000 fa67 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 8004a7e:	4a3f      	ldr	r2, [pc, #252]	; (8004b7c <_ZN22OpponentScreenViewBaseC1Ev+0xc2c>)
 8004a80:	4603      	mov	r3, r0
 8004a82:	2132      	movs	r1, #50	; 0x32
 8004a84:	4658      	mov	r0, fp
 8004a86:	f00d ffbd 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRemainShip2.resizeToCurrentText();
 8004a8a:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004a8c:	f8c5 b800 	str.w	fp, [r5, #2048]	; 0x800
 8004a90:	f008 ffc2 	bl	800da18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a94:	f04f 000a 	mov.w	r0, #10
 8004a98:	f8ad 006c 	strh.w	r0, [sp, #108]	; 0x6c
    txtRemainShip2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AMBJ));
 8004a9c:	a81a      	add	r0, sp, #104	; 0x68
 8004a9e:	4601      	mov	r1, r0
 8004aa0:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004aa2:	971a      	str	r7, [sp, #104]	; 0x68
 8004aa4:	f008 ffd8 	bl	800da58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004aa8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004aaa:	4630      	mov	r0, r6
 8004aac:	f007 f821 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRemainShip4.setXY(130, 60);
 8004ab0:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004ab2:	223c      	movs	r2, #60	; 0x3c
 8004ab4:	2182      	movs	r1, #130	; 0x82
 8004ab6:	f7fd fc7f 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004aba:	f8d8 3000 	ldr.w	r3, [r8]
        color = newColor;
 8004abe:	4a28      	ldr	r2, [pc, #160]	; (8004b60 <_ZN22OpponentScreenViewBaseC1Ev+0xc10>)
 8004ac0:	f8c5 2834 	str.w	r2, [r5, #2100]	; 0x834
        boundingArea = calculateBoundingArea();
 8004ac4:	f04f 30ff 	mov.w	r0, #4294967295
        linespace = space;
 8004ac8:	f8a5 4838 	strh.w	r4, [r5, #2104]	; 0x838
        boundingArea = calculateBoundingArea();
 8004acc:	f8c5 4840 	str.w	r4, [r5, #2112]	; 0x840
 8004ad0:	f8c5 0844 	str.w	r0, [r5, #2116]	; 0x844
 8004ad4:	f8c5 4848 	str.w	r4, [r5, #2120]	; 0x848
    Unicode::snprintf(txtRemainShip4Buffer, TXTREMAINSHIP4_SIZE, "%s", touchgfx::TypedText(T_AIRCRAFT_CARRIER).getText());
 8004ad8:	f605 1ba8 	addw	fp, r5, #2472	; 0x9a8
 8004adc:	2b00      	cmp	r3, #0
 8004ade:	f43f af46 	beq.w	800496e <_ZN22OpponentScreenViewBaseC1Ev+0xa1e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004ae2:	4923      	ldr	r1, [pc, #140]	; (8004b70 <_ZN22OpponentScreenViewBaseC1Ev+0xc20>)
 8004ae4:	880b      	ldrh	r3, [r1, #0]
 8004ae6:	2b0c      	cmp	r3, #12
 8004ae8:	f67f af4b 	bls.w	8004982 <_ZN22OpponentScreenViewBaseC1Ev+0xa32>
        return texts->getText(typedTextId);
 8004aec:	4b22      	ldr	r3, [pc, #136]	; (8004b78 <_ZN22OpponentScreenViewBaseC1Ev+0xc28>)
 8004aee:	210c      	movs	r1, #12
 8004af0:	6818      	ldr	r0, [r3, #0]
 8004af2:	f000 fa2b 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 8004af6:	4a21      	ldr	r2, [pc, #132]	; (8004b7c <_ZN22OpponentScreenViewBaseC1Ev+0xc2c>)
 8004af8:	4603      	mov	r3, r0
 8004afa:	2132      	movs	r1, #50	; 0x32
 8004afc:	4658      	mov	r0, fp
 8004afe:	f00d ff81 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRemainShip4.resizeToCurrentText();
 8004b02:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004b04:	f8c5 b84c 	str.w	fp, [r5, #2124]	; 0x84c
 8004b08:	f008 ff86 	bl	800da18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004b0c:	2308      	movs	r3, #8
    txtRemainShip4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_546Q));
 8004b0e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004b10:	f8ad 306c 	strh.w	r3, [sp, #108]	; 0x6c
 8004b14:	a91a      	add	r1, sp, #104	; 0x68
 8004b16:	971a      	str	r7, [sp, #104]	; 0x68
 8004b18:	f008 ff9e 	bl	800da58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004b1c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8004b1e:	4630      	mov	r0, r6
 8004b20:	f006 ffe7 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    select.setBitmap(touchgfx::Bitmap(BITMAP_SELECT_ID));
 8004b24:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004b26:	f04f 020b 	mov.w	r2, #11
 8004b2a:	a91a      	add	r1, sp, #104	; 0x68
 8004b2c:	f8ad 2068 	strh.w	r2, [sp, #104]	; 0x68
 8004b30:	f009 f921 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select.setPosition(5, 84, 23, 23);
 8004b34:	464b      	mov	r3, r9
 8004b36:	2254      	movs	r2, #84	; 0x54
 8004b38:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004b3a:	f8cd 9000 	str.w	r9, [sp]
 8004b3e:	4651      	mov	r1, sl
 8004b40:	f7fd fc47 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
    select.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004b44:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004b46:	4621      	mov	r1, r4
 8004b48:	f008 f9fd 	bl	800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8004b4c:	4630      	mov	r0, r6
 8004b4e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004b50:	f006 ffcf 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004b54:	4628      	mov	r0, r5
 8004b56:	b01d      	add	sp, #116	; 0x74
 8004b58:	ecbd 8b10 	vpop	{d8-d15}
 8004b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004b60:	ff1434a8 	.word	0xff1434a8
 8004b64:	0802206c 	.word	0x0802206c
 8004b68:	0802216e 	.word	0x0802216e
 8004b6c:	080220e9 	.word	0x080220e9
 8004b70:	20015018 	.word	0x20015018
 8004b74:	08022130 	.word	0x08022130
 8004b78:	20015020 	.word	0x20015020
 8004b7c:	080221a6 	.word	0x080221a6
 8004b80:	080221b4 	.word	0x080221b4
 8004b84:	20015014 	.word	0x20015014

08004b88 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_rechargebd_otf_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_rechargebd_otf_12_4bpp();

touchgfx::GeneratedFont& getFont_rechargebd_otf_12_4bpp()
{
    static touchgfx::GeneratedFont rechargebd_otf_12_4bpp(glyphs_rechargebd_otf_12_4bpp, 95, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_rechargebd_otf_12_4bpp, kerning_rechargebd_otf_12_4bpp, 63, 0, 0, 0);
 8004b88:	4770      	bx	lr
	...

08004b8c <_Z30getFont_rechargebd_otf_12_4bppv>:
{
 8004b8c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont rechargebd_otf_12_4bpp(glyphs_rechargebd_otf_12_4bpp, 95, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_rechargebd_otf_12_4bpp, kerning_rechargebd_otf_12_4bpp, 63, 0, 0, 0);
 8004b8e:	4d17      	ldr	r5, [pc, #92]	; (8004bec <_Z30getFont_rechargebd_otf_12_4bppv+0x60>)
 8004b90:	782c      	ldrb	r4, [r5, #0]
 8004b92:	f3bf 8f5b 	dmb	ish
 8004b96:	f014 0401 	ands.w	r4, r4, #1
{
 8004b9a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont rechargebd_otf_12_4bpp(glyphs_rechargebd_otf_12_4bpp, 95, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_rechargebd_otf_12_4bpp, kerning_rechargebd_otf_12_4bpp, 63, 0, 0, 0);
 8004b9c:	d122      	bne.n	8004be4 <_Z30getFont_rechargebd_otf_12_4bppv+0x58>
 8004b9e:	4628      	mov	r0, r5
 8004ba0:	f01b fc44 	bl	802042c <__cxa_guard_acquire>
 8004ba4:	b1f0      	cbz	r0, 8004be4 <_Z30getFont_rechargebd_otf_12_4bppv+0x58>
 8004ba6:	233f      	movs	r3, #63	; 0x3f
 8004ba8:	9309      	str	r3, [sp, #36]	; 0x24
 8004baa:	4b11      	ldr	r3, [pc, #68]	; (8004bf0 <_Z30getFont_rechargebd_otf_12_4bppv+0x64>)
 8004bac:	9308      	str	r3, [sp, #32]
 8004bae:	4b11      	ldr	r3, [pc, #68]	; (8004bf4 <_Z30getFont_rechargebd_otf_12_4bppv+0x68>)
 8004bb0:	9307      	str	r3, [sp, #28]
 8004bb2:	2301      	movs	r3, #1
 8004bb4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8004bb8:	9304      	str	r3, [sp, #16]
 8004bba:	2304      	movs	r3, #4
 8004bbc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8004bc0:	230c      	movs	r3, #12
 8004bc2:	490d      	ldr	r1, [pc, #52]	; (8004bf8 <_Z30getFont_rechargebd_otf_12_4bppv+0x6c>)
 8004bc4:	9300      	str	r3, [sp, #0]
 8004bc6:	225f      	movs	r2, #95	; 0x5f
 8004bc8:	230f      	movs	r3, #15
 8004bca:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004bce:	480b      	ldr	r0, [pc, #44]	; (8004bfc <_Z30getFont_rechargebd_otf_12_4bppv+0x70>)
 8004bd0:	940a      	str	r4, [sp, #40]	; 0x28
 8004bd2:	9401      	str	r4, [sp, #4]
 8004bd4:	f7ff f80c 	bl	8003bf0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004bd8:	4809      	ldr	r0, [pc, #36]	; (8004c00 <_Z30getFont_rechargebd_otf_12_4bppv+0x74>)
 8004bda:	f01b fcf3 	bl	80205c4 <atexit>
 8004bde:	4628      	mov	r0, r5
 8004be0:	f01b fc30 	bl	8020444 <__cxa_guard_release>
    return rechargebd_otf_12_4bpp;
}
 8004be4:	4805      	ldr	r0, [pc, #20]	; (8004bfc <_Z30getFont_rechargebd_otf_12_4bppv+0x70>)
 8004be6:	b00f      	add	sp, #60	; 0x3c
 8004be8:	bd30      	pop	{r4, r5, pc}
 8004bea:	bf00      	nop
 8004bec:	20004148 	.word	0x20004148
 8004bf0:	08026f94 	.word	0x08026f94
 8004bf4:	08027224 	.word	0x08027224
 8004bf8:	080267b8 	.word	0x080267b8
 8004bfc:	2000414c 	.word	0x2000414c
 8004c00:	08004b89 	.word	0x08004b89

08004c04 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_rechargebd_otf_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_rechargebd_otf_20_4bpp();

touchgfx::GeneratedFont& getFont_rechargebd_otf_20_4bpp()
{
    static touchgfx::GeneratedFont rechargebd_otf_20_4bpp(glyphs_rechargebd_otf_20_4bpp, 29, 25, 20, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_20_4bpp, kerning_rechargebd_otf_20_4bpp, 63, 0, 0, 0);
 8004c04:	4770      	bx	lr
	...

08004c08 <_Z30getFont_rechargebd_otf_20_4bppv>:
{
 8004c08:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont rechargebd_otf_20_4bpp(glyphs_rechargebd_otf_20_4bpp, 29, 25, 20, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_20_4bpp, kerning_rechargebd_otf_20_4bpp, 63, 0, 0, 0);
 8004c0a:	4d17      	ldr	r5, [pc, #92]	; (8004c68 <_Z30getFont_rechargebd_otf_20_4bppv+0x60>)
 8004c0c:	782c      	ldrb	r4, [r5, #0]
 8004c0e:	f3bf 8f5b 	dmb	ish
 8004c12:	f014 0401 	ands.w	r4, r4, #1
{
 8004c16:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont rechargebd_otf_20_4bpp(glyphs_rechargebd_otf_20_4bpp, 29, 25, 20, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_20_4bpp, kerning_rechargebd_otf_20_4bpp, 63, 0, 0, 0);
 8004c18:	d122      	bne.n	8004c60 <_Z30getFont_rechargebd_otf_20_4bppv+0x58>
 8004c1a:	4628      	mov	r0, r5
 8004c1c:	f01b fc06 	bl	802042c <__cxa_guard_acquire>
 8004c20:	b1f0      	cbz	r0, 8004c60 <_Z30getFont_rechargebd_otf_20_4bppv+0x58>
 8004c22:	233f      	movs	r3, #63	; 0x3f
 8004c24:	9309      	str	r3, [sp, #36]	; 0x24
 8004c26:	4b11      	ldr	r3, [pc, #68]	; (8004c6c <_Z30getFont_rechargebd_otf_20_4bppv+0x64>)
 8004c28:	9308      	str	r3, [sp, #32]
 8004c2a:	4b11      	ldr	r3, [pc, #68]	; (8004c70 <_Z30getFont_rechargebd_otf_20_4bppv+0x68>)
 8004c2c:	4911      	ldr	r1, [pc, #68]	; (8004c74 <_Z30getFont_rechargebd_otf_20_4bppv+0x6c>)
 8004c2e:	4812      	ldr	r0, [pc, #72]	; (8004c78 <_Z30getFont_rechargebd_otf_20_4bppv+0x70>)
 8004c30:	940a      	str	r4, [sp, #40]	; 0x28
 8004c32:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8004c36:	2201      	movs	r2, #1
 8004c38:	2304      	movs	r3, #4
 8004c3a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8004c3e:	2314      	movs	r3, #20
 8004c40:	9300      	str	r3, [sp, #0]
 8004c42:	221d      	movs	r2, #29
 8004c44:	2319      	movs	r3, #25
 8004c46:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004c4a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004c4e:	9405      	str	r4, [sp, #20]
 8004c50:	f7fe ffce 	bl	8003bf0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c54:	4809      	ldr	r0, [pc, #36]	; (8004c7c <_Z30getFont_rechargebd_otf_20_4bppv+0x74>)
 8004c56:	f01b fcb5 	bl	80205c4 <atexit>
 8004c5a:	4628      	mov	r0, r5
 8004c5c:	f01b fbf2 	bl	8020444 <__cxa_guard_release>
    return rechargebd_otf_20_4bpp;
}
 8004c60:	4805      	ldr	r0, [pc, #20]	; (8004c78 <_Z30getFont_rechargebd_otf_20_4bppv+0x70>)
 8004c62:	b00f      	add	sp, #60	; 0x3c
 8004c64:	bd30      	pop	{r4, r5, pc}
 8004c66:	bf00      	nop
 8004c68:	20004178 	.word	0x20004178
 8004c6c:	0802716c 	.word	0x0802716c
 8004c70:	08027228 	.word	0x08027228
 8004c74:	08026cec 	.word	0x08026cec
 8004c78:	2000417c 	.word	0x2000417c
 8004c7c:	08004c05 	.word	0x08004c05

08004c80 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_rechargebd_otf_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_rechargebd_otf_30_4bpp();

touchgfx::GeneratedFont& getFont_rechargebd_otf_30_4bpp()
{
    static touchgfx::GeneratedFont rechargebd_otf_30_4bpp(glyphs_rechargebd_otf_30_4bpp, 17, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_30_4bpp, kerning_rechargebd_otf_30_4bpp, 63, 0, 0, 0);
 8004c80:	4770      	bx	lr
	...

08004c84 <_Z30getFont_rechargebd_otf_30_4bppv>:
{
 8004c84:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont rechargebd_otf_30_4bpp(glyphs_rechargebd_otf_30_4bpp, 17, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_30_4bpp, kerning_rechargebd_otf_30_4bpp, 63, 0, 0, 0);
 8004c86:	4d16      	ldr	r5, [pc, #88]	; (8004ce0 <_Z30getFont_rechargebd_otf_30_4bppv+0x5c>)
 8004c88:	782c      	ldrb	r4, [r5, #0]
 8004c8a:	f3bf 8f5b 	dmb	ish
 8004c8e:	f014 0401 	ands.w	r4, r4, #1
{
 8004c92:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont rechargebd_otf_30_4bpp(glyphs_rechargebd_otf_30_4bpp, 17, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_30_4bpp, kerning_rechargebd_otf_30_4bpp, 63, 0, 0, 0);
 8004c94:	d121      	bne.n	8004cda <_Z30getFont_rechargebd_otf_30_4bppv+0x56>
 8004c96:	4628      	mov	r0, r5
 8004c98:	f01b fbc8 	bl	802042c <__cxa_guard_acquire>
 8004c9c:	b1e8      	cbz	r0, 8004cda <_Z30getFont_rechargebd_otf_30_4bppv+0x56>
 8004c9e:	233f      	movs	r3, #63	; 0x3f
 8004ca0:	9309      	str	r3, [sp, #36]	; 0x24
 8004ca2:	4b10      	ldr	r3, [pc, #64]	; (8004ce4 <_Z30getFont_rechargebd_otf_30_4bppv+0x60>)
 8004ca4:	9308      	str	r3, [sp, #32]
 8004ca6:	4b10      	ldr	r3, [pc, #64]	; (8004ce8 <_Z30getFont_rechargebd_otf_30_4bppv+0x64>)
 8004ca8:	4910      	ldr	r1, [pc, #64]	; (8004cec <_Z30getFont_rechargebd_otf_30_4bppv+0x68>)
 8004caa:	4811      	ldr	r0, [pc, #68]	; (8004cf0 <_Z30getFont_rechargebd_otf_30_4bppv+0x6c>)
 8004cac:	940a      	str	r4, [sp, #40]	; 0x28
 8004cae:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8004cb2:	2201      	movs	r2, #1
 8004cb4:	2304      	movs	r3, #4
 8004cb6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8004cba:	231e      	movs	r3, #30
 8004cbc:	9300      	str	r3, [sp, #0]
 8004cbe:	2211      	movs	r2, #17
 8004cc0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004cc4:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004cc8:	9405      	str	r4, [sp, #20]
 8004cca:	f7fe ff91 	bl	8003bf0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004cce:	4809      	ldr	r0, [pc, #36]	; (8004cf4 <_Z30getFont_rechargebd_otf_30_4bppv+0x70>)
 8004cd0:	f01b fc78 	bl	80205c4 <atexit>
 8004cd4:	4628      	mov	r0, r5
 8004cd6:	f01b fbb5 	bl	8020444 <__cxa_guard_release>
    return rechargebd_otf_30_4bpp;
}
 8004cda:	4805      	ldr	r0, [pc, #20]	; (8004cf0 <_Z30getFont_rechargebd_otf_30_4bppv+0x6c>)
 8004cdc:	b00f      	add	sp, #60	; 0x3c
 8004cde:	bd30      	pop	{r4, r5, pc}
 8004ce0:	200041a8 	.word	0x200041a8
 8004ce4:	080271e4 	.word	0x080271e4
 8004ce8:	0802722c 	.word	0x0802722c
 8004cec:	08026e84 	.word	0x08026e84
 8004cf0:	200041ac 	.word	0x200041ac
 8004cf4:	08004c81 	.word	0x08004c81

08004cf8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004cf8:	4770      	bx	lr
	...

08004cfc <_Z23getFont_verdana_10_4bppv>:
{
 8004cfc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004cfe:	4d16      	ldr	r5, [pc, #88]	; (8004d58 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004d00:	782c      	ldrb	r4, [r5, #0]
 8004d02:	f3bf 8f5b 	dmb	ish
 8004d06:	f014 0401 	ands.w	r4, r4, #1
{
 8004d0a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004d0c:	d120      	bne.n	8004d50 <_Z23getFont_verdana_10_4bppv+0x54>
 8004d0e:	4628      	mov	r0, r5
 8004d10:	f01b fb8c 	bl	802042c <__cxa_guard_acquire>
 8004d14:	b1e0      	cbz	r0, 8004d50 <_Z23getFont_verdana_10_4bppv+0x54>
 8004d16:	233f      	movs	r3, #63	; 0x3f
 8004d18:	9309      	str	r3, [sp, #36]	; 0x24
 8004d1a:	4b10      	ldr	r3, [pc, #64]	; (8004d5c <_Z23getFont_verdana_10_4bppv+0x60>)
 8004d1c:	9308      	str	r3, [sp, #32]
 8004d1e:	4b10      	ldr	r3, [pc, #64]	; (8004d60 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004d20:	4910      	ldr	r1, [pc, #64]	; (8004d64 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004d22:	4811      	ldr	r0, [pc, #68]	; (8004d68 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004d24:	940a      	str	r4, [sp, #40]	; 0x28
 8004d26:	2201      	movs	r2, #1
 8004d28:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8004d2c:	2304      	movs	r3, #4
 8004d2e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8004d32:	230a      	movs	r3, #10
 8004d34:	9300      	str	r3, [sp, #0]
 8004d36:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004d3a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004d3e:	9405      	str	r4, [sp, #20]
 8004d40:	f7fe ff56 	bl	8003bf0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004d44:	4809      	ldr	r0, [pc, #36]	; (8004d6c <_Z23getFont_verdana_10_4bppv+0x70>)
 8004d46:	f01b fc3d 	bl	80205c4 <atexit>
 8004d4a:	4628      	mov	r0, r5
 8004d4c:	f01b fb7a 	bl	8020444 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004d50:	4805      	ldr	r0, [pc, #20]	; (8004d68 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004d52:	b00f      	add	sp, #60	; 0x3c
 8004d54:	bd30      	pop	{r4, r5, pc}
 8004d56:	bf00      	nop
 8004d58:	200041d8 	.word	0x200041d8
 8004d5c:	0802721c 	.word	0x0802721c
 8004d60:	08027230 	.word	0x08027230
 8004d64:	08026f74 	.word	0x08026f74
 8004d68:	200041dc 	.word	0x200041dc
 8004d6c:	08004cf9 	.word	0x08004cf9

08004d70 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004d70:	4770      	bx	lr
	...

08004d74 <_Z23getFont_verdana_40_4bppv>:
{
 8004d74:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004d76:	4d16      	ldr	r5, [pc, #88]	; (8004dd0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004d78:	782c      	ldrb	r4, [r5, #0]
 8004d7a:	f3bf 8f5b 	dmb	ish
 8004d7e:	f014 0401 	ands.w	r4, r4, #1
{
 8004d82:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004d84:	d120      	bne.n	8004dc8 <_Z23getFont_verdana_40_4bppv+0x54>
 8004d86:	4628      	mov	r0, r5
 8004d88:	f01b fb50 	bl	802042c <__cxa_guard_acquire>
 8004d8c:	b1e0      	cbz	r0, 8004dc8 <_Z23getFont_verdana_40_4bppv+0x54>
 8004d8e:	233f      	movs	r3, #63	; 0x3f
 8004d90:	9309      	str	r3, [sp, #36]	; 0x24
 8004d92:	4b10      	ldr	r3, [pc, #64]	; (8004dd4 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004d94:	9308      	str	r3, [sp, #32]
 8004d96:	4b10      	ldr	r3, [pc, #64]	; (8004dd8 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004d98:	4910      	ldr	r1, [pc, #64]	; (8004ddc <_Z23getFont_verdana_40_4bppv+0x68>)
 8004d9a:	4811      	ldr	r0, [pc, #68]	; (8004de0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004d9c:	940a      	str	r4, [sp, #40]	; 0x28
 8004d9e:	2201      	movs	r2, #1
 8004da0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8004da4:	2304      	movs	r3, #4
 8004da6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8004daa:	2328      	movs	r3, #40	; 0x28
 8004dac:	9300      	str	r3, [sp, #0]
 8004dae:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004db2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004db6:	9405      	str	r4, [sp, #20]
 8004db8:	f7fe ff1a 	bl	8003bf0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004dbc:	4809      	ldr	r0, [pc, #36]	; (8004de4 <_Z23getFont_verdana_40_4bppv+0x70>)
 8004dbe:	f01b fc01 	bl	80205c4 <atexit>
 8004dc2:	4628      	mov	r0, r5
 8004dc4:	f01b fb3e 	bl	8020444 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004dc8:	4805      	ldr	r0, [pc, #20]	; (8004de0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004dca:	b00f      	add	sp, #60	; 0x3c
 8004dcc:	bd30      	pop	{r4, r5, pc}
 8004dce:	bf00      	nop
 8004dd0:	20004208 	.word	0x20004208
 8004dd4:	08027220 	.word	0x08027220
 8004dd8:	08027234 	.word	0x08027234
 8004ddc:	08026f84 	.word	0x08026f84
 8004de0:	2000420c 	.word	0x2000420c
 8004de4:	08004d71 	.word	0x08004d71

08004de8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004de8:	2000      	movs	r0, #0
 8004dea:	4770      	bx	lr

08004dec <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004dec:	2000      	movs	r0, #0
 8004dee:	4770      	bx	lr

08004df0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004df0:	b40e      	push	{r1, r2, r3}
 8004df2:	b503      	push	{r0, r1, lr}
 8004df4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004df6:	2100      	movs	r1, #0
{
 8004df8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004dfc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004dfe:	f00b fd57 	bl	80108b0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004e02:	b002      	add	sp, #8
 8004e04:	f85d eb04 	ldr.w	lr, [sp], #4
 8004e08:	b003      	add	sp, #12
 8004e0a:	4770      	bx	lr

08004e0c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004e0c:	b40c      	push	{r2, r3}
 8004e0e:	b507      	push	{r0, r1, r2, lr}
 8004e10:	ab04      	add	r3, sp, #16
 8004e12:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004e16:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004e18:	f00b fd4a 	bl	80108b0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004e1c:	b003      	add	sp, #12
 8004e1e:	f85d eb04 	ldr.w	lr, [sp], #4
 8004e22:	b002      	add	sp, #8
 8004e24:	4770      	bx	lr
	...

08004e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004e28:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004e2a:	b510      	push	{r4, lr}
 8004e2c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004e2e:	b373      	cbz	r3, 8004e8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004e30:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004e32:	b92b      	cbnz	r3, 8004e40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004e34:	4b18      	ldr	r3, [pc, #96]	; (8004e98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004e36:	4a19      	ldr	r2, [pc, #100]	; (8004e9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004e38:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004e3a:	4819      	ldr	r0, [pc, #100]	; (8004ea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004e3c:	f01b fba4 	bl	8020588 <__assert_func>
            return buffer[pos];
 8004e40:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004e42:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004e46:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004e48:	b30b      	cbz	r3, 8004e8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004e4a:	f00d f832 	bl	8011eb2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004e4e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004e50:	2b01      	cmp	r3, #1
 8004e52:	d803      	bhi.n	8004e5c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004e54:	4b13      	ldr	r3, [pc, #76]	; (8004ea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004e56:	4a14      	ldr	r2, [pc, #80]	; (8004ea8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004e58:	21cb      	movs	r1, #203	; 0xcb
 8004e5a:	e7ee      	b.n	8004e3a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004e5c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004e5e:	1c53      	adds	r3, r2, #1
 8004e60:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004e62:	2b09      	cmp	r3, #9
 8004e64:	4619      	mov	r1, r3
 8004e66:	bf88      	it	hi
 8004e68:	f1a3 010a 	subhi.w	r1, r3, #10
 8004e6c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004e70:	f640 103f 	movw	r0, #2367	; 0x93f
 8004e74:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004e76:	4281      	cmp	r1, r0
 8004e78:	d109      	bne.n	8004e8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004e7a:	2b0a      	cmp	r3, #10
 8004e7c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004e80:	bf28      	it	cs
 8004e82:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004e84:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004e88:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004e8a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004e8c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004e8e:	4620      	mov	r0, r4
}
 8004e90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004e94:	f00c bf10 	b.w	8011cb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004e98:	08022c08 	.word	0x08022c08
 8004e9c:	08022c11 	.word	0x08022c11
 8004ea0:	08022cbc 	.word	0x08022cbc
 8004ea4:	08022d06 	.word	0x08022d06
 8004ea8:	08022d14 	.word	0x08022d14

08004eac <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004eac:	f00c becb 	b.w	8011c46 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004eb0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004eb0:	b510      	push	{r4, lr}
 8004eb2:	b086      	sub	sp, #24
 8004eb4:	ac02      	add	r4, sp, #8
 8004eb6:	e884 0006 	stmia.w	r4, {r1, r2}
 8004eba:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004ebc:	ab0a      	add	r3, sp, #40	; 0x28
 8004ebe:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004ec0:	9301      	str	r3, [sp, #4]
 8004ec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ec4:	9300      	str	r3, [sp, #0]
 8004ec6:	4621      	mov	r1, r4
 8004ec8:	9b08      	ldr	r3, [sp, #32]
 8004eca:	f00a f927 	bl	800f11c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004ece:	b006      	add	sp, #24
 8004ed0:	bd10      	pop	{r4, pc}
	...

08004ed4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004ed4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004ed6:	bb18      	cbnz	r0, 8004f20 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004ed8:	4b12      	ldr	r3, [pc, #72]	; (8004f24 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004eda:	4813      	ldr	r0, [pc, #76]	; (8004f28 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004edc:	681b      	ldr	r3, [r3, #0]
 8004ede:	4913      	ldr	r1, [pc, #76]	; (8004f2c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004ee0:	b1b3      	cbz	r3, 8004f10 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004ee2:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004ee4:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004ee6:	441a      	add	r2, r3
 8004ee8:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004eea:	685a      	ldr	r2, [r3, #4]
 8004eec:	441a      	add	r2, r3
 8004eee:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004ef0:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004ef2:	4b0f      	ldr	r3, [pc, #60]	; (8004f30 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004ef4:	2200      	movs	r2, #0
 8004ef6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004ef8:	f000 f838 	bl	8004f6c <_ZN17TypedTextDatabase8getFontsEv>
 8004efc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004efe:	f000 f833 	bl	8004f68 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004f02:	4b0c      	ldr	r3, [pc, #48]	; (8004f34 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004f04:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004f06:	4b0c      	ldr	r3, [pc, #48]	; (8004f38 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004f08:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004f0a:	4b0c      	ldr	r3, [pc, #48]	; (8004f3c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004f0c:	8018      	strh	r0, [r3, #0]
    }
}
 8004f0e:	e007      	b.n	8004f20 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004f10:	4b0b      	ldr	r3, [pc, #44]	; (8004f40 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004f12:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004f14:	4b0b      	ldr	r3, [pc, #44]	; (8004f44 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004f16:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004f18:	4b0b      	ldr	r3, [pc, #44]	; (8004f48 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004f1a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004f1c:	2c00      	cmp	r4, #0
 8004f1e:	d1e8      	bne.n	8004ef2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004f20:	bd38      	pop	{r3, r4, r5, pc}
 8004f22:	bf00      	nop
 8004f24:	20004238 	.word	0x20004238
 8004f28:	2000423c 	.word	0x2000423c
 8004f2c:	20004240 	.word	0x20004240
 8004f30:	20004244 	.word	0x20004244
 8004f34:	20015014 	.word	0x20015014
 8004f38:	2001501c 	.word	0x2001501c
 8004f3c:	20015018 	.word	0x20015018
 8004f40:	08027280 	.word	0x08027280
 8004f44:	08027238 	.word	0x08027238
 8004f48:	080273d0 	.word	0x080273d0

08004f4c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004f4c:	4b04      	ldr	r3, [pc, #16]	; (8004f60 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004f4e:	681b      	ldr	r3, [r3, #0]
 8004f50:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004f54:	4b03      	ldr	r3, [pc, #12]	; (8004f64 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004f56:	681b      	ldr	r3, [r3, #0]
}
 8004f58:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004f5c:	4770      	bx	lr
 8004f5e:	bf00      	nop
 8004f60:	20004240 	.word	0x20004240
 8004f64:	2000423c 	.word	0x2000423c

08004f68 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004f68:	2012      	movs	r0, #18
 8004f6a:	4770      	bx	lr

08004f6c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004f6c:	4800      	ldr	r0, [pc, #0]	; (8004f70 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004f6e:	4770      	bx	lr
 8004f70:	20004248 	.word	0x20004248

08004f74 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_rechargebd_otf_20_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004f74:	b510      	push	{r4, lr}
    &(getFont_rechargebd_otf_12_4bpp()),
 8004f76:	f7ff fe09 	bl	8004b8c <_Z30getFont_rechargebd_otf_12_4bppv>
};
 8004f7a:	4c07      	ldr	r4, [pc, #28]	; (8004f98 <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
 8004f7c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004f7e:	f7ff fef9 	bl	8004d74 <_Z23getFont_verdana_40_4bppv>
};
 8004f82:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8004f84:	f7ff feba 	bl	8004cfc <_Z23getFont_verdana_10_4bppv>
};
 8004f88:	60a0      	str	r0, [r4, #8]
    &(getFont_rechargebd_otf_30_4bpp()),
 8004f8a:	f7ff fe7b 	bl	8004c84 <_Z30getFont_rechargebd_otf_30_4bppv>
};
 8004f8e:	60e0      	str	r0, [r4, #12]
    &(getFont_rechargebd_otf_20_4bpp())
 8004f90:	f7ff fe3a 	bl	8004c08 <_Z30getFont_rechargebd_otf_20_4bppv>
};
 8004f94:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
 8004f96:	bd10      	pop	{r4, pc}
 8004f98:	20004248 	.word	0x20004248

08004f9c <_ZN22EndGameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~EndGameScreenPresenter() {}
 8004f9c:	4770      	bx	lr

08004f9e <_ZThn4_N22EndGameScreenPresenterD1Ev>:
 8004f9e:	3804      	subs	r0, #4
 8004fa0:	4770      	bx	lr

08004fa2 <_ZN22EndGameScreenPresenter10deactivateEv>:
}

void EndGameScreenPresenter::activate()
{

}
 8004fa2:	4770      	bx	lr

08004fa4 <_ZN22EndGameScreenPresenterD0Ev>:
 8004fa4:	b510      	push	{r4, lr}
 8004fa6:	2110      	movs	r1, #16
 8004fa8:	4604      	mov	r4, r0
 8004faa:	f01b fa3d 	bl	8020428 <_ZdlPvj>
 8004fae:	4620      	mov	r0, r4
 8004fb0:	bd10      	pop	{r4, pc}

08004fb2 <_ZThn4_N22EndGameScreenPresenterD0Ev>:
 8004fb2:	f1a0 0004 	sub.w	r0, r0, #4
 8004fb6:	e7f5      	b.n	8004fa4 <_ZN22EndGameScreenPresenterD0Ev>

08004fb8 <_ZN22EndGameScreenPresenterC1ER17EndGameScreenView>:
EndGameScreenPresenter::EndGameScreenPresenter(EndGameScreenView& v)
 8004fb8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004fba:	2200      	movs	r2, #0
 8004fbc:	6082      	str	r2, [r0, #8]
    : view(v)
 8004fbe:	4a04      	ldr	r2, [pc, #16]	; (8004fd0 <_ZN22EndGameScreenPresenterC1ER17EndGameScreenView+0x18>)
 8004fc0:	60c1      	str	r1, [r0, #12]
 8004fc2:	f102 0408 	add.w	r4, r2, #8
 8004fc6:	3220      	adds	r2, #32
 8004fc8:	6004      	str	r4, [r0, #0]
 8004fca:	6042      	str	r2, [r0, #4]
}
 8004fcc:	bd10      	pop	{r4, pc}
 8004fce:	bf00      	nop
 8004fd0:	08022de8 	.word	0x08022de8

08004fd4 <_ZN17EndGameScreenView14tearDownScreenEv>:
}

void EndGameScreenView::tearDownScreen()
{
    EndGameScreenViewBase::tearDownScreen();
}
 8004fd4:	4770      	bx	lr
	...

08004fd8 <_ZN17EndGameScreenViewD1Ev>:

class EndGameScreenView : public EndGameScreenViewBase
{
public:
    EndGameScreenView();
    virtual ~EndGameScreenView() {}
 8004fd8:	b510      	push	{r4, lr}
 8004fda:	4b03      	ldr	r3, [pc, #12]	; (8004fe8 <_ZN17EndGameScreenViewD1Ev+0x10>)
 8004fdc:	6003      	str	r3, [r0, #0]
 8004fde:	4604      	mov	r4, r0
 8004fe0:	f7fd f961 	bl	80022a6 <_ZN21EndGameScreenViewBaseD1Ev>
 8004fe4:	4620      	mov	r0, r4
 8004fe6:	bd10      	pop	{r4, pc}
 8004fe8:	08022e18 	.word	0x08022e18

08004fec <_ZN17EndGameScreenViewD0Ev>:
 8004fec:	b510      	push	{r4, lr}
 8004fee:	4604      	mov	r4, r0
 8004ff0:	f7ff fff2 	bl	8004fd8 <_ZN17EndGameScreenViewD1Ev>
 8004ff4:	4620      	mov	r0, r4
 8004ff6:	f44f 71cc 	mov.w	r1, #408	; 0x198
 8004ffa:	f01b fa15 	bl	8020428 <_ZdlPvj>
 8004ffe:	4620      	mov	r0, r4
 8005000:	bd10      	pop	{r4, pc}
	...

08005004 <_ZN17EndGameScreenViewC1Ev>:
EndGameScreenView::EndGameScreenView()
 8005004:	b510      	push	{r4, lr}
 8005006:	4604      	mov	r4, r0
 8005008:	f7fd fa72 	bl	80024f0 <_ZN21EndGameScreenViewBaseC1Ev>
 800500c:	4b01      	ldr	r3, [pc, #4]	; (8005014 <_ZN17EndGameScreenViewC1Ev+0x10>)
 800500e:	6023      	str	r3, [r4, #0]
}
 8005010:	4620      	mov	r0, r4
 8005012:	bd10      	pop	{r4, pc}
 8005014:	08022e18 	.word	0x08022e18

08005018 <_ZN17EndGameScreenView11setupScreenEv>:
{
 8005018:	b538      	push	{r3, r4, r5, lr}
 800501a:	4604      	mov	r4, r0
    EndGameScreenViewBase::setupScreen();
 800501c:	f7fd f944 	bl	80022a8 <_ZN21EndGameScreenViewBase11setupScreenEv>

    int32_t getWinner() {
		return model->getWinner();
 8005020:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005022:	4918      	ldr	r1, [pc, #96]	; (8005084 <_ZN17EndGameScreenView11setupScreenEv+0x6c>)

	void setWinner(int32_t winner) {
		this->winner = winner;
	}
	int32_t getWinner() {
		return this->winner;
 8005024:	689b      	ldr	r3, [r3, #8]
 8005026:	4a18      	ldr	r2, [pc, #96]	; (8005088 <_ZN17EndGameScreenView11setupScreenEv+0x70>)
    if(winner == 1)
 8005028:	f8d3 3648 	ldr.w	r3, [r3, #1608]	; 0x648
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800502c:	6809      	ldr	r1, [r1, #0]
 800502e:	2b01      	cmp	r3, #1
    	Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T_PLAYER1).getText());
 8005030:	f504 75ba 	add.w	r5, r4, #372	; 0x174
 8005034:	4b15      	ldr	r3, [pc, #84]	; (800508c <_ZN17EndGameScreenView11setupScreenEv+0x74>)
    if(winner == 1)
 8005036:	d11d      	bne.n	8005074 <_ZN17EndGameScreenView11setupScreenEv+0x5c>
 8005038:	b929      	cbnz	r1, 8005046 <_ZN17EndGameScreenView11setupScreenEv+0x2e>
 800503a:	4b15      	ldr	r3, [pc, #84]	; (8005090 <_ZN17EndGameScreenView11setupScreenEv+0x78>)
 800503c:	4a15      	ldr	r2, [pc, #84]	; (8005094 <_ZN17EndGameScreenView11setupScreenEv+0x7c>)
 800503e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005040:	4815      	ldr	r0, [pc, #84]	; (8005098 <_ZN17EndGameScreenView11setupScreenEv+0x80>)
 8005042:	f01b faa1 	bl	8020588 <__assert_func>
 8005046:	8812      	ldrh	r2, [r2, #0]
 8005048:	2a06      	cmp	r2, #6
 800504a:	d803      	bhi.n	8005054 <_ZN17EndGameScreenView11setupScreenEv+0x3c>
 800504c:	4b13      	ldr	r3, [pc, #76]	; (800509c <_ZN17EndGameScreenView11setupScreenEv+0x84>)
 800504e:	4a11      	ldr	r2, [pc, #68]	; (8005094 <_ZN17EndGameScreenView11setupScreenEv+0x7c>)
 8005050:	2161      	movs	r1, #97	; 0x61
 8005052:	e7f5      	b.n	8005040 <_ZN17EndGameScreenView11setupScreenEv+0x28>
        return texts->getText(typedTextId);
 8005054:	2106      	movs	r1, #6
 8005056:	6818      	ldr	r0, [r3, #0]
 8005058:	f7ff ff78 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
    	Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T_PLAYER2).getText());
 800505c:	4a10      	ldr	r2, [pc, #64]	; (80050a0 <_ZN17EndGameScreenView11setupScreenEv+0x88>)
 800505e:	4603      	mov	r3, r0
 8005060:	210a      	movs	r1, #10
 8005062:	4628      	mov	r0, r5
 8005064:	f00d fcce 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}

    void Init()
    {
    	model->Init();
 8005068:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800506a:	6898      	ldr	r0, [r3, #8]
}
 800506c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005070:	f000 be9f 	b.w	8005db2 <_ZN5Model4InitEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005074:	2900      	cmp	r1, #0
 8005076:	d0e0      	beq.n	800503a <_ZN17EndGameScreenView11setupScreenEv+0x22>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005078:	8812      	ldrh	r2, [r2, #0]
 800507a:	2a05      	cmp	r2, #5
 800507c:	d9e6      	bls.n	800504c <_ZN17EndGameScreenView11setupScreenEv+0x34>
        return texts->getText(typedTextId);
 800507e:	2105      	movs	r1, #5
 8005080:	e7e9      	b.n	8005056 <_ZN17EndGameScreenView11setupScreenEv+0x3e>
 8005082:	bf00      	nop
 8005084:	20015014 	.word	0x20015014
 8005088:	20015018 	.word	0x20015018
 800508c:	20015020 	.word	0x20015020
 8005090:	0802206c 	.word	0x0802206c
 8005094:	0802216e 	.word	0x0802216e
 8005098:	080220e9 	.word	0x080220e9
 800509c:	08022130 	.word	0x08022130
 80050a0:	080221a6 	.word	0x080221a6

080050a4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80050a4:	4770      	bx	lr

080050a6 <_ZN19FrontendApplicationD0Ev>:
 80050a6:	b510      	push	{r4, lr}
 80050a8:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80050ac:	4604      	mov	r4, r0
 80050ae:	f01b f9bb 	bl	8020428 <_ZdlPvj>
 80050b2:	4620      	mov	r0, r4
 80050b4:	bd10      	pop	{r4, pc}

080050b6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80050b6:	b510      	push	{r4, lr}
 80050b8:	4604      	mov	r4, r0
    {
        model.tick();
 80050ba:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80050be:	f000 fe77 	bl	8005db0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80050c2:	4620      	mov	r0, r4
    }
 80050c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80050c8:	f00a bd28 	b.w	800fb1c <_ZN8touchgfx11Application15handleTickEventEv>

080050cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80050cc:	b510      	push	{r4, lr}
 80050ce:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80050d0:	f7fd fc9a 	bl	8002a08 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80050d4:	4b01      	ldr	r3, [pc, #4]	; (80050dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80050d6:	6023      	str	r3, [r4, #0]
{

}
 80050d8:	4620      	mov	r0, r4
 80050da:	bd10      	pop	{r4, pc}
 80050dc:	08022e4c 	.word	0x08022e4c

080050e0 <_ZN19GameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreenPresenter() {}
 80050e0:	4770      	bx	lr

080050e2 <_ZThn4_N19GameScreenPresenterD1Ev>:
 80050e2:	3804      	subs	r0, #4
 80050e4:	4770      	bx	lr

080050e6 <_ZN19GameScreenPresenter10deactivateEv>:
}

void GameScreenPresenter::activate()
{

}
 80050e6:	4770      	bx	lr

080050e8 <_ZN19GameScreenPresenterD0Ev>:
 80050e8:	b510      	push	{r4, lr}
 80050ea:	2110      	movs	r1, #16
 80050ec:	4604      	mov	r4, r0
 80050ee:	f01b f99b 	bl	8020428 <_ZdlPvj>
 80050f2:	4620      	mov	r0, r4
 80050f4:	bd10      	pop	{r4, pc}

080050f6 <_ZThn4_N19GameScreenPresenterD0Ev>:
 80050f6:	f1a0 0004 	sub.w	r0, r0, #4
 80050fa:	e7f5      	b.n	80050e8 <_ZN19GameScreenPresenterD0Ev>

080050fc <_ZN19GameScreenPresenterC1ER14GameScreenView>:
GameScreenPresenter::GameScreenPresenter(GameScreenView& v)
 80050fc:	b510      	push	{r4, lr}
 80050fe:	2200      	movs	r2, #0
 8005100:	6082      	str	r2, [r0, #8]
    : view(v)
 8005102:	4a04      	ldr	r2, [pc, #16]	; (8005114 <_ZN19GameScreenPresenterC1ER14GameScreenView+0x18>)
 8005104:	60c1      	str	r1, [r0, #12]
 8005106:	f102 0408 	add.w	r4, r2, #8
 800510a:	3220      	adds	r2, #32
 800510c:	6004      	str	r4, [r0, #0]
 800510e:	6042      	str	r2, [r0, #4]
}
 8005110:	bd10      	pop	{r4, pc}
 8005112:	bf00      	nop
 8005114:	08022e98 	.word	0x08022e98

08005118 <_ZN14GameScreenView14tearDownScreenEv>:
	}
}

void GameScreenView::tearDownScreen() {
	GameScreenViewBase::tearDownScreen();
}
 8005118:	4770      	bx	lr
	...

0800511c <_ZN14GameScreenViewD1Ev>:

class GameScreenView : public GameScreenViewBase
{
public:
    GameScreenView();
    virtual ~GameScreenView() {}
 800511c:	4b09      	ldr	r3, [pc, #36]	; (8005144 <_ZN14GameScreenViewD1Ev+0x28>)
 800511e:	b570      	push	{r4, r5, r6, lr}
 8005120:	4604      	mov	r4, r0
 8005122:	6003      	str	r3, [r0, #0]
 8005124:	f242 255c 	movw	r5, #8796	; 0x225c
 8005128:	f241 162c 	movw	r6, #4396	; 0x112c
 800512c:	5963      	ldr	r3, [r4, r5]
 800512e:	1960      	adds	r0, r4, r5
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	3d2c      	subs	r5, #44	; 0x2c
 8005134:	4798      	blx	r3
 8005136:	42b5      	cmp	r5, r6
 8005138:	d1f8      	bne.n	800512c <_ZN14GameScreenViewD1Ev+0x10>
 800513a:	4620      	mov	r0, r4
 800513c:	f7fd ffa2 	bl	8003084 <_ZN18GameScreenViewBaseD1Ev>
 8005140:	4620      	mov	r0, r4
 8005142:	bd70      	pop	{r4, r5, r6, pc}
 8005144:	08022ed0 	.word	0x08022ed0

08005148 <_ZN14GameScreenViewD0Ev>:
 8005148:	b510      	push	{r4, lr}
 800514a:	4604      	mov	r4, r0
 800514c:	f7ff ffe6 	bl	800511c <_ZN14GameScreenViewD1Ev>
 8005150:	4620      	mov	r0, r4
 8005152:	f242 51b8 	movw	r1, #9656	; 0x25b8
 8005156:	f01b f967 	bl	8020428 <_ZdlPvj>
 800515a:	4620      	mov	r0, r4
 800515c:	bd10      	pop	{r4, pc}

0800515e <_ZN19GameScreenPresenter7getDeskEPA10_l>:

	void getDesk(int32_t (*arr)[10]) {
 800515e:	b510      	push	{r4, lr}
 8005160:	460c      	mov	r4, r1
    			arr[i][j] = this->player1Desk[i][j];
 8005162:	6881      	ldr	r1, [r0, #8]
 8005164:	b0e4      	sub	sp, #400	; 0x190
 8005166:	f44f 72c8 	mov.w	r2, #400	; 0x190
 800516a:	f501 714a 	add.w	r1, r1, #808	; 0x328
 800516e:	4668      	mov	r0, sp
 8005170:	f01b fa98 	bl	80206a4 <memcpy>
		int32_t data[10][10];
		model->getPlayer1Desk(data);
		for (int i = 0; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				arr[i][j] = data[i][j];
 8005174:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8005178:	4669      	mov	r1, sp
 800517a:	4620      	mov	r0, r4
 800517c:	f01b fa92 	bl	80206a4 <memcpy>
			}
		}
	}
 8005180:	b064      	add	sp, #400	; 0x190
 8005182:	bd10      	pop	{r4, pc}

08005184 <_ZN19GameScreenPresenter7getHitsEPSt4pairIllE>:
        model->setPlayer1Desk(i, j, status);
    }
	void setHits(std::pair<int32_t, int32_t> bot[100]) {
		model->setHits(bot);
	}
	void getHits(std::pair<int32_t, int32_t>* bot) {
 8005184:	b530      	push	{r4, r5, lr}
 8005186:	4605      	mov	r5, r0
 8005188:	f5ad 7d49 	sub.w	sp, sp, #804	; 0x324
		std::pair<int32_t, int32_t> t[100];
 800518c:	f44f 7248 	mov.w	r2, #800	; 0x320
	void getHits(std::pair<int32_t, int32_t>* bot) {
 8005190:	460c      	mov	r4, r1
		std::pair<int32_t, int32_t> t[100];
 8005192:	4668      	mov	r0, sp
 8005194:	2100      	movs	r1, #0
 8005196:	f01b fa93 	bl	80206c0 <memset>
		for (int32_t i = 0; i < 100; i++) {
 800519a:	68aa      	ldr	r2, [r5, #8]
 800519c:	466b      	mov	r3, sp
 800519e:	f502 7048 	add.w	r0, r2, #800	; 0x320
		model->getHits(t);
 80051a2:	4619      	mov	r1, r3
      operator=(typename conditional<
		__and_<is_copy_assignable<_T1>,
		       is_copy_assignable<_T2>>::value,
		const pair&, const __nonesuch&>::type __p)
      {
	first = __p.first;
 80051a4:	6855      	ldr	r5, [r2, #4]
 80051a6:	600d      	str	r5, [r1, #0]
	second = __p.second;
 80051a8:	f852 5f08 	ldr.w	r5, [r2, #8]!
 80051ac:	604d      	str	r5, [r1, #4]
 80051ae:	4282      	cmp	r2, r0
 80051b0:	f101 0108 	add.w	r1, r1, #8
 80051b4:	d1f6      	bne.n	80051a4 <_ZN19GameScreenPresenter7getHitsEPSt4pairIllE+0x20>
		for (int32_t i = 0; i < 100; i++) {
 80051b6:	2200      	movs	r2, #0
 80051b8:	1d21      	adds	r1, r4, #4
	first = __p.first;
 80051ba:	6818      	ldr	r0, [r3, #0]
 80051bc:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
	second = __p.second;
 80051c0:	6858      	ldr	r0, [r3, #4]
 80051c2:	f841 0032 	str.w	r0, [r1, r2, lsl #3]
 80051c6:	3201      	adds	r2, #1
 80051c8:	2a64      	cmp	r2, #100	; 0x64
 80051ca:	f103 0308 	add.w	r3, r3, #8
 80051ce:	d1f4      	bne.n	80051ba <_ZN19GameScreenPresenter7getHitsEPSt4pairIllE+0x36>
			bot[i] = t[i];
		}
	}
 80051d0:	f50d 7d49 	add.w	sp, sp, #804	; 0x324
 80051d4:	bd30      	pop	{r4, r5, pc}

080051d6 <_ZN5Queue7enQueueESt4pairIllE>:
    bool isEmpty() {
        if (front == -1) return true;
        else return false;
    }

    void enQueue(std::pair<int32_t, int32_t> value) {
 80051d6:	b082      	sub	sp, #8
 80051d8:	ab02      	add	r3, sp, #8
 80051da:	e903 0006 	stmdb	r3, {r1, r2}
        if (front == 0 && rear == MAX_SIZE - 1) {
 80051de:	e9d0 23c8 	ldrd	r2, r3, [r0, #800]	; 0x320
 80051e2:	b91a      	cbnz	r2, 80051ec <_ZN5Queue7enQueueESt4pairIllE+0x16>
 80051e4:	2b63      	cmp	r3, #99	; 0x63
 80051e6:	d106      	bne.n	80051f6 <_ZN5Queue7enQueueESt4pairIllE+0x20>
        if (!isFull()) {
            if (front == -1) front = 0;
            rear++;
            myqueue[rear] = value;
        }
    }
 80051e8:	b002      	add	sp, #8
 80051ea:	4770      	bx	lr
            if (front == -1) front = 0;
 80051ec:	3201      	adds	r2, #1
 80051ee:	bf04      	itt	eq
 80051f0:	2200      	moveq	r2, #0
 80051f2:	f8c0 2320 	streq.w	r2, [r0, #800]	; 0x320
            rear++;
 80051f6:	1c5a      	adds	r2, r3, #1
 80051f8:	f8c0 2324 	str.w	r2, [r0, #804]	; 0x324
      operator=(typename conditional<
 80051fc:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
	first = __p.first;
 8005200:	9b00      	ldr	r3, [sp, #0]
 8005202:	6083      	str	r3, [r0, #8]
	second = __p.second;
 8005204:	9b01      	ldr	r3, [sp, #4]
 8005206:	60c3      	str	r3, [r0, #12]
    }
 8005208:	e7ee      	b.n	80051e8 <_ZN5Queue7enQueueESt4pairIllE+0x12>

0800520a <_ZN14GameScreenView11checkWinnerEPA10_l>:
    void handleTickEvent();
    bool checkOutOfDesk(int32_t x, int32_t y, int16_t countBoat);
    bool checkAvailable(int32_t x, int32_t y, int16_t countBoat);
    void botHit(int32_t [][10]);
    bool checkWinner(int32_t board[][10]) {
    	for (int32_t i = 0; i < 10; i++) {
 800520a:	f101 0324 	add.w	r3, r1, #36	; 0x24
 800520e:	f501 71da 	add.w	r1, r1, #436	; 0x1b4
    		for (int32_t j = 0; j < 10; j++) {
 8005212:	f1a3 0228 	sub.w	r2, r3, #40	; 0x28
    			if (board[i][j] > 0) {
 8005216:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800521a:	2800      	cmp	r0, #0
 800521c:	dc07      	bgt.n	800522e <_ZN14GameScreenView11checkWinnerEPA10_l+0x24>
    		for (int32_t j = 0; j < 10; j++) {
 800521e:	429a      	cmp	r2, r3
 8005220:	d1f9      	bne.n	8005216 <_ZN14GameScreenView11checkWinnerEPA10_l+0xc>
    	for (int32_t i = 0; i < 10; i++) {
 8005222:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8005226:	428b      	cmp	r3, r1
 8005228:	d1f3      	bne.n	8005212 <_ZN14GameScreenView11checkWinnerEPA10_l+0x8>
    				return false;
    			}
    		}
    	}
    	return true;
 800522a:	2001      	movs	r0, #1
 800522c:	4770      	bx	lr
    				return false;
 800522e:	2000      	movs	r0, #0
    }
 8005230:	4770      	bx	lr
	...

08005234 <_ZN14GameScreenViewC1Ev>:
GameScreenView::GameScreenView() {
 8005234:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005238:	4605      	mov	r5, r0
 800523a:	f7fd ff4b 	bl	80030d4 <_ZN18GameScreenViewBaseC1Ev>
 800523e:	4b1c      	ldr	r3, [pc, #112]	; (80052b0 <_ZN14GameScreenViewC1Ev+0x7c>)
 8005240:	602b      	str	r3, [r5, #0]
 8005242:	f205 70dc 	addw	r0, r5, #2012	; 0x7dc
 8005246:	f001 fb07 	bl	8006858 <_ZN5BoardC1Ev>
    Queue() {
 800524a:	f44f 7248 	mov.w	r2, #800	; 0x320
 800524e:	2100      	movs	r1, #0
 8005250:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 8005254:	f01b fa34 	bl	80206c0 <memset>
 8005258:	f505 548a 	add.w	r4, r5, #4416	; 0x1140
        front = -1;
 800525c:	f04f 33ff 	mov.w	r3, #4294967295
 8005260:	f505 560a 	add.w	r6, r5, #8832	; 0x2280
 8005264:	f8c5 3fb4 	str.w	r3, [r5, #4020]	; 0xfb4
        rear = -1;
 8005268:	f8c5 3fb8 	str.w	r3, [r5, #4024]	; 0xfb8
 800526c:	3418      	adds	r4, #24
 800526e:	3608      	adds	r6, #8
 8005270:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8005274:	f504 78dc 	add.w	r8, r4, #440	; 0x1b8
 8005278:	4620      	mov	r0, r4
 800527a:	a901      	add	r1, sp, #4
 800527c:	342c      	adds	r4, #44	; 0x2c
 800527e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8005282:	f007 fea5 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005286:	4544      	cmp	r4, r8
 8005288:	d1f6      	bne.n	8005278 <_ZN14GameScreenViewC1Ev+0x44>
 800528a:	42a6      	cmp	r6, r4
 800528c:	d1f2      	bne.n	8005274 <_ZN14GameScreenViewC1Ev+0x40>
 800528e:	f505 5400 	add.w	r4, r5, #8192	; 0x2000
 8005292:	f44f 7248 	mov.w	r2, #800	; 0x320
 8005296:	2100      	movs	r1, #0
 8005298:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800529c:	f01b fa10 	bl	80206c0 <memset>
	tickCount = 0;
 80052a0:	2300      	movs	r3, #0
}
 80052a2:	4628      	mov	r0, r5
	currentCount = 0;
 80052a4:	e9c4 33a2 	strd	r3, r3, [r4, #648]	; 0x288
}
 80052a8:	b002      	add	sp, #8
 80052aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80052ae:	bf00      	nop
 80052b0:	08022ed0 	.word	0x08022ed0

080052b4 <_ZN14GameScreenView14checkOutOfDeskElls>:
	if(currentCount > 0 && tickCount > currentCount + 15){
		application().gotoOpponentScreenScreenSlideTransitionEast();
	}
	invalidate();
}
bool GameScreenView::checkOutOfDesk(int32_t x, int32_t y, int16_t countBoat) {
 80052b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052b6:	4606      	mov	r6, r0
 80052b8:	460d      	mov	r5, r1
	presenter->getDesk(desk);
 80052ba:	f600 71c8 	addw	r1, r0, #4040	; 0xfc8
 80052be:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
bool GameScreenView::checkOutOfDesk(int32_t x, int32_t y, int16_t countBoat) {
 80052c0:	461f      	mov	r7, r3
 80052c2:	4614      	mov	r4, r2
	presenter->getDesk(desk);
 80052c4:	f7ff ff4b 	bl	800515e <_ZN19GameScreenPresenter7getDeskEPA10_l>
	if (is_vertical) {
 80052c8:	f896 3fbe 	ldrb.w	r3, [r6, #4030]	; 0xfbe
 80052cc:	b12b      	cbz	r3, 80052da <_ZN14GameScreenView14checkOutOfDeskElls+0x26>
		if (x + countBoat > MAX_BOARD) {
 80052ce:	19eb      	adds	r3, r5, r7
 80052d0:	2b09      	cmp	r3, #9
			return false;
		}
	} else {
		if (y + countBoat > MAX_BOARD) {
 80052d2:	bfcc      	ite	gt
 80052d4:	2000      	movgt	r0, #0
 80052d6:	2001      	movle	r0, #1
			return false;
		}
	}
	return true;
}
 80052d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (y + countBoat > MAX_BOARD) {
 80052da:	19e0      	adds	r0, r4, r7
 80052dc:	2809      	cmp	r0, #9
 80052de:	e7f8      	b.n	80052d2 <_ZN14GameScreenView14checkOutOfDeskElls+0x1e>

080052e0 <_ZN14GameScreenView14checkAvailableElls>:

bool GameScreenView::checkAvailable(int32_t x, int32_t y, int16_t countBoat) {
 80052e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80052e2:	4604      	mov	r4, r0
 80052e4:	460f      	mov	r7, r1
	presenter->getDesk(desk);
 80052e6:	f600 71c8 	addw	r1, r0, #4040	; 0xfc8
 80052ea:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
bool GameScreenView::checkAvailable(int32_t x, int32_t y, int16_t countBoat) {
 80052ec:	4615      	mov	r5, r2
 80052ee:	461e      	mov	r6, r3
	presenter->getDesk(desk);
 80052f0:	f7ff ff35 	bl	800515e <_ZN19GameScreenPresenter7getDeskEPA10_l>
	if (!is_vertical) {
 80052f4:	f894 0fbe 	ldrb.w	r0, [r4, #4030]	; 0xfbe
 80052f8:	210a      	movs	r1, #10
 80052fa:	b170      	cbz	r0, 800531a <_ZN14GameScreenView14checkAvailableElls+0x3a>
 80052fc:	fb01 5107 	mla	r1, r1, r7, r5
 8005300:	eb04 0481 	add.w	r4, r4, r1, lsl #2
			if (desk[x][y + i] > 0) {
				return false;
			}
		}
	} else {
		for (int i = 0; i <= countBoat; i++) {
 8005304:	2300      	movs	r3, #0
 8005306:	429e      	cmp	r6, r3
 8005308:	db17      	blt.n	800533a <_ZN14GameScreenView14checkAvailableElls+0x5a>
			if (desk[x + i][y] > 0) {
 800530a:	f8d4 2fc8 	ldr.w	r2, [r4, #4040]	; 0xfc8
 800530e:	2a00      	cmp	r2, #0
 8005310:	f104 0428 	add.w	r4, r4, #40	; 0x28
 8005314:	dc12      	bgt.n	800533c <_ZN14GameScreenView14checkAvailableElls+0x5c>
		for (int i = 0; i <= countBoat; i++) {
 8005316:	3301      	adds	r3, #1
 8005318:	e7f5      	b.n	8005306 <_ZN14GameScreenView14checkAvailableElls+0x26>
 800531a:	f205 32f2 	addw	r2, r5, #1010	; 0x3f2
 800531e:	fb01 2507 	mla	r5, r1, r7, r2
 8005322:	eb04 0485 	add.w	r4, r4, r5, lsl #2
		for (int i = 0; i <= countBoat; i++) {
 8005326:	4603      	mov	r3, r0
 8005328:	429e      	cmp	r6, r3
 800532a:	db05      	blt.n	8005338 <_ZN14GameScreenView14checkAvailableElls+0x58>
			if (desk[x][y + i] > 0) {
 800532c:	f854 2b04 	ldr.w	r2, [r4], #4
 8005330:	2a00      	cmp	r2, #0
 8005332:	dc02      	bgt.n	800533a <_ZN14GameScreenView14checkAvailableElls+0x5a>
		for (int i = 0; i <= countBoat; i++) {
 8005334:	3301      	adds	r3, #1
 8005336:	e7f7      	b.n	8005328 <_ZN14GameScreenView14checkAvailableElls+0x48>
				return false;
			}
		}
	}
	return true;
 8005338:	2001      	movs	r0, #1
}
 800533a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				return false;
 800533c:	2000      	movs	r0, #0
 800533e:	e7fc      	b.n	800533a <_ZN14GameScreenView14checkAvailableElls+0x5a>

08005340 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv>:
	   size_t __n, size_t __m, size_t __r,
	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
	   _UIntType __f>
    void
    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 8005340:	b530      	push	{r4, r5, lr}
      for (size_t __k = 0; __k < (__n - __m); ++__k)
        {
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
			   | (_M_x[__k + 1] & __lower_mask));
	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
		       ^ ((__y & 0x01) ? __a : 0));
 8005342:	4d25      	ldr	r5, [pc, #148]	; (80053d8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0x98>)
 8005344:	f500 7463 	add.w	r4, r0, #908	; 0x38c
    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 8005348:	4602      	mov	r2, r0
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 800534a:	6811      	ldr	r1, [r2, #0]
			   | (_M_x[__k + 1] & __lower_mask));
 800534c:	f852 3f04 	ldr.w	r3, [r2, #4]!
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005350:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
			   | (_M_x[__k + 1] & __lower_mask));
 8005354:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005358:	430b      	orrs	r3, r1
	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 800535a:	f8d2 1630 	ldr.w	r1, [r2, #1584]	; 0x630
 800535e:	ea81 0153 	eor.w	r1, r1, r3, lsr #1
		       ^ ((__y & 0x01) ? __a : 0));
 8005362:	f013 0301 	ands.w	r3, r3, #1
 8005366:	bf18      	it	ne
 8005368:	462b      	movne	r3, r5
 800536a:	404b      	eors	r3, r1
      for (size_t __k = 0; __k < (__n - __m); ++__k)
 800536c:	4294      	cmp	r4, r2
	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 800536e:	f842 3c04 	str.w	r3, [r2, #-4]
      for (size_t __k = 0; __k < (__n - __m); ++__k)
 8005372:	d1ea      	bne.n	800534a <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0xa>
      for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
	{
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
			   | (_M_x[__k + 1] & __lower_mask));
	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
		       ^ ((__y & 0x01) ? __a : 0));
 8005374:	4d18      	ldr	r5, [pc, #96]	; (80053d8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0x98>)
 8005376:	1f02      	subs	r2, r0, #4
 8005378:	f200 642c 	addw	r4, r0, #1580	; 0x62c
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 800537c:	f8d2 3390 	ldr.w	r3, [r2, #912]	; 0x390
			   | (_M_x[__k + 1] & __lower_mask));
 8005380:	f8d2 1394 	ldr.w	r1, [r2, #916]	; 0x394
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005384:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
			   | (_M_x[__k + 1] & __lower_mask));
 8005388:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 800538c:	430b      	orrs	r3, r1
	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 800538e:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8005392:	ea81 0153 	eor.w	r1, r1, r3, lsr #1
		       ^ ((__y & 0x01) ? __a : 0));
 8005396:	f013 0301 	ands.w	r3, r3, #1
 800539a:	bf18      	it	ne
 800539c:	462b      	movne	r3, r5
 800539e:	404b      	eors	r3, r1
      for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 80053a0:	4294      	cmp	r4, r2
	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 80053a2:	f8c2 338c 	str.w	r3, [r2, #908]	; 0x38c
      for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 80053a6:	d1e9      	bne.n	800537c <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0x3c>
	}

      _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 80053a8:	f8d0 39bc 	ldr.w	r3, [r0, #2492]	; 0x9bc
		       | (_M_x[0] & __lower_mask));
 80053ac:	6802      	ldr	r2, [r0, #0]
      _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
		       ^ ((__y & 0x01) ? __a : 0));
 80053ae:	490a      	ldr	r1, [pc, #40]	; (80053d8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0x98>)
		       | (_M_x[0] & __lower_mask));
 80053b0:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
      _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 80053b4:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80053b8:	4313      	orrs	r3, r2
      _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 80053ba:	f8d0 2630 	ldr.w	r2, [r0, #1584]	; 0x630
 80053be:	ea82 0253 	eor.w	r2, r2, r3, lsr #1
		       ^ ((__y & 0x01) ? __a : 0));
 80053c2:	f013 0301 	ands.w	r3, r3, #1
 80053c6:	bf18      	it	ne
 80053c8:	460b      	movne	r3, r1
 80053ca:	4053      	eors	r3, r2
      _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 80053cc:	f8c0 39bc 	str.w	r3, [r0, #2492]	; 0x9bc
      _M_p = 0;
 80053d0:	2300      	movs	r3, #0
 80053d2:	f8c0 39c0 	str.w	r3, [r0, #2496]	; 0x9c0
    }
 80053d6:	bd30      	pop	{r4, r5, pc}
 80053d8:	9908b0df 	.word	0x9908b0df

080053dc <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>:
    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
			    __s, __b, __t, __c, __l, __f>::
    operator()()
    {
      // Reload the vector - cost is O(n) amortized over n calls.
      if (_M_p >= state_size)
 80053dc:	f8d0 39c0 	ldr.w	r3, [r0, #2496]	; 0x9c0
 80053e0:	f5b3 7f1c 	cmp.w	r3, #624	; 0x270
    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 80053e4:	b510      	push	{r4, lr}
 80053e6:	4604      	mov	r4, r0
      if (_M_p >= state_size)
 80053e8:	d301      	bcc.n	80053ee <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv+0x12>
	_M_gen_rand();
 80053ea:	f7ff ffa9 	bl	8005340 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv>

      // Calculate o(x(i)).
      result_type __z = _M_x[_M_p++];
 80053ee:	f8d4 39c0 	ldr.w	r3, [r4, #2496]	; 0x9c0
      __z ^= (__z >> __u) & __d;
      __z ^= (__z << __s) & __b;
 80053f2:	4809      	ldr	r0, [pc, #36]	; (8005418 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv+0x3c>)
      result_type __z = _M_x[_M_p++];
 80053f4:	1c5a      	adds	r2, r3, #1
 80053f6:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 80053fa:	f8c4 29c0 	str.w	r2, [r4, #2496]	; 0x9c0
      __z ^= (__z >> __u) & __d;
 80053fe:	ea83 23d3 	eor.w	r3, r3, r3, lsr #11
      __z ^= (__z << __s) & __b;
 8005402:	ea00 10c3 	and.w	r0, r0, r3, lsl #7
 8005406:	4043      	eors	r3, r0
      __z ^= (__z << __t) & __c;
 8005408:	4804      	ldr	r0, [pc, #16]	; (800541c <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv+0x40>)
 800540a:	ea00 30c3 	and.w	r0, r0, r3, lsl #15
 800540e:	4058      	eors	r0, r3
      __z ^= (__z >> __l);

      return __z;
    }
 8005410:	ea80 4090 	eor.w	r0, r0, r0, lsr #18
 8005414:	bd10      	pop	{r4, pc}
 8005416:	bf00      	nop
 8005418:	9d2c5680 	.word	0x9d2c5680
 800541c:	efc60000 	.word	0xefc60000

08005420 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0>:
    };

  template<typename _IntType>
    template<typename _UniformRandomNumberGenerator>
      typename uniform_int_distribution<_IntType>::result_type
      uniform_int_distribution<_IntType>::
 8005420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	  __uctype;

	const __uctype __urngmin = __urng.min();
	const __uctype __urngmax = __urng.max();
	const __uctype __urngrange = __urngmax - __urngmin;
	const __uctype __urange
 8005422:	e9d1 2300 	ldrd	r2, r3, [r1]
 8005426:	1a9b      	subs	r3, r3, r2
	  = __uctype(__param.b()) - __uctype(__param.a());

	__uctype __ret;

	if (__urngrange > __urange)
 8005428:	1c5a      	adds	r2, r3, #1
      uniform_int_distribution<_IntType>::
 800542a:	4607      	mov	r7, r0
 800542c:	460d      	mov	r5, r1
	if (__urngrange > __urange)
 800542e:	d010      	beq.n	8005452 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0+0x32>
	  {
	    // downscaling
	    const __uctype __uerange = __urange + 1; // __urange can be zero
 8005430:	3301      	adds	r3, #1
	    const __uctype __scaling = __urngrange / __uerange;
 8005432:	f04f 36ff 	mov.w	r6, #4294967295
 8005436:	fbb6 f6f3 	udiv	r6, r6, r3
	    const __uctype __past = __uerange * __scaling;
 800543a:	fb06 f403 	mul.w	r4, r6, r3
	    do
	      __ret = __uctype(__urng()) - __urngmin;
 800543e:	4638      	mov	r0, r7
 8005440:	f7ff ffcc 	bl	80053dc <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
	    while (__ret >= __past);
 8005444:	4284      	cmp	r4, r0
 8005446:	d9fa      	bls.n	800543e <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0+0x1e>
	    __ret /= __scaling;
 8005448:	fbb0 f0f6 	udiv	r0, r0, r6
	    while (__ret > __urange || __ret < __tmp);
	  }
	else
	  __ret = __uctype(__urng()) - __urngmin;

	return __ret + __param.a();
 800544c:	682b      	ldr	r3, [r5, #0]
      }
 800544e:	4418      	add	r0, r3
 8005450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	  __ret = __uctype(__urng()) - __urngmin;
 8005452:	f7ff ffc3 	bl	80053dc <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
 8005456:	e7f9      	b.n	800544c <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0+0x2c>

08005458 <_ZN14GameScreenView6botHitEPA10_l>:

void GameScreenView::botHit(int32_t board[][10]) {
 8005458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800545c:	ed2d 8b02 	vpush	{d8}
 8005460:	f5ad 5d9d 	sub.w	sp, sp, #5024	; 0x13a0
 8005464:	b085      	sub	sp, #20
	    _M_capacity(__dnew);
	  }

	// Check for out_of_range and length_error exceptions.
	__try
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 8005466:	4a60      	ldr	r2, [pc, #384]	; (80055e8 <_ZN14GameScreenView6botHitEPA10_l+0x190>)
#if __cplusplus < 201103L
	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
	: allocator_type(__a), _M_p(__dat) { }
#else
	_Alloc_hider(pointer __dat, const _Alloc& __a)
	: allocator_type(__a), _M_p(__dat) { }
 8005468:	f60d 17ec 	addw	r7, sp, #2540	; 0x9ec
 800546c:	4605      	mov	r5, r0
 800546e:	4689      	mov	r9, r1
 8005470:	f60d 10f4 	addw	r0, sp, #2548	; 0x9f4
 8005474:	1fd1      	subs	r1, r2, #7
 8005476:	6038      	str	r0, [r7, #0]
 8005478:	f01b f84f 	bl	802051a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
      _M_data(pointer __p)
      { _M_dataplus._M_p = __p; }

      void
      _M_length(size_type __length)
      { _M_string_length = __length; }
 800547c:	2307      	movs	r3, #7
 800547e:	607b      	str	r3, [r7, #4]
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { __c1 = __c2; }
 8005480:	683b      	ldr	r3, [r7, #0]
 8005482:	2200      	movs	r2, #0
 8005484:	71da      	strb	r2, [r3, #7]
    /** The type of the generated random value. */
    typedef unsigned int result_type;

    // constructors, destructors and member functions

    random_device() { _M_init("default"); }
 8005486:	4639      	mov	r1, r7
 8005488:	a80a      	add	r0, sp, #40	; 0x28
 800548a:	f01b f823 	bl	80204d4 <_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>

      /**
       *  @brief  Destroy the string instance.
       */
      ~basic_string()
      { _M_dispose(); }
 800548e:	4638      	mov	r0, r7
 8005490:	f01b f82f 	bl	80204f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
#endif
    }

    result_type
    operator()()
    { return this->_M_getval(); }
 8005494:	a80a      	add	r0, sp, #40	; 0x28
 8005496:	f01b f81f 	bl	80204d8 <_ZNSt13random_device9_M_getvalEv>
      _M_x[0] = __detail::__mod<_UIntType,
 800549a:	6038      	str	r0, [r7, #0]
	  __x *= __f;
 800549c:	4853      	ldr	r0, [pc, #332]	; (80055ec <_ZN14GameScreenView6botHitEPA10_l+0x194>)
 800549e:	4639      	mov	r1, r7
      for (size_t __i = 1; __i < state_size; ++__i)
 80054a0:	2201      	movs	r2, #1
	  _UIntType __x = _M_x[__i - 1];
 80054a2:	680b      	ldr	r3, [r1, #0]
	  __x ^= __x >> (__w - 2);
 80054a4:	ea83 7393 	eor.w	r3, r3, r3, lsr #30
	  __x += __detail::__mod<_UIntType, __n>(__i);
 80054a8:	fb00 2303 	mla	r3, r0, r3, r2
      for (size_t __i = 1; __i < state_size; ++__i)
 80054ac:	3201      	adds	r2, #1
 80054ae:	f5b2 7f1c 	cmp.w	r2, #624	; 0x270
	  _M_x[__i] = __detail::__mod<_UIntType,
 80054b2:	f841 3f04 	str.w	r3, [r1, #4]!
      for (size_t __i = 1; __i < state_size; ++__i)
 80054b6:	d1f4      	bne.n	80054a2 <_ZN14GameScreenView6botHitEPA10_l+0x4a>
	: _M_a(__a), _M_b(__b)
 80054b8:	466b      	mov	r3, sp
      _M_p = state_size;
 80054ba:	f8c7 29c0 	str.w	r2, [r7, #2496]	; 0x9c0
 80054be:	2100      	movs	r1, #0
 80054c0:	2209      	movs	r2, #9
 80054c2:	e9c3 1200 	strd	r1, r2, [r3]
	std::random_device rd;
	std::mt19937 gen(rd());
	std::uniform_int_distribution<> disIndex(0, 9);
	int32_t x, y;
	int32_t index = 0;
 80054c6:	f505 580a 	add.w	r8, r5, #8832	; 0x2280
        { return this->operator()(__urng, _M_param); }
 80054ca:	ee08 3a10 	vmov	s16, r3
 80054ce:	f108 0810 	add.w	r8, r8, #16
 80054d2:	f10d 0a10 	add.w	sl, sp, #16
	while (!checkWinner(board)) {
 80054d6:	4649      	mov	r1, r9
 80054d8:	4628      	mov	r0, r5
 80054da:	f7ff fe96 	bl	800520a <_ZN14GameScreenView11checkWinnerEPA10_l>
 80054de:	2800      	cmp	r0, #0
 80054e0:	d17b      	bne.n	80055da <_ZN14GameScreenView6botHitEPA10_l+0x182>
        if (front == -1) return true;
 80054e2:	f8d5 3fb4 	ldr.w	r3, [r5, #4020]	; 0xfb4
 80054e6:	1c5a      	adds	r2, r3, #1
 80054e8:	d114      	bne.n	8005514 <_ZN14GameScreenView6botHitEPA10_l+0xbc>
		if (myq.isEmpty()) {
			do {
				x = disIndex(gen);
				y = disIndex(gen);
			} while (board[x][y] == -1);
 80054ea:	f04f 0b28 	mov.w	fp, #40	; 0x28
 80054ee:	ee18 1a10 	vmov	r1, s16
 80054f2:	4638      	mov	r0, r7
 80054f4:	f7ff ff94 	bl	8005420 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0>
 80054f8:	ee18 1a10 	vmov	r1, s16
 80054fc:	4606      	mov	r6, r0
 80054fe:	4638      	mov	r0, r7
 8005500:	f7ff ff8e 	bl	8005420 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0>
 8005504:	fb0b 9206 	mla	r2, fp, r6, r9
 8005508:	4604      	mov	r4, r0
 800550a:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 800550e:	3201      	adds	r2, #1
 8005510:	d0ed      	beq.n	80054ee <_ZN14GameScreenView6botHitEPA10_l+0x96>
 8005512:	e013      	b.n	800553c <_ZN14GameScreenView6botHitEPA10_l+0xe4>
      operator=(typename conditional<
 8005514:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
	first = __p.first;
 8005518:	f8d2 6c94 	ldr.w	r6, [r2, #3220]	; 0xc94
	second = __p.second;
 800551c:	f8d2 4c98 	ldr.w	r4, [r2, #3224]	; 0xc98
    std::pair<int32_t, int32_t> deQueue() {
    	std::pair<int32_t, int32_t> value;
        if (!isEmpty()) {
            value = myqueue[front]; if (front >= rear) {      //only one element in queue
 8005520:	f8d5 2fb8 	ldr.w	r2, [r5, #4024]	; 0xfb8
 8005524:	4293      	cmp	r3, r2
                front = -1;
 8005526:	bfa9      	itett	ge
 8005528:	f04f 33ff 	movge.w	r3, #4294967295
                rear = -1;
            }
            else {
                front++;
 800552c:	3301      	addlt	r3, #1
                front = -1;
 800552e:	f8c5 3fb4 	strge.w	r3, [r5, #4020]	; 0xfb4
                rear = -1;
 8005532:	f8c5 3fb8 	strge.w	r3, [r5, #4024]	; 0xfb8
                front++;
 8005536:	bfb8      	it	lt
 8005538:	f8c5 3fb4 	strlt.w	r3, [r5, #4020]	; 0xfb4
		else {
			std::pair<int, int> top = myq.deQueue();
			x = top.first;
			y = top.second;
		}
		if (board[x][y] > 0) {
 800553c:	2328      	movs	r3, #40	; 0x28
 800553e:	fb03 9b06 	mla	fp, r3, r6, r9
 8005542:	f85b 2024 	ldr.w	r2, [fp, r4, lsl #2]
 8005546:	2a00      	cmp	r2, #0
 8005548:	dd3e      	ble.n	80055c8 <_ZN14GameScreenView6botHitEPA10_l+0x170>
			if (x + 1 < 10) {
 800554a:	2e08      	cmp	r6, #8
 800554c:	dc0d      	bgt.n	800556a <_ZN14GameScreenView6botHitEPA10_l+0x112>
				if (board[x + 1][y] > 0) {
 800554e:	eb0b 0284 	add.w	r2, fp, r4, lsl #2
 8005552:	6a92      	ldr	r2, [r2, #40]	; 0x28
 8005554:	2a00      	cmp	r2, #0
 8005556:	dd08      	ble.n	800556a <_ZN14GameScreenView6botHitEPA10_l+0x112>
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8005558:	aa02      	add	r2, sp, #8
					myq.enQueue(std::make_pair(x + 1, y));
 800555a:	1c71      	adds	r1, r6, #1
 800555c:	e9c2 1400 	strd	r1, r4, [r2]
 8005560:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 8005564:	ca06      	ldmia	r2, {r1, r2}
 8005566:	f7ff fe36 	bl	80051d6 <_ZN5Queue7enQueueESt4pairIllE>
				}
			}
			if (y + 1 < 10) {
 800556a:	2c08      	cmp	r4, #8
 800556c:	dc0c      	bgt.n	8005588 <_ZN14GameScreenView6botHitEPA10_l+0x130>
				if (board[x][y + 1] > 0) {
 800556e:	1c62      	adds	r2, r4, #1
 8005570:	f85b 1022 	ldr.w	r1, [fp, r2, lsl #2]
 8005574:	2900      	cmp	r1, #0
 8005576:	dd07      	ble.n	8005588 <_ZN14GameScreenView6botHitEPA10_l+0x130>
 8005578:	e9ca 6200 	strd	r6, r2, [sl]
					myq.enQueue(std::make_pair(x, y + 1));
 800557c:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 8005580:	e89a 0006 	ldmia.w	sl, {r1, r2}
 8005584:	f7ff fe27 	bl	80051d6 <_ZN5Queue7enQueueESt4pairIllE>
				}
			}
			if (x - 1 >= 0) {
 8005588:	2e00      	cmp	r6, #0
 800558a:	dd0e      	ble.n	80055aa <_ZN14GameScreenView6botHitEPA10_l+0x152>
				if (board[x - 1][y] > 0) {
 800558c:	eb0b 0284 	add.w	r2, fp, r4, lsl #2
 8005590:	f852 2c28 	ldr.w	r2, [r2, #-40]
 8005594:	2a00      	cmp	r2, #0
 8005596:	dd08      	ble.n	80055aa <_ZN14GameScreenView6botHitEPA10_l+0x152>
 8005598:	aa06      	add	r2, sp, #24
					myq.enQueue(std::make_pair(x - 1, y));
 800559a:	1e71      	subs	r1, r6, #1
 800559c:	e9c2 1400 	strd	r1, r4, [r2]
 80055a0:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 80055a4:	ca06      	ldmia	r2, {r1, r2}
 80055a6:	f7ff fe16 	bl	80051d6 <_ZN5Queue7enQueueESt4pairIllE>
				}
			}
			if (y - 1 >= 0) {
 80055aa:	2c00      	cmp	r4, #0
 80055ac:	dd0c      	ble.n	80055c8 <_ZN14GameScreenView6botHitEPA10_l+0x170>
				if (board[x][y - 1] > 0) {
 80055ae:	1e61      	subs	r1, r4, #1
 80055b0:	f85b 2021 	ldr.w	r2, [fp, r1, lsl #2]
 80055b4:	2a00      	cmp	r2, #0
 80055b6:	dd07      	ble.n	80055c8 <_ZN14GameScreenView6botHitEPA10_l+0x170>
 80055b8:	aa08      	add	r2, sp, #32
 80055ba:	e9c2 6100 	strd	r6, r1, [r2]
					myq.enQueue(std::make_pair(x, y - 1));
 80055be:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 80055c2:	ca06      	ldmia	r2, {r1, r2}
 80055c4:	f7ff fe07 	bl	80051d6 <_ZN5Queue7enQueueESt4pairIllE>
				}
			}
		}
		board[x][y] = -1;
 80055c8:	f04f 33ff 	mov.w	r3, #4294967295
 80055cc:	f84b 3024 	str.w	r3, [fp, r4, lsl #2]
		pair&&, __nonesuch&&>::type __p)
      noexcept(__and_<is_nothrow_move_assignable<_T1>,
		      is_nothrow_move_assignable<_T2>>::value)
      {
	first = std::forward<first_type>(__p.first);
	second = std::forward<second_type>(__p.second);
 80055d0:	e9c8 6400 	strd	r6, r4, [r8]
		hits[index] = std::make_pair(x, y);
		index++;
 80055d4:	f108 0808 	add.w	r8, r8, #8
	while (!checkWinner(board)) {
 80055d8:	e77d      	b.n	80054d6 <_ZN14GameScreenView6botHitEPA10_l+0x7e>
	}

}
 80055da:	f50d 5d9d 	add.w	sp, sp, #5024	; 0x13a0
 80055de:	b005      	add	sp, #20
 80055e0:	ecbd 8b02 	vpop	{d8}
 80055e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055e8:	08022ec7 	.word	0x08022ec7
 80055ec:	6c078965 	.word	0x6c078965

080055f0 <_ZN14GameScreenView15handleTickEventEv>:
void GameScreenView::handleTickEvent() {
 80055f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	tickCount++;
 80055f4:	f500 5600 	add.w	r6, r0, #8192	; 0x2000
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 80055f8:	f8df a1b8 	ldr.w	sl, [pc, #440]	; 80057b4 <_ZN14GameScreenView15handleTickEventEv+0x1c4>
	tickCount++;
 80055fc:	f8d6 3288 	ldr.w	r3, [r6, #648]	; 0x288
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 8005600:	f8df 91b4 	ldr.w	r9, [pc, #436]	; 80057b8 <_ZN14GameScreenView15handleTickEventEv+0x1c8>
void GameScreenView::handleTickEvent() {
 8005604:	b08b      	sub	sp, #44	; 0x2c
	tickCount++;
 8005606:	3301      	adds	r3, #1
void GameScreenView::handleTickEvent() {
 8005608:	4604      	mov	r4, r0
	tickCount++;
 800560a:	f8c6 3288 	str.w	r3, [r6, #648]	; 0x288
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 800560e:	f8da 0000 	ldr.w	r0, [sl]
	uint8_t res = 0;
 8005612:	f04f 0b00 	mov.w	fp, #0
 8005616:	f88d b023 	strb.w	fp, [sp, #35]	; 0x23
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 800561a:	f004 fad6 	bl	8009bca <osMessageQueueGetCount>
 800561e:	4680      	mov	r8, r0
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 8005620:	f8d9 0000 	ldr.w	r0, [r9]
 8005624:	f004 fad1 	bl	8009bca <osMessageQueueGetCount>
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8005628:	4b56      	ldr	r3, [pc, #344]	; (8005784 <_ZN14GameScreenView15handleTickEventEv+0x194>)
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 800562a:	9003      	str	r0, [sp, #12]
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 800562c:	6818      	ldr	r0, [r3, #0]
 800562e:	f004 facc 	bl	8009bca <osMessageQueueGetCount>
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8005632:	4b55      	ldr	r3, [pc, #340]	; (8005788 <_ZN14GameScreenView15handleTickEventEv+0x198>)
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8005634:	9004      	str	r0, [sp, #16]
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8005636:	6818      	ldr	r0, [r3, #0]
 8005638:	f004 fac7 	bl	8009bca <osMessageQueueGetCount>
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 800563c:	4b53      	ldr	r3, [pc, #332]	; (800578c <_ZN14GameScreenView15handleTickEventEv+0x19c>)
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 800563e:	9005      	str	r0, [sp, #20]
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 8005640:	6818      	ldr	r0, [r3, #0]
 8005642:	f004 fac2 	bl	8009bca <osMessageQueueGetCount>
	uint32_t count6 = osMessageQueueGetCount(Queue6Handle);
 8005646:	4b52      	ldr	r3, [pc, #328]	; (8005790 <_ZN14GameScreenView15handleTickEventEv+0x1a0>)
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 8005648:	9006      	str	r0, [sp, #24]
	int selected = gameBoard.getSelected();
 800564a:	f204 77dc 	addw	r7, r4, #2012	; 0x7dc
	uint32_t count6 = osMessageQueueGetCount(Queue6Handle);
 800564e:	6818      	ldr	r0, [r3, #0]
 8005650:	f004 fabb 	bl	8009bca <osMessageQueueGetCount>
	int selected = gameBoard.getSelected();
 8005654:	4638      	mov	r0, r7
 8005656:	f001 f91a 	bl	800688e <_ZN5Board11getSelectedEv>
	if (gameMode == 0) {
 800565a:	f894 37d0 	ldrb.w	r3, [r4, #2000]	; 0x7d0
	int selected = gameBoard.getSelected();
 800565e:	4605      	mov	r5, r0
	if (gameMode == 0) {
 8005660:	2b00      	cmp	r3, #0
 8005662:	f040 824b 	bne.w	8005afc <_ZN14GameScreenView15handleTickEventEv+0x50c>
		switch (selected)
 8005666:	1e83      	subs	r3, r0, #2
 8005668:	2b03      	cmp	r3, #3
 800566a:	d821      	bhi.n	80056b0 <_ZN14GameScreenView15handleTickEventEv+0xc0>
 800566c:	e8df f003 	tbb	[pc, r3]
 8005670:	6c605402 	.word	0x6c605402
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005674:	4b47      	ldr	r3, [pc, #284]	; (8005794 <_ZN14GameScreenView15handleTickEventEv+0x1a4>)
 8005676:	681b      	ldr	r3, [r3, #0]
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_DESTROYER).getText());
 8005678:	f204 7b6c 	addw	fp, r4, #1900	; 0x76c
 800567c:	b92b      	cbnz	r3, 800568a <_ZN14GameScreenView15handleTickEventEv+0x9a>
 800567e:	4b46      	ldr	r3, [pc, #280]	; (8005798 <_ZN14GameScreenView15handleTickEventEv+0x1a8>)
 8005680:	4a46      	ldr	r2, [pc, #280]	; (800579c <_ZN14GameScreenView15handleTickEventEv+0x1ac>)
 8005682:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005684:	4846      	ldr	r0, [pc, #280]	; (80057a0 <_ZN14GameScreenView15handleTickEventEv+0x1b0>)
 8005686:	f01a ff7f 	bl	8020588 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800568a:	4b46      	ldr	r3, [pc, #280]	; (80057a4 <_ZN14GameScreenView15handleTickEventEv+0x1b4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800568c:	881b      	ldrh	r3, [r3, #0]
 800568e:	2b0f      	cmp	r3, #15
 8005690:	d803      	bhi.n	800569a <_ZN14GameScreenView15handleTickEventEv+0xaa>
 8005692:	4b45      	ldr	r3, [pc, #276]	; (80057a8 <_ZN14GameScreenView15handleTickEventEv+0x1b8>)
 8005694:	4a41      	ldr	r2, [pc, #260]	; (800579c <_ZN14GameScreenView15handleTickEventEv+0x1ac>)
 8005696:	2161      	movs	r1, #97	; 0x61
 8005698:	e7f4      	b.n	8005684 <_ZN14GameScreenView15handleTickEventEv+0x94>
        return texts->getText(typedTextId);
 800569a:	210f      	movs	r1, #15
 800569c:	4b43      	ldr	r3, [pc, #268]	; (80057ac <_ZN14GameScreenView15handleTickEventEv+0x1bc>)
 800569e:	6818      	ldr	r0, [r3, #0]
 80056a0:	f7ff fc54 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_AIRCRAFT_CARRIER).getText());
 80056a4:	4a42      	ldr	r2, [pc, #264]	; (80057b0 <_ZN14GameScreenView15handleTickEventEv+0x1c0>)
 80056a6:	4603      	mov	r3, r0
 80056a8:	2132      	movs	r1, #50	; 0x32
 80056aa:	4658      	mov	r0, fp
 80056ac:	f00d f9aa 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		if (count1 > 0) {
 80056b0:	f1b8 0f00 	cmp.w	r8, #0
 80056b4:	f000 80b7 	beq.w	8005826 <_ZN14GameScreenView15handleTickEventEv+0x236>
			osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 80056b8:	f04f 33ff 	mov.w	r3, #4294967295
 80056bc:	f8da 0000 	ldr.w	r0, [sl]
 80056c0:	2200      	movs	r2, #0
 80056c2:	f10d 0123 	add.w	r1, sp, #35	; 0x23
 80056c6:	f004 fa51 	bl	8009b6c <osMessageQueueGet>
			if (res == 'S') {
 80056ca:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80056ce:	2b53      	cmp	r3, #83	; 0x53
 80056d0:	f040 808d 	bne.w	80057ee <_ZN14GameScreenView15handleTickEventEv+0x1fe>
				if (checkAvailable(y, x, selected)) {
 80056d4:	f8d4 27d4 	ldr.w	r2, [r4, #2004]	; 0x7d4
 80056d8:	f8d4 17d8 	ldr.w	r1, [r4, #2008]	; 0x7d8
 80056dc:	b22b      	sxth	r3, r5
 80056de:	4620      	mov	r0, r4
 80056e0:	f7ff fdfe 	bl	80052e0 <_ZN14GameScreenView14checkAvailableElls>
 80056e4:	2800      	cmp	r0, #0
 80056e6:	f000 8082 	beq.w	80057ee <_ZN14GameScreenView15handleTickEventEv+0x1fe>
					if (is_vertical) {
 80056ea:	f894 3fbe 	ldrb.w	r3, [r4, #4030]	; 0xfbe
 80056ee:	2b00      	cmp	r3, #0
 80056f0:	d036      	beq.n	8005760 <_ZN14GameScreenView15handleTickEventEv+0x170>
						for (int i = 0; i <= selected - 1; i++) {
 80056f2:	2200      	movs	r2, #0
    	player1Desk[i][j] = status;
 80056f4:	200a      	movs	r0, #10
 80056f6:	42aa      	cmp	r2, r5
 80056f8:	da60      	bge.n	80057bc <_ZN14GameScreenView15handleTickEventEv+0x1cc>
        model->setPlayer1Desk(i, j, status);
 80056fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80056fc:	6899      	ldr	r1, [r3, #8]
 80056fe:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
 8005702:	eb02 0c03 	add.w	ip, r2, r3
 8005706:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
 800570a:	fb00 330c 	mla	r3, r0, ip, r3
 800570e:	33ca      	adds	r3, #202	; 0xca
 8005710:	3201      	adds	r2, #1
 8005712:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 8005716:	e7ee      	b.n	80056f6 <_ZN14GameScreenView15handleTickEventEv+0x106>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005718:	4b1e      	ldr	r3, [pc, #120]	; (8005794 <_ZN14GameScreenView15handleTickEventEv+0x1a4>)
 800571a:	681b      	ldr	r3, [r3, #0]
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_CRUISER).getText());
 800571c:	f204 7b6c 	addw	fp, r4, #1900	; 0x76c
 8005720:	2b00      	cmp	r3, #0
 8005722:	d0ac      	beq.n	800567e <_ZN14GameScreenView15handleTickEventEv+0x8e>
        return typedTextId < numberOfTypedTexts;
 8005724:	4b1f      	ldr	r3, [pc, #124]	; (80057a4 <_ZN14GameScreenView15handleTickEventEv+0x1b4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005726:	881b      	ldrh	r3, [r3, #0]
 8005728:	2b0e      	cmp	r3, #14
 800572a:	d9b2      	bls.n	8005692 <_ZN14GameScreenView15handleTickEventEv+0xa2>
        return texts->getText(typedTextId);
 800572c:	210e      	movs	r1, #14
 800572e:	e7b5      	b.n	800569c <_ZN14GameScreenView15handleTickEventEv+0xac>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005730:	4b18      	ldr	r3, [pc, #96]	; (8005794 <_ZN14GameScreenView15handleTickEventEv+0x1a4>)
 8005732:	681b      	ldr	r3, [r3, #0]
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_BATTLESHIP).getText());
 8005734:	f204 7b6c 	addw	fp, r4, #1900	; 0x76c
 8005738:	2b00      	cmp	r3, #0
 800573a:	d0a0      	beq.n	800567e <_ZN14GameScreenView15handleTickEventEv+0x8e>
        return typedTextId < numberOfTypedTexts;
 800573c:	4b19      	ldr	r3, [pc, #100]	; (80057a4 <_ZN14GameScreenView15handleTickEventEv+0x1b4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800573e:	881b      	ldrh	r3, [r3, #0]
 8005740:	2b0d      	cmp	r3, #13
 8005742:	d9a6      	bls.n	8005692 <_ZN14GameScreenView15handleTickEventEv+0xa2>
        return texts->getText(typedTextId);
 8005744:	210d      	movs	r1, #13
 8005746:	e7a9      	b.n	800569c <_ZN14GameScreenView15handleTickEventEv+0xac>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005748:	4b12      	ldr	r3, [pc, #72]	; (8005794 <_ZN14GameScreenView15handleTickEventEv+0x1a4>)
 800574a:	681b      	ldr	r3, [r3, #0]
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_AIRCRAFT_CARRIER).getText());
 800574c:	f204 7b6c 	addw	fp, r4, #1900	; 0x76c
 8005750:	2b00      	cmp	r3, #0
 8005752:	d094      	beq.n	800567e <_ZN14GameScreenView15handleTickEventEv+0x8e>
        return typedTextId < numberOfTypedTexts;
 8005754:	4b13      	ldr	r3, [pc, #76]	; (80057a4 <_ZN14GameScreenView15handleTickEventEv+0x1b4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005756:	881b      	ldrh	r3, [r3, #0]
 8005758:	2b0c      	cmp	r3, #12
 800575a:	d99a      	bls.n	8005692 <_ZN14GameScreenView15handleTickEventEv+0xa2>
        return texts->getText(typedTextId);
 800575c:	210c      	movs	r1, #12
 800575e:	e79d      	b.n	800569c <_ZN14GameScreenView15handleTickEventEv+0xac>
 8005760:	f04f 0c0a 	mov.w	ip, #10
						for (int i = 0; i <= selected - 1; i++) {
 8005764:	42ab      	cmp	r3, r5
 8005766:	da29      	bge.n	80057bc <_ZN14GameScreenView15handleTickEventEv+0x1cc>
 8005768:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800576a:	f8d4 07d8 	ldr.w	r0, [r4, #2008]	; 0x7d8
 800576e:	6891      	ldr	r1, [r2, #8]
 8005770:	f8d4 27d4 	ldr.w	r2, [r4, #2004]	; 0x7d4
 8005774:	fb0c 2200 	mla	r2, ip, r0, r2
 8005778:	441a      	add	r2, r3
 800577a:	32ca      	adds	r2, #202	; 0xca
 800577c:	3301      	adds	r3, #1
 800577e:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
 8005782:	e7ef      	b.n	8005764 <_ZN14GameScreenView15handleTickEventEv+0x174>
 8005784:	20003e44 	.word	0x20003e44
 8005788:	20003e48 	.word	0x20003e48
 800578c:	20003e4c 	.word	0x20003e4c
 8005790:	20003e50 	.word	0x20003e50
 8005794:	20015014 	.word	0x20015014
 8005798:	0802206c 	.word	0x0802206c
 800579c:	0802216e 	.word	0x0802216e
 80057a0:	080220e9 	.word	0x080220e9
 80057a4:	20015018 	.word	0x20015018
 80057a8:	08022130 	.word	0x08022130
 80057ac:	20015020 	.word	0x20015020
 80057b0:	080221a6 	.word	0x080221a6
 80057b4:	20003e3c 	.word	0x20003e3c
 80057b8:	20003e40 	.word	0x20003e40
					if (selected == 2) {
 80057bc:	2d02      	cmp	r5, #2
 80057be:	f040 80e9 	bne.w	8005994 <_ZN14GameScreenView15handleTickEventEv+0x3a4>
						x = 0;
 80057c2:	2300      	movs	r3, #0
						boat3.setXY(getXFromIndex(x), getYFromIndex(y));
 80057c4:	f504 7877 	add.w	r8, r4, #988	; 0x3dc
						x = 0;
 80057c8:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
						y = 0;
 80057cc:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
						boat3.setXY(getXFromIndex(x), getYFromIndex(y));
 80057d0:	2105      	movs	r1, #5
 80057d2:	2253      	movs	r2, #83	; 0x53
 80057d4:	4640      	mov	r0, r8
 80057d6:	f7fc fdef 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
						currentBoatR = (touchgfx::Container*)&boat3_r;
 80057da:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
						currentBoat = (touchgfx::Container*)&boat3;
 80057de:	f8c4 8fc0 	str.w	r8, [r4, #4032]	; 0xfc0
						currentBoatR = (touchgfx::Container*)&boat3_r;
 80057e2:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
						gameBoard.setSelected(selected + 1);
 80057e6:	2103      	movs	r1, #3
						gameBoard.setSelected(selected + 1);
 80057e8:	4638      	mov	r0, r7
 80057ea:	f001 f84d 	bl	8006888 <_ZN5Board11setSelectedEl>
			if (!is_vertical) {
 80057ee:	f894 2fbe 	ldrb.w	r2, [r4, #4030]	; 0xfbe
				if (res == 'L') {
 80057f2:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
			if (!is_vertical) {
 80057f6:	2a00      	cmp	r2, #0
 80057f8:	f040 811a 	bne.w	8005a30 <_ZN14GameScreenView15handleTickEventEv+0x440>
				if (res == 'L') {
 80057fc:	2b4c      	cmp	r3, #76	; 0x4c
 80057fe:	d112      	bne.n	8005826 <_ZN14GameScreenView15handleTickEventEv+0x236>
					x -= 1;
 8005800:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
					currentBoat->setX(getXFromIndex(x));
 8005804:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
					if (x < MIN_BOARD) {
 8005808:	3b01      	subs	r3, #1
						x = MAX_BOARD - selected + 1;
 800580a:	bf48      	it	mi
 800580c:	f1c5 030a 	rsbmi	r3, r5, #10
 8005810:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
	return (5 + x * WIDTH_SQUARE);
 8005814:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 8005818:	2317      	movs	r3, #23
 800581a:	4359      	muls	r1, r3
					currentBoatR->setX(getXFromIndex(x));
 800581c:	6803      	ldr	r3, [r0, #0]
	return (5 + x * WIDTH_SQUARE);
 800581e:	3105      	adds	r1, #5
					currentBoatR->setX(getXFromIndex(x));
 8005820:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005822:	b209      	sxth	r1, r1
 8005824:	4798      	blx	r3
		if (count2 > 0) {
 8005826:	9b03      	ldr	r3, [sp, #12]
 8005828:	b323      	cbz	r3, 8005874 <_ZN14GameScreenView15handleTickEventEv+0x284>
			osMessageQueueGet(Queue2Handle, &res, NULL, osWaitForever);
 800582a:	f04f 33ff 	mov.w	r3, #4294967295
 800582e:	f10d 0123 	add.w	r1, sp, #35	; 0x23
 8005832:	f8d9 0000 	ldr.w	r0, [r9]
 8005836:	2200      	movs	r2, #0
 8005838:	f004 f998 	bl	8009b6c <osMessageQueueGet>
			if (!is_vertical) {
 800583c:	f894 1fbe 	ldrb.w	r1, [r4, #4030]	; 0xfbe
 8005840:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8005844:	2900      	cmp	r1, #0
 8005846:	f040 8100 	bne.w	8005a4a <_ZN14GameScreenView15handleTickEventEv+0x45a>
				if (res == 'R') {
 800584a:	2b52      	cmp	r3, #82	; 0x52
 800584c:	d112      	bne.n	8005874 <_ZN14GameScreenView15handleTickEventEv+0x284>
					x += 1;
 800584e:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
					currentBoat->setX(getXFromIndex(x));
 8005852:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
					x += 1;
 8005856:	3301      	adds	r3, #1
					if (x > MAX_BOARD - selected + 1) {
 8005858:	f1c5 020a 	rsb	r2, r5, #10
					x += 1;
 800585c:	4293      	cmp	r3, r2
 800585e:	bfd8      	it	le
 8005860:	4619      	movle	r1, r3
 8005862:	f8c4 17d4 	str.w	r1, [r4, #2004]	; 0x7d4
	return (5 + x * WIDTH_SQUARE);
 8005866:	2317      	movs	r3, #23
 8005868:	4359      	muls	r1, r3
					currentBoatR->setX(getXFromIndex(x));
 800586a:	6803      	ldr	r3, [r0, #0]
	return (5 + x * WIDTH_SQUARE);
 800586c:	3105      	adds	r1, #5
					currentBoatR->setX(getXFromIndex(x));
 800586e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005870:	b209      	sxth	r1, r1
 8005872:	4798      	blx	r3
		if (count3 > 0) {
 8005874:	9b04      	ldr	r3, [sp, #16]
 8005876:	b31b      	cbz	r3, 80058c0 <_ZN14GameScreenView15handleTickEventEv+0x2d0>
			osMessageQueueGet(Queue3Handle, &res, NULL, osWaitForever);
 8005878:	489d      	ldr	r0, [pc, #628]	; (8005af0 <_ZN14GameScreenView15handleTickEventEv+0x500>)
 800587a:	f04f 33ff 	mov.w	r3, #4294967295
 800587e:	2200      	movs	r2, #0
 8005880:	6800      	ldr	r0, [r0, #0]
 8005882:	f10d 0123 	add.w	r1, sp, #35	; 0x23
 8005886:	f004 f971 	bl	8009b6c <osMessageQueueGet>
			if (!is_vertical) {
 800588a:	f894 2fbe 	ldrb.w	r2, [r4, #4030]	; 0xfbe
 800588e:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8005892:	2a00      	cmp	r2, #0
 8005894:	f040 80e9 	bne.w	8005a6a <_ZN14GameScreenView15handleTickEventEv+0x47a>
				if (res == 'U') {
 8005898:	2b55      	cmp	r3, #85	; 0x55
 800589a:	d111      	bne.n	80058c0 <_ZN14GameScreenView15handleTickEventEv+0x2d0>
					y -= 1;
 800589c:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
					currentBoat->setY(getYFromIndex(y));
 80058a0:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
					if (y < MIN_BOARD) {
 80058a4:	3b01      	subs	r3, #1
						y = MAX_BOARD;
 80058a6:	bf48      	it	mi
 80058a8:	2309      	movmi	r3, #9
 80058aa:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
	return (83 + y * WIDTH_SQUARE);
 80058ae:	f8d4 17d8 	ldr.w	r1, [r4, #2008]	; 0x7d8
 80058b2:	2317      	movs	r3, #23
 80058b4:	4359      	muls	r1, r3
					currentBoatR->setY(getYFromIndex(y));
 80058b6:	6803      	ldr	r3, [r0, #0]
	return (83 + y * WIDTH_SQUARE);
 80058b8:	3153      	adds	r1, #83	; 0x53
					currentBoatR->setY(getYFromIndex(y));
 80058ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80058bc:	b209      	sxth	r1, r1
 80058be:	4798      	blx	r3
		if (count4 > 0) {
 80058c0:	9b05      	ldr	r3, [sp, #20]
 80058c2:	b313      	cbz	r3, 800590a <_ZN14GameScreenView15handleTickEventEv+0x31a>
			osMessageQueueGet(Queue4Handle, &res, NULL, osWaitForever);
 80058c4:	488b      	ldr	r0, [pc, #556]	; (8005af4 <_ZN14GameScreenView15handleTickEventEv+0x504>)
 80058c6:	f04f 33ff 	mov.w	r3, #4294967295
 80058ca:	f10d 0123 	add.w	r1, sp, #35	; 0x23
 80058ce:	6800      	ldr	r0, [r0, #0]
 80058d0:	2200      	movs	r2, #0
 80058d2:	f004 f94b 	bl	8009b6c <osMessageQueueGet>
			if (!is_vertical) {
 80058d6:	f894 1fbe 	ldrb.w	r1, [r4, #4030]	; 0xfbe
 80058da:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80058de:	2900      	cmp	r1, #0
 80058e0:	f040 80d1 	bne.w	8005a86 <_ZN14GameScreenView15handleTickEventEv+0x496>
				if (res == 'D') {
 80058e4:	2b44      	cmp	r3, #68	; 0x44
 80058e6:	d110      	bne.n	800590a <_ZN14GameScreenView15handleTickEventEv+0x31a>
					y += 1;
 80058e8:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
					currentBoat->setY(getYFromIndex(y));
 80058ec:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
					y += 1;
 80058f0:	3301      	adds	r3, #1
 80058f2:	2b09      	cmp	r3, #9
 80058f4:	bfd8      	it	le
 80058f6:	4619      	movle	r1, r3
 80058f8:	f8c4 17d8 	str.w	r1, [r4, #2008]	; 0x7d8
	return (83 + y * WIDTH_SQUARE);
 80058fc:	2317      	movs	r3, #23
 80058fe:	4359      	muls	r1, r3
					currentBoatR->setY(getYFromIndex(y));
 8005900:	6803      	ldr	r3, [r0, #0]
	return (83 + y * WIDTH_SQUARE);
 8005902:	3153      	adds	r1, #83	; 0x53
					currentBoatR->setY(getYFromIndex(y));
 8005904:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005906:	b209      	sxth	r1, r1
 8005908:	4798      	blx	r3
		if (count5 > 0) {
 800590a:	9b06      	ldr	r3, [sp, #24]
 800590c:	b383      	cbz	r3, 8005970 <_ZN14GameScreenView15handleTickEventEv+0x380>
			osMessageQueueGet(Queue5Handle, &res, NULL, osWaitForever);
 800590e:	487a      	ldr	r0, [pc, #488]	; (8005af8 <_ZN14GameScreenView15handleTickEventEv+0x508>)
 8005910:	f04f 33ff 	mov.w	r3, #4294967295
 8005914:	2200      	movs	r2, #0
 8005916:	6800      	ldr	r0, [r0, #0]
 8005918:	f10d 0123 	add.w	r1, sp, #35	; 0x23
 800591c:	f004 f926 	bl	8009b6c <osMessageQueueGet>
			if (!is_vertical) {
 8005920:	f894 2fbe 	ldrb.w	r2, [r4, #4030]	; 0xfbe
 8005924:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8005928:	2a00      	cmp	r2, #0
 800592a:	f040 80be 	bne.w	8005aaa <_ZN14GameScreenView15handleTickEventEv+0x4ba>
				if (res == 'A') {
 800592e:	2b41      	cmp	r3, #65	; 0x41
 8005930:	d11e      	bne.n	8005970 <_ZN14GameScreenView15handleTickEventEv+0x380>
					if (checkOutOfDesk(x, y, selected - 1)) {
 8005932:	1e6b      	subs	r3, r5, #1
 8005934:	f8d4 27d8 	ldr.w	r2, [r4, #2008]	; 0x7d8
 8005938:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 800593c:	b21b      	sxth	r3, r3
 800593e:	4620      	mov	r0, r4
 8005940:	f7ff fcb8 	bl	80052b4 <_ZN14GameScreenView14checkOutOfDeskElls>
 8005944:	b1a0      	cbz	r0, 8005970 <_ZN14GameScreenView15handleTickEventEv+0x380>
						int16_t x = currentBoat->getX();
 8005946:	f8d4 3fc0 	ldr.w	r3, [r4, #4032]	; 0xfc0
						currentBoatR->setXY(x, y);
 800594a:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
 800594e:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8005952:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8005956:	f7fc fd2f 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
						currentBoat->setXY(OUT_OF_BOARD_X, OUT_OF_BOARD_Y);
 800595a:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
 800595e:	f06f 0243 	mvn.w	r2, #67	; 0x43
 8005962:	f06f 011f 	mvn.w	r1, #31
 8005966:	f7fc fd27 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
						is_vertical = true;
 800596a:	2301      	movs	r3, #1
						is_vertical = false;
 800596c:	f884 3fbe 	strb.w	r3, [r4, #4030]	; 0xfbe
	if(currentCount > 0 && tickCount > currentCount + 15){
 8005970:	f8d6 328c 	ldr.w	r3, [r6, #652]	; 0x28c
 8005974:	b143      	cbz	r3, 8005988 <_ZN14GameScreenView15handleTickEventEv+0x398>
 8005976:	f8d6 2288 	ldr.w	r2, [r6, #648]	; 0x288
 800597a:	330f      	adds	r3, #15
 800597c:	429a      	cmp	r2, r3
 800597e:	d903      	bls.n	8005988 <_ZN14GameScreenView15handleTickEventEv+0x398>
    virtual ~GameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005980:	f00a f84a 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoOpponentScreenScreenSlideTransitionEast();
 8005984:	f7fd f8a0 	bl	8002ac8 <_ZN23FrontendApplicationBase43gotoOpponentScreenScreenSlideTransitionEastEv>
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8005988:	1d20      	adds	r0, r4, #4
 800598a:	f00b f8bb 	bl	8010b04 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800598e:	b00b      	add	sp, #44	; 0x2c
 8005990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
					} else if (selected == 3) {
 8005994:	2d03      	cmp	r5, #3
 8005996:	d113      	bne.n	80059c0 <_ZN14GameScreenView15handleTickEventEv+0x3d0>
						x = 0;
 8005998:	2300      	movs	r3, #0
						boat4.setXY(getXFromIndex(x), getYFromIndex(y));
 800599a:	f204 488c 	addw	r8, r4, #1164	; 0x48c
						x = 0;
 800599e:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
						y = 0;
 80059a2:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
						boat4.setXY(getXFromIndex(x), getYFromIndex(y));
 80059a6:	2105      	movs	r1, #5
 80059a8:	2253      	movs	r2, #83	; 0x53
 80059aa:	4640      	mov	r0, r8
 80059ac:	f7fc fd04 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
						currentBoatR = (touchgfx::Container*)&boat4_r;
 80059b0:	f504 73ba 	add.w	r3, r4, #372	; 0x174
						currentBoat = (touchgfx::Container*)&boat4;
 80059b4:	f8c4 8fc0 	str.w	r8, [r4, #4032]	; 0xfc0
						currentBoatR = (touchgfx::Container*)&boat4_r;
 80059b8:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
						gameBoard.setSelected(selected + 1);
 80059bc:	2104      	movs	r1, #4
 80059be:	e713      	b.n	80057e8 <_ZN14GameScreenView15handleTickEventEv+0x1f8>
					} else if (selected == 4) {
 80059c0:	2d04      	cmp	r5, #4
 80059c2:	d113      	bne.n	80059ec <_ZN14GameScreenView15handleTickEventEv+0x3fc>
						x = 0;
 80059c4:	2300      	movs	r3, #0
						boat5.setXY(getXFromIndex(x), getYFromIndex(y));
 80059c6:	f504 68ad 	add.w	r8, r4, #1384	; 0x568
						x = 0;
 80059ca:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
						y = 0;
 80059ce:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
						boat5.setXY(getXFromIndex(x), getYFromIndex(y));
 80059d2:	2105      	movs	r1, #5
 80059d4:	2253      	movs	r2, #83	; 0x53
 80059d6:	4640      	mov	r0, r8
 80059d8:	f7fc fcee 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
						currentBoatR = (touchgfx::Container*)&boat5_r;
 80059dc:	f504 7314 	add.w	r3, r4, #592	; 0x250
						currentBoat = (touchgfx::Container*)&boat5;
 80059e0:	f8c4 8fc0 	str.w	r8, [r4, #4032]	; 0xfc0
						currentBoatR = (touchgfx::Container*)&boat5_r;
 80059e4:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
						gameBoard.setSelected(selected + 1);
 80059e8:	2105      	movs	r1, #5
 80059ea:	e6fd      	b.n	80057e8 <_ZN14GameScreenView15handleTickEventEv+0x1f8>
					} else if (selected == 5) {
 80059ec:	2d05      	cmp	r5, #5
 80059ee:	f47f aefe 	bne.w	80057ee <_ZN14GameScreenView15handleTickEventEv+0x1fe>
						presenter->getDesk(desk);
 80059f2:	f604 71c8 	addw	r1, r4, #4040	; 0xfc8
 80059f6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80059f8:	9107      	str	r1, [sp, #28]
 80059fa:	f7ff fbb0 	bl	800515e <_ZN19GameScreenPresenter7getDeskEPA10_l>
						botHit(desk);
 80059fe:	9907      	ldr	r1, [sp, #28]
 8005a00:	4620      	mov	r0, r4
 8005a02:	f7ff fd29 	bl	8005458 <_ZN14GameScreenView6botHitEPA10_l>
		model->setHits(bot);
 8005a06:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005a08:	689b      	ldr	r3, [r3, #8]
 8005a0a:	f504 520a 	add.w	r2, r4, #8832	; 0x2280
 8005a0e:	3214      	adds	r2, #20
 8005a10:	f503 7148 	add.w	r1, r3, #800	; 0x320
	first = __p.first;
 8005a14:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8005a18:	6058      	str	r0, [r3, #4]
	second = __p.second;
 8005a1a:	f852 0b08 	ldr.w	r0, [r2], #8
 8005a1e:	f843 0f08 	str.w	r0, [r3, #8]!
		for (int32_t i = 0; i < 100; i++) {
 8005a22:	4299      	cmp	r1, r3
 8005a24:	d1f6      	bne.n	8005a14 <_ZN14GameScreenView15handleTickEventEv+0x424>
 8005a26:	f009 fff7 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
						application().gotoOpponentScreenScreenSlideTransitionEast();
 8005a2a:	f7fd f84d 	bl	8002ac8 <_ZN23FrontendApplicationBase43gotoOpponentScreenScreenSlideTransitionEastEv>
 8005a2e:	e6de      	b.n	80057ee <_ZN14GameScreenView15handleTickEventEv+0x1fe>
				if (res == 'L') {
 8005a30:	2b4c      	cmp	r3, #76	; 0x4c
 8005a32:	f47f aef8 	bne.w	8005826 <_ZN14GameScreenView15handleTickEventEv+0x236>
					x -= 1;
 8005a36:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
					currentBoatR->setX(getXFromIndex(x));
 8005a3a:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
					if (x < MIN_BOARD) {
 8005a3e:	3b01      	subs	r3, #1
						x = MAX_BOARD;
 8005a40:	bf48      	it	mi
 8005a42:	2309      	movmi	r3, #9
 8005a44:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
					currentBoatR->setX(getXFromIndex(x));
 8005a48:	e6e4      	b.n	8005814 <_ZN14GameScreenView15handleTickEventEv+0x224>
				if (res == 'R') {
 8005a4a:	2b52      	cmp	r3, #82	; 0x52
 8005a4c:	f47f af12 	bne.w	8005874 <_ZN14GameScreenView15handleTickEventEv+0x284>
					x += 1;
 8005a50:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
					currentBoatR->setX(getXFromIndex(x));
 8005a54:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
					x += 1;
 8005a58:	3301      	adds	r3, #1
					if (x > MAX_BOARD) {
 8005a5a:	2b09      	cmp	r3, #9
						x = MIN_BOARD;
 8005a5c:	bfc8      	it	gt
 8005a5e:	2300      	movgt	r3, #0
 8005a60:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
	return (5 + x * WIDTH_SQUARE);
 8005a64:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 8005a68:	e6fd      	b.n	8005866 <_ZN14GameScreenView15handleTickEventEv+0x276>
				if (res == 'U') {
 8005a6a:	2b55      	cmp	r3, #85	; 0x55
 8005a6c:	f47f af28 	bne.w	80058c0 <_ZN14GameScreenView15handleTickEventEv+0x2d0>
					y -= 1;
 8005a70:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
					currentBoatR->setY(getYFromIndex(y));
 8005a74:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
					if (y < MIN_BOARD) {
 8005a78:	3b01      	subs	r3, #1
						y = MAX_BOARD - selected + 1;
 8005a7a:	bf48      	it	mi
 8005a7c:	f1c5 030a 	rsbmi	r3, r5, #10
 8005a80:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
					currentBoatR->setY(getYFromIndex(y));
 8005a84:	e713      	b.n	80058ae <_ZN14GameScreenView15handleTickEventEv+0x2be>
				if (res == 'D') {
 8005a86:	2b44      	cmp	r3, #68	; 0x44
 8005a88:	f47f af3f 	bne.w	800590a <_ZN14GameScreenView15handleTickEventEv+0x31a>
					y += 1;
 8005a8c:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
					currentBoatR->setY(getYFromIndex(y));
 8005a90:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
					y += 1;
 8005a94:	3301      	adds	r3, #1
					if (y > MAX_BOARD - selected + 1) {
 8005a96:	f1c5 020a 	rsb	r2, r5, #10
 8005a9a:	4293      	cmp	r3, r2
						y = MIN_BOARD;
 8005a9c:	bfc8      	it	gt
 8005a9e:	2300      	movgt	r3, #0
 8005aa0:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
	return (83 + y * WIDTH_SQUARE);
 8005aa4:	f8d4 17d8 	ldr.w	r1, [r4, #2008]	; 0x7d8
 8005aa8:	e728      	b.n	80058fc <_ZN14GameScreenView15handleTickEventEv+0x30c>
				if (res == 'A') {
 8005aaa:	2b41      	cmp	r3, #65	; 0x41
 8005aac:	f47f af60 	bne.w	8005970 <_ZN14GameScreenView15handleTickEventEv+0x380>
					if (checkOutOfDesk(x, y, selected - 1)) {
 8005ab0:	1e6b      	subs	r3, r5, #1
 8005ab2:	f8d4 27d8 	ldr.w	r2, [r4, #2008]	; 0x7d8
 8005ab6:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 8005aba:	b21b      	sxth	r3, r3
 8005abc:	4620      	mov	r0, r4
 8005abe:	f7ff fbf9 	bl	80052b4 <_ZN14GameScreenView14checkOutOfDeskElls>
 8005ac2:	2800      	cmp	r0, #0
 8005ac4:	f43f af54 	beq.w	8005970 <_ZN14GameScreenView15handleTickEventEv+0x380>
						int16_t x = currentBoatR->getX();
 8005ac8:	f8d4 3fc4 	ldr.w	r3, [r4, #4036]	; 0xfc4
						currentBoat->setXY(x, y);
 8005acc:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
 8005ad0:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8005ad4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8005ad8:	f7fc fc6e 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
						currentBoatR->setXY(OUT_OF_BOARD_X, OUT_OF_BOARD_Y);
 8005adc:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
 8005ae0:	f06f 0243 	mvn.w	r2, #67	; 0x43
 8005ae4:	f06f 011f 	mvn.w	r1, #31
 8005ae8:	f7fc fc66 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
						is_vertical = false;
 8005aec:	2300      	movs	r3, #0
 8005aee:	e73d      	b.n	800596c <_ZN14GameScreenView15handleTickEventEv+0x37c>
 8005af0:	20003e44 	.word	0x20003e44
 8005af4:	20003e48 	.word	0x20003e48
 8005af8:	20003e4c 	.word	0x20003e4c
	else if (gameMode == 1) {
 8005afc:	2b01      	cmp	r3, #1
 8005afe:	f47f af37 	bne.w	8005970 <_ZN14GameScreenView15handleTickEventEv+0x380>
		if(!isMultiPlayer)
 8005b02:	f896 35b4 	ldrb.w	r3, [r6, #1460]	; 0x5b4
 8005b06:	2b00      	cmp	r3, #0
 8005b08:	d161      	bne.n	8005bce <_ZN14GameScreenView15handleTickEventEv+0x5de>
      operator=(typename conditional<
 8005b0a:	f8d6 35b0 	ldr.w	r3, [r6, #1456]	; 0x5b0
 8005b0e:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
	first = __p.first;
 8005b12:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
	second = __p.second;
 8005b16:	e9d3 57a4 	ldrd	r5, r7, [r3, #656]	; 0x290
		if(desk[x][y] > 0){
 8005b1a:	230a      	movs	r3, #10
 8005b1c:	fb03 7305 	mla	r3, r3, r5, r7
 8005b20:	f203 32f2 	addw	r2, r3, #1010	; 0x3f2
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8005b24:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
		if(desk[x][y] > 0){
 8005b28:	f854 1022 	ldr.w	r1, [r4, r2, lsl #2]
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8005b2c:	222c      	movs	r2, #44	; 0x2c
 8005b2e:	437a      	muls	r2, r7
 8005b30:	fb00 2205 	mla	r2, r0, r5, r2
 8005b34:	f241 1058 	movw	r0, #4440	; 0x1158
 8005b38:	eb02 0800 	add.w	r8, r2, r0
		if(desk[x][y] > 0){
 8005b3c:	2900      	cmp	r1, #0
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8005b3e:	44a0      	add	r8, r4
		if(desk[x][y] > 0){
 8005b40:	dd48      	ble.n	8005bd4 <_ZN14GameScreenView15handleTickEventEv+0x5e4>
			presenter->setDesk(x, y, Board::HIT_VALUE);
 8005b42:	6be0      	ldr	r0, [r4, #60]	; 0x3c
    	player1Desk[i][j] = status;
 8005b44:	33ca      	adds	r3, #202	; 0xca
 8005b46:	6882      	ldr	r2, [r0, #8]
 8005b48:	f04f 31ff 	mov.w	r1, #4294967295
 8005b4c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			presenter->getDesk(desk);
 8005b50:	f604 71c8 	addw	r1, r4, #4040	; 0xfc8
 8005b54:	9103      	str	r1, [sp, #12]
 8005b56:	f7ff fb02 	bl	800515e <_ZN19GameScreenPresenter7getDeskEPA10_l>
			if(GameScreenView::checkWinner(desk))
 8005b5a:	9903      	ldr	r1, [sp, #12]
 8005b5c:	4620      	mov	r0, r4
 8005b5e:	f7ff fb54 	bl	800520a <_ZN14GameScreenView11checkWinnerEPA10_l>
 8005b62:	b140      	cbz	r0, 8005b76 <_ZN14GameScreenView15handleTickEventEv+0x586>
	}
	bool getIsMultiPlayer() {
		return model->getIsMultiPlayer();
	}
	void setWinner(int32_t winner) {
		model->setWinner(winner);
 8005b64:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		this->winner = winner;
 8005b66:	689b      	ldr	r3, [r3, #8]
 8005b68:	2202      	movs	r2, #2
 8005b6a:	f8c3 2648 	str.w	r2, [r3, #1608]	; 0x648
 8005b6e:	f009 ff53 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
				application().gotoEndGameScreenScreenSlideTransitionEast();
 8005b72:	f7fc ffb9 	bl	8002ae8 <_ZN23FrontendApplicationBase42gotoEndGameScreenScreenSlideTransitionEastEv>
	return (83 + y * WIDTH_SQUARE);
 8005b76:	2317      	movs	r3, #23
 8005b78:	fb03 f205 	mul.w	r2, r3, r5
	return (5 + x * WIDTH_SQUARE);
 8005b7c:	fb03 f107 	mul.w	r1, r3, r7
	return (83 + y * WIDTH_SQUARE);
 8005b80:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 8005b82:	3105      	adds	r1, #5
		boxes[x][y].setPosition(getXFromIndex(y), getYFromIndex(x), 23, 23);
 8005b84:	b212      	sxth	r2, r2
 8005b86:	9300      	str	r3, [sp, #0]
 8005b88:	b209      	sxth	r1, r1
 8005b8a:	4640      	mov	r0, r8
 8005b8c:	f7fc fc21 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
				touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005b90:	f44f 73dc 	mov.w	r3, #440	; 0x1b8
 8005b94:	435d      	muls	r5, r3
 8005b96:	232c      	movs	r3, #44	; 0x2c
 8005b98:	fb03 5507 	mla	r5, r3, r7, r5
 8005b9c:	4425      	add	r5, r4
 8005b9e:	f241 1358 	movw	r3, #4440	; 0x1158
		boxes[x][y].setScalingAlgorithm(
 8005ba2:	2100      	movs	r1, #0
				touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005ba4:	58eb      	ldr	r3, [r5, r3]
		boxes[x][y].setScalingAlgorithm(
 8005ba6:	4640      	mov	r0, r8
 8005ba8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005baa:	4798      	blx	r3
		model->setIndexHit(index);
 8005bac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		this->indexHit = index;
 8005bae:	689a      	ldr	r2, [r3, #8]
		presenter->setIndexHit(indexHit + 1);
 8005bb0:	f8d6 35b0 	ldr.w	r3, [r6, #1456]	; 0x5b0
 8005bb4:	3301      	adds	r3, #1
 8005bb6:	f8c2 3324 	str.w	r3, [r2, #804]	; 0x324
		if(currentCount == 0){
 8005bba:	f8d6 328c 	ldr.w	r3, [r6, #652]	; 0x28c
 8005bbe:	2b00      	cmp	r3, #0
 8005bc0:	f47f aed6 	bne.w	8005970 <_ZN14GameScreenView15handleTickEventEv+0x380>
			currentCount = tickCount;
 8005bc4:	f8d6 3288 	ldr.w	r3, [r6, #648]	; 0x288
 8005bc8:	f8c6 328c 	str.w	r3, [r6, #652]	; 0x28c
 8005bcc:	e6d0      	b.n	8005970 <_ZN14GameScreenView15handleTickEventEv+0x380>
		std::pair<int32_t, int32_t> hit;
 8005bce:	465f      	mov	r7, fp
 8005bd0:	465d      	mov	r5, fp
 8005bd2:	e7a2      	b.n	8005b1a <_ZN14GameScreenView15handleTickEventEv+0x52a>
		} else if(desk[x][y] == 0){
 8005bd4:	d10b      	bne.n	8005bee <_ZN14GameScreenView15handleTickEventEv+0x5fe>
			presenter->setDesk(x, y, Board::MISS_VALUE);
 8005bd6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
    	player1Desk[i][j] = status;
 8005bd8:	33ca      	adds	r3, #202	; 0xca
 8005bda:	6882      	ldr	r2, [r0, #8]
 8005bdc:	f06f 0101 	mvn.w	r1, #1
 8005be0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			presenter->getDesk(desk);
 8005be4:	f604 71c8 	addw	r1, r4, #4040	; 0xfc8
 8005be8:	f7ff fab9 	bl	800515e <_ZN19GameScreenPresenter7getDeskEPA10_l>
 8005bec:	e7c3      	b.n	8005b76 <_ZN14GameScreenView15handleTickEventEv+0x586>
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8005bee:	4422      	add	r2, r4
		} else if(desk[x][y] == Board::HIT_VALUE){
 8005bf0:	3101      	adds	r1, #1
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8005bf2:	5813      	ldr	r3, [r2, r0]
 8005bf4:	bf0c      	ite	eq
 8005bf6:	2207      	moveq	r2, #7
 8005bf8:	2208      	movne	r2, #8
 8005bfa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005bfc:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_MISS_BLUE_ID));
 8005c00:	a909      	add	r1, sp, #36	; 0x24
 8005c02:	4640      	mov	r0, r8
 8005c04:	4798      	blx	r3
 8005c06:	e7b6      	b.n	8005b76 <_ZN14GameScreenView15handleTickEventEv+0x586>

08005c08 <_ZN14GameScreenView11setupScreenEv>:
void GameScreenView::setupScreen() {
 8005c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c0c:	4604      	mov	r4, r0
 8005c0e:	b085      	sub	sp, #20
	GameScreenViewBase::setupScreen();
 8005c10:	f7fd fa39 	bl	8003086 <_ZN18GameScreenViewBase11setupScreenEv>
	currentBoat = (touchgfx::Container*) &boat2;
 8005c14:	f504 63ce 	add.w	r3, r4, #1648	; 0x670
	is_vertical = false;
 8005c18:	2500      	movs	r5, #0
	currentBoat = (touchgfx::Container*) &boat2;
 8005c1a:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
	currentBoatR = (touchgfx::Container*) &boat2_r;
 8005c1e:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8005c22:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
	gameBoard.Init();
 8005c26:	f204 70dc 	addw	r0, r4, #2012	; 0x7dc
	is_vertical = false;
 8005c2a:	f884 5fbe 	strb.w	r5, [r4, #4030]	; 0xfbe
	gameBoard.Init();
 8005c2e:	f000 fe27 	bl	8006880 <_ZN5Board4InitEv>
	presenter->getDesk(desk);
 8005c32:	6be0      	ldr	r0, [r4, #60]	; 0x3c
	x = 0;
 8005c34:	f8c4 57d4 	str.w	r5, [r4, #2004]	; 0x7d4
	presenter->getDesk(desk);
 8005c38:	f604 71c8 	addw	r1, r4, #4040	; 0xfc8
	y = 0;
 8005c3c:	f8c4 57d8 	str.w	r5, [r4, #2008]	; 0x7d8
	presenter->getDesk(desk);
 8005c40:	f7ff fa8d 	bl	800515e <_ZN19GameScreenPresenter7getDeskEPA10_l>
	gameMode = presenter->getGameMode();
 8005c44:	6be0      	ldr	r0, [r4, #60]	; 0x3c
		return model->getGameMode();
 8005c46:	6883      	ldr	r3, [r0, #8]
 8005c48:	f893 164c 	ldrb.w	r1, [r3, #1612]	; 0x64c
 8005c4c:	f884 17d0 	strb.w	r1, [r4, #2000]	; 0x7d0
	isMultiPlayer = presenter->getIsMultiPlayer();
 8005c50:	f504 5200 	add.w	r2, r4, #8192	; 0x2000
 8005c54:	f893 6650 	ldrb.w	r6, [r3, #1616]	; 0x650
 8005c58:	f882 65b4 	strb.w	r6, [r2, #1460]	; 0x5b4
	if(gameMode == 1){
 8005c5c:	2901      	cmp	r1, #1
 8005c5e:	d163      	bne.n	8005d28 <_ZN14GameScreenView11setupScreenEv+0x120>
		indexHit = presenter->getIndexHit();
 8005c60:	f8d3 3324 	ldr.w	r3, [r3, #804]	; 0x324
 8005c64:	f8c2 35b0 	str.w	r3, [r2, #1456]	; 0x5b0
		presenter->getHits(hits);
 8005c68:	f504 510a 	add.w	r1, r4, #8832	; 0x2280
 8005c6c:	3110      	adds	r1, #16
 8005c6e:	f504 588a 	add.w	r8, r4, #4416	; 0x1140
 8005c72:	f7ff fa87 	bl	8005184 <_ZN19GameScreenPresenter7getHitsEPSt4pairIllE>
        visible = vis;
 8005c76:	f108 0818 	add.w	r8, r8, #24
 8005c7a:	f884 5719 	strb.w	r5, [r4, #1817]	; 0x719
 8005c7e:	f04f 0953 	mov.w	r9, #83	; 0x53
			for(int j = 0; j < 10; j++){
 8005c82:	2328      	movs	r3, #40	; 0x28
				boxes[i][j].setPosition(getXFromIndex(j), getYFromIndex(i), 23,
 8005c84:	fa0f fb89 	sxth.w	fp, r9
 8005c88:	fb03 4a05 	mla	sl, r3, r5, r4
 8005c8c:	4646      	mov	r6, r8
 8005c8e:	2705      	movs	r7, #5
				if (desk[i][j] == Board::HIT_VALUE)
 8005c90:	f8da 3fc8 	ldr.w	r3, [sl, #4040]	; 0xfc8
 8005c94:	1c59      	adds	r1, r3, #1
 8005c96:	d12b      	bne.n	8005cf0 <_ZN14GameScreenView11setupScreenEv+0xe8>
							touchgfx::Bitmap(BITMAP_HIT_ID));
 8005c98:	6833      	ldr	r3, [r6, #0]
 8005c9a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005c9c:	2207      	movs	r2, #7
 8005c9e:	f8ad 200c 	strh.w	r2, [sp, #12]
						boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8005ca2:	a903      	add	r1, sp, #12
 8005ca4:	4630      	mov	r0, r6
 8005ca6:	4798      	blx	r3
				boxes[i][j].setPosition(getXFromIndex(j), getYFromIndex(i), 23,
 8005ca8:	2317      	movs	r3, #23
 8005caa:	465a      	mov	r2, fp
 8005cac:	b239      	sxth	r1, r7
 8005cae:	4630      	mov	r0, r6
 8005cb0:	9300      	str	r3, [sp, #0]
 8005cb2:	f7fc fb8e 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
						touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005cb6:	6833      	ldr	r3, [r6, #0]
				boxes[i][j].setScalingAlgorithm(
 8005cb8:	4630      	mov	r0, r6
 8005cba:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005cbc:	2100      	movs	r1, #0
			for(int j = 0; j < 10; j++){
 8005cbe:	3717      	adds	r7, #23
				boxes[i][j].setScalingAlgorithm(
 8005cc0:	4798      	blx	r3
			for(int j = 0; j < 10; j++){
 8005cc2:	b2bf      	uxth	r7, r7
        container.add(d);
 8005cc4:	4631      	mov	r1, r6
 8005cc6:	1d20      	adds	r0, r4, #4
 8005cc8:	f005 ff13 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005ccc:	2feb      	cmp	r7, #235	; 0xeb
 8005cce:	f10a 0a04 	add.w	sl, sl, #4
 8005cd2:	f106 062c 	add.w	r6, r6, #44	; 0x2c
 8005cd6:	d1db      	bne.n	8005c90 <_ZN14GameScreenView11setupScreenEv+0x88>
					if((i + 1 < 10 && desk[i + 1][j] == desk[i][j]) || (i - 1 >= 0 && desk[i - 1][j] == desk[i][j])){
 8005cd8:	3501      	adds	r5, #1
		for(int i = 0; i < 10; i++){
 8005cda:	f109 0917 	add.w	r9, r9, #23
 8005cde:	2d0a      	cmp	r5, #10
 8005ce0:	fa1f f989 	uxth.w	r9, r9
 8005ce4:	f508 78dc 	add.w	r8, r8, #440	; 0x1b8
 8005ce8:	d1cb      	bne.n	8005c82 <_ZN14GameScreenView11setupScreenEv+0x7a>
}
 8005cea:	b005      	add	sp, #20
 8005cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				} else if(desk[i][j] == Board::MISS_VALUE) {
 8005cf0:	1c9a      	adds	r2, r3, #2
 8005cf2:	d103      	bne.n	8005cfc <_ZN14GameScreenView11setupScreenEv+0xf4>
					boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_MISS_BLUE_ID));
 8005cf4:	6833      	ldr	r3, [r6, #0]
 8005cf6:	2208      	movs	r2, #8
 8005cf8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8005cfa:	e7d0      	b.n	8005c9e <_ZN14GameScreenView11setupScreenEv+0x96>
				} else if (desk[i][j] > 0){
 8005cfc:	2b00      	cmp	r3, #0
 8005cfe:	ddd3      	ble.n	8005ca8 <_ZN14GameScreenView11setupScreenEv+0xa0>
					if((i + 1 < 10 && desk[i + 1][j] == desk[i][j]) || (i - 1 >= 0 && desk[i - 1][j] == desk[i][j])){
 8005d00:	2d09      	cmp	r5, #9
 8005d02:	6832      	ldr	r2, [r6, #0]
 8005d04:	d004      	beq.n	8005d10 <_ZN14GameScreenView11setupScreenEv+0x108>
 8005d06:	f8da 1ff0 	ldr.w	r1, [sl, #4080]	; 0xff0
 8005d0a:	428b      	cmp	r3, r1
 8005d0c:	d004      	beq.n	8005d18 <_ZN14GameScreenView11setupScreenEv+0x110>
 8005d0e:	b13d      	cbz	r5, 8005d20 <_ZN14GameScreenView11setupScreenEv+0x118>
 8005d10:	f8da 1fa0 	ldr.w	r1, [sl, #4000]	; 0xfa0
 8005d14:	428b      	cmp	r3, r1
 8005d16:	d103      	bne.n	8005d20 <_ZN14GameScreenView11setupScreenEv+0x118>
						boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8005d18:	6e13      	ldr	r3, [r2, #96]	; 0x60
        : bitmapId(id)
 8005d1a:	f04f 0205 	mov.w	r2, #5
 8005d1e:	e7be      	b.n	8005c9e <_ZN14GameScreenView11setupScreenEv+0x96>
						boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8005d20:	6e13      	ldr	r3, [r2, #96]	; 0x60
 8005d22:	f04f 0206 	mov.w	r2, #6
 8005d26:	e7ba      	b.n	8005c9e <_ZN14GameScreenView11setupScreenEv+0x96>
		gameMode = 0; // Dat thuyen
 8005d28:	f884 57d0 	strb.w	r5, [r4, #2000]	; 0x7d0
}
 8005d2c:	e7dd      	b.n	8005cea <_ZN14GameScreenView11setupScreenEv+0xe2>

08005d2e <_ZN19HomeScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~HomeScreenPresenter() {}
 8005d2e:	4770      	bx	lr

08005d30 <_ZThn4_N19HomeScreenPresenterD1Ev>:
 8005d30:	3804      	subs	r0, #4
 8005d32:	4770      	bx	lr

08005d34 <_ZN19HomeScreenPresenter10deactivateEv>:
}

void HomeScreenPresenter::activate()
{

}
 8005d34:	4770      	bx	lr

08005d36 <_ZN19HomeScreenPresenterD0Ev>:
 8005d36:	b510      	push	{r4, lr}
 8005d38:	2110      	movs	r1, #16
 8005d3a:	4604      	mov	r4, r0
 8005d3c:	f01a fb74 	bl	8020428 <_ZdlPvj>
 8005d40:	4620      	mov	r0, r4
 8005d42:	bd10      	pop	{r4, pc}

08005d44 <_ZThn4_N19HomeScreenPresenterD0Ev>:
 8005d44:	f1a0 0004 	sub.w	r0, r0, #4
 8005d48:	e7f5      	b.n	8005d36 <_ZN19HomeScreenPresenterD0Ev>
	...

08005d4c <_ZN19HomeScreenPresenterC1ER14HomeScreenView>:
HomeScreenPresenter::HomeScreenPresenter(HomeScreenView& v)
 8005d4c:	b510      	push	{r4, lr}
 8005d4e:	2200      	movs	r2, #0
 8005d50:	6082      	str	r2, [r0, #8]
    : view(v)
 8005d52:	4a04      	ldr	r2, [pc, #16]	; (8005d64 <_ZN19HomeScreenPresenterC1ER14HomeScreenView+0x18>)
 8005d54:	60c1      	str	r1, [r0, #12]
 8005d56:	f102 0408 	add.w	r4, r2, #8
 8005d5a:	3220      	adds	r2, #32
 8005d5c:	6004      	str	r4, [r0, #0]
 8005d5e:	6042      	str	r2, [r0, #4]
}
 8005d60:	bd10      	pop	{r4, pc}
 8005d62:	bf00      	nop
 8005d64:	08022efc 	.word	0x08022efc

08005d68 <_ZN14HomeScreenView14tearDownScreenEv>:
}

void HomeScreenView::tearDownScreen()
{
    HomeScreenViewBase::tearDownScreen();
}
 8005d68:	4770      	bx	lr
	...

08005d6c <_ZN14HomeScreenViewD1Ev>:

class HomeScreenView : public HomeScreenViewBase
{
public:
    HomeScreenView();
    virtual ~HomeScreenView() {}
 8005d6c:	b510      	push	{r4, lr}
 8005d6e:	4b03      	ldr	r3, [pc, #12]	; (8005d7c <_ZN14HomeScreenViewD1Ev+0x10>)
 8005d70:	6003      	str	r3, [r0, #0]
 8005d72:	4604      	mov	r4, r0
 8005d74:	f7fd ff6c 	bl	8003c50 <_ZN18HomeScreenViewBaseD1Ev>
 8005d78:	4620      	mov	r0, r4
 8005d7a:	bd10      	pop	{r4, pc}
 8005d7c:	08022f2c 	.word	0x08022f2c

08005d80 <_ZN14HomeScreenViewD0Ev>:
 8005d80:	b510      	push	{r4, lr}
 8005d82:	4604      	mov	r4, r0
 8005d84:	f7ff fff2 	bl	8005d6c <_ZN14HomeScreenViewD1Ev>
 8005d88:	4620      	mov	r0, r4
 8005d8a:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 8005d8e:	f01a fb4b 	bl	8020428 <_ZdlPvj>
 8005d92:	4620      	mov	r0, r4
 8005d94:	bd10      	pop	{r4, pc}
	...

08005d98 <_ZN14HomeScreenViewC1Ev>:
HomeScreenView::HomeScreenView()
 8005d98:	b510      	push	{r4, lr}
 8005d9a:	4604      	mov	r4, r0
 8005d9c:	f7fd ffae 	bl	8003cfc <_ZN18HomeScreenViewBaseC1Ev>
 8005da0:	4b01      	ldr	r3, [pc, #4]	; (8005da8 <_ZN14HomeScreenViewC1Ev+0x10>)
 8005da2:	6023      	str	r3, [r4, #0]
}
 8005da4:	4620      	mov	r0, r4
 8005da6:	bd10      	pop	{r4, pc}
 8005da8:	08022f2c 	.word	0x08022f2c

08005dac <_ZN14HomeScreenView11setupScreenEv>:
    HomeScreenViewBase::setupScreen();
 8005dac:	f7fd bf51 	b.w	8003c52 <_ZN18HomeScreenViewBase11setupScreenEv>

08005db0 <_ZN5Model4tickEv>:
}

void Model::tick()
{

}
 8005db0:	4770      	bx	lr

08005db2 <_ZN5Model4InitEv>:

void Model::Init()
{
	isMultiPlayer = false;
 8005db2:	2100      	movs	r1, #0
 8005db4:	f880 1650 	strb.w	r1, [r0, #1616]	; 0x650
	winner = 0;
 8005db8:	f8c0 1648 	str.w	r1, [r0, #1608]	; 0x648
	gameMode = 0;
 8005dbc:	f8c0 164c 	str.w	r1, [r0, #1612]	; 0x64c
	for(int i = 0; i < 10; i++)
		{
			for(int j = 0; j < 10; j++)
			{
				player1Desk[i][j] = 0;
 8005dc0:	f44f 7248 	mov.w	r2, #800	; 0x320
 8005dc4:	f500 704a 	add.w	r0, r0, #808	; 0x328
 8005dc8:	f01a bc7a 	b.w	80206c0 <memset>

08005dcc <_ZN5ModelC1Ev>:
Model::Model() : modelListener(0)
 8005dcc:	b510      	push	{r4, lr}
 8005dce:	2100      	movs	r1, #0
 8005dd0:	4604      	mov	r4, r0
 8005dd2:	f44f 7248 	mov.w	r2, #800	; 0x320
 8005dd6:	f840 1b04 	str.w	r1, [r0], #4
 8005dda:	f01a fc71 	bl	80206c0 <memset>
	this->Init();
 8005dde:	4620      	mov	r0, r4
 8005de0:	f7ff ffe7 	bl	8005db2 <_ZN5Model4InitEv>
}
 8005de4:	4620      	mov	r0, r4
 8005de6:	bd10      	pop	{r4, pc}

08005de8 <_ZN23OpponentScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~OpponentScreenPresenter() {}
 8005de8:	4770      	bx	lr

08005dea <_ZThn4_N23OpponentScreenPresenterD1Ev>:
 8005dea:	3804      	subs	r0, #4
 8005dec:	4770      	bx	lr

08005dee <_ZN23OpponentScreenPresenter10deactivateEv>:
}

void OpponentScreenPresenter::activate()
{

}
 8005dee:	4770      	bx	lr

08005df0 <_ZN23OpponentScreenPresenterD0Ev>:
 8005df0:	b510      	push	{r4, lr}
 8005df2:	2110      	movs	r1, #16
 8005df4:	4604      	mov	r4, r0
 8005df6:	f01a fb17 	bl	8020428 <_ZdlPvj>
 8005dfa:	4620      	mov	r0, r4
 8005dfc:	bd10      	pop	{r4, pc}

08005dfe <_ZThn4_N23OpponentScreenPresenterD0Ev>:
 8005dfe:	f1a0 0004 	sub.w	r0, r0, #4
 8005e02:	e7f5      	b.n	8005df0 <_ZN23OpponentScreenPresenterD0Ev>

08005e04 <_ZN23OpponentScreenPresenterC1ER18OpponentScreenView>:
OpponentScreenPresenter::OpponentScreenPresenter(OpponentScreenView& v)
 8005e04:	b510      	push	{r4, lr}
 8005e06:	2200      	movs	r2, #0
 8005e08:	6082      	str	r2, [r0, #8]
    : view(v)
 8005e0a:	4a04      	ldr	r2, [pc, #16]	; (8005e1c <_ZN23OpponentScreenPresenterC1ER18OpponentScreenView+0x18>)
 8005e0c:	60c1      	str	r1, [r0, #12]
 8005e0e:	f102 0408 	add.w	r4, r2, #8
 8005e12:	3220      	adds	r2, #32
 8005e14:	6004      	str	r4, [r0, #0]
 8005e16:	6042      	str	r2, [r0, #4]
}
 8005e18:	bd10      	pop	{r4, pc}
 8005e1a:	bf00      	nop
 8005e1c:	08022f58 	.word	0x08022f58

08005e20 <_ZN18OpponentScreenView14tearDownScreenEv>:
}

void OpponentScreenView::tearDownScreen()
{
    OpponentScreenViewBase::tearDownScreen();
}
 8005e20:	4770      	bx	lr
	...

08005e24 <_ZN18OpponentScreenViewD1Ev>:

class OpponentScreenView : public OpponentScreenViewBase
{
public:
    OpponentScreenView();
    virtual ~OpponentScreenView() {}
 8005e24:	4b09      	ldr	r3, [pc, #36]	; (8005e4c <_ZN18OpponentScreenViewD1Ev+0x28>)
 8005e26:	b570      	push	{r4, r5, r6, lr}
 8005e28:	4604      	mov	r4, r0
 8005e2a:	6003      	str	r3, [r0, #0]
 8005e2c:	f641 45a4 	movw	r5, #7332	; 0x1ca4
 8005e30:	f640 3674 	movw	r6, #2932	; 0xb74
 8005e34:	5963      	ldr	r3, [r4, r5]
 8005e36:	1960      	adds	r0, r4, r5
 8005e38:	681b      	ldr	r3, [r3, #0]
 8005e3a:	3d2c      	subs	r5, #44	; 0x2c
 8005e3c:	4798      	blx	r3
 8005e3e:	42b5      	cmp	r5, r6
 8005e40:	d1f8      	bne.n	8005e34 <_ZN18OpponentScreenViewD1Ev+0x10>
 8005e42:	4620      	mov	r0, r4
 8005e44:	f7fe f858 	bl	8003ef8 <_ZN22OpponentScreenViewBaseD1Ev>
 8005e48:	4620      	mov	r0, r4
 8005e4a:	bd70      	pop	{r4, r5, r6, pc}
 8005e4c:	08022f88 	.word	0x08022f88

08005e50 <_ZN18OpponentScreenViewD0Ev>:
 8005e50:	b510      	push	{r4, lr}
 8005e52:	4604      	mov	r4, r0
 8005e54:	f7ff ffe6 	bl	8005e24 <_ZN18OpponentScreenViewD1Ev>
 8005e58:	4620      	mov	r0, r4
 8005e5a:	f641 617c 	movw	r1, #7804	; 0x1e7c
 8005e5e:	f01a fae3 	bl	8020428 <_ZdlPvj>
 8005e62:	4620      	mov	r0, r4
 8005e64:	bd10      	pop	{r4, pc}

08005e66 <_ZN23OpponentScreenPresenter7getDeskEPA10_l>:

	void getDesk(int32_t (*arr)[10]) {
 8005e66:	b510      	push	{r4, lr}
 8005e68:	460c      	mov	r4, r1
				arr[i][j] = this->player2Desk[i][j];
 8005e6a:	6881      	ldr	r1, [r0, #8]
 8005e6c:	b0e4      	sub	sp, #400	; 0x190
 8005e6e:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8005e72:	f501 6197 	add.w	r1, r1, #1208	; 0x4b8
 8005e76:	4668      	mov	r0, sp
 8005e78:	f01a fc14 	bl	80206a4 <memcpy>
		int32_t data[10][10];
		model->getPlayer2Desk(data);
		for (int i = 0; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				arr[i][j] = data[i][j];
 8005e7c:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8005e80:	4669      	mov	r1, sp
 8005e82:	4620      	mov	r0, r4
 8005e84:	f01a fc0e 	bl	80206a4 <memcpy>
			}
		}
	}
 8005e88:	b064      	add	sp, #400	; 0x190
 8005e8a:	bd10      	pop	{r4, pc}

08005e8c <_ZN18OpponentScreenView15handleTickEventEv>:
void OpponentScreenView::handleTickEvent() {
 8005e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    OpponentScreenViewBase::handleTickEvent();
    tickCount++;
 8005e90:	f500 5580 	add.w	r5, r0, #4096	; 0x1000
	uint8_t res = 0;
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 8005e94:	f8df a34c 	ldr.w	sl, [pc, #844]	; 80061e4 <_ZN18OpponentScreenView15handleTickEventEv+0x358>
    tickCount++;
 8005e98:	f8d5 3e60 	ldr.w	r3, [r5, #3680]	; 0xe60
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 8005e9c:	f8df 8348 	ldr.w	r8, [pc, #840]	; 80061e8 <_ZN18OpponentScreenView15handleTickEventEv+0x35c>
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8005ea0:	f8df 9348 	ldr.w	r9, [pc, #840]	; 80061ec <_ZN18OpponentScreenView15handleTickEventEv+0x360>
void OpponentScreenView::handleTickEvent() {
 8005ea4:	b087      	sub	sp, #28
    tickCount++;
 8005ea6:	3301      	adds	r3, #1
	uint8_t res = 0;
 8005ea8:	2200      	movs	r2, #0
    tickCount++;
 8005eaa:	f8c5 3e60 	str.w	r3, [r5, #3680]	; 0xe60
void OpponentScreenView::handleTickEvent() {
 8005eae:	4604      	mov	r4, r0
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 8005eb0:	f8da 0000 	ldr.w	r0, [sl]
	uint8_t res = 0;
 8005eb4:	f88d 2013 	strb.w	r2, [sp, #19]
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 8005eb8:	f003 fe87 	bl	8009bca <osMessageQueueGetCount>
 8005ebc:	4683      	mov	fp, r0
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 8005ebe:	f8d8 0000 	ldr.w	r0, [r8]
 8005ec2:	f003 fe82 	bl	8009bca <osMessageQueueGetCount>
 8005ec6:	9003      	str	r0, [sp, #12]
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8005ec8:	f8d9 0000 	ldr.w	r0, [r9]
 8005ecc:	f003 fe7d 	bl	8009bca <osMessageQueueGetCount>
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8005ed0:	4bc1      	ldr	r3, [pc, #772]	; (80061d8 <_ZN18OpponentScreenView15handleTickEventEv+0x34c>)
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8005ed2:	4606      	mov	r6, r0
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8005ed4:	6818      	ldr	r0, [r3, #0]
 8005ed6:	f003 fe78 	bl	8009bca <osMessageQueueGetCount>
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 8005eda:	4bc0      	ldr	r3, [pc, #768]	; (80061dc <_ZN18OpponentScreenView15handleTickEventEv+0x350>)
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8005edc:	4607      	mov	r7, r0
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 8005ede:	6818      	ldr	r0, [r3, #0]
 8005ee0:	f003 fe73 	bl	8009bca <osMessageQueueGetCount>
	uint32_t count6 = osMessageQueueGetCount(Queue6Handle);
 8005ee4:	4bbe      	ldr	r3, [pc, #760]	; (80061e0 <_ZN18OpponentScreenView15handleTickEventEv+0x354>)
 8005ee6:	6818      	ldr	r0, [r3, #0]
 8005ee8:	f003 fe6f 	bl	8009bca <osMessageQueueGetCount>

	if (count1 > 0) {
 8005eec:	2200      	movs	r2, #0
 8005eee:	f1bb 0f00 	cmp.w	fp, #0
 8005ef2:	d01d      	beq.n	8005f30 <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
		osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 8005ef4:	f04f 33ff 	mov.w	r3, #4294967295
 8005ef8:	f8da 0000 	ldr.w	r0, [sl]
 8005efc:	f10d 0113 	add.w	r1, sp, #19
 8005f00:	f003 fe34 	bl	8009b6c <osMessageQueueGet>
		if (res == 'L') {
 8005f04:	f89d 3013 	ldrb.w	r3, [sp, #19]
 8005f08:	2b4c      	cmp	r3, #76	; 0x4c
 8005f0a:	f040 8081 	bne.w	8006010 <_ZN18OpponentScreenView15handleTickEventEv+0x184>
			x -= 1;
 8005f0e:	f894 3b9c 	ldrb.w	r3, [r4, #2972]	; 0xb9c
 8005f12:	3b01      	subs	r3, #1
 8005f14:	b25b      	sxtb	r3, r3
			if (x < MIN_BOARD) {
 8005f16:	2b00      	cmp	r3, #0
				x = MAX_BOARD;
 8005f18:	bfb8      	it	lt
 8005f1a:	2309      	movlt	r3, #9
 8005f1c:	f884 3b9c 	strb.w	r3, [r4, #2972]	; 0xb9c
		}
	} while (status == -1);
	return std::make_tuple(x, y, status);
}
int32_t OpponentScreenView::getXFromIndex(int32_t x) {
	return (5 + x * WIDTH_SQUARE);
 8005f20:	f994 1b9c 	ldrsb.w	r1, [r4, #2972]	; 0xb9c
 8005f24:	2317      	movs	r3, #23
 8005f26:	2205      	movs	r2, #5
 8005f28:	fb13 2301 	smlabb	r3, r3, r1, r2
			select.setX(getXFromIndex(x));
 8005f2c:	f8a4 3854 	strh.w	r3, [r4, #2132]	; 0x854
	if(count2 > 0){
 8005f30:	9b03      	ldr	r3, [sp, #12]
 8005f32:	b1eb      	cbz	r3, 8005f70 <_ZN18OpponentScreenView15handleTickEventEv+0xe4>
		osMessageQueueGet(Queue2Handle, &res, NULL, osWaitForever);
 8005f34:	f04f 33ff 	mov.w	r3, #4294967295
 8005f38:	f8d8 0000 	ldr.w	r0, [r8]
 8005f3c:	2200      	movs	r2, #0
 8005f3e:	f10d 0113 	add.w	r1, sp, #19
 8005f42:	f003 fe13 	bl	8009b6c <osMessageQueueGet>
		if (res == 'R') {
 8005f46:	f89d 3013 	ldrb.w	r3, [sp, #19]
 8005f4a:	2b52      	cmp	r3, #82	; 0x52
 8005f4c:	d110      	bne.n	8005f70 <_ZN18OpponentScreenView15handleTickEventEv+0xe4>
			x += 1;
 8005f4e:	f894 3b9c 	ldrb.w	r3, [r4, #2972]	; 0xb9c
 8005f52:	3301      	adds	r3, #1
 8005f54:	b25b      	sxtb	r3, r3
			if (x > MAX_BOARD) {
 8005f56:	2b09      	cmp	r3, #9
				x = MIN_BOARD;
 8005f58:	bfc8      	it	gt
 8005f5a:	2300      	movgt	r3, #0
 8005f5c:	f884 3b9c 	strb.w	r3, [r4, #2972]	; 0xb9c
	return (5 + x * WIDTH_SQUARE);
 8005f60:	f994 1b9c 	ldrsb.w	r1, [r4, #2972]	; 0xb9c
 8005f64:	2317      	movs	r3, #23
 8005f66:	2205      	movs	r2, #5
 8005f68:	fb13 2301 	smlabb	r3, r3, r1, r2
			select.setX(getXFromIndex(x));
 8005f6c:	f8a4 3854 	strh.w	r3, [r4, #2132]	; 0x854
	if (count3 > 0) {
 8005f70:	b1ee      	cbz	r6, 8005fae <_ZN18OpponentScreenView15handleTickEventEv+0x122>
		osMessageQueueGet(Queue3Handle, &res, NULL, osWaitForever);
 8005f72:	f04f 33ff 	mov.w	r3, #4294967295
 8005f76:	f8d9 0000 	ldr.w	r0, [r9]
 8005f7a:	2200      	movs	r2, #0
 8005f7c:	f10d 0113 	add.w	r1, sp, #19
 8005f80:	f003 fdf4 	bl	8009b6c <osMessageQueueGet>
		if (res == 'U') {
 8005f84:	f89d 3013 	ldrb.w	r3, [sp, #19]
 8005f88:	2b55      	cmp	r3, #85	; 0x55
 8005f8a:	d110      	bne.n	8005fae <_ZN18OpponentScreenView15handleTickEventEv+0x122>
			y -= 1;
 8005f8c:	f894 3b9d 	ldrb.w	r3, [r4, #2973]	; 0xb9d
 8005f90:	3b01      	subs	r3, #1
 8005f92:	b25b      	sxtb	r3, r3
			if (y < MIN_BOARD) {
 8005f94:	2b00      	cmp	r3, #0
				y = MAX_BOARD;
 8005f96:	bfb8      	it	lt
 8005f98:	2309      	movlt	r3, #9
 8005f9a:	f884 3b9d 	strb.w	r3, [r4, #2973]	; 0xb9d
}
int32_t OpponentScreenView::getYFromIndex(int32_t y) {
	return (83 + y * WIDTH_SQUARE);
 8005f9e:	f994 1b9d 	ldrsb.w	r1, [r4, #2973]	; 0xb9d
 8005fa2:	2317      	movs	r3, #23
 8005fa4:	2253      	movs	r2, #83	; 0x53
 8005fa6:	fb13 2301 	smlabb	r3, r3, r1, r2
			select.setY(getYFromIndex(y));
 8005faa:	f8a4 3856 	strh.w	r3, [r4, #2134]	; 0x856
	if (count4 > 0) {
 8005fae:	b1ef      	cbz	r7, 8005fec <_ZN18OpponentScreenView15handleTickEventEv+0x160>
		osMessageQueueGet(Queue4Handle, &res, NULL, osWaitForever);
 8005fb0:	4889      	ldr	r0, [pc, #548]	; (80061d8 <_ZN18OpponentScreenView15handleTickEventEv+0x34c>)
 8005fb2:	f04f 33ff 	mov.w	r3, #4294967295
 8005fb6:	6800      	ldr	r0, [r0, #0]
 8005fb8:	2200      	movs	r2, #0
 8005fba:	f10d 0113 	add.w	r1, sp, #19
 8005fbe:	f003 fdd5 	bl	8009b6c <osMessageQueueGet>
		if (res == 'D') {
 8005fc2:	f89d 3013 	ldrb.w	r3, [sp, #19]
 8005fc6:	2b44      	cmp	r3, #68	; 0x44
 8005fc8:	d110      	bne.n	8005fec <_ZN18OpponentScreenView15handleTickEventEv+0x160>
			y += 1;
 8005fca:	f894 3b9d 	ldrb.w	r3, [r4, #2973]	; 0xb9d
 8005fce:	3301      	adds	r3, #1
 8005fd0:	b25b      	sxtb	r3, r3
			if (y > MAX_BOARD) {
 8005fd2:	2b09      	cmp	r3, #9
				y = MIN_BOARD;
 8005fd4:	bfc8      	it	gt
 8005fd6:	2300      	movgt	r3, #0
 8005fd8:	f884 3b9d 	strb.w	r3, [r4, #2973]	; 0xb9d
	return (83 + y * WIDTH_SQUARE);
 8005fdc:	f994 1b9d 	ldrsb.w	r1, [r4, #2973]	; 0xb9d
 8005fe0:	2317      	movs	r3, #23
 8005fe2:	2253      	movs	r2, #83	; 0x53
 8005fe4:	fb13 2301 	smlabb	r3, r3, r1, r2
			select.setY(getYFromIndex(y));
 8005fe8:	f8a4 3856 	strh.w	r3, [r4, #2134]	; 0x856
	if(currentCount != 0 && tickCount > currentCount + 15){
 8005fec:	f8d5 3e64 	ldr.w	r3, [r5, #3684]	; 0xe64
 8005ff0:	b143      	cbz	r3, 8006004 <_ZN18OpponentScreenView15handleTickEventEv+0x178>
 8005ff2:	f8d5 2e60 	ldr.w	r2, [r5, #3680]	; 0xe60
 8005ff6:	330f      	adds	r3, #15
 8005ff8:	429a      	cmp	r2, r3
 8005ffa:	dd03      	ble.n	8006004 <_ZN18OpponentScreenView15handleTickEventEv+0x178>
    virtual ~OpponentScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005ffc:	f009 fd0c 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoGameScreenScreenSlideTransitionEast();
 8006000:	f7fc fd52 	bl	8002aa8 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>
        container.invalidate();
 8006004:	1d20      	adds	r0, r4, #4
 8006006:	f00a fd7d 	bl	8010b04 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800600a:	b007      	add	sp, #28
 800600c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if (res == 'S' && desk[y][x] >= 0) {
 8006010:	2b53      	cmp	r3, #83	; 0x53
 8006012:	d18d      	bne.n	8005f30 <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
 8006014:	f994 3b9d 	ldrsb.w	r3, [r4, #2973]	; 0xb9d
 8006018:	f994 2b9c 	ldrsb.w	r2, [r4, #2972]	; 0xb9c
 800601c:	f04f 0e0a 	mov.w	lr, #10
 8006020:	fb0e 2e03 	mla	lr, lr, r3, r2
 8006024:	f20e 7134 	addw	r1, lr, #1844	; 0x734
 8006028:	f854 a021 	ldr.w	sl, [r4, r1, lsl #2]
 800602c:	f1ba 0f00 	cmp.w	sl, #0
 8006030:	f6ff af7e 	blt.w	8005f30 <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
 8006034:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8006038:	f04f 012c 	mov.w	r1, #44	; 0x2c
 800603c:	fb03 f000 	mul.w	r0, r3, r0
 8006040:	fb01 0b02 	mla	fp, r1, r2, r0
 8006044:	44a3      	add	fp, r4
				boxes[y][x].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8006046:	fb02 0001 	mla	r0, r2, r1, r0
	void setDesk(int32_t i, int32_t j, int32_t status) {
		model->setPlayer2Desk(i, j, status);
 800604a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 800604c:	f04f 0c01 	mov.w	ip, #1
 8006050:	f500 603a 	add.w	r0, r0, #2976	; 0xba0
 8006054:	f88b cbc5 	strb.w	ip, [fp, #3013]	; 0xbc5
 8006058:	4420      	add	r0, r4
 800605a:	f8d1 c008 	ldr.w	ip, [r1, #8]
			if(desk[y][x] > 0){
 800605e:	d072      	beq.n	8006146 <_ZN18OpponentScreenView15handleTickEventEv+0x2ba>
				if(desk[y][x] == 2)
 8006060:	f1ba 0f02 	cmp.w	sl, #2
 8006064:	d142      	bne.n	80060ec <_ZN18OpponentScreenView15handleTickEventEv+0x260>
					ship[0]--;
 8006066:	f8d5 1e68 	ldr.w	r1, [r5, #3688]	; 0xe68
 800606a:	3901      	subs	r1, #1
 800606c:	f8c5 1e68 	str.w	r1, [r5, #3688]	; 0xe68
					if(ship[0] == 0)
 8006070:	b919      	cbnz	r1, 800607a <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
        color = newColor;
 8006072:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006076:	f8c4 1750 	str.w	r1, [r4, #1872]	; 0x750
		player2Desk[i][j] = status;
 800607a:	210a      	movs	r1, #10
 800607c:	fb01 2103 	mla	r1, r1, r3, r2
 8006080:	f501 7197 	add.w	r1, r1, #302	; 0x12e
 8006084:	f04f 3eff 	mov.w	lr, #4294967295
 8006088:	f84c e021 	str.w	lr, [ip, r1, lsl #2]
				boxes[y][x].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 800608c:	f44f 71dc 	mov.w	r1, #440	; 0x1b8
 8006090:	434b      	muls	r3, r1
 8006092:	212c      	movs	r1, #44	; 0x2c
 8006094:	fb01 3202 	mla	r2, r1, r2, r3
 8006098:	4422      	add	r2, r4
 800609a:	a905      	add	r1, sp, #20
 800609c:	f8d2 3ba0 	ldr.w	r3, [r2, #2976]	; 0xba0
 80060a0:	2207      	movs	r2, #7
 80060a2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80060a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80060a8:	4798      	blx	r3
				presenter->getDesk(desk);
 80060aa:	f504 51e6 	add.w	r1, r4, #7360	; 0x1cc0
 80060ae:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80060b0:	3110      	adds	r1, #16
 80060b2:	f7ff fed8 	bl	8005e66 <_ZN23OpponentScreenPresenter7getDeskEPA10_l>
    virtual void tearDownScreen();
	void handleTickEvent();
	int32_t getXFromIndex(int32_t);
	int32_t getYFromIndex(int32_t);
	bool checkWinner(int32_t board[][10]) {
		for (int32_t i = 0; i < 10; i++) {
 80060b6:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 80060ba:	f504 52f4 	add.w	r2, r4, #7808	; 0x1e80
 80060be:	3314      	adds	r3, #20
 80060c0:	3204      	adds	r2, #4
			for (int32_t j = 0; j < 10; j++) {
 80060c2:	f1a3 0128 	sub.w	r1, r3, #40	; 0x28
				if (board[i][j] > 0) {
 80060c6:	f851 0f04 	ldr.w	r0, [r1, #4]!
 80060ca:	2800      	cmp	r0, #0
 80060cc:	dc49      	bgt.n	8006162 <_ZN18OpponentScreenView15handleTickEventEv+0x2d6>
			for (int32_t j = 0; j < 10; j++) {
 80060ce:	428b      	cmp	r3, r1
 80060d0:	d1f9      	bne.n	80060c6 <_ZN18OpponentScreenView15handleTickEventEv+0x23a>
		for (int32_t i = 0; i < 10; i++) {
 80060d2:	3328      	adds	r3, #40	; 0x28
 80060d4:	429a      	cmp	r2, r3
 80060d6:	d1f4      	bne.n	80060c2 <_ZN18OpponentScreenView15handleTickEventEv+0x236>
	}
	bool getIsMultiPlayer() {
		return model->getIsMultiPlayer();
	}
	void setWinner(int32_t winner) {
		model->setWinner(winner);
 80060d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		this->winner = winner;
 80060da:	689b      	ldr	r3, [r3, #8]
 80060dc:	2201      	movs	r2, #1
 80060de:	f8c3 2648 	str.w	r2, [r3, #1608]	; 0x648
 80060e2:	f009 fc99 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
					application().gotoEndGameScreenScreenSlideTransitionEast();
 80060e6:	f7fc fcff 	bl	8002ae8 <_ZN23FrontendApplicationBase42gotoEndGameScreenScreenSlideTransitionEastEv>
 80060ea:	e03a      	b.n	8006162 <_ZN18OpponentScreenView15handleTickEventEv+0x2d6>
				else if(desk[y][x] == 3)
 80060ec:	f1ba 0f03 	cmp.w	sl, #3
 80060f0:	d10b      	bne.n	800610a <_ZN18OpponentScreenView15handleTickEventEv+0x27e>
					ship[1]--;
 80060f2:	f8d5 1e6c 	ldr.w	r1, [r5, #3692]	; 0xe6c
 80060f6:	3901      	subs	r1, #1
 80060f8:	f8c5 1e6c 	str.w	r1, [r5, #3692]	; 0xe6c
					if(ship[1] == 0)
 80060fc:	2900      	cmp	r1, #0
 80060fe:	d1bc      	bne.n	800607a <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
 8006100:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006104:	f8c4 17e8 	str.w	r1, [r4, #2024]	; 0x7e8
 8006108:	e7b7      	b.n	800607a <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
				else if(desk[y][x] == 4)
 800610a:	f1ba 0f04 	cmp.w	sl, #4
 800610e:	d10b      	bne.n	8006128 <_ZN18OpponentScreenView15handleTickEventEv+0x29c>
					ship[2]--;
 8006110:	f8d5 1e70 	ldr.w	r1, [r5, #3696]	; 0xe70
 8006114:	3901      	subs	r1, #1
 8006116:	f8c5 1e70 	str.w	r1, [r5, #3696]	; 0xe70
					if(ship[2] == 0)
 800611a:	2900      	cmp	r1, #0
 800611c:	d1ad      	bne.n	800607a <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
 800611e:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006122:	f8c4 179c 	str.w	r1, [r4, #1948]	; 0x79c
 8006126:	e7a8      	b.n	800607a <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
				else if(desk[y][x] == 5)
 8006128:	f1ba 0f05 	cmp.w	sl, #5
 800612c:	d1a5      	bne.n	800607a <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
					ship[3]--;
 800612e:	f8d5 1e74 	ldr.w	r1, [r5, #3700]	; 0xe74
 8006132:	3901      	subs	r1, #1
 8006134:	f8c5 1e74 	str.w	r1, [r5, #3700]	; 0xe74
					if(ship[3] == 0)
 8006138:	2900      	cmp	r1, #0
 800613a:	d19e      	bne.n	800607a <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
 800613c:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006140:	f8c4 1834 	str.w	r1, [r4, #2100]	; 0x834
 8006144:	e799      	b.n	800607a <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
		player2Desk[i][j] = status;
 8006146:	f50e 7e97 	add.w	lr, lr, #302	; 0x12e
 800614a:	f06f 0301 	mvn.w	r3, #1
 800614e:	f84c 302e 	str.w	r3, [ip, lr, lsl #2]
				boxes[y][x].setBitmap(touchgfx::Bitmap(BITMAP_MISS_GRAY_ID));
 8006152:	f8db 3ba0 	ldr.w	r3, [fp, #2976]	; 0xba0
 8006156:	2209      	movs	r2, #9
 8006158:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800615a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800615e:	a905      	add	r1, sp, #20
 8006160:	4798      	blx	r3
			boxes[y][x].setPosition(getXFromIndex(x), getYFromIndex(y), 23, 23);
 8006162:	f994 1b9c 	ldrsb.w	r1, [r4, #2972]	; 0xb9c
 8006166:	f994 2b9d 	ldrsb.w	r2, [r4, #2973]	; 0xb9d
 800616a:	f04f 0a2c 	mov.w	sl, #44	; 0x2c
 800616e:	f44f 7bdc 	mov.w	fp, #440	; 0x1b8
 8006172:	fb11 f00a 	smulbb	r0, r1, sl
	return (83 + y * WIDTH_SQUARE);
 8006176:	2317      	movs	r3, #23
			boxes[y][x].setPosition(getXFromIndex(x), getYFromIndex(y), 23, 23);
 8006178:	fb0b 0002 	mla	r0, fp, r2, r0
 800617c:	f04f 0c53 	mov.w	ip, #83	; 0x53
 8006180:	fb03 c202 	mla	r2, r3, r2, ip
 8006184:	f500 603a 	add.w	r0, r0, #2976	; 0xba0
 8006188:	f04f 0c05 	mov.w	ip, #5
 800618c:	fb03 c101 	mla	r1, r3, r1, ip
 8006190:	9300      	str	r3, [sp, #0]
 8006192:	4420      	add	r0, r4
 8006194:	f7fc f91d 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
			boxes[y][x].setScalingAlgorithm(
 8006198:	f994 3b9d 	ldrsb.w	r3, [r4, #2973]	; 0xb9d
 800619c:	f994 2b9c 	ldrsb.w	r2, [r4, #2972]	; 0xb9c
 80061a0:	fb0b fb03 	mul.w	fp, fp, r3
 80061a4:	fb02 b00a 	mla	r0, r2, sl, fp
					touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80061a8:	fb0a bb02 	mla	fp, sl, r2, fp
 80061ac:	44a3      	add	fp, r4
			boxes[y][x].setScalingAlgorithm(
 80061ae:	f500 603a 	add.w	r0, r0, #2976	; 0xba0
					touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80061b2:	f8db 3ba0 	ldr.w	r3, [fp, #2976]	; 0xba0
			boxes[y][x].setScalingAlgorithm(
 80061b6:	2100      	movs	r1, #0
 80061b8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80061ba:	4420      	add	r0, r4
 80061bc:	4798      	blx	r3
 80061be:	2300      	movs	r3, #0
 80061c0:	f884 3875 	strb.w	r3, [r4, #2165]	; 0x875
			if(currentCount == 0){
 80061c4:	f8d5 3e64 	ldr.w	r3, [r5, #3684]	; 0xe64
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	f47f aeb1 	bne.w	8005f30 <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
				currentCount = tickCount;
 80061ce:	f8d5 3e60 	ldr.w	r3, [r5, #3680]	; 0xe60
 80061d2:	f8c5 3e64 	str.w	r3, [r5, #3684]	; 0xe64
 80061d6:	e6ab      	b.n	8005f30 <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
 80061d8:	20003e48 	.word	0x20003e48
 80061dc:	20003e4c 	.word	0x20003e4c
 80061e0:	20003e50 	.word	0x20003e50
 80061e4:	20003e3c 	.word	0x20003e3c
 80061e8:	20003e40 	.word	0x20003e40
 80061ec:	20003e44 	.word	0x20003e44

080061f0 <_ZN18OpponentScreenViewC1Ev>:
OpponentScreenView::OpponentScreenView()
 80061f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80061f4:	4605      	mov	r5, r0
 80061f6:	f7fd feab 	bl	8003f50 <_ZN22OpponentScreenViewBaseC1Ev>
 80061fa:	4b18      	ldr	r3, [pc, #96]	; (800625c <_ZN18OpponentScreenViewC1Ev+0x6c>)
 80061fc:	602b      	str	r3, [r5, #0]
 80061fe:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8006202:	2100      	movs	r1, #0
 8006204:	f605 200c 	addw	r0, r5, #2572	; 0xa0c
 8006208:	f01a fa5a 	bl	80206c0 <memset>
 800620c:	f505 56e6 	add.w	r6, r5, #7360	; 0x1cc0
 8006210:	f505 643a 	add.w	r4, r5, #2976	; 0xba0
 8006214:	3610      	adds	r6, #16
 8006216:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800621a:	f504 78dc 	add.w	r8, r4, #440	; 0x1b8
 800621e:	4620      	mov	r0, r4
 8006220:	a901      	add	r1, sp, #4
 8006222:	342c      	adds	r4, #44	; 0x2c
 8006224:	f8ad 7004 	strh.w	r7, [sp, #4]
 8006228:	f006 fed2 	bl	800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800622c:	4544      	cmp	r4, r8
 800622e:	d1f6      	bne.n	800621e <_ZN18OpponentScreenViewC1Ev+0x2e>
 8006230:	42b4      	cmp	r4, r6
 8006232:	d1f2      	bne.n	800621a <_ZN18OpponentScreenViewC1Ev+0x2a>
	tickCount = 0;
 8006234:	f505 5380 	add.w	r3, r5, #4096	; 0x1000
 8006238:	2200      	movs	r2, #0
}
 800623a:	4628      	mov	r0, r5
	tickCount = 0;
 800623c:	f8c3 2e60 	str.w	r2, [r3, #3680]	; 0xe60
	currentCount = 0;
 8006240:	f8c3 2e64 	str.w	r2, [r3, #3684]	; 0xe64
		ship[i] = 0;
 8006244:	f8c3 2e68 	str.w	r2, [r3, #3688]	; 0xe68
 8006248:	f8c3 2e6c 	str.w	r2, [r3, #3692]	; 0xe6c
 800624c:	f8c3 2e70 	str.w	r2, [r3, #3696]	; 0xe70
 8006250:	f8c3 2e74 	str.w	r2, [r3, #3700]	; 0xe74
}
 8006254:	b002      	add	sp, #8
 8006256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800625a:	bf00      	nop
 800625c:	08022f88 	.word	0x08022f88

08006260 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_>:
	operator()(_UniformRandomNumberGenerator& __urng)
 8006260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	const __uctype __urange
 8006262:	e9d0 2300 	ldrd	r2, r3, [r0]
 8006266:	1a9b      	subs	r3, r3, r2
	if (__urngrange > __urange)
 8006268:	1c5a      	adds	r2, r3, #1
	operator()(_UniformRandomNumberGenerator& __urng)
 800626a:	4605      	mov	r5, r0
 800626c:	460e      	mov	r6, r1
	if (__urngrange > __urange)
 800626e:	d010      	beq.n	8006292 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_+0x32>
	    const __uctype __uerange = __urange + 1; // __urange can be zero
 8006270:	3301      	adds	r3, #1
	    const __uctype __scaling = __urngrange / __uerange;
 8006272:	f04f 30ff 	mov.w	r0, #4294967295
 8006276:	fbb0 f7f3 	udiv	r7, r0, r3
	    const __uctype __past = __uerange * __scaling;
 800627a:	fb07 f403 	mul.w	r4, r7, r3
	      __ret = __uctype(__urng()) - __urngmin;
 800627e:	4630      	mov	r0, r6
 8006280:	f7ff f8ac 	bl	80053dc <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
	    while (__ret >= __past);
 8006284:	4284      	cmp	r4, r0
 8006286:	d9fa      	bls.n	800627e <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_+0x1e>
	    __ret /= __scaling;
 8006288:	fbb0 f0f7 	udiv	r0, r0, r7
	return __ret + __param.a();
 800628c:	682b      	ldr	r3, [r5, #0]
        { return this->operator()(__urng, _M_param); }
 800628e:	4418      	add	r0, r3
 8006290:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	  __ret = __uctype(__urng()) - __urngmin;
 8006292:	4608      	mov	r0, r1
 8006294:	f7ff f8a2 	bl	80053dc <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
 8006298:	e7f8      	b.n	800628c <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_+0x2c>
	...

0800629c <_Z15randomIndexShipPA10_ii>:
std::tuple<int, int, int> randomIndexShip(int board[][10], int size_ship) {
 800629c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80062a0:	f5ad 5d9c 	sub.w	sp, sp, #4992	; 0x1380
 80062a4:	b086      	sub	sp, #24
 80062a6:	4691      	mov	r9, r2
 80062a8:	4a3d      	ldr	r2, [pc, #244]	; (80063a0 <_Z15randomIndexShipPA10_ii+0x104>)
	: allocator_type(__a), _M_p(__dat) { }
 80062aa:	f60d 14d4 	addw	r4, sp, #2516	; 0x9d4
 80062ae:	4605      	mov	r5, r0
 80062b0:	4688      	mov	r8, r1
 80062b2:	f60d 10dc 	addw	r0, sp, #2524	; 0x9dc
 80062b6:	1fd1      	subs	r1, r2, #7
 80062b8:	6020      	str	r0, [r4, #0]
 80062ba:	f01a f92e 	bl	802051a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
      { _M_string_length = __length; }
 80062be:	2307      	movs	r3, #7
 80062c0:	6063      	str	r3, [r4, #4]
 80062c2:	6823      	ldr	r3, [r4, #0]
 80062c4:	2200      	movs	r2, #0
 80062c6:	71da      	strb	r2, [r3, #7]
    random_device() { _M_init("default"); }
 80062c8:	4621      	mov	r1, r4
 80062ca:	a804      	add	r0, sp, #16
 80062cc:	f01a f902 	bl	80204d4 <_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
      { _M_dispose(); }
 80062d0:	4620      	mov	r0, r4
 80062d2:	f01a f90e 	bl	80204f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    { return this->_M_getval(); }
 80062d6:	a804      	add	r0, sp, #16
 80062d8:	f01a f8fe 	bl	80204d8 <_ZNSt13random_device9_M_getvalEv>
      _M_x[0] = __detail::__mod<_UIntType,
 80062dc:	6020      	str	r0, [r4, #0]
	  __x *= __f;
 80062de:	4831      	ldr	r0, [pc, #196]	; (80063a4 <_Z15randomIndexShipPA10_ii+0x108>)
 80062e0:	4621      	mov	r1, r4
      for (size_t __i = 1; __i < state_size; ++__i)
 80062e2:	2201      	movs	r2, #1
	  _UIntType __x = _M_x[__i - 1];
 80062e4:	680b      	ldr	r3, [r1, #0]
	  __x ^= __x >> (__w - 2);
 80062e6:	ea83 7393 	eor.w	r3, r3, r3, lsr #30
	  __x += __detail::__mod<_UIntType, __n>(__i);
 80062ea:	fb00 2303 	mla	r3, r0, r3, r2
      for (size_t __i = 1; __i < state_size; ++__i)
 80062ee:	3201      	adds	r2, #1
 80062f0:	f5b2 7f1c 	cmp.w	r2, #624	; 0x270
	  _M_x[__i] = __detail::__mod<_UIntType,
 80062f4:	f841 3f04 	str.w	r3, [r1, #4]!
      for (size_t __i = 1; __i < state_size; ++__i)
 80062f8:	d1f4      	bne.n	80062e4 <_Z15randomIndexShipPA10_ii+0x48>
	: _M_a(__a), _M_b(__b)
 80062fa:	466b      	mov	r3, sp
      _M_p = state_size;
 80062fc:	f8c4 29c0 	str.w	r2, [r4, #2496]	; 0x9c0
 8006300:	2109      	movs	r1, #9
 8006302:	2200      	movs	r2, #0
 8006304:	e9c3 2100 	strd	r2, r1, [r3]
 8006308:	9202      	str	r2, [sp, #8]
 800630a:	2201      	movs	r2, #1
 800630c:	ab02      	add	r3, sp, #8
						if (board[x][y + i] != 0) {
 800630e:	f04f 0a28 	mov.w	sl, #40	; 0x28
 8006312:	605a      	str	r2, [r3, #4]
		x = disIndex(gen);
 8006314:	4621      	mov	r1, r4
 8006316:	4668      	mov	r0, sp
 8006318:	f7ff ffa2 	bl	8006260 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_>
		y = disIndex(gen);
 800631c:	4621      	mov	r1, r4
		x = disIndex(gen);
 800631e:	4606      	mov	r6, r0
		y = disIndex(gen);
 8006320:	4668      	mov	r0, sp
 8006322:	f7ff ff9d 	bl	8006260 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_>
		direction = disDirec(gen);
 8006326:	4621      	mov	r1, r4
		y = disIndex(gen);
 8006328:	4607      	mov	r7, r0
		direction = disDirec(gen);
 800632a:	a802      	add	r0, sp, #8
 800632c:	f7ff ff98 	bl	8006260 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_>
			int value = direction % 2;
 8006330:	2800      	cmp	r0, #0
 8006332:	f000 0301 	and.w	r3, r0, #1
 8006336:	4619      	mov	r1, r3
						if (board[x][y + i] != 0) {
 8006338:	fb0a f206 	mul.w	r2, sl, r6
			int value = direction % 2;
 800633c:	bfb8      	it	lt
 800633e:	4259      	neglt	r1, r3
			switch (value) {
 8006340:	b1a3      	cbz	r3, 800636c <_Z15randomIndexShipPA10_ii+0xd0>
 8006342:	2901      	cmp	r1, #1
 8006344:	d1e6      	bne.n	8006314 <_Z15randomIndexShipPA10_ii+0x78>
				if (x + size_ship < 10) {
 8006346:	eb06 0309 	add.w	r3, r6, r9
 800634a:	2b09      	cmp	r3, #9
 800634c:	dce2      	bgt.n	8006314 <_Z15randomIndexShipPA10_ii+0x78>
 800634e:	230a      	movs	r3, #10
 8006350:	fb03 7306 	mla	r3, r3, r6, r7
 8006354:	eb08 0383 	add.w	r3, r8, r3, lsl #2
					for (int i = 0; i < size_ship; i++) {
 8006358:	2200      	movs	r2, #0
 800635a:	454a      	cmp	r2, r9
 800635c:	da16      	bge.n	800638c <_Z15randomIndexShipPA10_ii+0xf0>
						if (board[x + i][y] != 0) {
 800635e:	fb0a f002 	mul.w	r0, sl, r2
 8006362:	5818      	ldr	r0, [r3, r0]
 8006364:	2800      	cmp	r0, #0
 8006366:	d1d5      	bne.n	8006314 <_Z15randomIndexShipPA10_ii+0x78>
					for (int i = 0; i < size_ship; i++) {
 8006368:	3201      	adds	r2, #1
 800636a:	e7f6      	b.n	800635a <_Z15randomIndexShipPA10_ii+0xbe>
				if (y + size_ship < 10) {
 800636c:	eb07 0109 	add.w	r1, r7, r9
 8006370:	2909      	cmp	r1, #9
 8006372:	dccf      	bgt.n	8006314 <_Z15randomIndexShipPA10_ii+0x78>
 8006374:	eb02 0287 	add.w	r2, r2, r7, lsl #2
 8006378:	4442      	add	r2, r8
					for (int i = 0; i < size_ship; i++) {
 800637a:	454b      	cmp	r3, r9
 800637c:	da05      	bge.n	800638a <_Z15randomIndexShipPA10_ii+0xee>
						if (board[x][y + i] != 0) {
 800637e:	f852 1b04 	ldr.w	r1, [r2], #4
 8006382:	2900      	cmp	r1, #0
 8006384:	d1c6      	bne.n	8006314 <_Z15randomIndexShipPA10_ii+0x78>
					for (int i = 0; i < size_ship; i++) {
 8006386:	3301      	adds	r3, #1
 8006388:	e7f7      	b.n	800637a <_Z15randomIndexShipPA10_ii+0xde>
 800638a:	2100      	movs	r1, #0
}
 800638c:	4628      	mov	r0, r5
      constexpr _Head_base(const _Head_base&) = default;
      constexpr _Head_base(_Head_base&&) = default;

      template<typename _UHead>
        constexpr _Head_base(_UHead&& __h)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
 800638e:	e9c5 1700 	strd	r1, r7, [r5]
 8006392:	60ae      	str	r6, [r5, #8]
 8006394:	f50d 5d9c 	add.w	sp, sp, #4992	; 0x1380
 8006398:	b006      	add	sp, #24
 800639a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800639e:	bf00      	nop
 80063a0:	08022ec7 	.word	0x08022ec7
 80063a4:	6c078965 	.word	0x6c078965

080063a8 <_ZN18OpponentScreenView11setupScreenEv>:
{
 80063a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063ac:	ed2d 8b02 	vpush	{d8}
 80063b0:	4604      	mov	r4, r0
 80063b2:	b089      	sub	sp, #36	; 0x24
    OpponentScreenViewBase::setupScreen();
 80063b4:	f7fd fda1 	bl	8003efa <_ZN22OpponentScreenViewBase11setupScreenEv>
	x = 0;
 80063b8:	2300      	movs	r3, #0
 80063ba:	f8a4 3b9c 	strh.w	r3, [r4, #2972]	; 0xb9c
		return model->getGameMode();
 80063be:	6be3      	ldr	r3, [r4, #60]	; 0x3c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80063c0:	f8df 833c 	ldr.w	r8, [pc, #828]	; 8006700 <_ZN18OpponentScreenView11setupScreenEv+0x358>
        return this->gameMode;
 80063c4:	689b      	ldr	r3, [r3, #8]
	gameMode = presenter->getGameMode();
 80063c6:	f504 5580 	add.w	r5, r4, #4096	; 0x1000
 80063ca:	f8d3 364c 	ldr.w	r3, [r3, #1612]	; 0x64c
 80063ce:	f8c5 3e78 	str.w	r3, [r5, #3704]	; 0xe78
 80063d2:	f8d8 3000 	ldr.w	r3, [r8]
	Unicode::snprintf(txtRemainShip1Buffer, TXTREMAINSHIP1_SIZE, "%s", touchgfx::TypedText(T_DESTROYER).getText());
 80063d6:	f604 097c 	addw	r9, r4, #2172	; 0x87c
 80063da:	b92b      	cbnz	r3, 80063e8 <_ZN18OpponentScreenView11setupScreenEv+0x40>
 80063dc:	4bc0      	ldr	r3, [pc, #768]	; (80066e0 <_ZN18OpponentScreenView11setupScreenEv+0x338>)
 80063de:	4ac1      	ldr	r2, [pc, #772]	; (80066e4 <_ZN18OpponentScreenView11setupScreenEv+0x33c>)
 80063e0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063e2:	48c1      	ldr	r0, [pc, #772]	; (80066e8 <_ZN18OpponentScreenView11setupScreenEv+0x340>)
 80063e4:	f01a f8d0 	bl	8020588 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80063e8:	4fc0      	ldr	r7, [pc, #768]	; (80066ec <_ZN18OpponentScreenView11setupScreenEv+0x344>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063ea:	883b      	ldrh	r3, [r7, #0]
 80063ec:	2b0f      	cmp	r3, #15
 80063ee:	d803      	bhi.n	80063f8 <_ZN18OpponentScreenView11setupScreenEv+0x50>
 80063f0:	4bbf      	ldr	r3, [pc, #764]	; (80066f0 <_ZN18OpponentScreenView11setupScreenEv+0x348>)
 80063f2:	4abc      	ldr	r2, [pc, #752]	; (80066e4 <_ZN18OpponentScreenView11setupScreenEv+0x33c>)
 80063f4:	2161      	movs	r1, #97	; 0x61
 80063f6:	e7f4      	b.n	80063e2 <_ZN18OpponentScreenView11setupScreenEv+0x3a>
        return texts->getText(typedTextId);
 80063f8:	4ebe      	ldr	r6, [pc, #760]	; (80066f4 <_ZN18OpponentScreenView11setupScreenEv+0x34c>)
 80063fa:	210f      	movs	r1, #15
 80063fc:	6830      	ldr	r0, [r6, #0]
 80063fe:	f7fe fda5 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 8006402:	4abd      	ldr	r2, [pc, #756]	; (80066f8 <_ZN18OpponentScreenView11setupScreenEv+0x350>)
 8006404:	4603      	mov	r3, r0
 8006406:	2132      	movs	r1, #50	; 0x32
 8006408:	4648      	mov	r0, r9
 800640a:	f00c fafb 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800640e:	f8d8 3000 	ldr.w	r3, [r8]
	Unicode::snprintf(txtRemainShip2Buffer, TXTREMAINSHIP2_SIZE, "%s", touchgfx::TypedText(T_CRUISER).getText());
 8006412:	f604 1944 	addw	r9, r4, #2372	; 0x944
 8006416:	2b00      	cmp	r3, #0
 8006418:	d0e0      	beq.n	80063dc <_ZN18OpponentScreenView11setupScreenEv+0x34>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800641a:	883b      	ldrh	r3, [r7, #0]
 800641c:	2b0e      	cmp	r3, #14
 800641e:	d9e7      	bls.n	80063f0 <_ZN18OpponentScreenView11setupScreenEv+0x48>
        return texts->getText(typedTextId);
 8006420:	210e      	movs	r1, #14
 8006422:	6830      	ldr	r0, [r6, #0]
 8006424:	f7fe fd92 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 8006428:	4ab3      	ldr	r2, [pc, #716]	; (80066f8 <_ZN18OpponentScreenView11setupScreenEv+0x350>)
 800642a:	4603      	mov	r3, r0
 800642c:	2132      	movs	r1, #50	; 0x32
 800642e:	4648      	mov	r0, r9
 8006430:	f00c fae8 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006434:	f8d8 3000 	ldr.w	r3, [r8]
	Unicode::snprintf(txtRemainShip3Buffer, TXTREMAINSHIP3_SIZE, "%s", touchgfx::TypedText(T_BATTLESHIP).getText());
 8006438:	f504 690e 	add.w	r9, r4, #2272	; 0x8e0
 800643c:	2b00      	cmp	r3, #0
 800643e:	d0cd      	beq.n	80063dc <_ZN18OpponentScreenView11setupScreenEv+0x34>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006440:	883b      	ldrh	r3, [r7, #0]
 8006442:	2b0d      	cmp	r3, #13
 8006444:	d9d4      	bls.n	80063f0 <_ZN18OpponentScreenView11setupScreenEv+0x48>
        return texts->getText(typedTextId);
 8006446:	210d      	movs	r1, #13
 8006448:	6830      	ldr	r0, [r6, #0]
 800644a:	f7fe fd7f 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800644e:	4aaa      	ldr	r2, [pc, #680]	; (80066f8 <_ZN18OpponentScreenView11setupScreenEv+0x350>)
 8006450:	4603      	mov	r3, r0
 8006452:	2132      	movs	r1, #50	; 0x32
 8006454:	4648      	mov	r0, r9
 8006456:	f00c fad5 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800645a:	f8d8 3000 	ldr.w	r3, [r8]
	Unicode::snprintf(txtRemainShip4Buffer, TXTREMAINSHIP4_SIZE, "%s", touchgfx::TypedText(T_AIRCRAFT_CARRIER).getText());
 800645e:	f604 19a8 	addw	r9, r4, #2472	; 0x9a8
 8006462:	2b00      	cmp	r3, #0
 8006464:	d0ba      	beq.n	80063dc <_ZN18OpponentScreenView11setupScreenEv+0x34>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006466:	883b      	ldrh	r3, [r7, #0]
 8006468:	2b0c      	cmp	r3, #12
 800646a:	d9c1      	bls.n	80063f0 <_ZN18OpponentScreenView11setupScreenEv+0x48>
        return texts->getText(typedTextId);
 800646c:	210c      	movs	r1, #12
 800646e:	6830      	ldr	r0, [r6, #0]
 8006470:	f7fe fd6c 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 8006474:	4aa0      	ldr	r2, [pc, #640]	; (80066f8 <_ZN18OpponentScreenView11setupScreenEv+0x350>)
 8006476:	4603      	mov	r3, r0
 8006478:	2132      	movs	r1, #50	; 0x32
 800647a:	4648      	mov	r0, r9
 800647c:	f00c fac2 	bl	8012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	if (gameMode == 0) {
 8006480:	f8d5 3e78 	ldr.w	r3, [r5, #3704]	; 0xe78
 8006484:	2b00      	cmp	r3, #0
 8006486:	d141      	bne.n	800650c <_ZN18OpponentScreenView11setupScreenEv+0x164>
		for (int i = 2; i <= 5; i++) {
 8006488:	f04f 0802 	mov.w	r8, #2
			std::tie(x, y, direction) = randomIndexShip(board, i);
 800648c:	f604 270c 	addw	r7, r4, #2572	; 0xa0c
 8006490:	260a      	movs	r6, #10
 8006492:	4642      	mov	r2, r8
 8006494:	4639      	mov	r1, r7
 8006496:	a805      	add	r0, sp, #20
 8006498:	f7ff ff00 	bl	800629c <_Z15randomIndexShipPA10_ii>
			if (i == 2) {
 800649c:	f1b8 0f02 	cmp.w	r8, #2
      template<typename _UHead, typename... _UTails>
	_GLIBCXX20_CONSTEXPR
        void
        _M_assign(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
        {
	  _M_head(*this) = std::forward<_UHead>
 80064a0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
	_GLIBCXX20_CONSTEXPR
        void
        _M_assign(_Tuple_impl<_Idx, _UHead>&& __in)
        {
	  _M_head(*this)
	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
 80064a4:	9805      	ldr	r0, [sp, #20]
 80064a6:	f040 80bc 	bne.w	8006622 <_ZN18OpponentScreenView11setupScreenEv+0x27a>
				switch (direction) {
 80064aa:	2800      	cmp	r0, #0
 80064ac:	f000 8097 	beq.w	80065de <_ZN18OpponentScreenView11setupScreenEv+0x236>
 80064b0:	2801      	cmp	r0, #1
 80064b2:	d121      	bne.n	80064f8 <_ZN18OpponentScreenView11setupScreenEv+0x150>
		model->setPlayer2Desk(i, j, status);
 80064b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80064b6:	6898      	ldr	r0, [r3, #8]
		player2Desk[i][j] = status;
 80064b8:	fb06 1302 	mla	r3, r6, r2, r1
 80064bc:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
						board[x + j][y] = i;
 80064c0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80064c4:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 80064c8:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
 80064cc:	fb02 6306 	mla	r3, r2, r6, r6
 80064d0:	440b      	add	r3, r1
 80064d2:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
 80064d6:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80064da:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 80064de:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
	return (83 + y * WIDTH_SQUARE);
 80064e2:	2317      	movs	r3, #23
 80064e4:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 80064e6:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 80064e8:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 80064ea:	3105      	adds	r1, #5
					boat2_r.setXY(getXFromIndex(y), getYFromIndex(x));
 80064ec:	b212      	sxth	r2, r2
 80064ee:	b209      	sxth	r1, r1
 80064f0:	f504 7077 	add.w	r0, r4, #988	; 0x3dc
					boat5.setXY(getXFromIndex(y), getYFromIndex(x));
 80064f4:	f7fb ff60 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
		for (int i = 2; i <= 5; i++) {
 80064f8:	f108 0801 	add.w	r8, r8, #1
 80064fc:	f1b8 0f06 	cmp.w	r8, #6
 8006500:	d1c7      	bne.n	8006492 <_ZN18OpponentScreenView11setupScreenEv+0xea>
		model->setGameMode(gameMode);
 8006502:	6be3      	ldr	r3, [r4, #60]	; 0x3c
        this->gameMode = gameMode;
 8006504:	689b      	ldr	r3, [r3, #8]
 8006506:	2201      	movs	r2, #1
 8006508:	f8c3 264c 	str.w	r2, [r3, #1612]	; 0x64c
	presenter->getDesk(desk);
 800650c:	f504 56e6 	add.w	r6, r4, #7360	; 0x1cc0
 8006510:	3610      	adds	r6, #16
 8006512:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8006514:	4631      	mov	r1, r6
 8006516:	f7ff fca6 	bl	8005e66 <_ZN23OpponentScreenPresenter7getDeskEPA10_l>
	for (int i = 0; i < 10; i++) {
 800651a:	f504 6b3a 	add.w	fp, r4, #2976	; 0xba0
 800651e:	9603      	str	r6, [sp, #12]
 8006520:	f04f 0800 	mov.w	r8, #0
		for (int j = 0; j < 10; j++) {
 8006524:	eb08 0748 	add.w	r7, r8, r8, lsl #1
 8006528:	ebc8 07c7 	rsb	r7, r8, r7, lsl #3
 800652c:	3753      	adds	r7, #83	; 0x53
 800652e:	b23b      	sxth	r3, r7
 8006530:	ee08 3a10 	vmov	s16, r3
	for (int i = 0; i < 10; i++) {
 8006534:	9f03      	ldr	r7, [sp, #12]
 8006536:	f5ab 6a3a 	sub.w	sl, fp, #2976	; 0xba0
 800653a:	465e      	mov	r6, fp
 800653c:	f04f 0905 	mov.w	r9, #5
			if(desk[i][j] == 2)
 8006540:	f857 3b04 	ldr.w	r3, [r7], #4
 8006544:	2b02      	cmp	r3, #2
 8006546:	f040 8159 	bne.w	80067fc <_ZN18OpponentScreenView11setupScreenEv+0x454>
				ship[0]++;
 800654a:	f8d5 3e68 	ldr.w	r3, [r5, #3688]	; 0xe68
 800654e:	3301      	adds	r3, #1
 8006550:	f8c5 3e68 	str.w	r3, [r5, #3688]	; 0xe68
			boxes[i][j].setPosition(getXFromIndex(j), getYFromIndex(i), 23, 23);
 8006554:	2317      	movs	r3, #23
 8006556:	ee18 2a10 	vmov	r2, s16
 800655a:	fa0f f189 	sxth.w	r1, r9
 800655e:	4630      	mov	r0, r6
 8006560:	9300      	str	r3, [sp, #0]
 8006562:	f7fb ff36 	bl	80023d2 <_ZN8touchgfx8Drawable11setPositionEssss>
					touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006566:	f8da 3ba0 	ldr.w	r3, [sl, #2976]	; 0xba0
			boxes[i][j].setScalingAlgorithm(
 800656a:	4630      	mov	r0, r6
 800656c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800656e:	2100      	movs	r1, #0
		for (int j = 0; j < 10; j++) {
 8006570:	f109 0917 	add.w	r9, r9, #23
			boxes[i][j].setScalingAlgorithm(
 8006574:	4798      	blx	r3
		for (int j = 0; j < 10; j++) {
 8006576:	fa1f f989 	uxth.w	r9, r9
        container.add(d);
 800657a:	4631      	mov	r1, r6
 800657c:	1d20      	adds	r0, r4, #4
 800657e:	f005 fab8 	bl	800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006582:	f1b9 0feb 	cmp.w	r9, #235	; 0xeb
 8006586:	f106 062c 	add.w	r6, r6, #44	; 0x2c
 800658a:	f10a 0a2c 	add.w	sl, sl, #44	; 0x2c
 800658e:	d1d7      	bne.n	8006540 <_ZN18OpponentScreenView11setupScreenEv+0x198>
	for (int i = 0; i < 10; i++) {
 8006590:	9b03      	ldr	r3, [sp, #12]
 8006592:	f108 0801 	add.w	r8, r8, #1
 8006596:	3328      	adds	r3, #40	; 0x28
 8006598:	f1b8 0f0a 	cmp.w	r8, #10
 800659c:	9303      	str	r3, [sp, #12]
 800659e:	f50b 7bdc 	add.w	fp, fp, #440	; 0x1b8
 80065a2:	d1bf      	bne.n	8006524 <_ZN18OpponentScreenView11setupScreenEv+0x17c>
		if (ship[0] == 0) {
 80065a4:	f8d5 1e68 	ldr.w	r1, [r5, #3688]	; 0xe68
		if (ship[1] == 0) {
 80065a8:	f8d5 0e6c 	ldr.w	r0, [r5, #3692]	; 0xe6c
		if (ship[2] == 0) {
 80065ac:	f8d5 6e70 	ldr.w	r6, [r5, #3696]	; 0xe70
 80065b0:	4b52      	ldr	r3, [pc, #328]	; (80066fc <_ZN18OpponentScreenView11setupScreenEv+0x354>)
		if (ship[3] == 0) {
 80065b2:	f8d5 5e74 	ldr.w	r5, [r5, #3700]	; 0xe74
 80065b6:	2204      	movs	r2, #4
		if (ship[0] == 0) {
 80065b8:	b909      	cbnz	r1, 80065be <_ZN18OpponentScreenView11setupScreenEv+0x216>
 80065ba:	f8c4 3750 	str.w	r3, [r4, #1872]	; 0x750
		if (ship[1] == 0) {
 80065be:	b908      	cbnz	r0, 80065c4 <_ZN18OpponentScreenView11setupScreenEv+0x21c>
 80065c0:	f8c4 37e8 	str.w	r3, [r4, #2024]	; 0x7e8
		if (ship[2] == 0) {
 80065c4:	b90e      	cbnz	r6, 80065ca <_ZN18OpponentScreenView11setupScreenEv+0x222>
 80065c6:	f8c4 379c 	str.w	r3, [r4, #1948]	; 0x79c
		if (ship[3] == 0) {
 80065ca:	b90d      	cbnz	r5, 80065d0 <_ZN18OpponentScreenView11setupScreenEv+0x228>
 80065cc:	f8c4 3834 	str.w	r3, [r4, #2100]	; 0x834
	for(int i = 0; i < 4; i++)
 80065d0:	3a01      	subs	r2, #1
 80065d2:	d1f1      	bne.n	80065b8 <_ZN18OpponentScreenView11setupScreenEv+0x210>
}
 80065d4:	b009      	add	sp, #36	; 0x24
 80065d6:	ecbd 8b02 	vpop	{d8}
 80065da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		model->setPlayer2Desk(i, j, status);
 80065de:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80065e0:	f8d3 c008 	ldr.w	ip, [r3, #8]
		player2Desk[i][j] = status;
 80065e4:	fb06 f302 	mul.w	r3, r6, r2
 80065e8:	1858      	adds	r0, r3, r1
 80065ea:	f500 7e97 	add.w	lr, r0, #302	; 0x12e
						board[x][y + j] = i;
 80065ee:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 80065f2:	f84c 802e 	str.w	r8, [ip, lr, lsl #2]
 80065f6:	f8c0 8a0c 	str.w	r8, [r0, #2572]	; 0xa0c
						presenter->setDesk(x, y + j, i);
 80065fa:	1c48      	adds	r0, r1, #1
 80065fc:	4403      	add	r3, r0
 80065fe:	f503 7097 	add.w	r0, r3, #302	; 0x12e
						board[x][y + j] = i;
 8006602:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006606:	f84c 8020 	str.w	r8, [ip, r0, lsl #2]
 800660a:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
	return (83 + y * WIDTH_SQUARE);
 800660e:	2317      	movs	r3, #23
 8006610:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 8006612:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 8006614:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 8006616:	3105      	adds	r1, #5
					boat2.setXY(getXFromIndex(y), getYFromIndex(x));
 8006618:	b212      	sxth	r2, r2
 800661a:	b209      	sxth	r1, r1
 800661c:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8006620:	e768      	b.n	80064f4 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
			} else if (i == 3) {
 8006622:	f1b8 0f03 	cmp.w	r8, #3
 8006626:	d16d      	bne.n	8006704 <_ZN18OpponentScreenView11setupScreenEv+0x35c>
				switch (direction) {
 8006628:	b370      	cbz	r0, 8006688 <_ZN18OpponentScreenView11setupScreenEv+0x2e0>
 800662a:	2801      	cmp	r0, #1
 800662c:	f47f af64 	bne.w	80064f8 <_ZN18OpponentScreenView11setupScreenEv+0x150>
 8006630:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006632:	6898      	ldr	r0, [r3, #8]
 8006634:	fb06 1302 	mla	r3, r6, r2, r1
 8006638:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
						board[x + j][y] = i;
 800663c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006640:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 8006644:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
 8006648:	fb02 6306 	mla	r3, r2, r6, r6
 800664c:	440b      	add	r3, r1
 800664e:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
 8006652:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006656:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 800665a:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
						presenter->setDesk(x + j, y, i);
 800665e:	1c93      	adds	r3, r2, #2
 8006660:	fb06 1303 	mla	r3, r6, r3, r1
 8006664:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
						board[x + j][y] = i;
 8006668:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800666c:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 8006670:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
	return (83 + y * WIDTH_SQUARE);
 8006674:	2317      	movs	r3, #23
 8006676:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 8006678:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 800667a:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 800667c:	3105      	adds	r1, #5
					boat3_r.setXY(getXFromIndex(y), getYFromIndex(x));
 800667e:	b212      	sxth	r2, r2
 8006680:	b209      	sxth	r1, r1
 8006682:	f204 6044 	addw	r0, r4, #1604	; 0x644
 8006686:	e735      	b.n	80064f4 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
 8006688:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800668a:	f8d3 c008 	ldr.w	ip, [r3, #8]
 800668e:	fb06 f302 	mul.w	r3, r6, r2
 8006692:	1858      	adds	r0, r3, r1
 8006694:	f500 7e97 	add.w	lr, r0, #302	; 0x12e
						board[x][y + j] = i;
 8006698:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 800669c:	f84c 802e 	str.w	r8, [ip, lr, lsl #2]
 80066a0:	f8c0 8a0c 	str.w	r8, [r0, #2572]	; 0xa0c
						presenter->setDesk(x, y + j, i);
 80066a4:	1c48      	adds	r0, r1, #1
 80066a6:	4418      	add	r0, r3
 80066a8:	f500 7e97 	add.w	lr, r0, #302	; 0x12e
						board[x][y + j] = i;
 80066ac:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 80066b0:	f84c 802e 	str.w	r8, [ip, lr, lsl #2]
 80066b4:	f8c0 8a0c 	str.w	r8, [r0, #2572]	; 0xa0c
						presenter->setDesk(x, y + j, i);
 80066b8:	1c88      	adds	r0, r1, #2
 80066ba:	4403      	add	r3, r0
 80066bc:	f503 7097 	add.w	r0, r3, #302	; 0x12e
						board[x][y + j] = i;
 80066c0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80066c4:	f84c 8020 	str.w	r8, [ip, r0, lsl #2]
 80066c8:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
	return (83 + y * WIDTH_SQUARE);
 80066cc:	2317      	movs	r3, #23
 80066ce:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 80066d0:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 80066d2:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 80066d4:	3105      	adds	r1, #5
					 boat3.setXY(getXFromIndex(y), getYFromIndex(x));
 80066d6:	b212      	sxth	r2, r2
 80066d8:	b209      	sxth	r1, r1
 80066da:	f504 704b 	add.w	r0, r4, #812	; 0x32c
 80066de:	e709      	b.n	80064f4 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
 80066e0:	0802206c 	.word	0x0802206c
 80066e4:	0802216e 	.word	0x0802216e
 80066e8:	080220e9 	.word	0x080220e9
 80066ec:	20015018 	.word	0x20015018
 80066f0:	08022130 	.word	0x08022130
 80066f4:	20015020 	.word	0x20015020
 80066f8:	080221a6 	.word	0x080221a6
 80066fc:	ffff0000 	.word	0xffff0000
 8006700:	20015014 	.word	0x20015014
			} else if (i == 4) {
 8006704:	f1b8 0f04 	cmp.w	r8, #4
 8006708:	d13b      	bne.n	8006782 <_ZN18OpponentScreenView11setupScreenEv+0x3da>
				switch (direction) {
 800670a:	b1f0      	cbz	r0, 800674a <_ZN18OpponentScreenView11setupScreenEv+0x3a2>
 800670c:	2801      	cmp	r0, #1
 800670e:	f47f aef3 	bne.w	80064f8 <_ZN18OpponentScreenView11setupScreenEv+0x150>
 8006712:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006714:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8006718:	fb06 1302 	mla	r3, r6, r2, r1
 800671c:	009b      	lsls	r3, r3, #2
 800671e:	4640      	mov	r0, r8
 8006720:	f50c 6c97 	add.w	ip, ip, #1208	; 0x4b8
 8006724:	46c6      	mov	lr, r8
					for (int j = 0; j < i; j++) {
 8006726:	3801      	subs	r0, #1
 8006728:	f84c e003 	str.w	lr, [ip, r3]
						board[x + j][y] = i;
 800672c:	f847 e003 	str.w	lr, [r7, r3]
					for (int j = 0; j < i; j++) {
 8006730:	f103 0328 	add.w	r3, r3, #40	; 0x28
 8006734:	d1f7      	bne.n	8006726 <_ZN18OpponentScreenView11setupScreenEv+0x37e>
	return (83 + y * WIDTH_SQUARE);
 8006736:	2317      	movs	r3, #23
 8006738:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 800673a:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 800673c:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 800673e:	3105      	adds	r1, #5
					boat4_r.setXY(getXFromIndex(y), getYFromIndex(x));
 8006740:	b212      	sxth	r2, r2
 8006742:	b209      	sxth	r1, r1
 8006744:	f504 60ad 	add.w	r0, r4, #1384	; 0x568
 8006748:	e6d4      	b.n	80064f4 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
 800674a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800674c:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8006750:	fb06 1302 	mla	r3, r6, r2, r1
 8006754:	009b      	lsls	r3, r3, #2
 8006756:	f50c 6c97 	add.w	ip, ip, #1208	; 0x4b8
 800675a:	46c6      	mov	lr, r8
					for (int j = 0; j < i; j++) {
 800675c:	3001      	adds	r0, #1
 800675e:	2804      	cmp	r0, #4
 8006760:	f84c e003 	str.w	lr, [ip, r3]
						board[x][y + j] = i;
 8006764:	f847 e003 	str.w	lr, [r7, r3]
					for (int j = 0; j < i; j++) {
 8006768:	f103 0304 	add.w	r3, r3, #4
 800676c:	d1f6      	bne.n	800675c <_ZN18OpponentScreenView11setupScreenEv+0x3b4>
	return (83 + y * WIDTH_SQUARE);
 800676e:	2317      	movs	r3, #23
 8006770:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 8006772:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 8006774:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 8006776:	3105      	adds	r1, #5
					boat4.setXY(getXFromIndex(y), getYFromIndex(x));
 8006778:	b212      	sxth	r2, r2
 800677a:	b209      	sxth	r1, r1
 800677c:	f504 7014 	add.w	r0, r4, #592	; 0x250
 8006780:	e6b8      	b.n	80064f4 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
				switch (direction) {
 8006782:	b1f0      	cbz	r0, 80067c2 <_ZN18OpponentScreenView11setupScreenEv+0x41a>
 8006784:	2801      	cmp	r0, #1
 8006786:	f47f aeb7 	bne.w	80064f8 <_ZN18OpponentScreenView11setupScreenEv+0x150>
 800678a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800678c:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8006790:	2005      	movs	r0, #5
 8006792:	fb06 1302 	mla	r3, r6, r2, r1
 8006796:	009b      	lsls	r3, r3, #2
 8006798:	f50c 6c97 	add.w	ip, ip, #1208	; 0x4b8
 800679c:	4686      	mov	lr, r0
					for (int j = 0; j < i; j++) {
 800679e:	3801      	subs	r0, #1
 80067a0:	f84c e003 	str.w	lr, [ip, r3]
						board[x + j][y] = i;
 80067a4:	f847 e003 	str.w	lr, [r7, r3]
					for (int j = 0; j < i; j++) {
 80067a8:	f103 0328 	add.w	r3, r3, #40	; 0x28
 80067ac:	d1f7      	bne.n	800679e <_ZN18OpponentScreenView11setupScreenEv+0x3f6>
	return (83 + y * WIDTH_SQUARE);
 80067ae:	2317      	movs	r3, #23
 80067b0:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 80067b2:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 80067b4:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 80067b6:	3105      	adds	r1, #5
					 boat5_r.setXY(getXFromIndex(y), getYFromIndex(x));
 80067b8:	b212      	sxth	r2, r2
 80067ba:	b209      	sxth	r1, r1
 80067bc:	f504 608c 	add.w	r0, r4, #1120	; 0x460
 80067c0:	e698      	b.n	80064f4 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
 80067c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80067c4:	f8d3 c008 	ldr.w	ip, [r3, #8]
 80067c8:	fb06 1302 	mla	r3, r6, r2, r1
 80067cc:	009b      	lsls	r3, r3, #2
 80067ce:	f50c 6c97 	add.w	ip, ip, #1208	; 0x4b8
 80067d2:	f04f 0e05 	mov.w	lr, #5
					for (int j = 0; j < i; j++) {
 80067d6:	3001      	adds	r0, #1
 80067d8:	2805      	cmp	r0, #5
 80067da:	f84c e003 	str.w	lr, [ip, r3]
						board[x][y + j] = i;
 80067de:	f847 e003 	str.w	lr, [r7, r3]
					for (int j = 0; j < i; j++) {
 80067e2:	f103 0304 	add.w	r3, r3, #4
 80067e6:	d1f6      	bne.n	80067d6 <_ZN18OpponentScreenView11setupScreenEv+0x42e>
	return (83 + y * WIDTH_SQUARE);
 80067e8:	2317      	movs	r3, #23
 80067ea:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 80067ec:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 80067ee:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 80067f0:	3105      	adds	r1, #5
					boat5.setXY(getXFromIndex(y), getYFromIndex(x));
 80067f2:	b212      	sxth	r2, r2
 80067f4:	b209      	sxth	r1, r1
 80067f6:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 80067fa:	e67b      	b.n	80064f4 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
			else if(desk[i][j] == 3)
 80067fc:	2b03      	cmp	r3, #3
 80067fe:	d105      	bne.n	800680c <_ZN18OpponentScreenView11setupScreenEv+0x464>
				ship[1]++;
 8006800:	f8d5 3e6c 	ldr.w	r3, [r5, #3692]	; 0xe6c
 8006804:	3301      	adds	r3, #1
 8006806:	f8c5 3e6c 	str.w	r3, [r5, #3692]	; 0xe6c
 800680a:	e6a3      	b.n	8006554 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
			else if(desk[i][j] == 4)
 800680c:	2b04      	cmp	r3, #4
 800680e:	d105      	bne.n	800681c <_ZN18OpponentScreenView11setupScreenEv+0x474>
				ship[2]++;
 8006810:	f8d5 3e70 	ldr.w	r3, [r5, #3696]	; 0xe70
 8006814:	3301      	adds	r3, #1
 8006816:	f8c5 3e70 	str.w	r3, [r5, #3696]	; 0xe70
 800681a:	e69b      	b.n	8006554 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
			else if(desk[i][j] == 5)
 800681c:	2b05      	cmp	r3, #5
 800681e:	d105      	bne.n	800682c <_ZN18OpponentScreenView11setupScreenEv+0x484>
				ship[3]++;
 8006820:	f8d5 3e74 	ldr.w	r3, [r5, #3700]	; 0xe74
 8006824:	3301      	adds	r3, #1
 8006826:	f8c5 3e74 	str.w	r3, [r5, #3700]	; 0xe74
 800682a:	e693      	b.n	8006554 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
			if (desk[i][j] == -2)
 800682c:	1c9a      	adds	r2, r3, #2
 800682e:	d10a      	bne.n	8006846 <_ZN18OpponentScreenView11setupScreenEv+0x49e>
				boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_MISS_GRAY_ID));
 8006830:	f8da 3ba0 	ldr.w	r3, [sl, #2976]	; 0xba0
 8006834:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006836:	f04f 0209 	mov.w	r2, #9
 800683a:	f8ad 2014 	strh.w	r2, [sp, #20]
				boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 800683e:	a905      	add	r1, sp, #20
 8006840:	4630      	mov	r0, r6
 8006842:	4798      	blx	r3
 8006844:	e686      	b.n	8006554 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
			} else if(desk[i][j] == -1) {
 8006846:	3301      	adds	r3, #1
 8006848:	f47f ae84 	bne.w	8006554 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
				boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 800684c:	f8da 3ba0 	ldr.w	r3, [sl, #2976]	; 0xba0
 8006850:	f04f 0207 	mov.w	r2, #7
 8006854:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8006856:	e7f0      	b.n	800683a <_ZN18OpponentScreenView11setupScreenEv+0x492>

08006858 <_ZN5BoardC1Ev>:



#include "Board.hpp"

Board::Board():desk({{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 8006858:	b510      	push	{r4, lr}
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}),
	top(-1)
 800685a:	f44f 72c8 	mov.w	r2, #400	; 0x190
Board::Board():desk({{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 800685e:	4604      	mov	r4, r0
	top(-1)
 8006860:	2100      	movs	r1, #0
 8006862:	f019 ff2d 	bl	80206c0 <memset>
 8006866:	f44f 7248 	mov.w	r2, #800	; 0x320
 800686a:	2100      	movs	r1, #0
 800686c:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 8006870:	f019 ff26 	bl	80206c0 <memset>
 8006874:	f04f 33ff 	mov.w	r3, #4294967295
 8006878:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
{
}
 800687c:	4620      	mov	r0, r4
 800687e:	bd10      	pop	{r4, pc}

08006880 <_ZN5Board4InitEv>:

void Board::Init()
{
	this->selected = 2;
 8006880:	2302      	movs	r3, #2
 8006882:	f8c0 3190 	str.w	r3, [r0, #400]	; 0x190
}
 8006886:	4770      	bx	lr

08006888 <_ZN5Board11setSelectedEl>:
void Board::setSelected(int32_t boat){
	this->selected = boat;
 8006888:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
}
 800688c:	4770      	bx	lr

0800688e <_ZN5Board11getSelectedEv>:
		}
	}
}
int Board::getSelected(){
	return this->selected;
}
 800688e:	f8d0 0190 	ldr.w	r0, [r0, #400]	; 0x190
 8006892:	4770      	bx	lr

08006894 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8006894:	20f0      	movs	r0, #240	; 0xf0
 8006896:	4770      	bx	lr

08006898 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8006898:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800689c:	4770      	bx	lr

0800689e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800689e:	2029      	movs	r0, #41	; 0x29
 80068a0:	f7fb b86c 	b.w	800197c <LCD_IO_WriteReg>

080068a4 <ili9341_DisplayOff>:
 80068a4:	2028      	movs	r0, #40	; 0x28
 80068a6:	f7fb b869 	b.w	800197c <LCD_IO_WriteReg>

080068aa <ili9341_Init>:
{
 80068aa:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80068ac:	f7fb f83a 	bl	8001924 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80068b0:	20ca      	movs	r0, #202	; 0xca
 80068b2:	f7fb f863 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80068b6:	20c3      	movs	r0, #195	; 0xc3
 80068b8:	f7fb f844 	bl	8001944 <LCD_IO_WriteData>
 80068bc:	2008      	movs	r0, #8
 80068be:	f7fb f841 	bl	8001944 <LCD_IO_WriteData>
 80068c2:	2050      	movs	r0, #80	; 0x50
 80068c4:	f7fb f83e 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80068c8:	20cf      	movs	r0, #207	; 0xcf
 80068ca:	f7fb f857 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80068ce:	2000      	movs	r0, #0
 80068d0:	f7fb f838 	bl	8001944 <LCD_IO_WriteData>
 80068d4:	20c1      	movs	r0, #193	; 0xc1
 80068d6:	f7fb f835 	bl	8001944 <LCD_IO_WriteData>
 80068da:	2030      	movs	r0, #48	; 0x30
 80068dc:	f7fb f832 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80068e0:	20ed      	movs	r0, #237	; 0xed
 80068e2:	f7fb f84b 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80068e6:	2064      	movs	r0, #100	; 0x64
 80068e8:	f7fb f82c 	bl	8001944 <LCD_IO_WriteData>
 80068ec:	2003      	movs	r0, #3
 80068ee:	f7fb f829 	bl	8001944 <LCD_IO_WriteData>
 80068f2:	2012      	movs	r0, #18
 80068f4:	f7fb f826 	bl	8001944 <LCD_IO_WriteData>
 80068f8:	2081      	movs	r0, #129	; 0x81
 80068fa:	f7fb f823 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80068fe:	20e8      	movs	r0, #232	; 0xe8
 8006900:	f7fb f83c 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006904:	2085      	movs	r0, #133	; 0x85
 8006906:	f7fb f81d 	bl	8001944 <LCD_IO_WriteData>
 800690a:	2000      	movs	r0, #0
 800690c:	f7fb f81a 	bl	8001944 <LCD_IO_WriteData>
 8006910:	2078      	movs	r0, #120	; 0x78
 8006912:	f7fb f817 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006916:	20cb      	movs	r0, #203	; 0xcb
 8006918:	f7fb f830 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800691c:	2039      	movs	r0, #57	; 0x39
 800691e:	f7fb f811 	bl	8001944 <LCD_IO_WriteData>
 8006922:	202c      	movs	r0, #44	; 0x2c
 8006924:	f7fb f80e 	bl	8001944 <LCD_IO_WriteData>
 8006928:	2000      	movs	r0, #0
 800692a:	f7fb f80b 	bl	8001944 <LCD_IO_WriteData>
 800692e:	2034      	movs	r0, #52	; 0x34
 8006930:	f7fb f808 	bl	8001944 <LCD_IO_WriteData>
 8006934:	2002      	movs	r0, #2
 8006936:	f7fb f805 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800693a:	20f7      	movs	r0, #247	; 0xf7
 800693c:	f7fb f81e 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006940:	2020      	movs	r0, #32
 8006942:	f7fa ffff 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006946:	20ea      	movs	r0, #234	; 0xea
 8006948:	f7fb f818 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800694c:	2000      	movs	r0, #0
 800694e:	f7fa fff9 	bl	8001944 <LCD_IO_WriteData>
 8006952:	2000      	movs	r0, #0
 8006954:	f7fa fff6 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006958:	20b1      	movs	r0, #177	; 0xb1
 800695a:	f7fb f80f 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800695e:	2000      	movs	r0, #0
 8006960:	f7fa fff0 	bl	8001944 <LCD_IO_WriteData>
 8006964:	201b      	movs	r0, #27
 8006966:	f7fa ffed 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800696a:	20b6      	movs	r0, #182	; 0xb6
 800696c:	f7fb f806 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006970:	200a      	movs	r0, #10
 8006972:	f7fa ffe7 	bl	8001944 <LCD_IO_WriteData>
 8006976:	20a2      	movs	r0, #162	; 0xa2
 8006978:	f7fa ffe4 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800697c:	20c0      	movs	r0, #192	; 0xc0
 800697e:	f7fa fffd 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006982:	2010      	movs	r0, #16
 8006984:	f7fa ffde 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006988:	20c1      	movs	r0, #193	; 0xc1
 800698a:	f7fa fff7 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800698e:	2010      	movs	r0, #16
 8006990:	f7fa ffd8 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006994:	20c5      	movs	r0, #197	; 0xc5
 8006996:	f7fa fff1 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800699a:	2045      	movs	r0, #69	; 0x45
 800699c:	f7fa ffd2 	bl	8001944 <LCD_IO_WriteData>
 80069a0:	2015      	movs	r0, #21
 80069a2:	f7fa ffcf 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80069a6:	20c7      	movs	r0, #199	; 0xc7
 80069a8:	f7fa ffe8 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80069ac:	2090      	movs	r0, #144	; 0x90
 80069ae:	f7fa ffc9 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80069b2:	2036      	movs	r0, #54	; 0x36
 80069b4:	f7fa ffe2 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80069b8:	20c8      	movs	r0, #200	; 0xc8
 80069ba:	f7fa ffc3 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80069be:	20f2      	movs	r0, #242	; 0xf2
 80069c0:	f7fa ffdc 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80069c4:	2000      	movs	r0, #0
 80069c6:	f7fa ffbd 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80069ca:	20b0      	movs	r0, #176	; 0xb0
 80069cc:	f7fa ffd6 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80069d0:	20c2      	movs	r0, #194	; 0xc2
 80069d2:	f7fa ffb7 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80069d6:	20b6      	movs	r0, #182	; 0xb6
 80069d8:	f7fa ffd0 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80069dc:	200a      	movs	r0, #10
 80069de:	f7fa ffb1 	bl	8001944 <LCD_IO_WriteData>
 80069e2:	20a7      	movs	r0, #167	; 0xa7
 80069e4:	f7fa ffae 	bl	8001944 <LCD_IO_WriteData>
 80069e8:	2027      	movs	r0, #39	; 0x27
 80069ea:	f7fa ffab 	bl	8001944 <LCD_IO_WriteData>
 80069ee:	2004      	movs	r0, #4
 80069f0:	f7fa ffa8 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80069f4:	202a      	movs	r0, #42	; 0x2a
 80069f6:	f7fa ffc1 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80069fa:	2000      	movs	r0, #0
 80069fc:	f7fa ffa2 	bl	8001944 <LCD_IO_WriteData>
 8006a00:	2000      	movs	r0, #0
 8006a02:	f7fa ff9f 	bl	8001944 <LCD_IO_WriteData>
 8006a06:	2000      	movs	r0, #0
 8006a08:	f7fa ff9c 	bl	8001944 <LCD_IO_WriteData>
 8006a0c:	20ef      	movs	r0, #239	; 0xef
 8006a0e:	f7fa ff99 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006a12:	202b      	movs	r0, #43	; 0x2b
 8006a14:	f7fa ffb2 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006a18:	2000      	movs	r0, #0
 8006a1a:	f7fa ff93 	bl	8001944 <LCD_IO_WriteData>
 8006a1e:	2000      	movs	r0, #0
 8006a20:	f7fa ff90 	bl	8001944 <LCD_IO_WriteData>
 8006a24:	2001      	movs	r0, #1
 8006a26:	f7fa ff8d 	bl	8001944 <LCD_IO_WriteData>
 8006a2a:	203f      	movs	r0, #63	; 0x3f
 8006a2c:	f7fa ff8a 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006a30:	20f6      	movs	r0, #246	; 0xf6
 8006a32:	f7fa ffa3 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006a36:	2001      	movs	r0, #1
 8006a38:	f7fa ff84 	bl	8001944 <LCD_IO_WriteData>
 8006a3c:	2000      	movs	r0, #0
 8006a3e:	f7fa ff81 	bl	8001944 <LCD_IO_WriteData>
 8006a42:	2006      	movs	r0, #6
 8006a44:	f7fa ff7e 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006a48:	202c      	movs	r0, #44	; 0x2c
 8006a4a:	f7fa ff97 	bl	800197c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8006a4e:	20c8      	movs	r0, #200	; 0xc8
 8006a50:	f7fa ffe2 	bl	8001a18 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8006a54:	2026      	movs	r0, #38	; 0x26
 8006a56:	f7fa ff91 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006a5a:	2001      	movs	r0, #1
 8006a5c:	f7fa ff72 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006a60:	20e0      	movs	r0, #224	; 0xe0
 8006a62:	f7fa ff8b 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006a66:	200f      	movs	r0, #15
 8006a68:	f7fa ff6c 	bl	8001944 <LCD_IO_WriteData>
 8006a6c:	2029      	movs	r0, #41	; 0x29
 8006a6e:	f7fa ff69 	bl	8001944 <LCD_IO_WriteData>
 8006a72:	2024      	movs	r0, #36	; 0x24
 8006a74:	f7fa ff66 	bl	8001944 <LCD_IO_WriteData>
 8006a78:	200c      	movs	r0, #12
 8006a7a:	f7fa ff63 	bl	8001944 <LCD_IO_WriteData>
 8006a7e:	200e      	movs	r0, #14
 8006a80:	f7fa ff60 	bl	8001944 <LCD_IO_WriteData>
 8006a84:	2009      	movs	r0, #9
 8006a86:	f7fa ff5d 	bl	8001944 <LCD_IO_WriteData>
 8006a8a:	204e      	movs	r0, #78	; 0x4e
 8006a8c:	f7fa ff5a 	bl	8001944 <LCD_IO_WriteData>
 8006a90:	2078      	movs	r0, #120	; 0x78
 8006a92:	f7fa ff57 	bl	8001944 <LCD_IO_WriteData>
 8006a96:	203c      	movs	r0, #60	; 0x3c
 8006a98:	f7fa ff54 	bl	8001944 <LCD_IO_WriteData>
 8006a9c:	2009      	movs	r0, #9
 8006a9e:	f7fa ff51 	bl	8001944 <LCD_IO_WriteData>
 8006aa2:	2013      	movs	r0, #19
 8006aa4:	f7fa ff4e 	bl	8001944 <LCD_IO_WriteData>
 8006aa8:	2005      	movs	r0, #5
 8006aaa:	f7fa ff4b 	bl	8001944 <LCD_IO_WriteData>
 8006aae:	2017      	movs	r0, #23
 8006ab0:	f7fa ff48 	bl	8001944 <LCD_IO_WriteData>
 8006ab4:	2011      	movs	r0, #17
 8006ab6:	f7fa ff45 	bl	8001944 <LCD_IO_WriteData>
 8006aba:	2000      	movs	r0, #0
 8006abc:	f7fa ff42 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006ac0:	20e1      	movs	r0, #225	; 0xe1
 8006ac2:	f7fa ff5b 	bl	800197c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8006ac6:	2000      	movs	r0, #0
 8006ac8:	f7fa ff3c 	bl	8001944 <LCD_IO_WriteData>
 8006acc:	2016      	movs	r0, #22
 8006ace:	f7fa ff39 	bl	8001944 <LCD_IO_WriteData>
 8006ad2:	201b      	movs	r0, #27
 8006ad4:	f7fa ff36 	bl	8001944 <LCD_IO_WriteData>
 8006ad8:	2004      	movs	r0, #4
 8006ada:	f7fa ff33 	bl	8001944 <LCD_IO_WriteData>
 8006ade:	2011      	movs	r0, #17
 8006ae0:	f7fa ff30 	bl	8001944 <LCD_IO_WriteData>
 8006ae4:	2007      	movs	r0, #7
 8006ae6:	f7fa ff2d 	bl	8001944 <LCD_IO_WriteData>
 8006aea:	2031      	movs	r0, #49	; 0x31
 8006aec:	f7fa ff2a 	bl	8001944 <LCD_IO_WriteData>
 8006af0:	2033      	movs	r0, #51	; 0x33
 8006af2:	f7fa ff27 	bl	8001944 <LCD_IO_WriteData>
 8006af6:	2042      	movs	r0, #66	; 0x42
 8006af8:	f7fa ff24 	bl	8001944 <LCD_IO_WriteData>
 8006afc:	2005      	movs	r0, #5
 8006afe:	f7fa ff21 	bl	8001944 <LCD_IO_WriteData>
 8006b02:	200c      	movs	r0, #12
 8006b04:	f7fa ff1e 	bl	8001944 <LCD_IO_WriteData>
 8006b08:	200a      	movs	r0, #10
 8006b0a:	f7fa ff1b 	bl	8001944 <LCD_IO_WriteData>
 8006b0e:	2028      	movs	r0, #40	; 0x28
 8006b10:	f7fa ff18 	bl	8001944 <LCD_IO_WriteData>
 8006b14:	202f      	movs	r0, #47	; 0x2f
 8006b16:	f7fa ff15 	bl	8001944 <LCD_IO_WriteData>
 8006b1a:	200f      	movs	r0, #15
 8006b1c:	f7fa ff12 	bl	8001944 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8006b20:	2011      	movs	r0, #17
 8006b22:	f7fa ff2b 	bl	800197c <LCD_IO_WriteReg>
  LCD_Delay(200);
 8006b26:	20c8      	movs	r0, #200	; 0xc8
 8006b28:	f7fa ff76 	bl	8001a18 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8006b2c:	2029      	movs	r0, #41	; 0x29
 8006b2e:	f7fa ff25 	bl	800197c <LCD_IO_WriteReg>
}
 8006b32:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8006b36:	202c      	movs	r0, #44	; 0x2c
 8006b38:	f7fa bf20 	b.w	800197c <LCD_IO_WriteReg>

08006b3c <ili9341_ReadID>:
{
 8006b3c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8006b3e:	f7fa fef1 	bl	8001924 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8006b42:	2103      	movs	r1, #3
 8006b44:	20d3      	movs	r0, #211	; 0xd3
 8006b46:	f7fa ff35 	bl	80019b4 <LCD_IO_ReadData>
}
 8006b4a:	b280      	uxth	r0, r0
 8006b4c:	bd08      	pop	{r3, pc}

08006b4e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8006b4e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8006b50:	b2c4      	uxtb	r4, r0
 8006b52:	2202      	movs	r2, #2
 8006b54:	2103      	movs	r1, #3
 8006b56:	4620      	mov	r0, r4
 8006b58:	f7fa fe9a 	bl	8001890 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8006b5c:	200a      	movs	r0, #10
 8006b5e:	f7fa fedf 	bl	8001920 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8006b62:	4620      	mov	r0, r4
 8006b64:	2200      	movs	r2, #0
 8006b66:	2103      	movs	r1, #3
 8006b68:	f7fa fe92 	bl	8001890 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8006b6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8006b70:	2002      	movs	r0, #2
 8006b72:	f7fa bed5 	b.w	8001920 <IOE_Delay>

08006b76 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8006b76:	b538      	push	{r3, r4, r5, lr}
 8006b78:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8006b7a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8006b7c:	f7fa fe86 	bl	800188c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8006b80:	2100      	movs	r1, #0
 8006b82:	4620      	mov	r0, r4
 8006b84:	f7fa fe9c 	bl	80018c0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8006b88:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8006b8a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8006b8c:	4620      	mov	r0, r4
 8006b8e:	f7fa fe97 	bl	80018c0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8006b92:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8006b96:	b280      	uxth	r0, r0
 8006b98:	bd38      	pop	{r3, r4, r5, pc}

08006b9a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8006b9a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8006b9c:	b2c4      	uxtb	r4, r0
 8006b9e:	2140      	movs	r1, #64	; 0x40
 8006ba0:	4620      	mov	r0, r4
 8006ba2:	f7fa fe8d 	bl	80018c0 <IOE_Read>
  
  if(state > 0)
 8006ba6:	0603      	lsls	r3, r0, #24
 8006ba8:	d507      	bpl.n	8006bba <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8006baa:	214c      	movs	r1, #76	; 0x4c
 8006bac:	4620      	mov	r0, r4
 8006bae:	f7fa fe87 	bl	80018c0 <IOE_Read>
    {
      ret = 1;
 8006bb2:	3800      	subs	r0, #0
 8006bb4:	bf18      	it	ne
 8006bb6:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8006bb8:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8006bba:	2201      	movs	r2, #1
 8006bbc:	214b      	movs	r1, #75	; 0x4b
 8006bbe:	4620      	mov	r0, r4
 8006bc0:	f7fa fe66 	bl	8001890 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8006bc4:	4620      	mov	r0, r4
 8006bc6:	2200      	movs	r2, #0
 8006bc8:	214b      	movs	r1, #75	; 0x4b
 8006bca:	f7fa fe61 	bl	8001890 <IOE_Write>
  uint8_t ret = 0;
 8006bce:	2000      	movs	r0, #0
 8006bd0:	e7f2      	b.n	8006bb8 <stmpe811_TS_DetectTouch+0x1e>

08006bd2 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8006bd2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8006bd4:	2304      	movs	r3, #4
 8006bd6:	b2c4      	uxtb	r4, r0
{
 8006bd8:	460e      	mov	r6, r1
 8006bda:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8006bdc:	21d7      	movs	r1, #215	; 0xd7
 8006bde:	eb0d 0203 	add.w	r2, sp, r3
 8006be2:	4620      	mov	r0, r4
 8006be4:	f7fa fe86 	bl	80018f4 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8006be8:	9b01      	ldr	r3, [sp, #4]
 8006bea:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8006bec:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8006bee:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8006bf2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8006bf4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8006bf6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8006bf8:	2201      	movs	r2, #1
 8006bfa:	214b      	movs	r1, #75	; 0x4b
 8006bfc:	f7fa fe48 	bl	8001890 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8006c00:	2200      	movs	r2, #0
 8006c02:	214b      	movs	r1, #75	; 0x4b
 8006c04:	4620      	mov	r0, r4
 8006c06:	f7fa fe43 	bl	8001890 <IOE_Write>
}
 8006c0a:	b002      	add	sp, #8
 8006c0c:	bd70      	pop	{r4, r5, r6, pc}
	...

08006c10 <stmpe811_Init>:
{
 8006c10:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8006c12:	4b0a      	ldr	r3, [pc, #40]	; (8006c3c <stmpe811_Init+0x2c>)
 8006c14:	781a      	ldrb	r2, [r3, #0]
 8006c16:	4290      	cmp	r0, r2
{
 8006c18:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8006c1a:	d00d      	beq.n	8006c38 <stmpe811_Init+0x28>
 8006c1c:	7859      	ldrb	r1, [r3, #1]
 8006c1e:	4288      	cmp	r0, r1
 8006c20:	d00a      	beq.n	8006c38 <stmpe811_Init+0x28>
 8006c22:	b10a      	cbz	r2, 8006c28 <stmpe811_Init+0x18>
 8006c24:	b941      	cbnz	r1, 8006c38 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8006c26:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8006c28:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8006c2a:	f7fa fe2f 	bl	800188c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8006c2e:	4620      	mov	r0, r4
}
 8006c30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8006c34:	f7ff bf8b 	b.w	8006b4e <stmpe811_Reset>
}
 8006c38:	bd10      	pop	{r4, pc}
 8006c3a:	bf00      	nop
 8006c3c:	2000425c 	.word	0x2000425c

08006c40 <stmpe811_EnableGlobalIT>:
{
 8006c40:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8006c42:	b2c4      	uxtb	r4, r0
 8006c44:	2109      	movs	r1, #9
 8006c46:	4620      	mov	r0, r4
 8006c48:	f7fa fe3a 	bl	80018c0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8006c4c:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8006c50:	b2c2      	uxtb	r2, r0
 8006c52:	2109      	movs	r1, #9
 8006c54:	4620      	mov	r0, r4
}
 8006c56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8006c5a:	f7fa be19 	b.w	8001890 <IOE_Write>

08006c5e <stmpe811_DisableGlobalIT>:
{
 8006c5e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8006c60:	b2c4      	uxtb	r4, r0
 8006c62:	2109      	movs	r1, #9
 8006c64:	4620      	mov	r0, r4
 8006c66:	f7fa fe2b 	bl	80018c0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8006c6a:	2109      	movs	r1, #9
 8006c6c:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8006c70:	4620      	mov	r0, r4
}
 8006c72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8006c76:	f7fa be0b 	b.w	8001890 <IOE_Write>

08006c7a <stmpe811_EnableITSource>:
{
 8006c7a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8006c7c:	b2c4      	uxtb	r4, r0
{
 8006c7e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8006c80:	4620      	mov	r0, r4
 8006c82:	210a      	movs	r1, #10
 8006c84:	f7fa fe1c 	bl	80018c0 <IOE_Read>
  tmp |= Source; 
 8006c88:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8006c8a:	b2c2      	uxtb	r2, r0
 8006c8c:	210a      	movs	r1, #10
 8006c8e:	4620      	mov	r0, r4
}
 8006c90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8006c94:	f7fa bdfc 	b.w	8001890 <IOE_Write>

08006c98 <stmpe811_TS_EnableIT>:
{
 8006c98:	b507      	push	{r0, r1, r2, lr}
 8006c9a:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8006c9c:	f7fa fdf7 	bl	800188e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006ca0:	9801      	ldr	r0, [sp, #4]
 8006ca2:	211f      	movs	r1, #31
 8006ca4:	f7ff ffe9 	bl	8006c7a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8006ca8:	9801      	ldr	r0, [sp, #4]
}
 8006caa:	b003      	add	sp, #12
 8006cac:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8006cb0:	f7ff bfc6 	b.w	8006c40 <stmpe811_EnableGlobalIT>

08006cb4 <stmpe811_DisableITSource>:
{
 8006cb4:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8006cb6:	b2c4      	uxtb	r4, r0
{
 8006cb8:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8006cba:	4620      	mov	r0, r4
 8006cbc:	210a      	movs	r1, #10
 8006cbe:	f7fa fdff 	bl	80018c0 <IOE_Read>
  tmp &= ~Source; 
 8006cc2:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8006cc6:	b2c2      	uxtb	r2, r0
 8006cc8:	210a      	movs	r1, #10
 8006cca:	4620      	mov	r0, r4
}
 8006ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8006cd0:	f7fa bdde 	b.w	8001890 <IOE_Write>

08006cd4 <stmpe811_TS_DisableIT>:
{
 8006cd4:	b510      	push	{r4, lr}
 8006cd6:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8006cd8:	f7ff ffc1 	bl	8006c5e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006cdc:	4620      	mov	r0, r4
 8006cde:	211f      	movs	r1, #31
}
 8006ce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006ce4:	f7ff bfe6 	b.w	8006cb4 <stmpe811_DisableITSource>

08006ce8 <stmpe811_ReadGITStatus>:
{
 8006ce8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8006cea:	b2c0      	uxtb	r0, r0
{
 8006cec:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8006cee:	210b      	movs	r1, #11
 8006cf0:	f7fa fde6 	bl	80018c0 <IOE_Read>
}
 8006cf4:	4020      	ands	r0, r4
 8006cf6:	bd10      	pop	{r4, pc}

08006cf8 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8006cf8:	211f      	movs	r1, #31
 8006cfa:	f7ff bff5 	b.w	8006ce8 <stmpe811_ReadGITStatus>

08006cfe <stmpe811_ClearGlobalIT>:
{
 8006cfe:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8006d00:	b2c0      	uxtb	r0, r0
 8006d02:	210b      	movs	r1, #11
 8006d04:	f7fa bdc4 	b.w	8001890 <IOE_Write>

08006d08 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8006d08:	211f      	movs	r1, #31
 8006d0a:	f7ff bff8 	b.w	8006cfe <stmpe811_ClearGlobalIT>

08006d0e <stmpe811_IO_EnableAF>:
{
 8006d0e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006d10:	b2c4      	uxtb	r4, r0
{
 8006d12:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006d14:	4620      	mov	r0, r4
 8006d16:	2117      	movs	r1, #23
 8006d18:	f7fa fdd2 	bl	80018c0 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8006d1c:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8006d20:	b2c2      	uxtb	r2, r0
 8006d22:	2117      	movs	r1, #23
 8006d24:	4620      	mov	r0, r4
}
 8006d26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8006d2a:	f7fa bdb1 	b.w	8001890 <IOE_Write>

08006d2e <stmpe811_TS_Start>:
{
 8006d2e:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006d30:	b2c4      	uxtb	r4, r0
{
 8006d32:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006d34:	2104      	movs	r1, #4
 8006d36:	4620      	mov	r0, r4
 8006d38:	f7fa fdc2 	bl	80018c0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006d3c:	2104      	movs	r1, #4
 8006d3e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006d42:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006d44:	4620      	mov	r0, r4
 8006d46:	f7fa fda3 	bl	8001890 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8006d4a:	4630      	mov	r0, r6
 8006d4c:	21f0      	movs	r1, #240	; 0xf0
 8006d4e:	f7ff ffde 	bl	8006d0e <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006d52:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8006d56:	4620      	mov	r0, r4
 8006d58:	2104      	movs	r1, #4
 8006d5a:	f7fa fd99 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8006d5e:	2249      	movs	r2, #73	; 0x49
 8006d60:	2120      	movs	r1, #32
 8006d62:	4620      	mov	r0, r4
 8006d64:	f7fa fd94 	bl	8001890 <IOE_Write>
  IOE_Delay(2); 
 8006d68:	2002      	movs	r0, #2
 8006d6a:	f7fa fdd9 	bl	8001920 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8006d6e:	4620      	mov	r0, r4
 8006d70:	2201      	movs	r2, #1
 8006d72:	2121      	movs	r1, #33	; 0x21
 8006d74:	f7fa fd8c 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8006d78:	4620      	mov	r0, r4
 8006d7a:	229a      	movs	r2, #154	; 0x9a
 8006d7c:	2141      	movs	r1, #65	; 0x41
 8006d7e:	f7fa fd87 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8006d82:	4620      	mov	r0, r4
 8006d84:	2201      	movs	r2, #1
 8006d86:	214a      	movs	r1, #74	; 0x4a
 8006d88:	f7fa fd82 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8006d8c:	4620      	mov	r0, r4
 8006d8e:	2201      	movs	r2, #1
 8006d90:	214b      	movs	r1, #75	; 0x4b
 8006d92:	f7fa fd7d 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8006d96:	4620      	mov	r0, r4
 8006d98:	2200      	movs	r2, #0
 8006d9a:	214b      	movs	r1, #75	; 0x4b
 8006d9c:	f7fa fd78 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8006da0:	4620      	mov	r0, r4
 8006da2:	2201      	movs	r2, #1
 8006da4:	2156      	movs	r1, #86	; 0x56
 8006da6:	f7fa fd73 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8006daa:	4620      	mov	r0, r4
 8006dac:	2201      	movs	r2, #1
 8006dae:	2158      	movs	r1, #88	; 0x58
 8006db0:	f7fa fd6e 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8006db4:	4620      	mov	r0, r4
 8006db6:	2201      	movs	r2, #1
 8006db8:	2140      	movs	r1, #64	; 0x40
 8006dba:	f7fa fd69 	bl	8001890 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8006dbe:	4620      	mov	r0, r4
 8006dc0:	22ff      	movs	r2, #255	; 0xff
 8006dc2:	210b      	movs	r1, #11
 8006dc4:	f7fa fd64 	bl	8001890 <IOE_Write>
}
 8006dc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8006dcc:	2002      	movs	r0, #2
 8006dce:	f7fa bda7 	b.w	8001920 <IOE_Delay>
	...

08006dd4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8006dd4:	4b05      	ldr	r3, [pc, #20]	; (8006dec <SystemInit+0x18>)
 8006dd6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8006dda:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006dde:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8006de2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006de6:	609a      	str	r2, [r3, #8]
#endif
}
 8006de8:	4770      	bx	lr
 8006dea:	bf00      	nop
 8006dec:	e000ed00 	.word	0xe000ed00

08006df0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8006df0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8006df2:	4b0b      	ldr	r3, [pc, #44]	; (8006e20 <HAL_Init+0x30>)
 8006df4:	681a      	ldr	r2, [r3, #0]
 8006df6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006dfa:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8006dfc:	681a      	ldr	r2, [r3, #0]
 8006dfe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006e02:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8006e04:	681a      	ldr	r2, [r3, #0]
 8006e06:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006e0a:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8006e0c:	2003      	movs	r0, #3
 8006e0e:	f000 f82f 	bl	8006e70 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8006e12:	2000      	movs	r0, #0
 8006e14:	f7fb f8ec 	bl	8001ff0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8006e18:	f7fa fe0c 	bl	8001a34 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8006e1c:	2000      	movs	r0, #0
 8006e1e:	bd08      	pop	{r3, pc}
 8006e20:	40023c00 	.word	0x40023c00

08006e24 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8006e24:	4a03      	ldr	r2, [pc, #12]	; (8006e34 <HAL_IncTick+0x10>)
 8006e26:	4b04      	ldr	r3, [pc, #16]	; (8006e38 <HAL_IncTick+0x14>)
 8006e28:	6811      	ldr	r1, [r2, #0]
 8006e2a:	781b      	ldrb	r3, [r3, #0]
 8006e2c:	440b      	add	r3, r1
 8006e2e:	6013      	str	r3, [r2, #0]
}
 8006e30:	4770      	bx	lr
 8006e32:	bf00      	nop
 8006e34:	20004260 	.word	0x20004260
 8006e38:	20000078 	.word	0x20000078

08006e3c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8006e3c:	4b01      	ldr	r3, [pc, #4]	; (8006e44 <HAL_GetTick+0x8>)
 8006e3e:	6818      	ldr	r0, [r3, #0]
}
 8006e40:	4770      	bx	lr
 8006e42:	bf00      	nop
 8006e44:	20004260 	.word	0x20004260

08006e48 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8006e48:	b538      	push	{r3, r4, r5, lr}
 8006e4a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006e4c:	f7ff fff6 	bl	8006e3c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8006e50:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8006e52:	bf1c      	itt	ne
 8006e54:	4b05      	ldrne	r3, [pc, #20]	; (8006e6c <HAL_Delay+0x24>)
 8006e56:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8006e58:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8006e5a:	bf18      	it	ne
 8006e5c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8006e5e:	f7ff ffed 	bl	8006e3c <HAL_GetTick>
 8006e62:	1b43      	subs	r3, r0, r5
 8006e64:	42a3      	cmp	r3, r4
 8006e66:	d3fa      	bcc.n	8006e5e <HAL_Delay+0x16>
  {
  }
}
 8006e68:	bd38      	pop	{r3, r4, r5, pc}
 8006e6a:	bf00      	nop
 8006e6c:	20000078 	.word	0x20000078

08006e70 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8006e70:	4907      	ldr	r1, [pc, #28]	; (8006e90 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8006e72:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006e74:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006e78:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006e7a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006e7c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006e80:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8006e82:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006e84:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8006e88:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8006e8c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8006e8e:	4770      	bx	lr
 8006e90:	e000ed00 	.word	0xe000ed00

08006e94 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8006e94:	4b16      	ldr	r3, [pc, #88]	; (8006ef0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8006e96:	b530      	push	{r4, r5, lr}
 8006e98:	68dc      	ldr	r4, [r3, #12]
 8006e9a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006e9e:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006ea2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8006ea4:	2d04      	cmp	r5, #4
 8006ea6:	bf28      	it	cs
 8006ea8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006eaa:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006eac:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8006eb0:	bf8c      	ite	hi
 8006eb2:	3c03      	subhi	r4, #3
 8006eb4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006eb6:	fa03 f505 	lsl.w	r5, r3, r5
 8006eba:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006ebe:	40a3      	lsls	r3, r4
 8006ec0:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006ec4:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8006ec6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006ec8:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006ecc:	bfac      	ite	ge
 8006ece:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006ed2:	4a08      	ldrlt	r2, [pc, #32]	; (8006ef4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006ed4:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006ed8:	bfb8      	it	lt
 8006eda:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006ede:	b2db      	uxtb	r3, r3
 8006ee0:	bfaa      	itet	ge
 8006ee2:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006ee6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006ee8:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006eec:	bd30      	pop	{r4, r5, pc}
 8006eee:	bf00      	nop
 8006ef0:	e000ed00 	.word	0xe000ed00
 8006ef4:	e000ed14 	.word	0xe000ed14

08006ef8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006ef8:	2800      	cmp	r0, #0
 8006efa:	db08      	blt.n	8006f0e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006efc:	0942      	lsrs	r2, r0, #5
 8006efe:	2301      	movs	r3, #1
 8006f00:	f000 001f 	and.w	r0, r0, #31
 8006f04:	fa03 f000 	lsl.w	r0, r3, r0
 8006f08:	4b01      	ldr	r3, [pc, #4]	; (8006f10 <HAL_NVIC_EnableIRQ+0x18>)
 8006f0a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006f0e:	4770      	bx	lr
 8006f10:	e000e100 	.word	0xe000e100

08006f14 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006f14:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006f16:	4604      	mov	r4, r0
 8006f18:	b150      	cbz	r0, 8006f30 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8006f1a:	7943      	ldrb	r3, [r0, #5]
 8006f1c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006f20:	b913      	cbnz	r3, 8006f28 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006f22:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006f24:	f7fa fda6 	bl	8001a74 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006f28:	2301      	movs	r3, #1
 8006f2a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006f2c:	2000      	movs	r0, #0
}
 8006f2e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006f30:	2001      	movs	r0, #1
 8006f32:	e7fc      	b.n	8006f2e <HAL_CRC_Init+0x1a>

08006f34 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8006f34:	b570      	push	{r4, r5, r6, lr}
 8006f36:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8006f38:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 8006f3a:	f7ff ff7f 	bl	8006e3c <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8006f3e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8006f42:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8006f44:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8006f46:	d006      	beq.n	8006f56 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8006f48:	2380      	movs	r3, #128	; 0x80
 8006f4a:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8006f4c:	2300      	movs	r3, #0
 8006f4e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 8006f52:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 8006f54:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8006f56:	6823      	ldr	r3, [r4, #0]
 8006f58:	681a      	ldr	r2, [r3, #0]
 8006f5a:	f022 0216 	bic.w	r2, r2, #22
 8006f5e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8006f60:	695a      	ldr	r2, [r3, #20]
 8006f62:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006f66:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8006f68:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006f6a:	b90a      	cbnz	r2, 8006f70 <HAL_DMA_Abort+0x3c>
 8006f6c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006f6e:	b11a      	cbz	r2, 8006f78 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8006f70:	681a      	ldr	r2, [r3, #0]
 8006f72:	f022 0208 	bic.w	r2, r2, #8
 8006f76:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8006f78:	681a      	ldr	r2, [r3, #0]
 8006f7a:	f022 0201 	bic.w	r2, r2, #1
 8006f7e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8006f80:	6823      	ldr	r3, [r4, #0]
 8006f82:	681b      	ldr	r3, [r3, #0]
 8006f84:	f013 0301 	ands.w	r3, r3, #1
 8006f88:	d10a      	bne.n	8006fa0 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8006f8a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8006f8c:	223f      	movs	r2, #63	; 0x3f
 8006f8e:	408a      	lsls	r2, r1
 8006f90:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8006f92:	2201      	movs	r2, #1
 8006f94:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8006f98:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8006f9c:	4618      	mov	r0, r3
 8006f9e:	e7d9      	b.n	8006f54 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8006fa0:	f7ff ff4c 	bl	8006e3c <HAL_GetTick>
 8006fa4:	1b40      	subs	r0, r0, r5
 8006fa6:	2805      	cmp	r0, #5
 8006fa8:	d9ea      	bls.n	8006f80 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8006faa:	2320      	movs	r3, #32
 8006fac:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8006fae:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8006fb0:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8006fb2:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8006fb6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8006fba:	e7cb      	b.n	8006f54 <HAL_DMA_Abort+0x20>

08006fbc <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8006fbc:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8006fc0:	2b02      	cmp	r3, #2
 8006fc2:	d003      	beq.n	8006fcc <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8006fc4:	2380      	movs	r3, #128	; 0x80
 8006fc6:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8006fc8:	2001      	movs	r0, #1
 8006fca:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8006fcc:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8006fce:	2305      	movs	r3, #5
 8006fd0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8006fd4:	6813      	ldr	r3, [r2, #0]
 8006fd6:	f023 0301 	bic.w	r3, r3, #1
 8006fda:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 8006fdc:	2000      	movs	r0, #0
}
 8006fde:	4770      	bx	lr

08006fe0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8006fe0:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8006fe2:	4604      	mov	r4, r0
 8006fe4:	b330      	cbz	r0, 8007034 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006fe6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006fea:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006fee:	b91b      	cbnz	r3, 8006ff8 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8006ff0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8006ff4:	f7fa fd56 	bl	8001aa4 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006ff8:	6822      	ldr	r2, [r4, #0]
 8006ffa:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006ffc:	2302      	movs	r3, #2
 8006ffe:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007002:	6813      	ldr	r3, [r2, #0]
 8007004:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007008:	430b      	orrs	r3, r1
 800700a:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800700c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800700e:	68a1      	ldr	r1, [r4, #8]
 8007010:	f023 0307 	bic.w	r3, r3, #7
 8007014:	430b      	orrs	r3, r1
 8007016:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8007018:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800701a:	68e1      	ldr	r1, [r4, #12]
 800701c:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8007020:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8007024:	430b      	orrs	r3, r1
 8007026:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007028:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800702a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800702c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800702e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8007032:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007034:	2001      	movs	r0, #1
 8007036:	e7fc      	b.n	8007032 <HAL_DMA2D_Init+0x52>

08007038 <HAL_DMA2D_LineEventCallback>:
 8007038:	4770      	bx	lr

0800703a <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800703a:	4770      	bx	lr

0800703c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800703c:	6803      	ldr	r3, [r0, #0]
{
 800703e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007040:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8007042:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007044:	07f2      	lsls	r2, r6, #31
{
 8007046:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8007048:	d514      	bpl.n	8007074 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800704a:	05e9      	lsls	r1, r5, #23
 800704c:	d512      	bpl.n	8007074 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800704e:	681a      	ldr	r2, [r3, #0]
 8007050:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007054:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8007056:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8007058:	f042 0201 	orr.w	r2, r2, #1
 800705c:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800705e:	2201      	movs	r2, #1
 8007060:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007062:	2304      	movs	r3, #4
 8007064:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007068:	2300      	movs	r3, #0
 800706a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800706e:	6943      	ldr	r3, [r0, #20]
 8007070:	b103      	cbz	r3, 8007074 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8007072:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8007074:	06b2      	lsls	r2, r6, #26
 8007076:	d516      	bpl.n	80070a6 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8007078:	04ab      	lsls	r3, r5, #18
 800707a:	d514      	bpl.n	80070a6 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800707c:	6823      	ldr	r3, [r4, #0]
 800707e:	681a      	ldr	r2, [r3, #0]
 8007080:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007084:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8007086:	2220      	movs	r2, #32
 8007088:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800708a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800708c:	f043 0302 	orr.w	r3, r3, #2
 8007090:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007092:	2304      	movs	r3, #4
 8007094:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007098:	2300      	movs	r3, #0
 800709a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800709e:	6963      	ldr	r3, [r4, #20]
 80070a0:	b10b      	cbz	r3, 80070a6 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80070a2:	4620      	mov	r0, r4
 80070a4:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80070a6:	0730      	lsls	r0, r6, #28
 80070a8:	d516      	bpl.n	80070d8 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80070aa:	0529      	lsls	r1, r5, #20
 80070ac:	d514      	bpl.n	80070d8 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80070ae:	6823      	ldr	r3, [r4, #0]
 80070b0:	681a      	ldr	r2, [r3, #0]
 80070b2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80070b6:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80070b8:	2208      	movs	r2, #8
 80070ba:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80070bc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80070be:	f043 0304 	orr.w	r3, r3, #4
 80070c2:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80070c4:	2304      	movs	r3, #4
 80070c6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80070ca:	2300      	movs	r3, #0
 80070cc:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80070d0:	6963      	ldr	r3, [r4, #20]
 80070d2:	b10b      	cbz	r3, 80070d8 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80070d4:	4620      	mov	r0, r4
 80070d6:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80070d8:	0772      	lsls	r2, r6, #29
 80070da:	d50b      	bpl.n	80070f4 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 80070dc:	056b      	lsls	r3, r5, #21
 80070de:	d509      	bpl.n	80070f4 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80070e0:	6823      	ldr	r3, [r4, #0]
 80070e2:	681a      	ldr	r2, [r3, #0]
 80070e4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070e8:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80070ea:	2204      	movs	r2, #4
 80070ec:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 80070ee:	4620      	mov	r0, r4
 80070f0:	f7ff ffa2 	bl	8007038 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80070f4:	07b0      	lsls	r0, r6, #30
 80070f6:	d514      	bpl.n	8007122 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80070f8:	05a9      	lsls	r1, r5, #22
 80070fa:	d512      	bpl.n	8007122 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80070fc:	6823      	ldr	r3, [r4, #0]
 80070fe:	681a      	ldr	r2, [r3, #0]
 8007100:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007104:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8007106:	2202      	movs	r2, #2
 8007108:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800710a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800710c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800710e:	2301      	movs	r3, #1
 8007110:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007114:	2300      	movs	r3, #0
 8007116:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800711a:	6923      	ldr	r3, [r4, #16]
 800711c:	b10b      	cbz	r3, 8007122 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800711e:	4620      	mov	r0, r4
 8007120:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8007122:	06f2      	lsls	r2, r6, #27
 8007124:	d513      	bpl.n	800714e <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8007126:	04eb      	lsls	r3, r5, #19
 8007128:	d511      	bpl.n	800714e <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800712a:	6823      	ldr	r3, [r4, #0]
 800712c:	681a      	ldr	r2, [r3, #0]
 800712e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007132:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007134:	2210      	movs	r2, #16
 8007136:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007138:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800713a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800713c:	2301      	movs	r3, #1
 800713e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007142:	2300      	movs	r3, #0
 8007144:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8007148:	4620      	mov	r0, r4
 800714a:	f7ff ff76 	bl	800703a <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800714e:	bd70      	pop	{r4, r5, r6, pc}

08007150 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8007150:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8007152:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8007156:	2b01      	cmp	r3, #1
 8007158:	f04f 0302 	mov.w	r3, #2
 800715c:	d02b      	beq.n	80071b6 <HAL_DMA2D_ConfigLayer+0x66>
 800715e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007160:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8007164:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007168:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800716c:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8007170:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8007172:	4f18      	ldr	r7, [pc, #96]	; (80071d4 <HAL_DMA2D_ConfigLayer+0x84>)
 8007174:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007178:	3c09      	subs	r4, #9
 800717a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800717c:	bf9c      	itt	ls
 800717e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8007182:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007184:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007188:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800718a:	bf88      	it	hi
 800718c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8007190:	b999      	cbnz	r1, 80071ba <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007192:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8007194:	4039      	ands	r1, r7
 8007196:	430a      	orrs	r2, r1
 8007198:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800719a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800719c:	6982      	ldr	r2, [r0, #24]
 800719e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80071a0:	d803      	bhi.n	80071aa <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80071a2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80071a4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80071a8:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80071aa:	2301      	movs	r3, #1
 80071ac:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80071b0:	2300      	movs	r3, #0
 80071b2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80071b6:	4618      	mov	r0, r3

  return HAL_OK;
}
 80071b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80071ba:	69d9      	ldr	r1, [r3, #28]
 80071bc:	4039      	ands	r1, r7
 80071be:	430a      	orrs	r2, r1
 80071c0:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80071c2:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80071c4:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80071c6:	6992      	ldr	r2, [r2, #24]
 80071c8:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80071ca:	bf9c      	itt	ls
 80071cc:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 80071d0:	621d      	strls	r5, [r3, #32]
 80071d2:	e7ea      	b.n	80071aa <HAL_DMA2D_ConfigLayer+0x5a>
 80071d4:	00fcfff0 	.word	0x00fcfff0

080071d8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80071d8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80071dc:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80073a0 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80071e0:	4a6d      	ldr	r2, [pc, #436]	; (8007398 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 80071e2:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80071e4:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80071e6:	2401      	movs	r4, #1
 80071e8:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80071ea:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 80071ee:	43ac      	bics	r4, r5
 80071f0:	f040 80b9 	bne.w	8007366 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80071f4:	684d      	ldr	r5, [r1, #4]
 80071f6:	f005 0403 	and.w	r4, r5, #3
 80071fa:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80071fe:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007200:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007202:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007206:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007208:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800720c:	d834      	bhi.n	8007278 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800720e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007210:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8007214:	68cf      	ldr	r7, [r1, #12]
 8007216:	fa07 f708 	lsl.w	r7, r7, r8
 800721a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800721e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8007220:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8007222:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8007226:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800722a:	409f      	lsls	r7, r3
 800722c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8007230:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8007232:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8007234:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8007238:	688f      	ldr	r7, [r1, #8]
 800723a:	fa07 f708 	lsl.w	r7, r7, r8
 800723e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007242:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8007244:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007246:	d119      	bne.n	800727c <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8007248:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800724c:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007250:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8007254:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007258:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800725c:	f04f 0e0f 	mov.w	lr, #15
 8007260:	fa0e fe0b 	lsl.w	lr, lr, fp
 8007264:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8007268:	690f      	ldr	r7, [r1, #16]
 800726a:	fa07 f70b 	lsl.w	r7, r7, fp
 800726e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8007272:	f8ca 7020 	str.w	r7, [sl, #32]
 8007276:	e001      	b.n	800727c <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8007278:	2c03      	cmp	r4, #3
 800727a:	d1da      	bne.n	8007232 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800727c:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800727e:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8007282:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007284:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007286:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800728a:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800728c:	d06b      	beq.n	8007366 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800728e:	f04f 0a00 	mov.w	sl, #0
 8007292:	f8cd a004 	str.w	sl, [sp, #4]
 8007296:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800729a:	4c40      	ldr	r4, [pc, #256]	; (800739c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800729c:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 80072a0:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 80072a4:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 80072a8:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 80072ac:	9601      	str	r6, [sp, #4]
 80072ae:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 80072b0:	f023 0603 	bic.w	r6, r3, #3
 80072b4:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 80072b8:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80072bc:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 80072c0:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80072c4:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80072c8:	270f      	movs	r7, #15
 80072ca:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80072ce:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80072d0:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80072d4:	d04e      	beq.n	8007374 <HAL_GPIO_Init+0x19c>
 80072d6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80072da:	42a0      	cmp	r0, r4
 80072dc:	d04c      	beq.n	8007378 <HAL_GPIO_Init+0x1a0>
 80072de:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80072e2:	42a0      	cmp	r0, r4
 80072e4:	d04a      	beq.n	800737c <HAL_GPIO_Init+0x1a4>
 80072e6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80072ea:	42a0      	cmp	r0, r4
 80072ec:	d048      	beq.n	8007380 <HAL_GPIO_Init+0x1a8>
 80072ee:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80072f2:	42a0      	cmp	r0, r4
 80072f4:	d046      	beq.n	8007384 <HAL_GPIO_Init+0x1ac>
 80072f6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80072fa:	42a0      	cmp	r0, r4
 80072fc:	d044      	beq.n	8007388 <HAL_GPIO_Init+0x1b0>
 80072fe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007302:	42a0      	cmp	r0, r4
 8007304:	d042      	beq.n	800738c <HAL_GPIO_Init+0x1b4>
 8007306:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800730a:	42a0      	cmp	r0, r4
 800730c:	d040      	beq.n	8007390 <HAL_GPIO_Init+0x1b8>
 800730e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007312:	42a0      	cmp	r0, r4
 8007314:	d03e      	beq.n	8007394 <HAL_GPIO_Init+0x1bc>
 8007316:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800731a:	42a0      	cmp	r0, r4
 800731c:	bf0c      	ite	eq
 800731e:	2409      	moveq	r4, #9
 8007320:	240a      	movne	r4, #10
 8007322:	fa04 f40e 	lsl.w	r4, r4, lr
 8007326:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8007328:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 800732a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800732c:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8007330:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8007332:	bf54      	ite	pl
 8007334:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007336:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800733a:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800733c:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800733e:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8007340:	bf54      	ite	pl
 8007342:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007344:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8007348:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800734a:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800734c:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800734e:	bf54      	ite	pl
 8007350:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007352:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8007356:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8007358:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800735a:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800735c:	bf54      	ite	pl
 800735e:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007360:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8007364:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007366:	3301      	adds	r3, #1
 8007368:	2b10      	cmp	r3, #16
 800736a:	f47f af3b 	bne.w	80071e4 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800736e:	b003      	add	sp, #12
 8007370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007374:	4654      	mov	r4, sl
 8007376:	e7d4      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 8007378:	2401      	movs	r4, #1
 800737a:	e7d2      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 800737c:	2402      	movs	r4, #2
 800737e:	e7d0      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 8007380:	2403      	movs	r4, #3
 8007382:	e7ce      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 8007384:	2404      	movs	r4, #4
 8007386:	e7cc      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 8007388:	2405      	movs	r4, #5
 800738a:	e7ca      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 800738c:	2406      	movs	r4, #6
 800738e:	e7c8      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 8007390:	2407      	movs	r4, #7
 8007392:	e7c6      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 8007394:	2408      	movs	r4, #8
 8007396:	e7c4      	b.n	8007322 <HAL_GPIO_Init+0x14a>
 8007398:	40013c00 	.word	0x40013c00
 800739c:	40020000 	.word	0x40020000
 80073a0:	40023800 	.word	0x40023800

080073a4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80073a4:	6903      	ldr	r3, [r0, #16]
 80073a6:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80073a8:	bf14      	ite	ne
 80073aa:	2001      	movne	r0, #1
 80073ac:	2000      	moveq	r0, #0
 80073ae:	4770      	bx	lr

080073b0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80073b0:	b10a      	cbz	r2, 80073b6 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80073b2:	6181      	str	r1, [r0, #24]
  }
}
 80073b4:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80073b6:	0409      	lsls	r1, r1, #16
 80073b8:	e7fb      	b.n	80073b2 <HAL_GPIO_WritePin+0x2>

080073ba <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80073ba:	6801      	ldr	r1, [r0, #0]
 80073bc:	694b      	ldr	r3, [r1, #20]
 80073be:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80073c2:	f04f 0200 	mov.w	r2, #0
 80073c6:	d010      	beq.n	80073ea <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80073c8:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80073cc:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80073ce:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80073d0:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80073d2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80073d6:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80073da:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80073dc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80073e0:	f043 0304 	orr.w	r3, r3, #4
 80073e4:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80073e6:	2001      	movs	r0, #1
 80073e8:	4770      	bx	lr
  }
  return HAL_OK;
 80073ea:	4618      	mov	r0, r3
}
 80073ec:	4770      	bx	lr

080073ee <I2C_WaitOnFlagUntilTimeout>:
{
 80073ee:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80073f2:	4606      	mov	r6, r0
 80073f4:	460f      	mov	r7, r1
 80073f6:	4691      	mov	r9, r2
 80073f8:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80073fa:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80073fe:	6833      	ldr	r3, [r6, #0]
 8007400:	f1ba 0f01 	cmp.w	sl, #1
 8007404:	bf0c      	ite	eq
 8007406:	695c      	ldreq	r4, [r3, #20]
 8007408:	699c      	ldrne	r4, [r3, #24]
 800740a:	ea27 0404 	bic.w	r4, r7, r4
 800740e:	b2a4      	uxth	r4, r4
 8007410:	fab4 f484 	clz	r4, r4
 8007414:	0964      	lsrs	r4, r4, #5
 8007416:	45a1      	cmp	r9, r4
 8007418:	d001      	beq.n	800741e <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800741a:	2000      	movs	r0, #0
 800741c:	e017      	b.n	800744e <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800741e:	1c6a      	adds	r2, r5, #1
 8007420:	d0ee      	beq.n	8007400 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007422:	f7ff fd0b 	bl	8006e3c <HAL_GetTick>
 8007426:	9b08      	ldr	r3, [sp, #32]
 8007428:	1ac0      	subs	r0, r0, r3
 800742a:	42a8      	cmp	r0, r5
 800742c:	d801      	bhi.n	8007432 <I2C_WaitOnFlagUntilTimeout+0x44>
 800742e:	2d00      	cmp	r5, #0
 8007430:	d1e5      	bne.n	80073fe <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007432:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8007434:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007436:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8007438:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800743c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007440:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007442:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007446:	f042 0220 	orr.w	r2, r2, #32
 800744a:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800744c:	2001      	movs	r0, #1
}
 800744e:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08007452 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8007452:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007456:	4604      	mov	r4, r0
 8007458:	460f      	mov	r7, r1
 800745a:	4616      	mov	r6, r2
 800745c:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800745e:	6825      	ldr	r5, [r4, #0]
 8007460:	6968      	ldr	r0, [r5, #20]
 8007462:	ea27 0000 	bic.w	r0, r7, r0
 8007466:	b280      	uxth	r0, r0
 8007468:	b1b8      	cbz	r0, 800749a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800746a:	696b      	ldr	r3, [r5, #20]
 800746c:	055a      	lsls	r2, r3, #21
 800746e:	d516      	bpl.n	800749e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007470:	682b      	ldr	r3, [r5, #0]
 8007472:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007476:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007478:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800747c:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800747e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007480:	2300      	movs	r3, #0
 8007482:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007484:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007488:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800748c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800748e:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007492:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007494:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8007498:	2001      	movs	r0, #1
}
 800749a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800749e:	1c73      	adds	r3, r6, #1
 80074a0:	d0de      	beq.n	8007460 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80074a2:	f7ff fccb 	bl	8006e3c <HAL_GetTick>
 80074a6:	eba0 0008 	sub.w	r0, r0, r8
 80074aa:	42b0      	cmp	r0, r6
 80074ac:	d801      	bhi.n	80074b2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80074ae:	2e00      	cmp	r6, #0
 80074b0:	d1d5      	bne.n	800745e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80074b2:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80074b4:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80074b6:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80074b8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80074bc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80074c0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80074c2:	f042 0220 	orr.w	r2, r2, #32
 80074c6:	e7e4      	b.n	8007492 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080074c8 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80074c8:	b570      	push	{r4, r5, r6, lr}
 80074ca:	4604      	mov	r4, r0
 80074cc:	460d      	mov	r5, r1
 80074ce:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80074d0:	6821      	ldr	r1, [r4, #0]
 80074d2:	694b      	ldr	r3, [r1, #20]
 80074d4:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80074d8:	d001      	beq.n	80074de <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80074da:	2000      	movs	r0, #0
 80074dc:	e010      	b.n	8007500 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80074de:	694a      	ldr	r2, [r1, #20]
 80074e0:	06d2      	lsls	r2, r2, #27
 80074e2:	d50e      	bpl.n	8007502 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80074e4:	f06f 0210 	mvn.w	r2, #16
 80074e8:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80074ea:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80074ec:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80074ee:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80074f2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80074f6:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80074f8:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80074fa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80074fe:	2001      	movs	r0, #1
}
 8007500:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007502:	f7ff fc9b 	bl	8006e3c <HAL_GetTick>
 8007506:	1b80      	subs	r0, r0, r6
 8007508:	42a8      	cmp	r0, r5
 800750a:	d801      	bhi.n	8007510 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800750c:	2d00      	cmp	r5, #0
 800750e:	d1df      	bne.n	80074d0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007510:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8007512:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007514:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007516:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800751a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800751e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007520:	f042 0220 	orr.w	r2, r2, #32
 8007524:	e7e8      	b.n	80074f8 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08007526 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8007526:	b570      	push	{r4, r5, r6, lr}
 8007528:	4604      	mov	r4, r0
 800752a:	460d      	mov	r5, r1
 800752c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800752e:	6823      	ldr	r3, [r4, #0]
 8007530:	695b      	ldr	r3, [r3, #20]
 8007532:	075b      	lsls	r3, r3, #29
 8007534:	d501      	bpl.n	800753a <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8007536:	2000      	movs	r0, #0
}
 8007538:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800753a:	4620      	mov	r0, r4
 800753c:	f7ff ff3d 	bl	80073ba <I2C_IsAcknowledgeFailed>
 8007540:	b9a8      	cbnz	r0, 800756e <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8007542:	1c6a      	adds	r2, r5, #1
 8007544:	d0f3      	beq.n	800752e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007546:	f7ff fc79 	bl	8006e3c <HAL_GetTick>
 800754a:	1b80      	subs	r0, r0, r6
 800754c:	42a8      	cmp	r0, r5
 800754e:	d801      	bhi.n	8007554 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8007550:	2d00      	cmp	r5, #0
 8007552:	d1ec      	bne.n	800752e <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007554:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8007556:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007558:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800755a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800755e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007562:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007564:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007568:	f042 0220 	orr.w	r2, r2, #32
 800756c:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800756e:	2001      	movs	r0, #1
 8007570:	e7e2      	b.n	8007538 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08007572 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8007572:	b570      	push	{r4, r5, r6, lr}
 8007574:	4604      	mov	r4, r0
 8007576:	460d      	mov	r5, r1
 8007578:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800757a:	6823      	ldr	r3, [r4, #0]
 800757c:	695b      	ldr	r3, [r3, #20]
 800757e:	061b      	lsls	r3, r3, #24
 8007580:	d501      	bpl.n	8007586 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8007582:	2000      	movs	r0, #0
}
 8007584:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007586:	4620      	mov	r0, r4
 8007588:	f7ff ff17 	bl	80073ba <I2C_IsAcknowledgeFailed>
 800758c:	b9a8      	cbnz	r0, 80075ba <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800758e:	1c6a      	adds	r2, r5, #1
 8007590:	d0f3      	beq.n	800757a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007592:	f7ff fc53 	bl	8006e3c <HAL_GetTick>
 8007596:	1b80      	subs	r0, r0, r6
 8007598:	42a8      	cmp	r0, r5
 800759a:	d801      	bhi.n	80075a0 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800759c:	2d00      	cmp	r5, #0
 800759e:	d1ec      	bne.n	800757a <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80075a0:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80075a2:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80075a4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80075a6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80075aa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80075ae:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80075b0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80075b4:	f042 0220 	orr.w	r2, r2, #32
 80075b8:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80075ba:	2001      	movs	r0, #1
 80075bc:	e7e2      	b.n	8007584 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

080075c0 <I2C_RequestMemoryWrite>:
{
 80075c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80075c4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80075c6:	6802      	ldr	r2, [r0, #0]
{
 80075c8:	b085      	sub	sp, #20
 80075ca:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 80075ce:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80075d0:	6813      	ldr	r3, [r2, #0]
 80075d2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80075d6:	6013      	str	r3, [r2, #0]
{
 80075d8:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80075da:	463b      	mov	r3, r7
 80075dc:	f8cd 8000 	str.w	r8, [sp]
 80075e0:	2200      	movs	r2, #0
 80075e2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80075e6:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80075e8:	f7ff ff01 	bl	80073ee <I2C_WaitOnFlagUntilTimeout>
 80075ec:	6823      	ldr	r3, [r4, #0]
 80075ee:	b138      	cbz	r0, 8007600 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80075f0:	681b      	ldr	r3, [r3, #0]
 80075f2:	05db      	lsls	r3, r3, #23
 80075f4:	d502      	bpl.n	80075fc <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80075f6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80075fa:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80075fc:	2003      	movs	r0, #3
 80075fe:	e00a      	b.n	8007616 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007600:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8007604:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007606:	4919      	ldr	r1, [pc, #100]	; (800766c <I2C_RequestMemoryWrite+0xac>)
 8007608:	4643      	mov	r3, r8
 800760a:	463a      	mov	r2, r7
 800760c:	4620      	mov	r0, r4
 800760e:	f7ff ff20 	bl	8007452 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007612:	b118      	cbz	r0, 800761c <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8007614:	2001      	movs	r0, #1
}
 8007616:	b005      	add	sp, #20
 8007618:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800761c:	6823      	ldr	r3, [r4, #0]
 800761e:	9003      	str	r0, [sp, #12]
 8007620:	695a      	ldr	r2, [r3, #20]
 8007622:	9203      	str	r2, [sp, #12]
 8007624:	699b      	ldr	r3, [r3, #24]
 8007626:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007628:	4642      	mov	r2, r8
 800762a:	4639      	mov	r1, r7
 800762c:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800762e:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007630:	f7ff ff9f 	bl	8007572 <I2C_WaitOnTXEFlagUntilTimeout>
 8007634:	b140      	cbz	r0, 8007648 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007636:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007638:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800763a:	bf01      	itttt	eq
 800763c:	6822      	ldreq	r2, [r4, #0]
 800763e:	6813      	ldreq	r3, [r2, #0]
 8007640:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8007644:	6013      	streq	r3, [r2, #0]
 8007646:	e7e5      	b.n	8007614 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007648:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800764c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800764e:	d102      	bne.n	8007656 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007650:	b2ed      	uxtb	r5, r5
 8007652:	611d      	str	r5, [r3, #16]
 8007654:	e7df      	b.n	8007616 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8007656:	0a2a      	lsrs	r2, r5, #8
 8007658:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800765a:	4639      	mov	r1, r7
 800765c:	4642      	mov	r2, r8
 800765e:	4620      	mov	r0, r4
 8007660:	f7ff ff87 	bl	8007572 <I2C_WaitOnTXEFlagUntilTimeout>
 8007664:	2800      	cmp	r0, #0
 8007666:	d1e6      	bne.n	8007636 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007668:	6823      	ldr	r3, [r4, #0]
 800766a:	e7f1      	b.n	8007650 <I2C_RequestMemoryWrite+0x90>
 800766c:	00010002 	.word	0x00010002

08007670 <I2C_RequestMemoryRead>:
{
 8007670:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007674:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007676:	6803      	ldr	r3, [r0, #0]
{
 8007678:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800767a:	681a      	ldr	r2, [r3, #0]
 800767c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007680:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007682:	681a      	ldr	r2, [r3, #0]
{
 8007684:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007688:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800768c:	601a      	str	r2, [r3, #0]
{
 800768e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007690:	463b      	mov	r3, r7
 8007692:	f8cd 8000 	str.w	r8, [sp]
 8007696:	2200      	movs	r2, #0
 8007698:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800769c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800769e:	f7ff fea6 	bl	80073ee <I2C_WaitOnFlagUntilTimeout>
 80076a2:	6823      	ldr	r3, [r4, #0]
 80076a4:	b148      	cbz	r0, 80076ba <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80076a6:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80076a8:	05db      	lsls	r3, r3, #23
 80076aa:	d502      	bpl.n	80076b2 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80076ac:	f44f 7300 	mov.w	r3, #512	; 0x200
 80076b0:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80076b2:	2003      	movs	r0, #3
}
 80076b4:	b004      	add	sp, #16
 80076b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80076ba:	fa5f f986 	uxtb.w	r9, r6
 80076be:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80076c2:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80076c4:	492a      	ldr	r1, [pc, #168]	; (8007770 <I2C_RequestMemoryRead+0x100>)
 80076c6:	4643      	mov	r3, r8
 80076c8:	463a      	mov	r2, r7
 80076ca:	4620      	mov	r0, r4
 80076cc:	f7ff fec1 	bl	8007452 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80076d0:	b108      	cbz	r0, 80076d6 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 80076d2:	2001      	movs	r0, #1
 80076d4:	e7ee      	b.n	80076b4 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80076d6:	6823      	ldr	r3, [r4, #0]
 80076d8:	9003      	str	r0, [sp, #12]
 80076da:	695a      	ldr	r2, [r3, #20]
 80076dc:	9203      	str	r2, [sp, #12]
 80076de:	699b      	ldr	r3, [r3, #24]
 80076e0:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80076e2:	4642      	mov	r2, r8
 80076e4:	4639      	mov	r1, r7
 80076e6:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80076e8:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80076ea:	f7ff ff42 	bl	8007572 <I2C_WaitOnTXEFlagUntilTimeout>
 80076ee:	b140      	cbz	r0, 8007702 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80076f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80076f2:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80076f4:	bf01      	itttt	eq
 80076f6:	6822      	ldreq	r2, [r4, #0]
 80076f8:	6813      	ldreq	r3, [r2, #0]
 80076fa:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80076fe:	6013      	streq	r3, [r2, #0]
 8007700:	e7e7      	b.n	80076d2 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007702:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007706:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007708:	d11a      	bne.n	8007740 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800770a:	b2ed      	uxtb	r5, r5
 800770c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800770e:	4642      	mov	r2, r8
 8007710:	4639      	mov	r1, r7
 8007712:	4620      	mov	r0, r4
 8007714:	f7ff ff2d 	bl	8007572 <I2C_WaitOnTXEFlagUntilTimeout>
 8007718:	2800      	cmp	r0, #0
 800771a:	d1e9      	bne.n	80076f0 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800771c:	6822      	ldr	r2, [r4, #0]
 800771e:	6813      	ldr	r3, [r2, #0]
 8007720:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007724:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007726:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800772a:	4602      	mov	r2, r0
 800772c:	f8cd 8000 	str.w	r8, [sp]
 8007730:	463b      	mov	r3, r7
 8007732:	4620      	mov	r0, r4
 8007734:	f7ff fe5b 	bl	80073ee <I2C_WaitOnFlagUntilTimeout>
 8007738:	6822      	ldr	r2, [r4, #0]
 800773a:	b160      	cbz	r0, 8007756 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800773c:	6813      	ldr	r3, [r2, #0]
 800773e:	e7b3      	b.n	80076a8 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8007740:	0a2a      	lsrs	r2, r5, #8
 8007742:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007744:	4639      	mov	r1, r7
 8007746:	4642      	mov	r2, r8
 8007748:	4620      	mov	r0, r4
 800774a:	f7ff ff12 	bl	8007572 <I2C_WaitOnTXEFlagUntilTimeout>
 800774e:	2800      	cmp	r0, #0
 8007750:	d1ce      	bne.n	80076f0 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007752:	6823      	ldr	r3, [r4, #0]
 8007754:	e7d9      	b.n	800770a <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8007756:	f049 0301 	orr.w	r3, r9, #1
 800775a:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800775c:	4904      	ldr	r1, [pc, #16]	; (8007770 <I2C_RequestMemoryRead+0x100>)
 800775e:	4643      	mov	r3, r8
 8007760:	463a      	mov	r2, r7
 8007762:	4620      	mov	r0, r4
 8007764:	f7ff fe75 	bl	8007452 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8007768:	3800      	subs	r0, #0
 800776a:	bf18      	it	ne
 800776c:	2001      	movne	r0, #1
 800776e:	e7a1      	b.n	80076b4 <I2C_RequestMemoryRead+0x44>
 8007770:	00010002 	.word	0x00010002

08007774 <HAL_I2C_Init>:
{
 8007774:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8007776:	4604      	mov	r4, r0
 8007778:	b908      	cbnz	r0, 800777e <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800777a:	2001      	movs	r0, #1
}
 800777c:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800777e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007782:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007786:	b91b      	cbnz	r3, 8007790 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8007788:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800778c:	f7fa f9ac 	bl	8001ae8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8007790:	2324      	movs	r3, #36	; 0x24
 8007792:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8007796:	6823      	ldr	r3, [r4, #0]
 8007798:	681a      	ldr	r2, [r3, #0]
 800779a:	f022 0201 	bic.w	r2, r2, #1
 800779e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80077a0:	681a      	ldr	r2, [r3, #0]
 80077a2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80077a6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80077a8:	681a      	ldr	r2, [r3, #0]
 80077aa:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80077ae:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80077b0:	f000 fe74 	bl	800849c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80077b4:	4b3f      	ldr	r3, [pc, #252]	; (80078b4 <HAL_I2C_Init+0x140>)
 80077b6:	6865      	ldr	r5, [r4, #4]
 80077b8:	429d      	cmp	r5, r3
 80077ba:	bf94      	ite	ls
 80077bc:	4b3e      	ldrls	r3, [pc, #248]	; (80078b8 <HAL_I2C_Init+0x144>)
 80077be:	4b3f      	ldrhi	r3, [pc, #252]	; (80078bc <HAL_I2C_Init+0x148>)
 80077c0:	4298      	cmp	r0, r3
 80077c2:	bf8c      	ite	hi
 80077c4:	2300      	movhi	r3, #0
 80077c6:	2301      	movls	r3, #1
 80077c8:	2b00      	cmp	r3, #0
 80077ca:	d1d6      	bne.n	800777a <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80077cc:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80077ce:	4e39      	ldr	r6, [pc, #228]	; (80078b4 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80077d0:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80077d2:	493b      	ldr	r1, [pc, #236]	; (80078c0 <HAL_I2C_Init+0x14c>)
 80077d4:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80077d8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80077dc:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80077de:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80077e0:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80077e2:	bf88      	it	hi
 80077e4:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 80077e8:	6a13      	ldr	r3, [r2, #32]
 80077ea:	bf88      	it	hi
 80077ec:	4371      	mulhi	r1, r6
 80077ee:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80077f2:	bf84      	itt	hi
 80077f4:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80077f8:	fbb1 f1f6 	udivhi	r1, r1, r6
 80077fc:	3101      	adds	r1, #1
 80077fe:	4319      	orrs	r1, r3
 8007800:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8007802:	69d1      	ldr	r1, [r2, #28]
 8007804:	1e43      	subs	r3, r0, #1
 8007806:	482b      	ldr	r0, [pc, #172]	; (80078b4 <HAL_I2C_Init+0x140>)
 8007808:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800780c:	4285      	cmp	r5, r0
 800780e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8007812:	d832      	bhi.n	800787a <HAL_I2C_Init+0x106>
 8007814:	006d      	lsls	r5, r5, #1
 8007816:	f640 70fc 	movw	r0, #4092	; 0xffc
 800781a:	fbb3 f3f5 	udiv	r3, r3, r5
 800781e:	3301      	adds	r3, #1
 8007820:	4203      	tst	r3, r0
 8007822:	d042      	beq.n	80078aa <HAL_I2C_Init+0x136>
 8007824:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007828:	430b      	orrs	r3, r1
 800782a:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800782c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8007830:	6811      	ldr	r1, [r2, #0]
 8007832:	4303      	orrs	r3, r0
 8007834:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8007838:	430b      	orrs	r3, r1
 800783a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800783c:	6891      	ldr	r1, [r2, #8]
 800783e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8007842:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8007846:	4303      	orrs	r3, r0
 8007848:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800784c:	430b      	orrs	r3, r1
 800784e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8007850:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8007854:	68d1      	ldr	r1, [r2, #12]
 8007856:	4303      	orrs	r3, r0
 8007858:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800785c:	430b      	orrs	r3, r1
 800785e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8007860:	6813      	ldr	r3, [r2, #0]
 8007862:	f043 0301 	orr.w	r3, r3, #1
 8007866:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007868:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800786a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800786c:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800786e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8007872:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8007874:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8007878:	e780      	b.n	800777c <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800787a:	68a0      	ldr	r0, [r4, #8]
 800787c:	b950      	cbnz	r0, 8007894 <HAL_I2C_Init+0x120>
 800787e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007882:	fbb3 f3f5 	udiv	r3, r3, r5
 8007886:	3301      	adds	r3, #1
 8007888:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800788c:	b17b      	cbz	r3, 80078ae <HAL_I2C_Init+0x13a>
 800788e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8007892:	e7c9      	b.n	8007828 <HAL_I2C_Init+0xb4>
 8007894:	2019      	movs	r0, #25
 8007896:	4345      	muls	r5, r0
 8007898:	fbb3 f3f5 	udiv	r3, r3, r5
 800789c:	3301      	adds	r3, #1
 800789e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80078a2:	b123      	cbz	r3, 80078ae <HAL_I2C_Init+0x13a>
 80078a4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80078a8:	e7be      	b.n	8007828 <HAL_I2C_Init+0xb4>
 80078aa:	2304      	movs	r3, #4
 80078ac:	e7bc      	b.n	8007828 <HAL_I2C_Init+0xb4>
 80078ae:	2301      	movs	r3, #1
 80078b0:	e7ba      	b.n	8007828 <HAL_I2C_Init+0xb4>
 80078b2:	bf00      	nop
 80078b4:	000186a0 	.word	0x000186a0
 80078b8:	001e847f 	.word	0x001e847f
 80078bc:	003d08ff 	.word	0x003d08ff
 80078c0:	000f4240 	.word	0x000f4240

080078c4 <HAL_I2C_Mem_Write>:
{
 80078c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80078c8:	4604      	mov	r4, r0
 80078ca:	4699      	mov	r9, r3
 80078cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80078ce:	460f      	mov	r7, r1
 80078d0:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80078d2:	f7ff fab3 	bl	8006e3c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80078d6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80078da:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80078dc:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80078de:	d003      	beq.n	80078e8 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80078e0:	2002      	movs	r0, #2
}
 80078e2:	b003      	add	sp, #12
 80078e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80078e8:	9000      	str	r0, [sp, #0]
 80078ea:	493c      	ldr	r1, [pc, #240]	; (80079dc <HAL_I2C_Mem_Write+0x118>)
 80078ec:	2319      	movs	r3, #25
 80078ee:	2201      	movs	r2, #1
 80078f0:	4620      	mov	r0, r4
 80078f2:	f7ff fd7c 	bl	80073ee <I2C_WaitOnFlagUntilTimeout>
 80078f6:	2800      	cmp	r0, #0
 80078f8:	d1f2      	bne.n	80078e0 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80078fa:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80078fe:	2b01      	cmp	r3, #1
 8007900:	d0ee      	beq.n	80078e0 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007902:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007904:	2301      	movs	r3, #1
 8007906:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800790a:	6803      	ldr	r3, [r0, #0]
 800790c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800790e:	bf5e      	ittt	pl
 8007910:	6803      	ldrpl	r3, [r0, #0]
 8007912:	f043 0301 	orrpl.w	r3, r3, #1
 8007916:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007918:	6803      	ldr	r3, [r0, #0]
 800791a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800791e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8007920:	2321      	movs	r3, #33	; 0x21
 8007922:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007926:	2340      	movs	r3, #64	; 0x40
 8007928:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800792c:	2300      	movs	r3, #0
 800792e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8007930:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007932:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8007934:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8007938:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800793a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800793c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800793e:	4b28      	ldr	r3, [pc, #160]	; (80079e0 <HAL_I2C_Mem_Write+0x11c>)
 8007940:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8007942:	e9cd 6500 	strd	r6, r5, [sp]
 8007946:	464b      	mov	r3, r9
 8007948:	4642      	mov	r2, r8
 800794a:	4639      	mov	r1, r7
 800794c:	4620      	mov	r0, r4
 800794e:	f7ff fe37 	bl	80075c0 <I2C_RequestMemoryWrite>
 8007952:	2800      	cmp	r0, #0
 8007954:	d02a      	beq.n	80079ac <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8007956:	2001      	movs	r0, #1
 8007958:	e7c3      	b.n	80078e2 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800795a:	f7ff fe0a 	bl	8007572 <I2C_WaitOnTXEFlagUntilTimeout>
 800795e:	b140      	cbz	r0, 8007972 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007960:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007962:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007964:	bf01      	itttt	eq
 8007966:	6822      	ldreq	r2, [r4, #0]
 8007968:	6813      	ldreq	r3, [r2, #0]
 800796a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800796e:	6013      	streq	r3, [r2, #0]
 8007970:	e7f1      	b.n	8007956 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007972:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007974:	6827      	ldr	r7, [r4, #0]
 8007976:	461a      	mov	r2, r3
 8007978:	f812 1b01 	ldrb.w	r1, [r2], #1
 800797c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800797e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8007980:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007982:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8007984:	3a01      	subs	r2, #1
 8007986:	b292      	uxth	r2, r2
 8007988:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800798a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800798c:	1e48      	subs	r0, r1, #1
 800798e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007990:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8007992:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007994:	d50a      	bpl.n	80079ac <HAL_I2C_Mem_Write+0xe8>
 8007996:	b148      	cbz	r0, 80079ac <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007998:	785a      	ldrb	r2, [r3, #1]
 800799a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800799c:	3302      	adds	r3, #2
 800799e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80079a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80079a2:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80079a4:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80079a6:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80079a8:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80079aa:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80079ac:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80079ae:	462a      	mov	r2, r5
 80079b0:	4631      	mov	r1, r6
 80079b2:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d1d0      	bne.n	800795a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80079b8:	f7ff fdb5 	bl	8007526 <I2C_WaitOnBTFFlagUntilTimeout>
 80079bc:	2800      	cmp	r0, #0
 80079be:	d1cf      	bne.n	8007960 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80079c0:	6822      	ldr	r2, [r4, #0]
 80079c2:	6813      	ldr	r3, [r2, #0]
 80079c4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80079c8:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80079ca:	2320      	movs	r3, #32
 80079cc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80079d0:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80079d4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80079d8:	e783      	b.n	80078e2 <HAL_I2C_Mem_Write+0x1e>
 80079da:	bf00      	nop
 80079dc:	00100002 	.word	0x00100002
 80079e0:	ffff0000 	.word	0xffff0000

080079e4 <HAL_I2C_Mem_Read>:
{
 80079e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80079e8:	4604      	mov	r4, r0
 80079ea:	b087      	sub	sp, #28
 80079ec:	4699      	mov	r9, r3
 80079ee:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80079f0:	460d      	mov	r5, r1
 80079f2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80079f4:	f7ff fa22 	bl	8006e3c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80079f8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80079fc:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80079fe:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007a00:	d004      	beq.n	8007a0c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8007a02:	2502      	movs	r5, #2
}
 8007a04:	4628      	mov	r0, r5
 8007a06:	b007      	add	sp, #28
 8007a08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007a0c:	9000      	str	r0, [sp, #0]
 8007a0e:	4976      	ldr	r1, [pc, #472]	; (8007be8 <HAL_I2C_Mem_Read+0x204>)
 8007a10:	2319      	movs	r3, #25
 8007a12:	2201      	movs	r2, #1
 8007a14:	4620      	mov	r0, r4
 8007a16:	f7ff fcea 	bl	80073ee <I2C_WaitOnFlagUntilTimeout>
 8007a1a:	2800      	cmp	r0, #0
 8007a1c:	d1f1      	bne.n	8007a02 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8007a1e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8007a22:	2b01      	cmp	r3, #1
 8007a24:	d0ed      	beq.n	8007a02 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007a26:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007a28:	2301      	movs	r3, #1
 8007a2a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007a2e:	6803      	ldr	r3, [r0, #0]
 8007a30:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8007a32:	bf5e      	ittt	pl
 8007a34:	6803      	ldrpl	r3, [r0, #0]
 8007a36:	f043 0301 	orrpl.w	r3, r3, #1
 8007a3a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007a3c:	6803      	ldr	r3, [r0, #0]
 8007a3e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007a42:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8007a44:	2322      	movs	r3, #34	; 0x22
 8007a46:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007a4a:	2340      	movs	r3, #64	; 0x40
 8007a4c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007a50:	2300      	movs	r3, #0
 8007a52:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8007a54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007a56:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8007a58:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8007a5c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007a5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007a60:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8007a62:	4b62      	ldr	r3, [pc, #392]	; (8007bec <HAL_I2C_Mem_Read+0x208>)
 8007a64:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8007a66:	4629      	mov	r1, r5
 8007a68:	e9cd 7600 	strd	r7, r6, [sp]
 8007a6c:	464b      	mov	r3, r9
 8007a6e:	4642      	mov	r2, r8
 8007a70:	4620      	mov	r0, r4
 8007a72:	f7ff fdfd 	bl	8007670 <I2C_RequestMemoryRead>
 8007a76:	4605      	mov	r5, r0
 8007a78:	b108      	cbz	r0, 8007a7e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8007a7a:	2501      	movs	r5, #1
 8007a7c:	e7c2      	b.n	8007a04 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8007a7e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007a80:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8007a82:	b9b2      	cbnz	r2, 8007ab2 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007a84:	9002      	str	r0, [sp, #8]
 8007a86:	695a      	ldr	r2, [r3, #20]
 8007a88:	9202      	str	r2, [sp, #8]
 8007a8a:	699a      	ldr	r2, [r3, #24]
 8007a8c:	9202      	str	r2, [sp, #8]
 8007a8e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007a90:	681a      	ldr	r2, [r3, #0]
 8007a92:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007a96:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007a98:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8007bf0 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8007a9c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007a9e:	2b00      	cmp	r3, #0
 8007aa0:	d12c      	bne.n	8007afc <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8007aa2:	2220      	movs	r2, #32
 8007aa4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8007aa8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007aac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8007ab0:	e7a8      	b.n	8007a04 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8007ab2:	2a01      	cmp	r2, #1
 8007ab4:	d10a      	bne.n	8007acc <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007ab6:	681a      	ldr	r2, [r3, #0]
 8007ab8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007abc:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007abe:	9003      	str	r0, [sp, #12]
 8007ac0:	695a      	ldr	r2, [r3, #20]
 8007ac2:	9203      	str	r2, [sp, #12]
 8007ac4:	699a      	ldr	r2, [r3, #24]
 8007ac6:	9203      	str	r2, [sp, #12]
 8007ac8:	9a03      	ldr	r2, [sp, #12]
 8007aca:	e7e1      	b.n	8007a90 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8007acc:	2a02      	cmp	r2, #2
 8007ace:	d10e      	bne.n	8007aee <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007ad0:	681a      	ldr	r2, [r3, #0]
 8007ad2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007ad6:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007ad8:	681a      	ldr	r2, [r3, #0]
 8007ada:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007ade:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007ae0:	9004      	str	r0, [sp, #16]
 8007ae2:	695a      	ldr	r2, [r3, #20]
 8007ae4:	9204      	str	r2, [sp, #16]
 8007ae6:	699b      	ldr	r3, [r3, #24]
 8007ae8:	9304      	str	r3, [sp, #16]
 8007aea:	9b04      	ldr	r3, [sp, #16]
 8007aec:	e7d4      	b.n	8007a98 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007aee:	9005      	str	r0, [sp, #20]
 8007af0:	695a      	ldr	r2, [r3, #20]
 8007af2:	9205      	str	r2, [sp, #20]
 8007af4:	699b      	ldr	r3, [r3, #24]
 8007af6:	9305      	str	r3, [sp, #20]
 8007af8:	9b05      	ldr	r3, [sp, #20]
 8007afa:	e7cd      	b.n	8007a98 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8007afc:	2b03      	cmp	r3, #3
 8007afe:	d856      	bhi.n	8007bae <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8007b00:	2b01      	cmp	r3, #1
 8007b02:	d115      	bne.n	8007b30 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007b04:	4632      	mov	r2, r6
 8007b06:	4639      	mov	r1, r7
 8007b08:	4620      	mov	r0, r4
 8007b0a:	f7ff fcdd 	bl	80074c8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007b0e:	2800      	cmp	r0, #0
 8007b10:	d1b3      	bne.n	8007a7a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b12:	6823      	ldr	r3, [r4, #0]
 8007b14:	691a      	ldr	r2, [r3, #16]
 8007b16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b18:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007b1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b1c:	3301      	adds	r3, #1
 8007b1e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007b20:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007b22:	3b01      	subs	r3, #1
 8007b24:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007b26:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007b28:	3b01      	subs	r3, #1
 8007b2a:	b29b      	uxth	r3, r3
 8007b2c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8007b2e:	e7b5      	b.n	8007a9c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8007b30:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007b32:	9600      	str	r6, [sp, #0]
 8007b34:	463b      	mov	r3, r7
 8007b36:	f04f 0200 	mov.w	r2, #0
 8007b3a:	4641      	mov	r1, r8
 8007b3c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8007b3e:	d119      	bne.n	8007b74 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007b40:	f7ff fc55 	bl	80073ee <I2C_WaitOnFlagUntilTimeout>
 8007b44:	2800      	cmp	r0, #0
 8007b46:	d198      	bne.n	8007a7a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007b48:	6823      	ldr	r3, [r4, #0]
 8007b4a:	681a      	ldr	r2, [r3, #0]
 8007b4c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007b50:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b52:	691a      	ldr	r2, [r3, #16]
 8007b54:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b56:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007b58:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007b5a:	1c53      	adds	r3, r2, #1
 8007b5c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007b5e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007b60:	3b01      	subs	r3, #1
 8007b62:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007b64:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007b66:	3b01      	subs	r3, #1
 8007b68:	b29b      	uxth	r3, r3
 8007b6a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b6c:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b6e:	691b      	ldr	r3, [r3, #16]
 8007b70:	7053      	strb	r3, [r2, #1]
 8007b72:	e7d2      	b.n	8007b1a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007b74:	f7ff fc3b 	bl	80073ee <I2C_WaitOnFlagUntilTimeout>
 8007b78:	2800      	cmp	r0, #0
 8007b7a:	f47f af7e 	bne.w	8007a7a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007b7e:	6823      	ldr	r3, [r4, #0]
 8007b80:	681a      	ldr	r2, [r3, #0]
 8007b82:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007b86:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b88:	691a      	ldr	r2, [r3, #16]
 8007b8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b8c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007b8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007b90:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8007b92:	3301      	adds	r3, #1
 8007b94:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007b96:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007b98:	3b01      	subs	r3, #1
 8007b9a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007b9c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007b9e:	3b01      	subs	r3, #1
 8007ba0:	b29b      	uxth	r3, r3
 8007ba2:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007ba4:	4602      	mov	r2, r0
 8007ba6:	463b      	mov	r3, r7
 8007ba8:	4641      	mov	r1, r8
 8007baa:	4620      	mov	r0, r4
 8007bac:	e7c8      	b.n	8007b40 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007bae:	4632      	mov	r2, r6
 8007bb0:	4639      	mov	r1, r7
 8007bb2:	4620      	mov	r0, r4
 8007bb4:	f7ff fc88 	bl	80074c8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007bb8:	2800      	cmp	r0, #0
 8007bba:	f47f af5e 	bne.w	8007a7a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007bbe:	6823      	ldr	r3, [r4, #0]
 8007bc0:	691a      	ldr	r2, [r3, #16]
 8007bc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007bc4:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8007bc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007bc8:	1c53      	adds	r3, r2, #1
 8007bca:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8007bcc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007bce:	3b01      	subs	r3, #1
 8007bd0:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8007bd2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007bd4:	3b01      	subs	r3, #1
 8007bd6:	b29b      	uxth	r3, r3
 8007bd8:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8007bda:	6823      	ldr	r3, [r4, #0]
 8007bdc:	6959      	ldr	r1, [r3, #20]
 8007bde:	0749      	lsls	r1, r1, #29
 8007be0:	f57f af5c 	bpl.w	8007a9c <HAL_I2C_Mem_Read+0xb8>
 8007be4:	e7c3      	b.n	8007b6e <HAL_I2C_Mem_Read+0x18a>
 8007be6:	bf00      	nop
 8007be8:	00100002 	.word	0x00100002
 8007bec:	ffff0000 	.word	0xffff0000
 8007bf0:	00010004 	.word	0x00010004

08007bf4 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8007bf4:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007bf6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007bfa:	2b20      	cmp	r3, #32
 8007bfc:	b2dc      	uxtb	r4, r3
 8007bfe:	d116      	bne.n	8007c2e <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8007c00:	2324      	movs	r3, #36	; 0x24
 8007c02:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8007c06:	6803      	ldr	r3, [r0, #0]
 8007c08:	681a      	ldr	r2, [r3, #0]
 8007c0a:	f022 0201 	bic.w	r2, r2, #1
 8007c0e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8007c10:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007c12:	f022 0210 	bic.w	r2, r2, #16
 8007c16:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8007c18:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007c1a:	4311      	orrs	r1, r2
 8007c1c:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8007c1e:	681a      	ldr	r2, [r3, #0]
 8007c20:	f042 0201 	orr.w	r2, r2, #1
 8007c24:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8007c26:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8007c2a:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8007c2c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8007c2e:	2002      	movs	r0, #2
 8007c30:	e7fc      	b.n	8007c2c <HAL_I2CEx_ConfigAnalogFilter+0x38>

08007c32 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8007c32:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8007c34:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007c38:	2b20      	cmp	r3, #32
 8007c3a:	b2dc      	uxtb	r4, r3
 8007c3c:	d116      	bne.n	8007c6c <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8007c3e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8007c40:	2324      	movs	r3, #36	; 0x24
 8007c42:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8007c46:	6813      	ldr	r3, [r2, #0]
 8007c48:	f023 0301 	bic.w	r3, r3, #1
 8007c4c:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8007c4e:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8007c50:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8007c54:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8007c56:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8007c58:	b29b      	uxth	r3, r3
 8007c5a:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8007c5c:	6813      	ldr	r3, [r2, #0]
 8007c5e:	f043 0301 	orr.w	r3, r3, #1
 8007c62:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8007c64:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8007c68:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8007c6a:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8007c6c:	2002      	movs	r0, #2
 8007c6e:	e7fc      	b.n	8007c6a <HAL_I2CEx_ConfigDigitalFilter+0x38>

08007c70 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007c70:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8007c72:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007c76:	01d2      	lsls	r2, r2, #7
 8007c78:	3284      	adds	r2, #132	; 0x84
 8007c7a:	1883      	adds	r3, r0, r2
{
 8007c7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007c80:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007c82:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007c84:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8007c86:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007c8a:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007c8e:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007c90:	68c5      	ldr	r5, [r0, #12]
 8007c92:	f10c 0701 	add.w	r7, ip, #1
 8007c96:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007c9a:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007c9e:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007ca0:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007ca2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8007ca6:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8007ca8:	68c5      	ldr	r5, [r0, #12]
 8007caa:	68ce      	ldr	r6, [r1, #12]
 8007cac:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8007cb0:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8007cb2:	689d      	ldr	r5, [r3, #8]
 8007cb4:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007cb8:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8007cba:	68c7      	ldr	r7, [r0, #12]
 8007cbc:	688d      	ldr	r5, [r1, #8]
 8007cbe:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8007cc2:	3501      	adds	r5, #1
 8007cc4:	443d      	add	r5, r7
 8007cc6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8007cca:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007ccc:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007cce:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007cd0:	f025 0507 	bic.w	r5, r5, #7
 8007cd4:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007cd6:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007cda:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007cdc:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8007cde:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8007ce2:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007ce6:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8007cea:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8007cee:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8007cf2:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8007cf6:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8007cfa:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8007cfc:	695d      	ldr	r5, [r3, #20]
 8007cfe:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8007d02:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8007d04:	694d      	ldr	r5, [r1, #20]
 8007d06:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8007d08:	69dd      	ldr	r5, [r3, #28]
 8007d0a:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8007d0e:	f025 0507 	bic.w	r5, r5, #7
 8007d12:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8007d14:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8007d18:	433d      	orrs	r5, r7
 8007d1a:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007d1c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007d1e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007d20:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007d24:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8007d26:	b31e      	cbz	r6, 8007d70 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007d28:	2e01      	cmp	r6, #1
 8007d2a:	d023      	beq.n	8007d74 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007d2c:	1eb5      	subs	r5, r6, #2
 8007d2e:	2d02      	cmp	r5, #2
 8007d30:	d922      	bls.n	8007d78 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8007d32:	2e07      	cmp	r6, #7
 8007d34:	bf0c      	ite	eq
 8007d36:	2502      	moveq	r5, #2
 8007d38:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007d3a:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8007d3c:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8007d40:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007d42:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8007d46:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007d48:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007d4a:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8007d4c:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007d4e:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8007d50:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8007d54:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8007d56:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8007d58:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8007d5c:	f024 0407 	bic.w	r4, r4, #7
 8007d60:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007d62:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8007d64:	5883      	ldr	r3, [r0, r2]
 8007d66:	f043 0301 	orr.w	r3, r3, #1
 8007d6a:	5083      	str	r3, [r0, r2]
}
 8007d6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8007d70:	2504      	movs	r5, #4
 8007d72:	e7e2      	b.n	8007d3a <LTDC_SetConfig+0xca>
    tmp = 3U;
 8007d74:	2503      	movs	r5, #3
 8007d76:	e7e0      	b.n	8007d3a <LTDC_SetConfig+0xca>
    tmp = 2U;
 8007d78:	2502      	movs	r5, #2
 8007d7a:	e7de      	b.n	8007d3a <LTDC_SetConfig+0xca>

08007d7c <HAL_LTDC_Init>:
{
 8007d7c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8007d7e:	4604      	mov	r4, r0
 8007d80:	2800      	cmp	r0, #0
 8007d82:	d063      	beq.n	8007e4c <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8007d84:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8007d88:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007d8c:	b91b      	cbnz	r3, 8007d96 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8007d8e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8007d92:	f7f9 ff05 	bl	8001ba0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007d96:	2302      	movs	r3, #2
 8007d98:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8007d9c:	6823      	ldr	r3, [r4, #0]
 8007d9e:	699a      	ldr	r2, [r3, #24]
 8007da0:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007da4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007da6:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8007daa:	4302      	orrs	r2, r0
 8007dac:	68e0      	ldr	r0, [r4, #12]
 8007dae:	6999      	ldr	r1, [r3, #24]
 8007db0:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8007db2:	6920      	ldr	r0, [r4, #16]
 8007db4:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007db6:	430a      	orrs	r2, r1
 8007db8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007dba:	689a      	ldr	r2, [r3, #8]
 8007dbc:	4924      	ldr	r1, [pc, #144]	; (8007e50 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007dbe:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007dc0:	400a      	ands	r2, r1
 8007dc2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007dc4:	689a      	ldr	r2, [r3, #8]
 8007dc6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007dca:	69a0      	ldr	r0, [r4, #24]
 8007dcc:	4302      	orrs	r2, r0
 8007dce:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007dd0:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8007dd2:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007dd4:	400a      	ands	r2, r1
 8007dd6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007dd8:	68da      	ldr	r2, [r3, #12]
 8007dda:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007dde:	6a20      	ldr	r0, [r4, #32]
 8007de0:	4302      	orrs	r2, r0
 8007de2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007de4:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8007de6:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007de8:	400a      	ands	r2, r1
 8007dea:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007dec:	691a      	ldr	r2, [r3, #16]
 8007dee:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007df2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007df4:	4302      	orrs	r2, r0
 8007df6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007df8:	695a      	ldr	r2, [r3, #20]
 8007dfa:	4011      	ands	r1, r2
 8007dfc:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007dfe:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007e00:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007e02:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8007e06:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007e08:	430a      	orrs	r2, r1
 8007e0a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007e0c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007e0e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8007e12:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007e16:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007e1a:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007e1c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007e1e:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8007e22:	430a      	orrs	r2, r1
 8007e24:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007e28:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007e2c:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007e2e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007e30:	f042 0206 	orr.w	r2, r2, #6
 8007e34:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8007e36:	699a      	ldr	r2, [r3, #24]
 8007e38:	f042 0201 	orr.w	r2, r2, #1
 8007e3c:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007e3e:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8007e40:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007e42:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8007e46:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8007e4a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007e4c:	2001      	movs	r0, #1
 8007e4e:	e7fc      	b.n	8007e4a <HAL_LTDC_Init+0xce>
 8007e50:	f000f800 	.word	0xf000f800

08007e54 <HAL_LTDC_ErrorCallback>:
 8007e54:	4770      	bx	lr

08007e56 <HAL_LTDC_ReloadEventCallback>:
 8007e56:	4770      	bx	lr

08007e58 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007e58:	6803      	ldr	r3, [r0, #0]
{
 8007e5a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007e5c:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8007e5e:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007e60:	0772      	lsls	r2, r6, #29
{
 8007e62:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007e64:	d514      	bpl.n	8007e90 <HAL_LTDC_IRQHandler+0x38>
 8007e66:	0769      	lsls	r1, r5, #29
 8007e68:	d512      	bpl.n	8007e90 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8007e6a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007e6c:	f022 0204 	bic.w	r2, r2, #4
 8007e70:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8007e72:	2204      	movs	r2, #4
 8007e74:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8007e76:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8007e7a:	f043 0301 	orr.w	r3, r3, #1
 8007e7e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8007e82:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007e84:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007e88:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007e8c:	f7ff ffe2 	bl	8007e54 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007e90:	07b2      	lsls	r2, r6, #30
 8007e92:	d516      	bpl.n	8007ec2 <HAL_LTDC_IRQHandler+0x6a>
 8007e94:	07ab      	lsls	r3, r5, #30
 8007e96:	d514      	bpl.n	8007ec2 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8007e98:	6823      	ldr	r3, [r4, #0]
 8007e9a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007e9c:	f022 0202 	bic.w	r2, r2, #2
 8007ea0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8007ea2:	2202      	movs	r2, #2
 8007ea4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8007ea6:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8007eaa:	4313      	orrs	r3, r2
 8007eac:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007eb0:	2304      	movs	r3, #4
 8007eb2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007eb6:	2300      	movs	r3, #0
 8007eb8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007ebc:	4620      	mov	r0, r4
 8007ebe:	f7ff ffc9 	bl	8007e54 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007ec2:	07f0      	lsls	r0, r6, #31
 8007ec4:	d510      	bpl.n	8007ee8 <HAL_LTDC_IRQHandler+0x90>
 8007ec6:	07e9      	lsls	r1, r5, #31
 8007ec8:	d50e      	bpl.n	8007ee8 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007eca:	6823      	ldr	r3, [r4, #0]
 8007ecc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007ece:	f022 0201 	bic.w	r2, r2, #1
 8007ed2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007ed4:	2201      	movs	r2, #1
 8007ed6:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007ed8:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007eda:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007ede:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007ee2:	4620      	mov	r0, r4
 8007ee4:	f7f9 f93e 	bl	8001164 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007ee8:	0732      	lsls	r2, r6, #28
 8007eea:	d511      	bpl.n	8007f10 <HAL_LTDC_IRQHandler+0xb8>
 8007eec:	072b      	lsls	r3, r5, #28
 8007eee:	d50f      	bpl.n	8007f10 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007ef0:	6823      	ldr	r3, [r4, #0]
 8007ef2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007ef4:	f022 0208 	bic.w	r2, r2, #8
 8007ef8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007efa:	2208      	movs	r2, #8
 8007efc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007efe:	2301      	movs	r3, #1
 8007f00:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007f04:	2300      	movs	r3, #0
 8007f06:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007f0a:	4620      	mov	r0, r4
 8007f0c:	f7ff ffa3 	bl	8007e56 <HAL_LTDC_ReloadEventCallback>
}
 8007f10:	bd70      	pop	{r4, r5, r6, pc}

08007f12 <HAL_LTDC_ConfigLayer>:
{
 8007f12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8007f16:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007f1a:	2b01      	cmp	r3, #1
{
 8007f1c:	4606      	mov	r6, r0
 8007f1e:	460f      	mov	r7, r1
 8007f20:	4694      	mov	ip, r2
 8007f22:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8007f26:	d01f      	beq.n	8007f68 <HAL_LTDC_ConfigLayer+0x56>
 8007f28:	f04f 0801 	mov.w	r8, #1
 8007f2c:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007f30:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007f34:	2434      	movs	r4, #52	; 0x34
 8007f36:	460d      	mov	r5, r1
 8007f38:	fb04 6402 	mla	r4, r4, r2, r6
 8007f3c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007f3e:	3438      	adds	r4, #56	; 0x38
 8007f40:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007f42:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007f44:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007f46:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007f48:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007f4a:	682b      	ldr	r3, [r5, #0]
 8007f4c:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007f4e:	4630      	mov	r0, r6
 8007f50:	4662      	mov	r2, ip
 8007f52:	4639      	mov	r1, r7
 8007f54:	f7ff fe8c 	bl	8007c70 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007f58:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8007f5a:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007f5c:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8007f60:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007f64:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8007f68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007f6c <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8007f6c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007f70:	2b01      	cmp	r3, #1
 8007f72:	f04f 0302 	mov.w	r3, #2
 8007f76:	d012      	beq.n	8007f9e <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007f78:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007f7c:	6803      	ldr	r3, [r0, #0]
 8007f7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007f80:	f022 0201 	bic.w	r2, r2, #1
 8007f84:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8007f86:	4a07      	ldr	r2, [pc, #28]	; (8007fa4 <HAL_LTDC_ProgramLineEvent+0x38>)
 8007f88:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8007f8a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007f8c:	f042 0201 	orr.w	r2, r2, #1
 8007f90:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8007f92:	2301      	movs	r3, #1
 8007f94:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007f98:	2300      	movs	r3, #0
 8007f9a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8007f9e:	4618      	mov	r0, r3
}
 8007fa0:	4770      	bx	lr
 8007fa2:	bf00      	nop
 8007fa4:	40016800 	.word	0x40016800

08007fa8 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007fa8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007fac:	4604      	mov	r4, r0
 8007fae:	b340      	cbz	r0, 8008002 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007fb0:	6803      	ldr	r3, [r0, #0]
 8007fb2:	07dd      	lsls	r5, r3, #31
 8007fb4:	d410      	bmi.n	8007fd8 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007fb6:	6823      	ldr	r3, [r4, #0]
 8007fb8:	0798      	lsls	r0, r3, #30
 8007fba:	d45e      	bmi.n	800807a <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007fbc:	6823      	ldr	r3, [r4, #0]
 8007fbe:	071a      	lsls	r2, r3, #28
 8007fc0:	f100 80a0 	bmi.w	8008104 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007fc4:	6823      	ldr	r3, [r4, #0]
 8007fc6:	075b      	lsls	r3, r3, #29
 8007fc8:	f100 80c0 	bmi.w	800814c <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007fcc:	69a0      	ldr	r0, [r4, #24]
 8007fce:	2800      	cmp	r0, #0
 8007fd0:	f040 8128 	bne.w	8008224 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007fd4:	2000      	movs	r0, #0
 8007fd6:	e02b      	b.n	8008030 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007fd8:	4b8f      	ldr	r3, [pc, #572]	; (8008218 <HAL_RCC_OscConfig+0x270>)
 8007fda:	689a      	ldr	r2, [r3, #8]
 8007fdc:	f002 020c 	and.w	r2, r2, #12
 8007fe0:	2a04      	cmp	r2, #4
 8007fe2:	d007      	beq.n	8007ff4 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007fe4:	689a      	ldr	r2, [r3, #8]
 8007fe6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007fea:	2a08      	cmp	r2, #8
 8007fec:	d10b      	bne.n	8008006 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007fee:	685a      	ldr	r2, [r3, #4]
 8007ff0:	0251      	lsls	r1, r2, #9
 8007ff2:	d508      	bpl.n	8008006 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007ff4:	4b88      	ldr	r3, [pc, #544]	; (8008218 <HAL_RCC_OscConfig+0x270>)
 8007ff6:	681b      	ldr	r3, [r3, #0]
 8007ff8:	039a      	lsls	r2, r3, #14
 8007ffa:	d5dc      	bpl.n	8007fb6 <HAL_RCC_OscConfig+0xe>
 8007ffc:	6863      	ldr	r3, [r4, #4]
 8007ffe:	2b00      	cmp	r3, #0
 8008000:	d1d9      	bne.n	8007fb6 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8008002:	2001      	movs	r0, #1
 8008004:	e014      	b.n	8008030 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008006:	6862      	ldr	r2, [r4, #4]
 8008008:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800800c:	d113      	bne.n	8008036 <HAL_RCC_OscConfig+0x8e>
 800800e:	681a      	ldr	r2, [r3, #0]
 8008010:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8008014:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008016:	f7fe ff11 	bl	8006e3c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800801a:	4e7f      	ldr	r6, [pc, #508]	; (8008218 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800801c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800801e:	6833      	ldr	r3, [r6, #0]
 8008020:	039b      	lsls	r3, r3, #14
 8008022:	d4c8      	bmi.n	8007fb6 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008024:	f7fe ff0a 	bl	8006e3c <HAL_GetTick>
 8008028:	1b40      	subs	r0, r0, r5
 800802a:	2864      	cmp	r0, #100	; 0x64
 800802c:	d9f7      	bls.n	800801e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800802e:	2003      	movs	r0, #3
}
 8008030:	b002      	add	sp, #8
 8008032:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008036:	4d78      	ldr	r5, [pc, #480]	; (8008218 <HAL_RCC_OscConfig+0x270>)
 8008038:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800803c:	682b      	ldr	r3, [r5, #0]
 800803e:	d107      	bne.n	8008050 <HAL_RCC_OscConfig+0xa8>
 8008040:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008044:	602b      	str	r3, [r5, #0]
 8008046:	682b      	ldr	r3, [r5, #0]
 8008048:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800804c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800804e:	e7e2      	b.n	8008016 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008050:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008054:	602b      	str	r3, [r5, #0]
 8008056:	682b      	ldr	r3, [r5, #0]
 8008058:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800805c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800805e:	2a00      	cmp	r2, #0
 8008060:	d1d9      	bne.n	8008016 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8008062:	f7fe feeb 	bl	8006e3c <HAL_GetTick>
 8008066:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8008068:	682b      	ldr	r3, [r5, #0]
 800806a:	039f      	lsls	r7, r3, #14
 800806c:	d5a3      	bpl.n	8007fb6 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800806e:	f7fe fee5 	bl	8006e3c <HAL_GetTick>
 8008072:	1b80      	subs	r0, r0, r6
 8008074:	2864      	cmp	r0, #100	; 0x64
 8008076:	d9f7      	bls.n	8008068 <HAL_RCC_OscConfig+0xc0>
 8008078:	e7d9      	b.n	800802e <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800807a:	4b67      	ldr	r3, [pc, #412]	; (8008218 <HAL_RCC_OscConfig+0x270>)
 800807c:	689a      	ldr	r2, [r3, #8]
 800807e:	f012 0f0c 	tst.w	r2, #12
 8008082:	d007      	beq.n	8008094 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008084:	689a      	ldr	r2, [r3, #8]
 8008086:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800808a:	2a08      	cmp	r2, #8
 800808c:	d111      	bne.n	80080b2 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800808e:	685b      	ldr	r3, [r3, #4]
 8008090:	025e      	lsls	r6, r3, #9
 8008092:	d40e      	bmi.n	80080b2 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008094:	4a60      	ldr	r2, [pc, #384]	; (8008218 <HAL_RCC_OscConfig+0x270>)
 8008096:	6813      	ldr	r3, [r2, #0]
 8008098:	079d      	lsls	r5, r3, #30
 800809a:	d502      	bpl.n	80080a2 <HAL_RCC_OscConfig+0xfa>
 800809c:	68e3      	ldr	r3, [r4, #12]
 800809e:	2b01      	cmp	r3, #1
 80080a0:	d1af      	bne.n	8008002 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80080a2:	6813      	ldr	r3, [r2, #0]
 80080a4:	6921      	ldr	r1, [r4, #16]
 80080a6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80080aa:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80080ae:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80080b0:	e784      	b.n	8007fbc <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80080b2:	68e2      	ldr	r2, [r4, #12]
 80080b4:	4b59      	ldr	r3, [pc, #356]	; (800821c <HAL_RCC_OscConfig+0x274>)
 80080b6:	b1b2      	cbz	r2, 80080e6 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80080b8:	2201      	movs	r2, #1
 80080ba:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80080bc:	f7fe febe 	bl	8006e3c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80080c0:	4d55      	ldr	r5, [pc, #340]	; (8008218 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80080c2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80080c4:	682b      	ldr	r3, [r5, #0]
 80080c6:	0798      	lsls	r0, r3, #30
 80080c8:	d507      	bpl.n	80080da <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80080ca:	682b      	ldr	r3, [r5, #0]
 80080cc:	6922      	ldr	r2, [r4, #16]
 80080ce:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80080d2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80080d6:	602b      	str	r3, [r5, #0]
 80080d8:	e770      	b.n	8007fbc <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80080da:	f7fe feaf 	bl	8006e3c <HAL_GetTick>
 80080de:	1b80      	subs	r0, r0, r6
 80080e0:	2802      	cmp	r0, #2
 80080e2:	d9ef      	bls.n	80080c4 <HAL_RCC_OscConfig+0x11c>
 80080e4:	e7a3      	b.n	800802e <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 80080e6:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80080e8:	f7fe fea8 	bl	8006e3c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80080ec:	4e4a      	ldr	r6, [pc, #296]	; (8008218 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80080ee:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80080f0:	6833      	ldr	r3, [r6, #0]
 80080f2:	0799      	lsls	r1, r3, #30
 80080f4:	f57f af62 	bpl.w	8007fbc <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80080f8:	f7fe fea0 	bl	8006e3c <HAL_GetTick>
 80080fc:	1b40      	subs	r0, r0, r5
 80080fe:	2802      	cmp	r0, #2
 8008100:	d9f6      	bls.n	80080f0 <HAL_RCC_OscConfig+0x148>
 8008102:	e794      	b.n	800802e <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8008104:	6962      	ldr	r2, [r4, #20]
 8008106:	4b45      	ldr	r3, [pc, #276]	; (800821c <HAL_RCC_OscConfig+0x274>)
 8008108:	b182      	cbz	r2, 800812c <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800810a:	2201      	movs	r2, #1
 800810c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8008110:	f7fe fe94 	bl	8006e3c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008114:	4e40      	ldr	r6, [pc, #256]	; (8008218 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008116:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008118:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800811a:	079f      	lsls	r7, r3, #30
 800811c:	f53f af52 	bmi.w	8007fc4 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008120:	f7fe fe8c 	bl	8006e3c <HAL_GetTick>
 8008124:	1b40      	subs	r0, r0, r5
 8008126:	2802      	cmp	r0, #2
 8008128:	d9f6      	bls.n	8008118 <HAL_RCC_OscConfig+0x170>
 800812a:	e780      	b.n	800802e <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800812c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8008130:	f7fe fe84 	bl	8006e3c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008134:	4e38      	ldr	r6, [pc, #224]	; (8008218 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008136:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008138:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800813a:	0798      	lsls	r0, r3, #30
 800813c:	f57f af42 	bpl.w	8007fc4 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008140:	f7fe fe7c 	bl	8006e3c <HAL_GetTick>
 8008144:	1b40      	subs	r0, r0, r5
 8008146:	2802      	cmp	r0, #2
 8008148:	d9f6      	bls.n	8008138 <HAL_RCC_OscConfig+0x190>
 800814a:	e770      	b.n	800802e <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800814c:	4b32      	ldr	r3, [pc, #200]	; (8008218 <HAL_RCC_OscConfig+0x270>)
 800814e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008150:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8008154:	d128      	bne.n	80081a8 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8008156:	9201      	str	r2, [sp, #4]
 8008158:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800815a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800815e:	641a      	str	r2, [r3, #64]	; 0x40
 8008160:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008162:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008166:	9301      	str	r3, [sp, #4]
 8008168:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800816a:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800816c:	4d2c      	ldr	r5, [pc, #176]	; (8008220 <HAL_RCC_OscConfig+0x278>)
 800816e:	682b      	ldr	r3, [r5, #0]
 8008170:	05d9      	lsls	r1, r3, #23
 8008172:	d51b      	bpl.n	80081ac <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008174:	68a3      	ldr	r3, [r4, #8]
 8008176:	4d28      	ldr	r5, [pc, #160]	; (8008218 <HAL_RCC_OscConfig+0x270>)
 8008178:	2b01      	cmp	r3, #1
 800817a:	d127      	bne.n	80081cc <HAL_RCC_OscConfig+0x224>
 800817c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800817e:	f043 0301 	orr.w	r3, r3, #1
 8008182:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8008184:	f7fe fe5a 	bl	8006e3c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008188:	4e23      	ldr	r6, [pc, #140]	; (8008218 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800818a:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800818c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008190:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8008192:	079b      	lsls	r3, r3, #30
 8008194:	d539      	bpl.n	800820a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8008196:	2f00      	cmp	r7, #0
 8008198:	f43f af18 	beq.w	8007fcc <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800819c:	4a1e      	ldr	r2, [pc, #120]	; (8008218 <HAL_RCC_OscConfig+0x270>)
 800819e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80081a0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80081a4:	6413      	str	r3, [r2, #64]	; 0x40
 80081a6:	e711      	b.n	8007fcc <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80081a8:	2700      	movs	r7, #0
 80081aa:	e7df      	b.n	800816c <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80081ac:	682b      	ldr	r3, [r5, #0]
 80081ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80081b2:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80081b4:	f7fe fe42 	bl	8006e3c <HAL_GetTick>
 80081b8:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80081ba:	682b      	ldr	r3, [r5, #0]
 80081bc:	05da      	lsls	r2, r3, #23
 80081be:	d4d9      	bmi.n	8008174 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80081c0:	f7fe fe3c 	bl	8006e3c <HAL_GetTick>
 80081c4:	1b80      	subs	r0, r0, r6
 80081c6:	2802      	cmp	r0, #2
 80081c8:	d9f7      	bls.n	80081ba <HAL_RCC_OscConfig+0x212>
 80081ca:	e730      	b.n	800802e <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80081cc:	2b05      	cmp	r3, #5
 80081ce:	d104      	bne.n	80081da <HAL_RCC_OscConfig+0x232>
 80081d0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80081d2:	f043 0304 	orr.w	r3, r3, #4
 80081d6:	672b      	str	r3, [r5, #112]	; 0x70
 80081d8:	e7d0      	b.n	800817c <HAL_RCC_OscConfig+0x1d4>
 80081da:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80081dc:	f022 0201 	bic.w	r2, r2, #1
 80081e0:	672a      	str	r2, [r5, #112]	; 0x70
 80081e2:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80081e4:	f022 0204 	bic.w	r2, r2, #4
 80081e8:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80081ea:	2b00      	cmp	r3, #0
 80081ec:	d1ca      	bne.n	8008184 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 80081ee:	f7fe fe25 	bl	8006e3c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80081f2:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80081f6:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80081f8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80081fa:	0798      	lsls	r0, r3, #30
 80081fc:	d5cb      	bpl.n	8008196 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80081fe:	f7fe fe1d 	bl	8006e3c <HAL_GetTick>
 8008202:	1b80      	subs	r0, r0, r6
 8008204:	4540      	cmp	r0, r8
 8008206:	d9f7      	bls.n	80081f8 <HAL_RCC_OscConfig+0x250>
 8008208:	e711      	b.n	800802e <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800820a:	f7fe fe17 	bl	8006e3c <HAL_GetTick>
 800820e:	1b40      	subs	r0, r0, r5
 8008210:	4540      	cmp	r0, r8
 8008212:	d9bd      	bls.n	8008190 <HAL_RCC_OscConfig+0x1e8>
 8008214:	e70b      	b.n	800802e <HAL_RCC_OscConfig+0x86>
 8008216:	bf00      	nop
 8008218:	40023800 	.word	0x40023800
 800821c:	42470000 	.word	0x42470000
 8008220:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8008224:	4d36      	ldr	r5, [pc, #216]	; (8008300 <HAL_RCC_OscConfig+0x358>)
 8008226:	68ab      	ldr	r3, [r5, #8]
 8008228:	f003 030c 	and.w	r3, r3, #12
 800822c:	2b08      	cmp	r3, #8
 800822e:	d03d      	beq.n	80082ac <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008230:	4b34      	ldr	r3, [pc, #208]	; (8008304 <HAL_RCC_OscConfig+0x35c>)
 8008232:	2200      	movs	r2, #0
 8008234:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8008236:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008238:	d12b      	bne.n	8008292 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 800823a:	f7fe fdff 	bl	8006e3c <HAL_GetTick>
 800823e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008240:	682b      	ldr	r3, [r5, #0]
 8008242:	0199      	lsls	r1, r3, #6
 8008244:	d41f      	bmi.n	8008286 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8008246:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800824a:	4313      	orrs	r3, r2
 800824c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800824e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8008252:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008254:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008258:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800825a:	0852      	lsrs	r2, r2, #1
 800825c:	3a01      	subs	r2, #1
 800825e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008262:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8008264:	4b27      	ldr	r3, [pc, #156]	; (8008304 <HAL_RCC_OscConfig+0x35c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008266:	4d26      	ldr	r5, [pc, #152]	; (8008300 <HAL_RCC_OscConfig+0x358>)
        __HAL_RCC_PLL_ENABLE();
 8008268:	2201      	movs	r2, #1
 800826a:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800826c:	f7fe fde6 	bl	8006e3c <HAL_GetTick>
 8008270:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008272:	682b      	ldr	r3, [r5, #0]
 8008274:	019a      	lsls	r2, r3, #6
 8008276:	f53f aead 	bmi.w	8007fd4 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800827a:	f7fe fddf 	bl	8006e3c <HAL_GetTick>
 800827e:	1b00      	subs	r0, r0, r4
 8008280:	2802      	cmp	r0, #2
 8008282:	d9f6      	bls.n	8008272 <HAL_RCC_OscConfig+0x2ca>
 8008284:	e6d3      	b.n	800802e <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008286:	f7fe fdd9 	bl	8006e3c <HAL_GetTick>
 800828a:	1b80      	subs	r0, r0, r6
 800828c:	2802      	cmp	r0, #2
 800828e:	d9d7      	bls.n	8008240 <HAL_RCC_OscConfig+0x298>
 8008290:	e6cd      	b.n	800802e <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8008292:	f7fe fdd3 	bl	8006e3c <HAL_GetTick>
 8008296:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008298:	682b      	ldr	r3, [r5, #0]
 800829a:	019b      	lsls	r3, r3, #6
 800829c:	f57f ae9a 	bpl.w	8007fd4 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80082a0:	f7fe fdcc 	bl	8006e3c <HAL_GetTick>
 80082a4:	1b00      	subs	r0, r0, r4
 80082a6:	2802      	cmp	r0, #2
 80082a8:	d9f6      	bls.n	8008298 <HAL_RCC_OscConfig+0x2f0>
 80082aa:	e6c0      	b.n	800802e <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80082ac:	2801      	cmp	r0, #1
 80082ae:	f43f aebf 	beq.w	8008030 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80082b2:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80082b4:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80082b6:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80082ba:	4291      	cmp	r1, r2
 80082bc:	f47f aea1 	bne.w	8008002 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80082c0:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80082c2:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80082c6:	428a      	cmp	r2, r1
 80082c8:	f47f ae9b 	bne.w	8008002 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80082cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80082ce:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 80082d2:	401a      	ands	r2, r3
 80082d4:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80082d8:	f47f ae93 	bne.w	8008002 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80082dc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80082de:	0852      	lsrs	r2, r2, #1
 80082e0:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80082e4:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80082e6:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80082ea:	f47f ae8a 	bne.w	8008002 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80082ee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80082f0:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80082f4:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80082f8:	f43f ae6c 	beq.w	8007fd4 <HAL_RCC_OscConfig+0x2c>
 80082fc:	e681      	b.n	8008002 <HAL_RCC_OscConfig+0x5a>
 80082fe:	bf00      	nop
 8008300:	40023800 	.word	0x40023800
 8008304:	42470000 	.word	0x42470000

08008308 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008308:	4913      	ldr	r1, [pc, #76]	; (8008358 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800830a:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800830c:	688b      	ldr	r3, [r1, #8]
 800830e:	f003 030c 	and.w	r3, r3, #12
 8008312:	2b04      	cmp	r3, #4
 8008314:	d01c      	beq.n	8008350 <HAL_RCC_GetSysClockFreq+0x48>
 8008316:	2b08      	cmp	r3, #8
 8008318:	d11c      	bne.n	8008354 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800831a:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800831c:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800831e:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008320:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008324:	bf14      	ite	ne
 8008326:	480d      	ldrne	r0, [pc, #52]	; (800835c <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008328:	480d      	ldreq	r0, [pc, #52]	; (8008360 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800832a:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800832e:	bf18      	it	ne
 8008330:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008332:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008336:	fba1 0100 	umull	r0, r1, r1, r0
 800833a:	f7f7 ffb1 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800833e:	4b06      	ldr	r3, [pc, #24]	; (8008358 <HAL_RCC_GetSysClockFreq+0x50>)
 8008340:	685b      	ldr	r3, [r3, #4]
 8008342:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8008346:	3301      	adds	r3, #1
 8008348:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800834a:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800834e:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008350:	4802      	ldr	r0, [pc, #8]	; (800835c <HAL_RCC_GetSysClockFreq+0x54>)
 8008352:	e7fc      	b.n	800834e <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8008354:	4802      	ldr	r0, [pc, #8]	; (8008360 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8008356:	e7fa      	b.n	800834e <HAL_RCC_GetSysClockFreq+0x46>
 8008358:	40023800 	.word	0x40023800
 800835c:	007a1200 	.word	0x007a1200
 8008360:	00f42400 	.word	0x00f42400

08008364 <HAL_RCC_ClockConfig>:
{
 8008364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008368:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800836a:	4604      	mov	r4, r0
 800836c:	b910      	cbnz	r0, 8008374 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800836e:	2001      	movs	r0, #1
}
 8008370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8008374:	4b44      	ldr	r3, [pc, #272]	; (8008488 <HAL_RCC_ClockConfig+0x124>)
 8008376:	681a      	ldr	r2, [r3, #0]
 8008378:	f002 020f 	and.w	r2, r2, #15
 800837c:	428a      	cmp	r2, r1
 800837e:	d328      	bcc.n	80083d2 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008380:	6822      	ldr	r2, [r4, #0]
 8008382:	0797      	lsls	r7, r2, #30
 8008384:	d42d      	bmi.n	80083e2 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008386:	07d0      	lsls	r0, r2, #31
 8008388:	d441      	bmi.n	800840e <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800838a:	4b3f      	ldr	r3, [pc, #252]	; (8008488 <HAL_RCC_ClockConfig+0x124>)
 800838c:	681a      	ldr	r2, [r3, #0]
 800838e:	f002 020f 	and.w	r2, r2, #15
 8008392:	42aa      	cmp	r2, r5
 8008394:	d866      	bhi.n	8008464 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008396:	6822      	ldr	r2, [r4, #0]
 8008398:	0751      	lsls	r1, r2, #29
 800839a:	d46c      	bmi.n	8008476 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800839c:	0713      	lsls	r3, r2, #28
 800839e:	d507      	bpl.n	80083b0 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80083a0:	4a3a      	ldr	r2, [pc, #232]	; (800848c <HAL_RCC_ClockConfig+0x128>)
 80083a2:	6921      	ldr	r1, [r4, #16]
 80083a4:	6893      	ldr	r3, [r2, #8]
 80083a6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80083aa:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80083ae:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80083b0:	f7ff ffaa 	bl	8008308 <HAL_RCC_GetSysClockFreq>
 80083b4:	4b35      	ldr	r3, [pc, #212]	; (800848c <HAL_RCC_ClockConfig+0x128>)
 80083b6:	4a36      	ldr	r2, [pc, #216]	; (8008490 <HAL_RCC_ClockConfig+0x12c>)
 80083b8:	689b      	ldr	r3, [r3, #8]
 80083ba:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80083be:	5cd3      	ldrb	r3, [r2, r3]
 80083c0:	40d8      	lsrs	r0, r3
 80083c2:	4b34      	ldr	r3, [pc, #208]	; (8008494 <HAL_RCC_ClockConfig+0x130>)
 80083c4:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80083c6:	4b34      	ldr	r3, [pc, #208]	; (8008498 <HAL_RCC_ClockConfig+0x134>)
 80083c8:	6818      	ldr	r0, [r3, #0]
 80083ca:	f7f9 fe11 	bl	8001ff0 <HAL_InitTick>
  return HAL_OK;
 80083ce:	2000      	movs	r0, #0
 80083d0:	e7ce      	b.n	8008370 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80083d2:	b2ca      	uxtb	r2, r1
 80083d4:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80083d6:	681b      	ldr	r3, [r3, #0]
 80083d8:	f003 030f 	and.w	r3, r3, #15
 80083dc:	428b      	cmp	r3, r1
 80083de:	d1c6      	bne.n	800836e <HAL_RCC_ClockConfig+0xa>
 80083e0:	e7ce      	b.n	8008380 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80083e2:	4b2a      	ldr	r3, [pc, #168]	; (800848c <HAL_RCC_ClockConfig+0x128>)
 80083e4:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80083e8:	bf1e      	ittt	ne
 80083ea:	6899      	ldrne	r1, [r3, #8]
 80083ec:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 80083f0:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80083f2:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80083f4:	bf42      	ittt	mi
 80083f6:	6899      	ldrmi	r1, [r3, #8]
 80083f8:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 80083fc:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80083fe:	4923      	ldr	r1, [pc, #140]	; (800848c <HAL_RCC_ClockConfig+0x128>)
 8008400:	68a0      	ldr	r0, [r4, #8]
 8008402:	688b      	ldr	r3, [r1, #8]
 8008404:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008408:	4303      	orrs	r3, r0
 800840a:	608b      	str	r3, [r1, #8]
 800840c:	e7bb      	b.n	8008386 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800840e:	6862      	ldr	r2, [r4, #4]
 8008410:	4b1e      	ldr	r3, [pc, #120]	; (800848c <HAL_RCC_ClockConfig+0x128>)
 8008412:	2a01      	cmp	r2, #1
 8008414:	d11c      	bne.n	8008450 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008416:	681b      	ldr	r3, [r3, #0]
 8008418:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800841c:	d0a7      	beq.n	800836e <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800841e:	4e1b      	ldr	r6, [pc, #108]	; (800848c <HAL_RCC_ClockConfig+0x128>)
 8008420:	68b3      	ldr	r3, [r6, #8]
 8008422:	f023 0303 	bic.w	r3, r3, #3
 8008426:	4313      	orrs	r3, r2
 8008428:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800842a:	f7fe fd07 	bl	8006e3c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800842e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8008432:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008434:	68b3      	ldr	r3, [r6, #8]
 8008436:	6862      	ldr	r2, [r4, #4]
 8008438:	f003 030c 	and.w	r3, r3, #12
 800843c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8008440:	d0a3      	beq.n	800838a <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008442:	f7fe fcfb 	bl	8006e3c <HAL_GetTick>
 8008446:	1bc0      	subs	r0, r0, r7
 8008448:	4540      	cmp	r0, r8
 800844a:	d9f3      	bls.n	8008434 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800844c:	2003      	movs	r0, #3
 800844e:	e78f      	b.n	8008370 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008450:	1e91      	subs	r1, r2, #2
 8008452:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008454:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008456:	d802      	bhi.n	800845e <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008458:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800845c:	e7de      	b.n	800841c <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800845e:	f013 0f02 	tst.w	r3, #2
 8008462:	e7db      	b.n	800841c <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008464:	b2ea      	uxtb	r2, r5
 8008466:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8008468:	681b      	ldr	r3, [r3, #0]
 800846a:	f003 030f 	and.w	r3, r3, #15
 800846e:	42ab      	cmp	r3, r5
 8008470:	f47f af7d 	bne.w	800836e <HAL_RCC_ClockConfig+0xa>
 8008474:	e78f      	b.n	8008396 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8008476:	4905      	ldr	r1, [pc, #20]	; (800848c <HAL_RCC_ClockConfig+0x128>)
 8008478:	68e0      	ldr	r0, [r4, #12]
 800847a:	688b      	ldr	r3, [r1, #8]
 800847c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8008480:	4303      	orrs	r3, r0
 8008482:	608b      	str	r3, [r1, #8]
 8008484:	e78a      	b.n	800839c <HAL_RCC_ClockConfig+0x38>
 8008486:	bf00      	nop
 8008488:	40023c00 	.word	0x40023c00
 800848c:	40023800 	.word	0x40023800
 8008490:	08022fb4 	.word	0x08022fb4
 8008494:	20000074 	.word	0x20000074
 8008498:	2000007c 	.word	0x2000007c

0800849c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800849c:	4b04      	ldr	r3, [pc, #16]	; (80084b0 <HAL_RCC_GetPCLK1Freq+0x14>)
 800849e:	4a05      	ldr	r2, [pc, #20]	; (80084b4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80084a0:	689b      	ldr	r3, [r3, #8]
 80084a2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80084a6:	5cd3      	ldrb	r3, [r2, r3]
 80084a8:	4a03      	ldr	r2, [pc, #12]	; (80084b8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80084aa:	6810      	ldr	r0, [r2, #0]
}
 80084ac:	40d8      	lsrs	r0, r3
 80084ae:	4770      	bx	lr
 80084b0:	40023800 	.word	0x40023800
 80084b4:	08022fc4 	.word	0x08022fc4
 80084b8:	20000074 	.word	0x20000074

080084bc <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80084bc:	4b04      	ldr	r3, [pc, #16]	; (80084d0 <HAL_RCC_GetPCLK2Freq+0x14>)
 80084be:	4a05      	ldr	r2, [pc, #20]	; (80084d4 <HAL_RCC_GetPCLK2Freq+0x18>)
 80084c0:	689b      	ldr	r3, [r3, #8]
 80084c2:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80084c6:	5cd3      	ldrb	r3, [r2, r3]
 80084c8:	4a03      	ldr	r2, [pc, #12]	; (80084d8 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80084ca:	6810      	ldr	r0, [r2, #0]
}
 80084cc:	40d8      	lsrs	r0, r3
 80084ce:	4770      	bx	lr
 80084d0:	40023800 	.word	0x40023800
 80084d4:	08022fc4 	.word	0x08022fc4
 80084d8:	20000074 	.word	0x20000074

080084dc <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80084dc:	230f      	movs	r3, #15
 80084de:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80084e0:	4b0b      	ldr	r3, [pc, #44]	; (8008510 <HAL_RCC_GetClockConfig+0x34>)
 80084e2:	689a      	ldr	r2, [r3, #8]
 80084e4:	f002 0203 	and.w	r2, r2, #3
 80084e8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80084ea:	689a      	ldr	r2, [r3, #8]
 80084ec:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80084f0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80084f2:	689a      	ldr	r2, [r3, #8]
 80084f4:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80084f8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80084fa:	689b      	ldr	r3, [r3, #8]
 80084fc:	08db      	lsrs	r3, r3, #3
 80084fe:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8008502:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8008504:	4b03      	ldr	r3, [pc, #12]	; (8008514 <HAL_RCC_GetClockConfig+0x38>)
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	f003 030f 	and.w	r3, r3, #15
 800850c:	600b      	str	r3, [r1, #0]
}
 800850e:	4770      	bx	lr
 8008510:	40023800 	.word	0x40023800
 8008514:	40023c00 	.word	0x40023c00

08008518 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8008518:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800851a:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800851e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008520:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8008522:	f040 808c 	bne.w	800863e <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8008526:	6823      	ldr	r3, [r4, #0]
 8008528:	f013 0f0c 	tst.w	r3, #12
 800852c:	d045      	beq.n	80085ba <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800852e:	4b8b      	ldr	r3, [pc, #556]	; (800875c <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8008530:	4d8b      	ldr	r5, [pc, #556]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8008532:	2200      	movs	r2, #0
 8008534:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8008536:	f7fe fc81 	bl	8006e3c <HAL_GetTick>
 800853a:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800853c:	682b      	ldr	r3, [r5, #0]
 800853e:	009f      	lsls	r7, r3, #2
 8008540:	f100 80cf 	bmi.w	80086e2 <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8008544:	6821      	ldr	r1, [r4, #0]
 8008546:	074e      	lsls	r6, r1, #29
 8008548:	d515      	bpl.n	8008576 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800854a:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800854e:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8008552:	061b      	lsls	r3, r3, #24
 8008554:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8008558:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800855c:	4313      	orrs	r3, r2
 800855e:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8008562:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8008566:	6a22      	ldr	r2, [r4, #32]
 8008568:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800856c:	3a01      	subs	r2, #1
 800856e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008572:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8008576:	070d      	lsls	r5, r1, #28
 8008578:	d514      	bpl.n	80085a4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800857a:	4a79      	ldr	r2, [pc, #484]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800857c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800857e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8008582:	6920      	ldr	r0, [r4, #16]
 8008584:	071b      	lsls	r3, r3, #28
 8008586:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800858a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800858e:	430b      	orrs	r3, r1
 8008590:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8008594:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8008598:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800859a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800859e:	430b      	orrs	r3, r1
 80085a0:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80085a4:	4b6d      	ldr	r3, [pc, #436]	; (800875c <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80085a6:	4e6e      	ldr	r6, [pc, #440]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 80085a8:	2201      	movs	r2, #1
 80085aa:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80085ac:	f7fe fc46 	bl	8006e3c <HAL_GetTick>
 80085b0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80085b2:	6833      	ldr	r3, [r6, #0]
 80085b4:	0098      	lsls	r0, r3, #2
 80085b6:	f140 809b 	bpl.w	80086f0 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80085ba:	6823      	ldr	r3, [r4, #0]
 80085bc:	069b      	lsls	r3, r3, #26
 80085be:	d533      	bpl.n	8008628 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80085c0:	2300      	movs	r3, #0
 80085c2:	9301      	str	r3, [sp, #4]
 80085c4:	4b66      	ldr	r3, [pc, #408]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80085c6:	4d67      	ldr	r5, [pc, #412]	; (8008764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80085c8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80085ca:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80085ce:	641a      	str	r2, [r3, #64]	; 0x40
 80085d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80085d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80085d6:	9301      	str	r3, [sp, #4]
 80085d8:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80085da:	682b      	ldr	r3, [r5, #0]
 80085dc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80085e0:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80085e2:	f7fe fc2b 	bl	8006e3c <HAL_GetTick>
 80085e6:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 80085e8:	682b      	ldr	r3, [r5, #0]
 80085ea:	05d9      	lsls	r1, r3, #23
 80085ec:	f140 8087 	bpl.w	80086fe <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80085f0:	4d5b      	ldr	r5, [pc, #364]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80085f2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80085f4:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 80085f8:	f040 8088 	bne.w	800870c <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80085fc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80085fe:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8008602:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8008606:	4a56      	ldr	r2, [pc, #344]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8008608:	f040 80a4 	bne.w	8008754 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 800860c:	6891      	ldr	r1, [r2, #8]
 800860e:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8008612:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8008616:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800861a:	4301      	orrs	r1, r0
 800861c:	6091      	str	r1, [r2, #8]
 800861e:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8008620:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008624:	430b      	orrs	r3, r1
 8008626:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8008628:	6820      	ldr	r0, [r4, #0]
 800862a:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800862e:	bf1f      	itttt	ne
 8008630:	4b4d      	ldrne	r3, [pc, #308]	; (8008768 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8008632:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8008636:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800863a:	2000      	movne	r0, #0
 800863c:	e04f      	b.n	80086de <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 800863e:	4b47      	ldr	r3, [pc, #284]	; (800875c <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8008640:	4e47      	ldr	r6, [pc, #284]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8008642:	2200      	movs	r2, #0
 8008644:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8008646:	f7fe fbf9 	bl	8006e3c <HAL_GetTick>
 800864a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800864c:	6833      	ldr	r3, [r6, #0]
 800864e:	011f      	lsls	r7, r3, #4
 8008650:	d43f      	bmi.n	80086d2 <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8008652:	6821      	ldr	r1, [r4, #0]
 8008654:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8008656:	bf41      	itttt	mi
 8008658:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800865c:	071b      	lslmi	r3, r3, #28
 800865e:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8008662:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8008666:	0788      	lsls	r0, r1, #30
 8008668:	d515      	bpl.n	8008696 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800866a:	4a3d      	ldr	r2, [pc, #244]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800866c:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800866e:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8008672:	6865      	ldr	r5, [r4, #4]
 8008674:	061b      	lsls	r3, r3, #24
 8008676:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800867a:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800867e:	4303      	orrs	r3, r0
 8008680:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8008684:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8008688:	69e3      	ldr	r3, [r4, #28]
 800868a:	f020 001f 	bic.w	r0, r0, #31
 800868e:	3b01      	subs	r3, #1
 8008690:	4303      	orrs	r3, r0
 8008692:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8008696:	0649      	lsls	r1, r1, #25
 8008698:	d50a      	bpl.n	80086b0 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800869a:	68e3      	ldr	r3, [r4, #12]
 800869c:	6862      	ldr	r2, [r4, #4]
 800869e:	061b      	lsls	r3, r3, #24
 80086a0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80086a4:	68a2      	ldr	r2, [r4, #8]
 80086a6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80086aa:	4a2d      	ldr	r2, [pc, #180]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80086ac:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80086b0:	4b2a      	ldr	r3, [pc, #168]	; (800875c <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80086b2:	4e2b      	ldr	r6, [pc, #172]	; (8008760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 80086b4:	2201      	movs	r2, #1
 80086b6:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80086b8:	f7fe fbc0 	bl	8006e3c <HAL_GetTick>
 80086bc:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80086be:	6833      	ldr	r3, [r6, #0]
 80086c0:	011a      	lsls	r2, r3, #4
 80086c2:	f53f af30 	bmi.w	8008526 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80086c6:	f7fe fbb9 	bl	8006e3c <HAL_GetTick>
 80086ca:	1b40      	subs	r0, r0, r5
 80086cc:	2802      	cmp	r0, #2
 80086ce:	d9f6      	bls.n	80086be <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80086d0:	e004      	b.n	80086dc <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80086d2:	f7fe fbb3 	bl	8006e3c <HAL_GetTick>
 80086d6:	1b40      	subs	r0, r0, r5
 80086d8:	2802      	cmp	r0, #2
 80086da:	d9b7      	bls.n	800864c <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 80086dc:	2003      	movs	r0, #3
}
 80086de:	b003      	add	sp, #12
 80086e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80086e2:	f7fe fbab 	bl	8006e3c <HAL_GetTick>
 80086e6:	1b80      	subs	r0, r0, r6
 80086e8:	2802      	cmp	r0, #2
 80086ea:	f67f af27 	bls.w	800853c <HAL_RCCEx_PeriphCLKConfig+0x24>
 80086ee:	e7f5      	b.n	80086dc <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80086f0:	f7fe fba4 	bl	8006e3c <HAL_GetTick>
 80086f4:	1b40      	subs	r0, r0, r5
 80086f6:	2802      	cmp	r0, #2
 80086f8:	f67f af5b 	bls.w	80085b2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80086fc:	e7ee      	b.n	80086dc <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80086fe:	f7fe fb9d 	bl	8006e3c <HAL_GetTick>
 8008702:	1b80      	subs	r0, r0, r6
 8008704:	2802      	cmp	r0, #2
 8008706:	f67f af6f 	bls.w	80085e8 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 800870a:	e7e7      	b.n	80086dc <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800870c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800870e:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8008712:	4293      	cmp	r3, r2
 8008714:	f43f af72 	beq.w	80085fc <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008718:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800871a:	4a10      	ldr	r2, [pc, #64]	; (800875c <HAL_RCCEx_PeriphCLKConfig+0x244>)
 800871c:	2101      	movs	r1, #1
 800871e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008722:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008726:	2100      	movs	r1, #0
 8008728:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800872c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800872e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008730:	07da      	lsls	r2, r3, #31
 8008732:	f57f af63 	bpl.w	80085fc <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8008736:	f7fe fb81 	bl	8006e3c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800873a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800873e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008740:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008742:	079b      	lsls	r3, r3, #30
 8008744:	f53f af5a 	bmi.w	80085fc <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008748:	f7fe fb78 	bl	8006e3c <HAL_GetTick>
 800874c:	1b80      	subs	r0, r0, r6
 800874e:	42b8      	cmp	r0, r7
 8008750:	d9f6      	bls.n	8008740 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8008752:	e7c3      	b.n	80086dc <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008754:	6891      	ldr	r1, [r2, #8]
 8008756:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800875a:	e75f      	b.n	800861c <HAL_RCCEx_PeriphCLKConfig+0x104>
 800875c:	42470000 	.word	0x42470000
 8008760:	40023800 	.word	0x40023800
 8008764:	40007000 	.word	0x40007000
 8008768:	42471000 	.word	0x42471000

0800876c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800876c:	b538      	push	{r3, r4, r5, lr}
 800876e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8008770:	4604      	mov	r4, r0
 8008772:	b1c8      	cbz	r0, 80087a8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8008774:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008778:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800877c:	b91b      	cbnz	r3, 8008786 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800877e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8008782:	f7f9 fbc9 	bl	8001f18 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008786:	2302      	movs	r3, #2
 8008788:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800878c:	1d21      	adds	r1, r4, #4
 800878e:	6820      	ldr	r0, [r4, #0]
 8008790:	f000 ffac 	bl	80096ec <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8008794:	6862      	ldr	r2, [r4, #4]
 8008796:	6820      	ldr	r0, [r4, #0]
 8008798:	4629      	mov	r1, r5
 800879a:	f000 ffe2 	bl	8009762 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800879e:	2301      	movs	r3, #1
 80087a0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 80087a4:	2000      	movs	r0, #0
}
 80087a6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80087a8:	2001      	movs	r0, #1
 80087aa:	e7fc      	b.n	80087a6 <HAL_SDRAM_Init+0x3a>

080087ac <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80087ac:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80087ae:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80087b2:	2b02      	cmp	r3, #2
{
 80087b4:	4605      	mov	r5, r0
 80087b6:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80087b8:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80087ba:	d012      	beq.n	80087e2 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80087bc:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 80087c0:	2c01      	cmp	r4, #1
 80087c2:	d10f      	bne.n	80087e4 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80087c4:	2302      	movs	r3, #2
 80087c6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80087ca:	6828      	ldr	r0, [r5, #0]
 80087cc:	f000 ffff 	bl	80097ce <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80087d0:	6833      	ldr	r3, [r6, #0]
 80087d2:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80087d4:	bf06      	itte	eq
 80087d6:	2305      	moveq	r3, #5
 80087d8:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80087dc:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80087e0:	2000      	movs	r0, #0
}
 80087e2:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 80087e4:	2001      	movs	r0, #1
 80087e6:	e7fc      	b.n	80087e2 <HAL_SDRAM_SendCommand+0x36>

080087e8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80087e8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80087ea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80087ee:	2b02      	cmp	r3, #2
{
 80087f0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80087f2:	b2d8      	uxtb	r0, r3
 80087f4:	d00d      	beq.n	8008812 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80087f6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80087fa:	2b01      	cmp	r3, #1
 80087fc:	b2dd      	uxtb	r5, r3
 80087fe:	d109      	bne.n	8008814 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008800:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008802:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008804:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008808:	f001 f807 	bl	800981a <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800880c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008810:	2000      	movs	r0, #0
}
 8008812:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008814:	2001      	movs	r0, #1
 8008816:	e7fc      	b.n	8008812 <HAL_SDRAM_ProgramRefreshRate+0x2a>

08008818 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8008818:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800881c:	461d      	mov	r5, r3
 800881e:	4617      	mov	r7, r2
 8008820:	4688      	mov	r8, r1
 8008822:	4606      	mov	r6, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8008824:	f7fe fb0a 	bl	8006e3c <HAL_GetTick>
 8008828:	443d      	add	r5, r7
 800882a:	1a2c      	subs	r4, r5, r0
  tmp_tickstart = HAL_GetTick();
 800882c:	f7fe fb06 	bl	8006e3c <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8008830:	4b22      	ldr	r3, [pc, #136]	; (80088bc <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>)
 8008832:	681b      	ldr	r3, [r3, #0]
 8008834:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 8008838:	4605      	mov	r5, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800883a:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800883c:	6832      	ldr	r2, [r6, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 800883e:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8008840:	6893      	ldr	r3, [r2, #8]
 8008842:	ea38 0303 	bics.w	r3, r8, r3
 8008846:	d001      	beq.n	800884c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 8008848:	2000      	movs	r0, #0
 800884a:	e02d      	b.n	80088a8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
    if (Timeout != HAL_MAX_DELAY)
 800884c:	1c7b      	adds	r3, r7, #1
 800884e:	d0f7      	beq.n	8008840 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8008850:	f7fe faf4 	bl	8006e3c <HAL_GetTick>
 8008854:	1b40      	subs	r0, r0, r5
 8008856:	42a0      	cmp	r0, r4
 8008858:	d329      	bcc.n	80088ae <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800885a:	6833      	ldr	r3, [r6, #0]
 800885c:	685a      	ldr	r2, [r3, #4]
 800885e:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8008862:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008864:	6872      	ldr	r2, [r6, #4]
 8008866:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800886a:	d10a      	bne.n	8008882 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
 800886c:	68b2      	ldr	r2, [r6, #8]
 800886e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8008872:	d002      	beq.n	800887a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8008874:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8008878:	d103      	bne.n	8008882 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
          __HAL_SPI_DISABLE(hspi);
 800887a:	681a      	ldr	r2, [r3, #0]
 800887c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008880:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8008882:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8008884:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8008888:	d107      	bne.n	800889a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x82>
          SPI_RESET_CRC(hspi);
 800888a:	681a      	ldr	r2, [r3, #0]
 800888c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008890:	601a      	str	r2, [r3, #0]
 8008892:	681a      	ldr	r2, [r3, #0]
 8008894:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8008898:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800889a:	2301      	movs	r3, #1
 800889c:	f886 3051 	strb.w	r3, [r6, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 80088a0:	2300      	movs	r3, #0
 80088a2:	f886 3050 	strb.w	r3, [r6, #80]	; 0x50
        return HAL_TIMEOUT;
 80088a6:	2003      	movs	r0, #3
}
 80088a8:	b002      	add	sp, #8
 80088aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 80088ae:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 80088b0:	2b00      	cmp	r3, #0
      count--;
 80088b2:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 80088b4:	bf08      	it	eq
 80088b6:	2400      	moveq	r4, #0
      count--;
 80088b8:	3b01      	subs	r3, #1
 80088ba:	e7bf      	b.n	800883c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 80088bc:	20000074 	.word	0x20000074

080088c0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 80088c0:	b538      	push	{r3, r4, r5, lr}
 80088c2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80088c4:	6842      	ldr	r2, [r0, #4]
 80088c6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80088ca:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80088cc:	d11f      	bne.n	800890e <SPI_EndRxTransaction+0x4e>
 80088ce:	6882      	ldr	r2, [r0, #8]
 80088d0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80088d4:	d002      	beq.n	80088dc <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80088d6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80088da:	d107      	bne.n	80088ec <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 80088dc:	6825      	ldr	r5, [r4, #0]
 80088de:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80088e0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80088e4:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80088e8:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80088ea:	d007      	beq.n	80088fc <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80088ec:	460a      	mov	r2, r1
 80088ee:	2180      	movs	r1, #128	; 0x80
 80088f0:	4620      	mov	r0, r4
 80088f2:	f7ff ff91 	bl	8008818 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80088f6:	b920      	cbnz	r0, 8008902 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80088f8:	2000      	movs	r0, #0
}
 80088fa:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80088fc:	460a      	mov	r2, r1
 80088fe:	2101      	movs	r1, #1
 8008900:	e7f6      	b.n	80088f0 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8008902:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008904:	f043 0320 	orr.w	r3, r3, #32
 8008908:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800890a:	2003      	movs	r0, #3
 800890c:	e7f5      	b.n	80088fa <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800890e:	460a      	mov	r2, r1
 8008910:	2101      	movs	r1, #1
 8008912:	e7ee      	b.n	80088f2 <SPI_EndRxTransaction+0x32>

08008914 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8008914:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008916:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8008918:	4a12      	ldr	r2, [pc, #72]	; (8008964 <SPI_EndRxTxTransaction+0x50>)
 800891a:	6815      	ldr	r5, [r2, #0]
 800891c:	4a12      	ldr	r2, [pc, #72]	; (8008968 <SPI_EndRxTxTransaction+0x54>)
 800891e:	fbb5 f5f2 	udiv	r5, r5, r2
 8008922:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8008926:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008928:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800892a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800892c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8008930:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008932:	d10b      	bne.n	800894c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8008934:	460a      	mov	r2, r1
 8008936:	2180      	movs	r1, #128	; 0x80
 8008938:	f7ff ff6e 	bl	8008818 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800893c:	b178      	cbz	r0, 800895e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800893e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008940:	f043 0320 	orr.w	r3, r3, #32
 8008944:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8008946:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8008948:	b003      	add	sp, #12
 800894a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 800894c:	9b01      	ldr	r3, [sp, #4]
 800894e:	b133      	cbz	r3, 800895e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8008950:	9b01      	ldr	r3, [sp, #4]
 8008952:	3b01      	subs	r3, #1
 8008954:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8008956:	6823      	ldr	r3, [r4, #0]
 8008958:	689b      	ldr	r3, [r3, #8]
 800895a:	061b      	lsls	r3, r3, #24
 800895c:	d4f6      	bmi.n	800894c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800895e:	2000      	movs	r0, #0
 8008960:	e7f2      	b.n	8008948 <SPI_EndRxTxTransaction+0x34>
 8008962:	bf00      	nop
 8008964:	20000074 	.word	0x20000074
 8008968:	016e3600 	.word	0x016e3600

0800896c <HAL_SPI_Init>:
{
 800896c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800896e:	4604      	mov	r4, r0
 8008970:	2800      	cmp	r0, #0
 8008972:	d055      	beq.n	8008a20 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8008974:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8008976:	2b00      	cmp	r3, #0
 8008978:	d14e      	bne.n	8008a18 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800897a:	6842      	ldr	r2, [r0, #4]
 800897c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8008980:	d000      	beq.n	8008984 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8008982:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8008984:	2300      	movs	r3, #0
 8008986:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8008988:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800898c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008990:	b923      	cbnz	r3, 800899c <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 8008992:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8008996:	4620      	mov	r0, r4
 8008998:	f7f9 f9de 	bl	8001d58 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 800899c:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800899e:	68a0      	ldr	r0, [r4, #8]
 80089a0:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80089a2:	2302      	movs	r3, #2
 80089a4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 80089a8:	680b      	ldr	r3, [r1, #0]
 80089aa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80089ae:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80089b0:	6863      	ldr	r3, [r4, #4]
 80089b2:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 80089b6:	f403 7382 	and.w	r3, r3, #260	; 0x104
 80089ba:	4303      	orrs	r3, r0
 80089bc:	68e0      	ldr	r0, [r4, #12]
 80089be:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 80089c2:	4303      	orrs	r3, r0
 80089c4:	6920      	ldr	r0, [r4, #16]
 80089c6:	f000 0002 	and.w	r0, r0, #2
 80089ca:	4303      	orrs	r3, r0
 80089cc:	6960      	ldr	r0, [r4, #20]
 80089ce:	f000 0001 	and.w	r0, r0, #1
 80089d2:	4303      	orrs	r3, r0
 80089d4:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80089d8:	4303      	orrs	r3, r0
 80089da:	69e0      	ldr	r0, [r4, #28]
 80089dc:	f000 0038 	and.w	r0, r0, #56	; 0x38
 80089e0:	4303      	orrs	r3, r0
 80089e2:	6a20      	ldr	r0, [r4, #32]
 80089e4:	f000 0080 	and.w	r0, r0, #128	; 0x80
 80089e8:	4303      	orrs	r3, r0
 80089ea:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80089ec:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 80089f0:	4303      	orrs	r3, r0
 80089f2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80089f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80089f6:	0c12      	lsrs	r2, r2, #16
 80089f8:	f003 0310 	and.w	r3, r3, #16
 80089fc:	f002 0204 	and.w	r2, r2, #4
 8008a00:	431a      	orrs	r2, r3
 8008a02:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8008a04:	69cb      	ldr	r3, [r1, #28]
 8008a06:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008a0a:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8008a0c:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8008a0e:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8008a10:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8008a12:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8008a16:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8008a18:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8008a1a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8008a1e:	e7b1      	b.n	8008984 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8008a20:	2001      	movs	r0, #1
 8008a22:	e7f8      	b.n	8008a16 <HAL_SPI_Init+0xaa>

08008a24 <HAL_SPI_Transmit>:
{
 8008a24:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008a28:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8008a2a:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8008a2e:	2b01      	cmp	r3, #1
{
 8008a30:	4604      	mov	r4, r0
 8008a32:	460d      	mov	r5, r1
 8008a34:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8008a36:	f000 80a1 	beq.w	8008b7c <HAL_SPI_Transmit+0x158>
 8008a3a:	2301      	movs	r3, #1
 8008a3c:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008a40:	f7fe f9fc 	bl	8006e3c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8008a44:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008a48:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008a4a:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8008a4c:	b2d8      	uxtb	r0, r3
 8008a4e:	f040 8093 	bne.w	8008b78 <HAL_SPI_Transmit+0x154>
  if ((pData == NULL) || (Size == 0U))
 8008a52:	2d00      	cmp	r5, #0
 8008a54:	d05e      	beq.n	8008b14 <HAL_SPI_Transmit+0xf0>
 8008a56:	2f00      	cmp	r7, #0
 8008a58:	d05c      	beq.n	8008b14 <HAL_SPI_Transmit+0xf0>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008a5a:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8008a5c:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8008a5e:	2303      	movs	r3, #3
 8008a60:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008a64:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8008a68:	f04f 0300 	mov.w	r3, #0
 8008a6c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8008a6e:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8008a72:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8008a74:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8008a76:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8008a78:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 8008a7a:	86a7      	strh	r7, [r4, #52]	; 0x34
    __HAL_SPI_DISABLE(hspi);
 8008a7c:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008a7e:	d107      	bne.n	8008a90 <HAL_SPI_Transmit+0x6c>
    __HAL_SPI_DISABLE(hspi);
 8008a80:	681a      	ldr	r2, [r3, #0]
 8008a82:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008a86:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8008a88:	681a      	ldr	r2, [r3, #0]
 8008a8a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8008a8e:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008a90:	681a      	ldr	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008a92:	68e1      	ldr	r1, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008a94:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8008a96:	bf5e      	ittt	pl
 8008a98:	681a      	ldrpl	r2, [r3, #0]
 8008a9a:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8008a9e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008aa0:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008aa4:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008aa6:	d141      	bne.n	8008b2c <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008aa8:	b10a      	cbz	r2, 8008aae <HAL_SPI_Transmit+0x8a>
 8008aaa:	2f01      	cmp	r7, #1
 8008aac:	d107      	bne.n	8008abe <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008aae:	f835 2b02 	ldrh.w	r2, [r5], #2
 8008ab2:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8008ab4:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008ab6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008ab8:	3b01      	subs	r3, #1
 8008aba:	b29b      	uxth	r3, r3
 8008abc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8008abe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008ac0:	b29b      	uxth	r3, r3
 8008ac2:	b9a3      	cbnz	r3, 8008aee <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008ac4:	4642      	mov	r2, r8
 8008ac6:	4631      	mov	r1, r6
 8008ac8:	4620      	mov	r0, r4
 8008aca:	f7ff ff23 	bl	8008914 <SPI_EndRxTxTransaction>
 8008ace:	2800      	cmp	r0, #0
 8008ad0:	d14f      	bne.n	8008b72 <HAL_SPI_Transmit+0x14e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8008ad2:	68a3      	ldr	r3, [r4, #8]
 8008ad4:	b933      	cbnz	r3, 8008ae4 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8008ad6:	9301      	str	r3, [sp, #4]
 8008ad8:	6823      	ldr	r3, [r4, #0]
 8008ada:	68da      	ldr	r2, [r3, #12]
 8008adc:	9201      	str	r2, [sp, #4]
 8008ade:	689b      	ldr	r3, [r3, #8]
 8008ae0:	9301      	str	r3, [sp, #4]
 8008ae2:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008ae4:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008ae6:	3800      	subs	r0, #0
 8008ae8:	bf18      	it	ne
 8008aea:	2001      	movne	r0, #1
error:
 8008aec:	e012      	b.n	8008b14 <HAL_SPI_Transmit+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8008aee:	6822      	ldr	r2, [r4, #0]
 8008af0:	6893      	ldr	r3, [r2, #8]
 8008af2:	0798      	lsls	r0, r3, #30
 8008af4:	d505      	bpl.n	8008b02 <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008af6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008af8:	f833 1b02 	ldrh.w	r1, [r3], #2
 8008afc:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8008afe:	6323      	str	r3, [r4, #48]	; 0x30
 8008b00:	e7d9      	b.n	8008ab6 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008b02:	f7fe f99b 	bl	8006e3c <HAL_GetTick>
 8008b06:	eba0 0008 	sub.w	r0, r0, r8
 8008b0a:	42b0      	cmp	r0, r6
 8008b0c:	d30b      	bcc.n	8008b26 <HAL_SPI_Transmit+0x102>
 8008b0e:	1c71      	adds	r1, r6, #1
 8008b10:	d0d5      	beq.n	8008abe <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 8008b12:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008b14:	2301      	movs	r3, #1
 8008b16:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008b1a:	2300      	movs	r3, #0
 8008b1c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8008b20:	b002      	add	sp, #8
 8008b22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008b26:	2e00      	cmp	r6, #0
 8008b28:	d1c9      	bne.n	8008abe <HAL_SPI_Transmit+0x9a>
 8008b2a:	e7f2      	b.n	8008b12 <HAL_SPI_Transmit+0xee>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008b2c:	b10a      	cbz	r2, 8008b32 <HAL_SPI_Transmit+0x10e>
 8008b2e:	2f01      	cmp	r7, #1
 8008b30:	d108      	bne.n	8008b44 <HAL_SPI_Transmit+0x120>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8008b32:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8008b34:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8008b36:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008b38:	3301      	adds	r3, #1
 8008b3a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008b3c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008b3e:	3b01      	subs	r3, #1
 8008b40:	b29b      	uxth	r3, r3
 8008b42:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8008b44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008b46:	b29b      	uxth	r3, r3
 8008b48:	2b00      	cmp	r3, #0
 8008b4a:	d0bb      	beq.n	8008ac4 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8008b4c:	6823      	ldr	r3, [r4, #0]
 8008b4e:	689a      	ldr	r2, [r3, #8]
 8008b50:	0792      	lsls	r2, r2, #30
 8008b52:	d502      	bpl.n	8008b5a <HAL_SPI_Transmit+0x136>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8008b54:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008b56:	7812      	ldrb	r2, [r2, #0]
 8008b58:	e7ec      	b.n	8008b34 <HAL_SPI_Transmit+0x110>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008b5a:	f7fe f96f 	bl	8006e3c <HAL_GetTick>
 8008b5e:	eba0 0008 	sub.w	r0, r0, r8
 8008b62:	42b0      	cmp	r0, r6
 8008b64:	d302      	bcc.n	8008b6c <HAL_SPI_Transmit+0x148>
 8008b66:	1c73      	adds	r3, r6, #1
 8008b68:	d0ec      	beq.n	8008b44 <HAL_SPI_Transmit+0x120>
 8008b6a:	e7d2      	b.n	8008b12 <HAL_SPI_Transmit+0xee>
 8008b6c:	2e00      	cmp	r6, #0
 8008b6e:	d1e9      	bne.n	8008b44 <HAL_SPI_Transmit+0x120>
 8008b70:	e7cf      	b.n	8008b12 <HAL_SPI_Transmit+0xee>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008b72:	2320      	movs	r3, #32
 8008b74:	6563      	str	r3, [r4, #84]	; 0x54
 8008b76:	e7ac      	b.n	8008ad2 <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8008b78:	2002      	movs	r0, #2
 8008b7a:	e7cb      	b.n	8008b14 <HAL_SPI_Transmit+0xf0>
  __HAL_LOCK(hspi);
 8008b7c:	2002      	movs	r0, #2
 8008b7e:	e7cf      	b.n	8008b20 <HAL_SPI_Transmit+0xfc>

08008b80 <HAL_SPI_TransmitReceive>:
{
 8008b80:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008b84:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8008b86:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8008b8a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8008b8c:	2b01      	cmp	r3, #1
{
 8008b8e:	4604      	mov	r4, r0
 8008b90:	460d      	mov	r5, r1
 8008b92:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8008b94:	f000 80e6 	beq.w	8008d64 <HAL_SPI_TransmitReceive+0x1e4>
 8008b98:	2301      	movs	r3, #1
 8008b9a:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008b9e:	f7fe f94d 	bl	8006e3c <HAL_GetTick>
  tmp_state           = hspi->State;
 8008ba2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8008ba6:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8008ba8:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008baa:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8008bac:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8008bae:	d00a      	beq.n	8008bc6 <HAL_SPI_TransmitReceive+0x46>
 8008bb0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8008bb4:	f040 80d4 	bne.w	8008d60 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8008bb8:	68a3      	ldr	r3, [r4, #8]
 8008bba:	2b00      	cmp	r3, #0
 8008bbc:	f040 80d0 	bne.w	8008d60 <HAL_SPI_TransmitReceive+0x1e0>
 8008bc0:	2904      	cmp	r1, #4
 8008bc2:	f040 80cd 	bne.w	8008d60 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8008bc6:	2d00      	cmp	r5, #0
 8008bc8:	d040      	beq.n	8008c4c <HAL_SPI_TransmitReceive+0xcc>
 8008bca:	f1b9 0f00 	cmp.w	r9, #0
 8008bce:	d03d      	beq.n	8008c4c <HAL_SPI_TransmitReceive+0xcc>
 8008bd0:	2e00      	cmp	r6, #0
 8008bd2:	d03b      	beq.n	8008c4c <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8008bd4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8008bd8:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8008bdc:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8008bde:	bf1c      	itt	ne
 8008be0:	2305      	movne	r3, #5
 8008be2:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8008be6:	2300      	movs	r3, #0
 8008be8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8008bea:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008bee:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8008bf0:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8008bf2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008bf4:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8008bf6:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008bf8:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8008bfa:	bf58      	it	pl
 8008bfc:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8008bfe:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8008c00:	bf58      	it	pl
 8008c02:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8008c06:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8008c08:	bf58      	it	pl
 8008c0a:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008c0c:	68e1      	ldr	r1, [r4, #12]
 8008c0e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8008c12:	d152      	bne.n	8008cba <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008c14:	b10a      	cbz	r2, 8008c1a <HAL_SPI_TransmitReceive+0x9a>
 8008c16:	2e01      	cmp	r6, #1
 8008c18:	d107      	bne.n	8008c2a <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008c1a:	f835 2b02 	ldrh.w	r2, [r5], #2
 8008c1e:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8008c20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8008c22:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8008c24:	3b01      	subs	r3, #1
 8008c26:	b29b      	uxth	r3, r3
 8008c28:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8008c2a:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8008c2c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008c2e:	b29b      	uxth	r3, r3
 8008c30:	b973      	cbnz	r3, 8008c50 <HAL_SPI_TransmitReceive+0xd0>
 8008c32:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c34:	b29b      	uxth	r3, r3
 8008c36:	b95b      	cbnz	r3, 8008c50 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008c38:	4642      	mov	r2, r8
 8008c3a:	4639      	mov	r1, r7
 8008c3c:	4620      	mov	r0, r4
 8008c3e:	f7ff fe69 	bl	8008914 <SPI_EndRxTxTransaction>
 8008c42:	2800      	cmp	r0, #0
 8008c44:	f000 8081 	beq.w	8008d4a <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008c48:	2320      	movs	r3, #32
 8008c4a:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8008c4c:	2001      	movs	r0, #1
 8008c4e:	e02b      	b.n	8008ca8 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8008c50:	6821      	ldr	r1, [r4, #0]
 8008c52:	688b      	ldr	r3, [r1, #8]
 8008c54:	079e      	lsls	r6, r3, #30
 8008c56:	d50d      	bpl.n	8008c74 <HAL_SPI_TransmitReceive+0xf4>
 8008c58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008c5a:	b29b      	uxth	r3, r3
 8008c5c:	b153      	cbz	r3, 8008c74 <HAL_SPI_TransmitReceive+0xf4>
 8008c5e:	b14d      	cbz	r5, 8008c74 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008c60:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008c62:	f833 2b02 	ldrh.w	r2, [r3], #2
 8008c66:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8008c68:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008c6a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008c6c:	3b01      	subs	r3, #1
 8008c6e:	b29b      	uxth	r3, r3
 8008c70:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8008c72:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8008c74:	688a      	ldr	r2, [r1, #8]
 8008c76:	f012 0201 	ands.w	r2, r2, #1
 8008c7a:	d00c      	beq.n	8008c96 <HAL_SPI_TransmitReceive+0x116>
 8008c7c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c7e:	b29b      	uxth	r3, r3
 8008c80:	b14b      	cbz	r3, 8008c96 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8008c82:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008c84:	68c9      	ldr	r1, [r1, #12]
 8008c86:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008c8a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008c8c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008c8e:	3b01      	subs	r3, #1
 8008c90:	b29b      	uxth	r3, r3
 8008c92:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8008c94:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8008c96:	f7fe f8d1 	bl	8006e3c <HAL_GetTick>
 8008c9a:	eba0 0008 	sub.w	r0, r0, r8
 8008c9e:	42b8      	cmp	r0, r7
 8008ca0:	d3c4      	bcc.n	8008c2c <HAL_SPI_TransmitReceive+0xac>
 8008ca2:	1c78      	adds	r0, r7, #1
 8008ca4:	d0c2      	beq.n	8008c2c <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8008ca6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008ca8:	2301      	movs	r3, #1
 8008caa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008cae:	2300      	movs	r3, #0
 8008cb0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8008cb4:	b003      	add	sp, #12
 8008cb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008cba:	b10a      	cbz	r2, 8008cc0 <HAL_SPI_TransmitReceive+0x140>
 8008cbc:	2e01      	cmp	r6, #1
 8008cbe:	d108      	bne.n	8008cd2 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8008cc0:	782a      	ldrb	r2, [r5, #0]
 8008cc2:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8008cc4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008cc6:	3301      	adds	r3, #1
 8008cc8:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8008cca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008ccc:	3b01      	subs	r3, #1
 8008cce:	b29b      	uxth	r3, r3
 8008cd0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8008cd2:	2501      	movs	r5, #1
 8008cd4:	e02d      	b.n	8008d32 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8008cd6:	6822      	ldr	r2, [r4, #0]
 8008cd8:	6893      	ldr	r3, [r2, #8]
 8008cda:	0799      	lsls	r1, r3, #30
 8008cdc:	d50e      	bpl.n	8008cfc <HAL_SPI_TransmitReceive+0x17c>
 8008cde:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008ce0:	b29b      	uxth	r3, r3
 8008ce2:	b15b      	cbz	r3, 8008cfc <HAL_SPI_TransmitReceive+0x17c>
 8008ce4:	b155      	cbz	r5, 8008cfc <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8008ce6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008ce8:	781b      	ldrb	r3, [r3, #0]
 8008cea:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8008cec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008cee:	3301      	adds	r3, #1
 8008cf0:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008cf2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008cf4:	3b01      	subs	r3, #1
 8008cf6:	b29b      	uxth	r3, r3
 8008cf8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8008cfa:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8008cfc:	6822      	ldr	r2, [r4, #0]
 8008cfe:	6891      	ldr	r1, [r2, #8]
 8008d00:	f011 0101 	ands.w	r1, r1, #1
 8008d04:	d00d      	beq.n	8008d22 <HAL_SPI_TransmitReceive+0x1a2>
 8008d06:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008d08:	b29b      	uxth	r3, r3
 8008d0a:	b153      	cbz	r3, 8008d22 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8008d0c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008d0e:	68d2      	ldr	r2, [r2, #12]
 8008d10:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8008d12:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008d14:	3301      	adds	r3, #1
 8008d16:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008d18:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008d1a:	3b01      	subs	r3, #1
 8008d1c:	b29b      	uxth	r3, r3
 8008d1e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8008d20:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8008d22:	f7fe f88b 	bl	8006e3c <HAL_GetTick>
 8008d26:	eba0 0008 	sub.w	r0, r0, r8
 8008d2a:	42b8      	cmp	r0, r7
 8008d2c:	d30a      	bcc.n	8008d44 <HAL_SPI_TransmitReceive+0x1c4>
 8008d2e:	1c7b      	adds	r3, r7, #1
 8008d30:	d1b9      	bne.n	8008ca6 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8008d32:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008d34:	b29b      	uxth	r3, r3
 8008d36:	2b00      	cmp	r3, #0
 8008d38:	d1cd      	bne.n	8008cd6 <HAL_SPI_TransmitReceive+0x156>
 8008d3a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008d3c:	b29b      	uxth	r3, r3
 8008d3e:	2b00      	cmp	r3, #0
 8008d40:	d1c9      	bne.n	8008cd6 <HAL_SPI_TransmitReceive+0x156>
 8008d42:	e779      	b.n	8008c38 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8008d44:	2f00      	cmp	r7, #0
 8008d46:	d1f4      	bne.n	8008d32 <HAL_SPI_TransmitReceive+0x1b2>
 8008d48:	e7ad      	b.n	8008ca6 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8008d4a:	68a3      	ldr	r3, [r4, #8]
 8008d4c:	2b00      	cmp	r3, #0
 8008d4e:	d1ab      	bne.n	8008ca8 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8008d50:	6823      	ldr	r3, [r4, #0]
 8008d52:	9001      	str	r0, [sp, #4]
 8008d54:	68da      	ldr	r2, [r3, #12]
 8008d56:	9201      	str	r2, [sp, #4]
 8008d58:	689b      	ldr	r3, [r3, #8]
 8008d5a:	9301      	str	r3, [sp, #4]
 8008d5c:	9b01      	ldr	r3, [sp, #4]
 8008d5e:	e7a3      	b.n	8008ca8 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8008d60:	2002      	movs	r0, #2
 8008d62:	e7a1      	b.n	8008ca8 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8008d64:	2002      	movs	r0, #2
 8008d66:	e7a5      	b.n	8008cb4 <HAL_SPI_TransmitReceive+0x134>

08008d68 <HAL_SPI_Receive>:
{
 8008d68:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008d6c:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008d6e:	6843      	ldr	r3, [r0, #4]
 8008d70:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8008d74:	4604      	mov	r4, r0
 8008d76:	4689      	mov	r9, r1
 8008d78:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008d7a:	d10c      	bne.n	8008d96 <HAL_SPI_Receive+0x2e>
 8008d7c:	6883      	ldr	r3, [r0, #8]
 8008d7e:	b953      	cbnz	r3, 8008d96 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8008d80:	2304      	movs	r3, #4
 8008d82:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8008d86:	4613      	mov	r3, r2
 8008d88:	9500      	str	r5, [sp, #0]
 8008d8a:	460a      	mov	r2, r1
 8008d8c:	f7ff fef8 	bl	8008b80 <HAL_SPI_TransmitReceive>
}
 8008d90:	b003      	add	sp, #12
 8008d92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8008d96:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8008d9a:	2b01      	cmp	r3, #1
 8008d9c:	f000 8086 	beq.w	8008eac <HAL_SPI_Receive+0x144>
 8008da0:	2301      	movs	r3, #1
 8008da2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008da6:	f7fe f849 	bl	8006e3c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8008daa:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008dae:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008db0:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8008db2:	b2d8      	uxtb	r0, r3
 8008db4:	d178      	bne.n	8008ea8 <HAL_SPI_Receive+0x140>
  if ((pData == NULL) || (Size == 0U))
 8008db6:	f1b9 0f00 	cmp.w	r9, #0
 8008dba:	d05c      	beq.n	8008e76 <HAL_SPI_Receive+0x10e>
 8008dbc:	2f00      	cmp	r7, #0
 8008dbe:	d05a      	beq.n	8008e76 <HAL_SPI_Receive+0x10e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008dc0:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8008dc2:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8008dc6:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8008dc8:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008dca:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8008dce:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 8008dd2:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8008dd6:	6566      	str	r6, [r4, #84]	; 0x54
    __HAL_SPI_DISABLE(hspi);
 8008dd8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8008dda:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8008ddc:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8008dde:	6326      	str	r6, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8008de0:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 8008de2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008de4:	d107      	bne.n	8008df6 <HAL_SPI_Receive+0x8e>
    __HAL_SPI_DISABLE(hspi);
 8008de6:	681a      	ldr	r2, [r3, #0]
 8008de8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008dec:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8008dee:	681a      	ldr	r2, [r3, #0]
 8008df0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8008df4:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008df6:	681a      	ldr	r2, [r3, #0]
 8008df8:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8008dfa:	bf5e      	ittt	pl
 8008dfc:	681a      	ldrpl	r2, [r3, #0]
 8008dfe:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8008e02:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8008e04:	68e3      	ldr	r3, [r4, #12]
 8008e06:	b1f3      	cbz	r3, 8008e46 <HAL_SPI_Receive+0xde>
    while (hspi->RxXferCount > 0U)
 8008e08:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008e0a:	b29b      	uxth	r3, r3
 8008e0c:	b1fb      	cbz	r3, 8008e4e <HAL_SPI_Receive+0xe6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8008e0e:	6823      	ldr	r3, [r4, #0]
 8008e10:	689a      	ldr	r2, [r3, #8]
 8008e12:	07d2      	lsls	r2, r2, #31
 8008e14:	d539      	bpl.n	8008e8a <HAL_SPI_Receive+0x122>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8008e16:	68da      	ldr	r2, [r3, #12]
 8008e18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008e1a:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008e1e:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008e20:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008e22:	3b01      	subs	r3, #1
 8008e24:	b29b      	uxth	r3, r3
 8008e26:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008e28:	e7ee      	b.n	8008e08 <HAL_SPI_Receive+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8008e2a:	6823      	ldr	r3, [r4, #0]
 8008e2c:	689a      	ldr	r2, [r3, #8]
 8008e2e:	07d0      	lsls	r0, r2, #31
 8008e30:	d518      	bpl.n	8008e64 <HAL_SPI_Receive+0xfc>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8008e32:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008e34:	7b1b      	ldrb	r3, [r3, #12]
 8008e36:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8008e38:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008e3a:	3301      	adds	r3, #1
 8008e3c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008e3e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008e40:	3b01      	subs	r3, #1
 8008e42:	b29b      	uxth	r3, r3
 8008e44:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8008e46:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008e48:	b29b      	uxth	r3, r3
 8008e4a:	2b00      	cmp	r3, #0
 8008e4c:	d1ed      	bne.n	8008e2a <HAL_SPI_Receive+0xc2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008e4e:	4642      	mov	r2, r8
 8008e50:	4629      	mov	r1, r5
 8008e52:	4620      	mov	r0, r4
 8008e54:	f7ff fd34 	bl	80088c0 <SPI_EndRxTransaction>
 8008e58:	bb18      	cbnz	r0, 8008ea2 <HAL_SPI_Receive+0x13a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008e5a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008e5c:	3800      	subs	r0, #0
 8008e5e:	bf18      	it	ne
 8008e60:	2001      	movne	r0, #1
error :
 8008e62:	e008      	b.n	8008e76 <HAL_SPI_Receive+0x10e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008e64:	f7fd ffea 	bl	8006e3c <HAL_GetTick>
 8008e68:	eba0 0008 	sub.w	r0, r0, r8
 8008e6c:	42a8      	cmp	r0, r5
 8008e6e:	d309      	bcc.n	8008e84 <HAL_SPI_Receive+0x11c>
 8008e70:	1c69      	adds	r1, r5, #1
 8008e72:	d0e8      	beq.n	8008e46 <HAL_SPI_Receive+0xde>
          errorcode = HAL_TIMEOUT;
 8008e74:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008e76:	2301      	movs	r3, #1
 8008e78:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008e7c:	2300      	movs	r3, #0
 8008e7e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008e82:	e785      	b.n	8008d90 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008e84:	2d00      	cmp	r5, #0
 8008e86:	d1de      	bne.n	8008e46 <HAL_SPI_Receive+0xde>
 8008e88:	e7f4      	b.n	8008e74 <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008e8a:	f7fd ffd7 	bl	8006e3c <HAL_GetTick>
 8008e8e:	eba0 0008 	sub.w	r0, r0, r8
 8008e92:	42a8      	cmp	r0, r5
 8008e94:	d302      	bcc.n	8008e9c <HAL_SPI_Receive+0x134>
 8008e96:	1c6b      	adds	r3, r5, #1
 8008e98:	d0b6      	beq.n	8008e08 <HAL_SPI_Receive+0xa0>
 8008e9a:	e7eb      	b.n	8008e74 <HAL_SPI_Receive+0x10c>
 8008e9c:	2d00      	cmp	r5, #0
 8008e9e:	d1b3      	bne.n	8008e08 <HAL_SPI_Receive+0xa0>
 8008ea0:	e7e8      	b.n	8008e74 <HAL_SPI_Receive+0x10c>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008ea2:	2320      	movs	r3, #32
 8008ea4:	6563      	str	r3, [r4, #84]	; 0x54
 8008ea6:	e7d8      	b.n	8008e5a <HAL_SPI_Receive+0xf2>
    errorcode = HAL_BUSY;
 8008ea8:	2002      	movs	r0, #2
 8008eaa:	e7e4      	b.n	8008e76 <HAL_SPI_Receive+0x10e>
  __HAL_LOCK(hspi);
 8008eac:	2002      	movs	r0, #2
 8008eae:	e76f      	b.n	8008d90 <HAL_SPI_Receive+0x28>

08008eb0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8008eb0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008eb4:	2b01      	cmp	r3, #1
 8008eb6:	d130      	bne.n	8008f1a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008eb8:	2302      	movs	r3, #2
 8008eba:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008ebe:	6803      	ldr	r3, [r0, #0]
 8008ec0:	68da      	ldr	r2, [r3, #12]
 8008ec2:	f042 0201 	orr.w	r2, r2, #1
 8008ec6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008ec8:	4a15      	ldr	r2, [pc, #84]	; (8008f20 <HAL_TIM_Base_Start_IT+0x70>)
 8008eca:	4293      	cmp	r3, r2
 8008ecc:	d01a      	beq.n	8008f04 <HAL_TIM_Base_Start_IT+0x54>
 8008ece:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008ed2:	d017      	beq.n	8008f04 <HAL_TIM_Base_Start_IT+0x54>
 8008ed4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008ed8:	4293      	cmp	r3, r2
 8008eda:	d013      	beq.n	8008f04 <HAL_TIM_Base_Start_IT+0x54>
 8008edc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008ee0:	4293      	cmp	r3, r2
 8008ee2:	d00f      	beq.n	8008f04 <HAL_TIM_Base_Start_IT+0x54>
 8008ee4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008ee8:	4293      	cmp	r3, r2
 8008eea:	d00b      	beq.n	8008f04 <HAL_TIM_Base_Start_IT+0x54>
 8008eec:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008ef0:	4293      	cmp	r3, r2
 8008ef2:	d007      	beq.n	8008f04 <HAL_TIM_Base_Start_IT+0x54>
 8008ef4:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8008ef8:	4293      	cmp	r3, r2
 8008efa:	d003      	beq.n	8008f04 <HAL_TIM_Base_Start_IT+0x54>
 8008efc:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8008f00:	4293      	cmp	r3, r2
 8008f02:	d104      	bne.n	8008f0e <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008f04:	689a      	ldr	r2, [r3, #8]
 8008f06:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008f0a:	2a06      	cmp	r2, #6
 8008f0c:	d003      	beq.n	8008f16 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8008f0e:	681a      	ldr	r2, [r3, #0]
 8008f10:	f042 0201 	orr.w	r2, r2, #1
 8008f14:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8008f16:	2000      	movs	r0, #0
}
 8008f18:	4770      	bx	lr
    return HAL_ERROR;
 8008f1a:	2001      	movs	r0, #1
 8008f1c:	4770      	bx	lr
 8008f1e:	bf00      	nop
 8008f20:	40010000 	.word	0x40010000

08008f24 <HAL_TIM_OC_DelayElapsedCallback>:
 8008f24:	4770      	bx	lr

08008f26 <HAL_TIM_IC_CaptureCallback>:
 8008f26:	4770      	bx	lr

08008f28 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008f28:	4770      	bx	lr

08008f2a <HAL_TIM_TriggerCallback>:
 8008f2a:	4770      	bx	lr

08008f2c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008f2c:	6803      	ldr	r3, [r0, #0]
 8008f2e:	691a      	ldr	r2, [r3, #16]
 8008f30:	0791      	lsls	r1, r2, #30
{
 8008f32:	b510      	push	{r4, lr}
 8008f34:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008f36:	d50e      	bpl.n	8008f56 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8008f38:	68da      	ldr	r2, [r3, #12]
 8008f3a:	0792      	lsls	r2, r2, #30
 8008f3c:	d50b      	bpl.n	8008f56 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008f3e:	f06f 0202 	mvn.w	r2, #2
 8008f42:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008f44:	2201      	movs	r2, #1
 8008f46:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008f48:	699b      	ldr	r3, [r3, #24]
 8008f4a:	079b      	lsls	r3, r3, #30
 8008f4c:	d077      	beq.n	800903e <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008f4e:	f7ff ffea 	bl	8008f26 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008f52:	2300      	movs	r3, #0
 8008f54:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8008f56:	6823      	ldr	r3, [r4, #0]
 8008f58:	691a      	ldr	r2, [r3, #16]
 8008f5a:	0750      	lsls	r0, r2, #29
 8008f5c:	d510      	bpl.n	8008f80 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8008f5e:	68da      	ldr	r2, [r3, #12]
 8008f60:	0751      	lsls	r1, r2, #29
 8008f62:	d50d      	bpl.n	8008f80 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8008f64:	f06f 0204 	mvn.w	r2, #4
 8008f68:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8008f6a:	2202      	movs	r2, #2
 8008f6c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008f6e:	699b      	ldr	r3, [r3, #24]
 8008f70:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008f74:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008f76:	d068      	beq.n	800904a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8008f78:	f7ff ffd5 	bl	8008f26 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008f7c:	2300      	movs	r3, #0
 8008f7e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8008f80:	6823      	ldr	r3, [r4, #0]
 8008f82:	691a      	ldr	r2, [r3, #16]
 8008f84:	0712      	lsls	r2, r2, #28
 8008f86:	d50f      	bpl.n	8008fa8 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8008f88:	68da      	ldr	r2, [r3, #12]
 8008f8a:	0710      	lsls	r0, r2, #28
 8008f8c:	d50c      	bpl.n	8008fa8 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8008f8e:	f06f 0208 	mvn.w	r2, #8
 8008f92:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8008f94:	2204      	movs	r2, #4
 8008f96:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008f98:	69db      	ldr	r3, [r3, #28]
 8008f9a:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008f9c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008f9e:	d05a      	beq.n	8009056 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8008fa0:	f7ff ffc1 	bl	8008f26 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008fa4:	2300      	movs	r3, #0
 8008fa6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008fa8:	6823      	ldr	r3, [r4, #0]
 8008faa:	691a      	ldr	r2, [r3, #16]
 8008fac:	06d2      	lsls	r2, r2, #27
 8008fae:	d510      	bpl.n	8008fd2 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8008fb0:	68da      	ldr	r2, [r3, #12]
 8008fb2:	06d0      	lsls	r0, r2, #27
 8008fb4:	d50d      	bpl.n	8008fd2 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008fb6:	f06f 0210 	mvn.w	r2, #16
 8008fba:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008fbc:	2208      	movs	r2, #8
 8008fbe:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008fc0:	69db      	ldr	r3, [r3, #28]
 8008fc2:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008fc6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008fc8:	d04b      	beq.n	8009062 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008fca:	f7ff ffac 	bl	8008f26 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008fce:	2300      	movs	r3, #0
 8008fd0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008fd2:	6823      	ldr	r3, [r4, #0]
 8008fd4:	691a      	ldr	r2, [r3, #16]
 8008fd6:	07d1      	lsls	r1, r2, #31
 8008fd8:	d508      	bpl.n	8008fec <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008fda:	68da      	ldr	r2, [r3, #12]
 8008fdc:	07d2      	lsls	r2, r2, #31
 8008fde:	d505      	bpl.n	8008fec <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008fe0:	f06f 0201 	mvn.w	r2, #1
 8008fe4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008fe6:	4620      	mov	r0, r4
 8008fe8:	f7f8 fd18 	bl	8001a1c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008fec:	6823      	ldr	r3, [r4, #0]
 8008fee:	691a      	ldr	r2, [r3, #16]
 8008ff0:	0610      	lsls	r0, r2, #24
 8008ff2:	d508      	bpl.n	8009006 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008ff4:	68da      	ldr	r2, [r3, #12]
 8008ff6:	0611      	lsls	r1, r2, #24
 8008ff8:	d505      	bpl.n	8009006 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008ffa:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008ffe:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8009000:	4620      	mov	r0, r4
 8009002:	f000 f906 	bl	8009212 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8009006:	6823      	ldr	r3, [r4, #0]
 8009008:	691a      	ldr	r2, [r3, #16]
 800900a:	0652      	lsls	r2, r2, #25
 800900c:	d508      	bpl.n	8009020 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800900e:	68da      	ldr	r2, [r3, #12]
 8009010:	0650      	lsls	r0, r2, #25
 8009012:	d505      	bpl.n	8009020 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009014:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009018:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800901a:	4620      	mov	r0, r4
 800901c:	f7ff ff85 	bl	8008f2a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8009020:	6823      	ldr	r3, [r4, #0]
 8009022:	691a      	ldr	r2, [r3, #16]
 8009024:	0691      	lsls	r1, r2, #26
 8009026:	d522      	bpl.n	800906e <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8009028:	68da      	ldr	r2, [r3, #12]
 800902a:	0692      	lsls	r2, r2, #26
 800902c:	d51f      	bpl.n	800906e <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800902e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8009032:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8009034:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8009036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800903a:	f000 b8e9 	b.w	8009210 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800903e:	f7ff ff71 	bl	8008f24 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009042:	4620      	mov	r0, r4
 8009044:	f7ff ff70 	bl	8008f28 <HAL_TIM_PWM_PulseFinishedCallback>
 8009048:	e783      	b.n	8008f52 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800904a:	f7ff ff6b 	bl	8008f24 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800904e:	4620      	mov	r0, r4
 8009050:	f7ff ff6a 	bl	8008f28 <HAL_TIM_PWM_PulseFinishedCallback>
 8009054:	e792      	b.n	8008f7c <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009056:	f7ff ff65 	bl	8008f24 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800905a:	4620      	mov	r0, r4
 800905c:	f7ff ff64 	bl	8008f28 <HAL_TIM_PWM_PulseFinishedCallback>
 8009060:	e7a0      	b.n	8008fa4 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8009062:	f7ff ff5f 	bl	8008f24 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8009066:	4620      	mov	r0, r4
 8009068:	f7ff ff5e 	bl	8008f28 <HAL_TIM_PWM_PulseFinishedCallback>
 800906c:	e7af      	b.n	8008fce <HAL_TIM_IRQHandler+0xa2>
}
 800906e:	bd10      	pop	{r4, pc}

08009070 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009070:	4a30      	ldr	r2, [pc, #192]	; (8009134 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8009072:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8009074:	4290      	cmp	r0, r2
 8009076:	d012      	beq.n	800909e <TIM_Base_SetConfig+0x2e>
 8009078:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800907c:	d00f      	beq.n	800909e <TIM_Base_SetConfig+0x2e>
 800907e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009082:	4290      	cmp	r0, r2
 8009084:	d00b      	beq.n	800909e <TIM_Base_SetConfig+0x2e>
 8009086:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800908a:	4290      	cmp	r0, r2
 800908c:	d007      	beq.n	800909e <TIM_Base_SetConfig+0x2e>
 800908e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009092:	4290      	cmp	r0, r2
 8009094:	d003      	beq.n	800909e <TIM_Base_SetConfig+0x2e>
 8009096:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800909a:	4290      	cmp	r0, r2
 800909c:	d119      	bne.n	80090d2 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800909e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80090a0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80090a4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80090a6:	4a23      	ldr	r2, [pc, #140]	; (8009134 <TIM_Base_SetConfig+0xc4>)
 80090a8:	4290      	cmp	r0, r2
 80090aa:	d029      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090ac:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80090b0:	d026      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090b2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80090b6:	4290      	cmp	r0, r2
 80090b8:	d022      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090ba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80090be:	4290      	cmp	r0, r2
 80090c0:	d01e      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090c2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80090c6:	4290      	cmp	r0, r2
 80090c8:	d01a      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090ca:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80090ce:	4290      	cmp	r0, r2
 80090d0:	d016      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090d2:	4a19      	ldr	r2, [pc, #100]	; (8009138 <TIM_Base_SetConfig+0xc8>)
 80090d4:	4290      	cmp	r0, r2
 80090d6:	d013      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090d8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80090dc:	4290      	cmp	r0, r2
 80090de:	d00f      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090e0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80090e4:	4290      	cmp	r0, r2
 80090e6:	d00b      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090e8:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80090ec:	4290      	cmp	r0, r2
 80090ee:	d007      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090f0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80090f4:	4290      	cmp	r0, r2
 80090f6:	d003      	beq.n	8009100 <TIM_Base_SetConfig+0x90>
 80090f8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80090fc:	4290      	cmp	r0, r2
 80090fe:	d103      	bne.n	8009108 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009100:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8009102:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009106:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009108:	694a      	ldr	r2, [r1, #20]
 800910a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800910e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8009110:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009112:	688b      	ldr	r3, [r1, #8]
 8009114:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8009116:	680b      	ldr	r3, [r1, #0]
 8009118:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800911a:	4b06      	ldr	r3, [pc, #24]	; (8009134 <TIM_Base_SetConfig+0xc4>)
 800911c:	4298      	cmp	r0, r3
 800911e:	d003      	beq.n	8009128 <TIM_Base_SetConfig+0xb8>
 8009120:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009124:	4298      	cmp	r0, r3
 8009126:	d101      	bne.n	800912c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009128:	690b      	ldr	r3, [r1, #16]
 800912a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800912c:	2301      	movs	r3, #1
 800912e:	6143      	str	r3, [r0, #20]
}
 8009130:	4770      	bx	lr
 8009132:	bf00      	nop
 8009134:	40010000 	.word	0x40010000
 8009138:	40014000 	.word	0x40014000

0800913c <HAL_TIM_Base_Init>:
{
 800913c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800913e:	4604      	mov	r4, r0
 8009140:	b330      	cbz	r0, 8009190 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009142:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009146:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800914a:	b91b      	cbnz	r3, 8009154 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800914c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8009150:	f7f8 fe38 	bl	8001dc4 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009154:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009156:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8009158:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800915c:	1d21      	adds	r1, r4, #4
 800915e:	f7ff ff87 	bl	8009070 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009162:	2301      	movs	r3, #1
 8009164:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8009168:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800916a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800916e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8009172:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8009176:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800917a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800917e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009182:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8009186:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800918a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800918e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009190:	2001      	movs	r0, #1
 8009192:	e7fc      	b.n	800918e <HAL_TIM_Base_Init+0x52>

08009194 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8009194:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8009196:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800919a:	2b01      	cmp	r3, #1
 800919c:	f04f 0302 	mov.w	r3, #2
 80091a0:	d032      	beq.n	8009208 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80091a2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80091a6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80091a8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80091aa:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80091ac:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80091ae:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80091b2:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80091b4:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80091b6:	4c15      	ldr	r4, [pc, #84]	; (800920c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80091b8:	42a3      	cmp	r3, r4
 80091ba:	d01a      	beq.n	80091f2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80091bc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80091c0:	d017      	beq.n	80091f2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80091c2:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80091c6:	42a3      	cmp	r3, r4
 80091c8:	d013      	beq.n	80091f2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80091ca:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80091ce:	42a3      	cmp	r3, r4
 80091d0:	d00f      	beq.n	80091f2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80091d2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80091d6:	42a3      	cmp	r3, r4
 80091d8:	d00b      	beq.n	80091f2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80091da:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 80091de:	42a3      	cmp	r3, r4
 80091e0:	d007      	beq.n	80091f2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80091e2:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 80091e6:	42a3      	cmp	r3, r4
 80091e8:	d003      	beq.n	80091f2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80091ea:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 80091ee:	42a3      	cmp	r3, r4
 80091f0:	d104      	bne.n	80091fc <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80091f2:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 80091f4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 80091f8:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 80091fa:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 80091fc:	2301      	movs	r3, #1
 80091fe:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8009202:	2300      	movs	r3, #0
 8009204:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8009208:	4618      	mov	r0, r3

  return HAL_OK;
}
 800920a:	bd30      	pop	{r4, r5, pc}
 800920c:	40010000 	.word	0x40010000

08009210 <HAL_TIMEx_CommutCallback>:
 8009210:	4770      	bx	lr

08009212 <HAL_TIMEx_BreakCallback>:
 8009212:	4770      	bx	lr

08009214 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8009214:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009216:	f102 030c 	add.w	r3, r2, #12
 800921a:	e853 3f00 	ldrex	r3, [r3]
 800921e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009222:	320c      	adds	r2, #12
 8009224:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8009228:	6802      	ldr	r2, [r0, #0]
 800922a:	2900      	cmp	r1, #0
 800922c:	d1f2      	bne.n	8009214 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800922e:	f102 0314 	add.w	r3, r2, #20
 8009232:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009236:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800923a:	f102 0c14 	add.w	ip, r2, #20
 800923e:	e84c 3100 	strex	r1, r3, [ip]
 8009242:	2900      	cmp	r1, #0
 8009244:	d1f3      	bne.n	800922e <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8009246:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8009248:	2b01      	cmp	r3, #1
 800924a:	d10b      	bne.n	8009264 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800924c:	f102 030c 	add.w	r3, r2, #12
 8009250:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8009254:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009258:	f102 0c0c 	add.w	ip, r2, #12
 800925c:	e84c 3100 	strex	r1, r3, [ip]
 8009260:	2900      	cmp	r1, #0
 8009262:	d1f3      	bne.n	800924c <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8009264:	2320      	movs	r3, #32
 8009266:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800926a:	2300      	movs	r3, #0
 800926c:	6303      	str	r3, [r0, #48]	; 0x30
}
 800926e:	4770      	bx	lr

08009270 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8009270:	6802      	ldr	r2, [r0, #0]
 8009272:	68c1      	ldr	r1, [r0, #12]
 8009274:	6913      	ldr	r3, [r2, #16]
 8009276:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800927a:	430b      	orrs	r3, r1
{
 800927c:	b570      	push	{r4, r5, r6, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800927e:	6113      	str	r3, [r2, #16]
{
 8009280:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8009282:	6883      	ldr	r3, [r0, #8]
 8009284:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 8009286:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8009288:	4303      	orrs	r3, r0
 800928a:	6968      	ldr	r0, [r5, #20]
 800928c:	4303      	orrs	r3, r0
 800928e:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8009290:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
 8009294:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8009298:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 800929a:	430b      	orrs	r3, r1
 800929c:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800929e:	6953      	ldr	r3, [r2, #20]
 80092a0:	69a9      	ldr	r1, [r5, #24]
 80092a2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80092a6:	430b      	orrs	r3, r1
 80092a8:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80092aa:	4b1f      	ldr	r3, [pc, #124]	; (8009328 <UART_SetConfig+0xb8>)
 80092ac:	429a      	cmp	r2, r3
 80092ae:	d003      	beq.n	80092b8 <UART_SetConfig+0x48>
 80092b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80092b4:	429a      	cmp	r2, r3
 80092b6:	d123      	bne.n	8009300 <UART_SetConfig+0x90>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 80092b8:	f7ff f900 	bl	80084bc <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80092bc:	69eb      	ldr	r3, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80092be:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80092c0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80092c4:	e9d5 4600 	ldrd	r4, r6, [r5]
 80092c8:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80092cc:	d11b      	bne.n	8009306 <UART_SetConfig+0x96>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 80092ce:	19b2      	adds	r2, r6, r6
 80092d0:	f04f 0300 	mov.w	r3, #0
 80092d4:	415b      	adcs	r3, r3
 80092d6:	f7f6 ffe3 	bl	80002a0 <__aeabi_uldivmod>
 80092da:	2164      	movs	r1, #100	; 0x64
 80092dc:	fbb0 f5f1 	udiv	r5, r0, r1
 80092e0:	fb01 0315 	mls	r3, r1, r5, r0
 80092e4:	00db      	lsls	r3, r3, #3
 80092e6:	3332      	adds	r3, #50	; 0x32
 80092e8:	fbb3 f3f1 	udiv	r3, r3, r1
 80092ec:	f003 0207 	and.w	r2, r3, #7
 80092f0:	005b      	lsls	r3, r3, #1
 80092f2:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 80092f6:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80092fa:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 80092fc:	60a3      	str	r3, [r4, #8]
  }
}
 80092fe:	bd70      	pop	{r4, r5, r6, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8009300:	f7ff f8cc 	bl	800849c <HAL_RCC_GetPCLK1Freq>
 8009304:	e7da      	b.n	80092bc <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8009306:	00b2      	lsls	r2, r6, #2
 8009308:	0fb3      	lsrs	r3, r6, #30
 800930a:	f7f6 ffc9 	bl	80002a0 <__aeabi_uldivmod>
 800930e:	2264      	movs	r2, #100	; 0x64
 8009310:	fbb0 f1f2 	udiv	r1, r0, r2
 8009314:	fb02 0311 	mls	r3, r2, r1, r0
 8009318:	011b      	lsls	r3, r3, #4
 800931a:	3332      	adds	r3, #50	; 0x32
 800931c:	fbb3 f3f2 	udiv	r3, r3, r2
 8009320:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8009324:	e7ea      	b.n	80092fc <UART_SetConfig+0x8c>
 8009326:	bf00      	nop
 8009328:	40011000 	.word	0x40011000

0800932c <HAL_UART_Init>:
{
 800932c:	b510      	push	{r4, lr}
  if (huart == NULL)
 800932e:	4604      	mov	r4, r0
 8009330:	b340      	cbz	r0, 8009384 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8009332:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009336:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800933a:	b91b      	cbnz	r3, 8009344 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 800933c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_UART_MspInit(huart);
 8009340:	f7f8 fd62 	bl	8001e08 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8009344:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8009346:	2324      	movs	r3, #36	; 0x24
 8009348:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UART_DISABLE(huart);
 800934c:	68d3      	ldr	r3, [r2, #12]
 800934e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8009352:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8009354:	4620      	mov	r0, r4
 8009356:	f7ff ff8b 	bl	8009270 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800935a:	6823      	ldr	r3, [r4, #0]
 800935c:	691a      	ldr	r2, [r3, #16]
 800935e:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8009362:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8009364:	695a      	ldr	r2, [r3, #20]
 8009366:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800936a:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 800936c:	68da      	ldr	r2, [r3, #12]
 800936e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009372:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009374:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8009376:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009378:	6420      	str	r0, [r4, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 800937a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 800937e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
}
 8009382:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009384:	2001      	movs	r0, #1
 8009386:	e7fc      	b.n	8009382 <HAL_UART_Init+0x56>

08009388 <HAL_UART_TxCpltCallback>:
 8009388:	4770      	bx	lr

0800938a <HAL_UART_RxCpltCallback>:
 800938a:	4770      	bx	lr

0800938c <HAL_UART_ErrorCallback>:
 800938c:	4770      	bx	lr

0800938e <UART_DMAAbortOnError>:
{
 800938e:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8009390:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8009392:	2300      	movs	r3, #0
 8009394:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8009396:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8009398:	f7ff fff8 	bl	800938c <HAL_UART_ErrorCallback>
}
 800939c:	bd08      	pop	{r3, pc}

0800939e <HAL_UARTEx_RxEventCallback>:
}
 800939e:	4770      	bx	lr

080093a0 <UART_Receive_IT.part.0.isra.0>:
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
 80093a0:	b507      	push	{r0, r1, r2, lr}
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80093a2:	6881      	ldr	r1, [r0, #8]
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 80093a4:	6a83      	ldr	r3, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80093a6:	6802      	ldr	r2, [r0, #0]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80093a8:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 80093ac:	d13e      	bne.n	800942c <UART_Receive_IT.part.0.isra.0+0x8c>
 80093ae:	6901      	ldr	r1, [r0, #16]
 80093b0:	2900      	cmp	r1, #0
 80093b2:	d13e      	bne.n	8009432 <UART_Receive_IT.part.0.isra.0+0x92>
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80093b4:	6852      	ldr	r2, [r2, #4]
 80093b6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80093ba:	f823 2b02 	strh.w	r2, [r3], #2
      huart->pRxBuffPtr += 1U;
 80093be:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 80093c0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80093c2:	3b01      	subs	r3, #1
 80093c4:	b29b      	uxth	r3, r3
 80093c6:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80093c8:	2b00      	cmp	r3, #0
 80093ca:	d12c      	bne.n	8009426 <UART_Receive_IT.part.0.isra.0+0x86>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 80093cc:	6802      	ldr	r2, [r0, #0]
 80093ce:	68d1      	ldr	r1, [r2, #12]
 80093d0:	f021 0120 	bic.w	r1, r1, #32
 80093d4:	60d1      	str	r1, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 80093d6:	68d1      	ldr	r1, [r2, #12]
 80093d8:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80093dc:	60d1      	str	r1, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 80093de:	6951      	ldr	r1, [r2, #20]
 80093e0:	f021 0101 	bic.w	r1, r1, #1
 80093e4:	6151      	str	r1, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 80093e6:	2220      	movs	r2, #32
 80093e8:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80093ec:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80093ee:	2a01      	cmp	r2, #1
 80093f0:	6802      	ldr	r2, [r0, #0]
 80093f2:	d128      	bne.n	8009446 <UART_Receive_IT.part.0.isra.0+0xa6>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80093f4:	6303      	str	r3, [r0, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80093f6:	f102 030c 	add.w	r3, r2, #12
 80093fa:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80093fe:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009402:	f102 0c0c 	add.w	ip, r2, #12
 8009406:	e84c 3100 	strex	r1, r3, [ip]
 800940a:	2900      	cmp	r1, #0
 800940c:	d1f3      	bne.n	80093f6 <UART_Receive_IT.part.0.isra.0+0x56>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 800940e:	6813      	ldr	r3, [r2, #0]
 8009410:	06db      	lsls	r3, r3, #27
 8009412:	d505      	bpl.n	8009420 <UART_Receive_IT.part.0.isra.0+0x80>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8009414:	9101      	str	r1, [sp, #4]
 8009416:	6813      	ldr	r3, [r2, #0]
 8009418:	9301      	str	r3, [sp, #4]
 800941a:	6853      	ldr	r3, [r2, #4]
 800941c:	9301      	str	r3, [sp, #4]
 800941e:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8009420:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8009422:	f7ff ffbc 	bl	800939e <HAL_UARTEx_RxEventCallback>
}
 8009426:	b003      	add	sp, #12
 8009428:	f85d fb04 	ldr.w	pc, [sp], #4
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 800942c:	b939      	cbnz	r1, 800943e <UART_Receive_IT.part.0.isra.0+0x9e>
 800942e:	6901      	ldr	r1, [r0, #16]
 8009430:	b929      	cbnz	r1, 800943e <UART_Receive_IT.part.0.isra.0+0x9e>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8009432:	6852      	ldr	r2, [r2, #4]
 8009434:	b2d2      	uxtb	r2, r2
 8009436:	701a      	strb	r2, [r3, #0]
      huart->pRxBuffPtr += 1U;
 8009438:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800943a:	3301      	adds	r3, #1
 800943c:	e7bf      	b.n	80093be <UART_Receive_IT.part.0.isra.0+0x1e>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 800943e:	6852      	ldr	r2, [r2, #4]
 8009440:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8009444:	e7f7      	b.n	8009436 <UART_Receive_IT.part.0.isra.0+0x96>
        HAL_UART_RxCpltCallback(huart);
 8009446:	f7ff ffa0 	bl	800938a <HAL_UART_RxCpltCallback>
 800944a:	e7ec      	b.n	8009426 <UART_Receive_IT.part.0.isra.0+0x86>

0800944c <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 800944c:	6803      	ldr	r3, [r0, #0]
{
 800944e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8009450:	681a      	ldr	r2, [r3, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8009452:	68d9      	ldr	r1, [r3, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8009454:	695d      	ldr	r5, [r3, #20]
  if (errorflags == RESET)
 8009456:	f012 0f0f 	tst.w	r2, #15
{
 800945a:	4604      	mov	r4, r0
  if (errorflags == RESET)
 800945c:	d10c      	bne.n	8009478 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 800945e:	0695      	lsls	r5, r2, #26
 8009460:	d570      	bpl.n	8009544 <HAL_UART_IRQHandler+0xf8>
 8009462:	068d      	lsls	r5, r1, #26
 8009464:	d56e      	bpl.n	8009544 <HAL_UART_IRQHandler+0xf8>
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8009466:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800946a:	2b22      	cmp	r3, #34	; 0x22
 800946c:	d164      	bne.n	8009538 <HAL_UART_IRQHandler+0xec>
}
 800946e:	b003      	add	sp, #12
 8009470:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009474:	f7ff bf94 	b.w	80093a0 <UART_Receive_IT.part.0.isra.0>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8009478:	f005 0001 	and.w	r0, r5, #1
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 800947c:	f401 7590 	and.w	r5, r1, #288	; 0x120
 8009480:	4305      	orrs	r5, r0
 8009482:	d05f      	beq.n	8009544 <HAL_UART_IRQHandler+0xf8>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8009484:	07d5      	lsls	r5, r2, #31
 8009486:	d505      	bpl.n	8009494 <HAL_UART_IRQHandler+0x48>
 8009488:	05cb      	lsls	r3, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800948a:	bf42      	ittt	mi
 800948c:	6c23      	ldrmi	r3, [r4, #64]	; 0x40
 800948e:	f043 0301 	orrmi.w	r3, r3, #1
 8009492:	6423      	strmi	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8009494:	0755      	lsls	r5, r2, #29
 8009496:	d504      	bpl.n	80094a2 <HAL_UART_IRQHandler+0x56>
 8009498:	b118      	cbz	r0, 80094a2 <HAL_UART_IRQHandler+0x56>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 800949a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800949c:	f043 0302 	orr.w	r3, r3, #2
 80094a0:	6423      	str	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 80094a2:	0793      	lsls	r3, r2, #30
 80094a4:	d504      	bpl.n	80094b0 <HAL_UART_IRQHandler+0x64>
 80094a6:	b118      	cbz	r0, 80094b0 <HAL_UART_IRQHandler+0x64>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 80094a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80094aa:	f043 0304 	orr.w	r3, r3, #4
 80094ae:	6423      	str	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 80094b0:	0715      	lsls	r5, r2, #28
 80094b2:	d507      	bpl.n	80094c4 <HAL_UART_IRQHandler+0x78>
 80094b4:	f001 0320 	and.w	r3, r1, #32
 80094b8:	4303      	orrs	r3, r0
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80094ba:	bf1e      	ittt	ne
 80094bc:	6c23      	ldrne	r3, [r4, #64]	; 0x40
 80094be:	f043 0308 	orrne.w	r3, r3, #8
 80094c2:	6423      	strne	r3, [r4, #64]	; 0x40
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80094c4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80094c6:	2b00      	cmp	r3, #0
 80094c8:	d036      	beq.n	8009538 <HAL_UART_IRQHandler+0xec>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 80094ca:	0690      	lsls	r0, r2, #26
 80094cc:	d508      	bpl.n	80094e0 <HAL_UART_IRQHandler+0x94>
 80094ce:	068a      	lsls	r2, r1, #26
 80094d0:	d506      	bpl.n	80094e0 <HAL_UART_IRQHandler+0x94>
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80094d2:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 80094d6:	2b22      	cmp	r3, #34	; 0x22
 80094d8:	d102      	bne.n	80094e0 <HAL_UART_IRQHandler+0x94>
 80094da:	4620      	mov	r0, r4
 80094dc:	f7ff ff60 	bl	80093a0 <UART_Receive_IT.part.0.isra.0>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 80094e0:	6823      	ldr	r3, [r4, #0]
 80094e2:	695b      	ldr	r3, [r3, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 80094e4:	6c25      	ldr	r5, [r4, #64]	; 0x40
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 80094e6:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 80094ea:	f005 0508 	and.w	r5, r5, #8
 80094ee:	431d      	orrs	r5, r3
        UART_EndRxTransfer(huart);
 80094f0:	4620      	mov	r0, r4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 80094f2:	d023      	beq.n	800953c <HAL_UART_IRQHandler+0xf0>
        UART_EndRxTransfer(huart);
 80094f4:	f7ff fe8e 	bl	8009214 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80094f8:	6822      	ldr	r2, [r4, #0]
 80094fa:	6953      	ldr	r3, [r2, #20]
 80094fc:	065b      	lsls	r3, r3, #25
 80094fe:	d518      	bpl.n	8009532 <HAL_UART_IRQHandler+0xe6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009500:	f102 0314 	add.w	r3, r2, #20
 8009504:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009508:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800950c:	f102 0014 	add.w	r0, r2, #20
 8009510:	e840 3100 	strex	r1, r3, [r0]
 8009514:	2900      	cmp	r1, #0
 8009516:	d1f3      	bne.n	8009500 <HAL_UART_IRQHandler+0xb4>
          if (huart->hdmarx != NULL)
 8009518:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800951a:	b150      	cbz	r0, 8009532 <HAL_UART_IRQHandler+0xe6>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 800951c:	4b72      	ldr	r3, [pc, #456]	; (80096e8 <HAL_UART_IRQHandler+0x29c>)
 800951e:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8009520:	f7fd fd4c 	bl	8006fbc <HAL_DMA_Abort_IT>
 8009524:	b140      	cbz	r0, 8009538 <HAL_UART_IRQHandler+0xec>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8009526:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009528:	6d03      	ldr	r3, [r0, #80]	; 0x50
}
 800952a:	b003      	add	sp, #12
 800952c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8009530:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 8009532:	4620      	mov	r0, r4
 8009534:	f7ff ff2a 	bl	800938c <HAL_UART_ErrorCallback>
}
 8009538:	b003      	add	sp, #12
 800953a:	bd30      	pop	{r4, r5, pc}
        HAL_UART_ErrorCallback(huart);
 800953c:	f7ff ff26 	bl	800938c <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009540:	6425      	str	r5, [r4, #64]	; 0x40
 8009542:	e7f9      	b.n	8009538 <HAL_UART_IRQHandler+0xec>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8009544:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009546:	2801      	cmp	r0, #1
 8009548:	f040 8091 	bne.w	800966e <HAL_UART_IRQHandler+0x222>
      && ((isrflags & USART_SR_IDLE) != 0U)
 800954c:	06d5      	lsls	r5, r2, #27
 800954e:	f140 808e 	bpl.w	800966e <HAL_UART_IRQHandler+0x222>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8009552:	06c8      	lsls	r0, r1, #27
 8009554:	f140 808b 	bpl.w	800966e <HAL_UART_IRQHandler+0x222>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8009558:	2200      	movs	r2, #0
 800955a:	9201      	str	r2, [sp, #4]
 800955c:	681a      	ldr	r2, [r3, #0]
 800955e:	9201      	str	r2, [sp, #4]
 8009560:	685a      	ldr	r2, [r3, #4]
 8009562:	9201      	str	r2, [sp, #4]
 8009564:	9a01      	ldr	r2, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009566:	695a      	ldr	r2, [r3, #20]
 8009568:	0655      	lsls	r5, r2, #25
 800956a:	d54c      	bpl.n	8009606 <HAL_UART_IRQHandler+0x1ba>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 800956c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800956e:	680a      	ldr	r2, [r1, #0]
 8009570:	6852      	ldr	r2, [r2, #4]
 8009572:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8009574:	2a00      	cmp	r2, #0
 8009576:	d0df      	beq.n	8009538 <HAL_UART_IRQHandler+0xec>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8009578:	8da0      	ldrh	r0, [r4, #44]	; 0x2c
 800957a:	4290      	cmp	r0, r2
 800957c:	d9dc      	bls.n	8009538 <HAL_UART_IRQHandler+0xec>
        huart->RxXferCount = nb_remaining_rx_data;
 800957e:	85e2      	strh	r2, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8009580:	69ca      	ldr	r2, [r1, #28]
 8009582:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8009586:	d036      	beq.n	80095f6 <HAL_UART_IRQHandler+0x1aa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009588:	f103 020c 	add.w	r2, r3, #12
 800958c:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8009590:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009594:	f103 000c 	add.w	r0, r3, #12
 8009598:	e840 2100 	strex	r1, r2, [r0]
 800959c:	2900      	cmp	r1, #0
 800959e:	d1f3      	bne.n	8009588 <HAL_UART_IRQHandler+0x13c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80095a0:	f103 0214 	add.w	r2, r3, #20
 80095a4:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80095a8:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80095ac:	f103 0014 	add.w	r0, r3, #20
 80095b0:	e840 2100 	strex	r1, r2, [r0]
 80095b4:	2900      	cmp	r1, #0
 80095b6:	d1f3      	bne.n	80095a0 <HAL_UART_IRQHandler+0x154>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80095b8:	f103 0214 	add.w	r2, r3, #20
 80095bc:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80095c0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80095c4:	f103 0014 	add.w	r0, r3, #20
 80095c8:	e840 2100 	strex	r1, r2, [r0]
 80095cc:	2900      	cmp	r1, #0
 80095ce:	d1f3      	bne.n	80095b8 <HAL_UART_IRQHandler+0x16c>
          huart->RxState = HAL_UART_STATE_READY;
 80095d0:	2220      	movs	r2, #32
 80095d2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80095d6:	6321      	str	r1, [r4, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80095d8:	f103 020c 	add.w	r2, r3, #12
 80095dc:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80095e0:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80095e4:	f103 000c 	add.w	r0, r3, #12
 80095e8:	e840 2100 	strex	r1, r2, [r0]
 80095ec:	2900      	cmp	r1, #0
 80095ee:	d1f3      	bne.n	80095d8 <HAL_UART_IRQHandler+0x18c>
          (void)HAL_DMA_Abort(huart->hdmarx);
 80095f0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 80095f2:	f7fd fc9f 	bl	8006f34 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 80095f6:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80095f8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80095fa:	1ac9      	subs	r1, r1, r3
 80095fc:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 80095fe:	4620      	mov	r0, r4
 8009600:	f7ff fecd 	bl	800939e <HAL_UARTEx_RxEventCallback>
 8009604:	e798      	b.n	8009538 <HAL_UART_IRQHandler+0xec>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8009606:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 8009608:	b28a      	uxth	r2, r1
      if ((huart->RxXferCount > 0U)
 800960a:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800960c:	b289      	uxth	r1, r1
 800960e:	2900      	cmp	r1, #0
 8009610:	d092      	beq.n	8009538 <HAL_UART_IRQHandler+0xec>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8009612:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8009614:	1a89      	subs	r1, r1, r2
 8009616:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 8009618:	2900      	cmp	r1, #0
 800961a:	d08d      	beq.n	8009538 <HAL_UART_IRQHandler+0xec>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800961c:	f103 020c 	add.w	r2, r3, #12
 8009620:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8009624:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009628:	f103 050c 	add.w	r5, r3, #12
 800962c:	e845 2000 	strex	r0, r2, [r5]
 8009630:	2800      	cmp	r0, #0
 8009632:	d1f3      	bne.n	800961c <HAL_UART_IRQHandler+0x1d0>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009634:	f103 0214 	add.w	r2, r3, #20
 8009638:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800963c:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009640:	f103 0514 	add.w	r5, r3, #20
 8009644:	e845 2000 	strex	r0, r2, [r5]
 8009648:	2800      	cmp	r0, #0
 800964a:	d1f3      	bne.n	8009634 <HAL_UART_IRQHandler+0x1e8>
        huart->RxState = HAL_UART_STATE_READY;
 800964c:	2220      	movs	r2, #32
 800964e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8009652:	6320      	str	r0, [r4, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009654:	f103 020c 	add.w	r2, r3, #12
 8009658:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800965c:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009660:	f103 050c 	add.w	r5, r3, #12
 8009664:	e845 2000 	strex	r0, r2, [r5]
 8009668:	2800      	cmp	r0, #0
 800966a:	d1f3      	bne.n	8009654 <HAL_UART_IRQHandler+0x208>
 800966c:	e7c7      	b.n	80095fe <HAL_UART_IRQHandler+0x1b2>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 800966e:	0610      	lsls	r0, r2, #24
 8009670:	d528      	bpl.n	80096c4 <HAL_UART_IRQHandler+0x278>
 8009672:	060d      	lsls	r5, r1, #24
 8009674:	d526      	bpl.n	80096c4 <HAL_UART_IRQHandler+0x278>
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8009676:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800967a:	2a21      	cmp	r2, #33	; 0x21
 800967c:	f47f af5c 	bne.w	8009538 <HAL_UART_IRQHandler+0xec>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009680:	68a1      	ldr	r1, [r4, #8]
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8009682:	6a22      	ldr	r2, [r4, #32]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009684:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8009688:	d117      	bne.n	80096ba <HAL_UART_IRQHandler+0x26e>
 800968a:	6921      	ldr	r1, [r4, #16]
 800968c:	b9a9      	cbnz	r1, 80096ba <HAL_UART_IRQHandler+0x26e>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 800968e:	f832 1b02 	ldrh.w	r1, [r2], #2
 8009692:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8009696:	6059      	str	r1, [r3, #4]
      huart->pTxBuffPtr += 2U;
 8009698:	6222      	str	r2, [r4, #32]
    if (--huart->TxXferCount == 0U)
 800969a:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 800969c:	3a01      	subs	r2, #1
 800969e:	b292      	uxth	r2, r2
 80096a0:	84e2      	strh	r2, [r4, #38]	; 0x26
 80096a2:	2a00      	cmp	r2, #0
 80096a4:	f47f af48 	bne.w	8009538 <HAL_UART_IRQHandler+0xec>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 80096a8:	68da      	ldr	r2, [r3, #12]
 80096aa:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80096ae:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 80096b0:	68da      	ldr	r2, [r3, #12]
 80096b2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80096b6:	60da      	str	r2, [r3, #12]
 80096b8:	e73e      	b.n	8009538 <HAL_UART_IRQHandler+0xec>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 80096ba:	1c51      	adds	r1, r2, #1
 80096bc:	6221      	str	r1, [r4, #32]
 80096be:	7812      	ldrb	r2, [r2, #0]
 80096c0:	605a      	str	r2, [r3, #4]
 80096c2:	e7ea      	b.n	800969a <HAL_UART_IRQHandler+0x24e>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 80096c4:	0650      	lsls	r0, r2, #25
 80096c6:	f57f af37 	bpl.w	8009538 <HAL_UART_IRQHandler+0xec>
 80096ca:	064a      	lsls	r2, r1, #25
 80096cc:	f57f af34 	bpl.w	8009538 <HAL_UART_IRQHandler+0xec>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 80096d0:	68da      	ldr	r2, [r3, #12]
 80096d2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80096d6:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 80096d8:	2320      	movs	r3, #32
 80096da:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  HAL_UART_TxCpltCallback(huart);
 80096de:	4620      	mov	r0, r4
 80096e0:	f7ff fe52 	bl	8009388 <HAL_UART_TxCpltCallback>
  return HAL_OK;
 80096e4:	e728      	b.n	8009538 <HAL_UART_IRQHandler+0xec>
 80096e6:	bf00      	nop
 80096e8:	0800938f 	.word	0x0800938f

080096ec <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80096ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80096f0:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80096f4:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80096f6:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 80096fa:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 80096fe:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8009702:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8009706:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8009708:	b9a2      	cbnz	r2, 8009734 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800970a:	ea43 0209 	orr.w	r2, r3, r9
 800970e:	432a      	orrs	r2, r5
 8009710:	ea42 0308 	orr.w	r3, r2, r8
 8009714:	6801      	ldr	r1, [r0, #0]
 8009716:	ea43 030e 	orr.w	r3, r3, lr
 800971a:	ea43 030c 	orr.w	r3, r3, ip
 800971e:	433b      	orrs	r3, r7
 8009720:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8009724:	4333      	orrs	r3, r6
 8009726:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800972a:	430b      	orrs	r3, r1
 800972c:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800972e:	2000      	movs	r0, #0
 8009730:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009734:	6802      	ldr	r2, [r0, #0]
 8009736:	ea43 0309 	orr.w	r3, r3, r9
 800973a:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800973e:	4313      	orrs	r3, r2
 8009740:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8009742:	ea45 0308 	orr.w	r3, r5, r8
 8009746:	6842      	ldr	r2, [r0, #4]
 8009748:	ea43 030e 	orr.w	r3, r3, lr
 800974c:	ea43 030c 	orr.w	r3, r3, ip
 8009750:	433b      	orrs	r3, r7
 8009752:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8009756:	4333      	orrs	r3, r6
 8009758:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800975c:	4313      	orrs	r3, r2
 800975e:	6043      	str	r3, [r0, #4]
 8009760:	e7e5      	b.n	800972e <FMC_SDRAM_Init+0x42>

08009762 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009762:	68cb      	ldr	r3, [r1, #12]
 8009764:	f103 3cff 	add.w	ip, r3, #4294967295
 8009768:	694b      	ldr	r3, [r1, #20]
{
 800976a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800976c:	680f      	ldr	r7, [r1, #0]
 800976e:	684c      	ldr	r4, [r1, #4]
 8009770:	688e      	ldr	r6, [r1, #8]
 8009772:	690d      	ldr	r5, [r1, #16]
 8009774:	6989      	ldr	r1, [r1, #24]
 8009776:	3b01      	subs	r3, #1
 8009778:	051b      	lsls	r3, r3, #20
 800977a:	3c01      	subs	r4, #1
 800977c:	3e01      	subs	r6, #1
 800977e:	3d01      	subs	r5, #1
 8009780:	3901      	subs	r1, #1
 8009782:	3f01      	subs	r7, #1
 8009784:	0124      	lsls	r4, r4, #4
 8009786:	0236      	lsls	r6, r6, #8
 8009788:	042d      	lsls	r5, r5, #16
 800978a:	0609      	lsls	r1, r1, #24
 800978c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8009790:	b95a      	cbnz	r2, 80097aa <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009792:	433b      	orrs	r3, r7
 8009794:	4323      	orrs	r3, r4
 8009796:	6882      	ldr	r2, [r0, #8]
 8009798:	4333      	orrs	r3, r6
 800979a:	432b      	orrs	r3, r5
 800979c:	430b      	orrs	r3, r1
 800979e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80097a2:	4313      	orrs	r3, r2
 80097a4:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 80097a6:	2000      	movs	r0, #0
 80097a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80097aa:	6882      	ldr	r2, [r0, #8]
 80097ac:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80097b0:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80097b4:	431a      	orrs	r2, r3
 80097b6:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80097b8:	ea44 0306 	orr.w	r3, r4, r6
 80097bc:	68c2      	ldr	r2, [r0, #12]
 80097be:	433b      	orrs	r3, r7
 80097c0:	432b      	orrs	r3, r5
 80097c2:	430b      	orrs	r3, r1
 80097c4:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80097c8:	4313      	orrs	r3, r2
 80097ca:	60c3      	str	r3, [r0, #12]
 80097cc:	e7eb      	b.n	80097a6 <FMC_SDRAM_Timing_Init+0x44>

080097ce <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80097ce:	b570      	push	{r4, r5, r6, lr}
 80097d0:	4604      	mov	r4, r0
 80097d2:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80097d4:	6902      	ldr	r2, [r0, #16]
 80097d6:	e9d1 3000 	ldrd	r3, r0, [r1]
 80097da:	4303      	orrs	r3, r0
 80097dc:	68c8      	ldr	r0, [r1, #12]
 80097de:	0d92      	lsrs	r2, r2, #22
 80097e0:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 80097e4:	0592      	lsls	r2, r2, #22
 80097e6:	4313      	orrs	r3, r2
 80097e8:	688a      	ldr	r2, [r1, #8]
 80097ea:	3a01      	subs	r2, #1
 80097ec:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80097f0:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 80097f2:	f7fd fb23 	bl	8006e3c <HAL_GetTick>
 80097f6:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80097f8:	69a3      	ldr	r3, [r4, #24]
 80097fa:	f013 0320 	ands.w	r3, r3, #32
 80097fe:	d101      	bne.n	8009804 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8009800:	4618      	mov	r0, r3
 8009802:	e003      	b.n	800980c <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8009804:	1c6b      	adds	r3, r5, #1
 8009806:	d0f7      	beq.n	80097f8 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8009808:	b90d      	cbnz	r5, 800980e <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 800980a:	2003      	movs	r0, #3
}
 800980c:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800980e:	f7fd fb15 	bl	8006e3c <HAL_GetTick>
 8009812:	1b80      	subs	r0, r0, r6
 8009814:	42a8      	cmp	r0, r5
 8009816:	d9ef      	bls.n	80097f8 <FMC_SDRAM_SendCommand+0x2a>
 8009818:	e7f7      	b.n	800980a <FMC_SDRAM_SendCommand+0x3c>

0800981a <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800981a:	6943      	ldr	r3, [r0, #20]
 800981c:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8009820:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8009824:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8009828:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 800982a:	2000      	movs	r0, #0
 800982c:	4770      	bx	lr

0800982e <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800982e:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8009830:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009834:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8009836:	f001 fe37 	bl	800b4a8 <xTaskGetSchedulerState>
 800983a:	2801      	cmp	r0, #1
 800983c:	d003      	beq.n	8009846 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800983e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8009842:	f000 bbe7 	b.w	800a014 <xPortSysTickHandler>
}
 8009846:	bd08      	pop	{r3, pc}

08009848 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009848:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800984c:	b92b      	cbnz	r3, 800985a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800984e:	4b06      	ldr	r3, [pc, #24]	; (8009868 <osKernelInitialize+0x20>)
 8009850:	6818      	ldr	r0, [r3, #0]
 8009852:	b928      	cbnz	r0, 8009860 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8009854:	2201      	movs	r2, #1
 8009856:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8009858:	4770      	bx	lr
    stat = osErrorISR;
 800985a:	f06f 0005 	mvn.w	r0, #5
 800985e:	4770      	bx	lr
    } else {
      stat = osError;
 8009860:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8009864:	4770      	bx	lr
 8009866:	bf00      	nop
 8009868:	200044c4 	.word	0x200044c4

0800986c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800986c:	b510      	push	{r4, lr}
 800986e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009872:	b95c      	cbnz	r4, 800988c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8009874:	4b08      	ldr	r3, [pc, #32]	; (8009898 <osKernelStart+0x2c>)
 8009876:	681a      	ldr	r2, [r3, #0]
 8009878:	2a01      	cmp	r2, #1
 800987a:	d10a      	bne.n	8009892 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800987c:	4a07      	ldr	r2, [pc, #28]	; (800989c <osKernelStart+0x30>)
 800987e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8009880:	2202      	movs	r2, #2
 8009882:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8009884:	f001 fb8a 	bl	800af9c <vTaskStartScheduler>
      stat = osOK;
 8009888:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800988a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800988c:	f06f 0005 	mvn.w	r0, #5
 8009890:	e7fb      	b.n	800988a <osKernelStart+0x1e>
      stat = osError;
 8009892:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8009896:	e7f8      	b.n	800988a <osKernelStart+0x1e>
 8009898:	200044c4 	.word	0x200044c4
 800989c:	e000ed00 	.word	0xe000ed00

080098a0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80098a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80098a2:	b087      	sub	sp, #28
 80098a4:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80098a6:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80098a8:	460b      	mov	r3, r1
  hTask = NULL;
 80098aa:	9205      	str	r2, [sp, #20]
 80098ac:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80098b0:	b9d2      	cbnz	r2, 80098e8 <osThreadNew+0x48>
 80098b2:	b1c8      	cbz	r0, 80098e8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80098b4:	2c00      	cmp	r4, #0
 80098b6:	d02f      	beq.n	8009918 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80098b8:	69a5      	ldr	r5, [r4, #24]
 80098ba:	2d00      	cmp	r5, #0
 80098bc:	bf08      	it	eq
 80098be:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80098c0:	1e69      	subs	r1, r5, #1
 80098c2:	2937      	cmp	r1, #55	; 0x37
 80098c4:	46ac      	mov	ip, r5
 80098c6:	d82b      	bhi.n	8009920 <osThreadNew+0x80>
 80098c8:	6861      	ldr	r1, [r4, #4]
 80098ca:	07c9      	lsls	r1, r1, #31
 80098cc:	d428      	bmi.n	8009920 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80098ce:	6966      	ldr	r6, [r4, #20]
 80098d0:	b16e      	cbz	r6, 80098ee <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80098d2:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80098d4:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 80098d8:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80098da:	b157      	cbz	r7, 80098f2 <osThreadNew+0x52>
 80098dc:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80098e0:	d902      	bls.n	80098e8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80098e2:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80098e4:	b104      	cbz	r4, 80098e8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80098e6:	b9ee      	cbnz	r6, 8009924 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80098e8:	9805      	ldr	r0, [sp, #20]
}
 80098ea:	b007      	add	sp, #28
 80098ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80098ee:	2280      	movs	r2, #128	; 0x80
 80098f0:	e7f0      	b.n	80098d4 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80098f2:	f1be 0f00 	cmp.w	lr, #0
 80098f6:	d1f7      	bne.n	80098e8 <osThreadNew+0x48>
      if (mem == 0) {
 80098f8:	6924      	ldr	r4, [r4, #16]
 80098fa:	2c00      	cmp	r4, #0
 80098fc:	d1f4      	bne.n	80098e8 <osThreadNew+0x48>
 80098fe:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8009900:	a905      	add	r1, sp, #20
 8009902:	e9cd c100 	strd	ip, r1, [sp]
 8009906:	b292      	uxth	r2, r2
 8009908:	4621      	mov	r1, r4
 800990a:	f001 fb1a 	bl	800af42 <xTaskCreate>
 800990e:	2801      	cmp	r0, #1
            hTask = NULL;
 8009910:	bf1c      	itt	ne
 8009912:	2300      	movne	r3, #0
 8009914:	9305      	strne	r3, [sp, #20]
 8009916:	e7e7      	b.n	80098e8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8009918:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800991c:	2280      	movs	r2, #128	; 0x80
 800991e:	e7ef      	b.n	8009900 <osThreadNew+0x60>
        return (NULL);
 8009920:	4610      	mov	r0, r2
 8009922:	e7e2      	b.n	80098ea <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009924:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009928:	9500      	str	r5, [sp, #0]
 800992a:	f001 fad2 	bl	800aed2 <xTaskCreateStatic>
 800992e:	9005      	str	r0, [sp, #20]
 8009930:	e7da      	b.n	80098e8 <osThreadNew+0x48>

08009932 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8009932:	b510      	push	{r4, lr}
 8009934:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009938:	b924      	cbnz	r4, 8009944 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800993a:	b110      	cbz	r0, 8009942 <osDelay+0x10>
      vTaskDelay(ticks);
 800993c:	f001 fc8c 	bl	800b258 <vTaskDelay>
    stat = osOK;
 8009940:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8009942:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009944:	f06f 0005 	mvn.w	r0, #5
 8009948:	e7fb      	b.n	8009942 <osDelay+0x10>

0800994a <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800994a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800994c:	4604      	mov	r4, r0
 800994e:	460e      	mov	r6, r1
 8009950:	4615      	mov	r5, r2
 8009952:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009956:	b11a      	cbz	r2, 8009960 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8009958:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800995a:	4620      	mov	r0, r4
 800995c:	b003      	add	sp, #12
 800995e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009960:	2800      	cmp	r0, #0
 8009962:	d0f9      	beq.n	8009958 <osSemaphoreNew+0xe>
 8009964:	4288      	cmp	r0, r1
 8009966:	d3f7      	bcc.n	8009958 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8009968:	b1e5      	cbz	r5, 80099a4 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800996a:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800996e:	b1bb      	cbz	r3, 80099a0 <osSemaphoreNew+0x56>
 8009970:	2f4f      	cmp	r7, #79	; 0x4f
 8009972:	d9f1      	bls.n	8009958 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009974:	2801      	cmp	r0, #1
 8009976:	d12a      	bne.n	80099ce <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8009978:	2103      	movs	r1, #3
 800997a:	9100      	str	r1, [sp, #0]
 800997c:	4611      	mov	r1, r2
 800997e:	f000 fcf2 	bl	800a366 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8009982:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8009984:	2800      	cmp	r0, #0
 8009986:	d0e7      	beq.n	8009958 <osSemaphoreNew+0xe>
 8009988:	b1de      	cbz	r6, 80099c2 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800998a:	2300      	movs	r3, #0
 800998c:	461a      	mov	r2, r3
 800998e:	4619      	mov	r1, r3
 8009990:	f000 fd9e 	bl	800a4d0 <xQueueGenericSend>
 8009994:	2801      	cmp	r0, #1
 8009996:	d014      	beq.n	80099c2 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8009998:	4620      	mov	r0, r4
 800999a:	f001 f8fb 	bl	800ab94 <vQueueDelete>
 800999e:	e7db      	b.n	8009958 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80099a0:	2f00      	cmp	r7, #0
 80099a2:	d1d9      	bne.n	8009958 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80099a4:	2c01      	cmp	r4, #1
 80099a6:	d105      	bne.n	80099b4 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 80099a8:	2203      	movs	r2, #3
 80099aa:	2100      	movs	r1, #0
 80099ac:	4620      	mov	r0, r4
 80099ae:	f000 fd28 	bl	800a402 <xQueueGenericCreate>
 80099b2:	e7e6      	b.n	8009982 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80099b4:	4620      	mov	r0, r4
 80099b6:	4631      	mov	r1, r6
 80099b8:	f000 fd6c 	bl	800a494 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80099bc:	4604      	mov	r4, r0
 80099be:	2800      	cmp	r0, #0
 80099c0:	d0ca      	beq.n	8009958 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 80099c2:	b955      	cbnz	r5, 80099da <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 80099c4:	4629      	mov	r1, r5
 80099c6:	4620      	mov	r0, r4
 80099c8:	f001 f8be 	bl	800ab48 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80099cc:	e7c5      	b.n	800995a <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80099ce:	461a      	mov	r2, r3
 80099d0:	f000 fd3e 	bl	800a450 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80099d4:	4604      	mov	r4, r0
 80099d6:	2800      	cmp	r0, #0
 80099d8:	d0be      	beq.n	8009958 <osSemaphoreNew+0xe>
          name = attr->name;
 80099da:	682d      	ldr	r5, [r5, #0]
 80099dc:	e7f2      	b.n	80099c4 <osSemaphoreNew+0x7a>

080099de <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80099de:	b513      	push	{r0, r1, r4, lr}
 80099e0:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80099e2:	b308      	cbz	r0, 8009a28 <osSemaphoreAcquire+0x4a>
 80099e4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80099e8:	b1b3      	cbz	r3, 8009a18 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 80099ea:	b9e9      	cbnz	r1, 8009a28 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80099ec:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80099ee:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80099f0:	f001 f839 	bl	800aa66 <xQueueReceiveFromISR>
 80099f4:	2801      	cmp	r0, #1
 80099f6:	d114      	bne.n	8009a22 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80099f8:	9b01      	ldr	r3, [sp, #4]
 80099fa:	b913      	cbnz	r3, 8009a02 <osSemaphoreAcquire+0x24>
  stat = osOK;
 80099fc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80099fe:	b002      	add	sp, #8
 8009a00:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8009a02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a0e:	f3bf 8f4f 	dsb	sy
 8009a12:	f3bf 8f6f 	isb	sy
 8009a16:	e7f1      	b.n	80099fc <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8009a18:	f000 ff62 	bl	800a8e0 <xQueueSemaphoreTake>
 8009a1c:	2801      	cmp	r0, #1
 8009a1e:	d0ed      	beq.n	80099fc <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8009a20:	b92c      	cbnz	r4, 8009a2e <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8009a22:	f06f 0002 	mvn.w	r0, #2
 8009a26:	e7ea      	b.n	80099fe <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8009a28:	f06f 0003 	mvn.w	r0, #3
 8009a2c:	e7e7      	b.n	80099fe <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8009a2e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009a32:	e7e4      	b.n	80099fe <osSemaphoreAcquire+0x20>

08009a34 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8009a34:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009a36:	b310      	cbz	r0, 8009a7e <osSemaphoreRelease+0x4a>
 8009a38:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009a3c:	b1b3      	cbz	r3, 8009a6c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8009a3e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009a40:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8009a42:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009a44:	f000 fe59 	bl	800a6fa <xQueueGiveFromISR>
 8009a48:	2801      	cmp	r0, #1
 8009a4a:	d115      	bne.n	8009a78 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8009a4c:	9b01      	ldr	r3, [sp, #4]
 8009a4e:	b913      	cbnz	r3, 8009a56 <osSemaphoreRelease+0x22>
  stat = osOK;
 8009a50:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8009a52:	b002      	add	sp, #8
 8009a54:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8009a56:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a5a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a5e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a62:	f3bf 8f4f 	dsb	sy
 8009a66:	f3bf 8f6f 	isb	sy
 8009a6a:	e7f1      	b.n	8009a50 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009a6c:	461a      	mov	r2, r3
 8009a6e:	4619      	mov	r1, r3
 8009a70:	f000 fd2e 	bl	800a4d0 <xQueueGenericSend>
 8009a74:	2801      	cmp	r0, #1
 8009a76:	d0eb      	beq.n	8009a50 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8009a78:	f06f 0002 	mvn.w	r0, #2
 8009a7c:	e7e9      	b.n	8009a52 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8009a7e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009a82:	e7e6      	b.n	8009a52 <osSemaphoreRelease+0x1e>

08009a84 <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 8009a84:	b130      	cbz	r0, 8009a94 <osSemaphoreGetCount+0x10>
 8009a86:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 8009a8a:	b10b      	cbz	r3, 8009a90 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 8009a8c:	f001 b84f 	b.w	800ab2e <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 8009a90:	f001 b838 	b.w	800ab04 <uxQueueMessagesWaiting>
  }

  return (count);
}
 8009a94:	4770      	bx	lr

08009a96 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8009a96:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009a98:	4605      	mov	r5, r0
 8009a9a:	460e      	mov	r6, r1
 8009a9c:	4614      	mov	r4, r2
 8009a9e:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009aa2:	b11f      	cbz	r7, 8009aac <osMessageQueueNew+0x16>
  hQueue = NULL;
 8009aa4:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8009aa6:	4628      	mov	r0, r5
 8009aa8:	b003      	add	sp, #12
 8009aaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009aac:	2800      	cmp	r0, #0
 8009aae:	d0f9      	beq.n	8009aa4 <osMessageQueueNew+0xe>
 8009ab0:	2900      	cmp	r1, #0
 8009ab2:	d0f7      	beq.n	8009aa4 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8009ab4:	b1da      	cbz	r2, 8009aee <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009ab6:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8009aba:	b183      	cbz	r3, 8009ade <osMessageQueueNew+0x48>
 8009abc:	2a4f      	cmp	r2, #79	; 0x4f
 8009abe:	d9f1      	bls.n	8009aa4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009ac0:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009ac2:	2a00      	cmp	r2, #0
 8009ac4:	d0ee      	beq.n	8009aa4 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009ac6:	6966      	ldr	r6, [r4, #20]
 8009ac8:	434d      	muls	r5, r1
 8009aca:	42ae      	cmp	r6, r5
 8009acc:	d3ea      	bcc.n	8009aa4 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8009ace:	9700      	str	r7, [sp, #0]
 8009ad0:	f000 fc49 	bl	800a366 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8009ad4:	4605      	mov	r5, r0
 8009ad6:	2800      	cmp	r0, #0
 8009ad8:	d0e4      	beq.n	8009aa4 <osMessageQueueNew+0xe>
        name = attr->name;
 8009ada:	6824      	ldr	r4, [r4, #0]
 8009adc:	e011      	b.n	8009b02 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8009ade:	2a00      	cmp	r2, #0
 8009ae0:	d1e0      	bne.n	8009aa4 <osMessageQueueNew+0xe>
 8009ae2:	6923      	ldr	r3, [r4, #16]
 8009ae4:	2b00      	cmp	r3, #0
 8009ae6:	d1dd      	bne.n	8009aa4 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8009ae8:	6963      	ldr	r3, [r4, #20]
 8009aea:	2b00      	cmp	r3, #0
 8009aec:	d1da      	bne.n	8009aa4 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8009aee:	4628      	mov	r0, r5
 8009af0:	2200      	movs	r2, #0
 8009af2:	4631      	mov	r1, r6
 8009af4:	f000 fc85 	bl	800a402 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8009af8:	4605      	mov	r5, r0
 8009afa:	2800      	cmp	r0, #0
 8009afc:	d0d2      	beq.n	8009aa4 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8009afe:	2c00      	cmp	r4, #0
 8009b00:	d1eb      	bne.n	8009ada <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8009b02:	4621      	mov	r1, r4
 8009b04:	4628      	mov	r0, r5
 8009b06:	f001 f81f 	bl	800ab48 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8009b0a:	e7cc      	b.n	8009aa6 <osMessageQueueNew+0x10>

08009b0c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8009b0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009b0e:	461c      	mov	r4, r3
 8009b10:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009b14:	b1c6      	cbz	r6, 8009b48 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009b16:	b318      	cbz	r0, 8009b60 <osMessageQueuePut+0x54>
 8009b18:	b311      	cbz	r1, 8009b60 <osMessageQueuePut+0x54>
 8009b1a:	bb0b      	cbnz	r3, 8009b60 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009b1c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009b1e:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009b20:	f000 fd89 	bl	800a636 <xQueueGenericSendFromISR>
 8009b24:	2801      	cmp	r0, #1
 8009b26:	d118      	bne.n	8009b5a <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009b28:	9b01      	ldr	r3, [sp, #4]
 8009b2a:	b913      	cbnz	r3, 8009b32 <osMessageQueuePut+0x26>
  stat = osOK;
 8009b2c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009b2e:	b002      	add	sp, #8
 8009b30:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8009b32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009b36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009b3e:	f3bf 8f4f 	dsb	sy
 8009b42:	f3bf 8f6f 	isb	sy
 8009b46:	e7f1      	b.n	8009b2c <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009b48:	b150      	cbz	r0, 8009b60 <osMessageQueuePut+0x54>
 8009b4a:	b149      	cbz	r1, 8009b60 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009b4c:	4633      	mov	r3, r6
 8009b4e:	4622      	mov	r2, r4
 8009b50:	f000 fcbe 	bl	800a4d0 <xQueueGenericSend>
 8009b54:	2801      	cmp	r0, #1
 8009b56:	d0e9      	beq.n	8009b2c <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8009b58:	b92c      	cbnz	r4, 8009b66 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8009b5a:	f06f 0002 	mvn.w	r0, #2
 8009b5e:	e7e6      	b.n	8009b2e <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8009b60:	f06f 0003 	mvn.w	r0, #3
 8009b64:	e7e3      	b.n	8009b2e <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8009b66:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009b6a:	e7e0      	b.n	8009b2e <osMessageQueuePut+0x22>

08009b6c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8009b6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009b6e:	461c      	mov	r4, r3
 8009b70:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009b74:	b1c3      	cbz	r3, 8009ba8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009b76:	b310      	cbz	r0, 8009bbe <osMessageQueueGet+0x52>
 8009b78:	b309      	cbz	r1, 8009bbe <osMessageQueueGet+0x52>
 8009b7a:	bb04      	cbnz	r4, 8009bbe <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009b7c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009b7e:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009b80:	f000 ff71 	bl	800aa66 <xQueueReceiveFromISR>
 8009b84:	2801      	cmp	r0, #1
 8009b86:	d117      	bne.n	8009bb8 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009b88:	9b01      	ldr	r3, [sp, #4]
 8009b8a:	b913      	cbnz	r3, 8009b92 <osMessageQueueGet+0x26>
  stat = osOK;
 8009b8c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009b8e:	b003      	add	sp, #12
 8009b90:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8009b92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009b96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009b9e:	f3bf 8f4f 	dsb	sy
 8009ba2:	f3bf 8f6f 	isb	sy
 8009ba6:	e7f1      	b.n	8009b8c <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009ba8:	b148      	cbz	r0, 8009bbe <osMessageQueueGet+0x52>
 8009baa:	b141      	cbz	r1, 8009bbe <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009bac:	4622      	mov	r2, r4
 8009bae:	f000 fdf8 	bl	800a7a2 <xQueueReceive>
 8009bb2:	2801      	cmp	r0, #1
 8009bb4:	d0ea      	beq.n	8009b8c <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8009bb6:	b92c      	cbnz	r4, 8009bc4 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8009bb8:	f06f 0002 	mvn.w	r0, #2
 8009bbc:	e7e7      	b.n	8009b8e <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8009bbe:	f06f 0003 	mvn.w	r0, #3
 8009bc2:	e7e4      	b.n	8009b8e <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8009bc4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009bc8:	e7e1      	b.n	8009b8e <osMessageQueueGet+0x22>

08009bca <osMessageQueueGetCount>:
 8009bca:	f7ff bf5b 	b.w	8009a84 <osSemaphoreGetCount>
	...

08009bd0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009bd0:	4b03      	ldr	r3, [pc, #12]	; (8009be0 <vApplicationGetIdleTaskMemory+0x10>)
 8009bd2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009bd4:	4b03      	ldr	r3, [pc, #12]	; (8009be4 <vApplicationGetIdleTaskMemory+0x14>)
 8009bd6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009bd8:	2380      	movs	r3, #128	; 0x80
 8009bda:	6013      	str	r3, [r2, #0]
}
 8009bdc:	4770      	bx	lr
 8009bde:	bf00      	nop
 8009be0:	20004464 	.word	0x20004464
 8009be4:	20004264 	.word	0x20004264

08009be8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009be8:	4b03      	ldr	r3, [pc, #12]	; (8009bf8 <vApplicationGetTimerTaskMemory+0x10>)
 8009bea:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009bec:	4b03      	ldr	r3, [pc, #12]	; (8009bfc <vApplicationGetTimerTaskMemory+0x14>)
 8009bee:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009bf0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009bf4:	6013      	str	r3, [r2, #0]
}
 8009bf6:	4770      	bx	lr
 8009bf8:	200048c8 	.word	0x200048c8
 8009bfc:	200044c8 	.word	0x200044c8

08009c00 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8009c00:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8009c02:	4b0f      	ldr	r3, [pc, #60]	; (8009c40 <prvInsertBlockIntoFreeList+0x40>)
 8009c04:	461a      	mov	r2, r3
 8009c06:	681b      	ldr	r3, [r3, #0]
 8009c08:	4283      	cmp	r3, r0
 8009c0a:	d3fb      	bcc.n	8009c04 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8009c0c:	6854      	ldr	r4, [r2, #4]
 8009c0e:	1911      	adds	r1, r2, r4
 8009c10:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8009c12:	bf01      	itttt	eq
 8009c14:	6841      	ldreq	r1, [r0, #4]
 8009c16:	4610      	moveq	r0, r2
 8009c18:	1909      	addeq	r1, r1, r4
 8009c1a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8009c1c:	6844      	ldr	r4, [r0, #4]
 8009c1e:	1901      	adds	r1, r0, r4
 8009c20:	428b      	cmp	r3, r1
 8009c22:	d107      	bne.n	8009c34 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8009c24:	4907      	ldr	r1, [pc, #28]	; (8009c44 <prvInsertBlockIntoFreeList+0x44>)
 8009c26:	6809      	ldr	r1, [r1, #0]
 8009c28:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009c2a:	bf1f      	itttt	ne
 8009c2c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8009c2e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009c30:	1909      	addne	r1, r1, r4
 8009c32:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8009c34:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8009c36:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8009c38:	bf18      	it	ne
 8009c3a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8009c3c:	bd10      	pop	{r4, pc}
 8009c3e:	bf00      	nop
 8009c40:	20014940 	.word	0x20014940
 8009c44:	20004928 	.word	0x20004928

08009c48 <pvPortMalloc>:
{
 8009c48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c4c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8009c4e:	f001 f9eb 	bl	800b028 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8009c52:	4842      	ldr	r0, [pc, #264]	; (8009d5c <pvPortMalloc+0x114>)
 8009c54:	4d42      	ldr	r5, [pc, #264]	; (8009d60 <pvPortMalloc+0x118>)
 8009c56:	6803      	ldr	r3, [r0, #0]
 8009c58:	bb0b      	cbnz	r3, 8009c9e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8009c5a:	4942      	ldr	r1, [pc, #264]	; (8009d64 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8009c5c:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8009c5e:	bf1f      	itttt	ne
 8009c60:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009c62:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009c66:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 8009c6a:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009c6c:	bf14      	ite	ne
 8009c6e:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8009c70:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8009c74:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009c76:	4e3c      	ldr	r6, [pc, #240]	; (8009d68 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8009c78:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009c7a:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8009c7e:	2300      	movs	r3, #0
 8009c80:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009c82:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8009c84:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8009c88:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8009c8a:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8009c8e:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009c90:	4a36      	ldr	r2, [pc, #216]	; (8009d6c <pvPortMalloc+0x124>)
 8009c92:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009c94:	4a36      	ldr	r2, [pc, #216]	; (8009d70 <pvPortMalloc+0x128>)
 8009c96:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8009c98:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009c9c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8009c9e:	682f      	ldr	r7, [r5, #0]
 8009ca0:	4227      	tst	r7, r4
 8009ca2:	d155      	bne.n	8009d50 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8009ca4:	2c00      	cmp	r4, #0
 8009ca6:	d046      	beq.n	8009d36 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8009ca8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8009cac:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8009cae:	bf1c      	itt	ne
 8009cb0:	f023 0307 	bicne.w	r3, r3, #7
 8009cb4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8009cb6:	2b00      	cmp	r3, #0
 8009cb8:	d04a      	beq.n	8009d50 <pvPortMalloc+0x108>
 8009cba:	4c2d      	ldr	r4, [pc, #180]	; (8009d70 <pvPortMalloc+0x128>)
 8009cbc:	6826      	ldr	r6, [r4, #0]
 8009cbe:	429e      	cmp	r6, r3
 8009cc0:	d346      	bcc.n	8009d50 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8009cc2:	4a29      	ldr	r2, [pc, #164]	; (8009d68 <pvPortMalloc+0x120>)
 8009cc4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8009cc6:	6869      	ldr	r1, [r5, #4]
 8009cc8:	4299      	cmp	r1, r3
 8009cca:	d204      	bcs.n	8009cd6 <pvPortMalloc+0x8e>
 8009ccc:	f8d5 c000 	ldr.w	ip, [r5]
 8009cd0:	f1bc 0f00 	cmp.w	ip, #0
 8009cd4:	d115      	bne.n	8009d02 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8009cd6:	6800      	ldr	r0, [r0, #0]
 8009cd8:	42a8      	cmp	r0, r5
 8009cda:	d039      	beq.n	8009d50 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009cdc:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009cde:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009ce0:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009ce4:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009ce6:	2910      	cmp	r1, #16
 8009ce8:	d912      	bls.n	8009d10 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8009cea:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009cec:	0742      	lsls	r2, r0, #29
 8009cee:	d00b      	beq.n	8009d08 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009cf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cf4:	f383 8811 	msr	BASEPRI, r3
 8009cf8:	f3bf 8f6f 	isb	sy
 8009cfc:	f3bf 8f4f 	dsb	sy
 8009d00:	e7fe      	b.n	8009d00 <pvPortMalloc+0xb8>
 8009d02:	462a      	mov	r2, r5
 8009d04:	4665      	mov	r5, ip
 8009d06:	e7de      	b.n	8009cc6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8009d08:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8009d0a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8009d0c:	f7ff ff78 	bl	8009c00 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009d10:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009d12:	4916      	ldr	r1, [pc, #88]	; (8009d6c <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 8009d14:	4a17      	ldr	r2, [pc, #92]	; (8009d74 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009d16:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009d18:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009d1a:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8009d1c:	2300      	movs	r3, #0
 8009d1e:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8009d20:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009d22:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009d24:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8009d26:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8009d2a:	bf38      	it	cc
 8009d2c:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009d2e:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009d32:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8009d34:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8009d36:	f001 fa1b 	bl	800b170 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8009d3a:	0763      	lsls	r3, r4, #29
 8009d3c:	d00a      	beq.n	8009d54 <pvPortMalloc+0x10c>
 8009d3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d42:	f383 8811 	msr	BASEPRI, r3
 8009d46:	f3bf 8f6f 	isb	sy
 8009d4a:	f3bf 8f4f 	dsb	sy
 8009d4e:	e7fe      	b.n	8009d4e <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8009d50:	2400      	movs	r4, #0
 8009d52:	e7f0      	b.n	8009d36 <pvPortMalloc+0xee>
}
 8009d54:	4620      	mov	r0, r4
 8009d56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d5a:	bf00      	nop
 8009d5c:	20004928 	.word	0x20004928
 8009d60:	2001492c 	.word	0x2001492c
 8009d64:	2000492c 	.word	0x2000492c
 8009d68:	20014940 	.word	0x20014940
 8009d6c:	20014934 	.word	0x20014934
 8009d70:	20014930 	.word	0x20014930
 8009d74:	20014938 	.word	0x20014938

08009d78 <vPortFree>:
{
 8009d78:	b510      	push	{r4, lr}
	if( pv != NULL )
 8009d7a:	4604      	mov	r4, r0
 8009d7c:	b390      	cbz	r0, 8009de4 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8009d7e:	4a1a      	ldr	r2, [pc, #104]	; (8009de8 <vPortFree+0x70>)
 8009d80:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8009d84:	6812      	ldr	r2, [r2, #0]
 8009d86:	4213      	tst	r3, r2
 8009d88:	d108      	bne.n	8009d9c <vPortFree+0x24>
 8009d8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d8e:	f383 8811 	msr	BASEPRI, r3
 8009d92:	f3bf 8f6f 	isb	sy
 8009d96:	f3bf 8f4f 	dsb	sy
 8009d9a:	e7fe      	b.n	8009d9a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8009d9c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8009da0:	b141      	cbz	r1, 8009db4 <vPortFree+0x3c>
 8009da2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009da6:	f383 8811 	msr	BASEPRI, r3
 8009daa:	f3bf 8f6f 	isb	sy
 8009dae:	f3bf 8f4f 	dsb	sy
 8009db2:	e7fe      	b.n	8009db2 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8009db4:	ea23 0302 	bic.w	r3, r3, r2
 8009db8:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8009dbc:	f001 f934 	bl	800b028 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009dc0:	4a0a      	ldr	r2, [pc, #40]	; (8009dec <vPortFree+0x74>)
 8009dc2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009dc6:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009dc8:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009dcc:	440b      	add	r3, r1
 8009dce:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009dd0:	f7ff ff16 	bl	8009c00 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8009dd4:	4a06      	ldr	r2, [pc, #24]	; (8009df0 <vPortFree+0x78>)
 8009dd6:	6813      	ldr	r3, [r2, #0]
}
 8009dd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8009ddc:	3301      	adds	r3, #1
 8009dde:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8009de0:	f001 b9c6 	b.w	800b170 <xTaskResumeAll>
}
 8009de4:	bd10      	pop	{r4, pc}
 8009de6:	bf00      	nop
 8009de8:	2001492c 	.word	0x2001492c
 8009dec:	20014930 	.word	0x20014930
 8009df0:	2001493c 	.word	0x2001493c

08009df4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009df4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8009df8:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009dfc:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009e00:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009e02:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8009e04:	2300      	movs	r3, #0
 8009e06:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8009e08:	4770      	bx	lr

08009e0a <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8009e0a:	2300      	movs	r3, #0
 8009e0c:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8009e0e:	4770      	bx	lr

08009e10 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8009e10:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8009e12:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009e14:	689a      	ldr	r2, [r3, #8]
 8009e16:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8009e18:	689a      	ldr	r2, [r3, #8]
 8009e1a:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8009e1c:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009e1e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009e20:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009e22:	3301      	adds	r3, #1
 8009e24:	6003      	str	r3, [r0, #0]
}
 8009e26:	4770      	bx	lr

08009e28 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8009e28:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8009e2a:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8009e2c:	1c63      	adds	r3, r4, #1
 8009e2e:	d10a      	bne.n	8009e46 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8009e30:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8009e32:	685a      	ldr	r2, [r3, #4]
 8009e34:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8009e36:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8009e38:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8009e3a:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009e3c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009e3e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009e40:	3301      	adds	r3, #1
 8009e42:	6003      	str	r3, [r0, #0]
}
 8009e44:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8009e46:	f100 0208 	add.w	r2, r0, #8
 8009e4a:	4613      	mov	r3, r2
 8009e4c:	6852      	ldr	r2, [r2, #4]
 8009e4e:	6815      	ldr	r5, [r2, #0]
 8009e50:	42a5      	cmp	r5, r4
 8009e52:	d9fa      	bls.n	8009e4a <vListInsert+0x22>
 8009e54:	e7ed      	b.n	8009e32 <vListInsert+0xa>

08009e56 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009e56:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8009e5a:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009e5c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8009e5e:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8009e60:	6859      	ldr	r1, [r3, #4]
 8009e62:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009e64:	bf08      	it	eq
 8009e66:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8009e68:	2200      	movs	r2, #0
 8009e6a:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8009e6c:	681a      	ldr	r2, [r3, #0]
 8009e6e:	3a01      	subs	r2, #1
 8009e70:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8009e72:	6818      	ldr	r0, [r3, #0]
}
 8009e74:	4770      	bx	lr
	...

08009e78 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8009e78:	4808      	ldr	r0, [pc, #32]	; (8009e9c <prvPortStartFirstTask+0x24>)
 8009e7a:	6800      	ldr	r0, [r0, #0]
 8009e7c:	6800      	ldr	r0, [r0, #0]
 8009e7e:	f380 8808 	msr	MSP, r0
 8009e82:	f04f 0000 	mov.w	r0, #0
 8009e86:	f380 8814 	msr	CONTROL, r0
 8009e8a:	b662      	cpsie	i
 8009e8c:	b661      	cpsie	f
 8009e8e:	f3bf 8f4f 	dsb	sy
 8009e92:	f3bf 8f6f 	isb	sy
 8009e96:	df00      	svc	0
 8009e98:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8009e9a:	0000      	.short	0x0000
 8009e9c:	e000ed08 	.word	0xe000ed08

08009ea0 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8009ea0:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8009eb0 <vPortEnableVFP+0x10>
 8009ea4:	6801      	ldr	r1, [r0, #0]
 8009ea6:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8009eaa:	6001      	str	r1, [r0, #0]
 8009eac:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8009eae:	0000      	.short	0x0000
 8009eb0:	e000ed88 	.word	0xe000ed88

08009eb4 <prvTaskExitError>:
{
 8009eb4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8009eb6:	2300      	movs	r3, #0
 8009eb8:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8009eba:	4b0d      	ldr	r3, [pc, #52]	; (8009ef0 <prvTaskExitError+0x3c>)
 8009ebc:	681b      	ldr	r3, [r3, #0]
 8009ebe:	3301      	adds	r3, #1
 8009ec0:	d008      	beq.n	8009ed4 <prvTaskExitError+0x20>
 8009ec2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ec6:	f383 8811 	msr	BASEPRI, r3
 8009eca:	f3bf 8f6f 	isb	sy
 8009ece:	f3bf 8f4f 	dsb	sy
 8009ed2:	e7fe      	b.n	8009ed2 <prvTaskExitError+0x1e>
 8009ed4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ed8:	f383 8811 	msr	BASEPRI, r3
 8009edc:	f3bf 8f6f 	isb	sy
 8009ee0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8009ee4:	9b01      	ldr	r3, [sp, #4]
 8009ee6:	2b00      	cmp	r3, #0
 8009ee8:	d0fc      	beq.n	8009ee4 <prvTaskExitError+0x30>
}
 8009eea:	b002      	add	sp, #8
 8009eec:	4770      	bx	lr
 8009eee:	bf00      	nop
 8009ef0:	20000080 	.word	0x20000080

08009ef4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009ef4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8009ef8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8009efc:	4b07      	ldr	r3, [pc, #28]	; (8009f1c <pxPortInitialiseStack+0x28>)
 8009efe:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009f02:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009f06:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009f0a:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8009f0e:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009f12:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8009f16:	3844      	subs	r0, #68	; 0x44
 8009f18:	4770      	bx	lr
 8009f1a:	bf00      	nop
 8009f1c:	08009eb5 	.word	0x08009eb5

08009f20 <SVC_Handler>:
	__asm volatile (
 8009f20:	4b07      	ldr	r3, [pc, #28]	; (8009f40 <pxCurrentTCBConst2>)
 8009f22:	6819      	ldr	r1, [r3, #0]
 8009f24:	6808      	ldr	r0, [r1, #0]
 8009f26:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f2a:	f380 8809 	msr	PSP, r0
 8009f2e:	f3bf 8f6f 	isb	sy
 8009f32:	f04f 0000 	mov.w	r0, #0
 8009f36:	f380 8811 	msr	BASEPRI, r0
 8009f3a:	4770      	bx	lr
 8009f3c:	f3af 8000 	nop.w

08009f40 <pxCurrentTCBConst2>:
 8009f40:	20014990 	.word	0x20014990

08009f44 <vPortEnterCritical>:
 8009f44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f48:	f383 8811 	msr	BASEPRI, r3
 8009f4c:	f3bf 8f6f 	isb	sy
 8009f50:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8009f54:	4a0a      	ldr	r2, [pc, #40]	; (8009f80 <vPortEnterCritical+0x3c>)
 8009f56:	6813      	ldr	r3, [r2, #0]
 8009f58:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8009f5a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8009f5c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8009f5e:	d10e      	bne.n	8009f7e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009f60:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f64:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8009f68:	b2db      	uxtb	r3, r3
 8009f6a:	b143      	cbz	r3, 8009f7e <vPortEnterCritical+0x3a>
 8009f6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f70:	f383 8811 	msr	BASEPRI, r3
 8009f74:	f3bf 8f6f 	isb	sy
 8009f78:	f3bf 8f4f 	dsb	sy
 8009f7c:	e7fe      	b.n	8009f7c <vPortEnterCritical+0x38>
}
 8009f7e:	4770      	bx	lr
 8009f80:	20000080 	.word	0x20000080

08009f84 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8009f84:	4a08      	ldr	r2, [pc, #32]	; (8009fa8 <vPortExitCritical+0x24>)
 8009f86:	6813      	ldr	r3, [r2, #0]
 8009f88:	b943      	cbnz	r3, 8009f9c <vPortExitCritical+0x18>
 8009f8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f8e:	f383 8811 	msr	BASEPRI, r3
 8009f92:	f3bf 8f6f 	isb	sy
 8009f96:	f3bf 8f4f 	dsb	sy
 8009f9a:	e7fe      	b.n	8009f9a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8009f9c:	3b01      	subs	r3, #1
 8009f9e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8009fa0:	b90b      	cbnz	r3, 8009fa6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8009fa2:	f383 8811 	msr	BASEPRI, r3
}
 8009fa6:	4770      	bx	lr
 8009fa8:	20000080 	.word	0x20000080
 8009fac:	00000000 	.word	0x00000000

08009fb0 <PendSV_Handler>:
	__asm volatile
 8009fb0:	f3ef 8009 	mrs	r0, PSP
 8009fb4:	f3bf 8f6f 	isb	sy
 8009fb8:	4b15      	ldr	r3, [pc, #84]	; (800a010 <pxCurrentTCBConst>)
 8009fba:	681a      	ldr	r2, [r3, #0]
 8009fbc:	f01e 0f10 	tst.w	lr, #16
 8009fc0:	bf08      	it	eq
 8009fc2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8009fc6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009fca:	6010      	str	r0, [r2, #0]
 8009fcc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009fd0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8009fd4:	f380 8811 	msr	BASEPRI, r0
 8009fd8:	f3bf 8f4f 	dsb	sy
 8009fdc:	f3bf 8f6f 	isb	sy
 8009fe0:	f001 f95e 	bl	800b2a0 <vTaskSwitchContext>
 8009fe4:	f04f 0000 	mov.w	r0, #0
 8009fe8:	f380 8811 	msr	BASEPRI, r0
 8009fec:	bc09      	pop	{r0, r3}
 8009fee:	6819      	ldr	r1, [r3, #0]
 8009ff0:	6808      	ldr	r0, [r1, #0]
 8009ff2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ff6:	f01e 0f10 	tst.w	lr, #16
 8009ffa:	bf08      	it	eq
 8009ffc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800a000:	f380 8809 	msr	PSP, r0
 800a004:	f3bf 8f6f 	isb	sy
 800a008:	4770      	bx	lr
 800a00a:	bf00      	nop
 800a00c:	f3af 8000 	nop.w

0800a010 <pxCurrentTCBConst>:
 800a010:	20014990 	.word	0x20014990

0800a014 <xPortSysTickHandler>:
{
 800a014:	b508      	push	{r3, lr}
	__asm volatile
 800a016:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a01a:	f383 8811 	msr	BASEPRI, r3
 800a01e:	f3bf 8f6f 	isb	sy
 800a022:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800a026:	f001 f80d 	bl	800b044 <xTaskIncrementTick>
 800a02a:	b128      	cbz	r0, 800a038 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800a02c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a030:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a034:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800a038:	2300      	movs	r3, #0
 800a03a:	f383 8811 	msr	BASEPRI, r3
}
 800a03e:	bd08      	pop	{r3, pc}

0800a040 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800a040:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800a044:	2300      	movs	r3, #0
 800a046:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800a048:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800a04a:	4b05      	ldr	r3, [pc, #20]	; (800a060 <vPortSetupTimerInterrupt+0x20>)
 800a04c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800a050:	681b      	ldr	r3, [r3, #0]
 800a052:	fbb3 f3f1 	udiv	r3, r3, r1
 800a056:	3b01      	subs	r3, #1
 800a058:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800a05a:	2307      	movs	r3, #7
 800a05c:	6113      	str	r3, [r2, #16]
}
 800a05e:	4770      	bx	lr
 800a060:	20000074 	.word	0x20000074

0800a064 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a064:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800a068:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800a06a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800a06e:	4a3a      	ldr	r2, [pc, #232]	; (800a158 <xPortStartScheduler+0xf4>)
 800a070:	4291      	cmp	r1, r2
 800a072:	d108      	bne.n	800a086 <xPortStartScheduler+0x22>
	__asm volatile
 800a074:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a078:	f383 8811 	msr	BASEPRI, r3
 800a07c:	f3bf 8f6f 	isb	sy
 800a080:	f3bf 8f4f 	dsb	sy
 800a084:	e7fe      	b.n	800a084 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800a086:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800a08a:	4b34      	ldr	r3, [pc, #208]	; (800a15c <xPortStartScheduler+0xf8>)
 800a08c:	429a      	cmp	r2, r3
 800a08e:	d108      	bne.n	800a0a2 <xPortStartScheduler+0x3e>
 800a090:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a094:	f383 8811 	msr	BASEPRI, r3
 800a098:	f3bf 8f6f 	isb	sy
 800a09c:	f3bf 8f4f 	dsb	sy
 800a0a0:	e7fe      	b.n	800a0a0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800a0a2:	4b2f      	ldr	r3, [pc, #188]	; (800a160 <xPortStartScheduler+0xfc>)
 800a0a4:	781a      	ldrb	r2, [r3, #0]
 800a0a6:	b2d2      	uxtb	r2, r2
 800a0a8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800a0aa:	22ff      	movs	r2, #255	; 0xff
 800a0ac:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a0ae:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a0b0:	4a2c      	ldr	r2, [pc, #176]	; (800a164 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800a0b2:	b2db      	uxtb	r3, r3
 800a0b4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800a0b8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a0bc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800a0c0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800a0c2:	4a29      	ldr	r2, [pc, #164]	; (800a168 <xPortStartScheduler+0x104>)
 800a0c4:	2307      	movs	r3, #7
 800a0c6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800a0c8:	2100      	movs	r1, #0
 800a0ca:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800a0ce:	0600      	lsls	r0, r0, #24
 800a0d0:	f103 34ff 	add.w	r4, r3, #4294967295
 800a0d4:	d40c      	bmi.n	800a0f0 <xPortStartScheduler+0x8c>
 800a0d6:	b111      	cbz	r1, 800a0de <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800a0d8:	2b03      	cmp	r3, #3
 800a0da:	6013      	str	r3, [r2, #0]
 800a0dc:	d011      	beq.n	800a102 <xPortStartScheduler+0x9e>
 800a0de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0e2:	f383 8811 	msr	BASEPRI, r3
 800a0e6:	f3bf 8f6f 	isb	sy
 800a0ea:	f3bf 8f4f 	dsb	sy
 800a0ee:	e7fe      	b.n	800a0ee <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800a0f0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a0f4:	005b      	lsls	r3, r3, #1
 800a0f6:	b2db      	uxtb	r3, r3
 800a0f8:	f88d 3003 	strb.w	r3, [sp, #3]
 800a0fc:	2101      	movs	r1, #1
 800a0fe:	4623      	mov	r3, r4
 800a100:	e7e3      	b.n	800a0ca <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800a102:	f44f 7340 	mov.w	r3, #768	; 0x300
 800a106:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a108:	9b01      	ldr	r3, [sp, #4]
 800a10a:	4a15      	ldr	r2, [pc, #84]	; (800a160 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a10c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a110:	b2db      	uxtb	r3, r3
 800a112:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a114:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800a118:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800a11c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800a120:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800a124:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800a128:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800a12c:	f7ff ff88 	bl	800a040 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800a130:	4b0e      	ldr	r3, [pc, #56]	; (800a16c <xPortStartScheduler+0x108>)
 800a132:	2500      	movs	r5, #0
 800a134:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800a136:	f7ff feb3 	bl	8009ea0 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800a13a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800a13e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800a142:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800a146:	f7ff fe97 	bl	8009e78 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800a14a:	f001 f8a9 	bl	800b2a0 <vTaskSwitchContext>
	prvTaskExitError();
 800a14e:	f7ff feb1 	bl	8009eb4 <prvTaskExitError>
}
 800a152:	4628      	mov	r0, r5
 800a154:	b003      	add	sp, #12
 800a156:	bd30      	pop	{r4, r5, pc}
 800a158:	410fc271 	.word	0x410fc271
 800a15c:	410fc270 	.word	0x410fc270
 800a160:	e000e400 	.word	0xe000e400
 800a164:	20014948 	.word	0x20014948
 800a168:	2001494c 	.word	0x2001494c
 800a16c:	20000080 	.word	0x20000080

0800a170 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800a170:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800a174:	2b0f      	cmp	r3, #15
 800a176:	d90e      	bls.n	800a196 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800a178:	4a11      	ldr	r2, [pc, #68]	; (800a1c0 <vPortValidateInterruptPriority+0x50>)
 800a17a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800a17c:	4a11      	ldr	r2, [pc, #68]	; (800a1c4 <vPortValidateInterruptPriority+0x54>)
 800a17e:	7812      	ldrb	r2, [r2, #0]
 800a180:	429a      	cmp	r2, r3
 800a182:	d908      	bls.n	800a196 <vPortValidateInterruptPriority+0x26>
 800a184:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a188:	f383 8811 	msr	BASEPRI, r3
 800a18c:	f3bf 8f6f 	isb	sy
 800a190:	f3bf 8f4f 	dsb	sy
 800a194:	e7fe      	b.n	800a194 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800a196:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a19a:	4a0b      	ldr	r2, [pc, #44]	; (800a1c8 <vPortValidateInterruptPriority+0x58>)
 800a19c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800a1a0:	6812      	ldr	r2, [r2, #0]
 800a1a2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800a1a6:	4293      	cmp	r3, r2
 800a1a8:	d908      	bls.n	800a1bc <vPortValidateInterruptPriority+0x4c>
 800a1aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1ae:	f383 8811 	msr	BASEPRI, r3
 800a1b2:	f3bf 8f6f 	isb	sy
 800a1b6:	f3bf 8f4f 	dsb	sy
 800a1ba:	e7fe      	b.n	800a1ba <vPortValidateInterruptPriority+0x4a>
	}
 800a1bc:	4770      	bx	lr
 800a1be:	bf00      	nop
 800a1c0:	e000e3f0 	.word	0xe000e3f0
 800a1c4:	20014948 	.word	0x20014948
 800a1c8:	2001494c 	.word	0x2001494c

0800a1cc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800a1cc:	b510      	push	{r4, lr}
 800a1ce:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a1d0:	f7ff feb8 	bl	8009f44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800a1d4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a1d6:	f7ff fed5 	bl	8009f84 <vPortExitCritical>

	return xReturn;
}
 800a1da:	fab4 f084 	clz	r0, r4
 800a1de:	0940      	lsrs	r0, r0, #5
 800a1e0:	bd10      	pop	{r4, pc}

0800a1e2 <prvCopyDataToQueue>:
{
 800a1e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a1e4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a1e6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a1e8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800a1ea:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a1ec:	b952      	cbnz	r2, 800a204 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a1ee:	6807      	ldr	r7, [r0, #0]
 800a1f0:	bb47      	cbnz	r7, 800a244 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a1f2:	6880      	ldr	r0, [r0, #8]
 800a1f4:	f001 f9aa 	bl	800b54c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800a1f8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a1fa:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a1fc:	3601      	adds	r6, #1
 800a1fe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800a200:	4628      	mov	r0, r5
 800a202:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800a204:	b965      	cbnz	r5, 800a220 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a206:	6840      	ldr	r0, [r0, #4]
 800a208:	f016 fa4c 	bl	80206a4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a20c:	6863      	ldr	r3, [r4, #4]
 800a20e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a210:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a212:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a214:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a216:	4293      	cmp	r3, r2
 800a218:	d3f0      	bcc.n	800a1fc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800a21a:	6823      	ldr	r3, [r4, #0]
 800a21c:	6063      	str	r3, [r4, #4]
 800a21e:	e7ed      	b.n	800a1fc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800a220:	68c0      	ldr	r0, [r0, #12]
 800a222:	f016 fa3f 	bl	80206a4 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a226:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a228:	68e3      	ldr	r3, [r4, #12]
 800a22a:	4251      	negs	r1, r2
 800a22c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a22e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a230:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a232:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800a234:	bf3e      	ittt	cc
 800a236:	68a3      	ldrcc	r3, [r4, #8]
 800a238:	185b      	addcc	r3, r3, r1
 800a23a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800a23c:	2d02      	cmp	r5, #2
 800a23e:	d101      	bne.n	800a244 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a240:	b116      	cbz	r6, 800a248 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800a242:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800a244:	2500      	movs	r5, #0
 800a246:	e7d9      	b.n	800a1fc <prvCopyDataToQueue+0x1a>
 800a248:	4635      	mov	r5, r6
 800a24a:	e7d7      	b.n	800a1fc <prvCopyDataToQueue+0x1a>

0800a24c <prvCopyDataFromQueue>:
{
 800a24c:	4603      	mov	r3, r0
 800a24e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a250:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800a252:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a254:	b16a      	cbz	r2, 800a272 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a256:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a258:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a25a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a25c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a25e:	bf28      	it	cs
 800a260:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a262:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a264:	bf28      	it	cs
 800a266:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a268:	68d9      	ldr	r1, [r3, #12]
}
 800a26a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a26e:	f016 ba19 	b.w	80206a4 <memcpy>
}
 800a272:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a276:	4770      	bx	lr

0800a278 <prvUnlockQueue>:
{
 800a278:	b570      	push	{r4, r5, r6, lr}
 800a27a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800a27c:	f7ff fe62 	bl	8009f44 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800a280:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a284:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800a288:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a28a:	2d00      	cmp	r5, #0
 800a28c:	dc14      	bgt.n	800a2b8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800a28e:	23ff      	movs	r3, #255	; 0xff
 800a290:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800a294:	f7ff fe76 	bl	8009f84 <vPortExitCritical>
	taskENTER_CRITICAL();
 800a298:	f7ff fe54 	bl	8009f44 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800a29c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a2a0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800a2a4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a2a6:	2d00      	cmp	r5, #0
 800a2a8:	dc12      	bgt.n	800a2d0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800a2aa:	23ff      	movs	r3, #255	; 0xff
 800a2ac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800a2b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800a2b4:	f7ff be66 	b.w	8009f84 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a2b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a2ba:	2b00      	cmp	r3, #0
 800a2bc:	d0e7      	beq.n	800a28e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a2be:	4630      	mov	r0, r6
 800a2c0:	f001 f860 	bl	800b384 <xTaskRemoveFromEventList>
 800a2c4:	b108      	cbz	r0, 800a2ca <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800a2c6:	f001 f8e9 	bl	800b49c <vTaskMissedYield>
			--cTxLock;
 800a2ca:	3d01      	subs	r5, #1
 800a2cc:	b26d      	sxtb	r5, r5
 800a2ce:	e7dc      	b.n	800a28a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a2d0:	6923      	ldr	r3, [r4, #16]
 800a2d2:	2b00      	cmp	r3, #0
 800a2d4:	d0e9      	beq.n	800a2aa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a2d6:	4630      	mov	r0, r6
 800a2d8:	f001 f854 	bl	800b384 <xTaskRemoveFromEventList>
 800a2dc:	b108      	cbz	r0, 800a2e2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800a2de:	f001 f8dd 	bl	800b49c <vTaskMissedYield>
				--cRxLock;
 800a2e2:	3d01      	subs	r5, #1
 800a2e4:	b26d      	sxtb	r5, r5
 800a2e6:	e7de      	b.n	800a2a6 <prvUnlockQueue+0x2e>

0800a2e8 <xQueueGenericReset>:
{
 800a2e8:	b538      	push	{r3, r4, r5, lr}
 800a2ea:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a2ec:	4604      	mov	r4, r0
 800a2ee:	b940      	cbnz	r0, 800a302 <xQueueGenericReset+0x1a>
 800a2f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2f4:	f383 8811 	msr	BASEPRI, r3
 800a2f8:	f3bf 8f6f 	isb	sy
 800a2fc:	f3bf 8f4f 	dsb	sy
 800a300:	e7fe      	b.n	800a300 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800a302:	f7ff fe1f 	bl	8009f44 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a306:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800a30a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800a30c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a30e:	434b      	muls	r3, r1
 800a310:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a312:	1a5b      	subs	r3, r3, r1
 800a314:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a316:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a318:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a31a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800a31c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a31e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800a320:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800a324:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800a328:	b9a5      	cbnz	r5, 800a354 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a32a:	6923      	ldr	r3, [r4, #16]
 800a32c:	b173      	cbz	r3, 800a34c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a32e:	f104 0010 	add.w	r0, r4, #16
 800a332:	f001 f827 	bl	800b384 <xTaskRemoveFromEventList>
 800a336:	b148      	cbz	r0, 800a34c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800a338:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a33c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a340:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a344:	f3bf 8f4f 	dsb	sy
 800a348:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800a34c:	f7ff fe1a 	bl	8009f84 <vPortExitCritical>
}
 800a350:	2001      	movs	r0, #1
 800a352:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800a354:	f104 0010 	add.w	r0, r4, #16
 800a358:	f7ff fd4c 	bl	8009df4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800a35c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a360:	f7ff fd48 	bl	8009df4 <vListInitialise>
 800a364:	e7f2      	b.n	800a34c <xQueueGenericReset+0x64>

0800a366 <xQueueGenericCreateStatic>:
	{
 800a366:	b513      	push	{r0, r1, r4, lr}
 800a368:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a36a:	b940      	cbnz	r0, 800a37e <xQueueGenericCreateStatic+0x18>
 800a36c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a370:	f383 8811 	msr	BASEPRI, r3
 800a374:	f3bf 8f6f 	isb	sy
 800a378:	f3bf 8f4f 	dsb	sy
 800a37c:	e7fe      	b.n	800a37c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800a37e:	b943      	cbnz	r3, 800a392 <xQueueGenericCreateStatic+0x2c>
 800a380:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a384:	f383 8811 	msr	BASEPRI, r3
 800a388:	f3bf 8f6f 	isb	sy
 800a38c:	f3bf 8f4f 	dsb	sy
 800a390:	e7fe      	b.n	800a390 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800a392:	b14a      	cbz	r2, 800a3a8 <xQueueGenericCreateStatic+0x42>
 800a394:	b991      	cbnz	r1, 800a3bc <xQueueGenericCreateStatic+0x56>
 800a396:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a39a:	f383 8811 	msr	BASEPRI, r3
 800a39e:	f3bf 8f6f 	isb	sy
 800a3a2:	f3bf 8f4f 	dsb	sy
 800a3a6:	e7fe      	b.n	800a3a6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800a3a8:	b141      	cbz	r1, 800a3bc <xQueueGenericCreateStatic+0x56>
 800a3aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3ae:	f383 8811 	msr	BASEPRI, r3
 800a3b2:	f3bf 8f6f 	isb	sy
 800a3b6:	f3bf 8f4f 	dsb	sy
 800a3ba:	e7fe      	b.n	800a3ba <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800a3bc:	2350      	movs	r3, #80	; 0x50
 800a3be:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800a3c0:	9b01      	ldr	r3, [sp, #4]
 800a3c2:	2b50      	cmp	r3, #80	; 0x50
 800a3c4:	d008      	beq.n	800a3d8 <xQueueGenericCreateStatic+0x72>
 800a3c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3ca:	f383 8811 	msr	BASEPRI, r3
 800a3ce:	f3bf 8f6f 	isb	sy
 800a3d2:	f3bf 8f4f 	dsb	sy
 800a3d6:	e7fe      	b.n	800a3d6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a3d8:	2900      	cmp	r1, #0
 800a3da:	bf08      	it	eq
 800a3dc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800a3de:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a3e0:	6022      	str	r2, [r4, #0]
 800a3e2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800a3e4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a3e8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a3ec:	4619      	mov	r1, r3
 800a3ee:	4620      	mov	r0, r4
 800a3f0:	f7ff ff7a 	bl	800a2e8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a3f4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800a3f8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800a3fc:	4620      	mov	r0, r4
 800a3fe:	b002      	add	sp, #8
 800a400:	bd10      	pop	{r4, pc}

0800a402 <xQueueGenericCreate>:
	{
 800a402:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a404:	460d      	mov	r5, r1
 800a406:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a408:	4606      	mov	r6, r0
 800a40a:	b940      	cbnz	r0, 800a41e <xQueueGenericCreate+0x1c>
 800a40c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a410:	f383 8811 	msr	BASEPRI, r3
 800a414:	f3bf 8f6f 	isb	sy
 800a418:	f3bf 8f4f 	dsb	sy
 800a41c:	e7fe      	b.n	800a41c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a41e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800a420:	3050      	adds	r0, #80	; 0x50
 800a422:	f7ff fc11 	bl	8009c48 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800a426:	4604      	mov	r4, r0
 800a428:	b170      	cbz	r0, 800a448 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800a42a:	2300      	movs	r3, #0
 800a42c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a430:	b165      	cbz	r5, 800a44c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a432:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800a436:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800a43a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a43c:	2101      	movs	r1, #1
 800a43e:	4620      	mov	r0, r4
 800a440:	f7ff ff52 	bl	800a2e8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a444:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800a448:	4620      	mov	r0, r4
 800a44a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a44c:	4603      	mov	r3, r0
 800a44e:	e7f2      	b.n	800a436 <xQueueGenericCreate+0x34>

0800a450 <xQueueCreateCountingSemaphoreStatic>:
	{
 800a450:	b513      	push	{r0, r1, r4, lr}
 800a452:	4613      	mov	r3, r2
 800a454:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a456:	b940      	cbnz	r0, 800a46a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800a458:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a45c:	f383 8811 	msr	BASEPRI, r3
 800a460:	f3bf 8f6f 	isb	sy
 800a464:	f3bf 8f4f 	dsb	sy
 800a468:	e7fe      	b.n	800a468 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a46a:	4288      	cmp	r0, r1
 800a46c:	d208      	bcs.n	800a480 <xQueueCreateCountingSemaphoreStatic+0x30>
 800a46e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a472:	f383 8811 	msr	BASEPRI, r3
 800a476:	f3bf 8f6f 	isb	sy
 800a47a:	f3bf 8f4f 	dsb	sy
 800a47e:	e7fe      	b.n	800a47e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a480:	2202      	movs	r2, #2
 800a482:	9200      	str	r2, [sp, #0]
 800a484:	2200      	movs	r2, #0
 800a486:	4611      	mov	r1, r2
 800a488:	f7ff ff6d 	bl	800a366 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800a48c:	b100      	cbz	r0, 800a490 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a48e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a490:	b002      	add	sp, #8
 800a492:	bd10      	pop	{r4, pc}

0800a494 <xQueueCreateCountingSemaphore>:
	{
 800a494:	b510      	push	{r4, lr}
 800a496:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a498:	b940      	cbnz	r0, 800a4ac <xQueueCreateCountingSemaphore+0x18>
 800a49a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a49e:	f383 8811 	msr	BASEPRI, r3
 800a4a2:	f3bf 8f6f 	isb	sy
 800a4a6:	f3bf 8f4f 	dsb	sy
 800a4aa:	e7fe      	b.n	800a4aa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a4ac:	4288      	cmp	r0, r1
 800a4ae:	d208      	bcs.n	800a4c2 <xQueueCreateCountingSemaphore+0x2e>
 800a4b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4b4:	f383 8811 	msr	BASEPRI, r3
 800a4b8:	f3bf 8f6f 	isb	sy
 800a4bc:	f3bf 8f4f 	dsb	sy
 800a4c0:	e7fe      	b.n	800a4c0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a4c2:	2202      	movs	r2, #2
 800a4c4:	2100      	movs	r1, #0
 800a4c6:	f7ff ff9c 	bl	800a402 <xQueueGenericCreate>
		if( xHandle != NULL )
 800a4ca:	b100      	cbz	r0, 800a4ce <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a4cc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a4ce:	bd10      	pop	{r4, pc}

0800a4d0 <xQueueGenericSend>:
{
 800a4d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a4d4:	b085      	sub	sp, #20
 800a4d6:	4688      	mov	r8, r1
 800a4d8:	9201      	str	r2, [sp, #4]
 800a4da:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a4dc:	4604      	mov	r4, r0
 800a4de:	b940      	cbnz	r0, 800a4f2 <xQueueGenericSend+0x22>
 800a4e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4e4:	f383 8811 	msr	BASEPRI, r3
 800a4e8:	f3bf 8f6f 	isb	sy
 800a4ec:	f3bf 8f4f 	dsb	sy
 800a4f0:	e7fe      	b.n	800a4f0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a4f2:	b951      	cbnz	r1, 800a50a <xQueueGenericSend+0x3a>
 800a4f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a4f6:	b143      	cbz	r3, 800a50a <xQueueGenericSend+0x3a>
 800a4f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4fc:	f383 8811 	msr	BASEPRI, r3
 800a500:	f3bf 8f6f 	isb	sy
 800a504:	f3bf 8f4f 	dsb	sy
 800a508:	e7fe      	b.n	800a508 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a50a:	2f02      	cmp	r7, #2
 800a50c:	d10b      	bne.n	800a526 <xQueueGenericSend+0x56>
 800a50e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a510:	2b01      	cmp	r3, #1
 800a512:	d008      	beq.n	800a526 <xQueueGenericSend+0x56>
 800a514:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a518:	f383 8811 	msr	BASEPRI, r3
 800a51c:	f3bf 8f6f 	isb	sy
 800a520:	f3bf 8f4f 	dsb	sy
 800a524:	e7fe      	b.n	800a524 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a526:	f000 ffbf 	bl	800b4a8 <xTaskGetSchedulerState>
 800a52a:	4606      	mov	r6, r0
 800a52c:	b950      	cbnz	r0, 800a544 <xQueueGenericSend+0x74>
 800a52e:	9b01      	ldr	r3, [sp, #4]
 800a530:	b14b      	cbz	r3, 800a546 <xQueueGenericSend+0x76>
 800a532:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a536:	f383 8811 	msr	BASEPRI, r3
 800a53a:	f3bf 8f6f 	isb	sy
 800a53e:	f3bf 8f4f 	dsb	sy
 800a542:	e7fe      	b.n	800a542 <xQueueGenericSend+0x72>
 800a544:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800a546:	f04f 0900 	mov.w	r9, #0
 800a54a:	e037      	b.n	800a5bc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a54c:	9d01      	ldr	r5, [sp, #4]
 800a54e:	b91d      	cbnz	r5, 800a558 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800a550:	f7ff fd18 	bl	8009f84 <vPortExitCritical>
			return errQUEUE_FULL;
 800a554:	2000      	movs	r0, #0
 800a556:	e052      	b.n	800a5fe <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800a558:	b916      	cbnz	r6, 800a560 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a55a:	a802      	add	r0, sp, #8
 800a55c:	f000 ff56 	bl	800b40c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a560:	f7ff fd10 	bl	8009f84 <vPortExitCritical>
		vTaskSuspendAll();
 800a564:	f000 fd60 	bl	800b028 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a568:	f7ff fcec 	bl	8009f44 <vPortEnterCritical>
 800a56c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a570:	2bff      	cmp	r3, #255	; 0xff
 800a572:	bf08      	it	eq
 800a574:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800a578:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a57c:	2bff      	cmp	r3, #255	; 0xff
 800a57e:	bf08      	it	eq
 800a580:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800a584:	f7ff fcfe 	bl	8009f84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a588:	a901      	add	r1, sp, #4
 800a58a:	a802      	add	r0, sp, #8
 800a58c:	f000 ff4a 	bl	800b424 <xTaskCheckForTimeOut>
 800a590:	2800      	cmp	r0, #0
 800a592:	d14a      	bne.n	800a62a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a594:	f7ff fcd6 	bl	8009f44 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800a598:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a59a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a59c:	429a      	cmp	r2, r3
 800a59e:	d131      	bne.n	800a604 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a5a0:	f7ff fcf0 	bl	8009f84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800a5a4:	9901      	ldr	r1, [sp, #4]
 800a5a6:	f104 0010 	add.w	r0, r4, #16
 800a5aa:	f000 feb3 	bl	800b314 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a5ae:	4620      	mov	r0, r4
 800a5b0:	f7ff fe62 	bl	800a278 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a5b4:	f000 fddc 	bl	800b170 <xTaskResumeAll>
 800a5b8:	b360      	cbz	r0, 800a614 <xQueueGenericSend+0x144>
 800a5ba:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a5bc:	f7ff fcc2 	bl	8009f44 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a5c0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a5c2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a5c4:	429a      	cmp	r2, r3
 800a5c6:	d301      	bcc.n	800a5cc <xQueueGenericSend+0xfc>
 800a5c8:	2f02      	cmp	r7, #2
 800a5ca:	d1bf      	bne.n	800a54c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a5cc:	463a      	mov	r2, r7
 800a5ce:	4641      	mov	r1, r8
 800a5d0:	4620      	mov	r0, r4
 800a5d2:	f7ff fe06 	bl	800a1e2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a5d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a5d8:	b11b      	cbz	r3, 800a5e2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a5da:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a5de:	f000 fed1 	bl	800b384 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800a5e2:	b148      	cbz	r0, 800a5f8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800a5e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a5e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a5ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a5f0:	f3bf 8f4f 	dsb	sy
 800a5f4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a5f8:	f7ff fcc4 	bl	8009f84 <vPortExitCritical>
				return pdPASS;
 800a5fc:	2001      	movs	r0, #1
}
 800a5fe:	b005      	add	sp, #20
 800a600:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800a604:	f7ff fcbe 	bl	8009f84 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800a608:	4620      	mov	r0, r4
 800a60a:	f7ff fe35 	bl	800a278 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a60e:	f000 fdaf 	bl	800b170 <xTaskResumeAll>
 800a612:	e7d2      	b.n	800a5ba <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800a614:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a618:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a61c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a620:	f3bf 8f4f 	dsb	sy
 800a624:	f3bf 8f6f 	isb	sy
 800a628:	e7c7      	b.n	800a5ba <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800a62a:	4620      	mov	r0, r4
 800a62c:	f7ff fe24 	bl	800a278 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a630:	f000 fd9e 	bl	800b170 <xTaskResumeAll>
 800a634:	e78e      	b.n	800a554 <xQueueGenericSend+0x84>

0800a636 <xQueueGenericSendFromISR>:
{
 800a636:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a63a:	4689      	mov	r9, r1
 800a63c:	4690      	mov	r8, r2
 800a63e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a640:	4604      	mov	r4, r0
 800a642:	b940      	cbnz	r0, 800a656 <xQueueGenericSendFromISR+0x20>
 800a644:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a648:	f383 8811 	msr	BASEPRI, r3
 800a64c:	f3bf 8f6f 	isb	sy
 800a650:	f3bf 8f4f 	dsb	sy
 800a654:	e7fe      	b.n	800a654 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a656:	b951      	cbnz	r1, 800a66e <xQueueGenericSendFromISR+0x38>
 800a658:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a65a:	b143      	cbz	r3, 800a66e <xQueueGenericSendFromISR+0x38>
 800a65c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a660:	f383 8811 	msr	BASEPRI, r3
 800a664:	f3bf 8f6f 	isb	sy
 800a668:	f3bf 8f4f 	dsb	sy
 800a66c:	e7fe      	b.n	800a66c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a66e:	2f02      	cmp	r7, #2
 800a670:	d10b      	bne.n	800a68a <xQueueGenericSendFromISR+0x54>
 800a672:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a674:	2b01      	cmp	r3, #1
 800a676:	d008      	beq.n	800a68a <xQueueGenericSendFromISR+0x54>
 800a678:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a67c:	f383 8811 	msr	BASEPRI, r3
 800a680:	f3bf 8f6f 	isb	sy
 800a684:	f3bf 8f4f 	dsb	sy
 800a688:	e7fe      	b.n	800a688 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a68a:	f7ff fd71 	bl	800a170 <vPortValidateInterruptPriority>
	__asm volatile
 800a68e:	f3ef 8611 	mrs	r6, BASEPRI
 800a692:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a696:	f383 8811 	msr	BASEPRI, r3
 800a69a:	f3bf 8f6f 	isb	sy
 800a69e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a6a2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a6a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a6a6:	429a      	cmp	r2, r3
 800a6a8:	d301      	bcc.n	800a6ae <xQueueGenericSendFromISR+0x78>
 800a6aa:	2f02      	cmp	r7, #2
 800a6ac:	d123      	bne.n	800a6f6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a6ae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a6b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800a6b4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a6b6:	463a      	mov	r2, r7
 800a6b8:	4649      	mov	r1, r9
 800a6ba:	4620      	mov	r0, r4
 800a6bc:	f7ff fd91 	bl	800a1e2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800a6c0:	1c6b      	adds	r3, r5, #1
 800a6c2:	d113      	bne.n	800a6ec <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a6c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a6c6:	b90b      	cbnz	r3, 800a6cc <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800a6c8:	2001      	movs	r0, #1
 800a6ca:	e00b      	b.n	800a6e4 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a6cc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a6d0:	f000 fe58 	bl	800b384 <xTaskRemoveFromEventList>
 800a6d4:	2800      	cmp	r0, #0
 800a6d6:	d0f7      	beq.n	800a6c8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800a6d8:	f1b8 0f00 	cmp.w	r8, #0
 800a6dc:	d0f4      	beq.n	800a6c8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a6de:	2001      	movs	r0, #1
 800a6e0:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800a6e4:	f386 8811 	msr	BASEPRI, r6
}
 800a6e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a6ec:	3501      	adds	r5, #1
 800a6ee:	b26d      	sxtb	r5, r5
 800a6f0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800a6f4:	e7e8      	b.n	800a6c8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800a6f6:	2000      	movs	r0, #0
 800a6f8:	e7f4      	b.n	800a6e4 <xQueueGenericSendFromISR+0xae>

0800a6fa <xQueueGiveFromISR>:
{
 800a6fa:	b570      	push	{r4, r5, r6, lr}
 800a6fc:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a6fe:	4604      	mov	r4, r0
 800a700:	b940      	cbnz	r0, 800a714 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800a702:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a706:	f383 8811 	msr	BASEPRI, r3
 800a70a:	f3bf 8f6f 	isb	sy
 800a70e:	f3bf 8f4f 	dsb	sy
 800a712:	e7fe      	b.n	800a712 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a714:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a716:	b143      	cbz	r3, 800a72a <xQueueGiveFromISR+0x30>
 800a718:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a71c:	f383 8811 	msr	BASEPRI, r3
 800a720:	f3bf 8f6f 	isb	sy
 800a724:	f3bf 8f4f 	dsb	sy
 800a728:	e7fe      	b.n	800a728 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800a72a:	6803      	ldr	r3, [r0, #0]
 800a72c:	b953      	cbnz	r3, 800a744 <xQueueGiveFromISR+0x4a>
 800a72e:	6883      	ldr	r3, [r0, #8]
 800a730:	b143      	cbz	r3, 800a744 <xQueueGiveFromISR+0x4a>
 800a732:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a736:	f383 8811 	msr	BASEPRI, r3
 800a73a:	f3bf 8f6f 	isb	sy
 800a73e:	f3bf 8f4f 	dsb	sy
 800a742:	e7fe      	b.n	800a742 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a744:	f7ff fd14 	bl	800a170 <vPortValidateInterruptPriority>
	__asm volatile
 800a748:	f3ef 8611 	mrs	r6, BASEPRI
 800a74c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a750:	f383 8811 	msr	BASEPRI, r3
 800a754:	f3bf 8f6f 	isb	sy
 800a758:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a75c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800a75e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a760:	4293      	cmp	r3, r2
 800a762:	d91c      	bls.n	800a79e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a764:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a768:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800a76a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800a76c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a76e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800a770:	d110      	bne.n	800a794 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a772:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a774:	b90b      	cbnz	r3, 800a77a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800a776:	2001      	movs	r0, #1
 800a778:	e009      	b.n	800a78e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a77a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a77e:	f000 fe01 	bl	800b384 <xTaskRemoveFromEventList>
 800a782:	2800      	cmp	r0, #0
 800a784:	d0f7      	beq.n	800a776 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800a786:	2d00      	cmp	r5, #0
 800a788:	d0f5      	beq.n	800a776 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a78a:	2001      	movs	r0, #1
 800a78c:	6028      	str	r0, [r5, #0]
	__asm volatile
 800a78e:	f386 8811 	msr	BASEPRI, r6
}
 800a792:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a794:	3301      	adds	r3, #1
 800a796:	b25b      	sxtb	r3, r3
 800a798:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800a79c:	e7eb      	b.n	800a776 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800a79e:	2000      	movs	r0, #0
 800a7a0:	e7f5      	b.n	800a78e <xQueueGiveFromISR+0x94>

0800a7a2 <xQueueReceive>:
{
 800a7a2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a7a6:	460f      	mov	r7, r1
 800a7a8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a7aa:	4604      	mov	r4, r0
 800a7ac:	b940      	cbnz	r0, 800a7c0 <xQueueReceive+0x1e>
	__asm volatile
 800a7ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7b2:	f383 8811 	msr	BASEPRI, r3
 800a7b6:	f3bf 8f6f 	isb	sy
 800a7ba:	f3bf 8f4f 	dsb	sy
 800a7be:	e7fe      	b.n	800a7be <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a7c0:	b951      	cbnz	r1, 800a7d8 <xQueueReceive+0x36>
 800a7c2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a7c4:	b143      	cbz	r3, 800a7d8 <xQueueReceive+0x36>
 800a7c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7ca:	f383 8811 	msr	BASEPRI, r3
 800a7ce:	f3bf 8f6f 	isb	sy
 800a7d2:	f3bf 8f4f 	dsb	sy
 800a7d6:	e7fe      	b.n	800a7d6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a7d8:	f000 fe66 	bl	800b4a8 <xTaskGetSchedulerState>
 800a7dc:	4606      	mov	r6, r0
 800a7de:	b950      	cbnz	r0, 800a7f6 <xQueueReceive+0x54>
 800a7e0:	9b01      	ldr	r3, [sp, #4]
 800a7e2:	b14b      	cbz	r3, 800a7f8 <xQueueReceive+0x56>
 800a7e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7e8:	f383 8811 	msr	BASEPRI, r3
 800a7ec:	f3bf 8f6f 	isb	sy
 800a7f0:	f3bf 8f4f 	dsb	sy
 800a7f4:	e7fe      	b.n	800a7f4 <xQueueReceive+0x52>
 800a7f6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800a7f8:	f04f 0800 	mov.w	r8, #0
 800a7fc:	e03d      	b.n	800a87a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a7fe:	9d01      	ldr	r5, [sp, #4]
 800a800:	b91d      	cbnz	r5, 800a80a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800a802:	f7ff fbbf 	bl	8009f84 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800a806:	2000      	movs	r0, #0
 800a808:	e056      	b.n	800a8b8 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800a80a:	b916      	cbnz	r6, 800a812 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a80c:	a802      	add	r0, sp, #8
 800a80e:	f000 fdfd 	bl	800b40c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a812:	f7ff fbb7 	bl	8009f84 <vPortExitCritical>
		vTaskSuspendAll();
 800a816:	f000 fc07 	bl	800b028 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a81a:	f7ff fb93 	bl	8009f44 <vPortEnterCritical>
 800a81e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a822:	2bff      	cmp	r3, #255	; 0xff
 800a824:	bf08      	it	eq
 800a826:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800a82a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a82e:	2bff      	cmp	r3, #255	; 0xff
 800a830:	bf08      	it	eq
 800a832:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800a836:	f7ff fba5 	bl	8009f84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a83a:	a901      	add	r1, sp, #4
 800a83c:	a802      	add	r0, sp, #8
 800a83e:	f000 fdf1 	bl	800b424 <xTaskCheckForTimeOut>
 800a842:	2800      	cmp	r0, #0
 800a844:	d141      	bne.n	800a8ca <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a846:	4620      	mov	r0, r4
 800a848:	f7ff fcc0 	bl	800a1cc <prvIsQueueEmpty>
 800a84c:	b3b8      	cbz	r0, 800a8be <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a84e:	9901      	ldr	r1, [sp, #4]
 800a850:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a854:	f000 fd5e 	bl	800b314 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a858:	4620      	mov	r0, r4
 800a85a:	f7ff fd0d 	bl	800a278 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a85e:	f000 fc87 	bl	800b170 <xTaskResumeAll>
 800a862:	b948      	cbnz	r0, 800a878 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800a864:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a868:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a86c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a870:	f3bf 8f4f 	dsb	sy
 800a874:	f3bf 8f6f 	isb	sy
 800a878:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a87a:	f7ff fb63 	bl	8009f44 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a87e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a880:	2d00      	cmp	r5, #0
 800a882:	d0bc      	beq.n	800a7fe <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a884:	4639      	mov	r1, r7
 800a886:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a888:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a88a:	f7ff fcdf 	bl	800a24c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a88e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a890:	6923      	ldr	r3, [r4, #16]
 800a892:	b173      	cbz	r3, 800a8b2 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a894:	f104 0010 	add.w	r0, r4, #16
 800a898:	f000 fd74 	bl	800b384 <xTaskRemoveFromEventList>
 800a89c:	b148      	cbz	r0, 800a8b2 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800a89e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a8a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a8a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a8aa:	f3bf 8f4f 	dsb	sy
 800a8ae:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a8b2:	f7ff fb67 	bl	8009f84 <vPortExitCritical>
				return pdPASS;
 800a8b6:	2001      	movs	r0, #1
}
 800a8b8:	b004      	add	sp, #16
 800a8ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800a8be:	4620      	mov	r0, r4
 800a8c0:	f7ff fcda 	bl	800a278 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a8c4:	f000 fc54 	bl	800b170 <xTaskResumeAll>
 800a8c8:	e7d6      	b.n	800a878 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800a8ca:	4620      	mov	r0, r4
 800a8cc:	f7ff fcd4 	bl	800a278 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a8d0:	f000 fc4e 	bl	800b170 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a8d4:	4620      	mov	r0, r4
 800a8d6:	f7ff fc79 	bl	800a1cc <prvIsQueueEmpty>
 800a8da:	2800      	cmp	r0, #0
 800a8dc:	d0cc      	beq.n	800a878 <xQueueReceive+0xd6>
 800a8de:	e792      	b.n	800a806 <xQueueReceive+0x64>

0800a8e0 <xQueueSemaphoreTake>:
{
 800a8e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a8e2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800a8e4:	4604      	mov	r4, r0
{
 800a8e6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a8e8:	b940      	cbnz	r0, 800a8fc <xQueueSemaphoreTake+0x1c>
 800a8ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8ee:	f383 8811 	msr	BASEPRI, r3
 800a8f2:	f3bf 8f6f 	isb	sy
 800a8f6:	f3bf 8f4f 	dsb	sy
 800a8fa:	e7fe      	b.n	800a8fa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a8fc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800a8fe:	b145      	cbz	r5, 800a912 <xQueueSemaphoreTake+0x32>
 800a900:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a904:	f383 8811 	msr	BASEPRI, r3
 800a908:	f3bf 8f6f 	isb	sy
 800a90c:	f3bf 8f4f 	dsb	sy
 800a910:	e7fe      	b.n	800a910 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a912:	f000 fdc9 	bl	800b4a8 <xTaskGetSchedulerState>
 800a916:	4606      	mov	r6, r0
 800a918:	b950      	cbnz	r0, 800a930 <xQueueSemaphoreTake+0x50>
 800a91a:	9b01      	ldr	r3, [sp, #4]
 800a91c:	b15b      	cbz	r3, 800a936 <xQueueSemaphoreTake+0x56>
 800a91e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a922:	f383 8811 	msr	BASEPRI, r3
 800a926:	f3bf 8f6f 	isb	sy
 800a92a:	f3bf 8f4f 	dsb	sy
 800a92e:	e7fe      	b.n	800a92e <xQueueSemaphoreTake+0x4e>
 800a930:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800a932:	2700      	movs	r7, #0
 800a934:	e053      	b.n	800a9de <xQueueSemaphoreTake+0xfe>
 800a936:	4605      	mov	r5, r0
 800a938:	e7fb      	b.n	800a932 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a93a:	9b01      	ldr	r3, [sp, #4]
 800a93c:	b963      	cbnz	r3, 800a958 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800a93e:	b145      	cbz	r5, 800a952 <xQueueSemaphoreTake+0x72>
 800a940:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a944:	f383 8811 	msr	BASEPRI, r3
 800a948:	f3bf 8f6f 	isb	sy
 800a94c:	f3bf 8f4f 	dsb	sy
 800a950:	e7fe      	b.n	800a950 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800a952:	f7ff fb17 	bl	8009f84 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800a956:	e062      	b.n	800aa1e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800a958:	b916      	cbnz	r6, 800a960 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a95a:	a802      	add	r0, sp, #8
 800a95c:	f000 fd56 	bl	800b40c <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a960:	f7ff fb10 	bl	8009f84 <vPortExitCritical>
		vTaskSuspendAll();
 800a964:	f000 fb60 	bl	800b028 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a968:	f7ff faec 	bl	8009f44 <vPortEnterCritical>
 800a96c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a970:	2bff      	cmp	r3, #255	; 0xff
 800a972:	bf08      	it	eq
 800a974:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800a978:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a97c:	2bff      	cmp	r3, #255	; 0xff
 800a97e:	bf08      	it	eq
 800a980:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800a984:	f7ff fafe 	bl	8009f84 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a988:	a901      	add	r1, sp, #4
 800a98a:	a802      	add	r0, sp, #8
 800a98c:	f000 fd4a 	bl	800b424 <xTaskCheckForTimeOut>
 800a990:	2800      	cmp	r0, #0
 800a992:	d14d      	bne.n	800aa30 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a994:	4620      	mov	r0, r4
 800a996:	f7ff fc19 	bl	800a1cc <prvIsQueueEmpty>
 800a99a:	2800      	cmp	r0, #0
 800a99c:	d042      	beq.n	800aa24 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a99e:	6823      	ldr	r3, [r4, #0]
 800a9a0:	b93b      	cbnz	r3, 800a9b2 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800a9a2:	f7ff facf 	bl	8009f44 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a9a6:	68a0      	ldr	r0, [r4, #8]
 800a9a8:	f000 fd8e 	bl	800b4c8 <xTaskPriorityInherit>
 800a9ac:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800a9ae:	f7ff fae9 	bl	8009f84 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a9b2:	9901      	ldr	r1, [sp, #4]
 800a9b4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a9b8:	f000 fcac 	bl	800b314 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a9bc:	4620      	mov	r0, r4
 800a9be:	f7ff fc5b 	bl	800a278 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a9c2:	f000 fbd5 	bl	800b170 <xTaskResumeAll>
 800a9c6:	b948      	cbnz	r0, 800a9dc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800a9c8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a9cc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a9d0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a9d4:	f3bf 8f4f 	dsb	sy
 800a9d8:	f3bf 8f6f 	isb	sy
 800a9dc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a9de:	f7ff fab1 	bl	8009f44 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800a9e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800a9e4:	2b00      	cmp	r3, #0
 800a9e6:	d0a8      	beq.n	800a93a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800a9e8:	3b01      	subs	r3, #1
 800a9ea:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a9ec:	6823      	ldr	r3, [r4, #0]
 800a9ee:	b913      	cbnz	r3, 800a9f6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800a9f0:	f000 fe42 	bl	800b678 <pvTaskIncrementMutexHeldCount>
 800a9f4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a9f6:	6923      	ldr	r3, [r4, #16]
 800a9f8:	b173      	cbz	r3, 800aa18 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a9fa:	f104 0010 	add.w	r0, r4, #16
 800a9fe:	f000 fcc1 	bl	800b384 <xTaskRemoveFromEventList>
 800aa02:	b148      	cbz	r0, 800aa18 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800aa04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800aa08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800aa0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800aa10:	f3bf 8f4f 	dsb	sy
 800aa14:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800aa18:	f7ff fab4 	bl	8009f84 <vPortExitCritical>
				return pdPASS;
 800aa1c:	2501      	movs	r5, #1
}
 800aa1e:	4628      	mov	r0, r5
 800aa20:	b005      	add	sp, #20
 800aa22:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800aa24:	4620      	mov	r0, r4
 800aa26:	f7ff fc27 	bl	800a278 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800aa2a:	f000 fba1 	bl	800b170 <xTaskResumeAll>
 800aa2e:	e7d5      	b.n	800a9dc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800aa30:	4620      	mov	r0, r4
 800aa32:	f7ff fc21 	bl	800a278 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800aa36:	f000 fb9b 	bl	800b170 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800aa3a:	4620      	mov	r0, r4
 800aa3c:	f7ff fbc6 	bl	800a1cc <prvIsQueueEmpty>
 800aa40:	2800      	cmp	r0, #0
 800aa42:	d0cb      	beq.n	800a9dc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800aa44:	2d00      	cmp	r5, #0
 800aa46:	d0ea      	beq.n	800aa1e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800aa48:	f7ff fa7c 	bl	8009f44 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800aa4c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800aa4e:	b119      	cbz	r1, 800aa58 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800aa50:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800aa52:	6819      	ldr	r1, [r3, #0]
 800aa54:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800aa58:	68a0      	ldr	r0, [r4, #8]
 800aa5a:	f000 fdbb 	bl	800b5d4 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800aa5e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800aa60:	f7ff fa90 	bl	8009f84 <vPortExitCritical>
 800aa64:	e7db      	b.n	800aa1e <xQueueSemaphoreTake+0x13e>

0800aa66 <xQueueReceiveFromISR>:
{
 800aa66:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800aa6a:	4689      	mov	r9, r1
 800aa6c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800aa6e:	4605      	mov	r5, r0
 800aa70:	b940      	cbnz	r0, 800aa84 <xQueueReceiveFromISR+0x1e>
 800aa72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa76:	f383 8811 	msr	BASEPRI, r3
 800aa7a:	f3bf 8f6f 	isb	sy
 800aa7e:	f3bf 8f4f 	dsb	sy
 800aa82:	e7fe      	b.n	800aa82 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800aa84:	b951      	cbnz	r1, 800aa9c <xQueueReceiveFromISR+0x36>
 800aa86:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800aa88:	b143      	cbz	r3, 800aa9c <xQueueReceiveFromISR+0x36>
 800aa8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa8e:	f383 8811 	msr	BASEPRI, r3
 800aa92:	f3bf 8f6f 	isb	sy
 800aa96:	f3bf 8f4f 	dsb	sy
 800aa9a:	e7fe      	b.n	800aa9a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800aa9c:	f7ff fb68 	bl	800a170 <vPortValidateInterruptPriority>
	__asm volatile
 800aaa0:	f3ef 8711 	mrs	r7, BASEPRI
 800aaa4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aaa8:	f383 8811 	msr	BASEPRI, r3
 800aaac:	f3bf 8f6f 	isb	sy
 800aab0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800aab4:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800aab6:	b31c      	cbz	r4, 800ab00 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800aab8:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800aabc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800aabe:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800aac0:	4628      	mov	r0, r5
 800aac2:	f7ff fbc3 	bl	800a24c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800aac6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800aac8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800aaca:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800aacc:	d113      	bne.n	800aaf6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800aace:	692b      	ldr	r3, [r5, #16]
 800aad0:	b90b      	cbnz	r3, 800aad6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800aad2:	2001      	movs	r0, #1
 800aad4:	e00b      	b.n	800aaee <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800aad6:	f105 0010 	add.w	r0, r5, #16
 800aada:	f000 fc53 	bl	800b384 <xTaskRemoveFromEventList>
 800aade:	2800      	cmp	r0, #0
 800aae0:	d0f7      	beq.n	800aad2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800aae2:	f1b8 0f00 	cmp.w	r8, #0
 800aae6:	d0f4      	beq.n	800aad2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800aae8:	2001      	movs	r0, #1
 800aaea:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800aaee:	f387 8811 	msr	BASEPRI, r7
}
 800aaf2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800aaf6:	3601      	adds	r6, #1
 800aaf8:	b276      	sxtb	r6, r6
 800aafa:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800aafe:	e7e8      	b.n	800aad2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800ab00:	4620      	mov	r0, r4
 800ab02:	e7f4      	b.n	800aaee <xQueueReceiveFromISR+0x88>

0800ab04 <uxQueueMessagesWaiting>:
{
 800ab04:	b513      	push	{r0, r1, r4, lr}
	configASSERT( xQueue );
 800ab06:	4604      	mov	r4, r0
 800ab08:	b940      	cbnz	r0, 800ab1c <uxQueueMessagesWaiting+0x18>
	__asm volatile
 800ab0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab0e:	f383 8811 	msr	BASEPRI, r3
 800ab12:	f3bf 8f6f 	isb	sy
 800ab16:	f3bf 8f4f 	dsb	sy
 800ab1a:	e7fe      	b.n	800ab1a <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 800ab1c:	f7ff fa12 	bl	8009f44 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800ab20:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ab22:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ab24:	f7ff fa2e 	bl	8009f84 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ab28:	9801      	ldr	r0, [sp, #4]
 800ab2a:	b002      	add	sp, #8
 800ab2c:	bd10      	pop	{r4, pc}

0800ab2e <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800ab2e:	b940      	cbnz	r0, 800ab42 <uxQueueMessagesWaitingFromISR+0x14>
 800ab30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab34:	f383 8811 	msr	BASEPRI, r3
 800ab38:	f3bf 8f6f 	isb	sy
 800ab3c:	f3bf 8f4f 	dsb	sy
 800ab40:	e7fe      	b.n	800ab40 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 800ab42:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ab44:	4770      	bx	lr
	...

0800ab48 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800ab48:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ab4a:	4a07      	ldr	r2, [pc, #28]	; (800ab68 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ab4c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800ab4e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800ab52:	b92c      	cbnz	r4, 800ab60 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800ab54:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800ab58:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800ab5c:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800ab5e:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ab60:	3301      	adds	r3, #1
 800ab62:	2b08      	cmp	r3, #8
 800ab64:	d1f3      	bne.n	800ab4e <vQueueAddToRegistry+0x6>
 800ab66:	e7fa      	b.n	800ab5e <vQueueAddToRegistry+0x16>
 800ab68:	20014950 	.word	0x20014950

0800ab6c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800ab6c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ab6e:	4a08      	ldr	r2, [pc, #32]	; (800ab90 <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ab70:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ab72:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800ab76:	684c      	ldr	r4, [r1, #4]
 800ab78:	4284      	cmp	r4, r0
 800ab7a:	d104      	bne.n	800ab86 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800ab7c:	2000      	movs	r0, #0
 800ab7e:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800ab82:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800ab84:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800ab86:	3301      	adds	r3, #1
 800ab88:	2b08      	cmp	r3, #8
 800ab8a:	d1f2      	bne.n	800ab72 <vQueueUnregisterQueue+0x6>
 800ab8c:	e7fa      	b.n	800ab84 <vQueueUnregisterQueue+0x18>
 800ab8e:	bf00      	nop
 800ab90:	20014950 	.word	0x20014950

0800ab94 <vQueueDelete>:
{
 800ab94:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800ab96:	4604      	mov	r4, r0
 800ab98:	b940      	cbnz	r0, 800abac <vQueueDelete+0x18>
 800ab9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab9e:	f383 8811 	msr	BASEPRI, r3
 800aba2:	f3bf 8f6f 	isb	sy
 800aba6:	f3bf 8f4f 	dsb	sy
 800abaa:	e7fe      	b.n	800abaa <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800abac:	f7ff ffde 	bl	800ab6c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800abb0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800abb4:	b923      	cbnz	r3, 800abc0 <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800abb6:	4620      	mov	r0, r4
}
 800abb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800abbc:	f7ff b8dc 	b.w	8009d78 <vPortFree>
}
 800abc0:	bd10      	pop	{r4, pc}

0800abc2 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800abc2:	b570      	push	{r4, r5, r6, lr}
 800abc4:	4604      	mov	r4, r0
 800abc6:	460d      	mov	r5, r1
 800abc8:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800abca:	f7ff f9bb 	bl	8009f44 <vPortEnterCritical>
 800abce:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800abd2:	2bff      	cmp	r3, #255	; 0xff
 800abd4:	bf04      	itt	eq
 800abd6:	2300      	moveq	r3, #0
 800abd8:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800abdc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800abe0:	2bff      	cmp	r3, #255	; 0xff
 800abe2:	bf04      	itt	eq
 800abe4:	2300      	moveq	r3, #0
 800abe6:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800abea:	f7ff f9cb 	bl	8009f84 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800abee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800abf0:	b92b      	cbnz	r3, 800abfe <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800abf2:	4632      	mov	r2, r6
 800abf4:	4629      	mov	r1, r5
 800abf6:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800abfa:	f000 fba5 	bl	800b348 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800abfe:	4620      	mov	r0, r4
	}
 800ac00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800ac04:	f7ff bb38 	b.w	800a278 <prvUnlockQueue>

0800ac08 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800ac08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac0c:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800ac0e:	f7ff f999 	bl	8009f44 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800ac12:	4b30      	ldr	r3, [pc, #192]	; (800acd4 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800ac14:	4e30      	ldr	r6, [pc, #192]	; (800acd8 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800ac16:	681a      	ldr	r2, [r3, #0]
 800ac18:	4f30      	ldr	r7, [pc, #192]	; (800acdc <prvAddNewTaskToReadyList+0xd4>)
 800ac1a:	3201      	adds	r2, #1
 800ac1c:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800ac1e:	6835      	ldr	r5, [r6, #0]
 800ac20:	2d00      	cmp	r5, #0
 800ac22:	d14b      	bne.n	800acbc <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800ac24:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	2b01      	cmp	r3, #1
 800ac2a:	d11f      	bne.n	800ac6c <prvAddNewTaskToReadyList+0x64>
 800ac2c:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ac2e:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ac30:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ac32:	f7ff f8df 	bl	8009df4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ac36:	2d38      	cmp	r5, #56	; 0x38
 800ac38:	f108 0814 	add.w	r8, r8, #20
 800ac3c:	d1f7      	bne.n	800ac2e <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800ac3e:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800ad04 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800ac42:	4d27      	ldr	r5, [pc, #156]	; (800ace0 <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800ac44:	4640      	mov	r0, r8
 800ac46:	f7ff f8d5 	bl	8009df4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800ac4a:	4628      	mov	r0, r5
 800ac4c:	f7ff f8d2 	bl	8009df4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800ac50:	4824      	ldr	r0, [pc, #144]	; (800ace4 <prvAddNewTaskToReadyList+0xdc>)
 800ac52:	f7ff f8cf 	bl	8009df4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800ac56:	4824      	ldr	r0, [pc, #144]	; (800ace8 <prvAddNewTaskToReadyList+0xe0>)
 800ac58:	f7ff f8cc 	bl	8009df4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800ac5c:	4823      	ldr	r0, [pc, #140]	; (800acec <prvAddNewTaskToReadyList+0xe4>)
 800ac5e:	f7ff f8c9 	bl	8009df4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800ac62:	4b23      	ldr	r3, [pc, #140]	; (800acf0 <prvAddNewTaskToReadyList+0xe8>)
 800ac64:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800ac68:	4b22      	ldr	r3, [pc, #136]	; (800acf4 <prvAddNewTaskToReadyList+0xec>)
 800ac6a:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800ac6c:	4a22      	ldr	r2, [pc, #136]	; (800acf8 <prvAddNewTaskToReadyList+0xf0>)
 800ac6e:	6813      	ldr	r3, [r2, #0]
 800ac70:	3301      	adds	r3, #1
 800ac72:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800ac74:	4a21      	ldr	r2, [pc, #132]	; (800acfc <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800ac76:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800ac78:	6811      	ldr	r1, [r2, #0]
 800ac7a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ac7c:	2014      	movs	r0, #20
 800ac7e:	428b      	cmp	r3, r1
 800ac80:	fb00 7003 	mla	r0, r0, r3, r7
 800ac84:	f104 0104 	add.w	r1, r4, #4
 800ac88:	bf88      	it	hi
 800ac8a:	6013      	strhi	r3, [r2, #0]
 800ac8c:	f7ff f8c0 	bl	8009e10 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800ac90:	f7ff f978 	bl	8009f84 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800ac94:	4b1a      	ldr	r3, [pc, #104]	; (800ad00 <prvAddNewTaskToReadyList+0xf8>)
 800ac96:	681b      	ldr	r3, [r3, #0]
 800ac98:	b173      	cbz	r3, 800acb8 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800ac9a:	6833      	ldr	r3, [r6, #0]
 800ac9c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ac9e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800aca0:	429a      	cmp	r2, r3
 800aca2:	d209      	bcs.n	800acb8 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800aca4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800aca8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800acac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800acb0:	f3bf 8f4f 	dsb	sy
 800acb4:	f3bf 8f6f 	isb	sy
}
 800acb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800acbc:	4b10      	ldr	r3, [pc, #64]	; (800ad00 <prvAddNewTaskToReadyList+0xf8>)
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	2b00      	cmp	r3, #0
 800acc2:	d1d3      	bne.n	800ac6c <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800acc4:	6833      	ldr	r3, [r6, #0]
 800acc6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800acc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800acca:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800accc:	bf98      	it	ls
 800acce:	6034      	strls	r4, [r6, #0]
 800acd0:	e7cc      	b.n	800ac6c <prvAddNewTaskToReadyList+0x64>
 800acd2:	bf00      	nop
 800acd4:	20014dfc 	.word	0x20014dfc
 800acd8:	20014990 	.word	0x20014990
 800acdc:	2001499c 	.word	0x2001499c
 800ace0:	20014e24 	.word	0x20014e24
 800ace4:	20014e44 	.word	0x20014e44
 800ace8:	20014e70 	.word	0x20014e70
 800acec:	20014e5c 	.word	0x20014e5c
 800acf0:	20014994 	.word	0x20014994
 800acf4:	20014998 	.word	0x20014998
 800acf8:	20014e08 	.word	0x20014e08
 800acfc:	20014e0c 	.word	0x20014e0c
 800ad00:	20014e58 	.word	0x20014e58
 800ad04:	20014e10 	.word	0x20014e10

0800ad08 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800ad08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800ad0a:	4b15      	ldr	r3, [pc, #84]	; (800ad60 <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ad0c:	4e15      	ldr	r6, [pc, #84]	; (800ad64 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800ad0e:	681d      	ldr	r5, [r3, #0]
{
 800ad10:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ad12:	6830      	ldr	r0, [r6, #0]
 800ad14:	3004      	adds	r0, #4
{
 800ad16:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ad18:	f7ff f89d 	bl	8009e56 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800ad1c:	1c63      	adds	r3, r4, #1
 800ad1e:	d107      	bne.n	800ad30 <prvAddCurrentTaskToDelayedList+0x28>
 800ad20:	b137      	cbz	r7, 800ad30 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ad22:	6831      	ldr	r1, [r6, #0]
 800ad24:	4810      	ldr	r0, [pc, #64]	; (800ad68 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800ad26:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ad2a:	3104      	adds	r1, #4
 800ad2c:	f7ff b870 	b.w	8009e10 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ad30:	6833      	ldr	r3, [r6, #0]
 800ad32:	192c      	adds	r4, r5, r4
 800ad34:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ad36:	d307      	bcc.n	800ad48 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ad38:	4b0c      	ldr	r3, [pc, #48]	; (800ad6c <prvAddCurrentTaskToDelayedList+0x64>)
 800ad3a:	6818      	ldr	r0, [r3, #0]
 800ad3c:	6831      	ldr	r1, [r6, #0]
}
 800ad3e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ad42:	3104      	adds	r1, #4
 800ad44:	f7ff b870 	b.w	8009e28 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ad48:	4b09      	ldr	r3, [pc, #36]	; (800ad70 <prvAddCurrentTaskToDelayedList+0x68>)
 800ad4a:	6818      	ldr	r0, [r3, #0]
 800ad4c:	6831      	ldr	r1, [r6, #0]
 800ad4e:	3104      	adds	r1, #4
 800ad50:	f7ff f86a 	bl	8009e28 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ad54:	4b07      	ldr	r3, [pc, #28]	; (800ad74 <prvAddCurrentTaskToDelayedList+0x6c>)
 800ad56:	681a      	ldr	r2, [r3, #0]
 800ad58:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800ad5a:	bf88      	it	hi
 800ad5c:	601c      	strhi	r4, [r3, #0]
}
 800ad5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ad60:	20014e84 	.word	0x20014e84
 800ad64:	20014990 	.word	0x20014990
 800ad68:	20014e5c 	.word	0x20014e5c
 800ad6c:	20014998 	.word	0x20014998
 800ad70:	20014994 	.word	0x20014994
 800ad74:	20014e38 	.word	0x20014e38

0800ad78 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ad78:	4a06      	ldr	r2, [pc, #24]	; (800ad94 <prvResetNextTaskUnblockTime+0x1c>)
 800ad7a:	6813      	ldr	r3, [r2, #0]
 800ad7c:	6819      	ldr	r1, [r3, #0]
 800ad7e:	4b06      	ldr	r3, [pc, #24]	; (800ad98 <prvResetNextTaskUnblockTime+0x20>)
 800ad80:	b919      	cbnz	r1, 800ad8a <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ad82:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ad86:	601a      	str	r2, [r3, #0]
}
 800ad88:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ad8a:	6812      	ldr	r2, [r2, #0]
 800ad8c:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ad8e:	68d2      	ldr	r2, [r2, #12]
 800ad90:	6852      	ldr	r2, [r2, #4]
 800ad92:	e7f8      	b.n	800ad86 <prvResetNextTaskUnblockTime+0xe>
 800ad94:	20014994 	.word	0x20014994
 800ad98:	20014e38 	.word	0x20014e38

0800ad9c <prvDeleteTCB>:
	{
 800ad9c:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ad9e:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800ada2:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ada4:	b93b      	cbnz	r3, 800adb6 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800ada6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ada8:	f7fe ffe6 	bl	8009d78 <vPortFree>
				vPortFree( pxTCB );
 800adac:	4620      	mov	r0, r4
	}
 800adae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800adb2:	f7fe bfe1 	b.w	8009d78 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800adb6:	2b01      	cmp	r3, #1
 800adb8:	d0f9      	beq.n	800adae <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800adba:	2b02      	cmp	r3, #2
 800adbc:	d008      	beq.n	800add0 <prvDeleteTCB+0x34>
 800adbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800adc2:	f383 8811 	msr	BASEPRI, r3
 800adc6:	f3bf 8f6f 	isb	sy
 800adca:	f3bf 8f4f 	dsb	sy
 800adce:	e7fe      	b.n	800adce <prvDeleteTCB+0x32>
	}
 800add0:	bd10      	pop	{r4, pc}
	...

0800add4 <prvIdleTask>:
{
 800add4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800add6:	4c13      	ldr	r4, [pc, #76]	; (800ae24 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800add8:	4f13      	ldr	r7, [pc, #76]	; (800ae28 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800adda:	4d14      	ldr	r5, [pc, #80]	; (800ae2c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800addc:	6823      	ldr	r3, [r4, #0]
 800adde:	b973      	cbnz	r3, 800adfe <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800ade0:	4b13      	ldr	r3, [pc, #76]	; (800ae30 <prvIdleTask+0x5c>)
 800ade2:	681b      	ldr	r3, [r3, #0]
 800ade4:	2b01      	cmp	r3, #1
 800ade6:	d9f8      	bls.n	800adda <prvIdleTask+0x6>
				taskYIELD();
 800ade8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800adec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800adf0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800adf4:	f3bf 8f4f 	dsb	sy
 800adf8:	f3bf 8f6f 	isb	sy
 800adfc:	e7ed      	b.n	800adda <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800adfe:	f7ff f8a1 	bl	8009f44 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ae02:	68fb      	ldr	r3, [r7, #12]
 800ae04:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ae06:	1d30      	adds	r0, r6, #4
 800ae08:	f7ff f825 	bl	8009e56 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800ae0c:	682b      	ldr	r3, [r5, #0]
 800ae0e:	3b01      	subs	r3, #1
 800ae10:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800ae12:	6823      	ldr	r3, [r4, #0]
 800ae14:	3b01      	subs	r3, #1
 800ae16:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800ae18:	f7ff f8b4 	bl	8009f84 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800ae1c:	4630      	mov	r0, r6
 800ae1e:	f7ff ffbd 	bl	800ad9c <prvDeleteTCB>
 800ae22:	e7db      	b.n	800addc <prvIdleTask+0x8>
 800ae24:	20014e00 	.word	0x20014e00
 800ae28:	20014e70 	.word	0x20014e70
 800ae2c:	20014dfc 	.word	0x20014dfc
 800ae30:	2001499c 	.word	0x2001499c

0800ae34 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ae34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ae38:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ae3c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800ae40:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ae42:	4606      	mov	r6, r0
 800ae44:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ae46:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ae48:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ae4a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ae4c:	f015 fc38 	bl	80206c0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800ae50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ae52:	f1a9 0904 	sub.w	r9, r9, #4
 800ae56:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800ae58:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800ae5c:	b3b5      	cbz	r5, 800aecc <prvInitialiseNewTask.constprop.0+0x98>
 800ae5e:	1e6b      	subs	r3, r5, #1
 800ae60:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800ae64:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ae66:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ae6a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800ae6e:	b108      	cbz	r0, 800ae74 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800ae70:	42ab      	cmp	r3, r5
 800ae72:	d1f8      	bne.n	800ae66 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800ae74:	2300      	movs	r3, #0
 800ae76:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800ae7a:	9d08      	ldr	r5, [sp, #32]
 800ae7c:	2d37      	cmp	r5, #55	; 0x37
 800ae7e:	bf28      	it	cs
 800ae80:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800ae82:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800ae86:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800ae88:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ae8a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800ae8c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ae90:	f7fe ffbb 	bl	8009e0a <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ae94:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800ae98:	f104 0018 	add.w	r0, r4, #24
 800ae9c:	f7fe ffb5 	bl	8009e0a <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800aea0:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800aea4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800aea6:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800aea8:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800aeaa:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800aeae:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800aeb2:	463a      	mov	r2, r7
 800aeb4:	4631      	mov	r1, r6
 800aeb6:	4648      	mov	r0, r9
 800aeb8:	f7ff f81c 	bl	8009ef4 <pxPortInitialiseStack>
 800aebc:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800aebe:	f1b8 0f00 	cmp.w	r8, #0
 800aec2:	d001      	beq.n	800aec8 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800aec4:	f8c8 4000 	str.w	r4, [r8]
}
 800aec8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800aecc:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800aed0:	e7d3      	b.n	800ae7a <prvInitialiseNewTask.constprop.0+0x46>

0800aed2 <xTaskCreateStatic>:
	{
 800aed2:	b570      	push	{r4, r5, r6, lr}
 800aed4:	b086      	sub	sp, #24
 800aed6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800aeda:	b945      	cbnz	r5, 800aeee <xTaskCreateStatic+0x1c>
 800aedc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aee0:	f383 8811 	msr	BASEPRI, r3
 800aee4:	f3bf 8f6f 	isb	sy
 800aee8:	f3bf 8f4f 	dsb	sy
 800aeec:	e7fe      	b.n	800aeec <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800aeee:	b944      	cbnz	r4, 800af02 <xTaskCreateStatic+0x30>
 800aef0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aef4:	f383 8811 	msr	BASEPRI, r3
 800aef8:	f3bf 8f6f 	isb	sy
 800aefc:	f3bf 8f4f 	dsb	sy
 800af00:	e7fe      	b.n	800af00 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800af02:	2660      	movs	r6, #96	; 0x60
 800af04:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800af06:	9e05      	ldr	r6, [sp, #20]
 800af08:	2e60      	cmp	r6, #96	; 0x60
 800af0a:	d008      	beq.n	800af1e <xTaskCreateStatic+0x4c>
 800af0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af10:	f383 8811 	msr	BASEPRI, r3
 800af14:	f3bf 8f6f 	isb	sy
 800af18:	f3bf 8f4f 	dsb	sy
 800af1c:	e7fe      	b.n	800af1c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800af1e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800af20:	2502      	movs	r5, #2
 800af22:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800af26:	ad04      	add	r5, sp, #16
 800af28:	9501      	str	r5, [sp, #4]
 800af2a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800af2c:	9402      	str	r4, [sp, #8]
 800af2e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800af30:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800af32:	f7ff ff7f 	bl	800ae34 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800af36:	4620      	mov	r0, r4
 800af38:	f7ff fe66 	bl	800ac08 <prvAddNewTaskToReadyList>
	}
 800af3c:	9804      	ldr	r0, [sp, #16]
 800af3e:	b006      	add	sp, #24
 800af40:	bd70      	pop	{r4, r5, r6, pc}

0800af42 <xTaskCreate>:
	{
 800af42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af46:	4607      	mov	r7, r0
 800af48:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800af4a:	0090      	lsls	r0, r2, #2
	{
 800af4c:	4688      	mov	r8, r1
 800af4e:	4616      	mov	r6, r2
 800af50:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800af52:	f7fe fe79 	bl	8009c48 <pvPortMalloc>
			if( pxStack != NULL )
 800af56:	4605      	mov	r5, r0
 800af58:	b1e8      	cbz	r0, 800af96 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800af5a:	2060      	movs	r0, #96	; 0x60
 800af5c:	f7fe fe74 	bl	8009c48 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800af60:	4604      	mov	r4, r0
 800af62:	b1a8      	cbz	r0, 800af90 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800af64:	2300      	movs	r3, #0
 800af66:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800af6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800af6c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800af6e:	9301      	str	r3, [sp, #4]
 800af70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800af72:	9002      	str	r0, [sp, #8]
 800af74:	9300      	str	r3, [sp, #0]
 800af76:	4632      	mov	r2, r6
 800af78:	464b      	mov	r3, r9
 800af7a:	4641      	mov	r1, r8
 800af7c:	4638      	mov	r0, r7
 800af7e:	f7ff ff59 	bl	800ae34 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800af82:	4620      	mov	r0, r4
 800af84:	f7ff fe40 	bl	800ac08 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800af88:	2001      	movs	r0, #1
	}
 800af8a:	b005      	add	sp, #20
 800af8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800af90:	4628      	mov	r0, r5
 800af92:	f7fe fef1 	bl	8009d78 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800af96:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800af9a:	e7f6      	b.n	800af8a <xTaskCreate+0x48>

0800af9c <vTaskStartScheduler>:
{
 800af9c:	b510      	push	{r4, lr}
 800af9e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800afa0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800afa2:	aa07      	add	r2, sp, #28
 800afa4:	a906      	add	r1, sp, #24
 800afa6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800afa8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800afac:	f7fe fe10 	bl	8009bd0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800afb0:	9b05      	ldr	r3, [sp, #20]
 800afb2:	9302      	str	r3, [sp, #8]
 800afb4:	9b06      	ldr	r3, [sp, #24]
 800afb6:	9a07      	ldr	r2, [sp, #28]
 800afb8:	4916      	ldr	r1, [pc, #88]	; (800b014 <vTaskStartScheduler+0x78>)
 800afba:	4817      	ldr	r0, [pc, #92]	; (800b018 <vTaskStartScheduler+0x7c>)
 800afbc:	e9cd 4300 	strd	r4, r3, [sp]
 800afc0:	4623      	mov	r3, r4
 800afc2:	f7ff ff86 	bl	800aed2 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800afc6:	b318      	cbz	r0, 800b010 <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800afc8:	f000 fbb4 	bl	800b734 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800afcc:	2801      	cmp	r0, #1
 800afce:	d114      	bne.n	800affa <vTaskStartScheduler+0x5e>
 800afd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800afd4:	f383 8811 	msr	BASEPRI, r3
 800afd8:	f3bf 8f6f 	isb	sy
 800afdc:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800afe0:	4b0e      	ldr	r3, [pc, #56]	; (800b01c <vTaskStartScheduler+0x80>)
 800afe2:	f04f 32ff 	mov.w	r2, #4294967295
 800afe6:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800afe8:	4b0d      	ldr	r3, [pc, #52]	; (800b020 <vTaskStartScheduler+0x84>)
 800afea:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800afec:	4b0d      	ldr	r3, [pc, #52]	; (800b024 <vTaskStartScheduler+0x88>)
 800afee:	601c      	str	r4, [r3, #0]
}
 800aff0:	b008      	add	sp, #32
 800aff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800aff6:	f7ff b835 	b.w	800a064 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800affa:	3001      	adds	r0, #1
 800affc:	d108      	bne.n	800b010 <vTaskStartScheduler+0x74>
 800affe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b002:	f383 8811 	msr	BASEPRI, r3
 800b006:	f3bf 8f6f 	isb	sy
 800b00a:	f3bf 8f4f 	dsb	sy
 800b00e:	e7fe      	b.n	800b00e <vTaskStartScheduler+0x72>
}
 800b010:	b008      	add	sp, #32
 800b012:	bd10      	pop	{r4, pc}
 800b014:	08022fcc 	.word	0x08022fcc
 800b018:	0800add5 	.word	0x0800add5
 800b01c:	20014e38 	.word	0x20014e38
 800b020:	20014e58 	.word	0x20014e58
 800b024:	20014e84 	.word	0x20014e84

0800b028 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800b028:	4a02      	ldr	r2, [pc, #8]	; (800b034 <vTaskSuspendAll+0xc>)
 800b02a:	6813      	ldr	r3, [r2, #0]
 800b02c:	3301      	adds	r3, #1
 800b02e:	6013      	str	r3, [r2, #0]
}
 800b030:	4770      	bx	lr
 800b032:	bf00      	nop
 800b034:	20014e04 	.word	0x20014e04

0800b038 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800b038:	4b01      	ldr	r3, [pc, #4]	; (800b040 <xTaskGetTickCount+0x8>)
 800b03a:	6818      	ldr	r0, [r3, #0]
}
 800b03c:	4770      	bx	lr
 800b03e:	bf00      	nop
 800b040:	20014e84 	.word	0x20014e84

0800b044 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b044:	4b3f      	ldr	r3, [pc, #252]	; (800b144 <xTaskIncrementTick+0x100>)
 800b046:	681b      	ldr	r3, [r3, #0]
{
 800b048:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b04c:	2b00      	cmp	r3, #0
 800b04e:	d173      	bne.n	800b138 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800b050:	4b3d      	ldr	r3, [pc, #244]	; (800b148 <xTaskIncrementTick+0x104>)
 800b052:	681d      	ldr	r5, [r3, #0]
 800b054:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800b056:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800b058:	b9bd      	cbnz	r5, 800b08a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800b05a:	4b3c      	ldr	r3, [pc, #240]	; (800b14c <xTaskIncrementTick+0x108>)
 800b05c:	681a      	ldr	r2, [r3, #0]
 800b05e:	6812      	ldr	r2, [r2, #0]
 800b060:	b142      	cbz	r2, 800b074 <xTaskIncrementTick+0x30>
 800b062:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b066:	f383 8811 	msr	BASEPRI, r3
 800b06a:	f3bf 8f6f 	isb	sy
 800b06e:	f3bf 8f4f 	dsb	sy
 800b072:	e7fe      	b.n	800b072 <xTaskIncrementTick+0x2e>
 800b074:	4a36      	ldr	r2, [pc, #216]	; (800b150 <xTaskIncrementTick+0x10c>)
 800b076:	6819      	ldr	r1, [r3, #0]
 800b078:	6810      	ldr	r0, [r2, #0]
 800b07a:	6018      	str	r0, [r3, #0]
 800b07c:	6011      	str	r1, [r2, #0]
 800b07e:	4a35      	ldr	r2, [pc, #212]	; (800b154 <xTaskIncrementTick+0x110>)
 800b080:	6813      	ldr	r3, [r2, #0]
 800b082:	3301      	adds	r3, #1
 800b084:	6013      	str	r3, [r2, #0]
 800b086:	f7ff fe77 	bl	800ad78 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b08a:	4e33      	ldr	r6, [pc, #204]	; (800b158 <xTaskIncrementTick+0x114>)
 800b08c:	4f33      	ldr	r7, [pc, #204]	; (800b15c <xTaskIncrementTick+0x118>)
 800b08e:	6833      	ldr	r3, [r6, #0]
 800b090:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800b168 <xTaskIncrementTick+0x124>
 800b094:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800b096:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800b09a:	d211      	bcs.n	800b0c0 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800b09c:	f8d8 3000 	ldr.w	r3, [r8]
 800b0a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0a2:	2214      	movs	r2, #20
 800b0a4:	4353      	muls	r3, r2
 800b0a6:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800b0a8:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800b0aa:	4b2d      	ldr	r3, [pc, #180]	; (800b160 <xTaskIncrementTick+0x11c>)
 800b0ac:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800b0ae:	bf28      	it	cs
 800b0b0:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800b0b2:	2b00      	cmp	r3, #0
 800b0b4:	bf18      	it	ne
 800b0b6:	2401      	movne	r4, #1
}
 800b0b8:	4620      	mov	r0, r4
 800b0ba:	b003      	add	sp, #12
 800b0bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b0c0:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800b14c <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800b0c4:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800b16c <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b0c8:	f8d9 3000 	ldr.w	r3, [r9]
 800b0cc:	681b      	ldr	r3, [r3, #0]
 800b0ce:	b91b      	cbnz	r3, 800b0d8 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b0d0:	f04f 33ff 	mov.w	r3, #4294967295
 800b0d4:	6033      	str	r3, [r6, #0]
					break;
 800b0d6:	e7e1      	b.n	800b09c <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b0d8:	f8d9 3000 	ldr.w	r3, [r9]
 800b0dc:	68db      	ldr	r3, [r3, #12]
 800b0de:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800b0e2:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800b0e6:	4295      	cmp	r5, r2
 800b0e8:	d201      	bcs.n	800b0ee <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800b0ea:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800b0ec:	e7d6      	b.n	800b09c <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b0ee:	f10b 0104 	add.w	r1, fp, #4
 800b0f2:	4608      	mov	r0, r1
 800b0f4:	9101      	str	r1, [sp, #4]
 800b0f6:	f7fe feae 	bl	8009e56 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800b0fa:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800b0fe:	9901      	ldr	r1, [sp, #4]
 800b100:	b122      	cbz	r2, 800b10c <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b102:	f10b 0018 	add.w	r0, fp, #24
 800b106:	f7fe fea6 	bl	8009e56 <uxListRemove>
 800b10a:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800b10c:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800b110:	f8da 2000 	ldr.w	r2, [sl]
 800b114:	2314      	movs	r3, #20
 800b116:	4290      	cmp	r0, r2
 800b118:	bf88      	it	hi
 800b11a:	f8ca 0000 	strhi.w	r0, [sl]
 800b11e:	fb03 7000 	mla	r0, r3, r0, r7
 800b122:	f7fe fe75 	bl	8009e10 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b126:	f8d8 1000 	ldr.w	r1, [r8]
 800b12a:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800b12e:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800b130:	429a      	cmp	r2, r3
 800b132:	bf28      	it	cs
 800b134:	2401      	movcs	r4, #1
 800b136:	e7c7      	b.n	800b0c8 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800b138:	4a0a      	ldr	r2, [pc, #40]	; (800b164 <xTaskIncrementTick+0x120>)
 800b13a:	6813      	ldr	r3, [r2, #0]
 800b13c:	3301      	adds	r3, #1
 800b13e:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800b140:	2400      	movs	r4, #0
	return xSwitchRequired;
 800b142:	e7b9      	b.n	800b0b8 <xTaskIncrementTick+0x74>
 800b144:	20014e04 	.word	0x20014e04
 800b148:	20014e84 	.word	0x20014e84
 800b14c:	20014994 	.word	0x20014994
 800b150:	20014998 	.word	0x20014998
 800b154:	20014e3c 	.word	0x20014e3c
 800b158:	20014e38 	.word	0x20014e38
 800b15c:	2001499c 	.word	0x2001499c
 800b160:	20014e88 	.word	0x20014e88
 800b164:	20014e40 	.word	0x20014e40
 800b168:	20014990 	.word	0x20014990
 800b16c:	20014e0c 	.word	0x20014e0c

0800b170 <xTaskResumeAll>:
{
 800b170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800b172:	4c31      	ldr	r4, [pc, #196]	; (800b238 <xTaskResumeAll+0xc8>)
 800b174:	6823      	ldr	r3, [r4, #0]
 800b176:	b943      	cbnz	r3, 800b18a <xTaskResumeAll+0x1a>
 800b178:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b17c:	f383 8811 	msr	BASEPRI, r3
 800b180:	f3bf 8f6f 	isb	sy
 800b184:	f3bf 8f4f 	dsb	sy
 800b188:	e7fe      	b.n	800b188 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800b18a:	f7fe fedb 	bl	8009f44 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800b18e:	6823      	ldr	r3, [r4, #0]
 800b190:	3b01      	subs	r3, #1
 800b192:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b194:	6824      	ldr	r4, [r4, #0]
 800b196:	b12c      	cbz	r4, 800b1a4 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800b198:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b19a:	f7fe fef3 	bl	8009f84 <vPortExitCritical>
}
 800b19e:	4620      	mov	r0, r4
 800b1a0:	b003      	add	sp, #12
 800b1a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800b1a4:	4b25      	ldr	r3, [pc, #148]	; (800b23c <xTaskResumeAll+0xcc>)
 800b1a6:	681b      	ldr	r3, [r3, #0]
 800b1a8:	2b00      	cmp	r3, #0
 800b1aa:	d0f5      	beq.n	800b198 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b1ac:	4d24      	ldr	r5, [pc, #144]	; (800b240 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800b1ae:	4e25      	ldr	r6, [pc, #148]	; (800b244 <xTaskResumeAll+0xd4>)
 800b1b0:	4f25      	ldr	r7, [pc, #148]	; (800b248 <xTaskResumeAll+0xd8>)
 800b1b2:	e01e      	b.n	800b1f2 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b1b4:	68eb      	ldr	r3, [r5, #12]
 800b1b6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b1b8:	f104 0018 	add.w	r0, r4, #24
 800b1bc:	f7fe fe4b 	bl	8009e56 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b1c0:	1d21      	adds	r1, r4, #4
 800b1c2:	4608      	mov	r0, r1
 800b1c4:	9101      	str	r1, [sp, #4]
 800b1c6:	f7fe fe46 	bl	8009e56 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b1ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b1cc:	6832      	ldr	r2, [r6, #0]
 800b1ce:	9901      	ldr	r1, [sp, #4]
 800b1d0:	2014      	movs	r0, #20
 800b1d2:	4293      	cmp	r3, r2
 800b1d4:	fb00 7003 	mla	r0, r0, r3, r7
 800b1d8:	bf88      	it	hi
 800b1da:	6033      	strhi	r3, [r6, #0]
 800b1dc:	f7fe fe18 	bl	8009e10 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b1e0:	4b1a      	ldr	r3, [pc, #104]	; (800b24c <xTaskResumeAll+0xdc>)
 800b1e2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b1e4:	681b      	ldr	r3, [r3, #0]
 800b1e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1e8:	429a      	cmp	r2, r3
 800b1ea:	d302      	bcc.n	800b1f2 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800b1ec:	4b18      	ldr	r3, [pc, #96]	; (800b250 <xTaskResumeAll+0xe0>)
 800b1ee:	2201      	movs	r2, #1
 800b1f0:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b1f2:	682b      	ldr	r3, [r5, #0]
 800b1f4:	2b00      	cmp	r3, #0
 800b1f6:	d1dd      	bne.n	800b1b4 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800b1f8:	b10c      	cbz	r4, 800b1fe <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800b1fa:	f7ff fdbd 	bl	800ad78 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800b1fe:	4d15      	ldr	r5, [pc, #84]	; (800b254 <xTaskResumeAll+0xe4>)
 800b200:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800b202:	b144      	cbz	r4, 800b216 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800b204:	4e12      	ldr	r6, [pc, #72]	; (800b250 <xTaskResumeAll+0xe0>)
 800b206:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800b208:	f7ff ff1c 	bl	800b044 <xTaskIncrementTick>
 800b20c:	b100      	cbz	r0, 800b210 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800b20e:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800b210:	3c01      	subs	r4, #1
 800b212:	d1f9      	bne.n	800b208 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800b214:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800b216:	4b0e      	ldr	r3, [pc, #56]	; (800b250 <xTaskResumeAll+0xe0>)
 800b218:	681b      	ldr	r3, [r3, #0]
 800b21a:	2b00      	cmp	r3, #0
 800b21c:	d0bc      	beq.n	800b198 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800b21e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b222:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b226:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b22a:	f3bf 8f4f 	dsb	sy
 800b22e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800b232:	2401      	movs	r4, #1
 800b234:	e7b1      	b.n	800b19a <xTaskResumeAll+0x2a>
 800b236:	bf00      	nop
 800b238:	20014e04 	.word	0x20014e04
 800b23c:	20014dfc 	.word	0x20014dfc
 800b240:	20014e44 	.word	0x20014e44
 800b244:	20014e0c 	.word	0x20014e0c
 800b248:	2001499c 	.word	0x2001499c
 800b24c:	20014990 	.word	0x20014990
 800b250:	20014e88 	.word	0x20014e88
 800b254:	20014e40 	.word	0x20014e40

0800b258 <vTaskDelay>:
	{
 800b258:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800b25a:	b950      	cbnz	r0, 800b272 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800b25c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b260:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b264:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b268:	f3bf 8f4f 	dsb	sy
 800b26c:	f3bf 8f6f 	isb	sy
	}
 800b270:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800b272:	4b0a      	ldr	r3, [pc, #40]	; (800b29c <vTaskDelay+0x44>)
 800b274:	6819      	ldr	r1, [r3, #0]
 800b276:	b141      	cbz	r1, 800b28a <vTaskDelay+0x32>
 800b278:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b27c:	f383 8811 	msr	BASEPRI, r3
 800b280:	f3bf 8f6f 	isb	sy
 800b284:	f3bf 8f4f 	dsb	sy
 800b288:	e7fe      	b.n	800b288 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800b28a:	f7ff fecd 	bl	800b028 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800b28e:	f7ff fd3b 	bl	800ad08 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800b292:	f7ff ff6d 	bl	800b170 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800b296:	2800      	cmp	r0, #0
 800b298:	d0e0      	beq.n	800b25c <vTaskDelay+0x4>
 800b29a:	e7e9      	b.n	800b270 <vTaskDelay+0x18>
 800b29c:	20014e04 	.word	0x20014e04

0800b2a0 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800b2a0:	4b17      	ldr	r3, [pc, #92]	; (800b300 <vTaskSwitchContext+0x60>)
 800b2a2:	681a      	ldr	r2, [r3, #0]
 800b2a4:	4b17      	ldr	r3, [pc, #92]	; (800b304 <vTaskSwitchContext+0x64>)
{
 800b2a6:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800b2a8:	b112      	cbz	r2, 800b2b0 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800b2aa:	2201      	movs	r2, #1
 800b2ac:	601a      	str	r2, [r3, #0]
}
 800b2ae:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b2b0:	4d15      	ldr	r5, [pc, #84]	; (800b308 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800b2b2:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b2b4:	682a      	ldr	r2, [r5, #0]
 800b2b6:	4915      	ldr	r1, [pc, #84]	; (800b30c <vTaskSwitchContext+0x6c>)
 800b2b8:	2614      	movs	r6, #20
 800b2ba:	fb06 f302 	mul.w	r3, r6, r2
 800b2be:	18c8      	adds	r0, r1, r3
 800b2c0:	58cc      	ldr	r4, [r1, r3]
 800b2c2:	b18c      	cbz	r4, 800b2e8 <vTaskSwitchContext+0x48>
 800b2c4:	6844      	ldr	r4, [r0, #4]
 800b2c6:	3308      	adds	r3, #8
 800b2c8:	6864      	ldr	r4, [r4, #4]
 800b2ca:	6044      	str	r4, [r0, #4]
 800b2cc:	440b      	add	r3, r1
 800b2ce:	429c      	cmp	r4, r3
 800b2d0:	bf04      	itt	eq
 800b2d2:	6863      	ldreq	r3, [r4, #4]
 800b2d4:	6043      	streq	r3, [r0, #4]
 800b2d6:	2314      	movs	r3, #20
 800b2d8:	fb03 1102 	mla	r1, r3, r2, r1
 800b2dc:	684b      	ldr	r3, [r1, #4]
 800b2de:	68d9      	ldr	r1, [r3, #12]
 800b2e0:	4b0b      	ldr	r3, [pc, #44]	; (800b310 <vTaskSwitchContext+0x70>)
 800b2e2:	6019      	str	r1, [r3, #0]
 800b2e4:	602a      	str	r2, [r5, #0]
}
 800b2e6:	e7e2      	b.n	800b2ae <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b2e8:	b942      	cbnz	r2, 800b2fc <vTaskSwitchContext+0x5c>
 800b2ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2ee:	f383 8811 	msr	BASEPRI, r3
 800b2f2:	f3bf 8f6f 	isb	sy
 800b2f6:	f3bf 8f4f 	dsb	sy
 800b2fa:	e7fe      	b.n	800b2fa <vTaskSwitchContext+0x5a>
 800b2fc:	3a01      	subs	r2, #1
 800b2fe:	e7dc      	b.n	800b2ba <vTaskSwitchContext+0x1a>
 800b300:	20014e04 	.word	0x20014e04
 800b304:	20014e88 	.word	0x20014e88
 800b308:	20014e0c 	.word	0x20014e0c
 800b30c:	2001499c 	.word	0x2001499c
 800b310:	20014990 	.word	0x20014990

0800b314 <vTaskPlaceOnEventList>:
{
 800b314:	b510      	push	{r4, lr}
 800b316:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800b318:	b940      	cbnz	r0, 800b32c <vTaskPlaceOnEventList+0x18>
 800b31a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b31e:	f383 8811 	msr	BASEPRI, r3
 800b322:	f3bf 8f6f 	isb	sy
 800b326:	f3bf 8f4f 	dsb	sy
 800b32a:	e7fe      	b.n	800b32a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b32c:	4b05      	ldr	r3, [pc, #20]	; (800b344 <vTaskPlaceOnEventList+0x30>)
 800b32e:	6819      	ldr	r1, [r3, #0]
 800b330:	3118      	adds	r1, #24
 800b332:	f7fe fd79 	bl	8009e28 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b336:	4620      	mov	r0, r4
 800b338:	2101      	movs	r1, #1
}
 800b33a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b33e:	f7ff bce3 	b.w	800ad08 <prvAddCurrentTaskToDelayedList>
 800b342:	bf00      	nop
 800b344:	20014990 	.word	0x20014990

0800b348 <vTaskPlaceOnEventListRestricted>:
	{
 800b348:	b538      	push	{r3, r4, r5, lr}
 800b34a:	460d      	mov	r5, r1
 800b34c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800b34e:	b940      	cbnz	r0, 800b362 <vTaskPlaceOnEventListRestricted+0x1a>
 800b350:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b354:	f383 8811 	msr	BASEPRI, r3
 800b358:	f3bf 8f6f 	isb	sy
 800b35c:	f3bf 8f4f 	dsb	sy
 800b360:	e7fe      	b.n	800b360 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b362:	4b07      	ldr	r3, [pc, #28]	; (800b380 <vTaskPlaceOnEventListRestricted+0x38>)
 800b364:	6819      	ldr	r1, [r3, #0]
 800b366:	3118      	adds	r1, #24
 800b368:	f7fe fd52 	bl	8009e10 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800b36c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b36e:	4621      	mov	r1, r4
 800b370:	bf0c      	ite	eq
 800b372:	4628      	moveq	r0, r5
 800b374:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800b378:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b37c:	f7ff bcc4 	b.w	800ad08 <prvAddCurrentTaskToDelayedList>
 800b380:	20014990 	.word	0x20014990

0800b384 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b384:	68c3      	ldr	r3, [r0, #12]
{
 800b386:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b388:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800b38a:	b944      	cbnz	r4, 800b39e <xTaskRemoveFromEventList+0x1a>
 800b38c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b390:	f383 8811 	msr	BASEPRI, r3
 800b394:	f3bf 8f6f 	isb	sy
 800b398:	f3bf 8f4f 	dsb	sy
 800b39c:	e7fe      	b.n	800b39c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800b39e:	f104 0118 	add.w	r1, r4, #24
 800b3a2:	4608      	mov	r0, r1
 800b3a4:	9101      	str	r1, [sp, #4]
 800b3a6:	f7fe fd56 	bl	8009e56 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b3aa:	4b12      	ldr	r3, [pc, #72]	; (800b3f4 <xTaskRemoveFromEventList+0x70>)
 800b3ac:	9901      	ldr	r1, [sp, #4]
 800b3ae:	681b      	ldr	r3, [r3, #0]
 800b3b0:	b9eb      	cbnz	r3, 800b3ee <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800b3b2:	1d21      	adds	r1, r4, #4
 800b3b4:	4608      	mov	r0, r1
 800b3b6:	9101      	str	r1, [sp, #4]
 800b3b8:	f7fe fd4d 	bl	8009e56 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800b3bc:	4a0e      	ldr	r2, [pc, #56]	; (800b3f8 <xTaskRemoveFromEventList+0x74>)
 800b3be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b3c0:	6810      	ldr	r0, [r2, #0]
 800b3c2:	9901      	ldr	r1, [sp, #4]
 800b3c4:	4283      	cmp	r3, r0
 800b3c6:	bf88      	it	hi
 800b3c8:	6013      	strhi	r3, [r2, #0]
 800b3ca:	4a0c      	ldr	r2, [pc, #48]	; (800b3fc <xTaskRemoveFromEventList+0x78>)
 800b3cc:	2014      	movs	r0, #20
 800b3ce:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b3d2:	f7fe fd1d 	bl	8009e10 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800b3d6:	4b0a      	ldr	r3, [pc, #40]	; (800b400 <xTaskRemoveFromEventList+0x7c>)
 800b3d8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b3da:	681b      	ldr	r3, [r3, #0]
 800b3dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3de:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800b3e0:	bf85      	ittet	hi
 800b3e2:	4b08      	ldrhi	r3, [pc, #32]	; (800b404 <xTaskRemoveFromEventList+0x80>)
 800b3e4:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800b3e6:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800b3e8:	6018      	strhi	r0, [r3, #0]
}
 800b3ea:	b002      	add	sp, #8
 800b3ec:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b3ee:	4806      	ldr	r0, [pc, #24]	; (800b408 <xTaskRemoveFromEventList+0x84>)
 800b3f0:	e7ef      	b.n	800b3d2 <xTaskRemoveFromEventList+0x4e>
 800b3f2:	bf00      	nop
 800b3f4:	20014e04 	.word	0x20014e04
 800b3f8:	20014e0c 	.word	0x20014e0c
 800b3fc:	2001499c 	.word	0x2001499c
 800b400:	20014990 	.word	0x20014990
 800b404:	20014e88 	.word	0x20014e88
 800b408:	20014e44 	.word	0x20014e44

0800b40c <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800b40c:	4b03      	ldr	r3, [pc, #12]	; (800b41c <vTaskInternalSetTimeOutState+0x10>)
 800b40e:	681b      	ldr	r3, [r3, #0]
 800b410:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800b412:	4b03      	ldr	r3, [pc, #12]	; (800b420 <vTaskInternalSetTimeOutState+0x14>)
 800b414:	681b      	ldr	r3, [r3, #0]
 800b416:	6043      	str	r3, [r0, #4]
}
 800b418:	4770      	bx	lr
 800b41a:	bf00      	nop
 800b41c:	20014e3c 	.word	0x20014e3c
 800b420:	20014e84 	.word	0x20014e84

0800b424 <xTaskCheckForTimeOut>:
{
 800b424:	b570      	push	{r4, r5, r6, lr}
 800b426:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800b428:	4605      	mov	r5, r0
 800b42a:	b940      	cbnz	r0, 800b43e <xTaskCheckForTimeOut+0x1a>
 800b42c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b430:	f383 8811 	msr	BASEPRI, r3
 800b434:	f3bf 8f6f 	isb	sy
 800b438:	f3bf 8f4f 	dsb	sy
 800b43c:	e7fe      	b.n	800b43c <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800b43e:	b941      	cbnz	r1, 800b452 <xTaskCheckForTimeOut+0x2e>
 800b440:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b444:	f383 8811 	msr	BASEPRI, r3
 800b448:	f3bf 8f6f 	isb	sy
 800b44c:	f3bf 8f4f 	dsb	sy
 800b450:	e7fe      	b.n	800b450 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800b452:	f7fe fd77 	bl	8009f44 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800b456:	4b0f      	ldr	r3, [pc, #60]	; (800b494 <xTaskCheckForTimeOut+0x70>)
 800b458:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800b45a:	6823      	ldr	r3, [r4, #0]
 800b45c:	1c5a      	adds	r2, r3, #1
 800b45e:	d010      	beq.n	800b482 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b460:	480d      	ldr	r0, [pc, #52]	; (800b498 <xTaskCheckForTimeOut+0x74>)
 800b462:	682e      	ldr	r6, [r5, #0]
 800b464:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b466:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b468:	4286      	cmp	r6, r0
 800b46a:	d001      	beq.n	800b470 <xTaskCheckForTimeOut+0x4c>
 800b46c:	428a      	cmp	r2, r1
 800b46e:	d90f      	bls.n	800b490 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b470:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800b472:	4283      	cmp	r3, r0
 800b474:	d90a      	bls.n	800b48c <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800b476:	1a5b      	subs	r3, r3, r1
 800b478:	4413      	add	r3, r2
 800b47a:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800b47c:	4628      	mov	r0, r5
 800b47e:	f7ff ffc5 	bl	800b40c <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800b482:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b484:	f7fe fd7e 	bl	8009f84 <vPortExitCritical>
}
 800b488:	4620      	mov	r0, r4
 800b48a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800b48c:	2300      	movs	r3, #0
 800b48e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800b490:	2401      	movs	r4, #1
 800b492:	e7f7      	b.n	800b484 <xTaskCheckForTimeOut+0x60>
 800b494:	20014e84 	.word	0x20014e84
 800b498:	20014e3c 	.word	0x20014e3c

0800b49c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800b49c:	4b01      	ldr	r3, [pc, #4]	; (800b4a4 <vTaskMissedYield+0x8>)
 800b49e:	2201      	movs	r2, #1
 800b4a0:	601a      	str	r2, [r3, #0]
}
 800b4a2:	4770      	bx	lr
 800b4a4:	20014e88 	.word	0x20014e88

0800b4a8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800b4a8:	4b05      	ldr	r3, [pc, #20]	; (800b4c0 <xTaskGetSchedulerState+0x18>)
 800b4aa:	681b      	ldr	r3, [r3, #0]
 800b4ac:	b133      	cbz	r3, 800b4bc <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b4ae:	4b05      	ldr	r3, [pc, #20]	; (800b4c4 <xTaskGetSchedulerState+0x1c>)
 800b4b0:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800b4b2:	2b00      	cmp	r3, #0
 800b4b4:	bf0c      	ite	eq
 800b4b6:	2002      	moveq	r0, #2
 800b4b8:	2000      	movne	r0, #0
 800b4ba:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800b4bc:	2001      	movs	r0, #1
	}
 800b4be:	4770      	bx	lr
 800b4c0:	20014e58 	.word	0x20014e58
 800b4c4:	20014e04 	.word	0x20014e04

0800b4c8 <xTaskPriorityInherit>:
	{
 800b4c8:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800b4ca:	4604      	mov	r4, r0
 800b4cc:	b348      	cbz	r0, 800b522 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800b4ce:	4d1c      	ldr	r5, [pc, #112]	; (800b540 <xTaskPriorityInherit+0x78>)
 800b4d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b4d2:	682a      	ldr	r2, [r5, #0]
 800b4d4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800b4d6:	4293      	cmp	r3, r2
 800b4d8:	d229      	bcs.n	800b52e <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b4da:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b4dc:	4e19      	ldr	r6, [pc, #100]	; (800b544 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b4de:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b4e0:	bfa1      	itttt	ge
 800b4e2:	682a      	ldrge	r2, [r5, #0]
 800b4e4:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800b4e6:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800b4ea:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b4ec:	2214      	movs	r2, #20
 800b4ee:	fb02 6303 	mla	r3, r2, r3, r6
 800b4f2:	6942      	ldr	r2, [r0, #20]
 800b4f4:	429a      	cmp	r2, r3
 800b4f6:	d116      	bne.n	800b526 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b4f8:	1d01      	adds	r1, r0, #4
 800b4fa:	4608      	mov	r0, r1
 800b4fc:	9101      	str	r1, [sp, #4]
 800b4fe:	f7fe fcaa 	bl	8009e56 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b502:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b504:	4a10      	ldr	r2, [pc, #64]	; (800b548 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b506:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b508:	6810      	ldr	r0, [r2, #0]
 800b50a:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b50c:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b50e:	4283      	cmp	r3, r0
 800b510:	f04f 0014 	mov.w	r0, #20
 800b514:	fb00 6003 	mla	r0, r0, r3, r6
 800b518:	bf88      	it	hi
 800b51a:	6013      	strhi	r3, [r2, #0]
 800b51c:	f7fe fc78 	bl	8009e10 <vListInsertEnd>
				xReturn = pdTRUE;
 800b520:	2001      	movs	r0, #1
	}
 800b522:	b002      	add	sp, #8
 800b524:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b526:	682b      	ldr	r3, [r5, #0]
 800b528:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b52a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800b52c:	e7f8      	b.n	800b520 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800b52e:	682b      	ldr	r3, [r5, #0]
 800b530:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800b532:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800b534:	42a0      	cmp	r0, r4
 800b536:	bf2c      	ite	cs
 800b538:	2000      	movcs	r0, #0
 800b53a:	2001      	movcc	r0, #1
 800b53c:	e7f1      	b.n	800b522 <xTaskPriorityInherit+0x5a>
 800b53e:	bf00      	nop
 800b540:	20014990 	.word	0x20014990
 800b544:	2001499c 	.word	0x2001499c
 800b548:	20014e0c 	.word	0x20014e0c

0800b54c <xTaskPriorityDisinherit>:
	{
 800b54c:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800b54e:	b910      	cbnz	r0, 800b556 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800b550:	2000      	movs	r0, #0
	}
 800b552:	b002      	add	sp, #8
 800b554:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800b556:	4b1c      	ldr	r3, [pc, #112]	; (800b5c8 <xTaskPriorityDisinherit+0x7c>)
 800b558:	681c      	ldr	r4, [r3, #0]
 800b55a:	4284      	cmp	r4, r0
 800b55c:	d008      	beq.n	800b570 <xTaskPriorityDisinherit+0x24>
 800b55e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b562:	f383 8811 	msr	BASEPRI, r3
 800b566:	f3bf 8f6f 	isb	sy
 800b56a:	f3bf 8f4f 	dsb	sy
 800b56e:	e7fe      	b.n	800b56e <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800b570:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b572:	b943      	cbnz	r3, 800b586 <xTaskPriorityDisinherit+0x3a>
 800b574:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b578:	f383 8811 	msr	BASEPRI, r3
 800b57c:	f3bf 8f6f 	isb	sy
 800b580:	f3bf 8f4f 	dsb	sy
 800b584:	e7fe      	b.n	800b584 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b586:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800b588:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800b58a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b58c:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800b58e:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b590:	d0de      	beq.n	800b550 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800b592:	2b00      	cmp	r3, #0
 800b594:	d1dc      	bne.n	800b550 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b596:	1d21      	adds	r1, r4, #4
 800b598:	4608      	mov	r0, r1
 800b59a:	9101      	str	r1, [sp, #4]
 800b59c:	f7fe fc5b 	bl	8009e56 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b5a0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800b5a2:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b5a4:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b5a6:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800b5aa:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800b5ac:	4a07      	ldr	r2, [pc, #28]	; (800b5cc <xTaskPriorityDisinherit+0x80>)
 800b5ae:	6810      	ldr	r0, [r2, #0]
 800b5b0:	4283      	cmp	r3, r0
 800b5b2:	bf88      	it	hi
 800b5b4:	6013      	strhi	r3, [r2, #0]
 800b5b6:	4a06      	ldr	r2, [pc, #24]	; (800b5d0 <xTaskPriorityDisinherit+0x84>)
 800b5b8:	2014      	movs	r0, #20
 800b5ba:	fb00 2003 	mla	r0, r0, r3, r2
 800b5be:	f7fe fc27 	bl	8009e10 <vListInsertEnd>
					xReturn = pdTRUE;
 800b5c2:	2001      	movs	r0, #1
		return xReturn;
 800b5c4:	e7c5      	b.n	800b552 <xTaskPriorityDisinherit+0x6>
 800b5c6:	bf00      	nop
 800b5c8:	20014990 	.word	0x20014990
 800b5cc:	20014e0c 	.word	0x20014e0c
 800b5d0:	2001499c 	.word	0x2001499c

0800b5d4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800b5d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800b5d6:	4604      	mov	r4, r0
 800b5d8:	2800      	cmp	r0, #0
 800b5da:	d044      	beq.n	800b666 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800b5dc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b5de:	b942      	cbnz	r2, 800b5f2 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800b5e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b5e4:	f383 8811 	msr	BASEPRI, r3
 800b5e8:	f3bf 8f6f 	isb	sy
 800b5ec:	f3bf 8f4f 	dsb	sy
 800b5f0:	e7fe      	b.n	800b5f0 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800b5f2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800b5f4:	4299      	cmp	r1, r3
 800b5f6:	bf38      	it	cc
 800b5f8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800b5fa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b5fc:	428b      	cmp	r3, r1
 800b5fe:	d032      	beq.n	800b666 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800b600:	2a01      	cmp	r2, #1
 800b602:	d130      	bne.n	800b666 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800b604:	4a19      	ldr	r2, [pc, #100]	; (800b66c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800b606:	6812      	ldr	r2, [r2, #0]
 800b608:	4282      	cmp	r2, r0
 800b60a:	d108      	bne.n	800b61e <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800b60c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b610:	f383 8811 	msr	BASEPRI, r3
 800b614:	f3bf 8f6f 	isb	sy
 800b618:	f3bf 8f4f 	dsb	sy
 800b61c:	e7fe      	b.n	800b61c <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b61e:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b620:	4d13      	ldr	r5, [pc, #76]	; (800b670 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800b622:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b624:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b626:	f04f 0214 	mov.w	r2, #20
 800b62a:	fb02 5303 	mla	r3, r2, r3, r5
 800b62e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b630:	bfa4      	itt	ge
 800b632:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800b636:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b638:	429a      	cmp	r2, r3
 800b63a:	d114      	bne.n	800b666 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b63c:	1d01      	adds	r1, r0, #4
 800b63e:	4608      	mov	r0, r1
 800b640:	9101      	str	r1, [sp, #4]
 800b642:	f7fe fc08 	bl	8009e56 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800b646:	4a0b      	ldr	r2, [pc, #44]	; (800b674 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800b648:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b64a:	6810      	ldr	r0, [r2, #0]
 800b64c:	9901      	ldr	r1, [sp, #4]
 800b64e:	4283      	cmp	r3, r0
 800b650:	f04f 0014 	mov.w	r0, #20
 800b654:	fb00 5003 	mla	r0, r0, r3, r5
 800b658:	bf88      	it	hi
 800b65a:	6013      	strhi	r3, [r2, #0]
	}
 800b65c:	b003      	add	sp, #12
 800b65e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800b662:	f7fe bbd5 	b.w	8009e10 <vListInsertEnd>
	}
 800b666:	b003      	add	sp, #12
 800b668:	bd30      	pop	{r4, r5, pc}
 800b66a:	bf00      	nop
 800b66c:	20014990 	.word	0x20014990
 800b670:	2001499c 	.word	0x2001499c
 800b674:	20014e0c 	.word	0x20014e0c

0800b678 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800b678:	4b04      	ldr	r3, [pc, #16]	; (800b68c <pvTaskIncrementMutexHeldCount+0x14>)
 800b67a:	681a      	ldr	r2, [r3, #0]
 800b67c:	b11a      	cbz	r2, 800b686 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800b67e:	6819      	ldr	r1, [r3, #0]
 800b680:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800b682:	3201      	adds	r2, #1
 800b684:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800b686:	6818      	ldr	r0, [r3, #0]
	}
 800b688:	4770      	bx	lr
 800b68a:	bf00      	nop
 800b68c:	20014990 	.word	0x20014990

0800b690 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800b690:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800b692:	4c11      	ldr	r4, [pc, #68]	; (800b6d8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800b694:	f7fe fc56 	bl	8009f44 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800b698:	6825      	ldr	r5, [r4, #0]
 800b69a:	b9bd      	cbnz	r5, 800b6cc <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800b69c:	4f0f      	ldr	r7, [pc, #60]	; (800b6dc <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800b69e:	4e10      	ldr	r6, [pc, #64]	; (800b6e0 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800b6a0:	4638      	mov	r0, r7
 800b6a2:	f7fe fba7 	bl	8009df4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800b6a6:	4630      	mov	r0, r6
 800b6a8:	f7fe fba4 	bl	8009df4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800b6ac:	4b0d      	ldr	r3, [pc, #52]	; (800b6e4 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b6ae:	4a0e      	ldr	r2, [pc, #56]	; (800b6e8 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800b6b0:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800b6b2:	4b0e      	ldr	r3, [pc, #56]	; (800b6ec <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b6b4:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800b6b6:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b6b8:	200a      	movs	r0, #10
 800b6ba:	4b0d      	ldr	r3, [pc, #52]	; (800b6f0 <prvCheckForValidListAndQueue+0x60>)
 800b6bc:	9500      	str	r5, [sp, #0]
 800b6be:	f7fe fe52 	bl	800a366 <xQueueGenericCreateStatic>
 800b6c2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800b6c4:	b110      	cbz	r0, 800b6cc <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800b6c6:	490b      	ldr	r1, [pc, #44]	; (800b6f4 <prvCheckForValidListAndQueue+0x64>)
 800b6c8:	f7ff fa3e 	bl	800ab48 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800b6cc:	b003      	add	sp, #12
 800b6ce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800b6d2:	f7fe bc57 	b.w	8009f84 <vPortExitCritical>
 800b6d6:	bf00      	nop
 800b6d8:	20014fb0 	.word	0x20014fb0
 800b6dc:	20014f34 	.word	0x20014f34
 800b6e0:	20014f48 	.word	0x20014f48
 800b6e4:	20014e8c 	.word	0x20014e8c
 800b6e8:	20014e94 	.word	0x20014e94
 800b6ec:	20014e90 	.word	0x20014e90
 800b6f0:	20014f60 	.word	0x20014f60
 800b6f4:	08022fd1 	.word	0x08022fd1

0800b6f8 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800b6f8:	4291      	cmp	r1, r2
{
 800b6fa:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800b6fc:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b6fe:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800b700:	d80a      	bhi.n	800b718 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b702:	1ad2      	subs	r2, r2, r3
 800b704:	6983      	ldr	r3, [r0, #24]
 800b706:	429a      	cmp	r2, r3
 800b708:	d20d      	bcs.n	800b726 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800b70a:	4b08      	ldr	r3, [pc, #32]	; (800b72c <prvInsertTimerInActiveList+0x34>)
 800b70c:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b70e:	6818      	ldr	r0, [r3, #0]
 800b710:	f7fe fb8a 	bl	8009e28 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800b714:	2000      	movs	r0, #0
}
 800b716:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800b718:	429a      	cmp	r2, r3
 800b71a:	d201      	bcs.n	800b720 <prvInsertTimerInActiveList+0x28>
 800b71c:	4299      	cmp	r1, r3
 800b71e:	d202      	bcs.n	800b726 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b720:	4b03      	ldr	r3, [pc, #12]	; (800b730 <prvInsertTimerInActiveList+0x38>)
 800b722:	1d01      	adds	r1, r0, #4
 800b724:	e7f3      	b.n	800b70e <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800b726:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800b728:	e7f5      	b.n	800b716 <prvInsertTimerInActiveList+0x1e>
 800b72a:	bf00      	nop
 800b72c:	20014e90 	.word	0x20014e90
 800b730:	20014e8c 	.word	0x20014e8c

0800b734 <xTimerCreateTimerTask>:
{
 800b734:	b510      	push	{r4, lr}
 800b736:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800b738:	f7ff ffaa 	bl	800b690 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800b73c:	4b12      	ldr	r3, [pc, #72]	; (800b788 <xTimerCreateTimerTask+0x54>)
 800b73e:	681b      	ldr	r3, [r3, #0]
 800b740:	b1b3      	cbz	r3, 800b770 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800b742:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b744:	aa07      	add	r2, sp, #28
 800b746:	a906      	add	r1, sp, #24
 800b748:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800b74a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b74e:	f7fe fa4b 	bl	8009be8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800b752:	9b05      	ldr	r3, [sp, #20]
 800b754:	9302      	str	r3, [sp, #8]
 800b756:	9b06      	ldr	r3, [sp, #24]
 800b758:	9301      	str	r3, [sp, #4]
 800b75a:	2302      	movs	r3, #2
 800b75c:	9300      	str	r3, [sp, #0]
 800b75e:	9a07      	ldr	r2, [sp, #28]
 800b760:	490a      	ldr	r1, [pc, #40]	; (800b78c <xTimerCreateTimerTask+0x58>)
 800b762:	480b      	ldr	r0, [pc, #44]	; (800b790 <xTimerCreateTimerTask+0x5c>)
 800b764:	4623      	mov	r3, r4
 800b766:	f7ff fbb4 	bl	800aed2 <xTaskCreateStatic>
 800b76a:	4b0a      	ldr	r3, [pc, #40]	; (800b794 <xTimerCreateTimerTask+0x60>)
 800b76c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800b76e:	b940      	cbnz	r0, 800b782 <xTimerCreateTimerTask+0x4e>
 800b770:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b774:	f383 8811 	msr	BASEPRI, r3
 800b778:	f3bf 8f6f 	isb	sy
 800b77c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800b780:	e7fe      	b.n	800b780 <xTimerCreateTimerTask+0x4c>
}
 800b782:	2001      	movs	r0, #1
 800b784:	b008      	add	sp, #32
 800b786:	bd10      	pop	{r4, pc}
 800b788:	20014fb0 	.word	0x20014fb0
 800b78c:	08022fd6 	.word	0x08022fd6
 800b790:	0800b89d 	.word	0x0800b89d
 800b794:	20014fb4 	.word	0x20014fb4

0800b798 <xTimerGenericCommand>:
{
 800b798:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b79a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800b79c:	4604      	mov	r4, r0
{
 800b79e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800b7a0:	b940      	cbnz	r0, 800b7b4 <xTimerGenericCommand+0x1c>
 800b7a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7a6:	f383 8811 	msr	BASEPRI, r3
 800b7aa:	f3bf 8f6f 	isb	sy
 800b7ae:	f3bf 8f4f 	dsb	sy
 800b7b2:	e7fe      	b.n	800b7b2 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800b7b4:	4d0d      	ldr	r5, [pc, #52]	; (800b7ec <xTimerGenericCommand+0x54>)
 800b7b6:	6828      	ldr	r0, [r5, #0]
 800b7b8:	b180      	cbz	r0, 800b7dc <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b7ba:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800b7bc:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800b7c0:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b7c2:	dc0d      	bgt.n	800b7e0 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b7c4:	f7ff fe70 	bl	800b4a8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b7c8:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b7ca:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b7cc:	bf08      	it	eq
 800b7ce:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800b7d0:	6828      	ldr	r0, [r5, #0]
 800b7d2:	bf18      	it	ne
 800b7d4:	461a      	movne	r2, r3
 800b7d6:	4669      	mov	r1, sp
 800b7d8:	f7fe fe7a 	bl	800a4d0 <xQueueGenericSend>
}
 800b7dc:	b004      	add	sp, #16
 800b7de:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800b7e0:	2300      	movs	r3, #0
 800b7e2:	4669      	mov	r1, sp
 800b7e4:	f7fe ff27 	bl	800a636 <xQueueGenericSendFromISR>
 800b7e8:	e7f8      	b.n	800b7dc <xTimerGenericCommand+0x44>
 800b7ea:	bf00      	nop
 800b7ec:	20014fb0 	.word	0x20014fb0

0800b7f0 <prvSampleTimeNow>:
{
 800b7f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800b7f4:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800b898 <prvSampleTimeNow+0xa8>
{
 800b7f8:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800b7fa:	f7ff fc1d 	bl	800b038 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800b7fe:	f8d8 3000 	ldr.w	r3, [r8]
 800b802:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800b804:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800b806:	d940      	bls.n	800b88a <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b808:	4f21      	ldr	r7, [pc, #132]	; (800b890 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b80a:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b80e:	683b      	ldr	r3, [r7, #0]
 800b810:	681a      	ldr	r2, [r3, #0]
 800b812:	b95a      	cbnz	r2, 800b82c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800b814:	4a1f      	ldr	r2, [pc, #124]	; (800b894 <prvSampleTimeNow+0xa4>)
 800b816:	6811      	ldr	r1, [r2, #0]
 800b818:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800b81a:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800b81c:	2301      	movs	r3, #1
}
 800b81e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800b820:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800b822:	f8c8 5000 	str.w	r5, [r8]
}
 800b826:	b004      	add	sp, #16
 800b828:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b82c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b82e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b830:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b834:	1d21      	adds	r1, r4, #4
 800b836:	4608      	mov	r0, r1
 800b838:	9103      	str	r1, [sp, #12]
 800b83a:	f7fe fb0c 	bl	8009e56 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b83e:	6a23      	ldr	r3, [r4, #32]
 800b840:	4620      	mov	r0, r4
 800b842:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b844:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b848:	9903      	ldr	r1, [sp, #12]
 800b84a:	f013 0f04 	tst.w	r3, #4
 800b84e:	d0de      	beq.n	800b80e <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800b850:	69a3      	ldr	r3, [r4, #24]
 800b852:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800b854:	459a      	cmp	sl, r3
 800b856:	d205      	bcs.n	800b864 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b858:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800b85a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b85c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b85e:	f7fe fae3 	bl	8009e28 <vListInsert>
 800b862:	e7d4      	b.n	800b80e <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b864:	2300      	movs	r3, #0
 800b866:	f8cd 9000 	str.w	r9, [sp]
 800b86a:	4652      	mov	r2, sl
 800b86c:	4619      	mov	r1, r3
 800b86e:	4620      	mov	r0, r4
 800b870:	f7ff ff92 	bl	800b798 <xTimerGenericCommand>
				configASSERT( xResult );
 800b874:	2800      	cmp	r0, #0
 800b876:	d1ca      	bne.n	800b80e <prvSampleTimeNow+0x1e>
 800b878:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b87c:	f383 8811 	msr	BASEPRI, r3
 800b880:	f3bf 8f6f 	isb	sy
 800b884:	f3bf 8f4f 	dsb	sy
 800b888:	e7fe      	b.n	800b888 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800b88a:	2300      	movs	r3, #0
 800b88c:	e7c7      	b.n	800b81e <prvSampleTimeNow+0x2e>
 800b88e:	bf00      	nop
 800b890:	20014e8c 	.word	0x20014e8c
 800b894:	20014e90 	.word	0x20014e90
 800b898:	20014f5c 	.word	0x20014f5c

0800b89c <prvTimerTask>:
{
 800b89c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b8a0:	4d6e      	ldr	r5, [pc, #440]	; (800ba5c <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b8a2:	4e6f      	ldr	r6, [pc, #444]	; (800ba60 <prvTimerTask+0x1c4>)
{
 800b8a4:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b8a6:	682b      	ldr	r3, [r5, #0]
 800b8a8:	f8d3 8000 	ldr.w	r8, [r3]
 800b8ac:	f1b8 0f00 	cmp.w	r8, #0
 800b8b0:	d035      	beq.n	800b91e <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b8b2:	68db      	ldr	r3, [r3, #12]
 800b8b4:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b8b8:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800b8ba:	f7ff fbb5 	bl	800b028 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b8be:	a804      	add	r0, sp, #16
 800b8c0:	f7ff ff96 	bl	800b7f0 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800b8c4:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b8c6:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800b8c8:	2b00      	cmp	r3, #0
 800b8ca:	d169      	bne.n	800b9a0 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800b8cc:	2c00      	cmp	r4, #0
 800b8ce:	d14c      	bne.n	800b96a <prvTimerTask+0xce>
 800b8d0:	4540      	cmp	r0, r8
 800b8d2:	d350      	bcc.n	800b976 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800b8d4:	f7ff fc4c 	bl	800b170 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b8d8:	682b      	ldr	r3, [r5, #0]
 800b8da:	68db      	ldr	r3, [r3, #12]
 800b8dc:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b8de:	1d38      	adds	r0, r7, #4
 800b8e0:	f7fe fab9 	bl	8009e56 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b8e4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800b8e8:	0758      	lsls	r0, r3, #29
 800b8ea:	d51a      	bpl.n	800b922 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800b8ec:	69b9      	ldr	r1, [r7, #24]
 800b8ee:	4643      	mov	r3, r8
 800b8f0:	464a      	mov	r2, r9
 800b8f2:	4441      	add	r1, r8
 800b8f4:	4638      	mov	r0, r7
 800b8f6:	f7ff feff 	bl	800b6f8 <prvInsertTimerInActiveList>
 800b8fa:	b1b0      	cbz	r0, 800b92a <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b8fc:	9400      	str	r4, [sp, #0]
 800b8fe:	4623      	mov	r3, r4
 800b900:	4642      	mov	r2, r8
 800b902:	4621      	mov	r1, r4
 800b904:	4638      	mov	r0, r7
 800b906:	f7ff ff47 	bl	800b798 <xTimerGenericCommand>
			configASSERT( xResult );
 800b90a:	b970      	cbnz	r0, 800b92a <prvTimerTask+0x8e>
 800b90c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b910:	f383 8811 	msr	BASEPRI, r3
 800b914:	f3bf 8f6f 	isb	sy
 800b918:	f3bf 8f4f 	dsb	sy
 800b91c:	e7fe      	b.n	800b91c <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b91e:	2401      	movs	r4, #1
 800b920:	e7cb      	b.n	800b8ba <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b922:	f023 0301 	bic.w	r3, r3, #1
 800b926:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b92a:	6a3b      	ldr	r3, [r7, #32]
 800b92c:	4638      	mov	r0, r7
 800b92e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800b930:	6830      	ldr	r0, [r6, #0]
 800b932:	2200      	movs	r2, #0
 800b934:	a904      	add	r1, sp, #16
 800b936:	f7fe ff34 	bl	800a7a2 <xQueueReceive>
 800b93a:	2800      	cmp	r0, #0
 800b93c:	d0b3      	beq.n	800b8a6 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b93e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b940:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b942:	2b00      	cmp	r3, #0
 800b944:	db2f      	blt.n	800b9a6 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800b946:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800b948:	6963      	ldr	r3, [r4, #20]
 800b94a:	2b00      	cmp	r3, #0
 800b94c:	d132      	bne.n	800b9b4 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b94e:	a803      	add	r0, sp, #12
 800b950:	f7ff ff4e 	bl	800b7f0 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800b954:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b956:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800b958:	2b09      	cmp	r3, #9
 800b95a:	d8e9      	bhi.n	800b930 <prvTimerTask+0x94>
 800b95c:	e8df f003 	tbb	[pc, r3]
 800b960:	572e2e2e 	.word	0x572e2e2e
 800b964:	2e2e765e 	.word	0x2e2e765e
 800b968:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800b96a:	4b3e      	ldr	r3, [pc, #248]	; (800ba64 <prvTimerTask+0x1c8>)
 800b96c:	681b      	ldr	r3, [r3, #0]
 800b96e:	681c      	ldr	r4, [r3, #0]
 800b970:	fab4 f484 	clz	r4, r4
 800b974:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b976:	6830      	ldr	r0, [r6, #0]
 800b978:	4622      	mov	r2, r4
 800b97a:	eba8 0109 	sub.w	r1, r8, r9
 800b97e:	f7ff f920 	bl	800abc2 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800b982:	f7ff fbf5 	bl	800b170 <xTaskResumeAll>
 800b986:	2800      	cmp	r0, #0
 800b988:	d1d2      	bne.n	800b930 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800b98a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b98e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b992:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b996:	f3bf 8f4f 	dsb	sy
 800b99a:	f3bf 8f6f 	isb	sy
 800b99e:	e7c7      	b.n	800b930 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800b9a0:	f7ff fbe6 	bl	800b170 <xTaskResumeAll>
}
 800b9a4:	e7c4      	b.n	800b930 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b9a6:	9b05      	ldr	r3, [sp, #20]
 800b9a8:	9907      	ldr	r1, [sp, #28]
 800b9aa:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800b9ac:	9b04      	ldr	r3, [sp, #16]
 800b9ae:	2b00      	cmp	r3, #0
 800b9b0:	dbbe      	blt.n	800b930 <prvTimerTask+0x94>
 800b9b2:	e7c8      	b.n	800b946 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b9b4:	1d20      	adds	r0, r4, #4
 800b9b6:	f7fe fa4e 	bl	8009e56 <uxListRemove>
 800b9ba:	e7c8      	b.n	800b94e <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b9bc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b9c0:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b9c2:	f043 0301 	orr.w	r3, r3, #1
 800b9c6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b9ca:	9b05      	ldr	r3, [sp, #20]
 800b9cc:	4620      	mov	r0, r4
 800b9ce:	4419      	add	r1, r3
 800b9d0:	f7ff fe92 	bl	800b6f8 <prvInsertTimerInActiveList>
 800b9d4:	2800      	cmp	r0, #0
 800b9d6:	d0ab      	beq.n	800b930 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b9d8:	6a23      	ldr	r3, [r4, #32]
 800b9da:	4620      	mov	r0, r4
 800b9dc:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b9de:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b9e2:	0759      	lsls	r1, r3, #29
 800b9e4:	d5a4      	bpl.n	800b930 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800b9e6:	69a2      	ldr	r2, [r4, #24]
 800b9e8:	9905      	ldr	r1, [sp, #20]
 800b9ea:	2300      	movs	r3, #0
 800b9ec:	440a      	add	r2, r1
 800b9ee:	9300      	str	r3, [sp, #0]
 800b9f0:	4619      	mov	r1, r3
 800b9f2:	4620      	mov	r0, r4
 800b9f4:	f7ff fed0 	bl	800b798 <xTimerGenericCommand>
							configASSERT( xResult );
 800b9f8:	2800      	cmp	r0, #0
 800b9fa:	d199      	bne.n	800b930 <prvTimerTask+0x94>
 800b9fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba00:	f383 8811 	msr	BASEPRI, r3
 800ba04:	f3bf 8f6f 	isb	sy
 800ba08:	f3bf 8f4f 	dsb	sy
 800ba0c:	e7fe      	b.n	800ba0c <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ba0e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ba12:	f023 0301 	bic.w	r3, r3, #1
 800ba16:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800ba1a:	e789      	b.n	800b930 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ba1c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ba20:	f043 0301 	orr.w	r3, r3, #1
 800ba24:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ba28:	9905      	ldr	r1, [sp, #20]
 800ba2a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ba2c:	b941      	cbnz	r1, 800ba40 <prvTimerTask+0x1a4>
 800ba2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba32:	f383 8811 	msr	BASEPRI, r3
 800ba36:	f3bf 8f6f 	isb	sy
 800ba3a:	f3bf 8f4f 	dsb	sy
 800ba3e:	e7fe      	b.n	800ba3e <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ba40:	4603      	mov	r3, r0
 800ba42:	4401      	add	r1, r0
 800ba44:	4620      	mov	r0, r4
 800ba46:	f7ff fe57 	bl	800b6f8 <prvInsertTimerInActiveList>
					break;
 800ba4a:	e771      	b.n	800b930 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ba4c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ba50:	079a      	lsls	r2, r3, #30
 800ba52:	d4de      	bmi.n	800ba12 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800ba54:	4620      	mov	r0, r4
 800ba56:	f7fe f98f 	bl	8009d78 <vPortFree>
 800ba5a:	e769      	b.n	800b930 <prvTimerTask+0x94>
 800ba5c:	20014e8c 	.word	0x20014e8c
 800ba60:	20014fb0 	.word	0x20014fb0
 800ba64:	20014e90 	.word	0x20014e90

0800ba68 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ba68:	8880      	ldrh	r0, [r0, #4]
 800ba6a:	4770      	bx	lr

0800ba6c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ba6c:	b570      	push	{r4, r5, r6, lr}
 800ba6e:	6803      	ldr	r3, [r0, #0]
 800ba70:	4605      	mov	r5, r0
 800ba72:	460c      	mov	r4, r1
 800ba74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba76:	2100      	movs	r1, #0
 800ba78:	4798      	blx	r3
 800ba7a:	682b      	ldr	r3, [r5, #0]
 800ba7c:	4606      	mov	r6, r0
 800ba7e:	6a1b      	ldr	r3, [r3, #32]
 800ba80:	4628      	mov	r0, r5
 800ba82:	4798      	blx	r3
 800ba84:	1ba4      	subs	r4, r4, r6
 800ba86:	b2a4      	uxth	r4, r4
 800ba88:	fbb4 f0f0 	udiv	r0, r4, r0
 800ba8c:	bd70      	pop	{r4, r5, r6, pc}

0800ba8e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800ba8e:	2300      	movs	r3, #0
 800ba90:	8083      	strh	r3, [r0, #4]
 800ba92:	4770      	bx	lr

0800ba94 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800ba94:	b510      	push	{r4, lr}
 800ba96:	6803      	ldr	r3, [r0, #0]
 800ba98:	8881      	ldrh	r1, [r0, #4]
 800ba9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ba9c:	4604      	mov	r4, r0
 800ba9e:	4798      	blx	r3
 800baa0:	88a3      	ldrh	r3, [r4, #4]
 800baa2:	3301      	adds	r3, #1
 800baa4:	80a3      	strh	r3, [r4, #4]
 800baa6:	bd10      	pop	{r4, pc}

0800baa8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800baa8:	6803      	ldr	r3, [r0, #0]
 800baaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800baac:	4718      	bx	r3

0800baae <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800baae:	4770      	bx	lr

0800bab0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800bab0:	4a02      	ldr	r2, [pc, #8]	; (800babc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800bab2:	6002      	str	r2, [r0, #0]
 800bab4:	2200      	movs	r2, #0
 800bab6:	8082      	strh	r2, [r0, #4]
 800bab8:	4770      	bx	lr
 800baba:	bf00      	nop
 800babc:	08022fe8 	.word	0x08022fe8

0800bac0 <_ZN8touchgfx9Container13getFirstChildEv>:
 800bac0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800bac2:	4770      	bx	lr

0800bac4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800bac4:	b570      	push	{r4, r5, r6, lr}
 800bac6:	6803      	ldr	r3, [r0, #0]
 800bac8:	4604      	mov	r4, r0
 800baca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bacc:	4615      	mov	r5, r2
 800bace:	4798      	blx	r3
 800bad0:	6823      	ldr	r3, [r4, #0]
 800bad2:	4629      	mov	r1, r5
 800bad4:	4620      	mov	r0, r4
 800bad6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bad8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800badc:	4718      	bx	r3

0800bade <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800bade:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bae0:	2000      	movs	r0, #0
 800bae2:	b12b      	cbz	r3, 800baf0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800bae4:	b920      	cbnz	r0, 800baf0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800bae6:	1a5a      	subs	r2, r3, r1
 800bae8:	4250      	negs	r0, r2
 800baea:	4150      	adcs	r0, r2
 800baec:	699b      	ldr	r3, [r3, #24]
 800baee:	e7f8      	b.n	800bae2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800baf0:	4770      	bx	lr

0800baf2 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800baf2:	2300      	movs	r3, #0
 800baf4:	6148      	str	r0, [r1, #20]
 800baf6:	618b      	str	r3, [r1, #24]
 800baf8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bafa:	b913      	cbnz	r3, 800bb02 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800bafc:	6281      	str	r1, [r0, #40]	; 0x28
 800bafe:	4770      	bx	lr
 800bb00:	4613      	mov	r3, r2
 800bb02:	699a      	ldr	r2, [r3, #24]
 800bb04:	2a00      	cmp	r2, #0
 800bb06:	d1fb      	bne.n	800bb00 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800bb08:	6199      	str	r1, [r3, #24]
 800bb0a:	4770      	bx	lr

0800bb0c <_ZN8touchgfx9Container9removeAllEv>:
 800bb0c:	2200      	movs	r2, #0
 800bb0e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb10:	b123      	cbz	r3, 800bb1c <_ZN8touchgfx9Container9removeAllEv+0x10>
 800bb12:	6999      	ldr	r1, [r3, #24]
 800bb14:	6281      	str	r1, [r0, #40]	; 0x28
 800bb16:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800bb1a:	e7f8      	b.n	800bb0e <_ZN8touchgfx9Container9removeAllEv+0x2>
 800bb1c:	4770      	bx	lr

0800bb1e <_ZN8touchgfx9Container6unlinkEv>:
 800bb1e:	2300      	movs	r3, #0
 800bb20:	6283      	str	r3, [r0, #40]	; 0x28
 800bb22:	4770      	bx	lr

0800bb24 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800bb24:	2200      	movs	r2, #0
 800bb26:	8002      	strh	r2, [r0, #0]
 800bb28:	8042      	strh	r2, [r0, #2]
 800bb2a:	8082      	strh	r2, [r0, #4]
 800bb2c:	80c2      	strh	r2, [r0, #6]
 800bb2e:	4770      	bx	lr

0800bb30 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800bb30:	b570      	push	{r4, r5, r6, lr}
 800bb32:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bb34:	460d      	mov	r5, r1
 800bb36:	4616      	mov	r6, r2
 800bb38:	b13c      	cbz	r4, 800bb4a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800bb3a:	6823      	ldr	r3, [r4, #0]
 800bb3c:	4620      	mov	r0, r4
 800bb3e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800bb40:	4632      	mov	r2, r6
 800bb42:	4629      	mov	r1, r5
 800bb44:	4798      	blx	r3
 800bb46:	69a4      	ldr	r4, [r4, #24]
 800bb48:	e7f6      	b.n	800bb38 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800bb4a:	bd70      	pop	{r4, r5, r6, pc}

0800bb4c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800bb4c:	b538      	push	{r3, r4, r5, lr}
 800bb4e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bb50:	460d      	mov	r5, r1
 800bb52:	b134      	cbz	r4, 800bb62 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800bb54:	682b      	ldr	r3, [r5, #0]
 800bb56:	4621      	mov	r1, r4
 800bb58:	689b      	ldr	r3, [r3, #8]
 800bb5a:	4628      	mov	r0, r5
 800bb5c:	4798      	blx	r3
 800bb5e:	69a4      	ldr	r4, [r4, #24]
 800bb60:	e7f7      	b.n	800bb52 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800bb62:	bd38      	pop	{r3, r4, r5, pc}

0800bb64 <_ZN8touchgfx9ContainerD1Ev>:
 800bb64:	4770      	bx	lr

0800bb66 <_ZN8touchgfx9ContainerD0Ev>:
 800bb66:	b510      	push	{r4, lr}
 800bb68:	212c      	movs	r1, #44	; 0x2c
 800bb6a:	4604      	mov	r4, r0
 800bb6c:	f014 fc5c 	bl	8020428 <_ZdlPvj>
 800bb70:	4620      	mov	r0, r4
 800bb72:	bd10      	pop	{r4, pc}

0800bb74 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800bb74:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb76:	b19b      	cbz	r3, 800bba0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bb78:	428b      	cmp	r3, r1
 800bb7a:	d109      	bne.n	800bb90 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800bb7c:	699a      	ldr	r2, [r3, #24]
 800bb7e:	2100      	movs	r1, #0
 800bb80:	6159      	str	r1, [r3, #20]
 800bb82:	6282      	str	r2, [r0, #40]	; 0x28
 800bb84:	b902      	cbnz	r2, 800bb88 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800bb86:	4770      	bx	lr
 800bb88:	6199      	str	r1, [r3, #24]
 800bb8a:	4770      	bx	lr
 800bb8c:	4613      	mov	r3, r2
 800bb8e:	b13a      	cbz	r2, 800bba0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bb90:	699a      	ldr	r2, [r3, #24]
 800bb92:	428a      	cmp	r2, r1
 800bb94:	d1fa      	bne.n	800bb8c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800bb96:	698a      	ldr	r2, [r1, #24]
 800bb98:	619a      	str	r2, [r3, #24]
 800bb9a:	2300      	movs	r3, #0
 800bb9c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800bba0:	4770      	bx	lr

0800bba2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800bba2:	b410      	push	{r4}
 800bba4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bba6:	4604      	mov	r4, r0
 800bba8:	b92b      	cbnz	r3, 800bbb6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800bbaa:	6803      	ldr	r3, [r0, #0]
 800bbac:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bbb0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bbb2:	4611      	mov	r1, r2
 800bbb4:	4718      	bx	r3
 800bbb6:	b941      	cbnz	r1, 800bbca <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800bbb8:	6193      	str	r3, [r2, #24]
 800bbba:	6282      	str	r2, [r0, #40]	; 0x28
 800bbbc:	6154      	str	r4, [r2, #20]
 800bbbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bbc2:	4770      	bx	lr
 800bbc4:	4603      	mov	r3, r0
 800bbc6:	2800      	cmp	r0, #0
 800bbc8:	d0f9      	beq.n	800bbbe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bbca:	4299      	cmp	r1, r3
 800bbcc:	6998      	ldr	r0, [r3, #24]
 800bbce:	d1f9      	bne.n	800bbc4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800bbd0:	6190      	str	r0, [r2, #24]
 800bbd2:	618a      	str	r2, [r1, #24]
 800bbd4:	e7f2      	b.n	800bbbc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800bbd6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800bbd6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbda:	461f      	mov	r7, r3
 800bbdc:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800bbe0:	460d      	mov	r5, r1
 800bbe2:	4616      	mov	r6, r2
 800bbe4:	b103      	cbz	r3, 800bbe8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bbe6:	6038      	str	r0, [r7, #0]
 800bbe8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bbea:	b314      	cbz	r4, 800bc32 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800bbec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bbf0:	b1eb      	cbz	r3, 800bc2e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbf2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800bbf6:	428d      	cmp	r5, r1
 800bbf8:	db19      	blt.n	800bc2e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbfa:	8923      	ldrh	r3, [r4, #8]
 800bbfc:	b289      	uxth	r1, r1
 800bbfe:	440b      	add	r3, r1
 800bc00:	b21b      	sxth	r3, r3
 800bc02:	429d      	cmp	r5, r3
 800bc04:	da13      	bge.n	800bc2e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bc06:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800bc0a:	4296      	cmp	r6, r2
 800bc0c:	db0f      	blt.n	800bc2e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bc0e:	8963      	ldrh	r3, [r4, #10]
 800bc10:	b292      	uxth	r2, r2
 800bc12:	4413      	add	r3, r2
 800bc14:	b21b      	sxth	r3, r3
 800bc16:	429e      	cmp	r6, r3
 800bc18:	da09      	bge.n	800bc2e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bc1a:	6823      	ldr	r3, [r4, #0]
 800bc1c:	1ab2      	subs	r2, r6, r2
 800bc1e:	1a69      	subs	r1, r5, r1
 800bc20:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800bc24:	b212      	sxth	r2, r2
 800bc26:	463b      	mov	r3, r7
 800bc28:	b209      	sxth	r1, r1
 800bc2a:	4620      	mov	r0, r4
 800bc2c:	47c0      	blx	r8
 800bc2e:	69a4      	ldr	r4, [r4, #24]
 800bc30:	e7db      	b.n	800bbea <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bc32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800bc38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800bc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc3c:	4c6e      	ldr	r4, [pc, #440]	; (800bdf8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800bc3e:	b0a1      	sub	sp, #132	; 0x84
 800bc40:	6824      	ldr	r4, [r4, #0]
 800bc42:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800bc44:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800bc48:	9303      	str	r3, [sp, #12]
 800bc4a:	2400      	movs	r4, #0
 800bc4c:	802c      	strh	r4, [r5, #0]
 800bc4e:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800bc50:	802c      	strh	r4, [r5, #0]
 800bc52:	601c      	str	r4, [r3, #0]
 800bc54:	4606      	mov	r6, r0
 800bc56:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800bc5a:	f7ff ffbc 	bl	800bbd6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bc5e:	f1b9 0f03 	cmp.w	r9, #3
 800bc62:	f340 80c2 	ble.w	800bdea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800bc66:	4631      	mov	r1, r6
 800bc68:	a80c      	add	r0, sp, #48	; 0x30
 800bc6a:	f004 ffe7 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc6e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800bc72:	9306      	str	r3, [sp, #24]
 800bc74:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800bc78:	9307      	str	r3, [sp, #28]
 800bc7a:	9b03      	ldr	r3, [sp, #12]
 800bc7c:	f8d3 a000 	ldr.w	sl, [r3]
 800bc80:	f1ba 0f00 	cmp.w	sl, #0
 800bc84:	f000 80b4 	beq.w	800bdf0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800bc88:	4651      	mov	r1, sl
 800bc8a:	a810      	add	r0, sp, #64	; 0x40
 800bc8c:	f004 ffd6 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc90:	9b01      	ldr	r3, [sp, #4]
 800bc92:	9a06      	ldr	r2, [sp, #24]
 800bc94:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800bc98:	189d      	adds	r5, r3, r2
 800bc9a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800bc9e:	9a07      	ldr	r2, [sp, #28]
 800bca0:	2002      	movs	r0, #2
 800bca2:	fb91 f1f0 	sdiv	r1, r1, r0
 800bca6:	4419      	add	r1, r3
 800bca8:	1a6d      	subs	r5, r5, r1
 800bcaa:	9b02      	ldr	r3, [sp, #8]
 800bcac:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800bcb0:	4413      	add	r3, r2
 800bcb2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800bcb6:	fb92 f2f0 	sdiv	r2, r2, r0
 800bcba:	440a      	add	r2, r1
 800bcbc:	1a9b      	subs	r3, r3, r2
 800bcbe:	435b      	muls	r3, r3
 800bcc0:	fb05 3505 	mla	r5, r5, r5, r3
 800bcc4:	4f4d      	ldr	r7, [pc, #308]	; (800bdfc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800bcc6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bcc8:	ac10      	add	r4, sp, #64	; 0x40
 800bcca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bccc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bcce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcd0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bcd2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bcd4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800bcd8:	f1b9 0f0c 	cmp.w	r9, #12
 800bcdc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800bce0:	f04f 0303 	mov.w	r3, #3
 800bce4:	bfc8      	it	gt
 800bce6:	4698      	movgt	r8, r3
 800bce8:	f8cd 9000 	str.w	r9, [sp]
 800bcec:	f04f 0400 	mov.w	r4, #0
 800bcf0:	bfdc      	itt	le
 800bcf2:	f109 32ff 	addle.w	r2, r9, #4294967295
 800bcf6:	fb92 f8f3 	sdivle	r8, r2, r3
 800bcfa:	1c63      	adds	r3, r4, #1
 800bcfc:	aa10      	add	r2, sp, #64	; 0x40
 800bcfe:	f004 0401 	and.w	r4, r4, #1
 800bd02:	9308      	str	r3, [sp, #32]
 800bd04:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800bd08:	9b00      	ldr	r3, [sp, #0]
 800bd0a:	fb93 f3f8 	sdiv	r3, r3, r8
 800bd0e:	b29b      	uxth	r3, r3
 800bd10:	3404      	adds	r4, #4
 800bd12:	f04f 0b00 	mov.w	fp, #0
 800bd16:	9304      	str	r3, [sp, #16]
 800bd18:	9a04      	ldr	r2, [sp, #16]
 800bd1a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800bd1e:	fb13 f302 	smulbb	r3, r3, r2
 800bd22:	9a01      	ldr	r2, [sp, #4]
 800bd24:	b29b      	uxth	r3, r3
 800bd26:	1899      	adds	r1, r3, r2
 800bd28:	9305      	str	r3, [sp, #20]
 800bd2a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800bd2e:	b209      	sxth	r1, r1
 800bd30:	4299      	cmp	r1, r3
 800bd32:	db4d      	blt.n	800bdd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd34:	8932      	ldrh	r2, [r6, #8]
 800bd36:	4413      	add	r3, r2
 800bd38:	b21b      	sxth	r3, r3
 800bd3a:	4299      	cmp	r1, r3
 800bd3c:	da48      	bge.n	800bdd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd3e:	9b04      	ldr	r3, [sp, #16]
 800bd40:	6827      	ldr	r7, [r4, #0]
 800bd42:	fb17 f703 	smulbb	r7, r7, r3
 800bd46:	9b02      	ldr	r3, [sp, #8]
 800bd48:	b2bf      	uxth	r7, r7
 800bd4a:	18fa      	adds	r2, r7, r3
 800bd4c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800bd50:	b212      	sxth	r2, r2
 800bd52:	429a      	cmp	r2, r3
 800bd54:	db3c      	blt.n	800bdd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd56:	8970      	ldrh	r0, [r6, #10]
 800bd58:	4403      	add	r3, r0
 800bd5a:	b21b      	sxth	r3, r3
 800bd5c:	429a      	cmp	r2, r3
 800bd5e:	da37      	bge.n	800bdd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd60:	2300      	movs	r3, #0
 800bd62:	930b      	str	r3, [sp, #44]	; 0x2c
 800bd64:	4630      	mov	r0, r6
 800bd66:	ab0b      	add	r3, sp, #44	; 0x2c
 800bd68:	f7ff ff35 	bl	800bbd6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bd6c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bd6e:	b37a      	cbz	r2, 800bdd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd70:	4552      	cmp	r2, sl
 800bd72:	d02d      	beq.n	800bdd0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd74:	4611      	mov	r1, r2
 800bd76:	a80e      	add	r0, sp, #56	; 0x38
 800bd78:	9209      	str	r2, [sp, #36]	; 0x24
 800bd7a:	f004 ff5f 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bd7e:	9a06      	ldr	r2, [sp, #24]
 800bd80:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800bd84:	9b01      	ldr	r3, [sp, #4]
 800bd86:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800bd8a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800bd8e:	4413      	add	r3, r2
 800bd90:	f04f 0e02 	mov.w	lr, #2
 800bd94:	fb91 f1fe 	sdiv	r1, r1, lr
 800bd98:	4401      	add	r1, r0
 800bd9a:	1a58      	subs	r0, r3, r1
 800bd9c:	9a07      	ldr	r2, [sp, #28]
 800bd9e:	9b02      	ldr	r3, [sp, #8]
 800bda0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800bda4:	fb9c fcfe 	sdiv	ip, ip, lr
 800bda8:	4413      	add	r3, r2
 800bdaa:	448c      	add	ip, r1
 800bdac:	eba3 030c 	sub.w	r3, r3, ip
 800bdb0:	435b      	muls	r3, r3
 800bdb2:	fb00 3300 	mla	r3, r0, r0, r3
 800bdb6:	42ab      	cmp	r3, r5
 800bdb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bdba:	d208      	bcs.n	800bdce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800bdbc:	9803      	ldr	r0, [sp, #12]
 800bdbe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800bdc0:	6001      	str	r1, [r0, #0]
 800bdc2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800bdc4:	9805      	ldr	r0, [sp, #20]
 800bdc6:	8008      	strh	r0, [r1, #0]
 800bdc8:	992b      	ldr	r1, [sp, #172]	; 0xac
 800bdca:	461d      	mov	r5, r3
 800bdcc:	800f      	strh	r7, [r1, #0]
 800bdce:	4692      	mov	sl, r2
 800bdd0:	f10b 0b01 	add.w	fp, fp, #1
 800bdd4:	f1bb 0f04 	cmp.w	fp, #4
 800bdd8:	f104 0408 	add.w	r4, r4, #8
 800bddc:	d19c      	bne.n	800bd18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800bdde:	9b00      	ldr	r3, [sp, #0]
 800bde0:	9c08      	ldr	r4, [sp, #32]
 800bde2:	444b      	add	r3, r9
 800bde4:	4544      	cmp	r4, r8
 800bde6:	9300      	str	r3, [sp, #0]
 800bde8:	d187      	bne.n	800bcfa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800bdea:	b021      	add	sp, #132	; 0x84
 800bdec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdf0:	f04f 35ff 	mov.w	r5, #4294967295
 800bdf4:	e766      	b.n	800bcc4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800bdf6:	bf00      	nop
 800bdf8:	20014fc4 	.word	0x20014fc4
 800bdfc:	08021818 	.word	0x08021818

0800be00 <_ZN8touchgfx4RectaNERKS0_>:
 800be00:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800be04:	f9b1 7000 	ldrsh.w	r7, [r1]
 800be08:	888c      	ldrh	r4, [r1, #4]
 800be0a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800be0e:	443c      	add	r4, r7
 800be10:	b2a4      	uxth	r4, r4
 800be12:	fa0f f884 	sxth.w	r8, r4
 800be16:	45c1      	cmp	r9, r8
 800be18:	da2f      	bge.n	800be7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800be1a:	8882      	ldrh	r2, [r0, #4]
 800be1c:	444a      	add	r2, r9
 800be1e:	b292      	uxth	r2, r2
 800be20:	fa0f fe82 	sxth.w	lr, r2
 800be24:	4577      	cmp	r7, lr
 800be26:	da28      	bge.n	800be7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800be28:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800be2c:	88cb      	ldrh	r3, [r1, #6]
 800be2e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800be32:	442b      	add	r3, r5
 800be34:	b21b      	sxth	r3, r3
 800be36:	429e      	cmp	r6, r3
 800be38:	da1f      	bge.n	800be7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800be3a:	88c3      	ldrh	r3, [r0, #6]
 800be3c:	4433      	add	r3, r6
 800be3e:	b29b      	uxth	r3, r3
 800be40:	fa0f fc83 	sxth.w	ip, r3
 800be44:	4565      	cmp	r5, ip
 800be46:	da18      	bge.n	800be7a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800be48:	454f      	cmp	r7, r9
 800be4a:	bfb8      	it	lt
 800be4c:	464f      	movlt	r7, r9
 800be4e:	42b5      	cmp	r5, r6
 800be50:	bfb8      	it	lt
 800be52:	4635      	movlt	r5, r6
 800be54:	45f0      	cmp	r8, lr
 800be56:	bfd8      	it	le
 800be58:	4622      	movle	r2, r4
 800be5a:	1bd2      	subs	r2, r2, r7
 800be5c:	8082      	strh	r2, [r0, #4]
 800be5e:	884a      	ldrh	r2, [r1, #2]
 800be60:	88c9      	ldrh	r1, [r1, #6]
 800be62:	8007      	strh	r7, [r0, #0]
 800be64:	440a      	add	r2, r1
 800be66:	b292      	uxth	r2, r2
 800be68:	b211      	sxth	r1, r2
 800be6a:	458c      	cmp	ip, r1
 800be6c:	bfa8      	it	ge
 800be6e:	4613      	movge	r3, r2
 800be70:	1b5b      	subs	r3, r3, r5
 800be72:	80c3      	strh	r3, [r0, #6]
 800be74:	8045      	strh	r5, [r0, #2]
 800be76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800be7a:	2300      	movs	r3, #0
 800be7c:	8003      	strh	r3, [r0, #0]
 800be7e:	8043      	strh	r3, [r0, #2]
 800be80:	8083      	strh	r3, [r0, #4]
 800be82:	80c3      	strh	r3, [r0, #6]
 800be84:	e7f7      	b.n	800be76 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800be86 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800be86:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800be8a:	2b00      	cmp	r3, #0
 800be8c:	dd06      	ble.n	800be9c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800be8e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800be92:	2800      	cmp	r0, #0
 800be94:	bfcc      	ite	gt
 800be96:	2000      	movgt	r0, #0
 800be98:	2001      	movle	r0, #1
 800be9a:	4770      	bx	lr
 800be9c:	2001      	movs	r0, #1
 800be9e:	4770      	bx	lr

0800bea0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800bea0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bea4:	2300      	movs	r3, #0
 800bea6:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800bea8:	8003      	strh	r3, [r0, #0]
 800beaa:	4604      	mov	r4, r0
 800beac:	8043      	strh	r3, [r0, #2]
 800beae:	8083      	strh	r3, [r0, #4]
 800beb0:	80c3      	strh	r3, [r0, #6]
 800beb2:	2d00      	cmp	r5, #0
 800beb4:	d040      	beq.n	800bf38 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800beb6:	1d28      	adds	r0, r5, #4
 800beb8:	f7ff ffe5 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bebc:	b988      	cbnz	r0, 800bee2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800bebe:	4620      	mov	r0, r4
 800bec0:	f7ff ffe1 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bec4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bec8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800becc:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800bed0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800bed4:	b138      	cbz	r0, 800bee6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800bed6:	8022      	strh	r2, [r4, #0]
 800bed8:	8063      	strh	r3, [r4, #2]
 800beda:	f8a4 e004 	strh.w	lr, [r4, #4]
 800bede:	f8a4 c006 	strh.w	ip, [r4, #6]
 800bee2:	69ad      	ldr	r5, [r5, #24]
 800bee4:	e7e5      	b.n	800beb2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800bee6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800beea:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800beee:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800bef2:	4290      	cmp	r0, r2
 800bef4:	4607      	mov	r7, r0
 800bef6:	bfa8      	it	ge
 800bef8:	4617      	movge	r7, r2
 800befa:	4472      	add	r2, lr
 800befc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800bf00:	8027      	strh	r7, [r4, #0]
 800bf02:	4299      	cmp	r1, r3
 800bf04:	460e      	mov	r6, r1
 800bf06:	4440      	add	r0, r8
 800bf08:	bfa8      	it	ge
 800bf0a:	461e      	movge	r6, r3
 800bf0c:	4471      	add	r1, lr
 800bf0e:	4463      	add	r3, ip
 800bf10:	b200      	sxth	r0, r0
 800bf12:	b212      	sxth	r2, r2
 800bf14:	b209      	sxth	r1, r1
 800bf16:	b21b      	sxth	r3, r3
 800bf18:	4290      	cmp	r0, r2
 800bf1a:	bfac      	ite	ge
 800bf1c:	ebc7 0200 	rsbge	r2, r7, r0
 800bf20:	ebc7 0202 	rsblt	r2, r7, r2
 800bf24:	4299      	cmp	r1, r3
 800bf26:	bfac      	ite	ge
 800bf28:	ebc6 0301 	rsbge	r3, r6, r1
 800bf2c:	ebc6 0303 	rsblt	r3, r6, r3
 800bf30:	8066      	strh	r6, [r4, #2]
 800bf32:	80a2      	strh	r2, [r4, #4]
 800bf34:	80e3      	strh	r3, [r4, #6]
 800bf36:	e7d4      	b.n	800bee2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800bf38:	4620      	mov	r0, r4
 800bf3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bf3e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800bf3e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bf42:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800bf46:	b383      	cbz	r3, 800bfaa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800bf48:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bf4a:	b374      	cbz	r4, 800bfaa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800bf4c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800bf50:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800bf54:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800bf58:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800bf5c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bf60:	b303      	cbz	r3, 800bfa4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800bf62:	4668      	mov	r0, sp
 800bf64:	1d21      	adds	r1, r4, #4
 800bf66:	f8ad 5000 	strh.w	r5, [sp]
 800bf6a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800bf6e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800bf72:	f8ad 8006 	strh.w	r8, [sp, #6]
 800bf76:	f7ff ff43 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800bf7a:	4668      	mov	r0, sp
 800bf7c:	f7ff ff83 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bf80:	b980      	cbnz	r0, 800bfa4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800bf82:	f8bd 3000 	ldrh.w	r3, [sp]
 800bf86:	88a2      	ldrh	r2, [r4, #4]
 800bf88:	1a9b      	subs	r3, r3, r2
 800bf8a:	f8ad 3000 	strh.w	r3, [sp]
 800bf8e:	88e2      	ldrh	r2, [r4, #6]
 800bf90:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf94:	1a9b      	subs	r3, r3, r2
 800bf96:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bf9a:	6823      	ldr	r3, [r4, #0]
 800bf9c:	4669      	mov	r1, sp
 800bf9e:	689b      	ldr	r3, [r3, #8]
 800bfa0:	4620      	mov	r0, r4
 800bfa2:	4798      	blx	r3
 800bfa4:	69a4      	ldr	r4, [r4, #24]
 800bfa6:	2c00      	cmp	r4, #0
 800bfa8:	d1d8      	bne.n	800bf5c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800bfaa:	b002      	add	sp, #8
 800bfac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bfb0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800bfb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bfb2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800bfb6:	460d      	mov	r5, r1
 800bfb8:	4616      	mov	r6, r2
 800bfba:	b323      	cbz	r3, 800c006 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bfbc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bfbe:	b314      	cbz	r4, 800c006 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bfc0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bfc4:	b1eb      	cbz	r3, 800c002 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bfc6:	6828      	ldr	r0, [r5, #0]
 800bfc8:	6869      	ldr	r1, [r5, #4]
 800bfca:	466b      	mov	r3, sp
 800bfcc:	c303      	stmia	r3!, {r0, r1}
 800bfce:	4668      	mov	r0, sp
 800bfd0:	1d21      	adds	r1, r4, #4
 800bfd2:	f7ff ff15 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800bfd6:	4668      	mov	r0, sp
 800bfd8:	f7ff ff55 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bfdc:	b988      	cbnz	r0, 800c002 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bfde:	f8bd 3000 	ldrh.w	r3, [sp]
 800bfe2:	88a2      	ldrh	r2, [r4, #4]
 800bfe4:	1a9b      	subs	r3, r3, r2
 800bfe6:	f8ad 3000 	strh.w	r3, [sp]
 800bfea:	88e2      	ldrh	r2, [r4, #6]
 800bfec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bff0:	1a9b      	subs	r3, r3, r2
 800bff2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bff6:	6823      	ldr	r3, [r4, #0]
 800bff8:	4632      	mov	r2, r6
 800bffa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800bffc:	4669      	mov	r1, sp
 800bffe:	4620      	mov	r0, r4
 800c000:	4798      	blx	r3
 800c002:	69a4      	ldr	r4, [r4, #24]
 800c004:	e7db      	b.n	800bfbe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800c006:	b002      	add	sp, #8
 800c008:	bd70      	pop	{r4, r5, r6, pc}

0800c00a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c00a:	b513      	push	{r0, r1, r4, lr}
 800c00c:	6803      	ldr	r3, [r0, #0]
 800c00e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800c012:	2300      	movs	r3, #0
 800c014:	e9cd 3300 	strd	r3, r3, [sp]
 800c018:	466b      	mov	r3, sp
 800c01a:	47a0      	blx	r4
 800c01c:	b002      	add	sp, #8
 800c01e:	bd10      	pop	{r4, pc}

0800c020 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c020:	2301      	movs	r3, #1
 800c022:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c026:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800c02a:	4770      	bx	lr

0800c02c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c02c:	2301      	movs	r3, #1
 800c02e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c032:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800c036:	4770      	bx	lr

0800c038 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c038:	6843      	ldr	r3, [r0, #4]
 800c03a:	2201      	movs	r2, #1
 800c03c:	725a      	strb	r2, [r3, #9]
 800c03e:	6840      	ldr	r0, [r0, #4]
 800c040:	6803      	ldr	r3, [r0, #0]
 800c042:	691b      	ldr	r3, [r3, #16]
 800c044:	4718      	bx	r3

0800c046 <_ZN8touchgfx3HAL8flushDMAEv>:
 800c046:	6840      	ldr	r0, [r0, #4]
 800c048:	6803      	ldr	r3, [r0, #0]
 800c04a:	689b      	ldr	r3, [r3, #8]
 800c04c:	4718      	bx	r3

0800c04e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800c04e:	b530      	push	{r4, r5, lr}
 800c050:	b08b      	sub	sp, #44	; 0x2c
 800c052:	6804      	ldr	r4, [r0, #0]
 800c054:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800c058:	9509      	str	r5, [sp, #36]	; 0x24
 800c05a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800c05e:	9508      	str	r5, [sp, #32]
 800c060:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800c064:	9507      	str	r5, [sp, #28]
 800c066:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800c06a:	9506      	str	r5, [sp, #24]
 800c06c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800c070:	9505      	str	r5, [sp, #20]
 800c072:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800c076:	9504      	str	r5, [sp, #16]
 800c078:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800c07c:	9503      	str	r5, [sp, #12]
 800c07e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c082:	9502      	str	r5, [sp, #8]
 800c084:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800c088:	e9cd 3500 	strd	r3, r5, [sp]
 800c08c:	4613      	mov	r3, r2
 800c08e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800c090:	2200      	movs	r2, #0
 800c092:	47a0      	blx	r4
 800c094:	b00b      	add	sp, #44	; 0x2c
 800c096:	bd30      	pop	{r4, r5, pc}

0800c098 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c098:	4b04      	ldr	r3, [pc, #16]	; (800c0ac <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c09a:	781b      	ldrb	r3, [r3, #0]
 800c09c:	b123      	cbz	r3, 800c0a8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c09e:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800c0a2:	f080 0001 	eor.w	r0, r0, #1
 800c0a6:	4770      	bx	lr
 800c0a8:	2001      	movs	r0, #1
 800c0aa:	4770      	bx	lr
 800c0ac:	20014fc2 	.word	0x20014fc2

0800c0b0 <_ZN8touchgfx3HAL8endFrameEv>:
 800c0b0:	b510      	push	{r4, lr}
 800c0b2:	4604      	mov	r4, r0
 800c0b4:	6840      	ldr	r0, [r0, #4]
 800c0b6:	6803      	ldr	r3, [r0, #0]
 800c0b8:	689b      	ldr	r3, [r3, #8]
 800c0ba:	4798      	blx	r3
 800c0bc:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800c0c0:	b113      	cbz	r3, 800c0c8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c0c2:	2301      	movs	r3, #1
 800c0c4:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800c0c8:	bd10      	pop	{r4, pc}

0800c0ca <_ZN8touchgfx3HAL10initializeEv>:
 800c0ca:	b510      	push	{r4, lr}
 800c0cc:	4604      	mov	r4, r0
 800c0ce:	f7f4 fc39 	bl	8000944 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c0d2:	f7f4 fb51 	bl	8000778 <_ZN8touchgfx4GPIO4initEv>
 800c0d6:	6860      	ldr	r0, [r4, #4]
 800c0d8:	6803      	ldr	r3, [r0, #0]
 800c0da:	68db      	ldr	r3, [r3, #12]
 800c0dc:	4798      	blx	r3
 800c0de:	68e0      	ldr	r0, [r4, #12]
 800c0e0:	6803      	ldr	r3, [r0, #0]
 800c0e2:	689b      	ldr	r3, [r3, #8]
 800c0e4:	4798      	blx	r3
 800c0e6:	6823      	ldr	r3, [r4, #0]
 800c0e8:	4620      	mov	r0, r4
 800c0ea:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c0ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0f0:	4718      	bx	r3
	...

0800c0f4 <_ZN8touchgfx3HAL4tickEv>:
 800c0f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c0f6:	6803      	ldr	r3, [r0, #0]
 800c0f8:	4d5b      	ldr	r5, [pc, #364]	; (800c268 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800c0fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c0fe:	4604      	mov	r4, r0
 800c100:	4798      	blx	r3
 800c102:	2800      	cmp	r0, #0
 800c104:	f000 8095 	beq.w	800c232 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800c108:	2001      	movs	r0, #1
 800c10a:	f7f4 fb36 	bl	800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c10e:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800c112:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c116:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800c11a:	2600      	movs	r6, #0
 800c11c:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800c120:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c124:	b133      	cbz	r3, 800c134 <_ZN8touchgfx3HAL4tickEv+0x40>
 800c126:	6823      	ldr	r3, [r4, #0]
 800c128:	4620      	mov	r0, r4
 800c12a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800c12e:	4798      	blx	r3
 800c130:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800c134:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c138:	6862      	ldr	r2, [r4, #4]
 800c13a:	f083 0301 	eor.w	r3, r3, #1
 800c13e:	7253      	strb	r3, [r2, #9]
 800c140:	2601      	movs	r6, #1
 800c142:	702e      	strb	r6, [r5, #0]
 800c144:	f003 fc68 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
 800c148:	6803      	ldr	r3, [r0, #0]
 800c14a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c14c:	4798      	blx	r3
 800c14e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800c152:	b90b      	cbnz	r3, 800c158 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c154:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800c158:	f003 fc5e 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
 800c15c:	6803      	ldr	r3, [r0, #0]
 800c15e:	695b      	ldr	r3, [r3, #20]
 800c160:	4798      	blx	r3
 800c162:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800c164:	6803      	ldr	r3, [r0, #0]
 800c166:	691b      	ldr	r3, [r3, #16]
 800c168:	4798      	blx	r3
 800c16a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800c16e:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800c172:	3b01      	subs	r3, #1
 800c174:	b2db      	uxtb	r3, r3
 800c176:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c17a:	b10a      	cbz	r2, 800c180 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800c17c:	2b00      	cmp	r3, #0
 800c17e:	d1eb      	bne.n	800c158 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c180:	4a3a      	ldr	r2, [pc, #232]	; (800c26c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c182:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800c186:	7813      	ldrb	r3, [r2, #0]
 800c188:	3301      	adds	r3, #1
 800c18a:	b25b      	sxtb	r3, r3
 800c18c:	4299      	cmp	r1, r3
 800c18e:	7013      	strb	r3, [r2, #0]
 800c190:	dc10      	bgt.n	800c1b4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c192:	68e0      	ldr	r0, [r4, #12]
 800c194:	2300      	movs	r3, #0
 800c196:	7013      	strb	r3, [r2, #0]
 800c198:	6803      	ldr	r3, [r0, #0]
 800c19a:	aa03      	add	r2, sp, #12
 800c19c:	68db      	ldr	r3, [r3, #12]
 800c19e:	a902      	add	r1, sp, #8
 800c1a0:	4798      	blx	r3
 800c1a2:	6823      	ldr	r3, [r4, #0]
 800c1a4:	2800      	cmp	r0, #0
 800c1a6:	d050      	beq.n	800c24a <_ZN8touchgfx3HAL4tickEv+0x156>
 800c1a8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c1ac:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c1b0:	4620      	mov	r0, r4
 800c1b2:	4798      	blx	r3
 800c1b4:	6960      	ldr	r0, [r4, #20]
 800c1b6:	2300      	movs	r3, #0
 800c1b8:	f88d 3007 	strb.w	r3, [sp, #7]
 800c1bc:	b158      	cbz	r0, 800c1d6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c1be:	6803      	ldr	r3, [r0, #0]
 800c1c0:	f10d 0107 	add.w	r1, sp, #7
 800c1c4:	68db      	ldr	r3, [r3, #12]
 800c1c6:	4798      	blx	r3
 800c1c8:	b128      	cbz	r0, 800c1d6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c1ca:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800c1cc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c1d0:	6803      	ldr	r3, [r0, #0]
 800c1d2:	68db      	ldr	r3, [r3, #12]
 800c1d4:	4798      	blx	r3
 800c1d6:	f104 001c 	add.w	r0, r4, #28
 800c1da:	f014 f851 	bl	8020280 <_ZN8touchgfx8Gestures4tickEv>
 800c1de:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800c1e2:	b30b      	cbz	r3, 800c228 <_ZN8touchgfx3HAL4tickEv+0x134>
 800c1e4:	6920      	ldr	r0, [r4, #16]
 800c1e6:	6803      	ldr	r3, [r0, #0]
 800c1e8:	691b      	ldr	r3, [r3, #16]
 800c1ea:	4798      	blx	r3
 800c1ec:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800c1ee:	4606      	mov	r6, r0
 800c1f0:	b903      	cbnz	r3, 800c1f4 <_ZN8touchgfx3HAL4tickEv+0x100>
 800c1f2:	6760      	str	r0, [r4, #116]	; 0x74
 800c1f4:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800c1f6:	4a1e      	ldr	r2, [pc, #120]	; (800c270 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c1f8:	1af3      	subs	r3, r6, r3
 800c1fa:	4293      	cmp	r3, r2
 800c1fc:	d914      	bls.n	800c228 <_ZN8touchgfx3HAL4tickEv+0x134>
 800c1fe:	6920      	ldr	r0, [r4, #16]
 800c200:	6803      	ldr	r3, [r0, #0]
 800c202:	699b      	ldr	r3, [r3, #24]
 800c204:	4798      	blx	r3
 800c206:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800c208:	2264      	movs	r2, #100	; 0x64
 800c20a:	1af3      	subs	r3, r6, r3
 800c20c:	fbb3 f3f2 	udiv	r3, r3, r2
 800c210:	fbb0 f0f3 	udiv	r0, r0, r3
 800c214:	2800      	cmp	r0, #0
 800c216:	dc1d      	bgt.n	800c254 <_ZN8touchgfx3HAL4tickEv+0x160>
 800c218:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800c21c:	6920      	ldr	r0, [r4, #16]
 800c21e:	6803      	ldr	r3, [r0, #0]
 800c220:	2100      	movs	r1, #0
 800c222:	69db      	ldr	r3, [r3, #28]
 800c224:	4798      	blx	r3
 800c226:	6766      	str	r6, [r4, #116]	; 0x74
 800c228:	f003 fbf6 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
 800c22c:	6803      	ldr	r3, [r0, #0]
 800c22e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c230:	4798      	blx	r3
 800c232:	6823      	ldr	r3, [r4, #0]
 800c234:	4620      	mov	r0, r4
 800c236:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800c23a:	4798      	blx	r3
 800c23c:	2001      	movs	r0, #1
 800c23e:	f7f4 fa9d 	bl	800077c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c242:	2300      	movs	r3, #0
 800c244:	702b      	strb	r3, [r5, #0]
 800c246:	b004      	add	sp, #16
 800c248:	bd70      	pop	{r4, r5, r6, pc}
 800c24a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800c24e:	4620      	mov	r0, r4
 800c250:	4798      	blx	r3
 800c252:	e7af      	b.n	800c1b4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c254:	2863      	cmp	r0, #99	; 0x63
 800c256:	bfcb      	itete	gt
 800c258:	2300      	movgt	r3, #0
 800c25a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c25e:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800c262:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800c266:	e7d9      	b.n	800c21c <_ZN8touchgfx3HAL4tickEv+0x128>
 800c268:	20014fc8 	.word	0x20014fc8
 800c26c:	20014fc9 	.word	0x20014fc9
 800c270:	05f5e100 	.word	0x05f5e100

0800c274 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c274:	b510      	push	{r4, lr}
 800c276:	4604      	mov	r4, r0
 800c278:	f7f4 fb94 	bl	80009a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800c27c:	6863      	ldr	r3, [r4, #4]
 800c27e:	2200      	movs	r2, #0
 800c280:	729a      	strb	r2, [r3, #10]
 800c282:	bd10      	pop	{r4, pc}

0800c284 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c284:	65c1      	str	r1, [r0, #92]	; 0x5c
 800c286:	301c      	adds	r0, #28
 800c288:	f013 bff8 	b.w	802027c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c28c <_ZN8touchgfx3HAL5touchEll>:
 800c28c:	b530      	push	{r4, r5, lr}
 800c28e:	b087      	sub	sp, #28
 800c290:	4604      	mov	r4, r0
 800c292:	a804      	add	r0, sp, #16
 800c294:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c298:	f003 f98a 	bl	800f5b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c29c:	9b04      	ldr	r3, [sp, #16]
 800c29e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c2a2:	a906      	add	r1, sp, #24
 800c2a4:	9b05      	ldr	r3, [sp, #20]
 800c2a6:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c2aa:	a803      	add	r0, sp, #12
 800c2ac:	f003 f9d2 	bl	800f654 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c2b0:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800c2b4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c2b8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c2bc:	f104 001c 	add.w	r0, r4, #28
 800c2c0:	b189      	cbz	r1, 800c2e6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c2c2:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800c2c6:	9300      	str	r3, [sp, #0]
 800c2c8:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800c2cc:	4613      	mov	r3, r2
 800c2ce:	462a      	mov	r2, r5
 800c2d0:	f013 ffe4 	bl	802029c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c2d4:	b128      	cbz	r0, 800c2e2 <_ZN8touchgfx3HAL5touchEll+0x56>
 800c2d6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c2da:	6623      	str	r3, [r4, #96]	; 0x60
 800c2dc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c2e0:	6663      	str	r3, [r4, #100]	; 0x64
 800c2e2:	b007      	add	sp, #28
 800c2e4:	bd30      	pop	{r4, r5, pc}
 800c2e6:	f014 f819 	bl	802031c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c2ea:	2301      	movs	r3, #1
 800c2ec:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800c2f0:	e7f1      	b.n	800c2d6 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c2f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c2f2:	b510      	push	{r4, lr}
 800c2f4:	2b00      	cmp	r3, #0
 800c2f6:	d046      	beq.n	800c386 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c2f8:	ea81 0002 	eor.w	r0, r1, r2
 800c2fc:	07c4      	lsls	r4, r0, #31
 800c2fe:	d508      	bpl.n	800c312 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c300:	440b      	add	r3, r1
 800c302:	3a01      	subs	r2, #1
 800c304:	428b      	cmp	r3, r1
 800c306:	d93e      	bls.n	800c386 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c308:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c30c:	f801 0b01 	strb.w	r0, [r1], #1
 800c310:	e7f8      	b.n	800c304 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c312:	07d0      	lsls	r0, r2, #31
 800c314:	bf42      	ittt	mi
 800c316:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c31a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c31e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c322:	2b01      	cmp	r3, #1
 800c324:	d911      	bls.n	800c34a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c326:	ea81 0402 	eor.w	r4, r1, r2
 800c32a:	07a4      	lsls	r4, r4, #30
 800c32c:	4610      	mov	r0, r2
 800c32e:	d022      	beq.n	800c376 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800c330:	f023 0401 	bic.w	r4, r3, #1
 800c334:	440c      	add	r4, r1
 800c336:	428c      	cmp	r4, r1
 800c338:	4602      	mov	r2, r0
 800c33a:	d904      	bls.n	800c346 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800c33c:	8812      	ldrh	r2, [r2, #0]
 800c33e:	f821 2b02 	strh.w	r2, [r1], #2
 800c342:	3002      	adds	r0, #2
 800c344:	e7f7      	b.n	800c336 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800c346:	f003 0301 	and.w	r3, r3, #1
 800c34a:	f023 0003 	bic.w	r0, r3, #3
 800c34e:	4408      	add	r0, r1
 800c350:	4288      	cmp	r0, r1
 800c352:	4614      	mov	r4, r2
 800c354:	d904      	bls.n	800c360 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800c356:	6824      	ldr	r4, [r4, #0]
 800c358:	f841 4b04 	str.w	r4, [r1], #4
 800c35c:	3204      	adds	r2, #4
 800c35e:	e7f7      	b.n	800c350 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800c360:	f003 0303 	and.w	r3, r3, #3
 800c364:	440b      	add	r3, r1
 800c366:	3a01      	subs	r2, #1
 800c368:	428b      	cmp	r3, r1
 800c36a:	d90c      	bls.n	800c386 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c36c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c370:	f801 0b01 	strb.w	r0, [r1], #1
 800c374:	e7f8      	b.n	800c368 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800c376:	0790      	lsls	r0, r2, #30
 800c378:	d0e7      	beq.n	800c34a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c37a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c37e:	f821 0b02 	strh.w	r0, [r1], #2
 800c382:	3b02      	subs	r3, #2
 800c384:	e7e1      	b.n	800c34a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c386:	2001      	movs	r0, #1
 800c388:	bd10      	pop	{r4, pc}

0800c38a <_ZN8touchgfx3HAL7noTouchEv>:
 800c38a:	b510      	push	{r4, lr}
 800c38c:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800c390:	4604      	mov	r4, r0
 800c392:	b153      	cbz	r3, 800c3aa <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c394:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800c398:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800c39c:	2101      	movs	r1, #1
 800c39e:	301c      	adds	r0, #28
 800c3a0:	f013 ffbc 	bl	802031c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c3a4:	2300      	movs	r3, #0
 800c3a6:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800c3aa:	bd10      	pop	{r4, pc}

0800c3ac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c3ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c3b0:	b085      	sub	sp, #20
 800c3b2:	ad04      	add	r5, sp, #16
 800c3b4:	4604      	mov	r4, r0
 800c3b6:	2000      	movs	r0, #0
 800c3b8:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c3bc:	69a0      	ldr	r0, [r4, #24]
 800c3be:	6806      	ldr	r6, [r0, #0]
 800c3c0:	9501      	str	r5, [sp, #4]
 800c3c2:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800c3c6:	9500      	str	r5, [sp, #0]
 800c3c8:	6835      	ldr	r5, [r6, #0]
 800c3ca:	4699      	mov	r9, r3
 800c3cc:	460f      	mov	r7, r1
 800c3ce:	4690      	mov	r8, r2
 800c3d0:	47a8      	blx	r5
 800c3d2:	4d10      	ldr	r5, [pc, #64]	; (800c414 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800c3d4:	4606      	mov	r6, r0
 800c3d6:	f8a5 9000 	strh.w	r9, [r5]
 800c3da:	f7f6 fb09 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800c3de:	6803      	ldr	r3, [r0, #0]
 800c3e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c3e2:	4798      	blx	r3
 800c3e4:	b128      	cbz	r0, 800c3f2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800c3e6:	2801      	cmp	r0, #1
 800c3e8:	d00b      	beq.n	800c402 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800c3ea:	4630      	mov	r0, r6
 800c3ec:	b005      	add	sp, #20
 800c3ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c3f2:	882b      	ldrh	r3, [r5, #0]
 800c3f4:	fb08 7203 	mla	r2, r8, r3, r7
 800c3f8:	9b03      	ldr	r3, [sp, #12]
 800c3fa:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c3fe:	63e3      	str	r3, [r4, #60]	; 0x3c
 800c400:	e7f3      	b.n	800c3ea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c402:	882a      	ldrh	r2, [r5, #0]
 800c404:	9b03      	ldr	r3, [sp, #12]
 800c406:	fb08 7202 	mla	r2, r8, r2, r7
 800c40a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c40e:	1a9a      	subs	r2, r3, r2
 800c410:	63e2      	str	r2, [r4, #60]	; 0x3c
 800c412:	e7ea      	b.n	800c3ea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c414:	20014fbe 	.word	0x20014fbe

0800c418 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800c418:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c41a:	b08b      	sub	sp, #44	; 0x2c
 800c41c:	4617      	mov	r7, r2
 800c41e:	4604      	mov	r4, r0
 800c420:	460e      	mov	r6, r1
 800c422:	461d      	mov	r5, r3
 800c424:	f7f6 fae4 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800c428:	6803      	ldr	r3, [r0, #0]
 800c42a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c42c:	4798      	blx	r3
 800c42e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c432:	9007      	str	r0, [sp, #28]
 800c434:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c438:	4b0d      	ldr	r3, [pc, #52]	; (800c470 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800c43a:	6822      	ldr	r2, [r4, #0]
 800c43c:	881b      	ldrh	r3, [r3, #0]
 800c43e:	9306      	str	r3, [sp, #24]
 800c440:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c444:	9305      	str	r3, [sp, #20]
 800c446:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c44a:	9304      	str	r3, [sp, #16]
 800c44c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c450:	9303      	str	r3, [sp, #12]
 800c452:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c456:	9302      	str	r3, [sp, #8]
 800c458:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c45c:	e9cd 5300 	strd	r5, r3, [sp]
 800c460:	4631      	mov	r1, r6
 800c462:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800c464:	463b      	mov	r3, r7
 800c466:	2200      	movs	r2, #0
 800c468:	4620      	mov	r0, r4
 800c46a:	47a8      	blx	r5
 800c46c:	b00b      	add	sp, #44	; 0x2c
 800c46e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c470:	20014fbe 	.word	0x20014fbe

0800c474 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800c474:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c478:	4698      	mov	r8, r3
 800c47a:	6803      	ldr	r3, [r0, #0]
 800c47c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800c47e:	4b15      	ldr	r3, [pc, #84]	; (800c4d4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800c480:	b08b      	sub	sp, #44	; 0x2c
 800c482:	4617      	mov	r7, r2
 800c484:	f8b3 9000 	ldrh.w	r9, [r3]
 800c488:	460e      	mov	r6, r1
 800c48a:	4604      	mov	r4, r0
 800c48c:	f7f6 fab0 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800c490:	6803      	ldr	r3, [r0, #0]
 800c492:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c494:	4798      	blx	r3
 800c496:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c49a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c49e:	2302      	movs	r3, #2
 800c4a0:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800c4a4:	2301      	movs	r3, #1
 800c4a6:	9305      	str	r3, [sp, #20]
 800c4a8:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c4ac:	9304      	str	r3, [sp, #16]
 800c4ae:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c4b2:	9303      	str	r3, [sp, #12]
 800c4b4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c4b8:	9302      	str	r3, [sp, #8]
 800c4ba:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c4be:	2200      	movs	r2, #0
 800c4c0:	e9cd 8300 	strd	r8, r3, [sp]
 800c4c4:	4631      	mov	r1, r6
 800c4c6:	463b      	mov	r3, r7
 800c4c8:	4620      	mov	r0, r4
 800c4ca:	47a8      	blx	r5
 800c4cc:	b00b      	add	sp, #44	; 0x2c
 800c4ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c4d2:	bf00      	nop
 800c4d4:	20014fbe 	.word	0x20014fbe

0800c4d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800c4d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c4dc:	4698      	mov	r8, r3
 800c4de:	6803      	ldr	r3, [r0, #0]
 800c4e0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800c4e2:	4b11      	ldr	r3, [pc, #68]	; (800c528 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800c4e4:	b087      	sub	sp, #28
 800c4e6:	f8b3 9000 	ldrh.w	r9, [r3]
 800c4ea:	460e      	mov	r6, r1
 800c4ec:	4617      	mov	r7, r2
 800c4ee:	4604      	mov	r4, r0
 800c4f0:	f7f6 fa7e 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800c4f4:	6803      	ldr	r3, [r0, #0]
 800c4f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c4f8:	4798      	blx	r3
 800c4fa:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800c4fe:	f8cd 900c 	str.w	r9, [sp, #12]
 800c502:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800c506:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800c50a:	9302      	str	r3, [sp, #8]
 800c50c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c510:	9301      	str	r3, [sp, #4]
 800c512:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c516:	9300      	str	r3, [sp, #0]
 800c518:	463a      	mov	r2, r7
 800c51a:	4643      	mov	r3, r8
 800c51c:	4631      	mov	r1, r6
 800c51e:	4620      	mov	r0, r4
 800c520:	47a8      	blx	r5
 800c522:	b007      	add	sp, #28
 800c524:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c528:	20014fbe 	.word	0x20014fbe

0800c52c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c52c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c530:	4604      	mov	r4, r0
 800c532:	b08f      	sub	sp, #60	; 0x3c
 800c534:	4610      	mov	r0, r2
 800c536:	460d      	mov	r5, r1
 800c538:	4691      	mov	r9, r2
 800c53a:	461e      	mov	r6, r3
 800c53c:	f006 fa88 	bl	8012a50 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c540:	2800      	cmp	r0, #0
 800c542:	f000 809d 	beq.w	800c680 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800c546:	6823      	ldr	r3, [r4, #0]
 800c548:	f8df b198 	ldr.w	fp, [pc, #408]	; 800c6e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800c54c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c54e:	f8df a198 	ldr.w	sl, [pc, #408]	; 800c6e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800c552:	4f61      	ldr	r7, [pc, #388]	; (800c6d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c554:	4620      	mov	r0, r4
 800c556:	4798      	blx	r3
 800c558:	6823      	ldr	r3, [r4, #0]
 800c55a:	4620      	mov	r0, r4
 800c55c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c55e:	4798      	blx	r3
 800c560:	f8bb 3000 	ldrh.w	r3, [fp]
 800c564:	9301      	str	r3, [sp, #4]
 800c566:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800c56a:	f8ba 3000 	ldrh.w	r3, [sl]
 800c56e:	9302      	str	r3, [sp, #8]
 800c570:	883b      	ldrh	r3, [r7, #0]
 800c572:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800c576:	9303      	str	r3, [sp, #12]
 800c578:	4b58      	ldr	r3, [pc, #352]	; (800c6dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c57a:	9305      	str	r3, [sp, #20]
 800c57c:	881a      	ldrh	r2, [r3, #0]
 800c57e:	9204      	str	r2, [sp, #16]
 800c580:	4640      	mov	r0, r8
 800c582:	f006 faf9 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c586:	8038      	strh	r0, [r7, #0]
 800c588:	4640      	mov	r0, r8
 800c58a:	f006 fb29 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c58e:	9b05      	ldr	r3, [sp, #20]
 800c590:	b280      	uxth	r0, r0
 800c592:	8018      	strh	r0, [r3, #0]
 800c594:	4b52      	ldr	r3, [pc, #328]	; (800c6e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800c596:	781b      	ldrb	r3, [r3, #0]
 800c598:	2b00      	cmp	r3, #0
 800c59a:	d174      	bne.n	800c686 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800c59c:	883b      	ldrh	r3, [r7, #0]
 800c59e:	f8ab 3000 	strh.w	r3, [fp]
 800c5a2:	f8aa 0000 	strh.w	r0, [sl]
 800c5a6:	4648      	mov	r0, r9
 800c5a8:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800c5ac:	f006 fa50 	bl	8012a50 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c5b0:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800c5b4:	2200      	movs	r2, #0
 800c5b6:	4611      	mov	r1, r2
 800c5b8:	4628      	mov	r0, r5
 800c5ba:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800c5be:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800c5c2:	f7f5 fef9 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 800c5c6:	2301      	movs	r3, #1
 800c5c8:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800c5cc:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800c5d0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c5d4:	2b00      	cmp	r3, #0
 800c5d6:	dd5c      	ble.n	800c692 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800c5d8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c5dc:	2b00      	cmp	r3, #0
 800c5de:	dd58      	ble.n	800c692 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800c5e0:	462a      	mov	r2, r5
 800c5e2:	ab0a      	add	r3, sp, #40	; 0x28
 800c5e4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c5e8:	6851      	ldr	r1, [r2, #4]
 800c5ea:	c303      	stmia	r3!, {r0, r1}
 800c5ec:	4631      	mov	r1, r6
 800c5ee:	a80a      	add	r0, sp, #40	; 0x28
 800c5f0:	f7ff fc06 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800c5f4:	4b38      	ldr	r3, [pc, #224]	; (800c6d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c5f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c5fa:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c5fe:	2100      	movs	r1, #0
 800c600:	aa0a      	add	r2, sp, #40	; 0x28
 800c602:	4b36      	ldr	r3, [pc, #216]	; (800c6dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c604:	910c      	str	r1, [sp, #48]	; 0x30
 800c606:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c60a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c60e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c612:	ab08      	add	r3, sp, #32
 800c614:	e883 0003 	stmia.w	r3, {r0, r1}
 800c618:	4618      	mov	r0, r3
 800c61a:	a90c      	add	r1, sp, #48	; 0x30
 800c61c:	f7ff fbf0 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800c620:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800c622:	2b00      	cmp	r3, #0
 800c624:	d13c      	bne.n	800c6a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800c626:	2000      	movs	r0, #0
 800c628:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800c62c:	2600      	movs	r6, #0
 800c62e:	682a      	ldr	r2, [r5, #0]
 800c630:	696b      	ldr	r3, [r5, #20]
 800c632:	616e      	str	r6, [r5, #20]
 800c634:	9305      	str	r3, [sp, #20]
 800c636:	6892      	ldr	r2, [r2, #8]
 800c638:	a908      	add	r1, sp, #32
 800c63a:	4628      	mov	r0, r5
 800c63c:	4790      	blx	r2
 800c63e:	9b05      	ldr	r3, [sp, #20]
 800c640:	616b      	str	r3, [r5, #20]
 800c642:	4652      	mov	r2, sl
 800c644:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800c648:	4649      	mov	r1, r9
 800c64a:	4628      	mov	r0, r5
 800c64c:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800c650:	f7f5 feb2 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 800c654:	4b23      	ldr	r3, [pc, #140]	; (800c6e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800c656:	9a01      	ldr	r2, [sp, #4]
 800c658:	801a      	strh	r2, [r3, #0]
 800c65a:	4b23      	ldr	r3, [pc, #140]	; (800c6e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800c65c:	9a02      	ldr	r2, [sp, #8]
 800c65e:	801a      	strh	r2, [r3, #0]
 800c660:	4b1d      	ldr	r3, [pc, #116]	; (800c6d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c662:	9a03      	ldr	r2, [sp, #12]
 800c664:	801a      	strh	r2, [r3, #0]
 800c666:	4b1d      	ldr	r3, [pc, #116]	; (800c6dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c668:	9a04      	ldr	r2, [sp, #16]
 800c66a:	801a      	strh	r2, [r3, #0]
 800c66c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800c670:	6823      	ldr	r3, [r4, #0]
 800c672:	4620      	mov	r0, r4
 800c674:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c676:	4798      	blx	r3
 800c678:	6823      	ldr	r3, [r4, #0]
 800c67a:	4620      	mov	r0, r4
 800c67c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c67e:	4798      	blx	r3
 800c680:	b00f      	add	sp, #60	; 0x3c
 800c682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c686:	883b      	ldrh	r3, [r7, #0]
 800c688:	f8ab 0000 	strh.w	r0, [fp]
 800c68c:	f8aa 3000 	strh.w	r3, [sl]
 800c690:	e789      	b.n	800c5a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800c692:	462a      	mov	r2, r5
 800c694:	ab0a      	add	r3, sp, #40	; 0x28
 800c696:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c69a:	6851      	ldr	r1, [r2, #4]
 800c69c:	c303      	stmia	r3!, {r0, r1}
 800c69e:	e7a9      	b.n	800c5f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800c6a0:	a807      	add	r0, sp, #28
 800c6a2:	f006 fbd9 	bl	8012e58 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c6a6:	4606      	mov	r6, r0
 800c6a8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800c6aa:	6803      	ldr	r3, [r0, #0]
 800c6ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c6ae:	4798      	blx	r3
 800c6b0:	4286      	cmp	r6, r0
 800c6b2:	d1b8      	bne.n	800c626 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800c6b4:	f7f6 f99c 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800c6b8:	6803      	ldr	r3, [r0, #0]
 800c6ba:	4606      	mov	r6, r0
 800c6bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c6be:	9305      	str	r3, [sp, #20]
 800c6c0:	a807      	add	r0, sp, #28
 800c6c2:	f006 fbc9 	bl	8012e58 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c6c6:	9b05      	ldr	r3, [sp, #20]
 800c6c8:	4601      	mov	r1, r0
 800c6ca:	4630      	mov	r0, r6
 800c6cc:	4798      	blx	r3
 800c6ce:	f080 0001 	eor.w	r0, r0, #1
 800c6d2:	b2c0      	uxtb	r0, r0
 800c6d4:	e7a8      	b.n	800c628 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800c6d6:	bf00      	nop
 800c6d8:	20014fb8 	.word	0x20014fb8
 800c6dc:	20014fba 	.word	0x20014fba
 800c6e0:	20014fbc 	.word	0x20014fbc
 800c6e4:	20014fbe 	.word	0x20014fbe
 800c6e8:	20014fc0 	.word	0x20014fc0

0800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c6ec:	b510      	push	{r4, lr}
 800c6ee:	4b07      	ldr	r3, [pc, #28]	; (800c70c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c6f0:	781b      	ldrb	r3, [r3, #0]
 800c6f2:	4604      	mov	r4, r0
 800c6f4:	b13b      	cbz	r3, 800c706 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c6f6:	6803      	ldr	r3, [r0, #0]
 800c6f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c6fa:	4798      	blx	r3
 800c6fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c6fe:	4283      	cmp	r3, r0
 800c700:	d101      	bne.n	800c706 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c702:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800c704:	bd10      	pop	{r4, pc}
 800c706:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c708:	e7fc      	b.n	800c704 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c70a:	bf00      	nop
 800c70c:	20014fc2 	.word	0x20014fc2

0800c710 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800c710:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c714:	b08a      	sub	sp, #40	; 0x28
 800c716:	461d      	mov	r5, r3
 800c718:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c71c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c720:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c724:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c728:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c72c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c730:	2400      	movs	r4, #0
 800c732:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c736:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800c73a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c73e:	4690      	mov	r8, r2
 800c740:	4607      	mov	r7, r0
 800c742:	9404      	str	r4, [sp, #16]
 800c744:	f88d 4020 	strb.w	r4, [sp, #32]
 800c748:	f7ff ffd0 	bl	800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c74c:	fb06 8505 	mla	r5, r6, r5, r8
 800c750:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c754:	6878      	ldr	r0, [r7, #4]
 800c756:	9505      	str	r5, [sp, #20]
 800c758:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c75c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c760:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800c764:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800c768:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800c76c:	6803      	ldr	r3, [r0, #0]
 800c76e:	a901      	add	r1, sp, #4
 800c770:	685b      	ldr	r3, [r3, #4]
 800c772:	4798      	blx	r3
 800c774:	b00a      	add	sp, #40	; 0x28
 800c776:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c77a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800c77a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c77e:	b08b      	sub	sp, #44	; 0x2c
 800c780:	2400      	movs	r4, #0
 800c782:	461d      	mov	r5, r3
 800c784:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800c788:	4688      	mov	r8, r1
 800c78a:	4691      	mov	r9, r2
 800c78c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800c790:	9404      	str	r4, [sp, #16]
 800c792:	4607      	mov	r7, r0
 800c794:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c798:	f7ff ffa8 	bl	800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c79c:	fb06 9505 	mla	r5, r6, r5, r9
 800c7a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c7a4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c7a8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c7ac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c7b0:	6878      	ldr	r0, [r7, #4]
 800c7b2:	9505      	str	r5, [sp, #20]
 800c7b4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c7b8:	f8ad 401c 	strh.w	r4, [sp, #28]
 800c7bc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c7c0:	f8cd 8010 	str.w	r8, [sp, #16]
 800c7c4:	f8ad 4020 	strh.w	r4, [sp, #32]
 800c7c8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c7cc:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800c7d0:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800c7d4:	6803      	ldr	r3, [r0, #0]
 800c7d6:	a901      	add	r1, sp, #4
 800c7d8:	685b      	ldr	r3, [r3, #4]
 800c7da:	4798      	blx	r3
 800c7dc:	b00b      	add	sp, #44	; 0x2c
 800c7de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800c7e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800c7e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c7e8:	b08a      	sub	sp, #40	; 0x28
 800c7ea:	4698      	mov	r8, r3
 800c7ec:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800c7f0:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800c7f4:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800c7f8:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800c7fc:	2300      	movs	r3, #0
 800c7fe:	2d0b      	cmp	r5, #11
 800c800:	4606      	mov	r6, r0
 800c802:	9304      	str	r3, [sp, #16]
 800c804:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800c808:	d138      	bne.n	800c87c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800c80a:	2380      	movs	r3, #128	; 0x80
 800c80c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c810:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c814:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c818:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c81c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c820:	f88d 0020 	strb.w	r0, [sp, #32]
 800c824:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c828:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c82c:	4630      	mov	r0, r6
 800c82e:	9203      	str	r2, [sp, #12]
 800c830:	f7ff ff5c 	bl	800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c834:	2c0b      	cmp	r4, #11
 800c836:	bf98      	it	ls
 800c838:	4b1b      	ldrls	r3, [pc, #108]	; (800c8a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800c83a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800c83e:	bf98      	it	ls
 800c840:	5d19      	ldrbls	r1, [r3, r4]
 800c842:	f8ad 701e 	strh.w	r7, [sp, #30]
 800c846:	bf88      	it	hi
 800c848:	2100      	movhi	r1, #0
 800c84a:	fb02 8307 	mla	r3, r2, r7, r8
 800c84e:	10c9      	asrs	r1, r1, #3
 800c850:	fb01 0003 	mla	r0, r1, r3, r0
 800c854:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800c858:	9005      	str	r0, [sp, #20]
 800c85a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800c85e:	6870      	ldr	r0, [r6, #4]
 800c860:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800c864:	2300      	movs	r3, #0
 800c866:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c86a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c86e:	6803      	ldr	r3, [r0, #0]
 800c870:	a901      	add	r1, sp, #4
 800c872:	685b      	ldr	r3, [r3, #4]
 800c874:	4798      	blx	r3
 800c876:	b00a      	add	sp, #40	; 0x28
 800c878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c87c:	2d02      	cmp	r5, #2
 800c87e:	d109      	bne.n	800c894 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800c880:	28ff      	cmp	r0, #255	; 0xff
 800c882:	d105      	bne.n	800c890 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800c884:	f1bc 0f00 	cmp.w	ip, #0
 800c888:	bf14      	ite	ne
 800c88a:	2340      	movne	r3, #64	; 0x40
 800c88c:	2320      	moveq	r3, #32
 800c88e:	e7bd      	b.n	800c80c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c890:	2340      	movs	r3, #64	; 0x40
 800c892:	e7bb      	b.n	800c80c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c894:	28ff      	cmp	r0, #255	; 0xff
 800c896:	d105      	bne.n	800c8a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800c898:	f1bc 0f00 	cmp.w	ip, #0
 800c89c:	bf14      	ite	ne
 800c89e:	2304      	movne	r3, #4
 800c8a0:	2301      	moveq	r3, #1
 800c8a2:	e7b3      	b.n	800c80c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c8a4:	2304      	movs	r3, #4
 800c8a6:	e7b1      	b.n	800c80c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c8a8:	080230a4 	.word	0x080230a4

0800c8ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800c8ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8b0:	b08b      	sub	sp, #44	; 0x2c
 800c8b2:	461d      	mov	r5, r3
 800c8b4:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800c8b8:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800c8bc:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800c8c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800c8c4:	bf14      	ite	ne
 800c8c6:	2308      	movne	r3, #8
 800c8c8:	2302      	moveq	r3, #2
 800c8ca:	2400      	movs	r4, #0
 800c8cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c8d0:	4688      	mov	r8, r1
 800c8d2:	4693      	mov	fp, r2
 800c8d4:	9404      	str	r4, [sp, #16]
 800c8d6:	4607      	mov	r7, r0
 800c8d8:	f7ff ff08 	bl	800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c8dc:	2e0b      	cmp	r6, #11
 800c8de:	bf98      	it	ls
 800c8e0:	4b15      	ldrls	r3, [pc, #84]	; (800c938 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800c8e2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800c8e6:	bf98      	it	ls
 800c8e8:	5d9c      	ldrbls	r4, [r3, r6]
 800c8ea:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c8ee:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c8f2:	fb05 b50a 	mla	r5, r5, sl, fp
 800c8f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800c8fa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c8fe:	10e4      	asrs	r4, r4, #3
 800c900:	fb04 0405 	mla	r4, r4, r5, r0
 800c904:	2300      	movs	r3, #0
 800c906:	6878      	ldr	r0, [r7, #4]
 800c908:	9405      	str	r4, [sp, #20]
 800c90a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c90e:	f8ad a01e 	strh.w	sl, [sp, #30]
 800c912:	f8cd 8010 	str.w	r8, [sp, #16]
 800c916:	f88d 9020 	strb.w	r9, [sp, #32]
 800c91a:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800c91e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c922:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800c926:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800c92a:	6803      	ldr	r3, [r0, #0]
 800c92c:	a901      	add	r1, sp, #4
 800c92e:	685b      	ldr	r3, [r3, #4]
 800c930:	4798      	blx	r3
 800c932:	b00b      	add	sp, #44	; 0x2c
 800c934:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c938:	080230a4 	.word	0x080230a4

0800c93c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800c93c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c940:	461e      	mov	r6, r3
 800c942:	4b0a      	ldr	r3, [pc, #40]	; (800c96c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800c944:	460f      	mov	r7, r1
 800c946:	881d      	ldrh	r5, [r3, #0]
 800c948:	4690      	mov	r8, r2
 800c94a:	f7f6 f851 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800c94e:	6803      	ldr	r3, [r0, #0]
 800c950:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c952:	4798      	blx	r3
 800c954:	280b      	cmp	r0, #11
 800c956:	bf9a      	itte	ls
 800c958:	4b05      	ldrls	r3, [pc, #20]	; (800c970 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800c95a:	5c1c      	ldrbls	r4, [r3, r0]
 800c95c:	2400      	movhi	r4, #0
 800c95e:	fb08 7005 	mla	r0, r8, r5, r7
 800c962:	10e4      	asrs	r4, r4, #3
 800c964:	fb04 6000 	mla	r0, r4, r0, r6
 800c968:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c96c:	20014fbe 	.word	0x20014fbe
 800c970:	080230a4 	.word	0x080230a4

0800c974 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800c974:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c976:	b08b      	sub	sp, #44	; 0x2c
 800c978:	461f      	mov	r7, r3
 800c97a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800c97e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c982:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c986:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c98a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c98e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c992:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c996:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c99a:	2500      	movs	r5, #0
 800c99c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c9a0:	f88d 3020 	strb.w	r3, [sp, #32]
 800c9a4:	4604      	mov	r4, r0
 800c9a6:	4616      	mov	r6, r2
 800c9a8:	9504      	str	r5, [sp, #16]
 800c9aa:	f7ff fe9f 	bl	800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c9ae:	463a      	mov	r2, r7
 800c9b0:	4631      	mov	r1, r6
 800c9b2:	4603      	mov	r3, r0
 800c9b4:	4620      	mov	r0, r4
 800c9b6:	f7ff ffc1 	bl	800c93c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c9ba:	4b0e      	ldr	r3, [pc, #56]	; (800c9f4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800c9bc:	9005      	str	r0, [sp, #20]
 800c9be:	881b      	ldrh	r3, [r3, #0]
 800c9c0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c9c4:	f7f6 f814 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800c9c8:	6803      	ldr	r3, [r0, #0]
 800c9ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c9cc:	4798      	blx	r3
 800c9ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c9d0:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800c9d4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800c9d8:	9304      	str	r3, [sp, #16]
 800c9da:	6860      	ldr	r0, [r4, #4]
 800c9dc:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c9e0:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800c9e4:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800c9e8:	6803      	ldr	r3, [r0, #0]
 800c9ea:	a901      	add	r1, sp, #4
 800c9ec:	685b      	ldr	r3, [r3, #4]
 800c9ee:	4798      	blx	r3
 800c9f0:	b00b      	add	sp, #44	; 0x2c
 800c9f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c9f4:	20014fbe 	.word	0x20014fbe

0800c9f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800c9f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c9fa:	b08d      	sub	sp, #52	; 0x34
 800c9fc:	466b      	mov	r3, sp
 800c9fe:	e883 0006 	stmia.w	r3, {r1, r2}
 800ca02:	2300      	movs	r3, #0
 800ca04:	9306      	str	r3, [sp, #24]
 800ca06:	6803      	ldr	r3, [r0, #0]
 800ca08:	f8bd 6000 	ldrh.w	r6, [sp]
 800ca0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ca0e:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800ca12:	2501      	movs	r5, #1
 800ca14:	9503      	str	r5, [sp, #12]
 800ca16:	4604      	mov	r4, r0
 800ca18:	4798      	blx	r3
 800ca1a:	463a      	mov	r2, r7
 800ca1c:	4631      	mov	r1, r6
 800ca1e:	4603      	mov	r3, r0
 800ca20:	4620      	mov	r0, r4
 800ca22:	f7ff ff8b 	bl	800c93c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ca26:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ca28:	9307      	str	r3, [sp, #28]
 800ca2a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ca2e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ca32:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ca36:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ca3a:	4b0f      	ldr	r3, [pc, #60]	; (800ca78 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ca3c:	9004      	str	r0, [sp, #16]
 800ca3e:	881b      	ldrh	r3, [r3, #0]
 800ca40:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ca44:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ca48:	f7f5 ffd2 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800ca4c:	6803      	ldr	r3, [r0, #0]
 800ca4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ca50:	4798      	blx	r3
 800ca52:	23ff      	movs	r3, #255	; 0xff
 800ca54:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ca58:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ca5c:	6860      	ldr	r0, [r4, #4]
 800ca5e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ca62:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ca66:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ca6a:	6803      	ldr	r3, [r0, #0]
 800ca6c:	a903      	add	r1, sp, #12
 800ca6e:	685b      	ldr	r3, [r3, #4]
 800ca70:	4798      	blx	r3
 800ca72:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800ca74:	b00d      	add	sp, #52	; 0x34
 800ca76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca78:	20014fbe 	.word	0x20014fbe

0800ca7c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ca7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca80:	b08c      	sub	sp, #48	; 0x30
 800ca82:	461e      	mov	r6, r3
 800ca84:	466d      	mov	r5, sp
 800ca86:	2300      	movs	r3, #0
 800ca88:	e885 0006 	stmia.w	r5, {r1, r2}
 800ca8c:	9306      	str	r3, [sp, #24]
 800ca8e:	6803      	ldr	r3, [r0, #0]
 800ca90:	f8bd 7000 	ldrh.w	r7, [sp]
 800ca94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ca96:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ca9a:	2501      	movs	r5, #1
 800ca9c:	9503      	str	r5, [sp, #12]
 800ca9e:	4604      	mov	r4, r0
 800caa0:	4798      	blx	r3
 800caa2:	4642      	mov	r2, r8
 800caa4:	4639      	mov	r1, r7
 800caa6:	4603      	mov	r3, r0
 800caa8:	4620      	mov	r0, r4
 800caaa:	f7ff ff47 	bl	800c93c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800caae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cab2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cab6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800caba:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cabe:	4b11      	ldr	r3, [pc, #68]	; (800cb04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800cac0:	9004      	str	r0, [sp, #16]
 800cac2:	881b      	ldrh	r3, [r3, #0]
 800cac4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cac8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800caca:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cace:	9607      	str	r6, [sp, #28]
 800cad0:	f7f5 ff8e 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800cad4:	6803      	ldr	r3, [r0, #0]
 800cad6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cad8:	4798      	blx	r3
 800cada:	23ff      	movs	r3, #255	; 0xff
 800cadc:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800cae0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800cae4:	6860      	ldr	r0, [r4, #4]
 800cae6:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800caea:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800caee:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800caf2:	6803      	ldr	r3, [r0, #0]
 800caf4:	a903      	add	r1, sp, #12
 800caf6:	685b      	ldr	r3, [r3, #4]
 800caf8:	4798      	blx	r3
 800cafa:	4630      	mov	r0, r6
 800cafc:	b00c      	add	sp, #48	; 0x30
 800cafe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cb02:	bf00      	nop
 800cb04:	20014fbe 	.word	0x20014fbe

0800cb08 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800cb08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb0a:	b085      	sub	sp, #20
 800cb0c:	ac02      	add	r4, sp, #8
 800cb0e:	e884 0006 	stmia.w	r4, {r1, r2}
 800cb12:	4605      	mov	r5, r0
 800cb14:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800cb18:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800cb1c:	f7ff fde6 	bl	800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cb20:	463a      	mov	r2, r7
 800cb22:	4603      	mov	r3, r0
 800cb24:	4631      	mov	r1, r6
 800cb26:	4628      	mov	r0, r5
 800cb28:	f7ff ff08 	bl	800c93c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cb2c:	4a05      	ldr	r2, [pc, #20]	; (800cb44 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800cb2e:	682b      	ldr	r3, [r5, #0]
 800cb30:	8812      	ldrh	r2, [r2, #0]
 800cb32:	9200      	str	r2, [sp, #0]
 800cb34:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800cb36:	e894 0006 	ldmia.w	r4, {r1, r2}
 800cb3a:	4603      	mov	r3, r0
 800cb3c:	4628      	mov	r0, r5
 800cb3e:	47b0      	blx	r6
 800cb40:	b005      	add	sp, #20
 800cb42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cb44:	20014fbe 	.word	0x20014fbe

0800cb48 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800cb48:	b570      	push	{r4, r5, r6, lr}
 800cb4a:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800cb4e:	4604      	mov	r4, r0
 800cb50:	b19b      	cbz	r3, 800cb7a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800cb52:	2002      	movs	r0, #2
 800cb54:	f7f3 fe13 	bl	800077e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800cb58:	2300      	movs	r3, #0
 800cb5a:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800cb5e:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800cb62:	6823      	ldr	r3, [r4, #0]
 800cb64:	4620      	mov	r0, r4
 800cb66:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800cb6a:	f7ff fdbf 	bl	800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cb6e:	462b      	mov	r3, r5
 800cb70:	4601      	mov	r1, r0
 800cb72:	4620      	mov	r0, r4
 800cb74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb78:	4718      	bx	r3
 800cb7a:	bd70      	pop	{r4, r5, r6, pc}

0800cb7c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800cb7c:	b538      	push	{r3, r4, r5, lr}
 800cb7e:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800cb82:	428b      	cmp	r3, r1
 800cb84:	4604      	mov	r4, r0
 800cb86:	460d      	mov	r5, r1
 800cb88:	d006      	beq.n	800cb98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800cb8a:	6803      	ldr	r3, [r0, #0]
 800cb8c:	b929      	cbnz	r1, 800cb9a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800cb8e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800cb92:	4798      	blx	r3
 800cb94:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800cb98:	bd38      	pop	{r3, r4, r5, pc}
 800cb9a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800cb9e:	e7f8      	b.n	800cb92 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800cba0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800cba0:	b510      	push	{r4, lr}
 800cba2:	4b0d      	ldr	r3, [pc, #52]	; (800cbd8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800cba4:	781b      	ldrb	r3, [r3, #0]
 800cba6:	4604      	mov	r4, r0
 800cba8:	b95b      	cbnz	r3, 800cbc2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cbaa:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800cbae:	2b02      	cmp	r3, #2
 800cbb0:	d007      	beq.n	800cbc2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cbb2:	6840      	ldr	r0, [r0, #4]
 800cbb4:	f000 f912 	bl	800cddc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800cbb8:	b118      	cbz	r0, 800cbc2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cbba:	6862      	ldr	r2, [r4, #4]
 800cbbc:	7a53      	ldrb	r3, [r2, #9]
 800cbbe:	2b00      	cmp	r3, #0
 800cbc0:	d0fc      	beq.n	800cbbc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800cbc2:	f7f3 fee7 	bl	8000994 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cbc6:	4620      	mov	r0, r4
 800cbc8:	2100      	movs	r1, #0
 800cbca:	f7ff ffd7 	bl	800cb7c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800cbce:	4620      	mov	r0, r4
 800cbd0:	f7ff fd8c 	bl	800c6ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cbd4:	bd10      	pop	{r4, pc}
 800cbd6:	bf00      	nop
 800cbd8:	20014fc2 	.word	0x20014fc2

0800cbdc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800cbdc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800cbe0:	1a13      	subs	r3, r2, r0
 800cbe2:	4258      	negs	r0, r3
 800cbe4:	4158      	adcs	r0, r3
 800cbe6:	4770      	bx	lr

0800cbe8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800cbe8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800cbec:	1a9b      	subs	r3, r3, r2
 800cbee:	2b00      	cmp	r3, #0
 800cbf0:	bfdc      	itt	le
 800cbf2:	6882      	ldrle	r2, [r0, #8]
 800cbf4:	189b      	addle	r3, r3, r2
 800cbf6:	2b01      	cmp	r3, #1
 800cbf8:	bfcc      	ite	gt
 800cbfa:	2000      	movgt	r0, #0
 800cbfc:	2001      	movle	r0, #1
 800cbfe:	4770      	bx	lr

0800cc00 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800cc00:	6902      	ldr	r2, [r0, #16]
 800cc02:	6843      	ldr	r3, [r0, #4]
 800cc04:	2024      	movs	r0, #36	; 0x24
 800cc06:	fb00 3002 	mla	r0, r0, r2, r3
 800cc0a:	4770      	bx	lr

0800cc0c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800cc0c:	6803      	ldr	r3, [r0, #0]
 800cc0e:	691b      	ldr	r3, [r3, #16]
 800cc10:	4718      	bx	r3

0800cc12 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800cc12:	b570      	push	{r4, r5, r6, lr}
 800cc14:	2301      	movs	r3, #1
 800cc16:	7203      	strb	r3, [r0, #8]
 800cc18:	4604      	mov	r4, r0
 800cc1a:	6840      	ldr	r0, [r0, #4]
 800cc1c:	6803      	ldr	r3, [r0, #0]
 800cc1e:	699b      	ldr	r3, [r3, #24]
 800cc20:	4798      	blx	r3
 800cc22:	6803      	ldr	r3, [r0, #0]
 800cc24:	2b40      	cmp	r3, #64	; 0x40
 800cc26:	4605      	mov	r5, r0
 800cc28:	d00c      	beq.n	800cc44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc2a:	d810      	bhi.n	800cc4e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800cc2c:	2b04      	cmp	r3, #4
 800cc2e:	d01d      	beq.n	800cc6c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800cc30:	d804      	bhi.n	800cc3c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800cc32:	2b01      	cmp	r3, #1
 800cc34:	d006      	beq.n	800cc44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc36:	2b02      	cmp	r3, #2
 800cc38:	d02c      	beq.n	800cc94 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800cc3a:	bd70      	pop	{r4, r5, r6, pc}
 800cc3c:	2b08      	cmp	r3, #8
 800cc3e:	d01d      	beq.n	800cc7c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800cc40:	2b20      	cmp	r3, #32
 800cc42:	d1fa      	bne.n	800cc3a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800cc44:	6823      	ldr	r3, [r4, #0]
 800cc46:	4620      	mov	r0, r4
 800cc48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cc4a:	4798      	blx	r3
 800cc4c:	e013      	b.n	800cc76 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800cc4e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800cc52:	d0f7      	beq.n	800cc44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc54:	d804      	bhi.n	800cc60 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800cc56:	2b80      	cmp	r3, #128	; 0x80
 800cc58:	d0f4      	beq.n	800cc44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc5a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cc5e:	e7f0      	b.n	800cc42 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800cc60:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800cc64:	d0ee      	beq.n	800cc44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc66:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cc6a:	e7e5      	b.n	800cc38 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800cc6c:	6823      	ldr	r3, [r4, #0]
 800cc6e:	7f01      	ldrb	r1, [r0, #28]
 800cc70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc72:	4620      	mov	r0, r4
 800cc74:	4798      	blx	r3
 800cc76:	6823      	ldr	r3, [r4, #0]
 800cc78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cc7a:	e006      	b.n	800cc8a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800cc7c:	6823      	ldr	r3, [r4, #0]
 800cc7e:	7f01      	ldrb	r1, [r0, #28]
 800cc80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc82:	4620      	mov	r0, r4
 800cc84:	4798      	blx	r3
 800cc86:	6823      	ldr	r3, [r4, #0]
 800cc88:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cc8a:	4629      	mov	r1, r5
 800cc8c:	4620      	mov	r0, r4
 800cc8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc92:	4718      	bx	r3
 800cc94:	6823      	ldr	r3, [r4, #0]
 800cc96:	4620      	mov	r0, r4
 800cc98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cc9a:	4798      	blx	r3
 800cc9c:	e7f3      	b.n	800cc86 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800cc9e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800cc9e:	4770      	bx	lr

0800cca0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800cca0:	4770      	bx	lr

0800cca2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800cca2:	4770      	bx	lr

0800cca4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800cca4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800cca8:	1ad2      	subs	r2, r2, r3
 800ccaa:	2a00      	cmp	r2, #0
 800ccac:	b510      	push	{r4, lr}
 800ccae:	bfdc      	itt	le
 800ccb0:	6884      	ldrle	r4, [r0, #8]
 800ccb2:	1912      	addle	r2, r2, r4
 800ccb4:	2a01      	cmp	r2, #1
 800ccb6:	dd16      	ble.n	800cce6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800ccb8:	6842      	ldr	r2, [r0, #4]
 800ccba:	2424      	movs	r4, #36	; 0x24
 800ccbc:	fb04 2303 	mla	r3, r4, r3, r2
 800ccc0:	f101 0220 	add.w	r2, r1, #32
 800ccc4:	f851 4b04 	ldr.w	r4, [r1], #4
 800ccc8:	f843 4b04 	str.w	r4, [r3], #4
 800cccc:	4291      	cmp	r1, r2
 800ccce:	d1f9      	bne.n	800ccc4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800ccd0:	780a      	ldrb	r2, [r1, #0]
 800ccd2:	701a      	strb	r2, [r3, #0]
 800ccd4:	68c3      	ldr	r3, [r0, #12]
 800ccd6:	6882      	ldr	r2, [r0, #8]
 800ccd8:	f3bf 8f5b 	dmb	ish
 800ccdc:	3301      	adds	r3, #1
 800ccde:	429a      	cmp	r2, r3
 800cce0:	bfd8      	it	le
 800cce2:	1a9b      	suble	r3, r3, r2
 800cce4:	60c3      	str	r3, [r0, #12]
 800cce6:	bd10      	pop	{r4, pc}

0800cce8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800cce8:	6903      	ldr	r3, [r0, #16]
 800ccea:	6882      	ldr	r2, [r0, #8]
 800ccec:	f3bf 8f5b 	dmb	ish
 800ccf0:	3301      	adds	r3, #1
 800ccf2:	429a      	cmp	r2, r3
 800ccf4:	bfd8      	it	le
 800ccf6:	1a9b      	suble	r3, r3, r2
 800ccf8:	6103      	str	r3, [r0, #16]
 800ccfa:	4770      	bx	lr

0800ccfc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ccfc:	b570      	push	{r4, r5, r6, lr}
 800ccfe:	4604      	mov	r4, r0
 800cd00:	460e      	mov	r6, r1
 800cd02:	6860      	ldr	r0, [r4, #4]
 800cd04:	6803      	ldr	r3, [r0, #0]
 800cd06:	685b      	ldr	r3, [r3, #4]
 800cd08:	4798      	blx	r3
 800cd0a:	2800      	cmp	r0, #0
 800cd0c:	d1f9      	bne.n	800cd02 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800cd0e:	4d0d      	ldr	r5, [pc, #52]	; (800cd44 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800cd10:	6828      	ldr	r0, [r5, #0]
 800cd12:	6803      	ldr	r3, [r0, #0]
 800cd14:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cd16:	4798      	blx	r3
 800cd18:	f7f3 fe4a 	bl	80009b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800cd1c:	6828      	ldr	r0, [r5, #0]
 800cd1e:	2101      	movs	r1, #1
 800cd20:	f7ff ff2c 	bl	800cb7c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800cd24:	6860      	ldr	r0, [r4, #4]
 800cd26:	6803      	ldr	r3, [r0, #0]
 800cd28:	4631      	mov	r1, r6
 800cd2a:	689b      	ldr	r3, [r3, #8]
 800cd2c:	4798      	blx	r3
 800cd2e:	6823      	ldr	r3, [r4, #0]
 800cd30:	4620      	mov	r0, r4
 800cd32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cd34:	4798      	blx	r3
 800cd36:	6828      	ldr	r0, [r5, #0]
 800cd38:	6803      	ldr	r3, [r0, #0]
 800cd3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd3e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800cd40:	4718      	bx	r3
 800cd42:	bf00      	nop
 800cd44:	20014fc4 	.word	0x20014fc4

0800cd48 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800cd48:	b508      	push	{r3, lr}
 800cd4a:	f7f3 fe23 	bl	8000994 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cd4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cd52:	f7f3 be27 	b.w	80009a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800cd56 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800cd56:	b510      	push	{r4, lr}
 800cd58:	2114      	movs	r1, #20
 800cd5a:	4604      	mov	r4, r0
 800cd5c:	f013 fb64 	bl	8020428 <_ZdlPvj>
 800cd60:	4620      	mov	r0, r4
 800cd62:	bd10      	pop	{r4, pc}

0800cd64 <_ZN8touchgfx13DMA_Interface5startEv>:
 800cd64:	b510      	push	{r4, lr}
 800cd66:	4604      	mov	r4, r0
 800cd68:	6840      	ldr	r0, [r0, #4]
 800cd6a:	6803      	ldr	r3, [r0, #0]
 800cd6c:	681b      	ldr	r3, [r3, #0]
 800cd6e:	4798      	blx	r3
 800cd70:	b948      	cbnz	r0, 800cd86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cd72:	7a63      	ldrb	r3, [r4, #9]
 800cd74:	b13b      	cbz	r3, 800cd86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cd76:	7a23      	ldrb	r3, [r4, #8]
 800cd78:	b92b      	cbnz	r3, 800cd86 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cd7a:	6823      	ldr	r3, [r4, #0]
 800cd7c:	4620      	mov	r0, r4
 800cd7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cd84:	4718      	bx	r3
 800cd86:	bd10      	pop	{r4, pc}

0800cd88 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800cd88:	b570      	push	{r4, r5, r6, lr}
 800cd8a:	4604      	mov	r4, r0
 800cd8c:	6840      	ldr	r0, [r0, #4]
 800cd8e:	6803      	ldr	r3, [r0, #0]
 800cd90:	681b      	ldr	r3, [r3, #0]
 800cd92:	4798      	blx	r3
 800cd94:	4605      	mov	r5, r0
 800cd96:	b930      	cbnz	r0, 800cda6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cd98:	7a23      	ldrb	r3, [r4, #8]
 800cd9a:	b123      	cbz	r3, 800cda6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cd9c:	6860      	ldr	r0, [r4, #4]
 800cd9e:	6803      	ldr	r3, [r0, #0]
 800cda0:	695b      	ldr	r3, [r3, #20]
 800cda2:	4798      	blx	r3
 800cda4:	7225      	strb	r5, [r4, #8]
 800cda6:	6860      	ldr	r0, [r4, #4]
 800cda8:	6803      	ldr	r3, [r0, #0]
 800cdaa:	681b      	ldr	r3, [r3, #0]
 800cdac:	4798      	blx	r3
 800cdae:	b928      	cbnz	r0, 800cdbc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800cdb0:	6823      	ldr	r3, [r4, #0]
 800cdb2:	4620      	mov	r0, r4
 800cdb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cdb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdba:	4718      	bx	r3
 800cdbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdc0:	f7f3 bdfe 	b.w	80009c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800cdc4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800cdc4:	b510      	push	{r4, lr}
 800cdc6:	4c04      	ldr	r4, [pc, #16]	; (800cdd8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800cdc8:	6082      	str	r2, [r0, #8]
 800cdca:	2200      	movs	r2, #0
 800cdcc:	e9c0 4100 	strd	r4, r1, [r0]
 800cdd0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800cdd4:	bd10      	pop	{r4, pc}
 800cdd6:	bf00      	nop
 800cdd8:	080230b8 	.word	0x080230b8

0800cddc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800cddc:	6840      	ldr	r0, [r0, #4]
 800cdde:	6803      	ldr	r3, [r0, #0]
 800cde0:	681b      	ldr	r3, [r3, #0]
 800cde2:	4718      	bx	r3

0800cde4 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800cde4:	b508      	push	{r3, lr}
 800cde6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800cdea:	b10b      	cbz	r3, 800cdf0 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800cdec:	f7f4 f994 	bl	8001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800cdf0:	bd08      	pop	{r3, pc}

0800cdf2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800cdf2:	6803      	ldr	r3, [r0, #0]
 800cdf4:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800cdf8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800cdfa:	4718      	bx	r3

0800cdfc <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800cdfc:	4770      	bx	lr

0800cdfe <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800cdfe:	b510      	push	{r4, lr}
 800ce00:	212c      	movs	r1, #44	; 0x2c
 800ce02:	4604      	mov	r4, r0
 800ce04:	f013 fb10 	bl	8020428 <_ZdlPvj>
 800ce08:	4620      	mov	r0, r4
 800ce0a:	bd10      	pop	{r4, pc}

0800ce0c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800ce0c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800ce10:	2bff      	cmp	r3, #255	; 0xff
 800ce12:	b510      	push	{r4, lr}
 800ce14:	d104      	bne.n	800ce20 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800ce16:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800ce18:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ce1c:	429a      	cmp	r2, r3
 800ce1e:	d105      	bne.n	800ce2c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800ce20:	2300      	movs	r3, #0
 800ce22:	8003      	strh	r3, [r0, #0]
 800ce24:	8043      	strh	r3, [r0, #2]
 800ce26:	8083      	strh	r3, [r0, #4]
 800ce28:	80c3      	strh	r3, [r0, #6]
 800ce2a:	bd10      	pop	{r4, pc}
 800ce2c:	2300      	movs	r3, #0
 800ce2e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800ce32:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800ce36:	8003      	strh	r3, [r0, #0]
 800ce38:	8043      	strh	r3, [r0, #2]
 800ce3a:	8084      	strh	r4, [r0, #4]
 800ce3c:	80c2      	strh	r2, [r0, #6]
 800ce3e:	e7f4      	b.n	800ce2a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800ce40 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800ce40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce44:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800ce48:	b087      	sub	sp, #28
 800ce4a:	4604      	mov	r4, r0
 800ce4c:	4689      	mov	r9, r1
 800ce4e:	b363      	cbz	r3, 800ceaa <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800ce50:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800ce52:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ce56:	429a      	cmp	r2, r3
 800ce58:	d027      	beq.n	800ceaa <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800ce5a:	ad06      	add	r5, sp, #24
 800ce5c:	2700      	movs	r7, #0
 800ce5e:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800ce62:	4628      	mov	r0, r5
 800ce64:	f005 fe88 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ce68:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ce6c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ce70:	6823      	ldr	r3, [r4, #0]
 800ce72:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ce76:	a904      	add	r1, sp, #16
 800ce78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce7a:	9704      	str	r7, [sp, #16]
 800ce7c:	4620      	mov	r0, r4
 800ce7e:	4798      	blx	r3
 800ce80:	f7f5 fdb6 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800ce84:	6803      	ldr	r3, [r0, #0]
 800ce86:	4606      	mov	r6, r0
 800ce88:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800ce8c:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800ce8e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ce92:	4628      	mov	r0, r5
 800ce94:	f005 ff5c 	bl	8012d50 <_ZNK8touchgfx6Bitmap7getDataEv>
 800ce98:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ce9c:	9300      	str	r3, [sp, #0]
 800ce9e:	4601      	mov	r1, r0
 800cea0:	9701      	str	r7, [sp, #4]
 800cea2:	464b      	mov	r3, r9
 800cea4:	aa04      	add	r2, sp, #16
 800cea6:	4630      	mov	r0, r6
 800cea8:	47c0      	blx	r8
 800ceaa:	b007      	add	sp, #28
 800ceac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800ceb0 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800ceb0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ceb2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ceb6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ceba:	6803      	ldr	r3, [r0, #0]
 800cebc:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800cec0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cec4:	460d      	mov	r5, r1
 800cec6:	2100      	movs	r1, #0
 800cec8:	4604      	mov	r4, r0
 800ceca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cecc:	9100      	str	r1, [sp, #0]
 800cece:	4669      	mov	r1, sp
 800ced0:	4798      	blx	r3
 800ced2:	4621      	mov	r1, r4
 800ced4:	a802      	add	r0, sp, #8
 800ced6:	f003 feb1 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ceda:	f7f5 fd89 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 800cede:	6803      	ldr	r3, [r0, #0]
 800cee0:	aa02      	add	r2, sp, #8
 800cee2:	695e      	ldr	r6, [r3, #20]
 800cee4:	4669      	mov	r1, sp
 800cee6:	462b      	mov	r3, r5
 800cee8:	47b0      	blx	r6
 800ceea:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ceee:	2800      	cmp	r0, #0
 800cef0:	bf08      	it	eq
 800cef2:	461d      	moveq	r5, r3
 800cef4:	84e5      	strh	r5, [r4, #38]	; 0x26
 800cef6:	b004      	add	sp, #16
 800cef8:	bd70      	pop	{r4, r5, r6, pc}
	...

0800cefc <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800cefc:	2200      	movs	r2, #0
 800cefe:	8082      	strh	r2, [r0, #4]
 800cf00:	80c2      	strh	r2, [r0, #6]
 800cf02:	8102      	strh	r2, [r0, #8]
 800cf04:	8142      	strh	r2, [r0, #10]
 800cf06:	8182      	strh	r2, [r0, #12]
 800cf08:	81c2      	strh	r2, [r0, #14]
 800cf0a:	8202      	strh	r2, [r0, #16]
 800cf0c:	8242      	strh	r2, [r0, #18]
 800cf0e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800cf12:	61c2      	str	r2, [r0, #28]
 800cf14:	8402      	strh	r2, [r0, #32]
 800cf16:	8442      	strh	r2, [r0, #34]	; 0x22
 800cf18:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800cf1c:	2201      	movs	r2, #1
 800cf1e:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800cf22:	4a04      	ldr	r2, [pc, #16]	; (800cf34 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800cf24:	6002      	str	r2, [r0, #0]
 800cf26:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800cf2a:	84c2      	strh	r2, [r0, #38]	; 0x26
 800cf2c:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800cf30:	4770      	bx	lr
 800cf32:	bf00      	nop
 800cf34:	080230dc 	.word	0x080230dc

0800cf38 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800cf38:	b508      	push	{r3, lr}
 800cf3a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800cf3e:	b10b      	cbz	r3, 800cf44 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 800cf40:	f7f4 f8ea 	bl	8001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800cf44:	bd08      	pop	{r3, pc}

0800cf46 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800cf46:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800cf4a:	4770      	bx	lr

0800cf4c <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800cf4c:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800cf50:	4770      	bx	lr

0800cf52 <_ZN8touchgfx13ScalableImageD1Ev>:
 800cf52:	4770      	bx	lr

0800cf54 <_ZN8touchgfx13ScalableImageD0Ev>:
 800cf54:	b510      	push	{r4, lr}
 800cf56:	212c      	movs	r1, #44	; 0x2c
 800cf58:	4604      	mov	r4, r0
 800cf5a:	f013 fa65 	bl	8020428 <_ZdlPvj>
 800cf5e:	4620      	mov	r0, r4
 800cf60:	bd10      	pop	{r4, pc}

0800cf62 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800cf62:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf64:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800cf68:	2bff      	cmp	r3, #255	; 0xff
 800cf6a:	b085      	sub	sp, #20
 800cf6c:	4604      	mov	r4, r0
 800cf6e:	460d      	mov	r5, r1
 800cf70:	d128      	bne.n	800cfc4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800cf72:	f101 0626 	add.w	r6, r1, #38	; 0x26
 800cf76:	4631      	mov	r1, r6
 800cf78:	4668      	mov	r0, sp
 800cf7a:	f005 fe65 	bl	8012c48 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800cf7e:	4630      	mov	r0, r6
 800cf80:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 800cf84:	f005 fdf8 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cf88:	4287      	cmp	r7, r0
 800cf8a:	d11b      	bne.n	800cfc4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800cf8c:	4630      	mov	r0, r6
 800cf8e:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800cf92:	f005 fe25 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cf96:	4287      	cmp	r7, r0
 800cf98:	d114      	bne.n	800cfc4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800cf9a:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 800cf9e:	f8ad 300e 	strh.w	r3, [sp, #14]
 800cfa2:	2100      	movs	r1, #0
 800cfa4:	466b      	mov	r3, sp
 800cfa6:	9102      	str	r1, [sp, #8]
 800cfa8:	cb03      	ldmia	r3!, {r0, r1}
 800cfaa:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800cfae:	6020      	str	r0, [r4, #0]
 800cfb0:	6061      	str	r1, [r4, #4]
 800cfb2:	4620      	mov	r0, r4
 800cfb4:	4619      	mov	r1, r3
 800cfb6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800cfba:	f7fe ff21 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800cfbe:	4620      	mov	r0, r4
 800cfc0:	b005      	add	sp, #20
 800cfc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cfc4:	2300      	movs	r3, #0
 800cfc6:	8023      	strh	r3, [r4, #0]
 800cfc8:	8063      	strh	r3, [r4, #2]
 800cfca:	80a3      	strh	r3, [r4, #4]
 800cfcc:	80e3      	strh	r3, [r4, #6]
 800cfce:	e7f6      	b.n	800cfbe <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

0800cfd0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800cfd0:	b538      	push	{r3, r4, r5, lr}
 800cfd2:	2300      	movs	r3, #0
 800cfd4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800cfd8:	8083      	strh	r3, [r0, #4]
 800cfda:	80c3      	strh	r3, [r0, #6]
 800cfdc:	8103      	strh	r3, [r0, #8]
 800cfde:	8143      	strh	r3, [r0, #10]
 800cfe0:	8183      	strh	r3, [r0, #12]
 800cfe2:	81c3      	strh	r3, [r0, #14]
 800cfe4:	8203      	strh	r3, [r0, #16]
 800cfe6:	8243      	strh	r3, [r0, #18]
 800cfe8:	61c3      	str	r3, [r0, #28]
 800cfea:	8403      	strh	r3, [r0, #32]
 800cfec:	8443      	strh	r3, [r0, #34]	; 0x22
 800cfee:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800cff2:	2501      	movs	r5, #1
 800cff4:	4b08      	ldr	r3, [pc, #32]	; (800d018 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800cff6:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800cffa:	6003      	str	r3, [r0, #0]
 800cffc:	880b      	ldrh	r3, [r1, #0]
 800cffe:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d000:	23ff      	movs	r3, #255	; 0xff
 800d002:	4604      	mov	r4, r0
 800d004:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800d008:	f000 feb5 	bl	800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800d00c:	4b03      	ldr	r3, [pc, #12]	; (800d01c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800d00e:	6023      	str	r3, [r4, #0]
 800d010:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800d014:	4620      	mov	r0, r4
 800d016:	bd38      	pop	{r3, r4, r5, pc}
 800d018:	080232b8 	.word	0x080232b8
 800d01c:	0802314c 	.word	0x0802314c

0800d020 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800d020:	4603      	mov	r3, r0
 800d022:	3026      	adds	r0, #38	; 0x26
 800d024:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800d028:	b90b      	cbnz	r3, 800d02e <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800d02a:	f003 beab 	b.w	8010d84 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800d02e:	f003 beb9 	b.w	8010da4 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800d034 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800d034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d038:	4604      	mov	r4, r0
 800d03a:	b0b3      	sub	sp, #204	; 0xcc
 800d03c:	469b      	mov	fp, r3
 800d03e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d042:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800d046:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 800d04a:	ab11      	add	r3, sp, #68	; 0x44
 800d04c:	2500      	movs	r5, #0
 800d04e:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 800d052:	4618      	mov	r0, r3
 800d054:	9206      	str	r2, [sp, #24]
 800d056:	9511      	str	r5, [sp, #68]	; 0x44
 800d058:	9307      	str	r3, [sp, #28]
 800d05a:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 800d05e:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 800d062:	f7fe fecd 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800d066:	9b07      	ldr	r3, [sp, #28]
 800d068:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d06c:	ad13      	add	r5, sp, #76	; 0x4c
 800d06e:	e885 0003 	stmia.w	r5, {r0, r1}
 800d072:	6821      	ldr	r1, [r4, #0]
 800d074:	4620      	mov	r0, r4
 800d076:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800d078:	4629      	mov	r1, r5
 800d07a:	47b0      	blx	r6
 800d07c:	4621      	mov	r1, r4
 800d07e:	a815      	add	r0, sp, #84	; 0x54
 800d080:	f003 fddc 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d084:	a815      	add	r0, sp, #84	; 0x54
 800d086:	f002 fb13 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d08a:	9b07      	ldr	r3, [sp, #28]
 800d08c:	1d26      	adds	r6, r4, #4
 800d08e:	4618      	mov	r0, r3
 800d090:	4631      	mov	r1, r6
 800d092:	f002 fb51 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800d096:	4628      	mov	r0, r5
 800d098:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800d09c:	f002 fb08 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d0a0:	4628      	mov	r0, r5
 800d0a2:	f005 fe55 	bl	8012d50 <_ZNK8touchgfx6Bitmap7getDataEv>
 800d0a6:	9007      	str	r0, [sp, #28]
 800d0a8:	2800      	cmp	r0, #0
 800d0aa:	f000 80ce 	beq.w	800d24a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 800d0ae:	f8db 200c 	ldr.w	r2, [fp, #12]
 800d0b2:	920c      	str	r2, [sp, #48]	; 0x30
 800d0b4:	f8da 2000 	ldr.w	r2, [sl]
 800d0b8:	f8db 1000 	ldr.w	r1, [fp]
 800d0bc:	920d      	str	r2, [sp, #52]	; 0x34
 800d0be:	f8da 2004 	ldr.w	r2, [sl, #4]
 800d0c2:	9109      	str	r1, [sp, #36]	; 0x24
 800d0c4:	920e      	str	r2, [sp, #56]	; 0x38
 800d0c6:	f8db 1004 	ldr.w	r1, [fp, #4]
 800d0ca:	f8da 2008 	ldr.w	r2, [sl, #8]
 800d0ce:	910a      	str	r1, [sp, #40]	; 0x28
 800d0d0:	920f      	str	r2, [sp, #60]	; 0x3c
 800d0d2:	f8db 1008 	ldr.w	r1, [fp, #8]
 800d0d6:	f8da 200c 	ldr.w	r2, [sl, #12]
 800d0da:	910b      	str	r1, [sp, #44]	; 0x2c
 800d0dc:	9210      	str	r2, [sp, #64]	; 0x40
 800d0de:	a90d      	add	r1, sp, #52	; 0x34
 800d0e0:	4632      	mov	r2, r6
 800d0e2:	a809      	add	r0, sp, #36	; 0x24
 800d0e4:	f002 fb0c 	bl	800f700 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800d0e8:	4632      	mov	r2, r6
 800d0ea:	a90e      	add	r1, sp, #56	; 0x38
 800d0ec:	a80a      	add	r0, sp, #40	; 0x28
 800d0ee:	f002 fb07 	bl	800f700 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800d0f2:	4632      	mov	r2, r6
 800d0f4:	a90f      	add	r1, sp, #60	; 0x3c
 800d0f6:	a80b      	add	r0, sp, #44	; 0x2c
 800d0f8:	f002 fb02 	bl	800f700 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800d0fc:	4632      	mov	r2, r6
 800d0fe:	a910      	add	r1, sp, #64	; 0x40
 800d100:	a80c      	add	r0, sp, #48	; 0x30
 800d102:	f002 fafd 	bl	800f700 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800d106:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800d10a:	ed97 3a00 	vldr	s6, [r7]
 800d10e:	edd7 4a01 	vldr	s9, [r7, #4]
 800d112:	ed99 2a00 	vldr	s4, [r9]
 800d116:	edd8 2a00 	vldr	s5, [r8]
 800d11a:	edd9 3a01 	vldr	s7, [r9, #4]
 800d11e:	ed98 4a01 	vldr	s8, [r8, #4]
 800d122:	ed99 5a02 	vldr	s10, [r9, #8]
 800d126:	edd8 5a02 	vldr	s11, [r8, #8]
 800d12a:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800d12e:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800d132:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 800d136:	eef0 6a67 	vmov.f32	s13, s15
 800d13a:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800d13e:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 800d142:	eeb0 7a67 	vmov.f32	s14, s15
 800d146:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800d14a:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 800d14e:	eeb0 6a67 	vmov.f32	s12, s15
 800d152:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800d156:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800d15a:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 800d15e:	ee16 6a10 	vmov	r6, s12
 800d162:	eeb0 6a67 	vmov.f32	s12, s15
 800d166:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800d16a:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 800d16e:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 800d172:	ee16 0a10 	vmov	r0, s12
 800d176:	eeb0 6a67 	vmov.f32	s12, s15
 800d17a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800d17e:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800d182:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 800d186:	ee16 1a10 	vmov	r1, s12
 800d18a:	eeb0 6a67 	vmov.f32	s12, s15
 800d18e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800d192:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800d196:	ee16 2a10 	vmov	r2, s12
 800d19a:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 800d19e:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 800d1a2:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 800d1a6:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800d1aa:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800d1ae:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 800d1b2:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 800d1b6:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 800d1ba:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800d1be:	9624      	str	r6, [sp, #144]	; 0x90
 800d1c0:	68ff      	ldr	r7, [r7, #12]
 800d1c2:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 800d1c6:	922d      	str	r2, [sp, #180]	; 0xb4
 800d1c8:	4a21      	ldr	r2, [pc, #132]	; (800d250 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 800d1ca:	9b06      	ldr	r3, [sp, #24]
 800d1cc:	8812      	ldrh	r2, [r2, #0]
 800d1ce:	9317      	str	r3, [sp, #92]	; 0x5c
 800d1d0:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800d1d4:	9b07      	ldr	r3, [sp, #28]
 800d1d6:	9218      	str	r2, [sp, #96]	; 0x60
 800d1d8:	4628      	mov	r0, r5
 800d1da:	9319      	str	r3, [sp, #100]	; 0x64
 800d1dc:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 800d1e0:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800d1e4:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 800d1e8:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 800d1ec:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 800d1f0:	9731      	str	r7, [sp, #196]	; 0xc4
 800d1f2:	f005 fddd 	bl	8012db0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800d1f6:	901a      	str	r0, [sp, #104]	; 0x68
 800d1f8:	4628      	mov	r0, r5
 800d1fa:	f005 fcbd 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d1fe:	901b      	str	r0, [sp, #108]	; 0x6c
 800d200:	4628      	mov	r0, r5
 800d202:	f005 fced 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d206:	901c      	str	r0, [sp, #112]	; 0x70
 800d208:	4628      	mov	r0, r5
 800d20a:	f005 fcb5 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d20e:	4b11      	ldr	r3, [pc, #68]	; (800d254 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800d210:	901d      	str	r0, [sp, #116]	; 0x74
 800d212:	681b      	ldr	r3, [r3, #0]
 800d214:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800d218:	b10a      	cbz	r2, 800d21e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800d21a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800d21c:	b905      	cbnz	r5, 800d220 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 800d21e:	689d      	ldr	r5, [r3, #8]
 800d220:	682b      	ldr	r3, [r5, #0]
 800d222:	4620      	mov	r0, r4
 800d224:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800d226:	f7ff fefb 	bl	800d020 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800d22a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d22e:	9304      	str	r3, [sp, #16]
 800d230:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800d234:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800d238:	ab13      	add	r3, sp, #76	; 0x4c
 800d23a:	9301      	str	r3, [sp, #4]
 800d23c:	ab15      	add	r3, sp, #84	; 0x54
 800d23e:	9300      	str	r3, [sp, #0]
 800d240:	aa1e      	add	r2, sp, #120	; 0x78
 800d242:	ab19      	add	r3, sp, #100	; 0x64
 800d244:	a917      	add	r1, sp, #92	; 0x5c
 800d246:	4628      	mov	r0, r5
 800d248:	47b0      	blx	r6
 800d24a:	b033      	add	sp, #204	; 0xcc
 800d24c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d250:	20014fbe 	.word	0x20014fbe
 800d254:	20014fc4 	.word	0x20014fc4

0800d258 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800d258:	b570      	push	{r4, r5, r6, lr}
 800d25a:	ed2d 8b04 	vpush	{d8-d9}
 800d25e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800d262:	b098      	sub	sp, #96	; 0x60
 800d264:	4604      	mov	r4, r0
 800d266:	460e      	mov	r6, r1
 800d268:	2b00      	cmp	r3, #0
 800d26a:	d065      	beq.n	800d338 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800d26c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d270:	ed9f 8a38 	vldr	s16, [pc, #224]	; 800d354 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800d274:	ee09 3a10 	vmov	s18, r3
 800d278:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d27c:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800d280:	ee08 3a90 	vmov	s17, r3
 800d284:	4628      	mov	r0, r5
 800d286:	4b34      	ldr	r3, [pc, #208]	; (800d358 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800d288:	930c      	str	r3, [sp, #48]	; 0x30
 800d28a:	930d      	str	r3, [sp, #52]	; 0x34
 800d28c:	930e      	str	r3, [sp, #56]	; 0x38
 800d28e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d290:	f005 fc72 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d294:	ee07 0a90 	vmov	s15, r0
 800d298:	4628      	mov	r0, r5
 800d29a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800d29e:	f005 fc9f 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d2a2:	4b2e      	ldr	r3, [pc, #184]	; (800d35c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800d2a4:	781b      	ldrb	r3, [r3, #0]
 800d2a6:	ee07 0a90 	vmov	s15, r0
 800d2aa:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800d2ae:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800d2b2:	2b01      	cmp	r3, #1
 800d2b4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800d2b8:	ee39 9a08 	vadd.f32	s18, s18, s16
 800d2bc:	ee78 8a88 	vadd.f32	s17, s17, s16
 800d2c0:	eef0 7a48 	vmov.f32	s15, s16
 800d2c4:	d13c      	bne.n	800d340 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800d2c6:	eef0 6a69 	vmov.f32	s13, s19
 800d2ca:	eeb0 6a47 	vmov.f32	s12, s14
 800d2ce:	eef0 5a47 	vmov.f32	s11, s14
 800d2d2:	ee19 3a90 	vmov	r3, s19
 800d2d6:	eeb0 7a48 	vmov.f32	s14, s16
 800d2da:	eef0 9a48 	vmov.f32	s19, s16
 800d2de:	9314      	str	r3, [sp, #80]	; 0x50
 800d2e0:	ab14      	add	r3, sp, #80	; 0x50
 800d2e2:	9303      	str	r3, [sp, #12]
 800d2e4:	ab10      	add	r3, sp, #64	; 0x40
 800d2e6:	9302      	str	r3, [sp, #8]
 800d2e8:	ab0c      	add	r3, sp, #48	; 0x30
 800d2ea:	9301      	str	r3, [sp, #4]
 800d2ec:	ab08      	add	r3, sp, #32
 800d2ee:	9300      	str	r3, [sp, #0]
 800d2f0:	2200      	movs	r2, #0
 800d2f2:	ab04      	add	r3, sp, #16
 800d2f4:	4631      	mov	r1, r6
 800d2f6:	4620      	mov	r0, r4
 800d2f8:	edcd 7a04 	vstr	s15, [sp, #16]
 800d2fc:	ed8d 9a05 	vstr	s18, [sp, #20]
 800d300:	ed8d 9a06 	vstr	s18, [sp, #24]
 800d304:	edcd 7a07 	vstr	s15, [sp, #28]
 800d308:	edcd 7a08 	vstr	s15, [sp, #32]
 800d30c:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800d310:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800d314:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 800d318:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 800d31c:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 800d320:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 800d324:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 800d328:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 800d32c:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 800d330:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 800d334:	f7ff fe7e 	bl	800d034 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800d338:	b018      	add	sp, #96	; 0x60
 800d33a:	ecbd 8b04 	vpop	{d8-d9}
 800d33e:	bd70      	pop	{r4, r5, r6, pc}
 800d340:	eef0 6a47 	vmov.f32	s13, s14
 800d344:	eef0 5a69 	vmov.f32	s11, s19
 800d348:	eeb0 6a48 	vmov.f32	s12, s16
 800d34c:	ee18 3a10 	vmov	r3, s16
 800d350:	e7c5      	b.n	800d2de <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800d352:	bf00      	nop
 800d354:	00000000 	.word	0x00000000
 800d358:	42c80000 	.word	0x42c80000
 800d35c:	20014fbc 	.word	0x20014fbc

0800d360 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800d360:	2000      	movs	r0, #0
 800d362:	4770      	bx	lr

0800d364 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800d364:	4b07      	ldr	r3, [pc, #28]	; (800d384 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800d366:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d368:	881b      	ldrh	r3, [r3, #0]
 800d36a:	4293      	cmp	r3, r2
 800d36c:	bf81      	itttt	hi
 800d36e:	4b06      	ldrhi	r3, [pc, #24]	; (800d388 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800d370:	681b      	ldrhi	r3, [r3, #0]
 800d372:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800d376:	7858      	ldrbhi	r0, [r3, #1]
 800d378:	bf8c      	ite	hi
 800d37a:	f000 0003 	andhi.w	r0, r0, #3
 800d37e:	2000      	movls	r0, #0
 800d380:	4770      	bx	lr
 800d382:	bf00      	nop
 800d384:	20015018 	.word	0x20015018
 800d388:	20015014 	.word	0x20015014

0800d38c <_ZN8touchgfx8TextAreaD1Ev>:
 800d38c:	4770      	bx	lr
	...

0800d390 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800d390:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d394:	4b10      	ldr	r3, [pc, #64]	; (800d3d8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800d396:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d398:	881b      	ldrh	r3, [r3, #0]
 800d39a:	428b      	cmp	r3, r1
 800d39c:	4604      	mov	r4, r0
 800d39e:	d918      	bls.n	800d3d2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800d3a0:	6803      	ldr	r3, [r0, #0]
 800d3a2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800d3a4:	4b0d      	ldr	r3, [pc, #52]	; (800d3dc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800d3a6:	6818      	ldr	r0, [r3, #0]
 800d3a8:	f7f7 fdd0 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800d3ac:	6823      	ldr	r3, [r4, #0]
 800d3ae:	4606      	mov	r6, r0
 800d3b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3b2:	4620      	mov	r0, r4
 800d3b4:	4798      	blx	r3
 800d3b6:	6823      	ldr	r3, [r4, #0]
 800d3b8:	4607      	mov	r7, r0
 800d3ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d3be:	4620      	mov	r0, r4
 800d3c0:	4798      	blx	r3
 800d3c2:	463a      	mov	r2, r7
 800d3c4:	4603      	mov	r3, r0
 800d3c6:	4631      	mov	r1, r6
 800d3c8:	4620      	mov	r0, r4
 800d3ca:	46ac      	mov	ip, r5
 800d3cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d3d0:	4760      	bx	ip
 800d3d2:	2000      	movs	r0, #0
 800d3d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d3d8:	20015018 	.word	0x20015018
 800d3dc:	20015020 	.word	0x20015020

0800d3e0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800d3e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d3e4:	4b17      	ldr	r3, [pc, #92]	; (800d444 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800d3e6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d3e8:	881b      	ldrh	r3, [r3, #0]
 800d3ea:	428b      	cmp	r3, r1
 800d3ec:	4604      	mov	r4, r0
 800d3ee:	d926      	bls.n	800d43e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800d3f0:	4b15      	ldr	r3, [pc, #84]	; (800d448 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800d3f2:	681b      	ldr	r3, [r3, #0]
 800d3f4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800d3f8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800d3fc:	4b13      	ldr	r3, [pc, #76]	; (800d44c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800d3fe:	7855      	ldrb	r5, [r2, #1]
 800d400:	681b      	ldr	r3, [r3, #0]
 800d402:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800d406:	6833      	ldr	r3, [r6, #0]
 800d408:	69df      	ldr	r7, [r3, #28]
 800d40a:	4b11      	ldr	r3, [pc, #68]	; (800d450 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800d40c:	6818      	ldr	r0, [r3, #0]
 800d40e:	f7f7 fd9d 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800d412:	6823      	ldr	r3, [r4, #0]
 800d414:	4680      	mov	r8, r0
 800d416:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d418:	4620      	mov	r0, r4
 800d41a:	4798      	blx	r3
 800d41c:	6823      	ldr	r3, [r4, #0]
 800d41e:	4681      	mov	r9, r0
 800d420:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d424:	4620      	mov	r0, r4
 800d426:	4798      	blx	r3
 800d428:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800d42c:	9000      	str	r0, [sp, #0]
 800d42e:	464b      	mov	r3, r9
 800d430:	4642      	mov	r2, r8
 800d432:	4629      	mov	r1, r5
 800d434:	4630      	mov	r0, r6
 800d436:	47b8      	blx	r7
 800d438:	b003      	add	sp, #12
 800d43a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d43e:	2000      	movs	r0, #0
 800d440:	e7fa      	b.n	800d438 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800d442:	bf00      	nop
 800d444:	20015018 	.word	0x20015018
 800d448:	20015014 	.word	0x20015014
 800d44c:	2001501c 	.word	0x2001501c
 800d450:	20015020 	.word	0x20015020

0800d454 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d454:	b40e      	push	{r1, r2, r3}
 800d456:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d45a:	4b2f      	ldr	r3, [pc, #188]	; (800d518 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800d45c:	881a      	ldrh	r2, [r3, #0]
 800d45e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800d460:	429a      	cmp	r2, r3
 800d462:	b09d      	sub	sp, #116	; 0x74
 800d464:	4604      	mov	r4, r0
 800d466:	d954      	bls.n	800d512 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800d468:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800d51c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d46c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800d520 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800d470:	aa26      	add	r2, sp, #152	; 0x98
 800d472:	9202      	str	r2, [sp, #8]
 800d474:	f8d9 2000 	ldr.w	r2, [r9]
 800d478:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d47c:	f8d8 3000 	ldr.w	r3, [r8]
 800d480:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d484:	682b      	ldr	r3, [r5, #0]
 800d486:	4628      	mov	r0, r5
 800d488:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d48a:	4798      	blx	r3
 800d48c:	b207      	sxth	r7, r0
 800d48e:	4606      	mov	r6, r0
 800d490:	a803      	add	r0, sp, #12
 800d492:	f003 ffe6 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 800d496:	682b      	ldr	r3, [r5, #0]
 800d498:	4628      	mov	r0, r5
 800d49a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d49c:	4798      	blx	r3
 800d49e:	682b      	ldr	r3, [r5, #0]
 800d4a0:	4682      	mov	sl, r0
 800d4a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d4a4:	4628      	mov	r0, r5
 800d4a6:	4798      	blx	r3
 800d4a8:	4653      	mov	r3, sl
 800d4aa:	9000      	str	r0, [sp, #0]
 800d4ac:	9a02      	ldr	r2, [sp, #8]
 800d4ae:	9925      	ldr	r1, [sp, #148]	; 0x94
 800d4b0:	a803      	add	r0, sp, #12
 800d4b2:	f004 f831 	bl	8011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d4b6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d4b8:	f8d9 3000 	ldr.w	r3, [r9]
 800d4bc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800d4c0:	8925      	ldrh	r5, [r4, #8]
 800d4c2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d4c6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800d4ca:	eba5 050c 	sub.w	r5, r5, ip
 800d4ce:	784a      	ldrb	r2, [r1, #1]
 800d4d0:	f8d8 3000 	ldr.w	r3, [r8]
 800d4d4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800d4d8:	b22d      	sxth	r5, r5
 800d4da:	9500      	str	r5, [sp, #0]
 800d4dc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d4e0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d4e4:	a803      	add	r0, sp, #12
 800d4e6:	f001 fde9 	bl	800f0bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d4ea:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800d4ee:	18b9      	adds	r1, r7, r2
 800d4f0:	2900      	cmp	r1, #0
 800d4f2:	b203      	sxth	r3, r0
 800d4f4:	dd0b      	ble.n	800d50e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800d4f6:	3b01      	subs	r3, #1
 800d4f8:	fb13 f302 	smulbb	r3, r3, r2
 800d4fc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d500:	b21f      	sxth	r7, r3
 800d502:	4638      	mov	r0, r7
 800d504:	b01d      	add	sp, #116	; 0x74
 800d506:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d50a:	b003      	add	sp, #12
 800d50c:	4770      	bx	lr
 800d50e:	2b00      	cmp	r3, #0
 800d510:	dcf7      	bgt.n	800d502 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d512:	2700      	movs	r7, #0
 800d514:	e7f5      	b.n	800d502 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800d516:	bf00      	nop
 800d518:	20015018 	.word	0x20015018
 800d51c:	20015014 	.word	0x20015014
 800d520:	2001501c 	.word	0x2001501c

0800d524 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800d524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d528:	4bbc      	ldr	r3, [pc, #752]	; (800d81c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800d52a:	460c      	mov	r4, r1
 800d52c:	881b      	ldrh	r3, [r3, #0]
 800d52e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800d530:	428b      	cmp	r3, r1
 800d532:	b0a9      	sub	sp, #164	; 0xa4
 800d534:	4680      	mov	r8, r0
 800d536:	d809      	bhi.n	800d54c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800d538:	2300      	movs	r3, #0
 800d53a:	f04f 32ff 	mov.w	r2, #4294967295
 800d53e:	e9c0 3200 	strd	r3, r2, [r0]
 800d542:	6083      	str	r3, [r0, #8]
 800d544:	4640      	mov	r0, r8
 800d546:	b029      	add	sp, #164	; 0xa4
 800d548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d54c:	4eb4      	ldr	r6, [pc, #720]	; (800d820 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800d54e:	6833      	ldr	r3, [r6, #0]
 800d550:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800d554:	4bb3      	ldr	r3, [pc, #716]	; (800d824 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800d556:	681b      	ldr	r3, [r3, #0]
 800d558:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800d55c:	4bb2      	ldr	r3, [pc, #712]	; (800d828 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d55e:	6818      	ldr	r0, [r3, #0]
 800d560:	f7f7 fcf4 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800d564:	682b      	ldr	r3, [r5, #0]
 800d566:	4681      	mov	r9, r0
 800d568:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d56a:	4628      	mov	r0, r5
 800d56c:	4798      	blx	r3
 800d56e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800d570:	b203      	sxth	r3, r0
 800d572:	4407      	add	r7, r0
 800d574:	9304      	str	r3, [sp, #16]
 800d576:	b2bb      	uxth	r3, r7
 800d578:	9303      	str	r3, [sp, #12]
 800d57a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800d57e:	4682      	mov	sl, r0
 800d580:	a80f      	add	r0, sp, #60	; 0x3c
 800d582:	2b00      	cmp	r3, #0
 800d584:	f040 80a6 	bne.w	800d6d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800d588:	f003 ff6b 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 800d58c:	682b      	ldr	r3, [r5, #0]
 800d58e:	4628      	mov	r0, r5
 800d590:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d592:	4798      	blx	r3
 800d594:	682b      	ldr	r3, [r5, #0]
 800d596:	4606      	mov	r6, r0
 800d598:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d59a:	4628      	mov	r0, r5
 800d59c:	4798      	blx	r3
 800d59e:	6823      	ldr	r3, [r4, #0]
 800d5a0:	4607      	mov	r7, r0
 800d5a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d5a4:	4620      	mov	r0, r4
 800d5a6:	4798      	blx	r3
 800d5a8:	6823      	ldr	r3, [r4, #0]
 800d5aa:	4683      	mov	fp, r0
 800d5ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d5b0:	4620      	mov	r0, r4
 800d5b2:	4798      	blx	r3
 800d5b4:	463b      	mov	r3, r7
 800d5b6:	e9cd b000 	strd	fp, r0, [sp]
 800d5ba:	4649      	mov	r1, r9
 800d5bc:	4632      	mov	r2, r6
 800d5be:	a80f      	add	r0, sp, #60	; 0x3c
 800d5c0:	f003 ffbf 	bl	8011542 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d5c4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d5c8:	f8df b254 	ldr.w	fp, [pc, #596]	; 800d820 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800d5cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d5d0:	f04f 0600 	mov.w	r6, #0
 800d5d4:	bf0c      	ite	eq
 800d5d6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800d5da:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800d5de:	4637      	mov	r7, r6
 800d5e0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d5e2:	f8db 3000 	ldr.w	r3, [fp]
 800d5e6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d5ea:	4629      	mov	r1, r5
 800d5ec:	785b      	ldrb	r3, [r3, #1]
 800d5ee:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d5f2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d5f6:	a80f      	add	r0, sp, #60	; 0x3c
 800d5f8:	f001 fa7b 	bl	800eaf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d5fc:	9b03      	ldr	r3, [sp, #12]
 800d5fe:	4286      	cmp	r6, r0
 800d600:	bfb8      	it	lt
 800d602:	4606      	movlt	r6, r0
 800d604:	3701      	adds	r7, #1
 800d606:	eba9 0903 	sub.w	r9, r9, r3
 800d60a:	a80f      	add	r0, sp, #60	; 0x3c
 800d60c:	b236      	sxth	r6, r6
 800d60e:	b2bf      	uxth	r7, r7
 800d610:	fa0f f989 	sxth.w	r9, r9
 800d614:	f003 ff4c 	bl	80114b0 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800d618:	b918      	cbnz	r0, 800d622 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d61a:	7a2b      	ldrb	r3, [r5, #8]
 800d61c:	444b      	add	r3, r9
 800d61e:	2b00      	cmp	r3, #0
 800d620:	dcde      	bgt.n	800d5e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800d622:	9b03      	ldr	r3, [sp, #12]
 800d624:	9a04      	ldr	r2, [sp, #16]
 800d626:	f895 9009 	ldrb.w	r9, [r5, #9]
 800d62a:	fb13 f707 	smulbb	r7, r3, r7
 800d62e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d630:	1aff      	subs	r7, r7, r3
 800d632:	b2bf      	uxth	r7, r7
 800d634:	b23b      	sxth	r3, r7
 800d636:	429a      	cmp	r2, r3
 800d638:	bfa8      	it	ge
 800d63a:	4657      	movge	r7, sl
 800d63c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d640:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d644:	6823      	ldr	r3, [r4, #0]
 800d646:	bf08      	it	eq
 800d648:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800d64c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d64e:	bf18      	it	ne
 800d650:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800d654:	4620      	mov	r0, r4
 800d656:	4798      	blx	r3
 800d658:	444f      	add	r7, r9
 800d65a:	fa1f f987 	uxth.w	r9, r7
 800d65e:	2801      	cmp	r0, #1
 800d660:	fa0f f789 	sxth.w	r7, r9
 800d664:	b2b3      	uxth	r3, r6
 800d666:	f000 80e1 	beq.w	800d82c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800d66a:	2802      	cmp	r0, #2
 800d66c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800d670:	f000 80e2 	beq.w	800d838 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800d674:	7aea      	ldrb	r2, [r5, #11]
 800d676:	7b2d      	ldrb	r5, [r5, #12]
 800d678:	b236      	sxth	r6, r6
 800d67a:	1ab6      	subs	r6, r6, r2
 800d67c:	442a      	add	r2, r5
 800d67e:	4413      	add	r3, r2
 800d680:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800d684:	fa1f fa86 	uxth.w	sl, r6
 800d688:	b29b      	uxth	r3, r3
 800d68a:	2a02      	cmp	r2, #2
 800d68c:	fa0f fb8a 	sxth.w	fp, sl
 800d690:	b21e      	sxth	r6, r3
 800d692:	f000 80d5 	beq.w	800d840 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800d696:	2a03      	cmp	r2, #3
 800d698:	f000 80dd 	beq.w	800d856 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800d69c:	2a01      	cmp	r2, #1
 800d69e:	f040 80e5 	bne.w	800d86c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800d6a2:	8925      	ldrh	r5, [r4, #8]
 800d6a4:	4633      	mov	r3, r6
 800d6a6:	eba5 0909 	sub.w	r9, r5, r9
 800d6aa:	463e      	mov	r6, r7
 800d6ac:	465d      	mov	r5, fp
 800d6ae:	461f      	mov	r7, r3
 800d6b0:	fa0f fb89 	sxth.w	fp, r9
 800d6b4:	4b5c      	ldr	r3, [pc, #368]	; (800d828 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800d6b6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d6b8:	6818      	ldr	r0, [r3, #0]
 800d6ba:	f7f7 fc47 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800d6be:	f8a8 b000 	strh.w	fp, [r8]
 800d6c2:	f8a8 5002 	strh.w	r5, [r8, #2]
 800d6c6:	f8a8 6004 	strh.w	r6, [r8, #4]
 800d6ca:	f8a8 7006 	strh.w	r7, [r8, #6]
 800d6ce:	f8c8 0008 	str.w	r0, [r8, #8]
 800d6d2:	e737      	b.n	800d544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800d6d4:	f003 fec5 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 800d6d8:	682b      	ldr	r3, [r5, #0]
 800d6da:	4628      	mov	r0, r5
 800d6dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800d6de:	4798      	blx	r3
 800d6e0:	682b      	ldr	r3, [r5, #0]
 800d6e2:	4607      	mov	r7, r0
 800d6e4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d6e6:	4628      	mov	r0, r5
 800d6e8:	4798      	blx	r3
 800d6ea:	6823      	ldr	r3, [r4, #0]
 800d6ec:	4683      	mov	fp, r0
 800d6ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d6f0:	4620      	mov	r0, r4
 800d6f2:	4798      	blx	r3
 800d6f4:	6822      	ldr	r2, [r4, #0]
 800d6f6:	9005      	str	r0, [sp, #20]
 800d6f8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800d6fc:	4620      	mov	r0, r4
 800d6fe:	4790      	blx	r2
 800d700:	9b05      	ldr	r3, [sp, #20]
 800d702:	9001      	str	r0, [sp, #4]
 800d704:	463a      	mov	r2, r7
 800d706:	4649      	mov	r1, r9
 800d708:	9300      	str	r3, [sp, #0]
 800d70a:	a80f      	add	r0, sp, #60	; 0x3c
 800d70c:	465b      	mov	r3, fp
 800d70e:	f003 ff18 	bl	8011542 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800d712:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d716:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800d71a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d71c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800d720:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d724:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d728:	bf0a      	itet	eq
 800d72a:	464a      	moveq	r2, r9
 800d72c:	461a      	movne	r2, r3
 800d72e:	4699      	moveq	r9, r3
 800d730:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800d734:	1ad2      	subs	r2, r2, r3
 800d736:	6833      	ldr	r3, [r6, #0]
 800d738:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800d73c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d740:	af0f      	add	r7, sp, #60	; 0x3c
 800d742:	7859      	ldrb	r1, [r3, #1]
 800d744:	9707      	str	r7, [sp, #28]
 800d746:	2300      	movs	r3, #0
 800d748:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800d74c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d750:	f88d 1020 	strb.w	r1, [sp, #32]
 800d754:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800d758:	9509      	str	r5, [sp, #36]	; 0x24
 800d75a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800d75e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800d762:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800d766:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d76a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800d76e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800d772:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800d776:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d77a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800d77e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800d782:	b350      	cbz	r0, 800d7da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800d784:	682b      	ldr	r3, [r5, #0]
 800d786:	4628      	mov	r0, r5
 800d788:	695b      	ldr	r3, [r3, #20]
 800d78a:	4798      	blx	r3
 800d78c:	4607      	mov	r7, r0
 800d78e:	b320      	cbz	r0, 800d7da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800d790:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d792:	6803      	ldr	r3, [r0, #0]
 800d794:	4639      	mov	r1, r7
 800d796:	68db      	ldr	r3, [r3, #12]
 800d798:	4798      	blx	r3
 800d79a:	4606      	mov	r6, r0
 800d79c:	b1e8      	cbz	r0, 800d7da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800d79e:	7b43      	ldrb	r3, [r0, #13]
 800d7a0:	7a82      	ldrb	r2, [r0, #10]
 800d7a2:	005b      	lsls	r3, r3, #1
 800d7a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d7a8:	4313      	orrs	r3, r2
 800d7aa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800d7ae:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800d7b2:	2b06      	cmp	r3, #6
 800d7b4:	d111      	bne.n	800d7da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800d7b6:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d7b8:	6803      	ldr	r3, [r0, #0]
 800d7ba:	4632      	mov	r2, r6
 800d7bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d7be:	4639      	mov	r1, r7
 800d7c0:	4798      	blx	r3
 800d7c2:	7b73      	ldrb	r3, [r6, #13]
 800d7c4:	005b      	lsls	r3, r3, #1
 800d7c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d7ca:	7ab3      	ldrb	r3, [r6, #10]
 800d7cc:	4313      	orrs	r3, r2
 800d7ce:	4418      	add	r0, r3
 800d7d0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800d7d4:	4418      	add	r0, r3
 800d7d6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800d7da:	2600      	movs	r6, #0
 800d7dc:	4637      	mov	r7, r6
 800d7de:	a806      	add	r0, sp, #24
 800d7e0:	f001 fb68 	bl	800eeb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800d7e4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800d7e8:	9b03      	ldr	r3, [sp, #12]
 800d7ea:	4286      	cmp	r6, r0
 800d7ec:	eba9 0903 	sub.w	r9, r9, r3
 800d7f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d7f4:	bfb8      	it	lt
 800d7f6:	4606      	movlt	r6, r0
 800d7f8:	3701      	adds	r7, #1
 800d7fa:	b236      	sxth	r6, r6
 800d7fc:	b2bf      	uxth	r7, r7
 800d7fe:	fa0f f989 	sxth.w	r9, r9
 800d802:	2b00      	cmp	r3, #0
 800d804:	f43f af0d 	beq.w	800d622 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d808:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800d80c:	2b00      	cmp	r3, #0
 800d80e:	f47f af08 	bne.w	800d622 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d812:	7a2b      	ldrb	r3, [r5, #8]
 800d814:	444b      	add	r3, r9
 800d816:	2b00      	cmp	r3, #0
 800d818:	dce1      	bgt.n	800d7de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800d81a:	e702      	b.n	800d622 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800d81c:	20015018 	.word	0x20015018
 800d820:	20015014 	.word	0x20015014
 800d824:	2001501c 	.word	0x2001501c
 800d828:	20015020 	.word	0x20015020
 800d82c:	ebaa 0606 	sub.w	r6, sl, r6
 800d830:	2002      	movs	r0, #2
 800d832:	fb96 f6f0 	sdiv	r6, r6, r0
 800d836:	e71d      	b.n	800d674 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800d838:	441e      	add	r6, r3
 800d83a:	ebaa 0606 	sub.w	r6, sl, r6
 800d83e:	e719      	b.n	800d674 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800d840:	8925      	ldrh	r5, [r4, #8]
 800d842:	1aed      	subs	r5, r5, r3
 800d844:	eba5 050a 	sub.w	r5, r5, sl
 800d848:	fa0f fb85 	sxth.w	fp, r5
 800d84c:	8965      	ldrh	r5, [r4, #10]
 800d84e:	eba5 0509 	sub.w	r5, r5, r9
 800d852:	b22d      	sxth	r5, r5
 800d854:	e72e      	b.n	800d6b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800d856:	8965      	ldrh	r5, [r4, #10]
 800d858:	1aed      	subs	r5, r5, r3
 800d85a:	eba5 050a 	sub.w	r5, r5, sl
 800d85e:	4633      	mov	r3, r6
 800d860:	b22d      	sxth	r5, r5
 800d862:	463e      	mov	r6, r7
 800d864:	f04f 0b00 	mov.w	fp, #0
 800d868:	461f      	mov	r7, r3
 800d86a:	e723      	b.n	800d6b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800d86c:	2500      	movs	r5, #0
 800d86e:	e721      	b.n	800d6b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800d870 <_ZN8touchgfx8TextAreaD0Ev>:
 800d870:	b510      	push	{r4, lr}
 800d872:	2148      	movs	r1, #72	; 0x48
 800d874:	4604      	mov	r4, r0
 800d876:	f012 fdd7 	bl	8020428 <_ZdlPvj>
 800d87a:	4620      	mov	r0, r4
 800d87c:	bd10      	pop	{r4, pc}
	...

0800d880 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800d880:	b513      	push	{r0, r1, r4, lr}
 800d882:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800d886:	4604      	mov	r4, r0
 800d888:	b1fb      	cbz	r3, 800d8ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d88a:	4b16      	ldr	r3, [pc, #88]	; (800d8e4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800d88c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d88e:	881b      	ldrh	r3, [r3, #0]
 800d890:	428b      	cmp	r3, r1
 800d892:	d91a      	bls.n	800d8ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d894:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d898:	2b00      	cmp	r3, #0
 800d89a:	dd16      	ble.n	800d8ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d89c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d8a0:	2b00      	cmp	r3, #0
 800d8a2:	dd12      	ble.n	800d8ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d8a4:	4b10      	ldr	r3, [pc, #64]	; (800d8e8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800d8a6:	6818      	ldr	r0, [r3, #0]
 800d8a8:	f7f7 fb50 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800d8ac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800d8b0:	6822      	ldr	r2, [r4, #0]
 800d8b2:	2b00      	cmp	r3, #0
 800d8b4:	db06      	blt.n	800d8c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d8b6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d8ba:	2b00      	cmp	r3, #0
 800d8bc:	db02      	blt.n	800d8c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800d8be:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d8c0:	4298      	cmp	r0, r3
 800d8c2:	d004      	beq.n	800d8ce <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800d8c4:	6953      	ldr	r3, [r2, #20]
 800d8c6:	4620      	mov	r0, r4
 800d8c8:	4798      	blx	r3
 800d8ca:	b002      	add	sp, #8
 800d8cc:	bd10      	pop	{r4, pc}
 800d8ce:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800d8d2:	c903      	ldmia	r1, {r0, r1}
 800d8d4:	466b      	mov	r3, sp
 800d8d6:	e883 0003 	stmia.w	r3, {r0, r1}
 800d8da:	6912      	ldr	r2, [r2, #16]
 800d8dc:	4619      	mov	r1, r3
 800d8de:	4620      	mov	r0, r4
 800d8e0:	4790      	blx	r2
 800d8e2:	e7f2      	b.n	800d8ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800d8e4:	20015018 	.word	0x20015018
 800d8e8:	20015020 	.word	0x20015020

0800d8ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800d8ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d8f0:	4b44      	ldr	r3, [pc, #272]	; (800da04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800d8f2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d8f4:	881b      	ldrh	r3, [r3, #0]
 800d8f6:	4293      	cmp	r3, r2
 800d8f8:	b08e      	sub	sp, #56	; 0x38
 800d8fa:	4604      	mov	r4, r0
 800d8fc:	d97e      	bls.n	800d9fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d8fe:	6808      	ldr	r0, [r1, #0]
 800d900:	4d41      	ldr	r5, [pc, #260]	; (800da08 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800d902:	6849      	ldr	r1, [r1, #4]
 800d904:	ab05      	add	r3, sp, #20
 800d906:	c303      	stmia	r3!, {r0, r1}
 800d908:	4611      	mov	r1, r2
 800d90a:	6828      	ldr	r0, [r5, #0]
 800d90c:	f7f7 fb1e 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800d910:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800d914:	2b00      	cmp	r3, #0
 800d916:	db11      	blt.n	800d93c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d918:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d91c:	2b00      	cmp	r3, #0
 800d91e:	db0d      	blt.n	800d93c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d920:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d922:	4298      	cmp	r0, r3
 800d924:	d10a      	bne.n	800d93c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800d926:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800d92a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d92e:	ab09      	add	r3, sp, #36	; 0x24
 800d930:	e883 0003 	stmia.w	r3, {r0, r1}
 800d934:	4619      	mov	r1, r3
 800d936:	a805      	add	r0, sp, #20
 800d938:	f7fe fa62 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800d93c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d940:	2b00      	cmp	r3, #0
 800d942:	dd5b      	ble.n	800d9fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d944:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d948:	2b00      	cmp	r3, #0
 800d94a:	dd57      	ble.n	800d9fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d94c:	4f2f      	ldr	r7, [pc, #188]	; (800da0c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800d94e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d950:	683b      	ldr	r3, [r7, #0]
 800d952:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d956:	4b2e      	ldr	r3, [pc, #184]	; (800da10 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800d958:	681b      	ldr	r3, [r3, #0]
 800d95a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800d95e:	2e00      	cmp	r6, #0
 800d960:	d04c      	beq.n	800d9fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800d962:	6823      	ldr	r3, [r4, #0]
 800d964:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800d968:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d96a:	4620      	mov	r0, r4
 800d96c:	4798      	blx	r3
 800d96e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d970:	683b      	ldr	r3, [r7, #0]
 800d972:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800d976:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800d97a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800d97e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d980:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d984:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800d988:	785b      	ldrb	r3, [r3, #1]
 800d98a:	9609      	str	r6, [sp, #36]	; 0x24
 800d98c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d990:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d994:	4b1f      	ldr	r3, [pc, #124]	; (800da14 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800d996:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d99a:	681b      	ldr	r3, [r3, #0]
 800d99c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800d9a0:	910b      	str	r1, [sp, #44]	; 0x2c
 800d9a2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800d9a6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800d9aa:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800d9ae:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800d9b2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800d9b6:	b10a      	cbz	r2, 800d9bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800d9b8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800d9ba:	b906      	cbnz	r6, 800d9be <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800d9bc:	689e      	ldr	r6, [r3, #8]
 800d9be:	af07      	add	r7, sp, #28
 800d9c0:	4621      	mov	r1, r4
 800d9c2:	4638      	mov	r0, r7
 800d9c4:	f003 f93a 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d9c8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d9ca:	6828      	ldr	r0, [r5, #0]
 800d9cc:	f7f7 fabe 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800d9d0:	6823      	ldr	r3, [r4, #0]
 800d9d2:	4605      	mov	r5, r0
 800d9d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d9d6:	4620      	mov	r0, r4
 800d9d8:	4798      	blx	r3
 800d9da:	6823      	ldr	r3, [r4, #0]
 800d9dc:	4680      	mov	r8, r0
 800d9de:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d9e2:	4620      	mov	r0, r4
 800d9e4:	4798      	blx	r3
 800d9e6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800d9ea:	ab09      	add	r3, sp, #36	; 0x24
 800d9ec:	9300      	str	r3, [sp, #0]
 800d9ee:	9501      	str	r5, [sp, #4]
 800d9f0:	ab05      	add	r3, sp, #20
 800d9f2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800d9f6:	4630      	mov	r0, r6
 800d9f8:	f7f7 fa5a 	bl	8004eb0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d9fc:	b00e      	add	sp, #56	; 0x38
 800d9fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da02:	bf00      	nop
 800da04:	20015018 	.word	0x20015018
 800da08:	20015020 	.word	0x20015020
 800da0c:	20015014 	.word	0x20015014
 800da10:	2001501c 	.word	0x2001501c
 800da14:	20014fc4 	.word	0x20014fc4

0800da18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800da18:	b538      	push	{r3, r4, r5, lr}
 800da1a:	4b0e      	ldr	r3, [pc, #56]	; (800da54 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800da1c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800da1e:	881b      	ldrh	r3, [r3, #0]
 800da20:	429a      	cmp	r2, r3
 800da22:	4604      	mov	r4, r0
 800da24:	d214      	bcs.n	800da50 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800da26:	6803      	ldr	r3, [r0, #0]
 800da28:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800da2a:	4798      	blx	r3
 800da2c:	6823      	ldr	r3, [r4, #0]
 800da2e:	4605      	mov	r5, r0
 800da30:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800da32:	4620      	mov	r0, r4
 800da34:	4798      	blx	r3
 800da36:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800da3a:	b22d      	sxth	r5, r5
 800da3c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800da40:	4601      	mov	r1, r0
 800da42:	bf06      	itte	eq
 800da44:	4602      	moveq	r2, r0
 800da46:	4629      	moveq	r1, r5
 800da48:	462a      	movne	r2, r5
 800da4a:	4620      	mov	r0, r4
 800da4c:	f7fe f83a 	bl	800bac4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800da50:	bd38      	pop	{r3, r4, r5, pc}
 800da52:	bf00      	nop
 800da54:	20015018 	.word	0x20015018

0800da58 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800da58:	b530      	push	{r4, r5, lr}
 800da5a:	888b      	ldrh	r3, [r1, #4]
 800da5c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800da5e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800da62:	b085      	sub	sp, #20
 800da64:	4604      	mov	r4, r0
 800da66:	b923      	cbnz	r3, 800da72 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800da68:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800da6c:	b90b      	cbnz	r3, 800da72 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800da6e:	f7ff ffd3 	bl	800da18 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800da72:	6823      	ldr	r3, [r4, #0]
 800da74:	466d      	mov	r5, sp
 800da76:	4621      	mov	r1, r4
 800da78:	4628      	mov	r0, r5
 800da7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800da7e:	4798      	blx	r3
 800da80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800da84:	343c      	adds	r4, #60	; 0x3c
 800da86:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800da8a:	b005      	add	sp, #20
 800da8c:	bd30      	pop	{r4, r5, pc}

0800da8e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800da8e:	2300      	movs	r3, #0
 800da90:	8083      	strh	r3, [r0, #4]
 800da92:	80c3      	strh	r3, [r0, #6]
 800da94:	8003      	strh	r3, [r0, #0]
 800da96:	8043      	strh	r3, [r0, #2]
 800da98:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800da9c:	2bff      	cmp	r3, #255	; 0xff
 800da9e:	bf01      	itttt	eq
 800daa0:	890b      	ldrheq	r3, [r1, #8]
 800daa2:	8083      	strheq	r3, [r0, #4]
 800daa4:	894b      	ldrheq	r3, [r1, #10]
 800daa6:	80c3      	strheq	r3, [r0, #6]
 800daa8:	4770      	bx	lr
	...

0800daac <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800daac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800daae:	4604      	mov	r4, r0
 800dab0:	6808      	ldr	r0, [r1, #0]
 800dab2:	6849      	ldr	r1, [r1, #4]
 800dab4:	466b      	mov	r3, sp
 800dab6:	c303      	stmia	r3!, {r0, r1}
 800dab8:	6823      	ldr	r3, [r4, #0]
 800daba:	4669      	mov	r1, sp
 800dabc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dabe:	4620      	mov	r0, r4
 800dac0:	4798      	blx	r3
 800dac2:	4b08      	ldr	r3, [pc, #32]	; (800dae4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800dac4:	681b      	ldr	r3, [r3, #0]
 800dac6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800daca:	b10a      	cbz	r2, 800dad0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800dacc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800dace:	b900      	cbnz	r0, 800dad2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800dad0:	6898      	ldr	r0, [r3, #8]
 800dad2:	6803      	ldr	r3, [r0, #0]
 800dad4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dad6:	6a1d      	ldr	r5, [r3, #32]
 800dad8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800dadc:	4669      	mov	r1, sp
 800dade:	47a8      	blx	r5
 800dae0:	b003      	add	sp, #12
 800dae2:	bd30      	pop	{r4, r5, pc}
 800dae4:	20014fc4 	.word	0x20014fc4

0800dae8 <_ZN8touchgfx3BoxD1Ev>:
 800dae8:	4770      	bx	lr

0800daea <_ZN8touchgfx3BoxD0Ev>:
 800daea:	b510      	push	{r4, lr}
 800daec:	212c      	movs	r1, #44	; 0x2c
 800daee:	4604      	mov	r4, r0
 800daf0:	f012 fc9a 	bl	8020428 <_ZdlPvj>
 800daf4:	4620      	mov	r0, r4
 800daf6:	bd10      	pop	{r4, pc}

0800daf8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800daf8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800dafc:	b12a      	cbz	r2, 800db0a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800dafe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800db02:	b112      	cbz	r2, 800db0a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800db04:	6803      	ldr	r3, [r0, #0]
 800db06:	695b      	ldr	r3, [r3, #20]
 800db08:	4718      	bx	r3
 800db0a:	4770      	bx	lr

0800db0c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800db0c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800db10:	4770      	bx	lr

0800db12 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800db12:	b570      	push	{r4, r5, r6, lr}
 800db14:	880b      	ldrh	r3, [r1, #0]
 800db16:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800db18:	4605      	mov	r5, r0
 800db1a:	8813      	ldrh	r3, [r2, #0]
 800db1c:	f825 3f30 	strh.w	r3, [r5, #48]!
 800db20:	4604      	mov	r4, r0
 800db22:	4628      	mov	r0, r5
 800db24:	f005 f828 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800db28:	4606      	mov	r6, r0
 800db2a:	4628      	mov	r0, r5
 800db2c:	f005 f858 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800db30:	6823      	ldr	r3, [r4, #0]
 800db32:	4605      	mov	r5, r0
 800db34:	4631      	mov	r1, r6
 800db36:	4620      	mov	r0, r4
 800db38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800db3a:	4798      	blx	r3
 800db3c:	6823      	ldr	r3, [r4, #0]
 800db3e:	4629      	mov	r1, r5
 800db40:	4620      	mov	r0, r4
 800db42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800db44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800db48:	4718      	bx	r3

0800db4a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800db4a:	b510      	push	{r4, lr}
 800db4c:	4604      	mov	r4, r0
 800db4e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800db50:	b150      	cbz	r0, 800db68 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800db52:	6803      	ldr	r3, [r0, #0]
 800db54:	68db      	ldr	r3, [r3, #12]
 800db56:	4798      	blx	r3
 800db58:	b130      	cbz	r0, 800db68 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800db5a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800db5c:	6803      	ldr	r3, [r0, #0]
 800db5e:	4621      	mov	r1, r4
 800db60:	689b      	ldr	r3, [r3, #8]
 800db62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800db66:	4718      	bx	r3
 800db68:	bd10      	pop	{r4, pc}

0800db6a <_ZNK8touchgfx6Button12getSolidRectEv>:
 800db6a:	b510      	push	{r4, lr}
 800db6c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800db70:	2bff      	cmp	r3, #255	; 0xff
 800db72:	4604      	mov	r4, r0
 800db74:	d006      	beq.n	800db84 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800db76:	2300      	movs	r3, #0
 800db78:	8003      	strh	r3, [r0, #0]
 800db7a:	8043      	strh	r3, [r0, #2]
 800db7c:	8083      	strh	r3, [r0, #4]
 800db7e:	80c3      	strh	r3, [r0, #6]
 800db80:	4620      	mov	r0, r4
 800db82:	bd10      	pop	{r4, pc}
 800db84:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800db88:	b11b      	cbz	r3, 800db92 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800db8a:	3130      	adds	r1, #48	; 0x30
 800db8c:	f005 f85c 	bl	8012c48 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800db90:	e7f6      	b.n	800db80 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800db92:	312e      	adds	r1, #46	; 0x2e
 800db94:	e7fa      	b.n	800db8c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800db98 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800db98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db9c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dba0:	b08a      	sub	sp, #40	; 0x28
 800dba2:	4604      	mov	r4, r0
 800dba4:	4688      	mov	r8, r1
 800dba6:	2b00      	cmp	r3, #0
 800dba8:	d066      	beq.n	800dc78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800dbaa:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800dbac:	f8ad 3014 	strh.w	r3, [sp, #20]
 800dbb0:	a805      	add	r0, sp, #20
 800dbb2:	f004 ffe1 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dbb6:	4607      	mov	r7, r0
 800dbb8:	a805      	add	r0, sp, #20
 800dbba:	f005 f811 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dbbe:	f9b8 6000 	ldrsh.w	r6, [r8]
 800dbc2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800dbc6:	4432      	add	r2, r6
 800dbc8:	b292      	uxth	r2, r2
 800dbca:	2300      	movs	r3, #0
 800dbcc:	fa0f fc82 	sxth.w	ip, r2
 800dbd0:	459c      	cmp	ip, r3
 800dbd2:	9306      	str	r3, [sp, #24]
 800dbd4:	dd52      	ble.n	800dc7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dbd6:	42b7      	cmp	r7, r6
 800dbd8:	dd50      	ble.n	800dc7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dbda:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800dbde:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800dbe2:	442b      	add	r3, r5
 800dbe4:	b29b      	uxth	r3, r3
 800dbe6:	b219      	sxth	r1, r3
 800dbe8:	2900      	cmp	r1, #0
 800dbea:	dd47      	ble.n	800dc7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dbec:	42a8      	cmp	r0, r5
 800dbee:	dd45      	ble.n	800dc7c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800dbf0:	4567      	cmp	r7, ip
 800dbf2:	bfb8      	it	lt
 800dbf4:	b2ba      	uxthlt	r2, r7
 800dbf6:	4288      	cmp	r0, r1
 800dbf8:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800dbfc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800dc00:	bfb8      	it	lt
 800dc02:	b283      	uxthlt	r3, r0
 800dc04:	1b92      	subs	r2, r2, r6
 800dc06:	1b5b      	subs	r3, r3, r5
 800dc08:	f8ad 201c 	strh.w	r2, [sp, #28]
 800dc0c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800dc10:	f8ad 6018 	strh.w	r6, [sp, #24]
 800dc14:	f8ad 501a 	strh.w	r5, [sp, #26]
 800dc18:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800dc1c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dc20:	429a      	cmp	r2, r3
 800dc22:	d026      	beq.n	800dc72 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800dc24:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800dc28:	2b00      	cmp	r3, #0
 800dc2a:	dd22      	ble.n	800dc72 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800dc2c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800dc30:	2b00      	cmp	r3, #0
 800dc32:	dd1e      	ble.n	800dc72 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800dc34:	2300      	movs	r3, #0
 800dc36:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800dc3a:	6823      	ldr	r3, [r4, #0]
 800dc3c:	a908      	add	r1, sp, #32
 800dc3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dc40:	4620      	mov	r0, r4
 800dc42:	4798      	blx	r3
 800dc44:	4b0f      	ldr	r3, [pc, #60]	; (800dc84 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800dc46:	681b      	ldr	r3, [r3, #0]
 800dc48:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800dc4c:	b10a      	cbz	r2, 800dc52 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800dc4e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800dc50:	b900      	cbnz	r0, 800dc54 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800dc52:	6898      	ldr	r0, [r3, #8]
 800dc54:	6801      	ldr	r1, [r0, #0]
 800dc56:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800dc5a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800dc5e:	2501      	movs	r5, #1
 800dc60:	9502      	str	r5, [sp, #8]
 800dc62:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800dc66:	9401      	str	r4, [sp, #4]
 800dc68:	ac06      	add	r4, sp, #24
 800dc6a:	9400      	str	r4, [sp, #0]
 800dc6c:	688c      	ldr	r4, [r1, #8]
 800dc6e:	a905      	add	r1, sp, #20
 800dc70:	47a0      	blx	r4
 800dc72:	b00a      	add	sp, #40	; 0x28
 800dc74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc78:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800dc7a:	e797      	b.n	800dbac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800dc7c:	2300      	movs	r3, #0
 800dc7e:	9307      	str	r3, [sp, #28]
 800dc80:	e7ca      	b.n	800dc18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800dc82:	bf00      	nop
 800dc84:	20014fc4 	.word	0x20014fc4

0800dc88 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800dc88:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800dc8c:	b12a      	cbz	r2, 800dc9a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800dc8e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800dc92:	b112      	cbz	r2, 800dc9a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800dc94:	6803      	ldr	r3, [r0, #0]
 800dc96:	695b      	ldr	r3, [r3, #20]
 800dc98:	4718      	bx	r3
 800dc9a:	4770      	bx	lr

0800dc9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800dc9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dca0:	4b2f      	ldr	r3, [pc, #188]	; (800dd60 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800dca2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dca4:	881b      	ldrh	r3, [r3, #0]
 800dca6:	4293      	cmp	r3, r2
 800dca8:	b08d      	sub	sp, #52	; 0x34
 800dcaa:	4604      	mov	r4, r0
 800dcac:	460f      	mov	r7, r1
 800dcae:	d954      	bls.n	800dd5a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800dcb0:	4b2c      	ldr	r3, [pc, #176]	; (800dd64 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800dcb2:	6819      	ldr	r1, [r3, #0]
 800dcb4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800dcb8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800dcbc:	4a2a      	ldr	r2, [pc, #168]	; (800dd68 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800dcbe:	6812      	ldr	r2, [r2, #0]
 800dcc0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800dcc4:	2900      	cmp	r1, #0
 800dcc6:	d048      	beq.n	800dd5a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800dcc8:	785a      	ldrb	r2, [r3, #1]
 800dcca:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800dcce:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800dcd2:	4b26      	ldr	r3, [pc, #152]	; (800dd6c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800dcd4:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800dcd8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800dcdc:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800dce0:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800dce2:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800dce6:	9107      	str	r1, [sp, #28]
 800dce8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800dcec:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800dcf0:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800dcf4:	681a      	ldr	r2, [r3, #0]
 800dcf6:	f88d 8020 	strb.w	r8, [sp, #32]
 800dcfa:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 800dcfe:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800dd02:	9609      	str	r6, [sp, #36]	; 0x24
 800dd04:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800dd08:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800dd0c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800dd10:	b10b      	cbz	r3, 800dd16 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800dd12:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800dd14:	b905      	cbnz	r5, 800dd18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800dd16:	6895      	ldr	r5, [r2, #8]
 800dd18:	ae05      	add	r6, sp, #20
 800dd1a:	4621      	mov	r1, r4
 800dd1c:	4630      	mov	r0, r6
 800dd1e:	f002 ff8d 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dd22:	4b13      	ldr	r3, [pc, #76]	; (800dd70 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800dd24:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dd26:	6818      	ldr	r0, [r3, #0]
 800dd28:	f7f7 f910 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800dd2c:	6823      	ldr	r3, [r4, #0]
 800dd2e:	4680      	mov	r8, r0
 800dd30:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dd32:	4620      	mov	r0, r4
 800dd34:	4798      	blx	r3
 800dd36:	6823      	ldr	r3, [r4, #0]
 800dd38:	4681      	mov	r9, r0
 800dd3a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dd3e:	4620      	mov	r0, r4
 800dd40:	4798      	blx	r3
 800dd42:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800dd46:	ab07      	add	r3, sp, #28
 800dd48:	9300      	str	r3, [sp, #0]
 800dd4a:	f8cd 8004 	str.w	r8, [sp, #4]
 800dd4e:	463b      	mov	r3, r7
 800dd50:	e896 0006 	ldmia.w	r6, {r1, r2}
 800dd54:	4628      	mov	r0, r5
 800dd56:	f7f7 f8ab 	bl	8004eb0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800dd5a:	b00d      	add	sp, #52	; 0x34
 800dd5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dd60:	20015018 	.word	0x20015018
 800dd64:	20015014 	.word	0x20015014
 800dd68:	2001501c 	.word	0x2001501c
 800dd6c:	20014fc4 	.word	0x20014fc4
 800dd70:	20015020 	.word	0x20015020

0800dd74 <_ZN8touchgfx5ImageD1Ev>:
 800dd74:	4770      	bx	lr

0800dd76 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800dd76:	b570      	push	{r4, r5, r6, lr}
 800dd78:	880b      	ldrh	r3, [r1, #0]
 800dd7a:	84c3      	strh	r3, [r0, #38]	; 0x26
 800dd7c:	4604      	mov	r4, r0
 800dd7e:	4608      	mov	r0, r1
 800dd80:	460d      	mov	r5, r1
 800dd82:	f004 fef9 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dd86:	4606      	mov	r6, r0
 800dd88:	4628      	mov	r0, r5
 800dd8a:	f004 ff29 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800dd8e:	6823      	ldr	r3, [r4, #0]
 800dd90:	4605      	mov	r5, r0
 800dd92:	4631      	mov	r1, r6
 800dd94:	4620      	mov	r0, r4
 800dd96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dd98:	4798      	blx	r3
 800dd9a:	6823      	ldr	r3, [r4, #0]
 800dd9c:	4629      	mov	r1, r5
 800dd9e:	4620      	mov	r0, r4
 800dda0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dda2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dda6:	4718      	bx	r3

0800dda8 <_ZN8touchgfx5ImageD0Ev>:
 800dda8:	b510      	push	{r4, lr}
 800ddaa:	212c      	movs	r1, #44	; 0x2c
 800ddac:	4604      	mov	r4, r0
 800ddae:	f012 fb3b 	bl	8020428 <_ZdlPvj>
 800ddb2:	4620      	mov	r0, r4
 800ddb4:	bd10      	pop	{r4, pc}

0800ddb6 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800ddb6:	b510      	push	{r4, lr}
 800ddb8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800ddbc:	2bff      	cmp	r3, #255	; 0xff
 800ddbe:	4604      	mov	r4, r0
 800ddc0:	d006      	beq.n	800ddd0 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800ddc2:	2300      	movs	r3, #0
 800ddc4:	8003      	strh	r3, [r0, #0]
 800ddc6:	8043      	strh	r3, [r0, #2]
 800ddc8:	8083      	strh	r3, [r0, #4]
 800ddca:	80c3      	strh	r3, [r0, #6]
 800ddcc:	4620      	mov	r0, r4
 800ddce:	bd10      	pop	{r4, pc}
 800ddd0:	3126      	adds	r1, #38	; 0x26
 800ddd2:	f004 ff39 	bl	8012c48 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ddd6:	e7f9      	b.n	800ddcc <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800ddd8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800ddd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dddc:	4604      	mov	r4, r0
 800ddde:	b088      	sub	sp, #32
 800dde0:	f854 3b26 	ldr.w	r3, [r4], #38
 800dde4:	2500      	movs	r5, #0
 800dde6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dde8:	460f      	mov	r7, r1
 800ddea:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800ddee:	a904      	add	r1, sp, #16
 800ddf0:	4606      	mov	r6, r0
 800ddf2:	4798      	blx	r3
 800ddf4:	4620      	mov	r0, r4
 800ddf6:	f004 febf 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ddfa:	4680      	mov	r8, r0
 800ddfc:	4620      	mov	r0, r4
 800ddfe:	f004 feef 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800de02:	9506      	str	r5, [sp, #24]
 800de04:	ad06      	add	r5, sp, #24
 800de06:	f8ad 001e 	strh.w	r0, [sp, #30]
 800de0a:	4639      	mov	r1, r7
 800de0c:	4628      	mov	r0, r5
 800de0e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800de12:	f7fd fff5 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800de16:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800de1a:	2b00      	cmp	r3, #0
 800de1c:	dd19      	ble.n	800de52 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800de1e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800de22:	2b00      	cmp	r3, #0
 800de24:	dd15      	ble.n	800de52 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800de26:	4b0c      	ldr	r3, [pc, #48]	; (800de58 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800de28:	681b      	ldr	r3, [r3, #0]
 800de2a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800de2e:	b10a      	cbz	r2, 800de34 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800de30:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800de32:	b900      	cbnz	r0, 800de36 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800de34:	6898      	ldr	r0, [r3, #8]
 800de36:	6801      	ldr	r1, [r0, #0]
 800de38:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800de3c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800de40:	2701      	movs	r7, #1
 800de42:	9702      	str	r7, [sp, #8]
 800de44:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800de48:	e9cd 5600 	strd	r5, r6, [sp]
 800de4c:	688d      	ldr	r5, [r1, #8]
 800de4e:	4621      	mov	r1, r4
 800de50:	47a8      	blx	r5
 800de52:	b008      	add	sp, #32
 800de54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800de58:	20014fc4 	.word	0x20014fc4

0800de5c <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800de5c:	4770      	bx	lr

0800de5e <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800de5e:	b510      	push	{r4, lr}
 800de60:	2148      	movs	r1, #72	; 0x48
 800de62:	4604      	mov	r4, r0
 800de64:	f012 fae0 	bl	8020428 <_ZdlPvj>
 800de68:	4620      	mov	r0, r4
 800de6a:	bd10      	pop	{r4, pc}

0800de6c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800de6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800de70:	b08d      	sub	sp, #52	; 0x34
 800de72:	4604      	mov	r4, r0
 800de74:	460f      	mov	r7, r1
 800de76:	f7ff fe8f 	bl	800db98 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800de7a:	4a55      	ldr	r2, [pc, #340]	; (800dfd0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800de7c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800de7e:	8812      	ldrh	r2, [r2, #0]
 800de80:	429a      	cmp	r2, r3
 800de82:	f240 8082 	bls.w	800df8a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800de86:	4d53      	ldr	r5, [pc, #332]	; (800dfd4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800de88:	682a      	ldr	r2, [r5, #0]
 800de8a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800de8e:	4b52      	ldr	r3, [pc, #328]	; (800dfd8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800de90:	681b      	ldr	r3, [r3, #0]
 800de92:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800de96:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 800de9a:	2200      	movs	r2, #0
 800de9c:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800dea0:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800dea4:	2a03      	cmp	r2, #3
 800dea6:	d811      	bhi.n	800decc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800dea8:	e8df f002 	tbb	[pc, r2]
 800deac:	89727902 	.word	0x89727902
 800deb0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800deb4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800deb8:	1ad2      	subs	r2, r2, r3
 800deba:	2002      	movs	r0, #2
 800debc:	f8ad 1010 	strh.w	r1, [sp, #16]
 800dec0:	fb92 f2f0 	sdiv	r2, r2, r0
 800dec4:	f8ad 3012 	strh.w	r3, [sp, #18]
 800dec8:	f8ad 200e 	strh.w	r2, [sp, #14]
 800decc:	f10d 080c 	add.w	r8, sp, #12
 800ded0:	e898 0003 	ldmia.w	r8, {r0, r1}
 800ded4:	f10d 0914 	add.w	r9, sp, #20
 800ded8:	e889 0003 	stmia.w	r9, {r0, r1}
 800dedc:	4639      	mov	r1, r7
 800dede:	4648      	mov	r0, r9
 800dee0:	f7fd ff8e 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 800dee4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800dee8:	2b00      	cmp	r3, #0
 800deea:	dd4e      	ble.n	800df8a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800deec:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800def0:	2b00      	cmp	r3, #0
 800def2:	dd4a      	ble.n	800df8a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800def4:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800def8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800defc:	1a9b      	subs	r3, r3, r2
 800defe:	f8ad 3014 	strh.w	r3, [sp, #20]
 800df02:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800df06:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800df0a:	1a9b      	subs	r3, r3, r2
 800df0c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800df10:	6823      	ldr	r3, [r4, #0]
 800df12:	4641      	mov	r1, r8
 800df14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800df16:	4620      	mov	r0, r4
 800df18:	4798      	blx	r3
 800df1a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800df1e:	2b00      	cmp	r3, #0
 800df20:	d053      	beq.n	800dfca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800df22:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800df24:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800df26:	682b      	ldr	r3, [r5, #0]
 800df28:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800df2c:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800df30:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800df34:	785b      	ldrb	r3, [r3, #1]
 800df36:	9209      	str	r2, [sp, #36]	; 0x24
 800df38:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800df3c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800df40:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800df44:	2300      	movs	r3, #0
 800df46:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800df4a:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800df4e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800df52:	4b22      	ldr	r3, [pc, #136]	; (800dfdc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800df54:	9607      	str	r6, [sp, #28]
 800df56:	681b      	ldr	r3, [r3, #0]
 800df58:	f88d 5020 	strb.w	r5, [sp, #32]
 800df5c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800df60:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800df64:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800df68:	b10a      	cbz	r2, 800df6e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800df6a:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800df6c:	b904      	cbnz	r4, 800df70 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800df6e:	689c      	ldr	r4, [r3, #8]
 800df70:	4b1b      	ldr	r3, [pc, #108]	; (800dfe0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800df72:	6818      	ldr	r0, [r3, #0]
 800df74:	f7f6 ffea 	bl	8004f4c <_ZNK8touchgfx5Texts7getTextEt>
 800df78:	ab07      	add	r3, sp, #28
 800df7a:	9001      	str	r0, [sp, #4]
 800df7c:	9300      	str	r3, [sp, #0]
 800df7e:	e898 0006 	ldmia.w	r8, {r1, r2}
 800df82:	464b      	mov	r3, r9
 800df84:	4620      	mov	r0, r4
 800df86:	f7f6 ff93 	bl	8004eb0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800df8a:	b00d      	add	sp, #52	; 0x34
 800df8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df90:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800df94:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800df98:	1ad2      	subs	r2, r2, r3
 800df9a:	3201      	adds	r2, #1
 800df9c:	e78d      	b.n	800deba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800df9e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800dfa2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800dfa6:	1ad2      	subs	r2, r2, r3
 800dfa8:	3201      	adds	r2, #1
 800dfaa:	2002      	movs	r0, #2
 800dfac:	f8ad 3010 	strh.w	r3, [sp, #16]
 800dfb0:	fb92 f2f0 	sdiv	r2, r2, r0
 800dfb4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800dfb8:	f8ad 200c 	strh.w	r2, [sp, #12]
 800dfbc:	e786      	b.n	800decc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800dfbe:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800dfc2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800dfc6:	1ad2      	subs	r2, r2, r3
 800dfc8:	e7ef      	b.n	800dfaa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800dfca:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800dfcc:	e7aa      	b.n	800df24 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800dfce:	bf00      	nop
 800dfd0:	20015018 	.word	0x20015018
 800dfd4:	20015014 	.word	0x20015014
 800dfd8:	2001501c 	.word	0x2001501c
 800dfdc:	20014fc4 	.word	0x20014fc4
 800dfe0:	20015020 	.word	0x20015020

0800dfe4 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800dfe4:	b510      	push	{r4, lr}
 800dfe6:	2101      	movs	r1, #1
 800dfe8:	4c13      	ldr	r4, [pc, #76]	; (800e038 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800dfea:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800dfee:	2200      	movs	r2, #0
 800dff0:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800dff4:	6004      	str	r4, [r0, #0]
 800dff6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800dffa:	4c10      	ldr	r4, [pc, #64]	; (800e03c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800dffc:	8082      	strh	r2, [r0, #4]
 800dffe:	80c2      	strh	r2, [r0, #6]
 800e000:	8102      	strh	r2, [r0, #8]
 800e002:	8142      	strh	r2, [r0, #10]
 800e004:	8182      	strh	r2, [r0, #12]
 800e006:	81c2      	strh	r2, [r0, #14]
 800e008:	8202      	strh	r2, [r0, #16]
 800e00a:	8242      	strh	r2, [r0, #18]
 800e00c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e010:	61c2      	str	r2, [r0, #28]
 800e012:	8402      	strh	r2, [r0, #32]
 800e014:	8442      	strh	r2, [r0, #34]	; 0x22
 800e016:	6282      	str	r2, [r0, #40]	; 0x28
 800e018:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800e01c:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e01e:	8601      	strh	r1, [r0, #48]	; 0x30
 800e020:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800e024:	6344      	str	r4, [r0, #52]	; 0x34
 800e026:	8701      	strh	r1, [r0, #56]	; 0x38
 800e028:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800e02c:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800e030:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 800e034:	bd10      	pop	{r4, pc}
 800e036:	bf00      	nop
 800e038:	08023324 	.word	0x08023324
 800e03c:	080221b4 	.word	0x080221b4

0800e040 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800e040:	b510      	push	{r4, lr}
 800e042:	6803      	ldr	r3, [r0, #0]
 800e044:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e046:	460c      	mov	r4, r1
 800e048:	4798      	blx	r3
 800e04a:	1b03      	subs	r3, r0, r4
 800e04c:	4258      	negs	r0, r3
 800e04e:	4158      	adcs	r0, r3
 800e050:	bd10      	pop	{r4, pc}
	...

0800e054 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800e054:	4b01      	ldr	r3, [pc, #4]	; (800e05c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800e056:	6019      	str	r1, [r3, #0]
 800e058:	4770      	bx	lr
 800e05a:	bf00      	nop
 800e05c:	20014fcc 	.word	0x20014fcc

0800e060 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e064:	4696      	mov	lr, r2
 800e066:	4605      	mov	r5, r0
 800e068:	4614      	mov	r4, r2
 800e06a:	460e      	mov	r6, r1
 800e06c:	461f      	mov	r7, r3
 800e06e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e072:	b097      	sub	sp, #92	; 0x5c
 800e074:	f10d 0c1c 	add.w	ip, sp, #28
 800e078:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e07c:	f8de 3000 	ldr.w	r3, [lr]
 800e080:	f8cc 3000 	str.w	r3, [ip]
 800e084:	f104 0e14 	add.w	lr, r4, #20
 800e088:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e08c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e090:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e094:	f8de 3000 	ldr.w	r3, [lr]
 800e098:	f8cc 3000 	str.w	r3, [ip]
 800e09c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e0a0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e0a4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e0a8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e0ac:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800e0b0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800e0b4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800e0b8:	f8de 3000 	ldr.w	r3, [lr]
 800e0bc:	f8cc 3000 	str.w	r3, [ip]
 800e0c0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e0c2:	682b      	ldr	r3, [r5, #0]
 800e0c4:	9201      	str	r2, [sp, #4]
 800e0c6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e0ca:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e0cc:	9200      	str	r2, [sp, #0]
 800e0ce:	f8cd 8008 	str.w	r8, [sp, #8]
 800e0d2:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800e0d6:	aa07      	add	r2, sp, #28
 800e0d8:	463b      	mov	r3, r7
 800e0da:	4631      	mov	r1, r6
 800e0dc:	4628      	mov	r0, r5
 800e0de:	47d8      	blx	fp
 800e0e0:	46a6      	mov	lr, r4
 800e0e2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e0e6:	f10d 0c1c 	add.w	ip, sp, #28
 800e0ea:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e0ee:	f8de 3000 	ldr.w	r3, [lr]
 800e0f2:	f8cc 3000 	str.w	r3, [ip]
 800e0f6:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800e0fa:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800e0fe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e102:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e106:	343c      	adds	r4, #60	; 0x3c
 800e108:	f8de 3000 	ldr.w	r3, [lr]
 800e10c:	f8cc 3000 	str.w	r3, [ip]
 800e110:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e112:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800e116:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800e11a:	6823      	ldr	r3, [r4, #0]
 800e11c:	f8cc 3000 	str.w	r3, [ip]
 800e120:	682b      	ldr	r3, [r5, #0]
 800e122:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800e126:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e128:	9201      	str	r2, [sp, #4]
 800e12a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800e12c:	9200      	str	r2, [sp, #0]
 800e12e:	f8cd 8008 	str.w	r8, [sp, #8]
 800e132:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800e134:	aa07      	add	r2, sp, #28
 800e136:	463b      	mov	r3, r7
 800e138:	4631      	mov	r1, r6
 800e13a:	4628      	mov	r0, r5
 800e13c:	47a0      	blx	r4
 800e13e:	b017      	add	sp, #92	; 0x5c
 800e140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e144 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800e144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e148:	b08d      	sub	sp, #52	; 0x34
 800e14a:	4688      	mov	r8, r1
 800e14c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800e14e:	f8d3 c000 	ldr.w	ip, [r3]
 800e152:	680f      	ldr	r7, [r1, #0]
 800e154:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800e158:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800e15c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800e160:	edd3 6a07 	vldr	s13, [r3, #28]
 800e164:	9918      	ldr	r1, [sp, #96]	; 0x60
 800e166:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800e16a:	f9b1 9000 	ldrsh.w	r9, [r1]
 800e16e:	f9ba 1000 	ldrsh.w	r1, [sl]
 800e172:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800e176:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800e17a:	eba7 070c 	sub.w	r7, r7, ip
 800e17e:	42bc      	cmp	r4, r7
 800e180:	bfa8      	it	ge
 800e182:	463c      	movge	r4, r7
 800e184:	ee07 4a90 	vmov	s15, r4
 800e188:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800e18c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800e190:	ee25 4a04 	vmul.f32	s8, s10, s8
 800e194:	ee65 4a24 	vmul.f32	s9, s10, s9
 800e198:	ee25 5a27 	vmul.f32	s10, s10, s15
 800e19c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800e1a0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800e1a4:	eb09 0e0c 	add.w	lr, r9, ip
 800e1a8:	4571      	cmp	r1, lr
 800e1aa:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800e1ae:	ee32 1a05 	vadd.f32	s2, s4, s10
 800e1b2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800e1b6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e1ba:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e1be:	f340 808d 	ble.w	800e2dc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800e1c2:	eba1 060e 	sub.w	r6, r1, lr
 800e1c6:	fb96 f5f4 	sdiv	r5, r6, r4
 800e1ca:	ee07 5a10 	vmov	s14, r5
 800e1ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e1d2:	2d00      	cmp	r5, #0
 800e1d4:	fb04 6615 	mls	r6, r4, r5, r6
 800e1d8:	eea7 0a04 	vfma.f32	s0, s14, s8
 800e1dc:	eee7 0a24 	vfma.f32	s1, s14, s9
 800e1e0:	eea7 1a05 	vfma.f32	s2, s14, s10
 800e1e4:	dd13      	ble.n	800e20e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800e1e6:	ee70 6a44 	vsub.f32	s13, s0, s8
 800e1ea:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800e1ee:	eef5 6a40 	vcmp.f32	s13, #0.0
 800e1f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e1f6:	bf18      	it	ne
 800e1f8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800e1fc:	ee31 2a45 	vsub.f32	s4, s2, s10
 800e200:	bf08      	it	eq
 800e202:	eeb0 7a67 	vmoveq.f32	s14, s15
 800e206:	ee61 1a87 	vmul.f32	s3, s3, s14
 800e20a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800e20e:	fb05 f204 	mul.w	r2, r5, r4
 800e212:	1abf      	subs	r7, r7, r2
 800e214:	4494      	add	ip, r2
 800e216:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800e21a:	4411      	add	r1, r2
 800e21c:	eb09 020c 	add.w	r2, r9, ip
 800e220:	443a      	add	r2, r7
 800e222:	b209      	sxth	r1, r1
 800e224:	428a      	cmp	r2, r1
 800e226:	bfc4      	itt	gt
 800e228:	eba1 0209 	subgt.w	r2, r1, r9
 800e22c:	eba2 070c 	subgt.w	r7, r2, ip
 800e230:	2f00      	cmp	r7, #0
 800e232:	dd50      	ble.n	800e2d6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800e234:	fb97 f1f4 	sdiv	r1, r7, r4
 800e238:	fb04 7211 	mls	r2, r4, r1, r7
 800e23c:	b90a      	cbnz	r2, 800e242 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800e23e:	3901      	subs	r1, #1
 800e240:	4622      	mov	r2, r4
 800e242:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800e246:	6840      	ldr	r0, [r0, #4]
 800e248:	900b      	str	r0, [sp, #44]	; 0x2c
 800e24a:	f8d0 a000 	ldr.w	sl, [r0]
 800e24e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800e250:	9008      	str	r0, [sp, #32]
 800e252:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800e256:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e258:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800e25c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800e260:	695b      	ldr	r3, [r3, #20]
 800e262:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800e264:	445b      	add	r3, fp
 800e266:	eef0 6a42 	vmov.f32	s13, s4
 800e26a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800e26e:	ee21 3a23 	vmul.f32	s6, s2, s7
 800e272:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800e276:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e27a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e27e:	9307      	str	r3, [sp, #28]
 800e280:	ee17 7a90 	vmov	r7, s15
 800e284:	ee73 7a42 	vsub.f32	s15, s6, s4
 800e288:	eeb0 7a61 	vmov.f32	s14, s3
 800e28c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800e290:	ee16 3a90 	vmov	r3, s13
 800e294:	fb97 f7f4 	sdiv	r7, r7, r4
 800e298:	ee17 ca90 	vmov	ip, s15
 800e29c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800e2a0:	fb9c fcf4 	sdiv	ip, ip, r4
 800e2a4:	fb0c 3306 	mla	r3, ip, r6, r3
 800e2a8:	9302      	str	r3, [sp, #8]
 800e2aa:	ee17 3a10 	vmov	r3, s14
 800e2ae:	44b6      	add	lr, r6
 800e2b0:	fb04 e505 	mla	r5, r4, r5, lr
 800e2b4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800e2b8:	fb07 3706 	mla	r7, r7, r6, r3
 800e2bc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800e2c0:	e9cd 4700 	strd	r4, r7, [sp]
 800e2c4:	2900      	cmp	r1, #0
 800e2c6:	bfcc      	ite	gt
 800e2c8:	46a1      	movgt	r9, r4
 800e2ca:	4691      	movle	r9, r2
 800e2cc:	eba9 0306 	sub.w	r3, r9, r6
 800e2d0:	f8da 4008 	ldr.w	r4, [sl, #8]
 800e2d4:	47a0      	blx	r4
 800e2d6:	b00d      	add	sp, #52	; 0x34
 800e2d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2dc:	2500      	movs	r5, #0
 800e2de:	462e      	mov	r6, r5
 800e2e0:	e799      	b.n	800e216 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800e2e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800e2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2e8:	b0db      	sub	sp, #364	; 0x16c
 800e2ea:	461d      	mov	r5, r3
 800e2ec:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800e2f0:	930a      	str	r3, [sp, #40]	; 0x28
 800e2f2:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800e2f6:	930b      	str	r3, [sp, #44]	; 0x2c
 800e2f8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800e2fc:	9310      	str	r3, [sp, #64]	; 0x40
 800e2fe:	6803      	ldr	r3, [r0, #0]
 800e300:	910f      	str	r1, [sp, #60]	; 0x3c
 800e302:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800e304:	9009      	str	r0, [sp, #36]	; 0x24
 800e306:	4614      	mov	r4, r2
 800e308:	4629      	mov	r1, r5
 800e30a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800e30e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800e312:	47b8      	blx	r7
 800e314:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e316:	6058      	str	r0, [r3, #4]
 800e318:	2800      	cmp	r0, #0
 800e31a:	f000 83a1 	beq.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e31e:	682b      	ldr	r3, [r5, #0]
 800e320:	9314      	str	r3, [sp, #80]	; 0x50
 800e322:	686b      	ldr	r3, [r5, #4]
 800e324:	9315      	str	r3, [sp, #84]	; 0x54
 800e326:	4bc4      	ldr	r3, [pc, #784]	; (800e638 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800e328:	ed94 7a02 	vldr	s14, [r4, #8]
 800e32c:	7819      	ldrb	r1, [r3, #0]
 800e32e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800e332:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800e336:	2900      	cmp	r1, #0
 800e338:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e33c:	bf16      	itet	ne
 800e33e:	4619      	movne	r1, r3
 800e340:	4611      	moveq	r1, r2
 800e342:	4613      	movne	r3, r2
 800e344:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e348:	9116      	str	r1, [sp, #88]	; 0x58
 800e34a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800e34e:	f240 8387 	bls.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e352:	ed94 7a07 	vldr	s14, [r4, #28]
 800e356:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e35a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e35e:	f240 837f 	bls.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e362:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800e366:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800e36a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e36e:	f240 8377 	bls.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e372:	6822      	ldr	r2, [r4, #0]
 800e374:	4bb1      	ldr	r3, [pc, #708]	; (800e63c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800e376:	429a      	cmp	r2, r3
 800e378:	f2c0 8372 	blt.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e37c:	49b0      	ldr	r1, [pc, #704]	; (800e640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800e37e:	6963      	ldr	r3, [r4, #20]
 800e380:	428a      	cmp	r2, r1
 800e382:	f300 836d 	bgt.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e386:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800e38a:	48ae      	ldr	r0, [pc, #696]	; (800e644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800e38c:	33ff      	adds	r3, #255	; 0xff
 800e38e:	4283      	cmp	r3, r0
 800e390:	f200 8366 	bhi.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e394:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e396:	4dac      	ldr	r5, [pc, #688]	; (800e648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800e398:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800e39c:	33ff      	adds	r3, #255	; 0xff
 800e39e:	42ab      	cmp	r3, r5
 800e3a0:	f200 835e 	bhi.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3a4:	6862      	ldr	r2, [r4, #4]
 800e3a6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800e3aa:	33ff      	adds	r3, #255	; 0xff
 800e3ac:	4283      	cmp	r3, r0
 800e3ae:	f200 8357 	bhi.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3b2:	69a1      	ldr	r1, [r4, #24]
 800e3b4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800e3b8:	33ff      	adds	r3, #255	; 0xff
 800e3ba:	4283      	cmp	r3, r0
 800e3bc:	f200 8350 	bhi.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e3c2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800e3c6:	30ff      	adds	r0, #255	; 0xff
 800e3c8:	42a8      	cmp	r0, r5
 800e3ca:	f200 8349 	bhi.w	800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3ce:	428a      	cmp	r2, r1
 800e3d0:	f280 8110 	bge.w	800e5f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800e3d4:	429a      	cmp	r2, r3
 800e3d6:	f300 8119 	bgt.w	800e60c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800e3da:	4299      	cmp	r1, r3
 800e3dc:	f280 811d 	bge.w	800e61a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800e3e0:	2502      	movs	r5, #2
 800e3e2:	2701      	movs	r7, #1
 800e3e4:	46a9      	mov	r9, r5
 800e3e6:	46b8      	mov	r8, r7
 800e3e8:	f04f 0a00 	mov.w	sl, #0
 800e3ec:	4621      	mov	r1, r4
 800e3ee:	a849      	add	r0, sp, #292	; 0x124
 800e3f0:	f003 fd7e 	bl	8011ef0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800e3f4:	4622      	mov	r2, r4
 800e3f6:	4653      	mov	r3, sl
 800e3f8:	a949      	add	r1, sp, #292	; 0x124
 800e3fa:	f8cd 9000 	str.w	r9, [sp]
 800e3fe:	a819      	add	r0, sp, #100	; 0x64
 800e400:	f003 fea6 	bl	8012150 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e404:	4622      	mov	r2, r4
 800e406:	4653      	mov	r3, sl
 800e408:	a949      	add	r1, sp, #292	; 0x124
 800e40a:	f8cd 8000 	str.w	r8, [sp]
 800e40e:	a829      	add	r0, sp, #164	; 0xa4
 800e410:	f003 fe9e 	bl	8012150 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e414:	4643      	mov	r3, r8
 800e416:	4622      	mov	r2, r4
 800e418:	a949      	add	r1, sp, #292	; 0x124
 800e41a:	f8cd 9000 	str.w	r9, [sp]
 800e41e:	a839      	add	r0, sp, #228	; 0xe4
 800e420:	f003 fe96 	bl	8012150 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800e424:	42af      	cmp	r7, r5
 800e426:	bfb5      	itete	lt
 800e428:	2300      	movlt	r3, #0
 800e42a:	2301      	movge	r3, #1
 800e42c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800e42e:	930e      	strge	r3, [sp, #56]	; 0x38
 800e430:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e432:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e436:	af12      	add	r7, sp, #72	; 0x48
 800e438:	bfb9      	ittee	lt
 800e43a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800e43c:	ac19      	addlt	r4, sp, #100	; 0x64
 800e43e:	ad19      	addge	r5, sp, #100	; 0x64
 800e440:	ac29      	addge	r4, sp, #164	; 0xa4
 800e442:	e887 0003 	stmia.w	r7, {r0, r1}
 800e446:	b928      	cbnz	r0, 800e454 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800e448:	4b80      	ldr	r3, [pc, #512]	; (800e64c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800e44a:	6818      	ldr	r0, [r3, #0]
 800e44c:	6803      	ldr	r3, [r0, #0]
 800e44e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e450:	4798      	blx	r3
 800e452:	6038      	str	r0, [r7, #0]
 800e454:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e456:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e45a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e45e:	930c      	str	r3, [sp, #48]	; 0x30
 800e460:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e462:	6963      	ldr	r3, [r4, #20]
 800e464:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800e466:	440b      	add	r3, r1
 800e468:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e46c:	4408      	add	r0, r1
 800e46e:	b200      	sxth	r0, r0
 800e470:	4283      	cmp	r3, r0
 800e472:	900d      	str	r0, [sp, #52]	; 0x34
 800e474:	f280 80dd 	bge.w	800e632 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800e478:	428b      	cmp	r3, r1
 800e47a:	da08      	bge.n	800e48e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e47c:	2a00      	cmp	r2, #0
 800e47e:	dd06      	ble.n	800e48e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e480:	1acb      	subs	r3, r1, r3
 800e482:	429a      	cmp	r2, r3
 800e484:	f2c0 80e4 	blt.w	800e650 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800e488:	2b00      	cmp	r3, #0
 800e48a:	f300 80e2 	bgt.w	800e652 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800e48e:	6967      	ldr	r7, [r4, #20]
 800e490:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e492:	443b      	add	r3, r7
 800e494:	461f      	mov	r7, r3
 800e496:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e498:	1bdf      	subs	r7, r3, r7
 800e49a:	4297      	cmp	r7, r2
 800e49c:	bfa8      	it	ge
 800e49e:	4617      	movge	r7, r2
 800e4a0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800e4a4:	2f00      	cmp	r7, #0
 800e4a6:	f340 8166 	ble.w	800e776 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800e4aa:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e4ac:	6829      	ldr	r1, [r5, #0]
 800e4ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e4b2:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e4b6:	6820      	ldr	r0, [r4, #0]
 800e4b8:	4411      	add	r1, r2
 800e4ba:	4299      	cmp	r1, r3
 800e4bc:	dd1a      	ble.n	800e4f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e4be:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e4c2:	440b      	add	r3, r1
 800e4c4:	4402      	add	r2, r0
 800e4c6:	b21b      	sxth	r3, r3
 800e4c8:	429a      	cmp	r2, r3
 800e4ca:	dc13      	bgt.n	800e4f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800e4cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e4ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e4d0:	681b      	ldr	r3, [r3, #0]
 800e4d2:	9206      	str	r2, [sp, #24]
 800e4d4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e4d6:	9205      	str	r2, [sp, #20]
 800e4d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e4da:	9500      	str	r5, [sp, #0]
 800e4dc:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e4e0:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800e4e2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e4e4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e4e8:	a912      	add	r1, sp, #72	; 0x48
 800e4ea:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800e4ee:	aa49      	add	r2, sp, #292	; 0x124
 800e4f0:	4623      	mov	r3, r4
 800e4f2:	47c8      	blx	r9
 800e4f4:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e4f8:	441a      	add	r2, r3
 800e4fa:	6963      	ldr	r3, [r4, #20]
 800e4fc:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800e500:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800e504:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800e508:	68a1      	ldr	r1, [r4, #8]
 800e50a:	ed94 6a08 	vldr	s12, [r4, #32]
 800e50e:	6022      	str	r2, [r4, #0]
 800e510:	3301      	adds	r3, #1
 800e512:	6163      	str	r3, [r4, #20]
 800e514:	69a3      	ldr	r3, [r4, #24]
 800e516:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e51a:	3b01      	subs	r3, #1
 800e51c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800e520:	61a3      	str	r3, [r4, #24]
 800e522:	6923      	ldr	r3, [r4, #16]
 800e524:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e528:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e52c:	edd4 6a07 	vldr	s13, [r4, #28]
 800e530:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e534:	440b      	add	r3, r1
 800e536:	68e1      	ldr	r1, [r4, #12]
 800e538:	6123      	str	r3, [r4, #16]
 800e53a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e53e:	428b      	cmp	r3, r1
 800e540:	edc4 6a07 	vstr	s13, [r4, #28]
 800e544:	db15      	blt.n	800e572 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800e546:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800e54a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e54e:	3201      	adds	r2, #1
 800e550:	edc4 6a07 	vstr	s13, [r4, #28]
 800e554:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800e558:	6022      	str	r2, [r4, #0]
 800e55a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e55e:	1a5b      	subs	r3, r3, r1
 800e560:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e564:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800e568:	6123      	str	r3, [r4, #16]
 800e56a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e56e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e572:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e576:	441a      	add	r2, r3
 800e578:	696b      	ldr	r3, [r5, #20]
 800e57a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800e57e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800e582:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800e586:	68a9      	ldr	r1, [r5, #8]
 800e588:	ed95 6a08 	vldr	s12, [r5, #32]
 800e58c:	602a      	str	r2, [r5, #0]
 800e58e:	3301      	adds	r3, #1
 800e590:	616b      	str	r3, [r5, #20]
 800e592:	69ab      	ldr	r3, [r5, #24]
 800e594:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e598:	3b01      	subs	r3, #1
 800e59a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800e59e:	61ab      	str	r3, [r5, #24]
 800e5a0:	692b      	ldr	r3, [r5, #16]
 800e5a2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e5a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e5aa:	edd5 6a07 	vldr	s13, [r5, #28]
 800e5ae:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e5b2:	440b      	add	r3, r1
 800e5b4:	68e9      	ldr	r1, [r5, #12]
 800e5b6:	612b      	str	r3, [r5, #16]
 800e5b8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e5bc:	428b      	cmp	r3, r1
 800e5be:	edc5 6a07 	vstr	s13, [r5, #28]
 800e5c2:	db15      	blt.n	800e5f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800e5c4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800e5c8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e5cc:	3201      	adds	r2, #1
 800e5ce:	edc5 6a07 	vstr	s13, [r5, #28]
 800e5d2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800e5d6:	602a      	str	r2, [r5, #0]
 800e5d8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e5dc:	1a5b      	subs	r3, r3, r1
 800e5de:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e5e2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800e5e6:	612b      	str	r3, [r5, #16]
 800e5e8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e5ec:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e5f0:	3f01      	subs	r7, #1
 800e5f2:	e757      	b.n	800e4a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800e5f4:	4299      	cmp	r1, r3
 800e5f6:	dc13      	bgt.n	800e620 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800e5f8:	429a      	cmp	r2, r3
 800e5fa:	da14      	bge.n	800e626 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800e5fc:	2502      	movs	r5, #2
 800e5fe:	2703      	movs	r7, #3
 800e600:	46a9      	mov	r9, r5
 800e602:	f04f 0800 	mov.w	r8, #0
 800e606:	f04f 0a01 	mov.w	sl, #1
 800e60a:	e6ef      	b.n	800e3ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800e60c:	2501      	movs	r5, #1
 800e60e:	2700      	movs	r7, #0
 800e610:	46a9      	mov	r9, r5
 800e612:	46b8      	mov	r8, r7
 800e614:	f04f 0a02 	mov.w	sl, #2
 800e618:	e6e8      	b.n	800e3ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800e61a:	2501      	movs	r5, #1
 800e61c:	2702      	movs	r7, #2
 800e61e:	e6e1      	b.n	800e3e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800e620:	2500      	movs	r5, #0
 800e622:	2701      	movs	r7, #1
 800e624:	e7f4      	b.n	800e610 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800e626:	2702      	movs	r7, #2
 800e628:	2503      	movs	r5, #3
 800e62a:	f04f 0900 	mov.w	r9, #0
 800e62e:	46b8      	mov	r8, r7
 800e630:	e7e9      	b.n	800e606 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800e632:	4613      	mov	r3, r2
 800e634:	e728      	b.n	800e488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800e636:	bf00      	nop
 800e638:	20014fbc 	.word	0x20014fbc
 800e63c:	fffd8f01 	.word	0xfffd8f01
 800e640:	00027100 	.word	0x00027100
 800e644:	0004e1ff 	.word	0x0004e1ff
 800e648:	0004e1fe 	.word	0x0004e1fe
 800e64c:	20014fc4 	.word	0x20014fc4
 800e650:	4613      	mov	r3, r2
 800e652:	992b      	ldr	r1, [sp, #172]	; 0xac
 800e654:	9111      	str	r1, [sp, #68]	; 0x44
 800e656:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800e65a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800e65e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800e660:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800e664:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800e668:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800e66c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800e670:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800e674:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800e678:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800e67c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800e680:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800e684:	469e      	mov	lr, r3
 800e686:	469c      	mov	ip, r3
 800e688:	f04f 0900 	mov.w	r9, #0
 800e68c:	f1bc 0f00 	cmp.w	ip, #0
 800e690:	d147      	bne.n	800e722 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800e692:	eb03 0c07 	add.w	ip, r3, r7
 800e696:	1ad7      	subs	r7, r2, r3
 800e698:	f1b9 0f00 	cmp.w	r9, #0
 800e69c:	d009      	beq.n	800e6b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800e69e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800e6a2:	9029      	str	r0, [sp, #164]	; 0xa4
 800e6a4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800e6a8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800e6ac:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800e6b0:	912d      	str	r1, [sp, #180]	; 0xb4
 800e6b2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800e6b4:	9111      	str	r1, [sp, #68]	; 0x44
 800e6b6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800e6ba:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800e6be:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800e6c2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800e6c6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800e6ca:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800e6ce:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800e6d2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800e6d6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800e6da:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800e6de:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800e6e2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800e6e6:	f04f 0800 	mov.w	r8, #0
 800e6ea:	f1be 0f00 	cmp.w	lr, #0
 800e6ee:	d031      	beq.n	800e754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800e6f0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e6f2:	4431      	add	r1, r6
 800e6f4:	4549      	cmp	r1, r9
 800e6f6:	4450      	add	r0, sl
 800e6f8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e6fc:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e700:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e704:	db08      	blt.n	800e718 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800e706:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e70a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e70e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e712:	3001      	adds	r0, #1
 800e714:	eba1 0109 	sub.w	r1, r1, r9
 800e718:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e71c:	f04f 0801 	mov.w	r8, #1
 800e720:	e7e3      	b.n	800e6ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800e722:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e724:	4431      	add	r1, r6
 800e726:	4541      	cmp	r1, r8
 800e728:	4450      	add	r0, sl
 800e72a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800e72e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800e732:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800e736:	db08      	blt.n	800e74a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800e738:	ee76 6a85 	vadd.f32	s13, s13, s10
 800e73c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e740:	ee77 7a86 	vadd.f32	s15, s15, s12
 800e744:	3001      	adds	r0, #1
 800e746:	eba1 0108 	sub.w	r1, r1, r8
 800e74a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e74e:	f04f 0901 	mov.w	r9, #1
 800e752:	e79b      	b.n	800e68c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800e754:	449c      	add	ip, r3
 800e756:	1aff      	subs	r7, r7, r3
 800e758:	f1b8 0f00 	cmp.w	r8, #0
 800e75c:	d009      	beq.n	800e772 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800e75e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800e762:	9019      	str	r0, [sp, #100]	; 0x64
 800e764:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800e768:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800e76c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800e770:	911d      	str	r1, [sp, #116]	; 0x74
 800e772:	1ad2      	subs	r2, r2, r3
 800e774:	e68b      	b.n	800e48e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e776:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e778:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800e77a:	2b00      	cmp	r3, #0
 800e77c:	f000 80d1 	beq.w	800e922 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800e780:	ad19      	add	r5, sp, #100	; 0x64
 800e782:	ac39      	add	r4, sp, #228	; 0xe4
 800e784:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e786:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e78a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e78e:	930c      	str	r3, [sp, #48]	; 0x30
 800e790:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e792:	6963      	ldr	r3, [r4, #20]
 800e794:	440b      	add	r3, r1
 800e796:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e79a:	4408      	add	r0, r1
 800e79c:	b200      	sxth	r0, r0
 800e79e:	4283      	cmp	r3, r0
 800e7a0:	900d      	str	r0, [sp, #52]	; 0x34
 800e7a2:	f280 80c1 	bge.w	800e928 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800e7a6:	428b      	cmp	r3, r1
 800e7a8:	da08      	bge.n	800e7bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e7aa:	2a00      	cmp	r2, #0
 800e7ac:	dd06      	ble.n	800e7bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e7ae:	1acb      	subs	r3, r1, r3
 800e7b0:	429a      	cmp	r2, r3
 800e7b2:	f2c0 80bb 	blt.w	800e92c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800e7b6:	2b00      	cmp	r3, #0
 800e7b8:	f300 80b9 	bgt.w	800e92e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800e7bc:	6967      	ldr	r7, [r4, #20]
 800e7be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e7c0:	443b      	add	r3, r7
 800e7c2:	461f      	mov	r7, r3
 800e7c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e7c6:	1bdf      	subs	r7, r3, r7
 800e7c8:	4297      	cmp	r7, r2
 800e7ca:	bfa8      	it	ge
 800e7cc:	4617      	movge	r7, r2
 800e7ce:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800e7d2:	2f00      	cmp	r7, #0
 800e7d4:	f340 813c 	ble.w	800ea50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800e7d8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e7da:	6829      	ldr	r1, [r5, #0]
 800e7dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e7e0:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e7e4:	6820      	ldr	r0, [r4, #0]
 800e7e6:	4411      	add	r1, r2
 800e7e8:	4299      	cmp	r1, r3
 800e7ea:	dd1a      	ble.n	800e822 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800e7ec:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e7f0:	440b      	add	r3, r1
 800e7f2:	4402      	add	r2, r0
 800e7f4:	b21b      	sxth	r3, r3
 800e7f6:	429a      	cmp	r2, r3
 800e7f8:	dc13      	bgt.n	800e822 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800e7fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e7fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e7fe:	681b      	ldr	r3, [r3, #0]
 800e800:	9206      	str	r2, [sp, #24]
 800e802:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e804:	9205      	str	r2, [sp, #20]
 800e806:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e808:	9500      	str	r5, [sp, #0]
 800e80a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e80e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800e810:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e812:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e816:	a912      	add	r1, sp, #72	; 0x48
 800e818:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800e81c:	aa49      	add	r2, sp, #292	; 0x124
 800e81e:	4623      	mov	r3, r4
 800e820:	47c8      	blx	r9
 800e822:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e826:	441a      	add	r2, r3
 800e828:	6963      	ldr	r3, [r4, #20]
 800e82a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800e82e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800e832:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800e836:	68a1      	ldr	r1, [r4, #8]
 800e838:	ed94 6a08 	vldr	s12, [r4, #32]
 800e83c:	6022      	str	r2, [r4, #0]
 800e83e:	3301      	adds	r3, #1
 800e840:	6163      	str	r3, [r4, #20]
 800e842:	69a3      	ldr	r3, [r4, #24]
 800e844:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e848:	3b01      	subs	r3, #1
 800e84a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800e84e:	61a3      	str	r3, [r4, #24]
 800e850:	6923      	ldr	r3, [r4, #16]
 800e852:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e856:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e85a:	edd4 6a07 	vldr	s13, [r4, #28]
 800e85e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e862:	440b      	add	r3, r1
 800e864:	68e1      	ldr	r1, [r4, #12]
 800e866:	6123      	str	r3, [r4, #16]
 800e868:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e86c:	428b      	cmp	r3, r1
 800e86e:	edc4 6a07 	vstr	s13, [r4, #28]
 800e872:	db15      	blt.n	800e8a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800e874:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800e878:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e87c:	3201      	adds	r2, #1
 800e87e:	edc4 6a07 	vstr	s13, [r4, #28]
 800e882:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800e886:	6022      	str	r2, [r4, #0]
 800e888:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e88c:	1a5b      	subs	r3, r3, r1
 800e88e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e892:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800e896:	6123      	str	r3, [r4, #16]
 800e898:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e89c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e8a0:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e8a4:	441a      	add	r2, r3
 800e8a6:	696b      	ldr	r3, [r5, #20]
 800e8a8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800e8ac:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800e8b0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800e8b4:	68a9      	ldr	r1, [r5, #8]
 800e8b6:	ed95 6a08 	vldr	s12, [r5, #32]
 800e8ba:	602a      	str	r2, [r5, #0]
 800e8bc:	3301      	adds	r3, #1
 800e8be:	616b      	str	r3, [r5, #20]
 800e8c0:	69ab      	ldr	r3, [r5, #24]
 800e8c2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e8c6:	3b01      	subs	r3, #1
 800e8c8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800e8cc:	61ab      	str	r3, [r5, #24]
 800e8ce:	692b      	ldr	r3, [r5, #16]
 800e8d0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e8d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e8d8:	edd5 6a07 	vldr	s13, [r5, #28]
 800e8dc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e8e0:	440b      	add	r3, r1
 800e8e2:	68e9      	ldr	r1, [r5, #12]
 800e8e4:	612b      	str	r3, [r5, #16]
 800e8e6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e8ea:	428b      	cmp	r3, r1
 800e8ec:	edc5 6a07 	vstr	s13, [r5, #28]
 800e8f0:	db15      	blt.n	800e91e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800e8f2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800e8f6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e8fa:	3201      	adds	r2, #1
 800e8fc:	edc5 6a07 	vstr	s13, [r5, #28]
 800e900:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800e904:	602a      	str	r2, [r5, #0]
 800e906:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e90a:	1a5b      	subs	r3, r3, r1
 800e90c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e910:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800e914:	612b      	str	r3, [r5, #16]
 800e916:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e91a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e91e:	3f01      	subs	r7, #1
 800e920:	e757      	b.n	800e7d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800e922:	ad39      	add	r5, sp, #228	; 0xe4
 800e924:	ac19      	add	r4, sp, #100	; 0x64
 800e926:	e72d      	b.n	800e784 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800e928:	4613      	mov	r3, r2
 800e92a:	e744      	b.n	800e7b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800e92c:	4613      	mov	r3, r2
 800e92e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800e932:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800e934:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800e938:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800e93c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800e940:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800e944:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800e948:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800e94c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800e950:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800e952:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800e956:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800e95a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800e95e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800e962:	960e      	str	r6, [sp, #56]	; 0x38
 800e964:	469e      	mov	lr, r3
 800e966:	461f      	mov	r7, r3
 800e968:	f04f 0900 	mov.w	r9, #0
 800e96c:	2f00      	cmp	r7, #0
 800e96e:	d146      	bne.n	800e9fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800e970:	449c      	add	ip, r3
 800e972:	1ad7      	subs	r7, r2, r3
 800e974:	f1b9 0f00 	cmp.w	r9, #0
 800e978:	d009      	beq.n	800e98e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800e97a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800e97e:	9039      	str	r0, [sp, #228]	; 0xe4
 800e980:	913d      	str	r1, [sp, #244]	; 0xf4
 800e982:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800e986:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800e98a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800e98e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800e990:	910e      	str	r1, [sp, #56]	; 0x38
 800e992:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800e996:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800e99a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800e99e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800e9a2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800e9a6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800e9aa:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800e9ae:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800e9b2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800e9b6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800e9ba:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800e9be:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800e9c2:	f04f 0800 	mov.w	r8, #0
 800e9c6:	f1be 0f00 	cmp.w	lr, #0
 800e9ca:	d030      	beq.n	800ea2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800e9cc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800e9ce:	4431      	add	r1, r6
 800e9d0:	4549      	cmp	r1, r9
 800e9d2:	4450      	add	r0, sl
 800e9d4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e9d8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e9dc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e9e0:	db08      	blt.n	800e9f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800e9e2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e9e6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e9ea:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e9ee:	3001      	adds	r0, #1
 800e9f0:	eba1 0109 	sub.w	r1, r1, r9
 800e9f4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e9f8:	f04f 0801 	mov.w	r8, #1
 800e9fc:	e7e3      	b.n	800e9c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800e9fe:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ea00:	4431      	add	r1, r6
 800ea02:	4541      	cmp	r1, r8
 800ea04:	4450      	add	r0, sl
 800ea06:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ea0a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ea0e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ea12:	db08      	blt.n	800ea26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800ea14:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ea18:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ea1c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ea20:	3001      	adds	r0, #1
 800ea22:	eba1 0108 	sub.w	r1, r1, r8
 800ea26:	3f01      	subs	r7, #1
 800ea28:	f04f 0901 	mov.w	r9, #1
 800ea2c:	e79e      	b.n	800e96c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800ea2e:	449c      	add	ip, r3
 800ea30:	1aff      	subs	r7, r7, r3
 800ea32:	f1b8 0f00 	cmp.w	r8, #0
 800ea36:	d009      	beq.n	800ea4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800ea38:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ea3c:	9019      	str	r0, [sp, #100]	; 0x64
 800ea3e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ea42:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ea46:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ea4a:	911d      	str	r1, [sp, #116]	; 0x74
 800ea4c:	1ad2      	subs	r2, r2, r3
 800ea4e:	e6b5      	b.n	800e7bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ea50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ea52:	681b      	ldr	r3, [r3, #0]
 800ea54:	b923      	cbnz	r3, 800ea60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ea56:	4b04      	ldr	r3, [pc, #16]	; (800ea68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800ea58:	6818      	ldr	r0, [r3, #0]
 800ea5a:	6803      	ldr	r3, [r0, #0]
 800ea5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea5e:	4798      	blx	r3
 800ea60:	b05b      	add	sp, #364	; 0x16c
 800ea62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ea66:	bf00      	nop
 800ea68:	20014fc4 	.word	0x20014fc4

0800ea6c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800ea6c:	b570      	push	{r4, r5, r6, lr}
 800ea6e:	4604      	mov	r4, r0
 800ea70:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800ea74:	9805      	ldr	r0, [sp, #20]
 800ea76:	6061      	str	r1, [r4, #4]
 800ea78:	2500      	movs	r5, #0
 800ea7a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800ea7e:	8263      	strh	r3, [r4, #18]
 800ea80:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ea84:	8025      	strh	r5, [r4, #0]
 800ea86:	7221      	strb	r1, [r4, #8]
 800ea88:	7266      	strb	r6, [r4, #9]
 800ea8a:	60e0      	str	r0, [r4, #12]
 800ea8c:	8222      	strh	r2, [r4, #16]
 800ea8e:	82a3      	strh	r3, [r4, #20]
 800ea90:	82e5      	strh	r5, [r4, #22]
 800ea92:	8325      	strh	r5, [r4, #24]
 800ea94:	8365      	strh	r5, [r4, #26]
 800ea96:	83a5      	strh	r5, [r4, #28]
 800ea98:	83e5      	strh	r5, [r4, #30]
 800ea9a:	8425      	strh	r5, [r4, #32]
 800ea9c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800eaa0:	b32e      	cbz	r6, 800eaee <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800eaa2:	6803      	ldr	r3, [r0, #0]
 800eaa4:	695b      	ldr	r3, [r3, #20]
 800eaa6:	4798      	blx	r3
 800eaa8:	4606      	mov	r6, r0
 800eaaa:	b300      	cbz	r0, 800eaee <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800eaac:	68e0      	ldr	r0, [r4, #12]
 800eaae:	6803      	ldr	r3, [r0, #0]
 800eab0:	4631      	mov	r1, r6
 800eab2:	68db      	ldr	r3, [r3, #12]
 800eab4:	4798      	blx	r3
 800eab6:	4605      	mov	r5, r0
 800eab8:	b1c8      	cbz	r0, 800eaee <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800eaba:	7b43      	ldrb	r3, [r0, #13]
 800eabc:	7a82      	ldrb	r2, [r0, #10]
 800eabe:	005b      	lsls	r3, r3, #1
 800eac0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800eac4:	4313      	orrs	r3, r2
 800eac6:	8423      	strh	r3, [r4, #32]
 800eac8:	7a63      	ldrb	r3, [r4, #9]
 800eaca:	2b06      	cmp	r3, #6
 800eacc:	d10f      	bne.n	800eaee <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800eace:	68e0      	ldr	r0, [r4, #12]
 800ead0:	6803      	ldr	r3, [r0, #0]
 800ead2:	462a      	mov	r2, r5
 800ead4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ead6:	4631      	mov	r1, r6
 800ead8:	4798      	blx	r3
 800eada:	7b6b      	ldrb	r3, [r5, #13]
 800eadc:	005b      	lsls	r3, r3, #1
 800eade:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eae2:	7aab      	ldrb	r3, [r5, #10]
 800eae4:	4313      	orrs	r3, r2
 800eae6:	4418      	add	r0, r3
 800eae8:	8c23      	ldrh	r3, [r4, #32]
 800eaea:	4418      	add	r0, r3
 800eaec:	8420      	strh	r0, [r4, #32]
 800eaee:	4620      	mov	r0, r4
 800eaf0:	bd70      	pop	{r4, r5, r6, pc}

0800eaf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800eaf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eaf6:	2400      	movs	r4, #0
 800eaf8:	b085      	sub	sp, #20
 800eafa:	4681      	mov	r9, r0
 800eafc:	4688      	mov	r8, r1
 800eafe:	4692      	mov	sl, r2
 800eb00:	469b      	mov	fp, r3
 800eb02:	4627      	mov	r7, r4
 800eb04:	4625      	mov	r5, r4
 800eb06:	4626      	mov	r6, r4
 800eb08:	4554      	cmp	r4, sl
 800eb0a:	da2a      	bge.n	800eb62 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800eb0c:	2300      	movs	r3, #0
 800eb0e:	9303      	str	r3, [sp, #12]
 800eb10:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800eb14:	429d      	cmp	r5, r3
 800eb16:	d004      	beq.n	800eb22 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800eb18:	f242 030b 	movw	r3, #8203	; 0x200b
 800eb1c:	429d      	cmp	r5, r3
 800eb1e:	bf18      	it	ne
 800eb20:	462f      	movne	r7, r5
 800eb22:	ab03      	add	r3, sp, #12
 800eb24:	4642      	mov	r2, r8
 800eb26:	4659      	mov	r1, fp
 800eb28:	4648      	mov	r0, r9
 800eb2a:	f002 fff7 	bl	8011b1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eb2e:	4605      	mov	r5, r0
 800eb30:	b1b8      	cbz	r0, 800eb62 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800eb32:	280a      	cmp	r0, #10
 800eb34:	d015      	beq.n	800eb62 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800eb36:	9a03      	ldr	r2, [sp, #12]
 800eb38:	b18a      	cbz	r2, 800eb5e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800eb3a:	7b50      	ldrb	r0, [r2, #13]
 800eb3c:	7a93      	ldrb	r3, [r2, #10]
 800eb3e:	8895      	ldrh	r5, [r2, #4]
 800eb40:	0040      	lsls	r0, r0, #1
 800eb42:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800eb46:	4303      	orrs	r3, r0
 800eb48:	9301      	str	r3, [sp, #4]
 800eb4a:	f8d8 3000 	ldr.w	r3, [r8]
 800eb4e:	4639      	mov	r1, r7
 800eb50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eb52:	4640      	mov	r0, r8
 800eb54:	4798      	blx	r3
 800eb56:	9b01      	ldr	r3, [sp, #4]
 800eb58:	4418      	add	r0, r3
 800eb5a:	4406      	add	r6, r0
 800eb5c:	b2b6      	uxth	r6, r6
 800eb5e:	3401      	adds	r4, #1
 800eb60:	e7d2      	b.n	800eb08 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800eb62:	4630      	mov	r0, r6
 800eb64:	b005      	add	sp, #20
 800eb66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800eb6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800eb6a:	2a02      	cmp	r2, #2
 800eb6c:	b530      	push	{r4, r5, lr}
 800eb6e:	d011      	beq.n	800eb94 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800eb70:	2a03      	cmp	r2, #3
 800eb72:	d01c      	beq.n	800ebae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800eb74:	2a01      	cmp	r2, #1
 800eb76:	d10c      	bne.n	800eb92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800eb78:	888b      	ldrh	r3, [r1, #4]
 800eb7a:	8801      	ldrh	r1, [r0, #0]
 800eb7c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800eb80:	8844      	ldrh	r4, [r0, #2]
 800eb82:	8004      	strh	r4, [r0, #0]
 800eb84:	1a5b      	subs	r3, r3, r1
 800eb86:	1a9b      	subs	r3, r3, r2
 800eb88:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800eb8c:	8043      	strh	r3, [r0, #2]
 800eb8e:	8081      	strh	r1, [r0, #4]
 800eb90:	80c2      	strh	r2, [r0, #6]
 800eb92:	bd30      	pop	{r4, r5, pc}
 800eb94:	88cb      	ldrh	r3, [r1, #6]
 800eb96:	8842      	ldrh	r2, [r0, #2]
 800eb98:	1a9b      	subs	r3, r3, r2
 800eb9a:	88c2      	ldrh	r2, [r0, #6]
 800eb9c:	1a9b      	subs	r3, r3, r2
 800eb9e:	888a      	ldrh	r2, [r1, #4]
 800eba0:	8801      	ldrh	r1, [r0, #0]
 800eba2:	8043      	strh	r3, [r0, #2]
 800eba4:	1a52      	subs	r2, r2, r1
 800eba6:	8881      	ldrh	r1, [r0, #4]
 800eba8:	1a52      	subs	r2, r2, r1
 800ebaa:	8002      	strh	r2, [r0, #0]
 800ebac:	e7f1      	b.n	800eb92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800ebae:	88cb      	ldrh	r3, [r1, #6]
 800ebb0:	8841      	ldrh	r1, [r0, #2]
 800ebb2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800ebb6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ebba:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800ebbe:	8045      	strh	r5, [r0, #2]
 800ebc0:	1a5b      	subs	r3, r3, r1
 800ebc2:	1a9b      	subs	r3, r3, r2
 800ebc4:	8003      	strh	r3, [r0, #0]
 800ebc6:	8082      	strh	r2, [r0, #4]
 800ebc8:	80c4      	strh	r4, [r0, #6]
 800ebca:	e7e2      	b.n	800eb92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800ebcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800ebcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ebd0:	b09f      	sub	sp, #124	; 0x7c
 800ebd2:	9116      	str	r1, [sp, #88]	; 0x58
 800ebd4:	9317      	str	r3, [sp, #92]	; 0x5c
 800ebd6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800ebd8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ebda:	8809      	ldrh	r1, [r1, #0]
 800ebdc:	889b      	ldrh	r3, [r3, #4]
 800ebde:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800ebe2:	9212      	str	r2, [sp, #72]	; 0x48
 800ebe4:	440b      	add	r3, r1
 800ebe6:	b21b      	sxth	r3, r3
 800ebe8:	9310      	str	r3, [sp, #64]	; 0x40
 800ebea:	f8d8 3000 	ldr.w	r3, [r8]
 800ebee:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800ebf2:	7b19      	ldrb	r1, [r3, #12]
 800ebf4:	7adb      	ldrb	r3, [r3, #11]
 800ebf6:	9011      	str	r0, [sp, #68]	; 0x44
 800ebf8:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800ebfc:	9114      	str	r1, [sp, #80]	; 0x50
 800ebfe:	9315      	str	r3, [sp, #84]	; 0x54
 800ec00:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800ec04:	2a00      	cmp	r2, #0
 800ec06:	d06a      	beq.n	800ecde <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800ec08:	f898 3010 	ldrb.w	r3, [r8, #16]
 800ec0c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800ec0e:	2b06      	cmp	r3, #6
 800ec10:	bf14      	ite	ne
 800ec12:	2301      	movne	r3, #1
 800ec14:	2302      	moveq	r3, #2
 800ec16:	4413      	add	r3, r2
 800ec18:	f04f 0900 	mov.w	r9, #0
 800ec1c:	930f      	str	r3, [sp, #60]	; 0x3c
 800ec1e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800ec22:	464c      	mov	r4, r9
 800ec24:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800ec28:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800ec2c:	4293      	cmp	r3, r2
 800ec2e:	f280 808f 	bge.w	800ed50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800ec32:	2300      	movs	r3, #0
 800ec34:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800ec38:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800ec3c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ec40:	429c      	cmp	r4, r3
 800ec42:	d006      	beq.n	800ec52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800ec44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ec46:	f242 020b 	movw	r2, #8203	; 0x200b
 800ec4a:	4294      	cmp	r4, r2
 800ec4c:	bf18      	it	ne
 800ec4e:	4623      	movne	r3, r4
 800ec50:	930d      	str	r3, [sp, #52]	; 0x34
 800ec52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ec54:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800ec56:	f8d8 2000 	ldr.w	r2, [r8]
 800ec5a:	428b      	cmp	r3, r1
 800ec5c:	db41      	blt.n	800ece2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800ec5e:	6813      	ldr	r3, [r2, #0]
 800ec60:	4610      	mov	r0, r2
 800ec62:	695b      	ldr	r3, [r3, #20]
 800ec64:	4798      	blx	r3
 800ec66:	4604      	mov	r4, r0
 800ec68:	f8d8 0000 	ldr.w	r0, [r8]
 800ec6c:	6803      	ldr	r3, [r0, #0]
 800ec6e:	aa1d      	add	r2, sp, #116	; 0x74
 800ec70:	689d      	ldr	r5, [r3, #8]
 800ec72:	4621      	mov	r1, r4
 800ec74:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800ec78:	47a8      	blx	r5
 800ec7a:	901c      	str	r0, [sp, #112]	; 0x70
 800ec7c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ec80:	429c      	cmp	r4, r3
 800ec82:	f000 80eb 	beq.w	800ee5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800ec86:	f242 030b 	movw	r3, #8203	; 0x200b
 800ec8a:	429c      	cmp	r4, r3
 800ec8c:	f000 80e6 	beq.w	800ee5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800ec90:	2c00      	cmp	r4, #0
 800ec92:	f000 80f8 	beq.w	800ee86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800ec96:	2c0a      	cmp	r4, #10
 800ec98:	d060      	beq.n	800ed5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800ec9a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ec9c:	b36a      	cbz	r2, 800ecfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800ec9e:	8894      	ldrh	r4, [r2, #4]
 800eca0:	f1bb 0f00 	cmp.w	fp, #0
 800eca4:	d03b      	beq.n	800ed1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800eca6:	f892 900d 	ldrb.w	r9, [r2, #13]
 800ecaa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800ecae:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800ecb2:	f892 900a 	ldrb.w	r9, [r2, #10]
 800ecb6:	f1bb 0f01 	cmp.w	fp, #1
 800ecba:	ea49 0903 	orr.w	r9, r9, r3
 800ecbe:	d134      	bne.n	800ed2a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800ecc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ecc2:	eba6 0609 	sub.w	r6, r6, r9
 800ecc6:	2b00      	cmp	r3, #0
 800ecc8:	d14f      	bne.n	800ed6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800ecca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800eccc:	eb09 0306 	add.w	r3, r9, r6
 800ecd0:	4413      	add	r3, r2
 800ecd2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800ecd4:	f9b2 2000 	ldrsh.w	r2, [r2]
 800ecd8:	4293      	cmp	r3, r2
 800ecda:	da51      	bge.n	800ed80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800ecdc:	e038      	b.n	800ed50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800ecde:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800ece0:	e79a      	b.n	800ec18 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800ece2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800ece6:	9301      	str	r3, [sp, #4]
 800ece8:	ab1d      	add	r3, sp, #116	; 0x74
 800ecea:	9300      	str	r3, [sp, #0]
 800ecec:	4659      	mov	r1, fp
 800ecee:	ab1c      	add	r3, sp, #112	; 0x70
 800ecf0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800ecf2:	f002 ff5c 	bl	8011bae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800ecf6:	4604      	mov	r4, r0
 800ecf8:	e7c0      	b.n	800ec7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800ecfa:	f8d8 0000 	ldr.w	r0, [r8]
 800ecfe:	6803      	ldr	r3, [r0, #0]
 800ed00:	691b      	ldr	r3, [r3, #16]
 800ed02:	4798      	blx	r3
 800ed04:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ed08:	4298      	cmp	r0, r3
 800ed0a:	f000 80a7 	beq.w	800ee5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800ed0e:	f242 030b 	movw	r3, #8203	; 0x200b
 800ed12:	4298      	cmp	r0, r3
 800ed14:	f000 80a2 	beq.w	800ee5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800ed18:	f1bb 0f00 	cmp.w	fp, #0
 800ed1c:	d100      	bne.n	800ed20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800ed1e:	444e      	add	r6, r9
 800ed20:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ed22:	2a00      	cmp	r2, #0
 800ed24:	d1bf      	bne.n	800eca6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800ed26:	4691      	mov	r9, r2
 800ed28:	e098      	b.n	800ee5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800ed2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ed2c:	2b00      	cmp	r3, #0
 800ed2e:	f000 80ac 	beq.w	800ee8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 800ed32:	f1bb 0f00 	cmp.w	fp, #0
 800ed36:	d118      	bne.n	800ed6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800ed38:	f8d8 0000 	ldr.w	r0, [r8]
 800ed3c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ed3e:	6803      	ldr	r3, [r0, #0]
 800ed40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed42:	4798      	blx	r3
 800ed44:	4406      	add	r6, r0
 800ed46:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ed48:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ed4a:	1af3      	subs	r3, r6, r3
 800ed4c:	4293      	cmp	r3, r2
 800ed4e:	dd17      	ble.n	800ed80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800ed50:	2c00      	cmp	r4, #0
 800ed52:	f000 8098 	beq.w	800ee86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800ed56:	2c0a      	cmp	r4, #10
 800ed58:	f040 8086 	bne.w	800ee68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800ed5c:	240a      	movs	r4, #10
 800ed5e:	fab4 f084 	clz	r0, r4
 800ed62:	0940      	lsrs	r0, r0, #5
 800ed64:	b01f      	add	sp, #124	; 0x7c
 800ed66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed6a:	f8d8 0000 	ldr.w	r0, [r8]
 800ed6e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800ed70:	6803      	ldr	r3, [r0, #0]
 800ed72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed74:	4798      	blx	r3
 800ed76:	f1bb 0f01 	cmp.w	fp, #1
 800ed7a:	eba6 0600 	sub.w	r6, r6, r0
 800ed7e:	d0a4      	beq.n	800ecca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800ed80:	981c      	ldr	r0, [sp, #112]	; 0x70
 800ed82:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ed84:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800ed88:	f9b3 7000 	ldrsh.w	r7, [r3]
 800ed8c:	7b43      	ldrb	r3, [r0, #13]
 800ed8e:	015b      	lsls	r3, r3, #5
 800ed90:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ed94:	7983      	ldrb	r3, [r0, #6]
 800ed96:	4431      	add	r1, r6
 800ed98:	4313      	orrs	r3, r2
 800ed9a:	440b      	add	r3, r1
 800ed9c:	42bb      	cmp	r3, r7
 800ed9e:	db5d      	blt.n	800ee5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800eda0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eda2:	4299      	cmp	r1, r3
 800eda4:	da5a      	bge.n	800ee5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800eda6:	f8d8 0000 	ldr.w	r0, [r8]
 800edaa:	6803      	ldr	r3, [r0, #0]
 800edac:	42b7      	cmp	r7, r6
 800edae:	bfc8      	it	gt
 800edb0:	1bbf      	subgt	r7, r7, r6
 800edb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800edb4:	bfcc      	ite	gt
 800edb6:	b2bf      	uxthgt	r7, r7
 800edb8:	2700      	movle	r7, #0
 800edba:	4798      	blx	r3
 800edbc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800edbe:	7b5a      	ldrb	r2, [r3, #13]
 800edc0:	00d1      	lsls	r1, r2, #3
 800edc2:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800edc6:	7a19      	ldrb	r1, [r3, #8]
 800edc8:	4329      	orrs	r1, r5
 800edca:	0655      	lsls	r5, r2, #25
 800edcc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800edce:	bf44      	itt	mi
 800edd0:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800edd4:	b209      	sxthmi	r1, r1
 800edd6:	1945      	adds	r5, r0, r5
 800edd8:	1a6d      	subs	r5, r5, r1
 800edda:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800eddc:	b2ad      	uxth	r5, r5
 800edde:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800ede2:	fa0f fa85 	sxth.w	sl, r5
 800ede6:	4551      	cmp	r1, sl
 800ede8:	dd3c      	ble.n	800ee64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800edea:	0112      	lsls	r2, r2, #4
 800edec:	79d8      	ldrb	r0, [r3, #7]
 800edee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800edf2:	4302      	orrs	r2, r0
 800edf4:	4492      	add	sl, r2
 800edf6:	4551      	cmp	r1, sl
 800edf8:	dc30      	bgt.n	800ee5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800edfa:	1b4d      	subs	r5, r1, r5
 800edfc:	b22d      	sxth	r5, r5
 800edfe:	468a      	mov	sl, r1
 800ee00:	9319      	str	r3, [sp, #100]	; 0x64
 800ee02:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ee04:	f8d8 0000 	ldr.w	r0, [r8]
 800ee08:	681a      	ldr	r2, [r3, #0]
 800ee0a:	6801      	ldr	r1, [r0, #0]
 800ee0c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800ee0e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800ee10:	9313      	str	r3, [sp, #76]	; 0x4c
 800ee12:	9218      	str	r2, [sp, #96]	; 0x60
 800ee14:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800ee16:	4788      	blx	r1
 800ee18:	f898 1006 	ldrb.w	r1, [r8, #6]
 800ee1c:	910b      	str	r1, [sp, #44]	; 0x2c
 800ee1e:	f898 100e 	ldrb.w	r1, [r8, #14]
 800ee22:	910a      	str	r1, [sp, #40]	; 0x28
 800ee24:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800ee28:	9109      	str	r1, [sp, #36]	; 0x24
 800ee2a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800ee2e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ee30:	9305      	str	r3, [sp, #20]
 800ee32:	b2ad      	uxth	r5, r5
 800ee34:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800ee38:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800ee3c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800ee3e:	9304      	str	r3, [sp, #16]
 800ee40:	4437      	add	r7, r6
 800ee42:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ee44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ee46:	9206      	str	r2, [sp, #24]
 800ee48:	b23f      	sxth	r7, r7
 800ee4a:	f8cd a004 	str.w	sl, [sp, #4]
 800ee4e:	9700      	str	r7, [sp, #0]
 800ee50:	681a      	ldr	r2, [r3, #0]
 800ee52:	9916      	ldr	r1, [sp, #88]	; 0x58
 800ee54:	685b      	ldr	r3, [r3, #4]
 800ee56:	9811      	ldr	r0, [sp, #68]	; 0x44
 800ee58:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ee5a:	47a8      	blx	r5
 800ee5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ee5e:	3301      	adds	r3, #1
 800ee60:	930e      	str	r3, [sp, #56]	; 0x38
 800ee62:	e6e1      	b.n	800ec28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800ee64:	2500      	movs	r5, #0
 800ee66:	e7cb      	b.n	800ee00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800ee68:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800ee6a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800ee6c:	3501      	adds	r5, #1
 800ee6e:	429d      	cmp	r5, r3
 800ee70:	f6bf af75 	bge.w	800ed5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800ee74:	4659      	mov	r1, fp
 800ee76:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800ee78:	f7f5 ffd6 	bl	8004e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ee7c:	4604      	mov	r4, r0
 800ee7e:	b110      	cbz	r0, 800ee86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800ee80:	280a      	cmp	r0, #10
 800ee82:	d1f2      	bne.n	800ee6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800ee84:	e76a      	b.n	800ed5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800ee86:	2400      	movs	r4, #0
 800ee88:	e769      	b.n	800ed5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800ee8a:	f1bb 0f00 	cmp.w	fp, #0
 800ee8e:	f43f af5a 	beq.w	800ed46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800ee92:	e775      	b.n	800ed80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800ee94 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800ee94:	b530      	push	{r4, r5, lr}
 800ee96:	8ac4      	ldrh	r4, [r0, #22]
 800ee98:	8b45      	ldrh	r5, [r0, #26]
 800ee9a:	8343      	strh	r3, [r0, #26]
 800ee9c:	442c      	add	r4, r5
 800ee9e:	1ae4      	subs	r4, r4, r3
 800eea0:	82c4      	strh	r4, [r0, #22]
 800eea2:	8b83      	ldrh	r3, [r0, #28]
 800eea4:	8b04      	ldrh	r4, [r0, #24]
 800eea6:	4422      	add	r2, r4
 800eea8:	440c      	add	r4, r1
 800eeaa:	1a59      	subs	r1, r3, r1
 800eeac:	83c2      	strh	r2, [r0, #30]
 800eeae:	8304      	strh	r4, [r0, #24]
 800eeb0:	8381      	strh	r1, [r0, #28]
 800eeb2:	bd30      	pop	{r4, r5, pc}

0800eeb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800eeb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eeb8:	4604      	mov	r4, r0
 800eeba:	8a47      	ldrh	r7, [r0, #18]
 800eebc:	68c0      	ldr	r0, [r0, #12]
 800eebe:	6803      	ldr	r3, [r0, #0]
 800eec0:	b085      	sub	sp, #20
 800eec2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800eec4:	4798      	blx	r3
 800eec6:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800eeca:	7a63      	ldrb	r3, [r4, #9]
 800eecc:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800eed0:	42b7      	cmp	r7, r6
 800eed2:	f103 33ff 	add.w	r3, r3, #4294967295
 800eed6:	bfac      	ite	ge
 800eed8:	f04f 0900 	movge.w	r9, #0
 800eedc:	f04f 0901 	movlt.w	r9, #1
 800eee0:	2b05      	cmp	r3, #5
 800eee2:	d804      	bhi.n	800eeee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800eee4:	e8df f003 	tbb	[pc, r3]
 800eee8:	470e0854 	.word	0x470e0854
 800eeec:	4c4c      	.short	0x4c4c
 800eeee:	2500      	movs	r5, #0
 800eef0:	46a9      	mov	r9, r5
 800eef2:	462e      	mov	r6, r5
 800eef4:	462f      	mov	r7, r5
 800eef6:	e00d      	b.n	800ef14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800eef8:	42b7      	cmp	r7, r6
 800eefa:	bfb4      	ite	lt
 800eefc:	2600      	movlt	r6, #0
 800eefe:	2601      	movge	r6, #1
 800ef00:	2500      	movs	r5, #0
 800ef02:	e7f7      	b.n	800eef4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800ef04:	42b7      	cmp	r7, r6
 800ef06:	464d      	mov	r5, r9
 800ef08:	f04f 0900 	mov.w	r9, #0
 800ef0c:	bfb4      	ite	lt
 800ef0e:	2600      	movlt	r6, #0
 800ef10:	2601      	movge	r6, #1
 800ef12:	464f      	mov	r7, r9
 800ef14:	f04f 0800 	mov.w	r8, #0
 800ef18:	f8a4 8016 	strh.w	r8, [r4, #22]
 800ef1c:	f8a4 8018 	strh.w	r8, [r4, #24]
 800ef20:	f8cd 8004 	str.w	r8, [sp, #4]
 800ef24:	2300      	movs	r3, #0
 800ef26:	9303      	str	r3, [sp, #12]
 800ef28:	8823      	ldrh	r3, [r4, #0]
 800ef2a:	2b20      	cmp	r3, #32
 800ef2c:	d034      	beq.n	800ef98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800ef2e:	f242 010b 	movw	r1, #8203	; 0x200b
 800ef32:	1a5a      	subs	r2, r3, r1
 800ef34:	f1d2 0a00 	rsbs	sl, r2, #0
 800ef38:	eb4a 0a02 	adc.w	sl, sl, r2
 800ef3c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800ef40:	4293      	cmp	r3, r2
 800ef42:	d009      	beq.n	800ef58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800ef44:	428b      	cmp	r3, r1
 800ef46:	9a01      	ldr	r2, [sp, #4]
 800ef48:	bf18      	it	ne
 800ef4a:	461a      	movne	r2, r3
 800ef4c:	9201      	str	r2, [sp, #4]
 800ef4e:	bf0c      	ite	eq
 800ef50:	f04f 0a01 	moveq.w	sl, #1
 800ef54:	f04f 0a00 	movne.w	sl, #0
 800ef58:	ab03      	add	r3, sp, #12
 800ef5a:	68e2      	ldr	r2, [r4, #12]
 800ef5c:	7a21      	ldrb	r1, [r4, #8]
 800ef5e:	6860      	ldr	r0, [r4, #4]
 800ef60:	f002 fddc 	bl	8011b1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ef64:	8020      	strh	r0, [r4, #0]
 800ef66:	b9d8      	cbnz	r0, 800efa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800ef68:	8ba2      	ldrh	r2, [r4, #28]
 800ef6a:	2300      	movs	r3, #0
 800ef6c:	4611      	mov	r1, r2
 800ef6e:	4620      	mov	r0, r4
 800ef70:	f7ff ff90 	bl	800ee94 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800ef74:	e06e      	b.n	800f054 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800ef76:	2500      	movs	r5, #0
 800ef78:	46a9      	mov	r9, r5
 800ef7a:	462e      	mov	r6, r5
 800ef7c:	2701      	movs	r7, #1
 800ef7e:	e7c9      	b.n	800ef14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ef80:	42b7      	cmp	r7, r6
 800ef82:	f04f 0500 	mov.w	r5, #0
 800ef86:	bfb4      	ite	lt
 800ef88:	2700      	movlt	r7, #0
 800ef8a:	2701      	movge	r7, #1
 800ef8c:	462e      	mov	r6, r5
 800ef8e:	e7c1      	b.n	800ef14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ef90:	2500      	movs	r5, #0
 800ef92:	46a9      	mov	r9, r5
 800ef94:	2601      	movs	r6, #1
 800ef96:	e7ad      	b.n	800eef4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800ef98:	9301      	str	r3, [sp, #4]
 800ef9a:	f04f 0a01 	mov.w	sl, #1
 800ef9e:	e7db      	b.n	800ef58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800efa0:	8b63      	ldrh	r3, [r4, #26]
 800efa2:	280a      	cmp	r0, #10
 800efa4:	f103 0301 	add.w	r3, r3, #1
 800efa8:	8363      	strh	r3, [r4, #26]
 800efaa:	d0dd      	beq.n	800ef68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800efac:	9a03      	ldr	r2, [sp, #12]
 800efae:	bb62      	cbnz	r2, 800f00a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800efb0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800efb4:	4298      	cmp	r0, r3
 800efb6:	d003      	beq.n	800efc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800efb8:	f242 030b 	movw	r3, #8203	; 0x200b
 800efbc:	4298      	cmp	r0, r3
 800efbe:	d1b1      	bne.n	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800efc0:	8823      	ldrh	r3, [r4, #0]
 800efc2:	8ba1      	ldrh	r1, [r4, #28]
 800efc4:	2b20      	cmp	r3, #32
 800efc6:	d003      	beq.n	800efd0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800efc8:	f242 000b 	movw	r0, #8203	; 0x200b
 800efcc:	4283      	cmp	r3, r0
 800efce:	d131      	bne.n	800f034 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800efd0:	f1ba 0f00 	cmp.w	sl, #0
 800efd4:	bf0a      	itet	eq
 800efd6:	4688      	moveq	r8, r1
 800efd8:	4650      	movne	r0, sl
 800efda:	2001      	moveq	r0, #1
 800efdc:	440a      	add	r2, r1
 800efde:	8b23      	ldrh	r3, [r4, #24]
 800efe0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800efe4:	b292      	uxth	r2, r2
 800efe6:	83a2      	strh	r2, [r4, #28]
 800efe8:	4413      	add	r3, r2
 800efea:	f1b9 0f00 	cmp.w	r9, #0
 800efee:	d102      	bne.n	800eff6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800eff0:	2d00      	cmp	r5, #0
 800eff2:	d042      	beq.n	800f07a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800eff4:	b300      	cbz	r0, 800f038 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800eff6:	8c21      	ldrh	r1, [r4, #32]
 800eff8:	4419      	add	r1, r3
 800effa:	458c      	cmp	ip, r1
 800effc:	da37      	bge.n	800f06e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800effe:	8ae1      	ldrh	r1, [r4, #22]
 800f000:	2900      	cmp	r1, #0
 800f002:	d034      	beq.n	800f06e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800f004:	4563      	cmp	r3, ip
 800f006:	dd8d      	ble.n	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f008:	e01d      	b.n	800f046 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800f00a:	8893      	ldrh	r3, [r2, #4]
 800f00c:	8023      	strh	r3, [r4, #0]
 800f00e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800f012:	9901      	ldr	r1, [sp, #4]
 800f014:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800f018:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 800f01c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800f020:	ea4b 0b00 	orr.w	fp, fp, r0
 800f024:	68e0      	ldr	r0, [r4, #12]
 800f026:	6803      	ldr	r3, [r0, #0]
 800f028:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f02a:	4798      	blx	r3
 800f02c:	eb0b 0200 	add.w	r2, fp, r0
 800f030:	b292      	uxth	r2, r2
 800f032:	e7c5      	b.n	800efc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800f034:	2000      	movs	r0, #0
 800f036:	e7d1      	b.n	800efdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800f038:	4563      	cmp	r3, ip
 800f03a:	f77f af73 	ble.w	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f03e:	8ae3      	ldrh	r3, [r4, #22]
 800f040:	2b00      	cmp	r3, #0
 800f042:	f43f af6f 	beq.w	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f046:	2301      	movs	r3, #1
 800f048:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800f04c:	8c22      	ldrh	r2, [r4, #32]
 800f04e:	8be3      	ldrh	r3, [r4, #30]
 800f050:	4413      	add	r3, r2
 800f052:	83e3      	strh	r3, [r4, #30]
 800f054:	68e0      	ldr	r0, [r4, #12]
 800f056:	6803      	ldr	r3, [r0, #0]
 800f058:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f05a:	4798      	blx	r3
 800f05c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800f060:	4418      	add	r0, r3
 800f062:	8a63      	ldrh	r3, [r4, #18]
 800f064:	1a18      	subs	r0, r3, r0
 800f066:	8260      	strh	r0, [r4, #18]
 800f068:	b005      	add	sp, #20
 800f06a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f06e:	2300      	movs	r3, #0
 800f070:	4611      	mov	r1, r2
 800f072:	4620      	mov	r0, r4
 800f074:	f7ff ff0e 	bl	800ee94 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800f078:	e754      	b.n	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f07a:	4563      	cmp	r3, ip
 800f07c:	dd14      	ble.n	800f0a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800f07e:	b117      	cbz	r7, 800f086 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800f080:	2301      	movs	r3, #1
 800f082:	460a      	mov	r2, r1
 800f084:	e772      	b.n	800ef6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800f086:	2e00      	cmp	r6, #0
 800f088:	f43f af4c 	beq.w	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f08c:	2800      	cmp	r0, #0
 800f08e:	f47f af49 	bne.w	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f092:	f1ba 0f00 	cmp.w	sl, #0
 800f096:	d002      	beq.n	800f09e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800f098:	2301      	movs	r3, #1
 800f09a:	4642      	mov	r2, r8
 800f09c:	e767      	b.n	800ef6e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800f09e:	8ae3      	ldrh	r3, [r4, #22]
 800f0a0:	2b00      	cmp	r3, #0
 800f0a2:	f43f af3f 	beq.w	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f0a6:	e7d5      	b.n	800f054 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800f0a8:	2800      	cmp	r0, #0
 800f0aa:	f47f af3b 	bne.w	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f0ae:	f1ba 0f00 	cmp.w	sl, #0
 800f0b2:	f43f af37 	beq.w	800ef24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800f0b6:	2301      	movs	r3, #1
 800f0b8:	4642      	mov	r2, r8
 800f0ba:	e7da      	b.n	800f072 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800f0bc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800f0bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0be:	4605      	mov	r5, r0
 800f0c0:	b08f      	sub	sp, #60	; 0x3c
 800f0c2:	4617      	mov	r7, r2
 800f0c4:	461c      	mov	r4, r3
 800f0c6:	460e      	mov	r6, r1
 800f0c8:	b1d1      	cbz	r1, 800f100 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800f0ca:	681b      	ldr	r3, [r3, #0]
 800f0cc:	4620      	mov	r0, r4
 800f0ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f0d0:	4798      	blx	r3
 800f0d2:	4240      	negs	r0, r0
 800f0d4:	b200      	sxth	r0, r0
 800f0d6:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800f0da:	9603      	str	r6, [sp, #12]
 800f0dc:	9700      	str	r7, [sp, #0]
 800f0de:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f0e2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f0e6:	4629      	mov	r1, r5
 800f0e8:	a805      	add	r0, sp, #20
 800f0ea:	f7ff fcbf 	bl	800ea6c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f0ee:	2401      	movs	r4, #1
 800f0f0:	a805      	add	r0, sp, #20
 800f0f2:	f7ff fedf 	bl	800eeb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f0f6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800f0fa:	b163      	cbz	r3, 800f116 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800f0fc:	3401      	adds	r4, #1
 800f0fe:	e7f7      	b.n	800f0f0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800f100:	f002 fdda 	bl	8011cb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f104:	2401      	movs	r4, #1
 800f106:	280a      	cmp	r0, #10
 800f108:	4628      	mov	r0, r5
 800f10a:	bf08      	it	eq
 800f10c:	3401      	addeq	r4, #1
 800f10e:	f002 fdd3 	bl	8011cb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f112:	2800      	cmp	r0, #0
 800f114:	d1f7      	bne.n	800f106 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800f116:	b2a0      	uxth	r0, r4
 800f118:	b00f      	add	sp, #60	; 0x3c
 800f11a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f11c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800f11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f120:	b0e3      	sub	sp, #396	; 0x18c
 800f122:	461c      	mov	r4, r3
 800f124:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 800f126:	4683      	mov	fp, r0
 800f128:	4688      	mov	r8, r1
 800f12a:	2b00      	cmp	r3, #0
 800f12c:	f000 8112 	beq.w	800f354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f130:	6823      	ldr	r3, [r4, #0]
 800f132:	2b00      	cmp	r3, #0
 800f134:	f000 810e 	beq.w	800f354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f138:	7ba3      	ldrb	r3, [r4, #14]
 800f13a:	2b00      	cmp	r3, #0
 800f13c:	f000 810a 	beq.w	800f354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f140:	6810      	ldr	r0, [r2, #0]
 800f142:	6851      	ldr	r1, [r2, #4]
 800f144:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800f148:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800f14c:	ad0a      	add	r5, sp, #40	; 0x28
 800f14e:	462b      	mov	r3, r5
 800f150:	c303      	stmia	r3!, {r0, r1}
 800f152:	2100      	movs	r1, #0
 800f154:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800f158:	910c      	str	r1, [sp, #48]	; 0x30
 800f15a:	79a2      	ldrb	r2, [r4, #6]
 800f15c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f160:	a90c      	add	r1, sp, #48	; 0x30
 800f162:	4628      	mov	r0, r5
 800f164:	f7ff fd01 	bl	800eb6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f168:	a90c      	add	r1, sp, #48	; 0x30
 800f16a:	4608      	mov	r0, r1
 800f16c:	79a2      	ldrb	r2, [r4, #6]
 800f16e:	f7ff fcfc 	bl	800eb6a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800f172:	a817      	add	r0, sp, #92	; 0x5c
 800f174:	f002 f975 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 800f178:	6820      	ldr	r0, [r4, #0]
 800f17a:	6803      	ldr	r3, [r0, #0]
 800f17c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f17e:	4798      	blx	r3
 800f180:	4606      	mov	r6, r0
 800f182:	6820      	ldr	r0, [r4, #0]
 800f184:	6803      	ldr	r3, [r0, #0]
 800f186:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f188:	4798      	blx	r3
 800f18a:	4633      	mov	r3, r6
 800f18c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800f18e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800f190:	9000      	str	r0, [sp, #0]
 800f192:	a817      	add	r0, sp, #92	; 0x5c
 800f194:	f002 f9c0 	bl	8011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f198:	6820      	ldr	r0, [r4, #0]
 800f19a:	f894 a004 	ldrb.w	sl, [r4, #4]
 800f19e:	6803      	ldr	r3, [r0, #0]
 800f1a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f1a2:	4798      	blx	r3
 800f1a4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800f1a8:	6823      	ldr	r3, [r4, #0]
 800f1aa:	4607      	mov	r7, r0
 800f1ac:	4406      	add	r6, r0
 800f1ae:	a830      	add	r0, sp, #192	; 0xc0
 800f1b0:	f893 9009 	ldrb.w	r9, [r3, #9]
 800f1b4:	f002 f955 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 800f1b8:	7c23      	ldrb	r3, [r4, #16]
 800f1ba:	b17b      	cbz	r3, 800f1dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800f1bc:	6820      	ldr	r0, [r4, #0]
 800f1be:	6803      	ldr	r3, [r0, #0]
 800f1c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f1c2:	4798      	blx	r3
 800f1c4:	9009      	str	r0, [sp, #36]	; 0x24
 800f1c6:	6820      	ldr	r0, [r4, #0]
 800f1c8:	6802      	ldr	r2, [r0, #0]
 800f1ca:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800f1cc:	4790      	blx	r2
 800f1ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f1d0:	9000      	str	r0, [sp, #0]
 800f1d2:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800f1d4:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800f1d6:	a830      	add	r0, sp, #192	; 0xc0
 800f1d8:	f002 f99e 	bl	8011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f1dc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800f1e0:	7be2      	ldrb	r2, [r4, #15]
 800f1e2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800f1e6:	1a8a      	subs	r2, r1, r2
 800f1e8:	7c21      	ldrb	r1, [r4, #16]
 800f1ea:	9103      	str	r1, [sp, #12]
 800f1ec:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800f1f0:	9102      	str	r1, [sp, #8]
 800f1f2:	6821      	ldr	r1, [r4, #0]
 800f1f4:	9101      	str	r1, [sp, #4]
 800f1f6:	7961      	ldrb	r1, [r4, #5]
 800f1f8:	9100      	str	r1, [sp, #0]
 800f1fa:	b292      	uxth	r2, r2
 800f1fc:	a930      	add	r1, sp, #192	; 0xc0
 800f1fe:	a80e      	add	r0, sp, #56	; 0x38
 800f200:	f7ff fc34 	bl	800ea6c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800f204:	2e00      	cmp	r6, #0
 800f206:	dc5b      	bgt.n	800f2c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800f208:	af17      	add	r7, sp, #92	; 0x5c
 800f20a:	f04f 0900 	mov.w	r9, #0
 800f20e:	7c23      	ldrb	r3, [r4, #16]
 800f210:	2b00      	cmp	r3, #0
 800f212:	f000 80b1 	beq.w	800f378 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800f216:	a80e      	add	r0, sp, #56	; 0x38
 800f218:	f7ff fe4c 	bl	800eeb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f21c:	f1ba 0f00 	cmp.w	sl, #0
 800f220:	f000 80a5 	beq.w	800f36e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800f224:	7c23      	ldrb	r3, [r4, #16]
 800f226:	9309      	str	r3, [sp, #36]	; 0x24
 800f228:	2264      	movs	r2, #100	; 0x64
 800f22a:	4639      	mov	r1, r7
 800f22c:	a849      	add	r0, sp, #292	; 0x124
 800f22e:	f011 fa39 	bl	80206a4 <memcpy>
 800f232:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f234:	2b00      	cmp	r3, #0
 800f236:	f000 80a7 	beq.w	800f388 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800f23a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800f23e:	7922      	ldrb	r2, [r4, #4]
 800f240:	2a01      	cmp	r2, #1
 800f242:	f040 808a 	bne.w	800f35a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800f246:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 800f24a:	1ac0      	subs	r0, r0, r3
 800f24c:	2302      	movs	r3, #2
 800f24e:	fb90 f0f3 	sdiv	r0, r0, r3
 800f252:	b200      	sxth	r0, r0
 800f254:	7c23      	ldrb	r3, [r4, #16]
 800f256:	2b00      	cmp	r3, #0
 800f258:	f000 808b 	beq.w	800f372 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800f25c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 800f260:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 800f264:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f268:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800f26c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 800f270:	4410      	add	r0, r2
 800f272:	b200      	sxth	r0, r0
 800f274:	9000      	str	r0, [sp, #0]
 800f276:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800f27a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f27e:	4642      	mov	r2, r8
 800f280:	2100      	movs	r1, #0
 800f282:	4658      	mov	r0, fp
 800f284:	f7ff fca2 	bl	800ebcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800f288:	2800      	cmp	r0, #0
 800f28a:	d163      	bne.n	800f354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f28c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800f290:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800f294:	b2b2      	uxth	r2, r6
 800f296:	4413      	add	r3, r2
 800f298:	1a8a      	subs	r2, r1, r2
 800f29a:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 800f29e:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 800f2a2:	b21b      	sxth	r3, r3
 800f2a4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f2a8:	2a00      	cmp	r2, #0
 800f2aa:	d153      	bne.n	800f354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f2ac:	6822      	ldr	r2, [r4, #0]
 800f2ae:	8869      	ldrh	r1, [r5, #2]
 800f2b0:	7a12      	ldrb	r2, [r2, #8]
 800f2b2:	1a9b      	subs	r3, r3, r2
 800f2b4:	88ea      	ldrh	r2, [r5, #6]
 800f2b6:	440a      	add	r2, r1
 800f2b8:	b212      	sxth	r2, r2
 800f2ba:	4293      	cmp	r3, r2
 800f2bc:	dda7      	ble.n	800f20e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800f2be:	e049      	b.n	800f354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f2c0:	7c23      	ldrb	r3, [r4, #16]
 800f2c2:	444f      	add	r7, r9
 800f2c4:	b1c3      	cbz	r3, 800f2f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800f2c6:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800f2ca:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f2ce:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f2d2:	443b      	add	r3, r7
 800f2d4:	4293      	cmp	r3, r2
 800f2d6:	da97      	bge.n	800f208 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800f2d8:	a80e      	add	r0, sp, #56	; 0x38
 800f2da:	f7ff fdeb 	bl	800eeb4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f2de:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800f2e2:	3b01      	subs	r3, #1
 800f2e4:	b29b      	uxth	r3, r3
 800f2e6:	454b      	cmp	r3, r9
 800f2e8:	9309      	str	r3, [sp, #36]	; 0x24
 800f2ea:	d021      	beq.n	800f330 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800f2ec:	7961      	ldrb	r1, [r4, #5]
 800f2ee:	a817      	add	r0, sp, #92	; 0x5c
 800f2f0:	f7f5 fd9a 	bl	8004e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f2f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f2f6:	e7f4      	b.n	800f2e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800f2f8:	fa1f f986 	uxth.w	r9, r6
 800f2fc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f300:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f304:	443b      	add	r3, r7
 800f306:	4293      	cmp	r3, r2
 800f308:	f6bf af7e 	bge.w	800f208 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800f30c:	a817      	add	r0, sp, #92	; 0x5c
 800f30e:	f002 fcd3 	bl	8011cb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f312:	b1f8      	cbz	r0, 800f354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f314:	280a      	cmp	r0, #10
 800f316:	d1f1      	bne.n	800f2fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800f318:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800f31c:	444b      	add	r3, r9
 800f31e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f322:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800f326:	eba3 0309 	sub.w	r3, r3, r9
 800f32a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f32e:	e7e5      	b.n	800f2fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800f330:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 800f334:	b2b3      	uxth	r3, r6
 800f336:	441a      	add	r2, r3
 800f338:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800f33c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 800f340:	1ad3      	subs	r3, r2, r3
 800f342:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f346:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800f34a:	b11b      	cbz	r3, 800f354 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800f34c:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 800f350:	2b00      	cmp	r3, #0
 800f352:	d0ba      	beq.n	800f2ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800f354:	b063      	add	sp, #396	; 0x18c
 800f356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f35a:	2a02      	cmp	r2, #2
 800f35c:	d105      	bne.n	800f36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800f35e:	7be2      	ldrb	r2, [r4, #15]
 800f360:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800f364:	1a80      	subs	r0, r0, r2
 800f366:	1ac0      	subs	r0, r0, r3
 800f368:	e773      	b.n	800f252 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800f36a:	2000      	movs	r0, #0
 800f36c:	e772      	b.n	800f254 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800f36e:	7be0      	ldrb	r0, [r4, #15]
 800f370:	e770      	b.n	800f254 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800f372:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f376:	e773      	b.n	800f260 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800f378:	f1ba 0f00 	cmp.w	sl, #0
 800f37c:	d0f7      	beq.n	800f36e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800f37e:	2264      	movs	r2, #100	; 0x64
 800f380:	4639      	mov	r1, r7
 800f382:	a849      	add	r0, sp, #292	; 0x124
 800f384:	f011 f98e 	bl	80206a4 <memcpy>
 800f388:	2300      	movs	r3, #0
 800f38a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f38e:	6821      	ldr	r1, [r4, #0]
 800f390:	a849      	add	r0, sp, #292	; 0x124
 800f392:	f7ff fbae 	bl	800eaf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f396:	b203      	sxth	r3, r0
 800f398:	e751      	b.n	800f23e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800f39a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f39a:	2b03      	cmp	r3, #3
 800f39c:	d818      	bhi.n	800f3d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f39e:	e8df f003 	tbb	[pc, r3]
 800f3a2:	0602      	.short	0x0602
 800f3a4:	130d      	.short	0x130d
 800f3a6:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f3aa:	1850      	adds	r0, r2, r1
 800f3ac:	4770      	bx	lr
 800f3ae:	8803      	ldrh	r3, [r0, #0]
 800f3b0:	8880      	ldrh	r0, [r0, #4]
 800f3b2:	4418      	add	r0, r3
 800f3b4:	b200      	sxth	r0, r0
 800f3b6:	1a80      	subs	r0, r0, r2
 800f3b8:	3801      	subs	r0, #1
 800f3ba:	4770      	bx	lr
 800f3bc:	8803      	ldrh	r3, [r0, #0]
 800f3be:	8880      	ldrh	r0, [r0, #4]
 800f3c0:	4418      	add	r0, r3
 800f3c2:	b200      	sxth	r0, r0
 800f3c4:	1a40      	subs	r0, r0, r1
 800f3c6:	e7f7      	b.n	800f3b8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f3c8:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f3cc:	4410      	add	r0, r2
 800f3ce:	4770      	bx	lr
 800f3d0:	2000      	movs	r0, #0
 800f3d2:	4770      	bx	lr

0800f3d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f3d4:	2b03      	cmp	r3, #3
 800f3d6:	d817      	bhi.n	800f408 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f3d8:	e8df f003 	tbb	[pc, r3]
 800f3dc:	10090602 	.word	0x10090602
 800f3e0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f3e4:	1850      	adds	r0, r2, r1
 800f3e6:	4770      	bx	lr
 800f3e8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f3ec:	e7fa      	b.n	800f3e4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f3ee:	8843      	ldrh	r3, [r0, #2]
 800f3f0:	88c0      	ldrh	r0, [r0, #6]
 800f3f2:	4418      	add	r0, r3
 800f3f4:	b200      	sxth	r0, r0
 800f3f6:	1a80      	subs	r0, r0, r2
 800f3f8:	3801      	subs	r0, #1
 800f3fa:	4770      	bx	lr
 800f3fc:	8843      	ldrh	r3, [r0, #2]
 800f3fe:	88c0      	ldrh	r0, [r0, #6]
 800f400:	4418      	add	r0, r3
 800f402:	b200      	sxth	r0, r0
 800f404:	1a40      	subs	r0, r0, r1
 800f406:	e7f7      	b.n	800f3f8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f408:	2000      	movs	r0, #0
 800f40a:	4770      	bx	lr

0800f40c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f40c:	4b01      	ldr	r3, [pc, #4]	; (800f414 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f40e:	2200      	movs	r2, #0
 800f410:	601a      	str	r2, [r3, #0]
 800f412:	4770      	bx	lr
 800f414:	20014fcc 	.word	0x20014fcc

0800f418 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f418:	4603      	mov	r3, r0
 800f41a:	b1c8      	cbz	r0, 800f450 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f41c:	0c02      	lsrs	r2, r0, #16
 800f41e:	0412      	lsls	r2, r2, #16
 800f420:	b9a2      	cbnz	r2, 800f44c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f422:	0403      	lsls	r3, r0, #16
 800f424:	2010      	movs	r0, #16
 800f426:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800f42a:	bf04      	itt	eq
 800f42c:	021b      	lsleq	r3, r3, #8
 800f42e:	3008      	addeq	r0, #8
 800f430:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800f434:	bf04      	itt	eq
 800f436:	011b      	lsleq	r3, r3, #4
 800f438:	3004      	addeq	r0, #4
 800f43a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800f43e:	bf04      	itt	eq
 800f440:	009b      	lsleq	r3, r3, #2
 800f442:	3002      	addeq	r0, #2
 800f444:	2b00      	cmp	r3, #0
 800f446:	db04      	blt.n	800f452 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f448:	3001      	adds	r0, #1
 800f44a:	4770      	bx	lr
 800f44c:	2000      	movs	r0, #0
 800f44e:	e7ea      	b.n	800f426 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f450:	2020      	movs	r0, #32
 800f452:	4770      	bx	lr

0800f454 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f458:	b087      	sub	sp, #28
 800f45a:	460d      	mov	r5, r1
 800f45c:	4616      	mov	r6, r2
 800f45e:	4698      	mov	r8, r3
 800f460:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800f464:	4601      	mov	r1, r0
 800f466:	b120      	cbz	r0, 800f472 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f468:	b11a      	cbz	r2, 800f472 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f46a:	2d1f      	cmp	r5, #31
 800f46c:	d801      	bhi.n	800f472 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f46e:	2b1f      	cmp	r3, #31
 800f470:	d904      	bls.n	800f47c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f472:	2000      	movs	r0, #0
 800f474:	6038      	str	r0, [r7, #0]
 800f476:	b007      	add	sp, #28
 800f478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f47c:	b97d      	cbnz	r5, 800f49e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f47e:	b143      	cbz	r3, 800f492 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f480:	4602      	mov	r2, r0
 800f482:	e9cd 4700 	strd	r4, r7, [sp]
 800f486:	462b      	mov	r3, r5
 800f488:	4641      	mov	r1, r8
 800f48a:	4630      	mov	r0, r6
 800f48c:	f7ff ffe2 	bl	800f454 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f490:	e7f1      	b.n	800f476 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f492:	f04f 33ff 	mov.w	r3, #4294967295
 800f496:	603b      	str	r3, [r7, #0]
 800f498:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800f49c:	e7eb      	b.n	800f476 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f49e:	fa32 fa05 	lsrs.w	sl, r2, r5
 800f4a2:	d106      	bne.n	800f4b2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800f4a4:	4346      	muls	r6, r0
 800f4a6:	fbb6 f0f4 	udiv	r0, r6, r4
 800f4aa:	fb04 6610 	mls	r6, r4, r0, r6
 800f4ae:	603e      	str	r6, [r7, #0]
 800f4b0:	e7e1      	b.n	800f476 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f4b2:	2201      	movs	r2, #1
 800f4b4:	40aa      	lsls	r2, r5
 800f4b6:	3a01      	subs	r2, #1
 800f4b8:	4016      	ands	r6, r2
 800f4ba:	fa00 fb05 	lsl.w	fp, r0, r5
 800f4be:	4630      	mov	r0, r6
 800f4c0:	fbbb f9f4 	udiv	r9, fp, r4
 800f4c4:	fb0a f309 	mul.w	r3, sl, r9
 800f4c8:	9303      	str	r3, [sp, #12]
 800f4ca:	f7ff ffa5 	bl	800f418 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f4ce:	462b      	mov	r3, r5
 800f4d0:	460a      	mov	r2, r1
 800f4d2:	e9cd 4700 	strd	r4, r7, [sp]
 800f4d6:	4601      	mov	r1, r0
 800f4d8:	4630      	mov	r0, r6
 800f4da:	f7ff ffbb 	bl	800f454 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f4de:	fb04 b919 	mls	r9, r4, r9, fp
 800f4e2:	4606      	mov	r6, r0
 800f4e4:	4648      	mov	r0, r9
 800f4e6:	eb05 0108 	add.w	r1, r5, r8
 800f4ea:	f7ff ff95 	bl	800f418 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f4ee:	ab05      	add	r3, sp, #20
 800f4f0:	e9cd 4300 	strd	r4, r3, [sp]
 800f4f4:	464a      	mov	r2, r9
 800f4f6:	4603      	mov	r3, r0
 800f4f8:	4650      	mov	r0, sl
 800f4fa:	f7ff ffab 	bl	800f454 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f4fe:	6839      	ldr	r1, [r7, #0]
 800f500:	9a05      	ldr	r2, [sp, #20]
 800f502:	9b03      	ldr	r3, [sp, #12]
 800f504:	4411      	add	r1, r2
 800f506:	fbb1 f2f4 	udiv	r2, r1, r4
 800f50a:	18d3      	adds	r3, r2, r3
 800f50c:	441e      	add	r6, r3
 800f50e:	fb04 1412 	mls	r4, r4, r2, r1
 800f512:	4430      	add	r0, r6
 800f514:	603c      	str	r4, [r7, #0]
 800f516:	e7ae      	b.n	800f476 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f518 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f518:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f51c:	b085      	sub	sp, #20
 800f51e:	f1b0 0900 	subs.w	r9, r0, #0
 800f522:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f524:	461d      	mov	r5, r3
 800f526:	bfbf      	itttt	lt
 800f528:	6823      	ldrlt	r3, [r4, #0]
 800f52a:	425b      	neglt	r3, r3
 800f52c:	f1c9 0900 	rsblt	r9, r9, #0
 800f530:	6023      	strlt	r3, [r4, #0]
 800f532:	bfb4      	ite	lt
 800f534:	f04f 36ff 	movlt.w	r6, #4294967295
 800f538:	2601      	movge	r6, #1
 800f53a:	2a00      	cmp	r2, #0
 800f53c:	4617      	mov	r7, r2
 800f53e:	da04      	bge.n	800f54a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f540:	6823      	ldr	r3, [r4, #0]
 800f542:	425b      	negs	r3, r3
 800f544:	4257      	negs	r7, r2
 800f546:	4276      	negs	r6, r6
 800f548:	6023      	str	r3, [r4, #0]
 800f54a:	2d00      	cmp	r5, #0
 800f54c:	4638      	mov	r0, r7
 800f54e:	bfba      	itte	lt
 800f550:	426d      	neglt	r5, r5
 800f552:	f04f 38ff 	movlt.w	r8, #4294967295
 800f556:	f04f 0801 	movge.w	r8, #1
 800f55a:	f7ff ff5d 	bl	800f418 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f55e:	ab03      	add	r3, sp, #12
 800f560:	e9cd 5300 	strd	r5, r3, [sp]
 800f564:	463a      	mov	r2, r7
 800f566:	4603      	mov	r3, r0
 800f568:	4648      	mov	r0, r9
 800f56a:	f7ff ff73 	bl	800f454 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f56e:	6823      	ldr	r3, [r4, #0]
 800f570:	9a03      	ldr	r2, [sp, #12]
 800f572:	4546      	cmp	r6, r8
 800f574:	441a      	add	r2, r3
 800f576:	fb92 f3f5 	sdiv	r3, r2, r5
 800f57a:	4418      	add	r0, r3
 800f57c:	bf18      	it	ne
 800f57e:	4240      	negne	r0, r0
 800f580:	fb05 2313 	mls	r3, r5, r3, r2
 800f584:	1c72      	adds	r2, r6, #1
 800f586:	6023      	str	r3, [r4, #0]
 800f588:	d105      	bne.n	800f596 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f58a:	2b00      	cmp	r3, #0
 800f58c:	f1c3 0200 	rsb	r2, r3, #0
 800f590:	db0b      	blt.n	800f5aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f592:	6022      	str	r2, [r4, #0]
 800f594:	e006      	b.n	800f5a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f596:	2e01      	cmp	r6, #1
 800f598:	d104      	bne.n	800f5a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f59a:	2b00      	cmp	r3, #0
 800f59c:	da02      	bge.n	800f5a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f59e:	442b      	add	r3, r5
 800f5a0:	3801      	subs	r0, #1
 800f5a2:	6023      	str	r3, [r4, #0]
 800f5a4:	b005      	add	sp, #20
 800f5a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f5aa:	3801      	subs	r0, #1
 800f5ac:	1b52      	subs	r2, r2, r5
 800f5ae:	e7f0      	b.n	800f592 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f5b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f5b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f5b4:	4c1c      	ldr	r4, [pc, #112]	; (800f628 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f5b6:	6807      	ldr	r7, [r0, #0]
 800f5b8:	69a3      	ldr	r3, [r4, #24]
 800f5ba:	4605      	mov	r5, r0
 800f5bc:	b92b      	cbnz	r3, 800f5ca <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f5be:	6840      	ldr	r0, [r0, #4]
 800f5c0:	e9c5 7000 	strd	r7, r0, [r5]
 800f5c4:	b004      	add	sp, #16
 800f5c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5ca:	68a2      	ldr	r2, [r4, #8]
 800f5cc:	6820      	ldr	r0, [r4, #0]
 800f5ce:	ae04      	add	r6, sp, #16
 800f5d0:	f04f 0802 	mov.w	r8, #2
 800f5d4:	fb93 f1f8 	sdiv	r1, r3, r8
 800f5d8:	440a      	add	r2, r1
 800f5da:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f5de:	69e1      	ldr	r1, [r4, #28]
 800f5e0:	9600      	str	r6, [sp, #0]
 800f5e2:	463a      	mov	r2, r7
 800f5e4:	f7ff ff98 	bl	800f518 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f5e8:	69a3      	ldr	r3, [r4, #24]
 800f5ea:	686a      	ldr	r2, [r5, #4]
 800f5ec:	6a21      	ldr	r1, [r4, #32]
 800f5ee:	9600      	str	r6, [sp, #0]
 800f5f0:	4607      	mov	r7, r0
 800f5f2:	6860      	ldr	r0, [r4, #4]
 800f5f4:	f7ff ff90 	bl	800f518 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f5f8:	6962      	ldr	r2, [r4, #20]
 800f5fa:	69a3      	ldr	r3, [r4, #24]
 800f5fc:	fb93 f8f8 	sdiv	r8, r3, r8
 800f600:	4442      	add	r2, r8
 800f602:	9203      	str	r2, [sp, #12]
 800f604:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f606:	682a      	ldr	r2, [r5, #0]
 800f608:	9600      	str	r6, [sp, #0]
 800f60a:	4407      	add	r7, r0
 800f60c:	68e0      	ldr	r0, [r4, #12]
 800f60e:	f7ff ff83 	bl	800f518 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f612:	9600      	str	r6, [sp, #0]
 800f614:	4680      	mov	r8, r0
 800f616:	69a3      	ldr	r3, [r4, #24]
 800f618:	686a      	ldr	r2, [r5, #4]
 800f61a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800f61c:	6920      	ldr	r0, [r4, #16]
 800f61e:	f7ff ff7b 	bl	800f518 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f622:	4440      	add	r0, r8
 800f624:	e7cc      	b.n	800f5c0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f626:	bf00      	nop
 800f628:	20014fd0 	.word	0x20014fd0

0800f62c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f62c:	4b07      	ldr	r3, [pc, #28]	; (800f64c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f62e:	781b      	ldrb	r3, [r3, #0]
 800f630:	2b01      	cmp	r3, #1
 800f632:	d109      	bne.n	800f648 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f634:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f638:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f63c:	8003      	strh	r3, [r0, #0]
 800f63e:	4b04      	ldr	r3, [pc, #16]	; (800f650 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f640:	881b      	ldrh	r3, [r3, #0]
 800f642:	3b01      	subs	r3, #1
 800f644:	1a9b      	subs	r3, r3, r2
 800f646:	800b      	strh	r3, [r1, #0]
 800f648:	4770      	bx	lr
 800f64a:	bf00      	nop
 800f64c:	20014fbc 	.word	0x20014fbc
 800f650:	20014fb8 	.word	0x20014fb8

0800f654 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f654:	b510      	push	{r4, lr}
 800f656:	4b07      	ldr	r3, [pc, #28]	; (800f674 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f658:	781b      	ldrb	r3, [r3, #0]
 800f65a:	2b01      	cmp	r3, #1
 800f65c:	d108      	bne.n	800f670 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f65e:	4b06      	ldr	r3, [pc, #24]	; (800f678 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f660:	880c      	ldrh	r4, [r1, #0]
 800f662:	881b      	ldrh	r3, [r3, #0]
 800f664:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f668:	3b01      	subs	r3, #1
 800f66a:	1b1b      	subs	r3, r3, r4
 800f66c:	8003      	strh	r3, [r0, #0]
 800f66e:	800a      	strh	r2, [r1, #0]
 800f670:	bd10      	pop	{r4, pc}
 800f672:	bf00      	nop
 800f674:	20014fbc 	.word	0x20014fbc
 800f678:	20014fb8 	.word	0x20014fb8

0800f67c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f67c:	b510      	push	{r4, lr}
 800f67e:	4b0a      	ldr	r3, [pc, #40]	; (800f6a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f680:	781b      	ldrb	r3, [r3, #0]
 800f682:	2b01      	cmp	r3, #1
 800f684:	d10e      	bne.n	800f6a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f686:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f68a:	8843      	ldrh	r3, [r0, #2]
 800f68c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f690:	8044      	strh	r4, [r0, #2]
 800f692:	18ca      	adds	r2, r1, r3
 800f694:	4b05      	ldr	r3, [pc, #20]	; (800f6ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f696:	881b      	ldrh	r3, [r3, #0]
 800f698:	1a9b      	subs	r3, r3, r2
 800f69a:	8003      	strh	r3, [r0, #0]
 800f69c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f6a0:	80c3      	strh	r3, [r0, #6]
 800f6a2:	8081      	strh	r1, [r0, #4]
 800f6a4:	bd10      	pop	{r4, pc}
 800f6a6:	bf00      	nop
 800f6a8:	20014fbc 	.word	0x20014fbc
 800f6ac:	20014fb8 	.word	0x20014fb8

0800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f6b0:	4b08      	ldr	r3, [pc, #32]	; (800f6d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800f6b2:	781b      	ldrb	r3, [r3, #0]
 800f6b4:	2b01      	cmp	r3, #1
 800f6b6:	d10c      	bne.n	800f6d2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800f6b8:	8803      	ldrh	r3, [r0, #0]
 800f6ba:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800f6be:	8842      	ldrh	r2, [r0, #2]
 800f6c0:	8002      	strh	r2, [r0, #0]
 800f6c2:	185a      	adds	r2, r3, r1
 800f6c4:	4b04      	ldr	r3, [pc, #16]	; (800f6d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f6c6:	881b      	ldrh	r3, [r3, #0]
 800f6c8:	1a9b      	subs	r3, r3, r2
 800f6ca:	8043      	strh	r3, [r0, #2]
 800f6cc:	88c3      	ldrh	r3, [r0, #6]
 800f6ce:	8083      	strh	r3, [r0, #4]
 800f6d0:	80c1      	strh	r1, [r0, #6]
 800f6d2:	4770      	bx	lr
 800f6d4:	20014fbc 	.word	0x20014fbc
 800f6d8:	20014fb8 	.word	0x20014fb8

0800f6dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800f6dc:	b510      	push	{r4, lr}
 800f6de:	4b07      	ldr	r3, [pc, #28]	; (800f6fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800f6e0:	781b      	ldrb	r3, [r3, #0]
 800f6e2:	2b01      	cmp	r3, #1
 800f6e4:	d108      	bne.n	800f6f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800f6e6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f6ea:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f6ee:	8003      	strh	r3, [r0, #0]
 800f6f0:	8893      	ldrh	r3, [r2, #4]
 800f6f2:	3b01      	subs	r3, #1
 800f6f4:	1b1b      	subs	r3, r3, r4
 800f6f6:	800b      	strh	r3, [r1, #0]
 800f6f8:	bd10      	pop	{r4, pc}
 800f6fa:	bf00      	nop
 800f6fc:	20014fbc 	.word	0x20014fbc

0800f700 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800f700:	4b0b      	ldr	r3, [pc, #44]	; (800f730 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800f702:	781b      	ldrb	r3, [r3, #0]
 800f704:	2b01      	cmp	r3, #1
 800f706:	d111      	bne.n	800f72c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800f708:	680b      	ldr	r3, [r1, #0]
 800f70a:	ed90 7a00 	vldr	s14, [r0]
 800f70e:	6003      	str	r3, [r0, #0]
 800f710:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800f714:	eddf 6a07 	vldr	s13, [pc, #28]	; 800f734 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800f718:	ee07 3a90 	vmov	s15, r3
 800f71c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f720:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f724:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800f728:	edc1 7a00 	vstr	s15, [r1]
 800f72c:	4770      	bx	lr
 800f72e:	bf00      	nop
 800f730:	20014fbc 	.word	0x20014fbc
 800f734:	38d1b717 	.word	0x38d1b717

0800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800f738:	b510      	push	{r4, lr}
 800f73a:	4b0a      	ldr	r3, [pc, #40]	; (800f764 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800f73c:	781b      	ldrb	r3, [r3, #0]
 800f73e:	2b01      	cmp	r3, #1
 800f740:	460a      	mov	r2, r1
 800f742:	d10d      	bne.n	800f760 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800f744:	8881      	ldrh	r1, [r0, #4]
 800f746:	8803      	ldrh	r3, [r0, #0]
 800f748:	440b      	add	r3, r1
 800f74a:	4601      	mov	r1, r0
 800f74c:	3b01      	subs	r3, #1
 800f74e:	f821 3b02 	strh.w	r3, [r1], #2
 800f752:	f7ff ffc3 	bl	800f6dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f756:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f75a:	88c2      	ldrh	r2, [r0, #6]
 800f75c:	8082      	strh	r2, [r0, #4]
 800f75e:	80c3      	strh	r3, [r0, #6]
 800f760:	bd10      	pop	{r4, pc}
 800f762:	bf00      	nop
 800f764:	20014fbc 	.word	0x20014fbc

0800f768 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f768:	4b06      	ldr	r3, [pc, #24]	; (800f784 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f76a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f76e:	4b06      	ldr	r3, [pc, #24]	; (800f788 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f770:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 800f774:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f778:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 800f77c:	2100      	movs	r1, #0
 800f77e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 800f782:	4770      	bx	lr
 800f784:	20014fb8 	.word	0x20014fb8
 800f788:	20014fba 	.word	0x20014fba

0800f78c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f78c:	4b03      	ldr	r3, [pc, #12]	; (800f79c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f78e:	6818      	ldr	r0, [r3, #0]
 800f790:	b110      	cbz	r0, 800f798 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f792:	6803      	ldr	r3, [r0, #0]
 800f794:	699b      	ldr	r3, [r3, #24]
 800f796:	4718      	bx	r3
 800f798:	4770      	bx	lr
 800f79a:	bf00      	nop
 800f79c:	20015000 	.word	0x20015000

0800f7a0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f7a0:	4770      	bx	lr
	...

0800f7a4 <_ZN8touchgfx11Application4drawEv>:
 800f7a4:	b507      	push	{r0, r1, r2, lr}
 800f7a6:	4b09      	ldr	r3, [pc, #36]	; (800f7cc <_ZN8touchgfx11Application4drawEv+0x28>)
 800f7a8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f7ac:	4b08      	ldr	r3, [pc, #32]	; (800f7d0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f7ae:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f7b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f7b6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f7ba:	6803      	ldr	r3, [r0, #0]
 800f7bc:	2100      	movs	r1, #0
 800f7be:	9100      	str	r1, [sp, #0]
 800f7c0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f7c2:	4669      	mov	r1, sp
 800f7c4:	4798      	blx	r3
 800f7c6:	b003      	add	sp, #12
 800f7c8:	f85d fb04 	ldr.w	pc, [sp], #4
 800f7cc:	20014fb8 	.word	0x20014fb8
 800f7d0:	20014fba 	.word	0x20014fba

0800f7d4 <_ZN8touchgfx11Application10invalidateEv>:
 800f7d4:	4b09      	ldr	r3, [pc, #36]	; (800f7fc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800f7d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f7da:	4b09      	ldr	r3, [pc, #36]	; (800f800 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800f7dc:	b082      	sub	sp, #8
 800f7de:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f7e2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f7e6:	2100      	movs	r1, #0
 800f7e8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f7ec:	9100      	str	r1, [sp, #0]
 800f7ee:	6803      	ldr	r3, [r0, #0]
 800f7f0:	aa02      	add	r2, sp, #8
 800f7f2:	e912 0006 	ldmdb	r2, {r1, r2}
 800f7f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f7f8:	b002      	add	sp, #8
 800f7fa:	4718      	bx	r3
 800f7fc:	20014fb8 	.word	0x20014fb8
 800f800:	20014fba 	.word	0x20014fba

0800f804 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f804:	4b03      	ldr	r3, [pc, #12]	; (800f814 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f806:	6818      	ldr	r0, [r3, #0]
 800f808:	b110      	cbz	r0, 800f810 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f80a:	6803      	ldr	r3, [r0, #0]
 800f80c:	69db      	ldr	r3, [r3, #28]
 800f80e:	4718      	bx	r3
 800f810:	4770      	bx	lr
 800f812:	bf00      	nop
 800f814:	20015000 	.word	0x20015000

0800f818 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f818:	4b03      	ldr	r3, [pc, #12]	; (800f828 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f81a:	6818      	ldr	r0, [r3, #0]
 800f81c:	b110      	cbz	r0, 800f824 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f81e:	6803      	ldr	r3, [r0, #0]
 800f820:	6a1b      	ldr	r3, [r3, #32]
 800f822:	4718      	bx	r3
 800f824:	4770      	bx	lr
 800f826:	bf00      	nop
 800f828:	20015000 	.word	0x20015000

0800f82c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800f82c:	2300      	movs	r3, #0
 800f82e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 800f832:	4770      	bx	lr

0800f834 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f834:	4b03      	ldr	r3, [pc, #12]	; (800f844 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f836:	6818      	ldr	r0, [r3, #0]
 800f838:	b110      	cbz	r0, 800f840 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f83a:	6803      	ldr	r3, [r0, #0]
 800f83c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f83e:	4718      	bx	r3
 800f840:	4770      	bx	lr
 800f842:	bf00      	nop
 800f844:	20015000 	.word	0x20015000

0800f848 <_ZN8touchgfx11ApplicationD1Ev>:
 800f848:	4770      	bx	lr

0800f84a <_ZN8touchgfx11ApplicationD0Ev>:
 800f84a:	b510      	push	{r4, lr}
 800f84c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800f850:	4604      	mov	r4, r0
 800f852:	f010 fde9 	bl	8020428 <_ZdlPvj>
 800f856:	4620      	mov	r0, r4
 800f858:	bd10      	pop	{r4, pc}

0800f85a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f85a:	b510      	push	{r4, lr}
 800f85c:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f860:	888a      	ldrh	r2, [r1, #4]
 800f862:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f866:	4422      	add	r2, r4
 800f868:	b212      	sxth	r2, r2
 800f86a:	4293      	cmp	r3, r2
 800f86c:	da15      	bge.n	800f89a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f86e:	8882      	ldrh	r2, [r0, #4]
 800f870:	4413      	add	r3, r2
 800f872:	b21b      	sxth	r3, r3
 800f874:	429c      	cmp	r4, r3
 800f876:	da10      	bge.n	800f89a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f878:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f87c:	88c9      	ldrh	r1, [r1, #6]
 800f87e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f882:	4419      	add	r1, r3
 800f884:	b209      	sxth	r1, r1
 800f886:	428a      	cmp	r2, r1
 800f888:	da07      	bge.n	800f89a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f88a:	88c0      	ldrh	r0, [r0, #6]
 800f88c:	4410      	add	r0, r2
 800f88e:	b200      	sxth	r0, r0
 800f890:	4283      	cmp	r3, r0
 800f892:	bfac      	ite	ge
 800f894:	2000      	movge	r0, #0
 800f896:	2001      	movlt	r0, #1
 800f898:	bd10      	pop	{r4, pc}
 800f89a:	2000      	movs	r0, #0
 800f89c:	e7fc      	b.n	800f898 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f89e <_ZN8touchgfx4Rect10restrictToEss>:
 800f89e:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f8a2:	2b00      	cmp	r3, #0
 800f8a4:	b510      	push	{r4, lr}
 800f8a6:	da04      	bge.n	800f8b2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800f8a8:	8884      	ldrh	r4, [r0, #4]
 800f8aa:	4423      	add	r3, r4
 800f8ac:	8083      	strh	r3, [r0, #4]
 800f8ae:	2300      	movs	r3, #0
 800f8b0:	8003      	strh	r3, [r0, #0]
 800f8b2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f8b6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f8ba:	1b09      	subs	r1, r1, r4
 800f8bc:	428b      	cmp	r3, r1
 800f8be:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f8c2:	bfc8      	it	gt
 800f8c4:	8081      	strhgt	r1, [r0, #4]
 800f8c6:	2b00      	cmp	r3, #0
 800f8c8:	da04      	bge.n	800f8d4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800f8ca:	88c1      	ldrh	r1, [r0, #6]
 800f8cc:	440b      	add	r3, r1
 800f8ce:	80c3      	strh	r3, [r0, #6]
 800f8d0:	2300      	movs	r3, #0
 800f8d2:	8043      	strh	r3, [r0, #2]
 800f8d4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f8d8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800f8dc:	1a52      	subs	r2, r2, r1
 800f8de:	4293      	cmp	r3, r2
 800f8e0:	bfc8      	it	gt
 800f8e2:	80c2      	strhgt	r2, [r0, #6]
 800f8e4:	bd10      	pop	{r4, pc}
	...

0800f8e8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800f8e8:	b510      	push	{r4, lr}
 800f8ea:	4b10      	ldr	r3, [pc, #64]	; (800f92c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800f8ec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f8f0:	4b0f      	ldr	r3, [pc, #60]	; (800f930 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800f8f2:	460c      	mov	r4, r1
 800f8f4:	4620      	mov	r0, r4
 800f8f6:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f8fa:	f7ff ffd0 	bl	800f89e <_ZN8touchgfx4Rect10restrictToEss>
 800f8fe:	4b0d      	ldr	r3, [pc, #52]	; (800f934 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800f900:	6818      	ldr	r0, [r3, #0]
 800f902:	b190      	cbz	r0, 800f92a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800f904:	6803      	ldr	r3, [r0, #0]
 800f906:	4621      	mov	r1, r4
 800f908:	689b      	ldr	r3, [r3, #8]
 800f90a:	4798      	blx	r3
 800f90c:	4b0a      	ldr	r3, [pc, #40]	; (800f938 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800f90e:	6818      	ldr	r0, [r3, #0]
 800f910:	b118      	cbz	r0, 800f91a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800f912:	6803      	ldr	r3, [r0, #0]
 800f914:	4621      	mov	r1, r4
 800f916:	689b      	ldr	r3, [r3, #8]
 800f918:	4798      	blx	r3
 800f91a:	4b08      	ldr	r3, [pc, #32]	; (800f93c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800f91c:	6818      	ldr	r0, [r3, #0]
 800f91e:	6803      	ldr	r3, [r0, #0]
 800f920:	4621      	mov	r1, r4
 800f922:	69db      	ldr	r3, [r3, #28]
 800f924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f928:	4718      	bx	r3
 800f92a:	bd10      	pop	{r4, pc}
 800f92c:	20014fba 	.word	0x20014fba
 800f930:	20014fb8 	.word	0x20014fb8
 800f934:	20015000 	.word	0x20015000
 800f938:	20014ffc 	.word	0x20014ffc
 800f93c:	20014fc4 	.word	0x20014fc4

0800f940 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f942:	4606      	mov	r6, r0
 800f944:	4608      	mov	r0, r1
 800f946:	460f      	mov	r7, r1
 800f948:	f7fc fa9d 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f94c:	b9e8      	cbnz	r0, 800f98a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f94e:	f9b7 5000 	ldrsh.w	r5, [r7]
 800f952:	f9b6 4000 	ldrsh.w	r4, [r6]
 800f956:	42a5      	cmp	r5, r4
 800f958:	db17      	blt.n	800f98a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f95a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800f95e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800f962:	429a      	cmp	r2, r3
 800f964:	db11      	blt.n	800f98a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f966:	88b9      	ldrh	r1, [r7, #4]
 800f968:	440d      	add	r5, r1
 800f96a:	88b1      	ldrh	r1, [r6, #4]
 800f96c:	440c      	add	r4, r1
 800f96e:	b22d      	sxth	r5, r5
 800f970:	b224      	sxth	r4, r4
 800f972:	42a5      	cmp	r5, r4
 800f974:	dc09      	bgt.n	800f98a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800f976:	88f8      	ldrh	r0, [r7, #6]
 800f978:	4410      	add	r0, r2
 800f97a:	88f2      	ldrh	r2, [r6, #6]
 800f97c:	4413      	add	r3, r2
 800f97e:	b200      	sxth	r0, r0
 800f980:	b21b      	sxth	r3, r3
 800f982:	4298      	cmp	r0, r3
 800f984:	bfcc      	ite	gt
 800f986:	2000      	movgt	r0, #0
 800f988:	2001      	movle	r0, #1
 800f98a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f98c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f98c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f98e:	4604      	mov	r4, r0
 800f990:	4608      	mov	r0, r1
 800f992:	460d      	mov	r5, r1
 800f994:	f7fc fa77 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f998:	b978      	cbnz	r0, 800f9ba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f99a:	4620      	mov	r0, r4
 800f99c:	f7fc fa73 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f9a0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f9a4:	b150      	cbz	r0, 800f9bc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f9a6:	8026      	strh	r6, [r4, #0]
 800f9a8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f9ac:	8063      	strh	r3, [r4, #2]
 800f9ae:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f9b2:	80a3      	strh	r3, [r4, #4]
 800f9b4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f9b8:	80e3      	strh	r3, [r4, #6]
 800f9ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9bc:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f9c0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f9c4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f9c8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f9cc:	88ed      	ldrh	r5, [r5, #6]
 800f9ce:	42b1      	cmp	r1, r6
 800f9d0:	460f      	mov	r7, r1
 800f9d2:	bfa8      	it	ge
 800f9d4:	4637      	movge	r7, r6
 800f9d6:	4293      	cmp	r3, r2
 800f9d8:	4618      	mov	r0, r3
 800f9da:	4466      	add	r6, ip
 800f9dc:	bfa8      	it	ge
 800f9de:	4610      	movge	r0, r2
 800f9e0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f9e4:	8027      	strh	r7, [r4, #0]
 800f9e6:	442a      	add	r2, r5
 800f9e8:	88e5      	ldrh	r5, [r4, #6]
 800f9ea:	8060      	strh	r0, [r4, #2]
 800f9ec:	4461      	add	r1, ip
 800f9ee:	442b      	add	r3, r5
 800f9f0:	b236      	sxth	r6, r6
 800f9f2:	b209      	sxth	r1, r1
 800f9f4:	b212      	sxth	r2, r2
 800f9f6:	b21b      	sxth	r3, r3
 800f9f8:	428e      	cmp	r6, r1
 800f9fa:	bfac      	ite	ge
 800f9fc:	ebc7 0106 	rsbge	r1, r7, r6
 800fa00:	ebc7 0101 	rsblt	r1, r7, r1
 800fa04:	429a      	cmp	r2, r3
 800fa06:	bfac      	ite	ge
 800fa08:	ebc0 0202 	rsbge	r2, r0, r2
 800fa0c:	ebc0 0203 	rsblt	r2, r0, r3
 800fa10:	80a1      	strh	r1, [r4, #4]
 800fa12:	80e2      	strh	r2, [r4, #6]
 800fa14:	e7d1      	b.n	800f9ba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800fa18 <_ZN8touchgfx11Application11getInstanceEv>:
 800fa18:	4b01      	ldr	r3, [pc, #4]	; (800fa20 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800fa1a:	6818      	ldr	r0, [r3, #0]
 800fa1c:	4770      	bx	lr
 800fa1e:	bf00      	nop
 800fa20:	20015010 	.word	0x20015010

0800fa24 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800fa24:	b510      	push	{r4, lr}
 800fa26:	2300      	movs	r3, #0
 800fa28:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 800fa2c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800fa30:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800fa34:	4604      	mov	r4, r0
 800fa36:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fa3a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 800fa3e:	429a      	cmp	r2, r3
 800fa40:	d90e      	bls.n	800fa60 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800fa42:	18e2      	adds	r2, r4, r3
 800fa44:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 800fa48:	b122      	cbz	r2, 800fa54 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800fa4a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800fa4e:	6803      	ldr	r3, [r0, #0]
 800fa50:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800fa52:	4798      	blx	r3
 800fa54:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fa58:	3301      	adds	r3, #1
 800fa5a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800fa5e:	e7ea      	b.n	800fa36 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800fa60:	bd10      	pop	{r4, pc}

0800fa62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800fa62:	2300      	movs	r3, #0
 800fa64:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800fa68:	f100 0284 	add.w	r2, r0, #132	; 0x84
 800fa6c:	30a4      	adds	r0, #164	; 0xa4
 800fa6e:	f802 3b01 	strb.w	r3, [r2], #1
 800fa72:	4282      	cmp	r2, r0
 800fa74:	d1fb      	bne.n	800fa6e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800fa76:	4770      	bx	lr

0800fa78 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800fa78:	b570      	push	{r4, r5, r6, lr}
 800fa7a:	4c0b      	ldr	r4, [pc, #44]	; (800faa8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800fa7c:	4605      	mov	r5, r0
 800fa7e:	6820      	ldr	r0, [r4, #0]
 800fa80:	460e      	mov	r6, r1
 800fa82:	b110      	cbz	r0, 800fa8a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800fa84:	6803      	ldr	r3, [r0, #0]
 800fa86:	695b      	ldr	r3, [r3, #20]
 800fa88:	4798      	blx	r3
 800fa8a:	1d28      	adds	r0, r5, #4
 800fa8c:	f7ff ffe9 	bl	800fa62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800fa90:	6026      	str	r6, [r4, #0]
 800fa92:	6833      	ldr	r3, [r6, #0]
 800fa94:	4630      	mov	r0, r6
 800fa96:	68db      	ldr	r3, [r3, #12]
 800fa98:	4798      	blx	r3
 800fa9a:	682b      	ldr	r3, [r5, #0]
 800fa9c:	4628      	mov	r0, r5
 800fa9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800faa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800faa4:	4718      	bx	r3
 800faa6:	bf00      	nop
 800faa8:	20015000 	.word	0x20015000

0800faac <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800faac:	2300      	movs	r3, #0
 800faae:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 800fab2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 800fab6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fab8:	461a      	mov	r2, r3
 800faba:	461c      	mov	r4, r3
 800fabc:	461d      	mov	r5, r3
 800fabe:	459c      	cmp	ip, r3
 800fac0:	dd1a      	ble.n	800faf8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800fac2:	18c6      	adds	r6, r0, r3
 800fac4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 800fac8:	b16e      	cbz	r6, 800fae6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800faca:	429a      	cmp	r2, r3
 800facc:	d008      	beq.n	800fae0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800face:	fa1f fe82 	uxth.w	lr, r2
 800fad2:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800fad6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800fada:	1887      	adds	r7, r0, r2
 800fadc:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 800fae0:	3201      	adds	r2, #1
 800fae2:	3301      	adds	r3, #1
 800fae4:	e7eb      	b.n	800fabe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800fae6:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 800faea:	4299      	cmp	r1, r3
 800faec:	bfa8      	it	ge
 800faee:	3501      	addge	r5, #1
 800faf0:	429e      	cmp	r6, r3
 800faf2:	bfc8      	it	gt
 800faf4:	3401      	addgt	r4, #1
 800faf6:	e7f4      	b.n	800fae2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800faf8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 800fafc:	1b49      	subs	r1, r1, r5
 800fafe:	1b1b      	subs	r3, r3, r4
 800fb00:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 800fb04:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800fb08:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800fb0c:	4293      	cmp	r3, r2
 800fb0e:	dd03      	ble.n	800fb18 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800fb10:	3b01      	subs	r3, #1
 800fb12:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800fb16:	e7f7      	b.n	800fb08 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800fb18:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800fb1c <_ZN8touchgfx11Application15handleTickEventEv>:
 800fb1c:	b570      	push	{r4, r5, r6, lr}
 800fb1e:	4d16      	ldr	r5, [pc, #88]	; (800fb78 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800fb20:	4604      	mov	r4, r0
 800fb22:	6828      	ldr	r0, [r5, #0]
 800fb24:	b140      	cbz	r0, 800fb38 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fb26:	7a03      	ldrb	r3, [r0, #8]
 800fb28:	b933      	cbnz	r3, 800fb38 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fb2a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800fb2e:	6803      	ldr	r3, [r0, #0]
 800fb30:	689b      	ldr	r3, [r3, #8]
 800fb32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb36:	4718      	bx	r3
 800fb38:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 800fb3c:	4e0f      	ldr	r6, [pc, #60]	; (800fb7c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800fb3e:	b973      	cbnz	r3, 800fb5e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fb40:	b168      	cbz	r0, 800fb5e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fb42:	7a03      	ldrb	r3, [r0, #8]
 800fb44:	b15b      	cbz	r3, 800fb5e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fb46:	6830      	ldr	r0, [r6, #0]
 800fb48:	b110      	cbz	r0, 800fb50 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800fb4a:	6803      	ldr	r3, [r0, #0]
 800fb4c:	691b      	ldr	r3, [r3, #16]
 800fb4e:	4798      	blx	r3
 800fb50:	6828      	ldr	r0, [r5, #0]
 800fb52:	6803      	ldr	r3, [r0, #0]
 800fb54:	68db      	ldr	r3, [r3, #12]
 800fb56:	4798      	blx	r3
 800fb58:	2301      	movs	r3, #1
 800fb5a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800fb5e:	3404      	adds	r4, #4
 800fb60:	4620      	mov	r0, r4
 800fb62:	f7ff ff5f 	bl	800fa24 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800fb66:	4620      	mov	r0, r4
 800fb68:	f7ff ffa0 	bl	800faac <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800fb6c:	6830      	ldr	r0, [r6, #0]
 800fb6e:	b110      	cbz	r0, 800fb76 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800fb70:	6803      	ldr	r3, [r0, #0]
 800fb72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fb74:	e7dd      	b.n	800fb32 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800fb76:	bd70      	pop	{r4, r5, r6, pc}
 800fb78:	20015004 	.word	0x20015004
 800fb7c:	20015000 	.word	0x20015000

0800fb80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800fb80:	4603      	mov	r3, r0
 800fb82:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800fb86:	2200      	movs	r2, #0
 800fb88:	801a      	strh	r2, [r3, #0]
 800fb8a:	805a      	strh	r2, [r3, #2]
 800fb8c:	809a      	strh	r2, [r3, #4]
 800fb8e:	80da      	strh	r2, [r3, #6]
 800fb90:	3308      	adds	r3, #8
 800fb92:	428b      	cmp	r3, r1
 800fb94:	d1f8      	bne.n	800fb88 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800fb96:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800fb9a:	4770      	bx	lr

0800fb9c <_ZN8touchgfx11ApplicationC1Ev>:
 800fb9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb9e:	4606      	mov	r6, r0
 800fba0:	4b1c      	ldr	r3, [pc, #112]	; (800fc14 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800fba2:	f846 3b04 	str.w	r3, [r6], #4
 800fba6:	4604      	mov	r4, r0
 800fba8:	2500      	movs	r5, #0
 800fbaa:	22a8      	movs	r2, #168	; 0xa8
 800fbac:	2100      	movs	r1, #0
 800fbae:	4630      	mov	r0, r6
 800fbb0:	f010 fd86 	bl	80206c0 <memset>
 800fbb4:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 800fbb8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800fbbc:	f7ff ffe0 	bl	800fb80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fbc0:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800fbc4:	f7ff ffdc 	bl	800fb80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fbc8:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800fbcc:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800fbd0:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 800fbd4:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 800fbd8:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 800fbdc:	490e      	ldr	r1, [pc, #56]	; (800fc18 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800fbde:	480f      	ldr	r0, [pc, #60]	; (800fc1c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800fbe0:	4f0f      	ldr	r7, [pc, #60]	; (800fc20 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800fbe2:	f010 faf9 	bl	80201d8 <CRC_Lock>
 800fbe6:	4b0f      	ldr	r3, [pc, #60]	; (800fc24 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800fbe8:	b158      	cbz	r0, 800fc02 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800fbea:	801d      	strh	r5, [r3, #0]
 800fbec:	4a0e      	ldr	r2, [pc, #56]	; (800fc28 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800fbee:	2300      	movs	r3, #0
 800fbf0:	6013      	str	r3, [r2, #0]
 800fbf2:	4a0e      	ldr	r2, [pc, #56]	; (800fc2c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800fbf4:	603b      	str	r3, [r7, #0]
 800fbf6:	4630      	mov	r0, r6
 800fbf8:	6013      	str	r3, [r2, #0]
 800fbfa:	f7ff ff32 	bl	800fa62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800fbfe:	4620      	mov	r0, r4
 800fc00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fc02:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800fc06:	2002      	movs	r0, #2
 800fc08:	801a      	strh	r2, [r3, #0]
 800fc0a:	6038      	str	r0, [r7, #0]
 800fc0c:	f001 fa7c 	bl	8011108 <_ZN8touchgfx6Screen4drawEv>
 800fc10:	e7ec      	b.n	800fbec <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800fc12:	bf00      	nop
 800fc14:	08023398 	.word	0x08023398
 800fc18:	b5e8b5cd 	.word	0xb5e8b5cd
 800fc1c:	f407a5c2 	.word	0xf407a5c2
 800fc20:	20015000 	.word	0x20015000
 800fc24:	20000084 	.word	0x20000084
 800fc28:	20015010 	.word	0x20015010
 800fc2c:	20015004 	.word	0x20015004

0800fc30 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800fc30:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800fc34:	3b01      	subs	r3, #1
 800fc36:	b29b      	uxth	r3, r3
 800fc38:	428b      	cmp	r3, r1
 800fc3a:	b510      	push	{r4, lr}
 800fc3c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800fc40:	d908      	bls.n	800fc54 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800fc42:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800fc46:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800fc4a:	681a      	ldr	r2, [r3, #0]
 800fc4c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800fc50:	685a      	ldr	r2, [r3, #4]
 800fc52:	6062      	str	r2, [r4, #4]
 800fc54:	bd10      	pop	{r4, pc}
	...

0800fc58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800fc58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc5c:	4b8f      	ldr	r3, [pc, #572]	; (800fe9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800fc5e:	b08f      	sub	sp, #60	; 0x3c
 800fc60:	ac0a      	add	r4, sp, #40	; 0x28
 800fc62:	e884 0006 	stmia.w	r4, {r1, r2}
 800fc66:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc6a:	4b8d      	ldr	r3, [pc, #564]	; (800fea0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800fc6c:	4683      	mov	fp, r0
 800fc6e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fc72:	4620      	mov	r0, r4
 800fc74:	f7ff fe13 	bl	800f89e <_ZN8touchgfx4Rect10restrictToEss>
 800fc78:	4620      	mov	r0, r4
 800fc7a:	f7fc f904 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fc7e:	2800      	cmp	r0, #0
 800fc80:	d16a      	bne.n	800fd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800fc82:	9403      	str	r4, [sp, #12]
 800fc84:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 800fc88:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800fc8c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800fc90:	35a4      	adds	r5, #164	; 0xa4
 800fc92:	9301      	str	r3, [sp, #4]
 800fc94:	b15c      	cbz	r4, 800fcae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800fc96:	4629      	mov	r1, r5
 800fc98:	9803      	ldr	r0, [sp, #12]
 800fc9a:	f7ff fe51 	bl	800f940 <_ZNK8touchgfx4Rect8includesERKS0_>
 800fc9e:	3c01      	subs	r4, #1
 800fca0:	b118      	cbz	r0, 800fcaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800fca2:	b2a1      	uxth	r1, r4
 800fca4:	9801      	ldr	r0, [sp, #4]
 800fca6:	f7ff ffc3 	bl	800fc30 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fcaa:	3d08      	subs	r5, #8
 800fcac:	e7f2      	b.n	800fc94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800fcae:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 800fcb2:	f8cd a010 	str.w	sl, [sp, #16]
 800fcb6:	f10a 33ff 	add.w	r3, sl, #4294967295
 800fcba:	9302      	str	r3, [sp, #8]
 800fcbc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800fcc0:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 800fcc4:	9306      	str	r3, [sp, #24]
 800fcc6:	445c      	add	r4, fp
 800fcc8:	2500      	movs	r5, #0
 800fcca:	4626      	mov	r6, r4
 800fccc:	f8cd a014 	str.w	sl, [sp, #20]
 800fcd0:	462f      	mov	r7, r5
 800fcd2:	9b05      	ldr	r3, [sp, #20]
 800fcd4:	2b00      	cmp	r3, #0
 800fcd6:	d073      	beq.n	800fdc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800fcd8:	9903      	ldr	r1, [sp, #12]
 800fcda:	4630      	mov	r0, r6
 800fcdc:	f7ff fdbd 	bl	800f85a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fce0:	b350      	cbz	r0, 800fd38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800fce2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800fce6:	f9b6 c000 	ldrsh.w	ip, [r6]
 800fcea:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 800fcee:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800fcf2:	45e6      	cmp	lr, ip
 800fcf4:	db33      	blt.n	800fd5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800fcf6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800fcfa:	88b3      	ldrh	r3, [r6, #4]
 800fcfc:	4472      	add	r2, lr
 800fcfe:	4463      	add	r3, ip
 800fd00:	b212      	sxth	r2, r2
 800fd02:	b21b      	sxth	r3, r3
 800fd04:	429a      	cmp	r2, r3
 800fd06:	dc2a      	bgt.n	800fd5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800fd08:	88f3      	ldrh	r3, [r6, #6]
 800fd0a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800fd0e:	fa1f f289 	uxth.w	r2, r9
 800fd12:	4413      	add	r3, r2
 800fd14:	b29b      	uxth	r3, r3
 800fd16:	45c8      	cmp	r8, r9
 800fd18:	fa1f fc88 	uxth.w	ip, r8
 800fd1c:	fa0f fe83 	sxth.w	lr, r3
 800fd20:	db0f      	blt.n	800fd42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800fd22:	eba3 030c 	sub.w	r3, r3, ip
 800fd26:	1ac9      	subs	r1, r1, r3
 800fd28:	b209      	sxth	r1, r1
 800fd2a:	2900      	cmp	r1, #0
 800fd2c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800fd30:	dd12      	ble.n	800fd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800fd32:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 800fd36:	4605      	mov	r5, r0
 800fd38:	9b05      	ldr	r3, [sp, #20]
 800fd3a:	3b01      	subs	r3, #1
 800fd3c:	9305      	str	r3, [sp, #20]
 800fd3e:	3e08      	subs	r6, #8
 800fd40:	e7c7      	b.n	800fcd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800fd42:	4461      	add	r1, ip
 800fd44:	b209      	sxth	r1, r1
 800fd46:	4571      	cmp	r1, lr
 800fd48:	dc38      	bgt.n	800fdbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fd4a:	eba2 020c 	sub.w	r2, r2, ip
 800fd4e:	b212      	sxth	r2, r2
 800fd50:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800fd54:	2a00      	cmp	r2, #0
 800fd56:	dcee      	bgt.n	800fd36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800fd58:	b00f      	add	sp, #60	; 0x3c
 800fd5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd5e:	45c8      	cmp	r8, r9
 800fd60:	db2c      	blt.n	800fdbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fd62:	88f3      	ldrh	r3, [r6, #6]
 800fd64:	4499      	add	r9, r3
 800fd66:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800fd6a:	4498      	add	r8, r3
 800fd6c:	fa0f f989 	sxth.w	r9, r9
 800fd70:	fa0f f888 	sxth.w	r8, r8
 800fd74:	45c1      	cmp	r9, r8
 800fd76:	db21      	blt.n	800fdbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fd78:	88b3      	ldrh	r3, [r6, #4]
 800fd7a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800fd7e:	fa1f f28c 	uxth.w	r2, ip
 800fd82:	4413      	add	r3, r2
 800fd84:	b29b      	uxth	r3, r3
 800fd86:	45e6      	cmp	lr, ip
 800fd88:	fa1f f88e 	uxth.w	r8, lr
 800fd8c:	fa0f f983 	sxth.w	r9, r3
 800fd90:	db0a      	blt.n	800fda8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800fd92:	eba3 0308 	sub.w	r3, r3, r8
 800fd96:	1ac9      	subs	r1, r1, r3
 800fd98:	b209      	sxth	r1, r1
 800fd9a:	2900      	cmp	r1, #0
 800fd9c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800fda0:	ddda      	ble.n	800fd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800fda2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800fda6:	e7c6      	b.n	800fd36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800fda8:	4441      	add	r1, r8
 800fdaa:	b209      	sxth	r1, r1
 800fdac:	4549      	cmp	r1, r9
 800fdae:	dc05      	bgt.n	800fdbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800fdb0:	eba2 0208 	sub.w	r2, r2, r8
 800fdb4:	b212      	sxth	r2, r2
 800fdb6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800fdba:	e7cb      	b.n	800fd54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800fdbc:	4607      	mov	r7, r0
 800fdbe:	e7bb      	b.n	800fd38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800fdc0:	2d00      	cmp	r5, #0
 800fdc2:	d181      	bne.n	800fcc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800fdc4:	2f00      	cmp	r7, #0
 800fdc6:	f000 81dd 	beq.w	8010184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800fdca:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800fdce:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 800fdd2:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 800fdd6:	b2b3      	uxth	r3, r6
 800fdd8:	9305      	str	r3, [sp, #20]
 800fdda:	9a05      	ldr	r2, [sp, #20]
 800fddc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800fde0:	4413      	add	r3, r2
 800fde2:	b2ba      	uxth	r2, r7
 800fde4:	4492      	add	sl, r2
 800fde6:	b29b      	uxth	r3, r3
 800fde8:	fa1f fa8a 	uxth.w	sl, sl
 800fdec:	fa0f f883 	sxth.w	r8, r3
 800fdf0:	fa0f f98a 	sxth.w	r9, sl
 800fdf4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800fdf8:	9b04      	ldr	r3, [sp, #16]
 800fdfa:	2b00      	cmp	r3, #0
 800fdfc:	d052      	beq.n	800fea4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800fdfe:	9903      	ldr	r1, [sp, #12]
 800fe00:	4620      	mov	r0, r4
 800fe02:	f7ff fd2a 	bl	800f85a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fe06:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800fe0a:	b1c0      	cbz	r0, 800fe3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fe0c:	f9b4 e000 	ldrsh.w	lr, [r4]
 800fe10:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fe14:	4576      	cmp	r6, lr
 800fe16:	dc22      	bgt.n	800fe5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800fe18:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800fe1c:	44f4      	add	ip, lr
 800fe1e:	fa0f fc8c 	sxth.w	ip, ip
 800fe22:	45e0      	cmp	r8, ip
 800fe24:	db1b      	blt.n	800fe5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800fe26:	428f      	cmp	r7, r1
 800fe28:	fa1f fc81 	uxth.w	ip, r1
 800fe2c:	88e1      	ldrh	r1, [r4, #6]
 800fe2e:	dc0d      	bgt.n	800fe4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800fe30:	ebaa 0c0c 	sub.w	ip, sl, ip
 800fe34:	eba1 010c 	sub.w	r1, r1, ip
 800fe38:	f8a4 9002 	strh.w	r9, [r4, #2]
 800fe3c:	80e1      	strh	r1, [r4, #6]
 800fe3e:	4628      	mov	r0, r5
 800fe40:	9904      	ldr	r1, [sp, #16]
 800fe42:	3901      	subs	r1, #1
 800fe44:	9104      	str	r1, [sp, #16]
 800fe46:	3c08      	subs	r4, #8
 800fe48:	4605      	mov	r5, r0
 800fe4a:	e7d3      	b.n	800fdf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 800fe4c:	4461      	add	r1, ip
 800fe4e:	b209      	sxth	r1, r1
 800fe50:	4549      	cmp	r1, r9
 800fe52:	dcf5      	bgt.n	800fe40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800fe54:	eba2 0c0c 	sub.w	ip, r2, ip
 800fe58:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fe5c:	e7ef      	b.n	800fe3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fe5e:	428f      	cmp	r7, r1
 800fe60:	dcee      	bgt.n	800fe40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800fe62:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800fe66:	4461      	add	r1, ip
 800fe68:	b209      	sxth	r1, r1
 800fe6a:	4589      	cmp	r9, r1
 800fe6c:	dbe8      	blt.n	800fe40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800fe6e:	4576      	cmp	r6, lr
 800fe70:	fa1f fc8e 	uxth.w	ip, lr
 800fe74:	88a1      	ldrh	r1, [r4, #4]
 800fe76:	dc07      	bgt.n	800fe88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800fe78:	eba3 0c0c 	sub.w	ip, r3, ip
 800fe7c:	eba1 010c 	sub.w	r1, r1, ip
 800fe80:	f8a4 8000 	strh.w	r8, [r4]
 800fe84:	80a1      	strh	r1, [r4, #4]
 800fe86:	e7da      	b.n	800fe3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fe88:	4461      	add	r1, ip
 800fe8a:	b209      	sxth	r1, r1
 800fe8c:	4588      	cmp	r8, r1
 800fe8e:	dbd7      	blt.n	800fe40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 800fe90:	9905      	ldr	r1, [sp, #20]
 800fe92:	eba1 0c0c 	sub.w	ip, r1, ip
 800fe96:	f8a4 c004 	strh.w	ip, [r4, #4]
 800fe9a:	e7d0      	b.n	800fe3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800fe9c:	20014fba 	.word	0x20014fba
 800fea0:	20014fb8 	.word	0x20014fb8
 800fea4:	2d00      	cmp	r5, #0
 800fea6:	f000 816d 	beq.w	8010184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800feaa:	9b06      	ldr	r3, [sp, #24]
 800feac:	445b      	add	r3, fp
 800feae:	461c      	mov	r4, r3
 800feb0:	9b02      	ldr	r3, [sp, #8]
 800feb2:	3301      	adds	r3, #1
 800feb4:	f000 8166 	beq.w	8010184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800feb8:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 800febc:	4629      	mov	r1, r5
 800febe:	9803      	ldr	r0, [sp, #12]
 800fec0:	f7ff fd3e 	bl	800f940 <_ZNK8touchgfx4Rect8includesERKS0_>
 800fec4:	b120      	cbz	r0, 800fed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800fec6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800feca:	9801      	ldr	r0, [sp, #4]
 800fecc:	f7ff feb0 	bl	800fc30 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fed0:	9903      	ldr	r1, [sp, #12]
 800fed2:	4628      	mov	r0, r5
 800fed4:	f7ff fcc1 	bl	800f85a <_ZNK8touchgfx4Rect9intersectERKS0_>
 800fed8:	2800      	cmp	r0, #0
 800feda:	f000 809c 	beq.w	8010016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800fede:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 800fee2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800fee6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800feea:	9309      	str	r3, [sp, #36]	; 0x24
 800feec:	fa1f f189 	uxth.w	r1, r9
 800fef0:	eb01 0c03 	add.w	ip, r1, r3
 800fef4:	fa1f fa8c 	uxth.w	sl, ip
 800fef8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 800fefc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 800ff00:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 800ff04:	b283      	uxth	r3, r0
 800ff06:	eb03 050c 	add.w	r5, r3, ip
 800ff0a:	b2ad      	uxth	r5, r5
 800ff0c:	9505      	str	r5, [sp, #20]
 800ff0e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800ff12:	9504      	str	r5, [sp, #16]
 800ff14:	4548      	cmp	r0, r9
 800ff16:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 800ff1a:	f340 8099 	ble.w	8010050 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800ff1e:	1a5b      	subs	r3, r3, r1
 800ff20:	b29b      	uxth	r3, r3
 800ff22:	4596      	cmp	lr, r2
 800ff24:	fa0f f08a 	sxth.w	r0, sl
 800ff28:	b21e      	sxth	r6, r3
 800ff2a:	dd2e      	ble.n	800ff8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800ff2c:	9f02      	ldr	r7, [sp, #8]
 800ff2e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 800ff32:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800ff36:	9f04      	ldr	r7, [sp, #16]
 800ff38:	1a3f      	subs	r7, r7, r0
 800ff3a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 800ff3e:	fa1f fe8e 	uxth.w	lr, lr
 800ff42:	b292      	uxth	r2, r2
 800ff44:	ebae 0102 	sub.w	r1, lr, r2
 800ff48:	44a6      	add	lr, r4
 800ff4a:	4402      	add	r2, r0
 800ff4c:	b289      	uxth	r1, r1
 800ff4e:	fa0f fe8e 	sxth.w	lr, lr
 800ff52:	b212      	sxth	r2, r2
 800ff54:	b20d      	sxth	r5, r1
 800ff56:	ebae 0202 	sub.w	r2, lr, r2
 800ff5a:	436f      	muls	r7, r5
 800ff5c:	4372      	muls	r2, r6
 800ff5e:	4297      	cmp	r7, r2
 800ff60:	db09      	blt.n	800ff76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800ff62:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 800ff66:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 800ff6a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800ff6e:	449c      	add	ip, r3
 800ff70:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800ff74:	e686      	b.n	800fc84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ff76:	4421      	add	r1, r4
 800ff78:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800ff7c:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 800ff80:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800ff84:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800ff88:	e67c      	b.n	800fc84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ff8a:	9f04      	ldr	r7, [sp, #16]
 800ff8c:	42b8      	cmp	r0, r7
 800ff8e:	da27      	bge.n	800ffe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800ff90:	9902      	ldr	r1, [sp, #8]
 800ff92:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 800ff96:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800ff9a:	eb05 010e 	add.w	r1, r5, lr
 800ff9e:	fa1f f881 	uxth.w	r8, r1
 800ffa2:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 800ffa6:	4411      	add	r1, r2
 800ffa8:	eba1 0108 	sub.w	r1, r1, r8
 800ffac:	b289      	uxth	r1, r1
 800ffae:	fa0f f988 	sxth.w	r9, r8
 800ffb2:	eba2 020e 	sub.w	r2, r2, lr
 800ffb6:	fa0f f881 	sxth.w	r8, r1
 800ffba:	1a3f      	subs	r7, r7, r0
 800ffbc:	4372      	muls	r2, r6
 800ffbe:	fb08 f707 	mul.w	r7, r8, r7
 800ffc2:	42ba      	cmp	r2, r7
 800ffc4:	dc06      	bgt.n	800ffd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800ffc6:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 800ffca:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 800ffce:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 800ffd2:	e7ca      	b.n	800ff6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800ffd4:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 800ffd8:	4429      	add	r1, r5
 800ffda:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800ffde:	e651      	b.n	800fc84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ffe0:	9805      	ldr	r0, [sp, #20]
 800ffe2:	ebaa 0000 	sub.w	r0, sl, r0
 800ffe6:	b280      	uxth	r0, r0
 800ffe8:	2d06      	cmp	r5, #6
 800ffea:	fa0f fe80 	sxth.w	lr, r0
 800ffee:	d817      	bhi.n	8010020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800fff0:	9b04      	ldr	r3, [sp, #16]
 800fff2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800fff6:	1c6b      	adds	r3, r5, #1
 800fff8:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 800fffc:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8010000:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8010004:	9b01      	ldr	r3, [sp, #4]
 8010006:	9801      	ldr	r0, [sp, #4]
 8010008:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801000c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010010:	805a      	strh	r2, [r3, #2]
 8010012:	809e      	strh	r6, [r3, #4]
 8010014:	80d9      	strh	r1, [r3, #6]
 8010016:	9b02      	ldr	r3, [sp, #8]
 8010018:	3b01      	subs	r3, #1
 801001a:	9302      	str	r3, [sp, #8]
 801001c:	3c08      	subs	r4, #8
 801001e:	e747      	b.n	800feb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8010020:	9a02      	ldr	r2, [sp, #8]
 8010022:	45b6      	cmp	lr, r6
 8010024:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010028:	db0d      	blt.n	8010046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801002a:	449c      	add	ip, r3
 801002c:	fa1f fc8c 	uxth.w	ip, ip
 8010030:	445a      	add	r2, fp
 8010032:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8010036:	448c      	add	ip, r1
 8010038:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801003c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8010040:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8010044:	e61e      	b.n	800fc84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010046:	445a      	add	r2, fp
 8010048:	4484      	add	ip, r0
 801004a:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801004e:	e78f      	b.n	800ff70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010050:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8010054:	fa1f f18e 	uxth.w	r1, lr
 8010058:	eb01 0806 	add.w	r8, r1, r6
 801005c:	b293      	uxth	r3, r2
 801005e:	fa1f f888 	uxth.w	r8, r8
 8010062:	9306      	str	r3, [sp, #24]
 8010064:	fa0f f388 	sxth.w	r3, r8
 8010068:	9307      	str	r3, [sp, #28]
 801006a:	9f06      	ldr	r7, [sp, #24]
 801006c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8010070:	443b      	add	r3, r7
 8010072:	b29b      	uxth	r3, r3
 8010074:	4596      	cmp	lr, r2
 8010076:	9308      	str	r3, [sp, #32]
 8010078:	da24      	bge.n	80100c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801007a:	9905      	ldr	r1, [sp, #20]
 801007c:	eba3 0308 	sub.w	r3, r3, r8
 8010080:	ebaa 0401 	sub.w	r4, sl, r1
 8010084:	b2a4      	uxth	r4, r4
 8010086:	b29b      	uxth	r3, r3
 8010088:	b225      	sxth	r5, r4
 801008a:	b219      	sxth	r1, r3
 801008c:	eba2 020e 	sub.w	r2, r2, lr
 8010090:	eba9 0000 	sub.w	r0, r9, r0
 8010094:	436a      	muls	r2, r5
 8010096:	4348      	muls	r0, r1
 8010098:	4282      	cmp	r2, r0
 801009a:	9a02      	ldr	r2, [sp, #8]
 801009c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80100a0:	445a      	add	r2, fp
 80100a2:	dc06      	bgt.n	80100b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80100a4:	9b07      	ldr	r3, [sp, #28]
 80100a6:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80100aa:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80100ae:	44a4      	add	ip, r4
 80100b0:	e75e      	b.n	800ff70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80100b2:	9904      	ldr	r1, [sp, #16]
 80100b4:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80100b8:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80100bc:	4433      	add	r3, r6
 80100be:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80100c2:	e5df      	b.n	800fc84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80100c4:	9f06      	ldr	r7, [sp, #24]
 80100c6:	9b04      	ldr	r3, [sp, #16]
 80100c8:	1bc9      	subs	r1, r1, r7
 80100ca:	fa0f f78a 	sxth.w	r7, sl
 80100ce:	b289      	uxth	r1, r1
 80100d0:	429f      	cmp	r7, r3
 80100d2:	fa0f fe81 	sxth.w	lr, r1
 80100d6:	dd23      	ble.n	8010120 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80100d8:	9a05      	ldr	r2, [sp, #20]
 80100da:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80100de:	9d07      	ldr	r5, [sp, #28]
 80100e0:	ebaa 0202 	sub.w	r2, sl, r2
 80100e4:	b292      	uxth	r2, r2
 80100e6:	eba5 0a03 	sub.w	sl, r5, r3
 80100ea:	b214      	sxth	r4, r2
 80100ec:	eba9 0000 	sub.w	r0, r9, r0
 80100f0:	9b02      	ldr	r3, [sp, #8]
 80100f2:	fb0e f000 	mul.w	r0, lr, r0
 80100f6:	fb04 fa0a 	mul.w	sl, r4, sl
 80100fa:	00db      	lsls	r3, r3, #3
 80100fc:	4550      	cmp	r0, sl
 80100fe:	445b      	add	r3, fp
 8010100:	db03      	blt.n	801010a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8010102:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8010106:	4494      	add	ip, r2
 8010108:	e732      	b.n	800ff70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801010a:	9a04      	ldr	r2, [sp, #16]
 801010c:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8010110:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8010114:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8010118:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801011c:	4431      	add	r1, r6
 801011e:	e75c      	b.n	800ffda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8010120:	9b08      	ldr	r3, [sp, #32]
 8010122:	eba3 0308 	sub.w	r3, r3, r8
 8010126:	b29b      	uxth	r3, r3
 8010128:	2d06      	cmp	r5, #6
 801012a:	b218      	sxth	r0, r3
 801012c:	d813      	bhi.n	8010156 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801012e:	9b07      	ldr	r3, [sp, #28]
 8010130:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8010134:	1c6b      	adds	r3, r5, #1
 8010136:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 801013a:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801013e:	9b01      	ldr	r3, [sp, #4]
 8010140:	9901      	ldr	r1, [sp, #4]
 8010142:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010146:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801014a:	805a      	strh	r2, [r3, #2]
 801014c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801014e:	809a      	strh	r2, [r3, #4]
 8010150:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010154:	e75f      	b.n	8010016 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010156:	9c02      	ldr	r4, [sp, #8]
 8010158:	4570      	cmp	r0, lr
 801015a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801015e:	db0d      	blt.n	801017c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8010160:	4431      	add	r1, r6
 8010162:	9b06      	ldr	r3, [sp, #24]
 8010164:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8010168:	b289      	uxth	r1, r1
 801016a:	445c      	add	r4, fp
 801016c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010170:	4419      	add	r1, r3
 8010172:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8010176:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 801017a:	e583      	b.n	800fc84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801017c:	445c      	add	r4, fp
 801017e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8010182:	e79b      	b.n	80100bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8010184:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8010188:	1e65      	subs	r5, r4, #1
 801018a:	b2ad      	uxth	r5, r5
 801018c:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8010190:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8010194:	42b5      	cmp	r5, r6
 8010196:	d044      	beq.n	8010222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8010198:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801019c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80101a0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80101a4:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80101a8:	4282      	cmp	r2, r0
 80101aa:	d11f      	bne.n	80101ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80101ac:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80101b0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80101b4:	459c      	cmp	ip, r3
 80101b6:	d119      	bne.n	80101ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80101b8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80101bc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80101c0:	19d8      	adds	r0, r3, r7
 80101c2:	b200      	sxth	r0, r0
 80101c4:	4288      	cmp	r0, r1
 80101c6:	d109      	bne.n	80101dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80101c8:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80101cc:	4413      	add	r3, r2
 80101ce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80101d2:	4629      	mov	r1, r5
 80101d4:	9801      	ldr	r0, [sp, #4]
 80101d6:	f7ff fd2b 	bl	800fc30 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80101da:	e003      	b.n	80101e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80101dc:	4411      	add	r1, r2
 80101de:	b209      	sxth	r1, r1
 80101e0:	42b9      	cmp	r1, r7
 80101e2:	d0f3      	beq.n	80101cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80101e4:	3d01      	subs	r5, #1
 80101e6:	b2ad      	uxth	r5, r5
 80101e8:	3c08      	subs	r4, #8
 80101ea:	e7d3      	b.n	8010194 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80101ec:	42b9      	cmp	r1, r7
 80101ee:	d1f9      	bne.n	80101e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80101f0:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80101f4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80101f8:	4299      	cmp	r1, r3
 80101fa:	d1f3      	bne.n	80101e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80101fc:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8010200:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010204:	181f      	adds	r7, r3, r0
 8010206:	b23f      	sxth	r7, r7
 8010208:	42ba      	cmp	r2, r7
 801020a:	d105      	bne.n	8010218 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 801020c:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8010210:	440b      	add	r3, r1
 8010212:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010216:	e7dc      	b.n	80101d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8010218:	440a      	add	r2, r1
 801021a:	b212      	sxth	r2, r2
 801021c:	4290      	cmp	r0, r2
 801021e:	d1e1      	bne.n	80101e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010220:	e7f6      	b.n	8010210 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8010222:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8010226:	2e07      	cmp	r6, #7
 8010228:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801022c:	d812      	bhi.n	8010254 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801022e:	1c75      	adds	r5, r6, #1
 8010230:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8010234:	9d01      	ldr	r5, [sp, #4]
 8010236:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801023a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801023e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8010242:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8010246:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801024a:	442c      	add	r4, r5
 801024c:	8061      	strh	r1, [r4, #2]
 801024e:	80a2      	strh	r2, [r4, #4]
 8010250:	80e3      	strh	r3, [r4, #6]
 8010252:	e581      	b.n	800fd58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010254:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8010258:	3e01      	subs	r6, #1
 801025a:	445c      	add	r4, fp
 801025c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8010260:	f04f 37ff 	mov.w	r7, #4294967295
 8010264:	2500      	movs	r5, #0
 8010266:	9305      	str	r3, [sp, #20]
 8010268:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801026c:	9302      	str	r3, [sp, #8]
 801026e:	1e72      	subs	r2, r6, #1
 8010270:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8010274:	9304      	str	r3, [sp, #16]
 8010276:	4691      	mov	r9, r2
 8010278:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 801027c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8010280:	bf14      	ite	ne
 8010282:	9905      	ldrne	r1, [sp, #20]
 8010284:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010288:	6818      	ldr	r0, [r3, #0]
 801028a:	9207      	str	r2, [sp, #28]
 801028c:	bf18      	it	ne
 801028e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8010292:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010296:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801029a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801029e:	9306      	str	r3, [sp, #24]
 80102a0:	fb18 f801 	smulbb	r8, r8, r1
 80102a4:	6859      	ldr	r1, [r3, #4]
 80102a6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80102aa:	4671      	mov	r1, lr
 80102ac:	a80c      	add	r0, sp, #48	; 0x30
 80102ae:	f7ff fb6d 	bl	800f98c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80102b2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80102b6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80102ba:	9b04      	ldr	r3, [sp, #16]
 80102bc:	9a02      	ldr	r2, [sp, #8]
 80102be:	fb10 f001 	smulbb	r0, r0, r1
 80102c2:	fb02 8803 	mla	r8, r2, r3, r8
 80102c6:	eba0 0108 	sub.w	r1, r0, r8
 80102ca:	f04f 0c08 	mov.w	ip, #8
 80102ce:	fb90 f0fc 	sdiv	r0, r0, ip
 80102d2:	4288      	cmp	r0, r1
 80102d4:	dc20      	bgt.n	8010318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80102d6:	4551      	cmp	r1, sl
 80102d8:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80102dc:	da03      	bge.n	80102e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80102de:	b1d9      	cbz	r1, 8010318 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80102e0:	468a      	mov	sl, r1
 80102e2:	464f      	mov	r7, r9
 80102e4:	4635      	mov	r5, r6
 80102e6:	f109 39ff 	add.w	r9, r9, #4294967295
 80102ea:	f119 0f02 	cmn.w	r9, #2
 80102ee:	d1c5      	bne.n	801027c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80102f0:	4616      	mov	r6, r2
 80102f2:	3201      	adds	r2, #1
 80102f4:	f1a4 0408 	sub.w	r4, r4, #8
 80102f8:	d1b6      	bne.n	8010268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80102fa:	9b01      	ldr	r3, [sp, #4]
 80102fc:	b2ac      	uxth	r4, r5
 80102fe:	00ed      	lsls	r5, r5, #3
 8010300:	1958      	adds	r0, r3, r5
 8010302:	1c7b      	adds	r3, r7, #1
 8010304:	d10b      	bne.n	801031e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8010306:	4601      	mov	r1, r0
 8010308:	9803      	ldr	r0, [sp, #12]
 801030a:	f7ff fb3f 	bl	800f98c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801030e:	4621      	mov	r1, r4
 8010310:	9801      	ldr	r0, [sp, #4]
 8010312:	f7ff fc8d 	bl	800fc30 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010316:	e4b5      	b.n	800fc84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010318:	464f      	mov	r7, r9
 801031a:	4635      	mov	r5, r6
 801031c:	e7ed      	b.n	80102fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801031e:	9b01      	ldr	r3, [sp, #4]
 8010320:	00ff      	lsls	r7, r7, #3
 8010322:	19d9      	adds	r1, r3, r7
 8010324:	f7ff fb32 	bl	800f98c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010328:	9b03      	ldr	r3, [sp, #12]
 801032a:	cb03      	ldmia	r3!, {r0, r1}
 801032c:	445f      	add	r7, fp
 801032e:	445d      	add	r5, fp
 8010330:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8010334:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8010338:	f855 0fac 	ldr.w	r0, [r5, #172]!
 801033c:	9b03      	ldr	r3, [sp, #12]
 801033e:	6869      	ldr	r1, [r5, #4]
 8010340:	c303      	stmia	r3!, {r0, r1}
 8010342:	e7e4      	b.n	801030e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08010344 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010348:	f500 7698 	add.w	r6, r0, #304	; 0x130
 801034c:	b09b      	sub	sp, #108	; 0x6c
 801034e:	4604      	mov	r4, r0
 8010350:	4630      	mov	r0, r6
 8010352:	f7fb fd98 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010356:	4605      	mov	r5, r0
 8010358:	b948      	cbnz	r0, 801036e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801035a:	6823      	ldr	r3, [r4, #0]
 801035c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010360:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010362:	4620      	mov	r0, r4
 8010364:	4798      	blx	r3
 8010366:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801036a:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801036e:	4bc6      	ldr	r3, [pc, #792]	; (8010688 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8010370:	681b      	ldr	r3, [r3, #0]
 8010372:	2b00      	cmp	r3, #0
 8010374:	d03f      	beq.n	80103f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010376:	4dc5      	ldr	r5, [pc, #788]	; (801068c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8010378:	4628      	mov	r0, r5
 801037a:	f7fb fd84 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 801037e:	4606      	mov	r6, r0
 8010380:	2800      	cmp	r0, #0
 8010382:	d138      	bne.n	80103f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010384:	4628      	mov	r0, r5
 8010386:	f7ff f979 	bl	800f67c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801038a:	6823      	ldr	r3, [r4, #0]
 801038c:	6829      	ldr	r1, [r5, #0]
 801038e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010390:	686a      	ldr	r2, [r5, #4]
 8010392:	4620      	mov	r0, r4
 8010394:	4798      	blx	r3
 8010396:	802e      	strh	r6, [r5, #0]
 8010398:	806e      	strh	r6, [r5, #2]
 801039a:	80ae      	strh	r6, [r5, #4]
 801039c:	80ee      	strh	r6, [r5, #6]
 801039e:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80103a2:	4dbb      	ldr	r5, [pc, #748]	; (8010690 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80103a4:	4640      	mov	r0, r8
 80103a6:	f7ff fbeb 	bl	800fb80 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80103aa:	882e      	ldrh	r6, [r5, #0]
 80103ac:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80103b0:	4633      	mov	r3, r6
 80103b2:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80103b6:	42bb      	cmp	r3, r7
 80103b8:	d224      	bcs.n	8010404 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80103ba:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80103be:	2907      	cmp	r1, #7
 80103c0:	d816      	bhi.n	80103f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80103c2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80103c6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80103ca:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80103ce:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80103d2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80103d6:	1c4a      	adds	r2, r1, #1
 80103d8:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80103dc:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80103e0:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80103e4:	f8a2 a002 	strh.w	sl, [r2, #2]
 80103e8:	f8a2 e004 	strh.w	lr, [r2, #4]
 80103ec:	f8a2 c006 	strh.w	ip, [r2, #6]
 80103f0:	3301      	adds	r3, #1
 80103f2:	b29b      	uxth	r3, r3
 80103f4:	e7df      	b.n	80103b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80103f6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80103fa:	2b00      	cmp	r3, #0
 80103fc:	d1cf      	bne.n	801039e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80103fe:	b01b      	add	sp, #108	; 0x6c
 8010400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010404:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8010408:	42b3      	cmp	r3, r6
 801040a:	d90c      	bls.n	8010426 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 801040c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8010410:	6822      	ldr	r2, [r4, #0]
 8010412:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8010416:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8010418:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 801041c:	4620      	mov	r0, r4
 801041e:	3601      	adds	r6, #1
 8010420:	47b8      	blx	r7
 8010422:	b2b6      	uxth	r6, r6
 8010424:	e7ee      	b.n	8010404 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8010426:	4a9b      	ldr	r2, [pc, #620]	; (8010694 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010428:	6813      	ldr	r3, [r2, #0]
 801042a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801042e:	2b01      	cmp	r3, #1
 8010430:	4691      	mov	r9, r2
 8010432:	f040 80e2 	bne.w	80105fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8010436:	8829      	ldrh	r1, [r5, #0]
 8010438:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801043c:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8010440:	33ae      	adds	r3, #174	; 0xae
 8010442:	2600      	movs	r6, #0
 8010444:	428f      	cmp	r7, r1
 8010446:	f103 0308 	add.w	r3, r3, #8
 801044a:	dd0a      	ble.n	8010462 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 801044c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8010450:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8010454:	4402      	add	r2, r0
 8010456:	b212      	sxth	r2, r2
 8010458:	4296      	cmp	r6, r2
 801045a:	bfb8      	it	lt
 801045c:	4616      	movlt	r6, r2
 801045e:	3101      	adds	r1, #1
 8010460:	e7f0      	b.n	8010444 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8010462:	4b8d      	ldr	r3, [pc, #564]	; (8010698 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8010464:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8010694 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8010468:	881b      	ldrh	r3, [r3, #0]
 801046a:	2b0f      	cmp	r3, #15
 801046c:	bf88      	it	hi
 801046e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8010472:	f04f 0300 	mov.w	r3, #0
 8010476:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801047a:	bf98      	it	ls
 801047c:	f04f 0b01 	movls.w	fp, #1
 8010480:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8010484:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8010488:	4b82      	ldr	r3, [pc, #520]	; (8010694 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801048a:	4438      	add	r0, r7
 801048c:	b207      	sxth	r7, r0
 801048e:	6818      	ldr	r0, [r3, #0]
 8010490:	42b7      	cmp	r7, r6
 8010492:	6803      	ldr	r3, [r0, #0]
 8010494:	f280 8083 	bge.w	801059e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010498:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801049c:	4798      	blx	r3
 801049e:	eb07 030b 	add.w	r3, r7, fp
 80104a2:	4298      	cmp	r0, r3
 80104a4:	da07      	bge.n	80104b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80104a6:	42b0      	cmp	r0, r6
 80104a8:	da05      	bge.n	80104b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80104aa:	4287      	cmp	r7, r0
 80104ac:	dd6c      	ble.n	8010588 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80104ae:	2f00      	cmp	r7, #0
 80104b0:	dd6a      	ble.n	8010588 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80104b2:	4630      	mov	r0, r6
 80104b4:	e004      	b.n	80104c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80104b6:	4287      	cmp	r7, r0
 80104b8:	dcfb      	bgt.n	80104b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80104ba:	42b0      	cmp	r0, r6
 80104bc:	bfa8      	it	ge
 80104be:	4630      	movge	r0, r6
 80104c0:	4b76      	ldr	r3, [pc, #472]	; (801069c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80104c2:	f8ad 7016 	strh.w	r7, [sp, #22]
 80104c6:	1bc0      	subs	r0, r0, r7
 80104c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80104cc:	882f      	ldrh	r7, [r5, #0]
 80104ce:	f8ad 3018 	strh.w	r3, [sp, #24]
 80104d2:	2200      	movs	r2, #0
 80104d4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80104d8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80104dc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80104e0:	42bb      	cmp	r3, r7
 80104e2:	d9cd      	bls.n	8010480 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80104e4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80104e8:	ab07      	add	r3, sp, #28
 80104ea:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80104ee:	6851      	ldr	r1, [r2, #4]
 80104f0:	c303      	stmia	r3!, {r0, r1}
 80104f2:	a905      	add	r1, sp, #20
 80104f4:	a807      	add	r0, sp, #28
 80104f6:	f7ff f9b0 	bl	800f85a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80104fa:	2800      	cmp	r0, #0
 80104fc:	d04c      	beq.n	8010598 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80104fe:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8010502:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8010506:	f8bd a020 	ldrh.w	sl, [sp, #32]
 801050a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801050e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010512:	9302      	str	r3, [sp, #8]
 8010514:	4686      	mov	lr, r0
 8010516:	4290      	cmp	r0, r2
 8010518:	4450      	add	r0, sl
 801051a:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801051e:	bfb8      	it	lt
 8010520:	4696      	movlt	lr, r2
 8010522:	4452      	add	r2, sl
 8010524:	4299      	cmp	r1, r3
 8010526:	b280      	uxth	r0, r0
 8010528:	b292      	uxth	r2, r2
 801052a:	468c      	mov	ip, r1
 801052c:	fa0f fa82 	sxth.w	sl, r2
 8010530:	bfb8      	it	lt
 8010532:	469c      	movlt	ip, r3
 8010534:	b203      	sxth	r3, r0
 8010536:	4553      	cmp	r3, sl
 8010538:	bfb8      	it	lt
 801053a:	4602      	movlt	r2, r0
 801053c:	eba2 020e 	sub.w	r2, r2, lr
 8010540:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010544:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010548:	9b02      	ldr	r3, [sp, #8]
 801054a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801054e:	4411      	add	r1, r2
 8010550:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010554:	f8ad c01e 	strh.w	ip, [sp, #30]
 8010558:	4413      	add	r3, r2
 801055a:	b289      	uxth	r1, r1
 801055c:	b29b      	uxth	r3, r3
 801055e:	b208      	sxth	r0, r1
 8010560:	b21a      	sxth	r2, r3
 8010562:	4290      	cmp	r0, r2
 8010564:	bfb8      	it	lt
 8010566:	460b      	movlt	r3, r1
 8010568:	eba3 030c 	sub.w	r3, r3, ip
 801056c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010570:	a807      	add	r0, sp, #28
 8010572:	f7fb fc88 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010576:	b920      	cbnz	r0, 8010582 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8010578:	6823      	ldr	r3, [r4, #0]
 801057a:	a907      	add	r1, sp, #28
 801057c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801057e:	4620      	mov	r0, r4
 8010580:	4798      	blx	r3
 8010582:	3701      	adds	r7, #1
 8010584:	b2bf      	uxth	r7, r7
 8010586:	e7a9      	b.n	80104dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8010588:	f8d9 0000 	ldr.w	r0, [r9]
 801058c:	6803      	ldr	r3, [r0, #0]
 801058e:	2101      	movs	r1, #1
 8010590:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8010594:	4798      	blx	r3
 8010596:	e773      	b.n	8010480 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8010598:	e9cd 0007 	strd	r0, r0, [sp, #28]
 801059c:	e7e8      	b.n	8010570 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801059e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80105a0:	4798      	blx	r3
 80105a2:	4b3f      	ldr	r3, [pc, #252]	; (80106a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80105a4:	781b      	ldrb	r3, [r3, #0]
 80105a6:	2b00      	cmp	r3, #0
 80105a8:	f43f af29 	beq.w	80103fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80105ac:	2300      	movs	r3, #0
 80105ae:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80105b2:	882b      	ldrh	r3, [r5, #0]
 80105b4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80105b8:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80105bc:	42ab      	cmp	r3, r5
 80105be:	f4bf af1e 	bcs.w	80103fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80105c2:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80105c6:	2907      	cmp	r1, #7
 80105c8:	d814      	bhi.n	80105f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80105ca:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80105ce:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80105d2:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80105d6:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80105da:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80105de:	1c4a      	adds	r2, r1, #1
 80105e0:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80105e4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80105e8:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80105ec:	f8a2 c002 	strh.w	ip, [r2, #2]
 80105f0:	8097      	strh	r7, [r2, #4]
 80105f2:	80d6      	strh	r6, [r2, #6]
 80105f4:	3301      	adds	r3, #1
 80105f6:	b29b      	uxth	r3, r3
 80105f8:	e7e0      	b.n	80105bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80105fa:	2b02      	cmp	r3, #2
 80105fc:	f040 8133 	bne.w	8010866 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8010600:	4b28      	ldr	r3, [pc, #160]	; (80106a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8010602:	781b      	ldrb	r3, [r3, #0]
 8010604:	2b01      	cmp	r3, #1
 8010606:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 801060a:	f000 8098 	beq.w	801073e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801060e:	882a      	ldrh	r2, [r5, #0]
 8010610:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8010614:	3201      	adds	r2, #1
 8010616:	b292      	uxth	r2, r2
 8010618:	2900      	cmp	r1, #0
 801061a:	d0c2      	beq.n	80105a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801061c:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8010620:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8010624:	441e      	add	r6, r3
 8010626:	b236      	sxth	r6, r6
 8010628:	4694      	mov	ip, r2
 801062a:	f04f 0900 	mov.w	r9, #0
 801062e:	fa1f f38c 	uxth.w	r3, ip
 8010632:	4299      	cmp	r1, r3
 8010634:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8010638:	f240 80bf 	bls.w	80107ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 801063c:	4427      	add	r7, r4
 801063e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8010642:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8010646:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 801064a:	4283      	cmp	r3, r0
 801064c:	f340 80a1 	ble.w	8010792 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8010650:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8010654:	4406      	add	r6, r0
 8010656:	b236      	sxth	r6, r6
 8010658:	429e      	cmp	r6, r3
 801065a:	bfa8      	it	ge
 801065c:	461e      	movge	r6, r3
 801065e:	46e1      	mov	r9, ip
 8010660:	f10c 0c01 	add.w	ip, ip, #1
 8010664:	e7e3      	b.n	801062e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8010666:	d10a      	bne.n	801067e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8010668:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 801066c:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8010670:	4562      	cmp	r2, ip
 8010672:	bfb8      	it	lt
 8010674:	4662      	movlt	r2, ip
 8010676:	4288      	cmp	r0, r1
 8010678:	bfb8      	it	lt
 801067a:	461f      	movlt	r7, r3
 801067c:	e087      	b.n	801078e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801067e:	428a      	cmp	r2, r1
 8010680:	bfb8      	it	lt
 8010682:	460a      	movlt	r2, r1
 8010684:	e083      	b.n	801078e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8010686:	bf00      	nop
 8010688:	20014ffc 	.word	0x20014ffc
 801068c:	20015008 	.word	0x20015008
 8010690:	20000084 	.word	0x20000084
 8010694:	20014fc4 	.word	0x20014fc4
 8010698:	20014fba 	.word	0x20014fba
 801069c:	20014fb8 	.word	0x20014fb8
 80106a0:	20014fc2 	.word	0x20014fc2
 80106a4:	20014fbc 	.word	0x20014fbc
 80106a8:	19a1      	adds	r1, r4, r6
 80106aa:	ab07      	add	r3, sp, #28
 80106ac:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80106b0:	6849      	ldr	r1, [r1, #4]
 80106b2:	c303      	stmia	r3!, {r0, r1}
 80106b4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80106b8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80106bc:	2b13      	cmp	r3, #19
 80106be:	bfd8      	it	le
 80106c0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80106c4:	f8ad 201c 	strh.w	r2, [sp, #28]
 80106c8:	440b      	add	r3, r1
 80106ca:	1a9b      	subs	r3, r3, r2
 80106cc:	a807      	add	r0, sp, #28
 80106ce:	f8ad 3020 	strh.w	r3, [sp, #32]
 80106d2:	f7fe ffed 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80106d6:	a807      	add	r0, sp, #28
 80106d8:	f7fb fbd5 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 80106dc:	bb78      	cbnz	r0, 801073e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80106de:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80106e2:	f8d9 0000 	ldr.w	r0, [r9]
 80106e6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80106ea:	f8d0 e000 	ldr.w	lr, [r0]
 80106ee:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80106f2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80106f6:	f1bc 0f14 	cmp.w	ip, #20
 80106fa:	bfa8      	it	ge
 80106fc:	f04f 0c14 	movge.w	ip, #20
 8010700:	fa1f fc8c 	uxth.w	ip, ip
 8010704:	f8cd c000 	str.w	ip, [sp]
 8010708:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 801070c:	47d8      	blx	fp
 801070e:	4683      	mov	fp, r0
 8010710:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010714:	a807      	add	r0, sp, #28
 8010716:	f7fe ffb1 	bl	800f67c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801071a:	6823      	ldr	r3, [r4, #0]
 801071c:	4426      	add	r6, r4
 801071e:	4620      	mov	r0, r4
 8010720:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010722:	a907      	add	r1, sp, #28
 8010724:	4798      	blx	r3
 8010726:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801072a:	eba0 000b 	sub.w	r0, r0, fp
 801072e:	b200      	sxth	r0, r0
 8010730:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8010734:	b918      	cbnz	r0, 801073e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8010736:	b2b9      	uxth	r1, r7
 8010738:	4650      	mov	r0, sl
 801073a:	f7ff fa79 	bl	800fc30 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801073e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8010742:	f1bb 0f00 	cmp.w	fp, #0
 8010746:	f43f af2c 	beq.w	80105a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801074a:	882b      	ldrh	r3, [r5, #0]
 801074c:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8010750:	3301      	adds	r3, #1
 8010752:	b29b      	uxth	r3, r3
 8010754:	2700      	movs	r7, #0
 8010756:	b299      	uxth	r1, r3
 8010758:	458b      	cmp	fp, r1
 801075a:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801075e:	d9a3      	bls.n	80106a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8010760:	4426      	add	r6, r4
 8010762:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8010766:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 801076a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801076e:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8010772:	4408      	add	r0, r1
 8010774:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8010778:	4461      	add	r1, ip
 801077a:	b200      	sxth	r0, r0
 801077c:	b209      	sxth	r1, r1
 801077e:	4288      	cmp	r0, r1
 8010780:	f6bf af71 	bge.w	8010666 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8010784:	4584      	cmp	ip, r0
 8010786:	4662      	mov	r2, ip
 8010788:	461f      	mov	r7, r3
 801078a:	bfb8      	it	lt
 801078c:	4602      	movlt	r2, r0
 801078e:	3301      	adds	r3, #1
 8010790:	e7e1      	b.n	8010756 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8010792:	d10e      	bne.n	80107b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8010794:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8010798:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 801079c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80107a0:	4473      	add	r3, lr
 80107a2:	b21b      	sxth	r3, r3
 80107a4:	429e      	cmp	r6, r3
 80107a6:	bfa8      	it	ge
 80107a8:	461e      	movge	r6, r3
 80107aa:	4287      	cmp	r7, r0
 80107ac:	bfb8      	it	lt
 80107ae:	46e1      	movlt	r9, ip
 80107b0:	e756      	b.n	8010660 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80107b2:	4286      	cmp	r6, r0
 80107b4:	bfa8      	it	ge
 80107b6:	4606      	movge	r6, r0
 80107b8:	e752      	b.n	8010660 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80107ba:	eb0a 0007 	add.w	r0, sl, r7
 80107be:	4427      	add	r7, r4
 80107c0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80107c4:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80107c8:	f1bb 0f13 	cmp.w	fp, #19
 80107cc:	bfde      	ittt	le
 80107ce:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80107d2:	445e      	addle	r6, fp
 80107d4:	b236      	sxthle	r6, r6
 80107d6:	f7fb fb56 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 80107da:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80107de:	2800      	cmp	r0, #0
 80107e0:	f47f af1a 	bne.w	8010618 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80107e4:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80107e8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80107ec:	482a      	ldr	r0, [pc, #168]	; (8010898 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80107ee:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80107f2:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80107f6:	6800      	ldr	r0, [r0, #0]
 80107f8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80107fc:	1ab6      	subs	r6, r6, r2
 80107fe:	2e14      	cmp	r6, #20
 8010800:	f8ad 201e 	strh.w	r2, [sp, #30]
 8010804:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010808:	bfa8      	it	ge
 801080a:	2614      	movge	r6, #20
 801080c:	f8d0 c000 	ldr.w	ip, [r0]
 8010810:	b2b6      	uxth	r6, r6
 8010812:	fa1f fb8b 	uxth.w	fp, fp
 8010816:	455e      	cmp	r6, fp
 8010818:	bf94      	ite	ls
 801081a:	9600      	strls	r6, [sp, #0]
 801081c:	f8cd b000 	strhi.w	fp, [sp]
 8010820:	b292      	uxth	r2, r2
 8010822:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8010826:	b29b      	uxth	r3, r3
 8010828:	b289      	uxth	r1, r1
 801082a:	47b0      	blx	r6
 801082c:	6823      	ldr	r3, [r4, #0]
 801082e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8010832:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010834:	a907      	add	r1, sp, #28
 8010836:	4620      	mov	r0, r4
 8010838:	4798      	blx	r3
 801083a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801083e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8010842:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8010846:	1a5b      	subs	r3, r3, r1
 8010848:	440a      	add	r2, r1
 801084a:	b21b      	sxth	r3, r3
 801084c:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8010850:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8010854:	2b00      	cmp	r3, #0
 8010856:	f47f aeda 	bne.w	801060e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801085a:	fa1f f189 	uxth.w	r1, r9
 801085e:	4650      	mov	r0, sl
 8010860:	f7ff f9e6 	bl	800fc30 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010864:	e6d3      	b.n	801060e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8010866:	882e      	ldrh	r6, [r5, #0]
 8010868:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801086c:	42b3      	cmp	r3, r6
 801086e:	f67f ae98 	bls.w	80105a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8010872:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8010876:	ab07      	add	r3, sp, #28
 8010878:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801087c:	6851      	ldr	r1, [r2, #4]
 801087e:	c303      	stmia	r3!, {r0, r1}
 8010880:	a807      	add	r0, sp, #28
 8010882:	f7fb fb00 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010886:	b920      	cbnz	r0, 8010892 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8010888:	6823      	ldr	r3, [r4, #0]
 801088a:	a907      	add	r1, sp, #28
 801088c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801088e:	4620      	mov	r0, r4
 8010890:	4798      	blx	r3
 8010892:	3601      	adds	r6, #1
 8010894:	b2b6      	uxth	r6, r6
 8010896:	e7e7      	b.n	8010868 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8010898:	20014fc4 	.word	0x20014fc4

0801089c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801089c:	4b03      	ldr	r3, [pc, #12]	; (80108ac <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801089e:	2200      	movs	r2, #0
 80108a0:	801a      	strh	r2, [r3, #0]
 80108a2:	805a      	strh	r2, [r3, #2]
 80108a4:	809a      	strh	r2, [r3, #4]
 80108a6:	80da      	strh	r2, [r3, #6]
 80108a8:	4770      	bx	lr
 80108aa:	bf00      	nop
 80108ac:	20015008 	.word	0x20015008

080108b0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80108b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108b4:	4606      	mov	r6, r0
 80108b6:	b09d      	sub	sp, #116	; 0x74
 80108b8:	a803      	add	r0, sp, #12
 80108ba:	4614      	mov	r4, r2
 80108bc:	468a      	mov	sl, r1
 80108be:	461d      	mov	r5, r3
 80108c0:	f000 fdcf 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 80108c4:	6833      	ldr	r3, [r6, #0]
 80108c6:	4630      	mov	r0, r6
 80108c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80108ca:	4798      	blx	r3
 80108cc:	6833      	ldr	r3, [r6, #0]
 80108ce:	4607      	mov	r7, r0
 80108d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80108d2:	4630      	mov	r0, r6
 80108d4:	4798      	blx	r3
 80108d6:	462a      	mov	r2, r5
 80108d8:	9000      	str	r0, [sp, #0]
 80108da:	4621      	mov	r1, r4
 80108dc:	463b      	mov	r3, r7
 80108de:	a803      	add	r0, sp, #12
 80108e0:	f000 fe1a 	bl	8011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80108e4:	2500      	movs	r5, #0
 80108e6:	462c      	mov	r4, r5
 80108e8:	46a9      	mov	r9, r5
 80108ea:	46a8      	mov	r8, r5
 80108ec:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80108f0:	2300      	movs	r3, #0
 80108f2:	9302      	str	r3, [sp, #8]
 80108f4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80108f8:	429c      	cmp	r4, r3
 80108fa:	d002      	beq.n	8010902 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80108fc:	455c      	cmp	r4, fp
 80108fe:	bf18      	it	ne
 8010900:	4625      	movne	r5, r4
 8010902:	ab02      	add	r3, sp, #8
 8010904:	4632      	mov	r2, r6
 8010906:	4651      	mov	r1, sl
 8010908:	a803      	add	r0, sp, #12
 801090a:	f001 f907 	bl	8011b1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801090e:	4604      	mov	r4, r0
 8010910:	b108      	cbz	r0, 8010916 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8010912:	280a      	cmp	r0, #10
 8010914:	d10a      	bne.n	801092c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010916:	45c1      	cmp	r9, r8
 8010918:	bf38      	it	cc
 801091a:	46c1      	movcc	r9, r8
 801091c:	f04f 0800 	mov.w	r8, #0
 8010920:	2c00      	cmp	r4, #0
 8010922:	d1e5      	bne.n	80108f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010924:	4648      	mov	r0, r9
 8010926:	b01d      	add	sp, #116	; 0x74
 8010928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801092c:	9a02      	ldr	r2, [sp, #8]
 801092e:	2a00      	cmp	r2, #0
 8010930:	d0de      	beq.n	80108f0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010932:	7b57      	ldrb	r7, [r2, #13]
 8010934:	6833      	ldr	r3, [r6, #0]
 8010936:	8894      	ldrh	r4, [r2, #4]
 8010938:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801093a:	007f      	lsls	r7, r7, #1
 801093c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8010940:	7a97      	ldrb	r7, [r2, #10]
 8010942:	4629      	mov	r1, r5
 8010944:	4307      	orrs	r7, r0
 8010946:	4630      	mov	r0, r6
 8010948:	4798      	blx	r3
 801094a:	4438      	add	r0, r7
 801094c:	4480      	add	r8, r0
 801094e:	fa1f f888 	uxth.w	r8, r8
 8010952:	e7e5      	b.n	8010920 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010954 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010954:	b508      	push	{r3, lr}
 8010956:	6803      	ldr	r3, [r0, #0]
 8010958:	68db      	ldr	r3, [r3, #12]
 801095a:	4798      	blx	r3
 801095c:	b128      	cbz	r0, 801096a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801095e:	7b43      	ldrb	r3, [r0, #13]
 8010960:	7a80      	ldrb	r0, [r0, #10]
 8010962:	005b      	lsls	r3, r3, #1
 8010964:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010968:	4318      	orrs	r0, r3
 801096a:	bd08      	pop	{r3, pc}

0801096c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801096c:	b40e      	push	{r1, r2, r3}
 801096e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010970:	b09e      	sub	sp, #120	; 0x78
 8010972:	ab23      	add	r3, sp, #140	; 0x8c
 8010974:	4605      	mov	r5, r0
 8010976:	f853 4b04 	ldr.w	r4, [r3], #4
 801097a:	9303      	str	r3, [sp, #12]
 801097c:	a805      	add	r0, sp, #20
 801097e:	f000 fd70 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 8010982:	682b      	ldr	r3, [r5, #0]
 8010984:	4628      	mov	r0, r5
 8010986:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010988:	4798      	blx	r3
 801098a:	682b      	ldr	r3, [r5, #0]
 801098c:	4606      	mov	r6, r0
 801098e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010990:	4628      	mov	r0, r5
 8010992:	4798      	blx	r3
 8010994:	4633      	mov	r3, r6
 8010996:	ae1e      	add	r6, sp, #120	; 0x78
 8010998:	4621      	mov	r1, r4
 801099a:	9000      	str	r0, [sp, #0]
 801099c:	9a03      	ldr	r2, [sp, #12]
 801099e:	2400      	movs	r4, #0
 80109a0:	a805      	add	r0, sp, #20
 80109a2:	f000 fdb9 	bl	8011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80109a6:	f846 4d68 	str.w	r4, [r6, #-104]!
 80109aa:	462a      	mov	r2, r5
 80109ac:	4633      	mov	r3, r6
 80109ae:	4621      	mov	r1, r4
 80109b0:	a805      	add	r0, sp, #20
 80109b2:	f001 f8b3 	bl	8011b1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80109b6:	b1f0      	cbz	r0, 80109f6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80109b8:	280a      	cmp	r0, #10
 80109ba:	d018      	beq.n	80109ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80109bc:	9f04      	ldr	r7, [sp, #16]
 80109be:	b1b7      	cbz	r7, 80109ee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80109c0:	7b78      	ldrb	r0, [r7, #13]
 80109c2:	7a3b      	ldrb	r3, [r7, #8]
 80109c4:	88ea      	ldrh	r2, [r5, #6]
 80109c6:	00c1      	lsls	r1, r0, #3
 80109c8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80109cc:	4319      	orrs	r1, r3
 80109ce:	0643      	lsls	r3, r0, #25
 80109d0:	bf44      	itt	mi
 80109d2:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80109d6:	b219      	sxthmi	r1, r3
 80109d8:	0100      	lsls	r0, r0, #4
 80109da:	79fb      	ldrb	r3, [r7, #7]
 80109dc:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80109e0:	4303      	orrs	r3, r0
 80109e2:	4413      	add	r3, r2
 80109e4:	1a5b      	subs	r3, r3, r1
 80109e6:	b21b      	sxth	r3, r3
 80109e8:	429c      	cmp	r4, r3
 80109ea:	bfb8      	it	lt
 80109ec:	461c      	movlt	r4, r3
 80109ee:	4633      	mov	r3, r6
 80109f0:	462a      	mov	r2, r5
 80109f2:	2100      	movs	r1, #0
 80109f4:	e7dc      	b.n	80109b0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80109f6:	b2a0      	uxth	r0, r4
 80109f8:	b01e      	add	sp, #120	; 0x78
 80109fa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80109fe:	b003      	add	sp, #12
 8010a00:	4770      	bx	lr

08010a02 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8010a02:	7a43      	ldrb	r3, [r0, #9]
 8010a04:	8880      	ldrh	r0, [r0, #4]
 8010a06:	4418      	add	r0, r3
 8010a08:	b280      	uxth	r0, r0
 8010a0a:	4770      	bx	lr

08010a0c <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010a0c:	6803      	ldr	r3, [r0, #0]
 8010a0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010a10:	4718      	bx	r3

08010a12 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010a12:	b40e      	push	{r1, r2, r3}
 8010a14:	b570      	push	{r4, r5, r6, lr}
 8010a16:	b09d      	sub	sp, #116	; 0x74
 8010a18:	ab21      	add	r3, sp, #132	; 0x84
 8010a1a:	4604      	mov	r4, r0
 8010a1c:	f853 5b04 	ldr.w	r5, [r3], #4
 8010a20:	9302      	str	r3, [sp, #8]
 8010a22:	a803      	add	r0, sp, #12
 8010a24:	f000 fd1d 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 8010a28:	6823      	ldr	r3, [r4, #0]
 8010a2a:	4620      	mov	r0, r4
 8010a2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010a2e:	4798      	blx	r3
 8010a30:	6823      	ldr	r3, [r4, #0]
 8010a32:	4606      	mov	r6, r0
 8010a34:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010a36:	4620      	mov	r0, r4
 8010a38:	4798      	blx	r3
 8010a3a:	4633      	mov	r3, r6
 8010a3c:	9000      	str	r0, [sp, #0]
 8010a3e:	9a02      	ldr	r2, [sp, #8]
 8010a40:	4629      	mov	r1, r5
 8010a42:	a803      	add	r0, sp, #12
 8010a44:	f000 fd68 	bl	8011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010a48:	a803      	add	r0, sp, #12
 8010a4a:	f001 f935 	bl	8011cb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010a4e:	2401      	movs	r4, #1
 8010a50:	b2a3      	uxth	r3, r4
 8010a52:	b140      	cbz	r0, 8010a66 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8010a54:	280a      	cmp	r0, #10
 8010a56:	bf08      	it	eq
 8010a58:	3301      	addeq	r3, #1
 8010a5a:	a803      	add	r0, sp, #12
 8010a5c:	bf08      	it	eq
 8010a5e:	b21c      	sxtheq	r4, r3
 8010a60:	f001 f92a 	bl	8011cb8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010a64:	e7f4      	b.n	8010a50 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010a66:	4618      	mov	r0, r3
 8010a68:	b01d      	add	sp, #116	; 0x74
 8010a6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a6e:	b003      	add	sp, #12
 8010a70:	4770      	bx	lr

08010a72 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010a72:	b40e      	push	{r1, r2, r3}
 8010a74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a76:	b09e      	sub	sp, #120	; 0x78
 8010a78:	ab23      	add	r3, sp, #140	; 0x8c
 8010a7a:	4604      	mov	r4, r0
 8010a7c:	f853 5b04 	ldr.w	r5, [r3], #4
 8010a80:	9303      	str	r3, [sp, #12]
 8010a82:	a805      	add	r0, sp, #20
 8010a84:	f000 fced 	bl	8011462 <_ZN8touchgfx12TextProviderC1Ev>
 8010a88:	6823      	ldr	r3, [r4, #0]
 8010a8a:	4620      	mov	r0, r4
 8010a8c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010a8e:	4798      	blx	r3
 8010a90:	6823      	ldr	r3, [r4, #0]
 8010a92:	4606      	mov	r6, r0
 8010a94:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010a96:	4620      	mov	r0, r4
 8010a98:	4798      	blx	r3
 8010a9a:	4633      	mov	r3, r6
 8010a9c:	4629      	mov	r1, r5
 8010a9e:	9000      	str	r0, [sp, #0]
 8010aa0:	9a03      	ldr	r2, [sp, #12]
 8010aa2:	a805      	add	r0, sp, #20
 8010aa4:	ad1e      	add	r5, sp, #120	; 0x78
 8010aa6:	f000 fd37 	bl	8011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010aaa:	2100      	movs	r1, #0
 8010aac:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010ab0:	4622      	mov	r2, r4
 8010ab2:	462b      	mov	r3, r5
 8010ab4:	a805      	add	r0, sp, #20
 8010ab6:	f001 f831 	bl	8011b1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010aba:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8010abe:	b1d8      	cbz	r0, 8010af8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8010ac0:	280a      	cmp	r0, #10
 8010ac2:	d012      	beq.n	8010aea <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010ac4:	9804      	ldr	r0, [sp, #16]
 8010ac6:	b180      	cbz	r0, 8010aea <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010ac8:	7b47      	ldrb	r7, [r0, #13]
 8010aca:	88e2      	ldrh	r2, [r4, #6]
 8010acc:	00fb      	lsls	r3, r7, #3
 8010ace:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010ad2:	7a03      	ldrb	r3, [r0, #8]
 8010ad4:	430b      	orrs	r3, r1
 8010ad6:	0679      	lsls	r1, r7, #25
 8010ad8:	bf44      	itt	mi
 8010ada:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010ade:	b21b      	sxthmi	r3, r3
 8010ae0:	1ad3      	subs	r3, r2, r3
 8010ae2:	b21b      	sxth	r3, r3
 8010ae4:	429e      	cmp	r6, r3
 8010ae6:	bfa8      	it	ge
 8010ae8:	461e      	movge	r6, r3
 8010aea:	462b      	mov	r3, r5
 8010aec:	4622      	mov	r2, r4
 8010aee:	2100      	movs	r1, #0
 8010af0:	a805      	add	r0, sp, #20
 8010af2:	f001 f813 	bl	8011b1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010af6:	e7e2      	b.n	8010abe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010af8:	4630      	mov	r0, r6
 8010afa:	b01e      	add	sp, #120	; 0x78
 8010afc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010b00:	b003      	add	sp, #12
 8010b02:	4770      	bx	lr

08010b04 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010b04:	b513      	push	{r0, r1, r4, lr}
 8010b06:	6803      	ldr	r3, [r0, #0]
 8010b08:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010b0c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010b10:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010b14:	2400      	movs	r4, #0
 8010b16:	9400      	str	r4, [sp, #0]
 8010b18:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010b1c:	691b      	ldr	r3, [r3, #16]
 8010b1e:	4669      	mov	r1, sp
 8010b20:	4798      	blx	r3
 8010b22:	b002      	add	sp, #8
 8010b24:	bd10      	pop	{r4, pc}

08010b26 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010b26:	b538      	push	{r3, r4, r5, lr}
 8010b28:	680b      	ldr	r3, [r1, #0]
 8010b2a:	460c      	mov	r4, r1
 8010b2c:	68db      	ldr	r3, [r3, #12]
 8010b2e:	4605      	mov	r5, r0
 8010b30:	4798      	blx	r3
 8010b32:	6823      	ldr	r3, [r4, #0]
 8010b34:	4620      	mov	r0, r4
 8010b36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b38:	4629      	mov	r1, r5
 8010b3a:	4798      	blx	r3
 8010b3c:	4628      	mov	r0, r5
 8010b3e:	bd38      	pop	{r3, r4, r5, pc}

08010b40 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010b40:	b410      	push	{r4}
 8010b42:	880a      	ldrh	r2, [r1, #0]
 8010b44:	8884      	ldrh	r4, [r0, #4]
 8010b46:	4422      	add	r2, r4
 8010b48:	800a      	strh	r2, [r1, #0]
 8010b4a:	88c4      	ldrh	r4, [r0, #6]
 8010b4c:	884a      	ldrh	r2, [r1, #2]
 8010b4e:	4422      	add	r2, r4
 8010b50:	804a      	strh	r2, [r1, #2]
 8010b52:	6940      	ldr	r0, [r0, #20]
 8010b54:	b120      	cbz	r0, 8010b60 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010b56:	6803      	ldr	r3, [r0, #0]
 8010b58:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010b5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010b5e:	4718      	bx	r3
 8010b60:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010b64:	4770      	bx	lr

08010b66 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010b66:	b570      	push	{r4, r5, r6, lr}
 8010b68:	8882      	ldrh	r2, [r0, #4]
 8010b6a:	880b      	ldrh	r3, [r1, #0]
 8010b6c:	4413      	add	r3, r2
 8010b6e:	800b      	strh	r3, [r1, #0]
 8010b70:	88c2      	ldrh	r2, [r0, #6]
 8010b72:	884b      	ldrh	r3, [r1, #2]
 8010b74:	460c      	mov	r4, r1
 8010b76:	4413      	add	r3, r2
 8010b78:	804b      	strh	r3, [r1, #2]
 8010b7a:	4605      	mov	r5, r0
 8010b7c:	1d01      	adds	r1, r0, #4
 8010b7e:	4620      	mov	r0, r4
 8010b80:	f7fb f93e 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 8010b84:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010b88:	2b00      	cmp	r3, #0
 8010b8a:	dd0b      	ble.n	8010ba4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010b8c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010b90:	2b00      	cmp	r3, #0
 8010b92:	dd07      	ble.n	8010ba4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010b94:	6968      	ldr	r0, [r5, #20]
 8010b96:	b128      	cbz	r0, 8010ba4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010b98:	6803      	ldr	r3, [r0, #0]
 8010b9a:	4621      	mov	r1, r4
 8010b9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010b9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ba2:	4718      	bx	r3
 8010ba4:	bd70      	pop	{r4, r5, r6, pc}
	...

08010ba8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010ba8:	b570      	push	{r4, r5, r6, lr}
 8010baa:	8882      	ldrh	r2, [r0, #4]
 8010bac:	880b      	ldrh	r3, [r1, #0]
 8010bae:	4413      	add	r3, r2
 8010bb0:	800b      	strh	r3, [r1, #0]
 8010bb2:	88c2      	ldrh	r2, [r0, #6]
 8010bb4:	884b      	ldrh	r3, [r1, #2]
 8010bb6:	460c      	mov	r4, r1
 8010bb8:	4413      	add	r3, r2
 8010bba:	804b      	strh	r3, [r1, #2]
 8010bbc:	4605      	mov	r5, r0
 8010bbe:	1d01      	adds	r1, r0, #4
 8010bc0:	4620      	mov	r0, r4
 8010bc2:	f7fb f91d 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 8010bc6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010bca:	2b00      	cmp	r3, #0
 8010bcc:	dd19      	ble.n	8010c02 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010bce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010bd2:	2b00      	cmp	r3, #0
 8010bd4:	dd15      	ble.n	8010c02 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010bd6:	6968      	ldr	r0, [r5, #20]
 8010bd8:	b128      	cbz	r0, 8010be6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010bda:	6803      	ldr	r3, [r0, #0]
 8010bdc:	4621      	mov	r1, r4
 8010bde:	691b      	ldr	r3, [r3, #16]
 8010be0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010be4:	4718      	bx	r3
 8010be6:	4b07      	ldr	r3, [pc, #28]	; (8010c04 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010be8:	681b      	ldr	r3, [r3, #0]
 8010bea:	3304      	adds	r3, #4
 8010bec:	429d      	cmp	r5, r3
 8010bee:	d108      	bne.n	8010c02 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010bf0:	f7fe ff12 	bl	800fa18 <_ZN8touchgfx11Application11getInstanceEv>
 8010bf4:	6803      	ldr	r3, [r0, #0]
 8010bf6:	6821      	ldr	r1, [r4, #0]
 8010bf8:	6862      	ldr	r2, [r4, #4]
 8010bfa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010bfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c00:	4718      	bx	r3
 8010c02:	bd70      	pop	{r4, r5, r6, pc}
 8010c04:	20015000 	.word	0x20015000

08010c08 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010c08:	b570      	push	{r4, r5, r6, lr}
 8010c0a:	4604      	mov	r4, r0
 8010c0c:	4616      	mov	r6, r2
 8010c0e:	460d      	mov	r5, r1
 8010c10:	b901      	cbnz	r1, 8010c14 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8010c12:	b192      	cbz	r2, 8010c3a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010c14:	6823      	ldr	r3, [r4, #0]
 8010c16:	4620      	mov	r0, r4
 8010c18:	699b      	ldr	r3, [r3, #24]
 8010c1a:	4798      	blx	r3
 8010c1c:	88e2      	ldrh	r2, [r4, #6]
 8010c1e:	88a1      	ldrh	r1, [r4, #4]
 8010c20:	4432      	add	r2, r6
 8010c22:	4429      	add	r1, r5
 8010c24:	4620      	mov	r0, r4
 8010c26:	b212      	sxth	r2, r2
 8010c28:	b209      	sxth	r1, r1
 8010c2a:	f7f1 fbc5 	bl	80023b8 <_ZN8touchgfx8Drawable5setXYEss>
 8010c2e:	6823      	ldr	r3, [r4, #0]
 8010c30:	4620      	mov	r0, r4
 8010c32:	699b      	ldr	r3, [r3, #24]
 8010c34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010c38:	4718      	bx	r3
 8010c3a:	bd70      	pop	{r4, r5, r6, pc}

08010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010c3c:	b510      	push	{r4, lr}
 8010c3e:	4604      	mov	r4, r0
 8010c40:	4608      	mov	r0, r1
 8010c42:	2300      	movs	r3, #0
 8010c44:	8023      	strh	r3, [r4, #0]
 8010c46:	8063      	strh	r3, [r4, #2]
 8010c48:	6803      	ldr	r3, [r0, #0]
 8010c4a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010c4e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010c52:	80a1      	strh	r1, [r4, #4]
 8010c54:	80e2      	strh	r2, [r4, #6]
 8010c56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c58:	4621      	mov	r1, r4
 8010c5a:	4798      	blx	r3
 8010c5c:	4620      	mov	r0, r4
 8010c5e:	bd10      	pop	{r4, pc}

08010c60 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8010c60:	b530      	push	{r4, r5, lr}
 8010c62:	8083      	strh	r3, [r0, #4]
 8010c64:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8010c68:	80c3      	strh	r3, [r0, #6]
 8010c6a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010c6e:	7203      	strb	r3, [r0, #8]
 8010c70:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010c74:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010c78:	7243      	strb	r3, [r0, #9]
 8010c7a:	7a83      	ldrb	r3, [r0, #10]
 8010c7c:	6141      	str	r1, [r0, #20]
 8010c7e:	f365 0306 	bfi	r3, r5, #0, #7
 8010c82:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8010c86:	8302      	strh	r2, [r0, #24]
 8010c88:	f365 13c7 	bfi	r3, r5, #7, #1
 8010c8c:	7283      	strb	r3, [r0, #10]
 8010c8e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8010c92:	72c3      	strb	r3, [r0, #11]
 8010c94:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8010c98:	7303      	strb	r3, [r0, #12]
 8010c9a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8010c9e:	81c3      	strh	r3, [r0, #14]
 8010ca0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8010ca4:	8203      	strh	r3, [r0, #16]
 8010ca6:	4b01      	ldr	r3, [pc, #4]	; (8010cac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8010ca8:	6003      	str	r3, [r0, #0]
 8010caa:	bd30      	pop	{r4, r5, pc}
 8010cac:	08023454 	.word	0x08023454

08010cb0 <_ZNK8touchgfx9ConstFont4findEt>:
 8010cb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010cb2:	6944      	ldr	r4, [r0, #20]
 8010cb4:	b3bc      	cbz	r4, 8010d26 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010cb6:	88a3      	ldrh	r3, [r4, #4]
 8010cb8:	8b02      	ldrh	r2, [r0, #24]
 8010cba:	1acb      	subs	r3, r1, r3
 8010cbc:	f102 32ff 	add.w	r2, r2, #4294967295
 8010cc0:	d431      	bmi.n	8010d26 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010cc2:	4293      	cmp	r3, r2
 8010cc4:	dd0c      	ble.n	8010ce0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8010cc6:	230e      	movs	r3, #14
 8010cc8:	fb03 4302 	mla	r3, r3, r2, r4
 8010ccc:	889b      	ldrh	r3, [r3, #4]
 8010cce:	1a5b      	subs	r3, r3, r1
 8010cd0:	1ad3      	subs	r3, r2, r3
 8010cd2:	429a      	cmp	r2, r3
 8010cd4:	db27      	blt.n	8010d26 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010cd6:	2b00      	cmp	r3, #0
 8010cd8:	bfbc      	itt	lt
 8010cda:	2302      	movlt	r3, #2
 8010cdc:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010ce0:	2500      	movs	r5, #0
 8010ce2:	260e      	movs	r6, #14
 8010ce4:	4295      	cmp	r5, r2
 8010ce6:	dc1e      	bgt.n	8010d26 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010ce8:	fb06 4003 	mla	r0, r6, r3, r4
 8010cec:	8887      	ldrh	r7, [r0, #4]
 8010cee:	42b9      	cmp	r1, r7
 8010cf0:	d01a      	beq.n	8010d28 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8010cf2:	d20d      	bcs.n	8010d10 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8010cf4:	1e5a      	subs	r2, r3, #1
 8010cf6:	4295      	cmp	r5, r2
 8010cf8:	dc15      	bgt.n	8010d26 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010cfa:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010cfe:	1a5b      	subs	r3, r3, r1
 8010d00:	1ad3      	subs	r3, r2, r3
 8010d02:	429a      	cmp	r2, r3
 8010d04:	db0f      	blt.n	8010d26 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010d06:	429d      	cmp	r5, r3
 8010d08:	ddec      	ble.n	8010ce4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010d0a:	1953      	adds	r3, r2, r5
 8010d0c:	105b      	asrs	r3, r3, #1
 8010d0e:	e7e9      	b.n	8010ce4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010d10:	1c5d      	adds	r5, r3, #1
 8010d12:	42aa      	cmp	r2, r5
 8010d14:	db07      	blt.n	8010d26 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010d16:	8a43      	ldrh	r3, [r0, #18]
 8010d18:	1acb      	subs	r3, r1, r3
 8010d1a:	442b      	add	r3, r5
 8010d1c:	429d      	cmp	r5, r3
 8010d1e:	dc02      	bgt.n	8010d26 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010d20:	429a      	cmp	r2, r3
 8010d22:	dadf      	bge.n	8010ce4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010d24:	e7f1      	b.n	8010d0a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8010d26:	2000      	movs	r0, #0
 8010d28:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010d2a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8010d2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d2c:	4604      	mov	r4, r0
 8010d2e:	4617      	mov	r7, r2
 8010d30:	461e      	mov	r6, r3
 8010d32:	b911      	cbnz	r1, 8010d3a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8010d34:	2500      	movs	r5, #0
 8010d36:	4628      	mov	r0, r5
 8010d38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010d3a:	290a      	cmp	r1, #10
 8010d3c:	d0fa      	beq.n	8010d34 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010d3e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010d42:	4291      	cmp	r1, r2
 8010d44:	d0f6      	beq.n	8010d34 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010d46:	f242 020b 	movw	r2, #8203	; 0x200b
 8010d4a:	4291      	cmp	r1, r2
 8010d4c:	d0f2      	beq.n	8010d34 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010d4e:	f7ff ffaf 	bl	8010cb0 <_ZNK8touchgfx9ConstFont4findEt>
 8010d52:	4605      	mov	r5, r0
 8010d54:	b950      	cbnz	r0, 8010d6c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8010d56:	6823      	ldr	r3, [r4, #0]
 8010d58:	4620      	mov	r0, r4
 8010d5a:	691b      	ldr	r3, [r3, #16]
 8010d5c:	4798      	blx	r3
 8010d5e:	4601      	mov	r1, r0
 8010d60:	4620      	mov	r0, r4
 8010d62:	f7ff ffa5 	bl	8010cb0 <_ZNK8touchgfx9ConstFont4findEt>
 8010d66:	4605      	mov	r5, r0
 8010d68:	2800      	cmp	r0, #0
 8010d6a:	d0e3      	beq.n	8010d34 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010d6c:	6823      	ldr	r3, [r4, #0]
 8010d6e:	4629      	mov	r1, r5
 8010d70:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010d72:	4620      	mov	r0, r4
 8010d74:	4798      	blx	r3
 8010d76:	6038      	str	r0, [r7, #0]
 8010d78:	6823      	ldr	r3, [r4, #0]
 8010d7a:	4620      	mov	r0, r4
 8010d7c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010d7e:	4798      	blx	r3
 8010d80:	7030      	strb	r0, [r6, #0]
 8010d82:	e7d8      	b.n	8010d36 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08010d84 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8010d84:	b538      	push	{r3, r4, r5, lr}
 8010d86:	4605      	mov	r5, r0
 8010d88:	f002 f866 	bl	8012e58 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010d8c:	4604      	mov	r4, r0
 8010d8e:	4628      	mov	r0, r5
 8010d90:	f001 ffa6 	bl	8012ce0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8010d94:	2800      	cmp	r0, #0
 8010d96:	bf14      	ite	ne
 8010d98:	2002      	movne	r0, #2
 8010d9a:	2000      	moveq	r0, #0
 8010d9c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8010da0:	b280      	uxth	r0, r0
 8010da2:	bd38      	pop	{r3, r4, r5, pc}

08010da4 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8010da4:	b538      	push	{r3, r4, r5, lr}
 8010da6:	4605      	mov	r5, r0
 8010da8:	f002 f856 	bl	8012e58 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010dac:	4604      	mov	r4, r0
 8010dae:	4628      	mov	r0, r5
 8010db0:	f001 ff96 	bl	8012ce0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8010db4:	2800      	cmp	r0, #0
 8010db6:	bf14      	ite	ne
 8010db8:	2002      	movne	r0, #2
 8010dba:	2000      	moveq	r0, #0
 8010dbc:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8010dc0:	f040 0001 	orr.w	r0, r0, #1
 8010dc4:	b280      	uxth	r0, r0
 8010dc6:	bd38      	pop	{r3, r4, r5, pc}

08010dc8 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8010dc8:	2000      	movs	r0, #0
 8010dca:	4770      	bx	lr

08010dcc <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8010dcc:	2001      	movs	r0, #1
 8010dce:	4770      	bx	lr

08010dd0 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8010dd0:	2002      	movs	r0, #2
 8010dd2:	4770      	bx	lr

08010dd4 <_ZN8touchgfx6ScreenD1Ev>:
 8010dd4:	4770      	bx	lr

08010dd6 <_ZN8touchgfx12GestureEventD1Ev>:
 8010dd6:	4770      	bx	lr

08010dd8 <_ZN8touchgfx9DragEventD1Ev>:
 8010dd8:	4770      	bx	lr

08010dda <_ZN8touchgfx10ClickEventD1Ev>:
 8010dda:	4770      	bx	lr

08010ddc <_ZN8touchgfx10ClickEventD0Ev>:
 8010ddc:	b510      	push	{r4, lr}
 8010dde:	210c      	movs	r1, #12
 8010de0:	4604      	mov	r4, r0
 8010de2:	f00f fb21 	bl	8020428 <_ZdlPvj>
 8010de6:	4620      	mov	r0, r4
 8010de8:	bd10      	pop	{r4, pc}

08010dea <_ZN8touchgfx9DragEventD0Ev>:
 8010dea:	b510      	push	{r4, lr}
 8010dec:	2110      	movs	r1, #16
 8010dee:	4604      	mov	r4, r0
 8010df0:	f00f fb1a 	bl	8020428 <_ZdlPvj>
 8010df4:	4620      	mov	r0, r4
 8010df6:	bd10      	pop	{r4, pc}

08010df8 <_ZN8touchgfx12GestureEventD0Ev>:
 8010df8:	b510      	push	{r4, lr}
 8010dfa:	210c      	movs	r1, #12
 8010dfc:	4604      	mov	r4, r0
 8010dfe:	f00f fb13 	bl	8020428 <_ZdlPvj>
 8010e02:	4620      	mov	r0, r4
 8010e04:	bd10      	pop	{r4, pc}

08010e06 <_ZN8touchgfx6ScreenD0Ev>:
 8010e06:	b510      	push	{r4, lr}
 8010e08:	213c      	movs	r1, #60	; 0x3c
 8010e0a:	4604      	mov	r4, r0
 8010e0c:	f00f fb0c 	bl	8020428 <_ZdlPvj>
 8010e10:	4620      	mov	r0, r4
 8010e12:	bd10      	pop	{r4, pc}

08010e14 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8010e14:	b530      	push	{r4, r5, lr}
 8010e16:	460d      	mov	r5, r1
 8010e18:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8010e1a:	b087      	sub	sp, #28
 8010e1c:	4604      	mov	r4, r0
 8010e1e:	b301      	cbz	r1, 8010e62 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8010e20:	a801      	add	r0, sp, #4
 8010e22:	f7ff ff0b 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010e26:	892a      	ldrh	r2, [r5, #8]
 8010e28:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010e2c:	7928      	ldrb	r0, [r5, #4]
 8010e2e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010e32:	f88d 0010 	strb.w	r0, [sp, #16]
 8010e36:	1ad2      	subs	r2, r2, r3
 8010e38:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010e3a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010e3c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8010e40:	441a      	add	r2, r3
 8010e42:	896b      	ldrh	r3, [r5, #10]
 8010e44:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8010e48:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010e4c:	1b5b      	subs	r3, r3, r5
 8010e4e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8010e50:	442b      	add	r3, r5
 8010e52:	4d05      	ldr	r5, [pc, #20]	; (8010e68 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8010e54:	9503      	str	r5, [sp, #12]
 8010e56:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010e5a:	6803      	ldr	r3, [r0, #0]
 8010e5c:	a903      	add	r1, sp, #12
 8010e5e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010e60:	4798      	blx	r3
 8010e62:	b007      	add	sp, #28
 8010e64:	bd30      	pop	{r4, r5, pc}
 8010e66:	bf00      	nop
 8010e68:	080234dc 	.word	0x080234dc

08010e6c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010e6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010e70:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8010e72:	b08a      	sub	sp, #40	; 0x28
 8010e74:	4604      	mov	r4, r0
 8010e76:	460d      	mov	r5, r1
 8010e78:	b113      	cbz	r3, 8010e80 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8010e7a:	790b      	ldrb	r3, [r1, #4]
 8010e7c:	2b00      	cmp	r3, #0
 8010e7e:	d044      	beq.n	8010f0a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010e80:	f104 0804 	add.w	r8, r4, #4
 8010e84:	4641      	mov	r1, r8
 8010e86:	a803      	add	r0, sp, #12
 8010e88:	f7ff fed8 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010e8c:	792b      	ldrb	r3, [r5, #4]
 8010e8e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8010e92:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8010e96:	b983      	cbnz	r3, 8010eba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8010e98:	892a      	ldrh	r2, [r5, #8]
 8010e9a:	88e9      	ldrh	r1, [r5, #6]
 8010e9c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8010ea0:	1b92      	subs	r2, r2, r6
 8010ea2:	1bc9      	subs	r1, r1, r7
 8010ea4:	9301      	str	r3, [sp, #4]
 8010ea6:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8010eaa:	9300      	str	r3, [sp, #0]
 8010eac:	b212      	sxth	r2, r2
 8010eae:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8010eb2:	b209      	sxth	r1, r1
 8010eb4:	4640      	mov	r0, r8
 8010eb6:	f7fa febf 	bl	800bc38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8010eba:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010ebc:	b329      	cbz	r1, 8010f0a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010ebe:	a805      	add	r0, sp, #20
 8010ec0:	f7ff febc 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010ec4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8010ec8:	792b      	ldrb	r3, [r5, #4]
 8010eca:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8010ecc:	f88d 3020 	strb.w	r3, [sp, #32]
 8010ed0:	1abf      	subs	r7, r7, r2
 8010ed2:	88ea      	ldrh	r2, [r5, #6]
 8010ed4:	4417      	add	r7, r2
 8010ed6:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8010ed8:	4417      	add	r7, r2
 8010eda:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8010ede:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8010ee2:	1ab6      	subs	r6, r6, r2
 8010ee4:	892a      	ldrh	r2, [r5, #8]
 8010ee6:	4416      	add	r6, r2
 8010ee8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010eea:	4416      	add	r6, r2
 8010eec:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8010ef0:	4a07      	ldr	r2, [pc, #28]	; (8010f10 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8010ef2:	9207      	str	r2, [sp, #28]
 8010ef4:	2600      	movs	r6, #0
 8010ef6:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8010efa:	6803      	ldr	r3, [r0, #0]
 8010efc:	a907      	add	r1, sp, #28
 8010efe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010f00:	4798      	blx	r3
 8010f02:	792b      	ldrb	r3, [r5, #4]
 8010f04:	b10b      	cbz	r3, 8010f0a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010f06:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8010f0a:	b00a      	add	sp, #40	; 0x28
 8010f0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f10:	080234b4 	.word	0x080234b4

08010f14 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8010f14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f18:	460c      	mov	r4, r1
 8010f1a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8010f1c:	b088      	sub	sp, #32
 8010f1e:	4605      	mov	r5, r0
 8010f20:	2900      	cmp	r1, #0
 8010f22:	d06d      	beq.n	8011000 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8010f24:	4668      	mov	r0, sp
 8010f26:	f7ff fe89 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010f2a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8010f2c:	88e3      	ldrh	r3, [r4, #6]
 8010f2e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8010f32:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8010f36:	440b      	add	r3, r1
 8010f38:	b21b      	sxth	r3, r3
 8010f3a:	4543      	cmp	r3, r8
 8010f3c:	db31      	blt.n	8010fa2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010f3e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8010f42:	44c4      	add	ip, r8
 8010f44:	fa0f fc8c 	sxth.w	ip, ip
 8010f48:	4563      	cmp	r3, ip
 8010f4a:	da2a      	bge.n	8010fa2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010f4c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8010f4e:	8926      	ldrh	r6, [r4, #8]
 8010f50:	4416      	add	r6, r2
 8010f52:	b236      	sxth	r6, r6
 8010f54:	42be      	cmp	r6, r7
 8010f56:	db24      	blt.n	8010fa2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010f58:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010f5c:	4438      	add	r0, r7
 8010f5e:	b200      	sxth	r0, r0
 8010f60:	4286      	cmp	r6, r0
 8010f62:	da1e      	bge.n	8010fa2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010f64:	8963      	ldrh	r3, [r4, #10]
 8010f66:	4419      	add	r1, r3
 8010f68:	b209      	sxth	r1, r1
 8010f6a:	4541      	cmp	r1, r8
 8010f6c:	db08      	blt.n	8010f80 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010f6e:	4561      	cmp	r1, ip
 8010f70:	da06      	bge.n	8010f80 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010f72:	89a3      	ldrh	r3, [r4, #12]
 8010f74:	441a      	add	r2, r3
 8010f76:	b212      	sxth	r2, r2
 8010f78:	42ba      	cmp	r2, r7
 8010f7a:	db01      	blt.n	8010f80 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8010f7c:	4282      	cmp	r2, r0
 8010f7e:	db10      	blt.n	8010fa2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010f80:	4b21      	ldr	r3, [pc, #132]	; (8011008 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8010f82:	9304      	str	r3, [sp, #16]
 8010f84:	2302      	movs	r3, #2
 8010f86:	f88d 3014 	strb.w	r3, [sp, #20]
 8010f8a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8010f8c:	2300      	movs	r3, #0
 8010f8e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010f92:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010f96:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010f9a:	6803      	ldr	r3, [r0, #0]
 8010f9c:	a904      	add	r1, sp, #16
 8010f9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010fa0:	4798      	blx	r3
 8010fa2:	1d29      	adds	r1, r5, #4
 8010fa4:	a802      	add	r0, sp, #8
 8010fa6:	f7ff fe49 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010faa:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010fae:	88e0      	ldrh	r0, [r4, #6]
 8010fb0:	7921      	ldrb	r1, [r4, #4]
 8010fb2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8010fb6:	8922      	ldrh	r2, [r4, #8]
 8010fb8:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8010fba:	f88d 1014 	strb.w	r1, [sp, #20]
 8010fbe:	eba3 0808 	sub.w	r8, r3, r8
 8010fc2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8010fc6:	1bdf      	subs	r7, r3, r7
 8010fc8:	b2bb      	uxth	r3, r7
 8010fca:	fa1f f888 	uxth.w	r8, r8
 8010fce:	8967      	ldrh	r7, [r4, #10]
 8010fd0:	89a4      	ldrh	r4, [r4, #12]
 8010fd2:	4440      	add	r0, r8
 8010fd4:	4460      	add	r0, ip
 8010fd6:	441a      	add	r2, r3
 8010fd8:	44b8      	add	r8, r7
 8010fda:	4423      	add	r3, r4
 8010fdc:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010fe0:	4433      	add	r3, r6
 8010fe2:	4432      	add	r2, r6
 8010fe4:	44e0      	add	r8, ip
 8010fe6:	4c09      	ldr	r4, [pc, #36]	; (801100c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8010fe8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8010fea:	9404      	str	r4, [sp, #16]
 8010fec:	f8ad 2018 	strh.w	r2, [sp, #24]
 8010ff0:	f8ad 801a 	strh.w	r8, [sp, #26]
 8010ff4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010ff8:	6803      	ldr	r3, [r0, #0]
 8010ffa:	a904      	add	r1, sp, #16
 8010ffc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8010ffe:	4798      	blx	r3
 8011000:	b008      	add	sp, #32
 8011002:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011006:	bf00      	nop
 8011008:	080234b4 	.word	0x080234b4
 801100c:	080234c8 	.word	0x080234c8

08011010 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011010:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011012:	4604      	mov	r4, r0
 8011014:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011018:	3201      	adds	r2, #1
 801101a:	d112      	bne.n	8011042 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801101c:	6803      	ldr	r3, [r0, #0]
 801101e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011022:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011026:	f8ad 1004 	strh.w	r1, [sp, #4]
 801102a:	2500      	movs	r5, #0
 801102c:	9500      	str	r5, [sp, #0]
 801102e:	466d      	mov	r5, sp
 8011030:	4629      	mov	r1, r5
 8011032:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011036:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011038:	4798      	blx	r3
 801103a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801103e:	e884 0003 	stmia.w	r4, {r0, r1}
 8011042:	4620      	mov	r0, r4
 8011044:	b003      	add	sp, #12
 8011046:	bd30      	pop	{r4, r5, pc}

08011048 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011048:	b513      	push	{r0, r1, r4, lr}
 801104a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801104e:	3301      	adds	r3, #1
 8011050:	4604      	mov	r4, r0
 8011052:	d109      	bne.n	8011068 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011054:	4601      	mov	r1, r0
 8011056:	4668      	mov	r0, sp
 8011058:	f7ff fdf0 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801105c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011060:	8423      	strh	r3, [r4, #32]
 8011062:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011066:	8463      	strh	r3, [r4, #34]	; 0x22
 8011068:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801106c:	b002      	add	sp, #8
 801106e:	bd10      	pop	{r4, pc}

08011070 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011070:	b513      	push	{r0, r1, r4, lr}
 8011072:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8011076:	3301      	adds	r3, #1
 8011078:	4604      	mov	r4, r0
 801107a:	d109      	bne.n	8011090 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801107c:	4601      	mov	r1, r0
 801107e:	4668      	mov	r0, sp
 8011080:	f7ff fddc 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011084:	f8bd 3000 	ldrh.w	r3, [sp]
 8011088:	8423      	strh	r3, [r4, #32]
 801108a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801108e:	8463      	strh	r3, [r4, #34]	; 0x22
 8011090:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8011094:	b002      	add	sp, #8
 8011096:	bd10      	pop	{r4, pc}

08011098 <_ZN8touchgfx6ScreenC1Ev>:
 8011098:	b570      	push	{r4, r5, r6, lr}
 801109a:	4605      	mov	r5, r0
 801109c:	4b16      	ldr	r3, [pc, #88]	; (80110f8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801109e:	f845 3b04 	str.w	r3, [r5], #4
 80110a2:	2300      	movs	r3, #0
 80110a4:	8103      	strh	r3, [r0, #8]
 80110a6:	8143      	strh	r3, [r0, #10]
 80110a8:	8183      	strh	r3, [r0, #12]
 80110aa:	81c3      	strh	r3, [r0, #14]
 80110ac:	8203      	strh	r3, [r0, #16]
 80110ae:	8243      	strh	r3, [r0, #18]
 80110b0:	8283      	strh	r3, [r0, #20]
 80110b2:	82c3      	strh	r3, [r0, #22]
 80110b4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80110b8:	6203      	str	r3, [r0, #32]
 80110ba:	8483      	strh	r3, [r0, #36]	; 0x24
 80110bc:	84c3      	strh	r3, [r0, #38]	; 0x26
 80110be:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80110c2:	4a0e      	ldr	r2, [pc, #56]	; (80110fc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80110c4:	6343      	str	r3, [r0, #52]	; 0x34
 80110c6:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80110ca:	4b0d      	ldr	r3, [pc, #52]	; (8011100 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80110cc:	6042      	str	r2, [r0, #4]
 80110ce:	f9b3 6000 	ldrsh.w	r6, [r3]
 80110d2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80110d4:	4a0b      	ldr	r2, [pc, #44]	; (8011104 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80110d6:	4604      	mov	r4, r0
 80110d8:	2101      	movs	r1, #1
 80110da:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80110de:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80110e2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80110e6:	4628      	mov	r0, r5
 80110e8:	4798      	blx	r3
 80110ea:	6863      	ldr	r3, [r4, #4]
 80110ec:	4628      	mov	r0, r5
 80110ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80110f0:	4631      	mov	r1, r6
 80110f2:	4798      	blx	r3
 80110f4:	4620      	mov	r0, r4
 80110f6:	bd70      	pop	{r4, r5, r6, pc}
 80110f8:	080234f0 	.word	0x080234f0
 80110fc:	0802301c 	.word	0x0802301c
 8011100:	20014fba 	.word	0x20014fba
 8011104:	20014fb8 	.word	0x20014fb8

08011108 <_ZN8touchgfx6Screen4drawEv>:
 8011108:	b507      	push	{r0, r1, r2, lr}
 801110a:	4b09      	ldr	r3, [pc, #36]	; (8011130 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801110c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011110:	4b08      	ldr	r3, [pc, #32]	; (8011134 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011112:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011116:	f9b3 3000 	ldrsh.w	r3, [r3]
 801111a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801111e:	6803      	ldr	r3, [r0, #0]
 8011120:	2100      	movs	r1, #0
 8011122:	9100      	str	r1, [sp, #0]
 8011124:	689b      	ldr	r3, [r3, #8]
 8011126:	4669      	mov	r1, sp
 8011128:	4798      	blx	r3
 801112a:	b003      	add	sp, #12
 801112c:	f85d fb04 	ldr.w	pc, [sp], #4
 8011130:	20014fb8 	.word	0x20014fb8
 8011134:	20014fba 	.word	0x20014fba

08011138 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801113c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011140:	2b00      	cmp	r3, #0
 8011142:	b089      	sub	sp, #36	; 0x24
 8011144:	4680      	mov	r8, r0
 8011146:	460c      	mov	r4, r1
 8011148:	4615      	mov	r5, r2
 801114a:	dd0e      	ble.n	801116a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801114c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011150:	2b00      	cmp	r3, #0
 8011152:	dd0a      	ble.n	801116a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011154:	4628      	mov	r0, r5
 8011156:	f7ff ff5b 	bl	8011010 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801115a:	4621      	mov	r1, r4
 801115c:	f7fe fb7d 	bl	800f85a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011160:	69eb      	ldr	r3, [r5, #28]
 8011162:	b928      	cbnz	r0, 8011170 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011164:	461d      	mov	r5, r3
 8011166:	2b00      	cmp	r3, #0
 8011168:	d1f4      	bne.n	8011154 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801116a:	b009      	add	sp, #36	; 0x24
 801116c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011170:	ae04      	add	r6, sp, #16
 8011172:	2b00      	cmp	r3, #0
 8011174:	f000 80b5 	beq.w	80112e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011178:	682b      	ldr	r3, [r5, #0]
 801117a:	4629      	mov	r1, r5
 801117c:	68db      	ldr	r3, [r3, #12]
 801117e:	a802      	add	r0, sp, #8
 8011180:	4798      	blx	r3
 8011182:	4628      	mov	r0, r5
 8011184:	f7ff ff60 	bl	8011048 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011188:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801118c:	4407      	add	r7, r0
 801118e:	4628      	mov	r0, r5
 8011190:	f7ff ff6e 	bl	8011070 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011194:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011198:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801119c:	f8ad 2014 	strh.w	r2, [sp, #20]
 80111a0:	4418      	add	r0, r3
 80111a2:	4621      	mov	r1, r4
 80111a4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80111a8:	f8ad 0012 	strh.w	r0, [sp, #18]
 80111ac:	b23f      	sxth	r7, r7
 80111ae:	4630      	mov	r0, r6
 80111b0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80111b4:	f8ad 7010 	strh.w	r7, [sp, #16]
 80111b8:	f7fa fe22 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 80111bc:	4628      	mov	r0, r5
 80111be:	f7ff ff27 	bl	8011010 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80111c2:	4602      	mov	r2, r0
 80111c4:	e896 0003 	ldmia.w	r6, {r0, r1}
 80111c8:	ab06      	add	r3, sp, #24
 80111ca:	e883 0003 	stmia.w	r3, {r0, r1}
 80111ce:	4611      	mov	r1, r2
 80111d0:	4618      	mov	r0, r3
 80111d2:	f7fa fe15 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 80111d6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80111da:	f9b4 1000 	ldrsh.w	r1, [r4]
 80111de:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80111e2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80111e6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80111ea:	4299      	cmp	r1, r3
 80111ec:	d10b      	bne.n	8011206 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80111ee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80111f2:	4552      	cmp	r2, sl
 80111f4:	d107      	bne.n	8011206 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80111f6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80111fa:	455a      	cmp	r2, fp
 80111fc:	d103      	bne.n	8011206 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80111fe:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011202:	454a      	cmp	r2, r9
 8011204:	d06d      	beq.n	80112e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011206:	f1bb 0f00 	cmp.w	fp, #0
 801120a:	dd65      	ble.n	80112d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801120c:	f1b9 0f00 	cmp.w	r9, #0
 8011210:	dd62      	ble.n	80112d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011212:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011216:	fa1f f08a 	uxth.w	r0, sl
 801121a:	4552      	cmp	r2, sl
 801121c:	9000      	str	r0, [sp, #0]
 801121e:	da12      	bge.n	8011246 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011220:	9301      	str	r3, [sp, #4]
 8011222:	9b00      	ldr	r3, [sp, #0]
 8011224:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011228:	f8ad 2012 	strh.w	r2, [sp, #18]
 801122c:	1a9a      	subs	r2, r3, r2
 801122e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011232:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011236:	f8ad 2016 	strh.w	r2, [sp, #22]
 801123a:	69ea      	ldr	r2, [r5, #28]
 801123c:	4631      	mov	r1, r6
 801123e:	4640      	mov	r0, r8
 8011240:	f7ff ff7a 	bl	8011138 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011244:	9b01      	ldr	r3, [sp, #4]
 8011246:	f9b4 2000 	ldrsh.w	r2, [r4]
 801124a:	429a      	cmp	r2, r3
 801124c:	b29f      	uxth	r7, r3
 801124e:	da0d      	bge.n	801126c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011250:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011254:	1aba      	subs	r2, r7, r2
 8011256:	f8ad a012 	strh.w	sl, [sp, #18]
 801125a:	f8ad 2014 	strh.w	r2, [sp, #20]
 801125e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011262:	69ea      	ldr	r2, [r5, #28]
 8011264:	4631      	mov	r1, r6
 8011266:	4640      	mov	r0, r8
 8011268:	f7ff ff66 	bl	8011138 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801126c:	8822      	ldrh	r2, [r4, #0]
 801126e:	88a3      	ldrh	r3, [r4, #4]
 8011270:	445f      	add	r7, fp
 8011272:	4413      	add	r3, r2
 8011274:	b29b      	uxth	r3, r3
 8011276:	b2bf      	uxth	r7, r7
 8011278:	b23a      	sxth	r2, r7
 801127a:	b219      	sxth	r1, r3
 801127c:	4291      	cmp	r1, r2
 801127e:	dd0d      	ble.n	801129c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011280:	1bdb      	subs	r3, r3, r7
 8011282:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011286:	f8ad a012 	strh.w	sl, [sp, #18]
 801128a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801128e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011292:	69ea      	ldr	r2, [r5, #28]
 8011294:	4631      	mov	r1, r6
 8011296:	4640      	mov	r0, r8
 8011298:	f7ff ff4e 	bl	8011138 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801129c:	88e2      	ldrh	r2, [r4, #6]
 801129e:	8863      	ldrh	r3, [r4, #2]
 80112a0:	4413      	add	r3, r2
 80112a2:	9a00      	ldr	r2, [sp, #0]
 80112a4:	444a      	add	r2, r9
 80112a6:	b29b      	uxth	r3, r3
 80112a8:	fa1f f982 	uxth.w	r9, r2
 80112ac:	fa0f f289 	sxth.w	r2, r9
 80112b0:	b219      	sxth	r1, r3
 80112b2:	428a      	cmp	r2, r1
 80112b4:	da15      	bge.n	80112e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80112b6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80112ba:	f9b4 0000 	ldrsh.w	r0, [r4]
 80112be:	f8ad 1014 	strh.w	r1, [sp, #20]
 80112c2:	eba3 0309 	sub.w	r3, r3, r9
 80112c6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80112ca:	f8ad 2012 	strh.w	r2, [sp, #18]
 80112ce:	f8ad 3016 	strh.w	r3, [sp, #22]
 80112d2:	69ea      	ldr	r2, [r5, #28]
 80112d4:	4631      	mov	r1, r6
 80112d6:	e001      	b.n	80112dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80112d8:	69ea      	ldr	r2, [r5, #28]
 80112da:	4621      	mov	r1, r4
 80112dc:	4640      	mov	r0, r8
 80112de:	f7ff ff2b 	bl	8011138 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80112e2:	4628      	mov	r0, r5
 80112e4:	f7ff fe94 	bl	8011010 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80112e8:	6861      	ldr	r1, [r4, #4]
 80112ea:	4602      	mov	r2, r0
 80112ec:	6820      	ldr	r0, [r4, #0]
 80112ee:	4633      	mov	r3, r6
 80112f0:	c303      	stmia	r3!, {r0, r1}
 80112f2:	4611      	mov	r1, r2
 80112f4:	4630      	mov	r0, r6
 80112f6:	f7fa fd83 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 80112fa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80112fe:	2b00      	cmp	r3, #0
 8011300:	f77f af33 	ble.w	801116a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011304:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011308:	2b00      	cmp	r3, #0
 801130a:	f77f af2e 	ble.w	801116a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801130e:	4628      	mov	r0, r5
 8011310:	f7ff fe9a 	bl	8011048 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011314:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011318:	1a18      	subs	r0, r3, r0
 801131a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801131e:	4628      	mov	r0, r5
 8011320:	f7ff fea6 	bl	8011070 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011324:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011328:	1a18      	subs	r0, r3, r0
 801132a:	f8ad 0012 	strh.w	r0, [sp, #18]
 801132e:	682b      	ldr	r3, [r5, #0]
 8011330:	4631      	mov	r1, r6
 8011332:	689b      	ldr	r3, [r3, #8]
 8011334:	4628      	mov	r0, r5
 8011336:	4798      	blx	r3
 8011338:	e717      	b.n	801116a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801133a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801133a:	b570      	push	{r4, r5, r6, lr}
 801133c:	460c      	mov	r4, r1
 801133e:	b086      	sub	sp, #24
 8011340:	1d06      	adds	r6, r0, #4
 8011342:	2300      	movs	r3, #0
 8011344:	4631      	mov	r1, r6
 8011346:	4605      	mov	r5, r0
 8011348:	a802      	add	r0, sp, #8
 801134a:	9301      	str	r3, [sp, #4]
 801134c:	f7ff fc76 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011350:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011354:	8822      	ldrh	r2, [r4, #0]
 8011356:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801135a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801135e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011362:	1ad2      	subs	r2, r2, r3
 8011364:	8863      	ldrh	r3, [r4, #2]
 8011366:	f8ad 2010 	strh.w	r2, [sp, #16]
 801136a:	1a5b      	subs	r3, r3, r1
 801136c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8011370:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011374:	aa01      	add	r2, sp, #4
 8011376:	a904      	add	r1, sp, #16
 8011378:	4630      	mov	r0, r6
 801137a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801137e:	f7fa fe17 	bl	800bfb0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011382:	9a01      	ldr	r2, [sp, #4]
 8011384:	b11a      	cbz	r2, 801138e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8011386:	4621      	mov	r1, r4
 8011388:	4628      	mov	r0, r5
 801138a:	f7ff fed5 	bl	8011138 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801138e:	b006      	add	sp, #24
 8011390:	bd70      	pop	{r4, r5, r6, pc}

08011392 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011392:	b530      	push	{r4, r5, lr}
 8011394:	4602      	mov	r2, r0
 8011396:	4604      	mov	r4, r0
 8011398:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801139c:	b085      	sub	sp, #20
 801139e:	460d      	mov	r5, r1
 80113a0:	6851      	ldr	r1, [r2, #4]
 80113a2:	466b      	mov	r3, sp
 80113a4:	c303      	stmia	r3!, {r0, r1}
 80113a6:	4629      	mov	r1, r5
 80113a8:	4668      	mov	r0, sp
 80113aa:	f7fa fd29 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 80113ae:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80113b2:	b12b      	cbz	r3, 80113c0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80113b4:	4669      	mov	r1, sp
 80113b6:	4620      	mov	r0, r4
 80113b8:	f7ff ffbf 	bl	801133a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80113bc:	b005      	add	sp, #20
 80113be:	bd30      	pop	{r4, r5, pc}
 80113c0:	3404      	adds	r4, #4
 80113c2:	4621      	mov	r1, r4
 80113c4:	a802      	add	r0, sp, #8
 80113c6:	f7ff fc39 	bl	8010c3c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80113ca:	f8bd 3000 	ldrh.w	r3, [sp]
 80113ce:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80113d2:	1a9b      	subs	r3, r3, r2
 80113d4:	f8ad 3000 	strh.w	r3, [sp]
 80113d8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80113dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80113e0:	4669      	mov	r1, sp
 80113e2:	1a9b      	subs	r3, r3, r2
 80113e4:	4620      	mov	r0, r4
 80113e6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80113ea:	f7fa fda8 	bl	800bf3e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80113ee:	e7e5      	b.n	80113bc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080113f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80113f0:	680a      	ldr	r2, [r1, #0]
 80113f2:	460b      	mov	r3, r1
 80113f4:	6992      	ldr	r2, [r2, #24]
 80113f6:	1d01      	adds	r1, r0, #4
 80113f8:	4618      	mov	r0, r3
 80113fa:	4710      	bx	r2

080113fc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80113fc:	4298      	cmp	r0, r3
 80113fe:	d200      	bcs.n	8011402 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8011400:	b913      	cbnz	r3, 8011408 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8011402:	440a      	add	r2, r1
 8011404:	b210      	sxth	r0, r2
 8011406:	4770      	bx	lr
 8011408:	ee07 0a90 	vmov	s15, r0
 801140c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8011410:	ee07 3a90 	vmov	s15, r3
 8011414:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011418:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801141c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011420:	ee37 7a66 	vsub.f32	s14, s14, s13
 8011424:	ee07 2a90 	vmov	s15, r2
 8011428:	ee67 5a07 	vmul.f32	s11, s14, s14
 801142c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8011430:	eee5 6a87 	vfma.f32	s13, s11, s14
 8011434:	ee07 1a90 	vmov	s15, r1
 8011438:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801143c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8011440:	eee6 7a26 	vfma.f32	s15, s12, s13
 8011444:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801144c:	bfcc      	ite	gt
 801144e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8011452:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8011456:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801145a:	ee17 3a90 	vmov	r3, s15
 801145e:	b218      	sxth	r0, r3
 8011460:	4770      	bx	lr

08011462 <_ZN8touchgfx12TextProviderC1Ev>:
 8011462:	b538      	push	{r3, r4, r5, lr}
 8011464:	2500      	movs	r5, #0
 8011466:	2302      	movs	r3, #2
 8011468:	4604      	mov	r4, r0
 801146a:	e9c0 5500 	strd	r5, r5, [r0]
 801146e:	7403      	strb	r3, [r0, #16]
 8011470:	6145      	str	r5, [r0, #20]
 8011472:	7605      	strb	r5, [r0, #24]
 8011474:	83c5      	strh	r5, [r0, #30]
 8011476:	8405      	strh	r5, [r0, #32]
 8011478:	86c5      	strh	r5, [r0, #54]	; 0x36
 801147a:	8705      	strh	r5, [r0, #56]	; 0x38
 801147c:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801147e:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8011482:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8011486:	220e      	movs	r2, #14
 8011488:	4629      	mov	r1, r5
 801148a:	304c      	adds	r0, #76	; 0x4c
 801148c:	f00f f918 	bl	80206c0 <memset>
 8011490:	2301      	movs	r3, #1
 8011492:	4620      	mov	r0, r4
 8011494:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8011498:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801149c:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80114a0:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80114a4:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80114a8:	f7f3 fd00 	bl	8004eac <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80114ac:	4620      	mov	r0, r4
 80114ae:	bd38      	pop	{r3, r4, r5, pc}

080114b0 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80114b0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80114b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80114b6:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80114b8:	fab0 f080 	clz	r0, r0
 80114bc:	0940      	lsrs	r0, r0, #5
 80114be:	4770      	bx	lr

080114c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80114c0:	b530      	push	{r4, r5, lr}
 80114c2:	2500      	movs	r5, #0
 80114c4:	2401      	movs	r4, #1
 80114c6:	6843      	ldr	r3, [r0, #4]
 80114c8:	b913      	cbnz	r3, 80114d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80114ca:	6803      	ldr	r3, [r0, #0]
 80114cc:	b313      	cbz	r3, 8011514 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80114ce:	6043      	str	r3, [r0, #4]
 80114d0:	7e03      	ldrb	r3, [r0, #24]
 80114d2:	b143      	cbz	r3, 80114e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80114d4:	6943      	ldr	r3, [r0, #20]
 80114d6:	b12b      	cbz	r3, 80114e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80114d8:	881a      	ldrh	r2, [r3, #0]
 80114da:	b11a      	cbz	r2, 80114e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80114dc:	1c9a      	adds	r2, r3, #2
 80114de:	6142      	str	r2, [r0, #20]
 80114e0:	8818      	ldrh	r0, [r3, #0]
 80114e2:	bd30      	pop	{r4, r5, pc}
 80114e4:	7605      	strb	r5, [r0, #24]
 80114e6:	6843      	ldr	r3, [r0, #4]
 80114e8:	8819      	ldrh	r1, [r3, #0]
 80114ea:	b199      	cbz	r1, 8011514 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80114ec:	1c9a      	adds	r2, r3, #2
 80114ee:	2902      	cmp	r1, #2
 80114f0:	6042      	str	r2, [r0, #4]
 80114f2:	d1f5      	bne.n	80114e0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80114f4:	7c03      	ldrb	r3, [r0, #16]
 80114f6:	2b01      	cmp	r3, #1
 80114f8:	d8e5      	bhi.n	80114c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80114fa:	1c5a      	adds	r2, r3, #1
 80114fc:	3302      	adds	r3, #2
 80114fe:	7402      	strb	r2, [r0, #16]
 8011500:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011504:	6143      	str	r3, [r0, #20]
 8011506:	2b00      	cmp	r3, #0
 8011508:	d0dd      	beq.n	80114c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801150a:	881b      	ldrh	r3, [r3, #0]
 801150c:	2b00      	cmp	r3, #0
 801150e:	d0da      	beq.n	80114c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011510:	7604      	strb	r4, [r0, #24]
 8011512:	e7d8      	b.n	80114c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011514:	2000      	movs	r0, #0
 8011516:	e7e4      	b.n	80114e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011518:	b430      	push	{r4, r5}
 801151a:	6001      	str	r1, [r0, #0]
 801151c:	2100      	movs	r1, #0
 801151e:	6041      	str	r1, [r0, #4]
 8011520:	6815      	ldr	r5, [r2, #0]
 8011522:	6085      	str	r5, [r0, #8]
 8011524:	6852      	ldr	r2, [r2, #4]
 8011526:	6443      	str	r3, [r0, #68]	; 0x44
 8011528:	9b02      	ldr	r3, [sp, #8]
 801152a:	60c2      	str	r2, [r0, #12]
 801152c:	7401      	strb	r1, [r0, #16]
 801152e:	6141      	str	r1, [r0, #20]
 8011530:	7601      	strb	r1, [r0, #24]
 8011532:	8701      	strh	r1, [r0, #56]	; 0x38
 8011534:	8401      	strh	r1, [r0, #32]
 8011536:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801153a:	6483      	str	r3, [r0, #72]	; 0x48
 801153c:	bc30      	pop	{r4, r5}
 801153e:	f7f3 bcb5 	b.w	8004eac <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011542 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8011542:	b408      	push	{r3}
 8011544:	b510      	push	{r4, lr}
 8011546:	b085      	sub	sp, #20
 8011548:	ac07      	add	r4, sp, #28
 801154a:	f854 3b04 	ldr.w	r3, [r4], #4
 801154e:	9300      	str	r3, [sp, #0]
 8011550:	4613      	mov	r3, r2
 8011552:	4622      	mov	r2, r4
 8011554:	9403      	str	r4, [sp, #12]
 8011556:	f7ff ffdf 	bl	8011518 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801155a:	b005      	add	sp, #20
 801155c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011560:	b001      	add	sp, #4
 8011562:	4770      	bx	lr

08011564 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011564:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011566:	4605      	mov	r5, r0
 8011568:	4608      	mov	r0, r1
 801156a:	b1e9      	cbz	r1, 80115a8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801156c:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8011570:	460b      	mov	r3, r1
 8011572:	f101 0708 	add.w	r7, r1, #8
 8011576:	4622      	mov	r2, r4
 8011578:	6818      	ldr	r0, [r3, #0]
 801157a:	6859      	ldr	r1, [r3, #4]
 801157c:	4626      	mov	r6, r4
 801157e:	c603      	stmia	r6!, {r0, r1}
 8011580:	3308      	adds	r3, #8
 8011582:	42bb      	cmp	r3, r7
 8011584:	4634      	mov	r4, r6
 8011586:	d1f7      	bne.n	8011578 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8011588:	6818      	ldr	r0, [r3, #0]
 801158a:	6030      	str	r0, [r6, #0]
 801158c:	889b      	ldrh	r3, [r3, #4]
 801158e:	80b3      	strh	r3, [r6, #4]
 8011590:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8011594:	015b      	lsls	r3, r3, #5
 8011596:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801159a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801159e:	430b      	orrs	r3, r1
 80115a0:	425b      	negs	r3, r3
 80115a2:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80115a6:	4610      	mov	r0, r2
 80115a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080115aa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80115aa:	b538      	push	{r3, r4, r5, lr}
 80115ac:	460c      	mov	r4, r1
 80115ae:	6811      	ldr	r1, [r2, #0]
 80115b0:	4610      	mov	r0, r2
 80115b2:	68cd      	ldr	r5, [r1, #12]
 80115b4:	4619      	mov	r1, r3
 80115b6:	47a8      	blx	r5
 80115b8:	2800      	cmp	r0, #0
 80115ba:	bf08      	it	eq
 80115bc:	4620      	moveq	r0, r4
 80115be:	bd38      	pop	{r3, r4, r5, pc}

080115c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80115c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80115c2:	4604      	mov	r4, r0
 80115c4:	4615      	mov	r5, r2
 80115c6:	4608      	mov	r0, r1
 80115c8:	b93a      	cbnz	r2, 80115da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80115ca:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80115ce:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80115d2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80115d6:	4628      	mov	r0, r5
 80115d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80115da:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80115de:	8893      	ldrh	r3, [r2, #4]
 80115e0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80115e4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80115e8:	79ee      	ldrb	r6, [r5, #7]
 80115ea:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80115ee:	4316      	orrs	r6, r2
 80115f0:	19da      	adds	r2, r3, r7
 80115f2:	b291      	uxth	r1, r2
 80115f4:	291d      	cmp	r1, #29
 80115f6:	b2b7      	uxth	r7, r6
 80115f8:	d87a      	bhi.n	80116f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80115fa:	2201      	movs	r2, #1
 80115fc:	408a      	lsls	r2, r1
 80115fe:	4975      	ldr	r1, [pc, #468]	; (80117d4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8011600:	420a      	tst	r2, r1
 8011602:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8011606:	d12d      	bne.n	8011664 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011608:	f412 7f60 	tst.w	r2, #896	; 0x380
 801160c:	d070      	beq.n	80116f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801160e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8011612:	462b      	mov	r3, r5
 8011614:	f105 0e08 	add.w	lr, r5, #8
 8011618:	4615      	mov	r5, r2
 801161a:	6818      	ldr	r0, [r3, #0]
 801161c:	6859      	ldr	r1, [r3, #4]
 801161e:	4694      	mov	ip, r2
 8011620:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011624:	3308      	adds	r3, #8
 8011626:	4573      	cmp	r3, lr
 8011628:	4662      	mov	r2, ip
 801162a:	d1f6      	bne.n	801161a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801162c:	6818      	ldr	r0, [r3, #0]
 801162e:	f8cc 0000 	str.w	r0, [ip]
 8011632:	889b      	ldrh	r3, [r3, #4]
 8011634:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011638:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801163c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8011640:	b2b3      	uxth	r3, r6
 8011642:	1aca      	subs	r2, r1, r3
 8011644:	b292      	uxth	r2, r2
 8011646:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801164a:	10d2      	asrs	r2, r2, #3
 801164c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8011650:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8011654:	4302      	orrs	r2, r0
 8011656:	1bcf      	subs	r7, r1, r7
 8011658:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801165c:	1afb      	subs	r3, r7, r3
 801165e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8011662:	e7b8      	b.n	80115d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8011664:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8011666:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801166a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801166c:	f640 6333 	movw	r3, #3635	; 0xe33
 8011670:	4299      	cmp	r1, r3
 8011672:	d110      	bne.n	8011696 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8011674:	6803      	ldr	r3, [r0, #0]
 8011676:	68db      	ldr	r3, [r3, #12]
 8011678:	4798      	blx	r3
 801167a:	7b41      	ldrb	r1, [r0, #13]
 801167c:	00cb      	lsls	r3, r1, #3
 801167e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011682:	7a03      	ldrb	r3, [r0, #8]
 8011684:	0648      	lsls	r0, r1, #25
 8011686:	ea43 0302 	orr.w	r3, r3, r2
 801168a:	bf44      	itt	mi
 801168c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011690:	b21b      	sxthmi	r3, r3
 8011692:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011696:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801169a:	443b      	add	r3, r7
 801169c:	4433      	add	r3, r6
 801169e:	b29b      	uxth	r3, r3
 80116a0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80116a4:	462a      	mov	r2, r5
 80116a6:	f105 0c08 	add.w	ip, r5, #8
 80116aa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80116ae:	4635      	mov	r5, r6
 80116b0:	6810      	ldr	r0, [r2, #0]
 80116b2:	6851      	ldr	r1, [r2, #4]
 80116b4:	4637      	mov	r7, r6
 80116b6:	c703      	stmia	r7!, {r0, r1}
 80116b8:	3208      	adds	r2, #8
 80116ba:	4562      	cmp	r2, ip
 80116bc:	463e      	mov	r6, r7
 80116be:	d1f7      	bne.n	80116b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80116c0:	6810      	ldr	r0, [r2, #0]
 80116c2:	6038      	str	r0, [r7, #0]
 80116c4:	8892      	ldrh	r2, [r2, #4]
 80116c6:	80ba      	strh	r2, [r7, #4]
 80116c8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80116cc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80116d0:	10db      	asrs	r3, r3, #3
 80116d2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80116d6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80116da:	4313      	orrs	r3, r2
 80116dc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80116e0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80116e4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80116e8:	1a9b      	subs	r3, r3, r2
 80116ea:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80116ee:	e772      	b.n	80115d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80116f0:	f023 0204 	bic.w	r2, r3, #4
 80116f4:	f640 611b 	movw	r1, #3611	; 0xe1b
 80116f8:	428a      	cmp	r2, r1
 80116fa:	d003      	beq.n	8011704 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80116fc:	f640 621d 	movw	r2, #3613	; 0xe1d
 8011700:	4293      	cmp	r3, r2
 8011702:	d120      	bne.n	8011746 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8011704:	3b01      	subs	r3, #1
 8011706:	4602      	mov	r2, r0
 8011708:	b29b      	uxth	r3, r3
 801170a:	4629      	mov	r1, r5
 801170c:	4620      	mov	r0, r4
 801170e:	f7ff ff4c 	bl	80115aa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011712:	7b41      	ldrb	r1, [r0, #13]
 8011714:	00cb      	lsls	r3, r1, #3
 8011716:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801171a:	7a03      	ldrb	r3, [r0, #8]
 801171c:	0649      	lsls	r1, r1, #25
 801171e:	ea43 0302 	orr.w	r3, r3, r2
 8011722:	bf44      	itt	mi
 8011724:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011728:	b21b      	sxthmi	r3, r3
 801172a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801172e:	7b6b      	ldrb	r3, [r5, #13]
 8011730:	7aaa      	ldrb	r2, [r5, #10]
 8011732:	005b      	lsls	r3, r3, #1
 8011734:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011738:	4313      	orrs	r3, r2
 801173a:	115a      	asrs	r2, r3, #5
 801173c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8011740:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8011744:	e036      	b.n	80117b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8011746:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801174a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801174e:	7a2a      	ldrb	r2, [r5, #8]
 8011750:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8011754:	ea42 0201 	orr.w	r2, r2, r1
 8011758:	bf1c      	itt	ne
 801175a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801175e:	b212      	sxthne	r2, r2
 8011760:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8011764:	f640 6109 	movw	r1, #3593	; 0xe09
 8011768:	f023 0210 	bic.w	r2, r3, #16
 801176c:	428a      	cmp	r2, r1
 801176e:	d003      	beq.n	8011778 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8011770:	f640 6213 	movw	r2, #3603	; 0xe13
 8011774:	4293      	cmp	r3, r2
 8011776:	d12a      	bne.n	80117ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8011778:	7b6e      	ldrb	r6, [r5, #13]
 801177a:	0076      	lsls	r6, r6, #1
 801177c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8011780:	7aae      	ldrb	r6, [r5, #10]
 8011782:	4316      	orrs	r6, r2
 8011784:	f640 6213 	movw	r2, #3603	; 0xe13
 8011788:	4293      	cmp	r3, r2
 801178a:	bf18      	it	ne
 801178c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011790:	4602      	mov	r2, r0
 8011792:	bf14      	ite	ne
 8011794:	b29b      	uxthne	r3, r3
 8011796:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801179a:	4629      	mov	r1, r5
 801179c:	4620      	mov	r0, r4
 801179e:	f7ff ff04 	bl	80115aa <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80117a2:	7b43      	ldrb	r3, [r0, #13]
 80117a4:	7a82      	ldrb	r2, [r0, #10]
 80117a6:	005b      	lsls	r3, r3, #1
 80117a8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80117ac:	4313      	orrs	r3, r2
 80117ae:	1af6      	subs	r6, r6, r3
 80117b0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80117b4:	7b69      	ldrb	r1, [r5, #13]
 80117b6:	00cb      	lsls	r3, r1, #3
 80117b8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80117bc:	7a2b      	ldrb	r3, [r5, #8]
 80117be:	4313      	orrs	r3, r2
 80117c0:	064a      	lsls	r2, r1, #25
 80117c2:	bf44      	itt	mi
 80117c4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80117c8:	b21b      	sxthmi	r3, r3
 80117ca:	1bdb      	subs	r3, r3, r7
 80117cc:	e747      	b.n	801165e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80117ce:	2300      	movs	r3, #0
 80117d0:	e7b6      	b.n	8011740 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80117d2:	bf00      	nop
 80117d4:	3fc00079 	.word	0x3fc00079

080117d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80117d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80117dc:	4604      	mov	r4, r0
 80117de:	b942      	cbnz	r2, 80117f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80117e0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80117e4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80117e8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80117ec:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80117f0:	e047      	b.n	8011882 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80117f2:	7b51      	ldrb	r1, [r2, #13]
 80117f4:	8893      	ldrh	r3, [r2, #4]
 80117f6:	010d      	lsls	r5, r1, #4
 80117f8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80117fc:	79d5      	ldrb	r5, [r2, #7]
 80117fe:	4305      	orrs	r5, r0
 8011800:	2d04      	cmp	r5, #4
 8011802:	bfcc      	ite	gt
 8011804:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011808:	f04f 0e01 	movle.w	lr, #1
 801180c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8011810:	f200 80ab 	bhi.w	801196a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8011814:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8011818:	4283      	cmp	r3, r0
 801181a:	d216      	bcs.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801181c:	f240 605b 	movw	r0, #1627	; 0x65b
 8011820:	4283      	cmp	r3, r0
 8011822:	d859      	bhi.n	80118d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011824:	f240 6057 	movw	r0, #1623	; 0x657
 8011828:	4283      	cmp	r3, r0
 801182a:	d20e      	bcs.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801182c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011830:	d24a      	bcs.n	80118c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011832:	f240 604e 	movw	r0, #1614	; 0x64e
 8011836:	4283      	cmp	r3, r0
 8011838:	d207      	bcs.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801183a:	f240 601a 	movw	r0, #1562	; 0x61a
 801183e:	4283      	cmp	r3, r0
 8011840:	d02a      	beq.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011842:	d821      	bhi.n	8011888 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011844:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8011848:	d35b      	bcc.n	8011902 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801184a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801184e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011852:	f040 80d0 	bne.w	80119f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011856:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801185a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801185e:	f040 80ca 	bne.w	80119f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011862:	00cb      	lsls	r3, r1, #3
 8011864:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011868:	7a13      	ldrb	r3, [r2, #8]
 801186a:	0649      	lsls	r1, r1, #25
 801186c:	ea43 0300 	orr.w	r3, r3, r0
 8011870:	bf44      	itt	mi
 8011872:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011876:	b21b      	sxthmi	r3, r3
 8011878:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801187c:	1b5d      	subs	r5, r3, r5
 801187e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011882:	4610      	mov	r0, r2
 8011884:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011888:	f240 604b 	movw	r0, #1611	; 0x64b
 801188c:	4283      	cmp	r3, r0
 801188e:	d338      	bcc.n	8011902 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011890:	f240 604c 	movw	r0, #1612	; 0x64c
 8011894:	4283      	cmp	r3, r0
 8011896:	d9d8      	bls.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011898:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801189c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80118a0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80118a4:	f040 80f2 	bne.w	8011a8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80118a8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80118ac:	f040 80ee 	bne.w	8011a8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80118b0:	00cb      	lsls	r3, r1, #3
 80118b2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80118b6:	7a13      	ldrb	r3, [r2, #8]
 80118b8:	064e      	lsls	r6, r1, #25
 80118ba:	ea43 0300 	orr.w	r3, r3, r0
 80118be:	bf44      	itt	mi
 80118c0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80118c4:	b21b      	sxthmi	r3, r3
 80118c6:	e7d9      	b.n	801187c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80118c8:	f240 6054 	movw	r0, #1620	; 0x654
 80118cc:	4283      	cmp	r3, r0
 80118ce:	d8e3      	bhi.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80118d0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80118d4:	d9e0      	bls.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80118d6:	e7b8      	b.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80118d8:	f240 6074 	movw	r0, #1652	; 0x674
 80118dc:	4283      	cmp	r3, r0
 80118de:	d0b4      	beq.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80118e0:	d82d      	bhi.n	801193e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80118e2:	f240 605e 	movw	r0, #1630	; 0x65e
 80118e6:	4283      	cmp	r3, r0
 80118e8:	d804      	bhi.n	80118f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80118ea:	f240 605d 	movw	r0, #1629	; 0x65d
 80118ee:	4283      	cmp	r3, r0
 80118f0:	d3d2      	bcc.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80118f2:	e7aa      	b.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80118f4:	f240 605f 	movw	r0, #1631	; 0x65f
 80118f8:	4283      	cmp	r3, r0
 80118fa:	d0cd      	beq.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80118fc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8011900:	d0a3      	beq.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011902:	00cb      	lsls	r3, r1, #3
 8011904:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8011908:	7a13      	ldrb	r3, [r2, #8]
 801190a:	0649      	lsls	r1, r1, #25
 801190c:	ea43 0300 	orr.w	r3, r3, r0
 8011910:	bf44      	itt	mi
 8011912:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011916:	b21b      	sxthmi	r3, r3
 8011918:	1b5d      	subs	r5, r3, r5
 801191a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801191e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011922:	7b53      	ldrb	r3, [r2, #13]
 8011924:	015b      	lsls	r3, r3, #5
 8011926:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801192a:	7993      	ldrb	r3, [r2, #6]
 801192c:	430b      	orrs	r3, r1
 801192e:	005b      	lsls	r3, r3, #1
 8011930:	2105      	movs	r1, #5
 8011932:	fb93 f3f1 	sdiv	r3, r3, r1
 8011936:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801193a:	440b      	add	r3, r1
 801193c:	e756      	b.n	80117ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801193e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8011942:	4283      	cmp	r3, r0
 8011944:	d809      	bhi.n	801195a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011946:	f240 60df 	movw	r0, #1759	; 0x6df
 801194a:	4283      	cmp	r3, r0
 801194c:	f4bf af7d 	bcs.w	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011950:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8011954:	2b05      	cmp	r3, #5
 8011956:	d8d4      	bhi.n	8011902 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011958:	e777      	b.n	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801195a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801195e:	4283      	cmp	r3, r0
 8011960:	d09a      	beq.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011962:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8011966:	4283      	cmp	r3, r0
 8011968:	e7ca      	b.n	8011900 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801196a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801196e:	d22b      	bcs.n	80119c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011970:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8011974:	4283      	cmp	r3, r0
 8011976:	d28f      	bcs.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011978:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801197c:	4283      	cmp	r3, r0
 801197e:	d816      	bhi.n	80119ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011980:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8011984:	4283      	cmp	r3, r0
 8011986:	f4bf af60 	bcs.w	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801198a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801198e:	4283      	cmp	r3, r0
 8011990:	d80a      	bhi.n	80119a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011992:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8011996:	4283      	cmp	r3, r0
 8011998:	f4bf af57 	bcs.w	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801199c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80119a0:	4283      	cmp	r3, r0
 80119a2:	f43f af79 	beq.w	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80119a6:	e7ac      	b.n	8011902 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80119a8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80119ac:	e7f8      	b.n	80119a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80119ae:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80119b2:	4283      	cmp	r3, r0
 80119b4:	d802      	bhi.n	80119bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80119b6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80119ba:	e798      	b.n	80118ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80119bc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80119c0:	4283      	cmp	r3, r0
 80119c2:	f47f af42 	bne.w	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80119c6:	e767      	b.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80119c8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80119cc:	4283      	cmp	r3, r0
 80119ce:	f43f af63 	beq.w	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80119d2:	d802      	bhi.n	80119da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80119d4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80119d8:	e7f2      	b.n	80119c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80119da:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80119de:	4283      	cmp	r3, r0
 80119e0:	d805      	bhi.n	80119ee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80119e2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80119e6:	4283      	cmp	r3, r0
 80119e8:	f4ff af2f 	bcc.w	801184a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80119ec:	e754      	b.n	8011898 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80119ee:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80119f2:	4283      	cmp	r3, r0
 80119f4:	e7af      	b.n	8011956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80119f6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80119fa:	4617      	mov	r7, r2
 80119fc:	f102 0808 	add.w	r8, r2, #8
 8011a00:	4666      	mov	r6, ip
 8011a02:	6838      	ldr	r0, [r7, #0]
 8011a04:	6879      	ldr	r1, [r7, #4]
 8011a06:	46e6      	mov	lr, ip
 8011a08:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011a0c:	3708      	adds	r7, #8
 8011a0e:	4547      	cmp	r7, r8
 8011a10:	46f4      	mov	ip, lr
 8011a12:	d1f6      	bne.n	8011a02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011a14:	6838      	ldr	r0, [r7, #0]
 8011a16:	f8ce 0000 	str.w	r0, [lr]
 8011a1a:	88b9      	ldrh	r1, [r7, #4]
 8011a1c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011a20:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8011a24:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011a28:	d009      	beq.n	8011a3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8011a2a:	7b51      	ldrb	r1, [r2, #13]
 8011a2c:	7992      	ldrb	r2, [r2, #6]
 8011a2e:	0149      	lsls	r1, r1, #5
 8011a30:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011a34:	4311      	orrs	r1, r2
 8011a36:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011a3a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8011a3e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011a42:	b2ad      	uxth	r5, r5
 8011a44:	d00d      	beq.n	8011a62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8011a46:	442b      	add	r3, r5
 8011a48:	b29b      	uxth	r3, r3
 8011a4a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011a4e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011a52:	10db      	asrs	r3, r3, #3
 8011a54:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011a58:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011a5c:	4313      	orrs	r3, r2
 8011a5e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011a62:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8011a66:	00cb      	lsls	r3, r1, #3
 8011a68:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011a6c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8011a70:	064f      	lsls	r7, r1, #25
 8011a72:	ea43 0302 	orr.w	r3, r3, r2
 8011a76:	bf44      	itt	mi
 8011a78:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011a7c:	b21b      	sxthmi	r3, r3
 8011a7e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8011a82:	1b5b      	subs	r3, r3, r5
 8011a84:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8011a88:	4632      	mov	r2, r6
 8011a8a:	e6fa      	b.n	8011882 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011a8c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8011a90:	4617      	mov	r7, r2
 8011a92:	f102 0908 	add.w	r9, r2, #8
 8011a96:	4666      	mov	r6, ip
 8011a98:	6838      	ldr	r0, [r7, #0]
 8011a9a:	6879      	ldr	r1, [r7, #4]
 8011a9c:	46e0      	mov	r8, ip
 8011a9e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011aa2:	3708      	adds	r7, #8
 8011aa4:	454f      	cmp	r7, r9
 8011aa6:	46c4      	mov	ip, r8
 8011aa8:	d1f6      	bne.n	8011a98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8011aaa:	6838      	ldr	r0, [r7, #0]
 8011aac:	f8c8 0000 	str.w	r0, [r8]
 8011ab0:	88b9      	ldrh	r1, [r7, #4]
 8011ab2:	f8a8 1004 	strh.w	r1, [r8, #4]
 8011ab6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8011aba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011abe:	d009      	beq.n	8011ad4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8011ac0:	7b51      	ldrb	r1, [r2, #13]
 8011ac2:	7992      	ldrb	r2, [r2, #6]
 8011ac4:	0149      	lsls	r1, r1, #5
 8011ac6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011aca:	4311      	orrs	r1, r2
 8011acc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011ad0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8011ad4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011ad8:	d00e      	beq.n	8011af8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8011ada:	eba3 030e 	sub.w	r3, r3, lr
 8011ade:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8011ae2:	b29b      	uxth	r3, r3
 8011ae4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011ae8:	10db      	asrs	r3, r3, #3
 8011aea:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011aee:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011af2:	4313      	orrs	r3, r2
 8011af4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8011af8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8011afc:	00cb      	lsls	r3, r1, #3
 8011afe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011b02:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8011b06:	0648      	lsls	r0, r1, #25
 8011b08:	ea43 0302 	orr.w	r3, r3, r2
 8011b0c:	bf44      	itt	mi
 8011b0e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011b12:	b21b      	sxthmi	r3, r3
 8011b14:	1b5d      	subs	r5, r3, r5
 8011b16:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8011b1a:	e7b5      	b.n	8011a88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08011b1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8011b1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b20:	461e      	mov	r6, r3
 8011b22:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011b24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011b28:	4604      	mov	r4, r0
 8011b2a:	4617      	mov	r7, r2
 8011b2c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011b30:	f7f3 f97a 	bl	8004e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011b34:	4605      	mov	r5, r0
 8011b36:	b918      	cbnz	r0, 8011b40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011b38:	6030      	str	r0, [r6, #0]
 8011b3a:	4628      	mov	r0, r5
 8011b3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011b40:	683b      	ldr	r3, [r7, #0]
 8011b42:	4601      	mov	r1, r0
 8011b44:	68db      	ldr	r3, [r3, #12]
 8011b46:	4638      	mov	r0, r7
 8011b48:	4798      	blx	r3
 8011b4a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011b4e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011b52:	4602      	mov	r2, r0
 8011b54:	6030      	str	r0, [r6, #0]
 8011b56:	d213      	bcs.n	8011b80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8011b58:	4643      	mov	r3, r8
 8011b5a:	4639      	mov	r1, r7
 8011b5c:	4620      	mov	r0, r4
 8011b5e:	f7ff fe3b 	bl	80117d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011b62:	6030      	str	r0, [r6, #0]
 8011b64:	6833      	ldr	r3, [r6, #0]
 8011b66:	b143      	cbz	r3, 8011b7a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8011b68:	7b5a      	ldrb	r2, [r3, #13]
 8011b6a:	7a9b      	ldrb	r3, [r3, #10]
 8011b6c:	0052      	lsls	r2, r2, #1
 8011b6e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011b72:	4313      	orrs	r3, r2
 8011b74:	bf0c      	ite	eq
 8011b76:	2301      	moveq	r3, #1
 8011b78:	2300      	movne	r3, #0
 8011b7a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8011b7e:	e7dc      	b.n	8011b3a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8011b80:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8011b84:	b29b      	uxth	r3, r3
 8011b86:	2b7f      	cmp	r3, #127	; 0x7f
 8011b88:	d804      	bhi.n	8011b94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8011b8a:	4639      	mov	r1, r7
 8011b8c:	4620      	mov	r0, r4
 8011b8e:	f7ff fd17 	bl	80115c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011b92:	e7e6      	b.n	8011b62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8011b94:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011b98:	2b00      	cmp	r3, #0
 8011b9a:	d0e3      	beq.n	8011b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011b9c:	f640 1302 	movw	r3, #2306	; 0x902
 8011ba0:	429d      	cmp	r5, r3
 8011ba2:	d1df      	bne.n	8011b64 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011ba4:	4601      	mov	r1, r0
 8011ba6:	4620      	mov	r0, r4
 8011ba8:	f7ff fcdc 	bl	8011564 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011bac:	e7d9      	b.n	8011b62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08011bae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8011bae:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011bb2:	461e      	mov	r6, r3
 8011bb4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011bb6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011bba:	4604      	mov	r4, r0
 8011bbc:	4617      	mov	r7, r2
 8011bbe:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011bc2:	f7f3 f931 	bl	8004e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011bc6:	4605      	mov	r5, r0
 8011bc8:	b918      	cbnz	r0, 8011bd2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8011bca:	6030      	str	r0, [r6, #0]
 8011bcc:	4628      	mov	r0, r5
 8011bce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011bd2:	683b      	ldr	r3, [r7, #0]
 8011bd4:	4601      	mov	r1, r0
 8011bd6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8011bda:	4638      	mov	r0, r7
 8011bdc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8011be0:	47c8      	blx	r9
 8011be2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011be6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011bea:	4602      	mov	r2, r0
 8011bec:	6030      	str	r0, [r6, #0]
 8011bee:	d213      	bcs.n	8011c18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8011bf0:	4643      	mov	r3, r8
 8011bf2:	4639      	mov	r1, r7
 8011bf4:	4620      	mov	r0, r4
 8011bf6:	f7ff fdef 	bl	80117d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011bfa:	6030      	str	r0, [r6, #0]
 8011bfc:	6833      	ldr	r3, [r6, #0]
 8011bfe:	b143      	cbz	r3, 8011c12 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8011c00:	7b5a      	ldrb	r2, [r3, #13]
 8011c02:	7a9b      	ldrb	r3, [r3, #10]
 8011c04:	0052      	lsls	r2, r2, #1
 8011c06:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011c0a:	4313      	orrs	r3, r2
 8011c0c:	bf0c      	ite	eq
 8011c0e:	2301      	moveq	r3, #1
 8011c10:	2300      	movne	r3, #0
 8011c12:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8011c16:	e7d9      	b.n	8011bcc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8011c18:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8011c1c:	b29b      	uxth	r3, r3
 8011c1e:	2b7f      	cmp	r3, #127	; 0x7f
 8011c20:	d804      	bhi.n	8011c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8011c22:	4639      	mov	r1, r7
 8011c24:	4620      	mov	r0, r4
 8011c26:	f7ff fccb 	bl	80115c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011c2a:	e7e6      	b.n	8011bfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8011c2c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011c30:	2b00      	cmp	r3, #0
 8011c32:	d0e3      	beq.n	8011bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011c34:	f640 1302 	movw	r3, #2306	; 0x902
 8011c38:	429d      	cmp	r5, r3
 8011c3a:	d1df      	bne.n	8011bfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8011c3c:	4601      	mov	r1, r0
 8011c3e:	4620      	mov	r0, r4
 8011c40:	f7ff fc90 	bl	8011564 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011c44:	e7d9      	b.n	8011bfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08011c46 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8011c46:	b510      	push	{r4, lr}
 8011c48:	4604      	mov	r4, r0
 8011c4a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8011c4e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011c50:	b1f1      	cbz	r1, 8011c90 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8011c52:	2b0a      	cmp	r3, #10
 8011c54:	d02f      	beq.n	8011cb6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8011c56:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8011c58:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8011c5c:	3901      	subs	r1, #1
 8011c5e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8011c60:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8011c64:	1c51      	adds	r1, r2, #1
 8011c66:	b289      	uxth	r1, r1
 8011c68:	2901      	cmp	r1, #1
 8011c6a:	bf84      	itt	hi
 8011c6c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8011c70:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8011c72:	f103 0201 	add.w	r2, r3, #1
 8011c76:	8722      	strh	r2, [r4, #56]	; 0x38
 8011c78:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8011c7a:	bf98      	it	ls
 8011c7c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8011c7e:	4413      	add	r3, r2
 8011c80:	b29b      	uxth	r3, r3
 8011c82:	2b09      	cmp	r3, #9
 8011c84:	bf88      	it	hi
 8011c86:	3b0a      	subhi	r3, #10
 8011c88:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011c8c:	8458      	strh	r0, [r3, #34]	; 0x22
 8011c8e:	e7dc      	b.n	8011c4a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8011c90:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011c92:	2b0a      	cmp	r3, #10
 8011c94:	d00f      	beq.n	8011cb6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8011c96:	4620      	mov	r0, r4
 8011c98:	f7ff fc12 	bl	80114c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8011c9c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8011c9e:	1c5a      	adds	r2, r3, #1
 8011ca0:	8722      	strh	r2, [r4, #56]	; 0x38
 8011ca2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8011ca4:	4413      	add	r3, r2
 8011ca6:	b29b      	uxth	r3, r3
 8011ca8:	2b09      	cmp	r3, #9
 8011caa:	bf88      	it	hi
 8011cac:	3b0a      	subhi	r3, #10
 8011cae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011cb2:	8458      	strh	r0, [r3, #34]	; 0x22
 8011cb4:	e7ec      	b.n	8011c90 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8011cb6:	bd10      	pop	{r4, pc}

08011cb8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8011cb8:	b538      	push	{r3, r4, r5, lr}
 8011cba:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8011cbc:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8011cc0:	4604      	mov	r4, r0
 8011cc2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8011cc4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8011cc6:	3a01      	subs	r2, #1
 8011cc8:	8702      	strh	r2, [r0, #56]	; 0x38
 8011cca:	1c5a      	adds	r2, r3, #1
 8011ccc:	b292      	uxth	r2, r2
 8011cce:	2a09      	cmp	r2, #9
 8011cd0:	bf86      	itte	hi
 8011cd2:	3b09      	subhi	r3, #9
 8011cd4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8011cd6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8011cd8:	f7ff ffb5 	bl	8011c46 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8011cdc:	8c23      	ldrh	r3, [r4, #32]
 8011cde:	2b01      	cmp	r3, #1
 8011ce0:	bf9c      	itt	ls
 8011ce2:	3301      	addls	r3, #1
 8011ce4:	8423      	strhls	r3, [r4, #32]
 8011ce6:	8be3      	ldrh	r3, [r4, #30]
 8011ce8:	b90b      	cbnz	r3, 8011cee <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8011cea:	2302      	movs	r3, #2
 8011cec:	83e3      	strh	r3, [r4, #30]
 8011cee:	8be3      	ldrh	r3, [r4, #30]
 8011cf0:	3b01      	subs	r3, #1
 8011cf2:	b29b      	uxth	r3, r3
 8011cf4:	83e3      	strh	r3, [r4, #30]
 8011cf6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011cfa:	4628      	mov	r0, r5
 8011cfc:	8365      	strh	r5, [r4, #26]
 8011cfe:	bd38      	pop	{r3, r4, r5, pc}

08011d00 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011d00:	428a      	cmp	r2, r1
 8011d02:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011d06:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8011d08:	d931      	bls.n	8011d6e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8011d0a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8011d0c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8011d10:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8011d14:	19ee      	adds	r6, r5, r7
 8011d16:	1a54      	subs	r4, r2, r1
 8011d18:	3e01      	subs	r6, #1
 8011d1a:	fa1f fe84 	uxth.w	lr, r4
 8011d1e:	b2b4      	uxth	r4, r6
 8011d20:	eba4 090e 	sub.w	r9, r4, lr
 8011d24:	fa1f f989 	uxth.w	r9, r9
 8011d28:	2c09      	cmp	r4, #9
 8011d2a:	4626      	mov	r6, r4
 8011d2c:	bf88      	it	hi
 8011d2e:	f1a4 060a 	subhi.w	r6, r4, #10
 8011d32:	f1bc 0f00 	cmp.w	ip, #0
 8011d36:	bf08      	it	eq
 8011d38:	f04f 0c02 	moveq.w	ip, #2
 8011d3c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8011d40:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011d44:	fa1f fc8c 	uxth.w	ip, ip
 8011d48:	3c01      	subs	r4, #1
 8011d4a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8011d4e:	b2a4      	uxth	r4, r4
 8011d50:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8011d54:	454c      	cmp	r4, r9
 8011d56:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8011d5a:	d1e5      	bne.n	8011d28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8011d5c:	eba5 050e 	sub.w	r5, r5, lr
 8011d60:	eb0e 0408 	add.w	r4, lr, r8
 8011d64:	8705      	strh	r5, [r0, #56]	; 0x38
 8011d66:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8011d6a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8011d6e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8011d70:	1a64      	subs	r4, r4, r1
 8011d72:	4439      	add	r1, r7
 8011d74:	b289      	uxth	r1, r1
 8011d76:	2909      	cmp	r1, #9
 8011d78:	bf88      	it	hi
 8011d7a:	390a      	subhi	r1, #10
 8011d7c:	8704      	strh	r4, [r0, #56]	; 0x38
 8011d7e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011d80:	250a      	movs	r5, #10
 8011d82:	b18a      	cbz	r2, 8011da8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8011d84:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8011d86:	3a01      	subs	r2, #1
 8011d88:	b292      	uxth	r2, r2
 8011d8a:	3101      	adds	r1, #1
 8011d8c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8011d90:	8701      	strh	r1, [r0, #56]	; 0x38
 8011d92:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8011d94:	b901      	cbnz	r1, 8011d98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8011d96:	86c5      	strh	r5, [r0, #54]	; 0x36
 8011d98:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8011d9a:	3901      	subs	r1, #1
 8011d9c:	b289      	uxth	r1, r1
 8011d9e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8011da0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8011da4:	844c      	strh	r4, [r1, #34]	; 0x22
 8011da6:	e7ec      	b.n	8011d82 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8011da8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011dac:	f7ff bf4b 	b.w	8011c46 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08011db0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8011db0:	b570      	push	{r4, r5, r6, lr}
 8011db2:	2500      	movs	r5, #0
 8011db4:	4295      	cmp	r5, r2
 8011db6:	d011      	beq.n	8011ddc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8011db8:	8bc4      	ldrh	r4, [r0, #30]
 8011dba:	f831 6b02 	ldrh.w	r6, [r1], #2
 8011dbe:	4414      	add	r4, r2
 8011dc0:	3c01      	subs	r4, #1
 8011dc2:	1b64      	subs	r4, r4, r5
 8011dc4:	b2a4      	uxth	r4, r4
 8011dc6:	2c01      	cmp	r4, #1
 8011dc8:	bf88      	it	hi
 8011dca:	3c02      	subhi	r4, #2
 8011dcc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011dd0:	8b64      	ldrh	r4, [r4, #26]
 8011dd2:	42b4      	cmp	r4, r6
 8011dd4:	d117      	bne.n	8011e06 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8011dd6:	3501      	adds	r5, #1
 8011dd8:	b2ad      	uxth	r5, r5
 8011dda:	e7eb      	b.n	8011db4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8011ddc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011de0:	2400      	movs	r4, #0
 8011de2:	4413      	add	r3, r2
 8011de4:	b2a2      	uxth	r2, r4
 8011de6:	429a      	cmp	r2, r3
 8011de8:	da0f      	bge.n	8011e0a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8011dea:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8011dec:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8011df0:	4432      	add	r2, r6
 8011df2:	b292      	uxth	r2, r2
 8011df4:	2a09      	cmp	r2, #9
 8011df6:	bf88      	it	hi
 8011df8:	3a0a      	subhi	r2, #10
 8011dfa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011dfe:	3401      	adds	r4, #1
 8011e00:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8011e02:	42aa      	cmp	r2, r5
 8011e04:	d0ee      	beq.n	8011de4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8011e06:	2000      	movs	r0, #0
 8011e08:	bd70      	pop	{r4, r5, r6, pc}
 8011e0a:	2001      	movs	r0, #1
 8011e0c:	e7fc      	b.n	8011e08 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08011e0e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8011e0e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e12:	4605      	mov	r5, r0
 8011e14:	4616      	mov	r6, r2
 8011e16:	1c8c      	adds	r4, r1, #2
 8011e18:	8809      	ldrh	r1, [r1, #0]
 8011e1a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8011e1e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8011e22:	42b3      	cmp	r3, r6
 8011e24:	d124      	bne.n	8011e70 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8011e26:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8011e2a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8011e2e:	f001 070f 	and.w	r7, r1, #15
 8011e32:	f8cd 8000 	str.w	r8, [sp]
 8011e36:	464b      	mov	r3, r9
 8011e38:	4652      	mov	r2, sl
 8011e3a:	4621      	mov	r1, r4
 8011e3c:	4628      	mov	r0, r5
 8011e3e:	f7ff ffb7 	bl	8011db0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8011e42:	4683      	mov	fp, r0
 8011e44:	b168      	cbz	r0, 8011e62 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8011e46:	eb0a 0109 	add.w	r1, sl, r9
 8011e4a:	4441      	add	r1, r8
 8011e4c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8011e50:	463a      	mov	r2, r7
 8011e52:	4649      	mov	r1, r9
 8011e54:	4628      	mov	r0, r5
 8011e56:	f7ff ff53 	bl	8011d00 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8011e5a:	4658      	mov	r0, fp
 8011e5c:	b003      	add	sp, #12
 8011e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e62:	eb07 010a 	add.w	r1, r7, sl
 8011e66:	4449      	add	r1, r9
 8011e68:	4441      	add	r1, r8
 8011e6a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8011e6e:	e7d2      	b.n	8011e16 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8011e70:	f04f 0b00 	mov.w	fp, #0
 8011e74:	e7f1      	b.n	8011e5a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08011e76 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8011e76:	b570      	push	{r4, r5, r6, lr}
 8011e78:	8810      	ldrh	r0, [r2, #0]
 8011e7a:	4298      	cmp	r0, r3
 8011e7c:	d817      	bhi.n	8011eae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011e7e:	1e48      	subs	r0, r1, #1
 8011e80:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8011e84:	4298      	cmp	r0, r3
 8011e86:	d312      	bcc.n	8011eae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011e88:	2400      	movs	r4, #0
 8011e8a:	428c      	cmp	r4, r1
 8011e8c:	d20f      	bcs.n	8011eae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011e8e:	1860      	adds	r0, r4, r1
 8011e90:	1040      	asrs	r0, r0, #1
 8011e92:	0085      	lsls	r5, r0, #2
 8011e94:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8011e98:	42b3      	cmp	r3, r6
 8011e9a:	d902      	bls.n	8011ea2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8011e9c:	3001      	adds	r0, #1
 8011e9e:	b284      	uxth	r4, r0
 8011ea0:	e7f3      	b.n	8011e8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011ea2:	d201      	bcs.n	8011ea8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8011ea4:	b281      	uxth	r1, r0
 8011ea6:	e7f0      	b.n	8011e8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011ea8:	442a      	add	r2, r5
 8011eaa:	8850      	ldrh	r0, [r2, #2]
 8011eac:	bd70      	pop	{r4, r5, r6, pc}
 8011eae:	2000      	movs	r0, #0
 8011eb0:	e7fc      	b.n	8011eac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011eb2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011eb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011eb6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8011eb8:	886f      	ldrh	r7, [r5, #2]
 8011eba:	4604      	mov	r4, r0
 8011ebc:	087f      	lsrs	r7, r7, #1
 8011ebe:	260b      	movs	r6, #11
 8011ec0:	3e01      	subs	r6, #1
 8011ec2:	d013      	beq.n	8011eec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011ec4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8011ec6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011eca:	462a      	mov	r2, r5
 8011ecc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8011ed0:	4639      	mov	r1, r7
 8011ed2:	4643      	mov	r3, r8
 8011ed4:	4620      	mov	r0, r4
 8011ed6:	f7ff ffce 	bl	8011e76 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8011eda:	b138      	cbz	r0, 8011eec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011edc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8011ee0:	4642      	mov	r2, r8
 8011ee2:	4620      	mov	r0, r4
 8011ee4:	f7ff ff93 	bl	8011e0e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8011ee8:	2800      	cmp	r0, #0
 8011eea:	d1e9      	bne.n	8011ec0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8011eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011ef0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8011ef0:	b570      	push	{r4, r5, r6, lr}
 8011ef2:	694a      	ldr	r2, [r1, #20]
 8011ef4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8011ef6:	684b      	ldr	r3, [r1, #4]
 8011ef8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8011efa:	1b54      	subs	r4, r2, r5
 8011efc:	f000 8106 	beq.w	801210c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8011f00:	1b9b      	subs	r3, r3, r6
 8011f02:	d003      	beq.n	8011f0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011f04:	4363      	muls	r3, r4
 8011f06:	2210      	movs	r2, #16
 8011f08:	fb93 f3f2 	sdiv	r3, r3, r2
 8011f0c:	680c      	ldr	r4, [r1, #0]
 8011f0e:	698a      	ldr	r2, [r1, #24]
 8011f10:	1b65      	subs	r5, r4, r5
 8011f12:	f000 80fd 	beq.w	8012110 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8011f16:	1b92      	subs	r2, r2, r6
 8011f18:	d003      	beq.n	8011f22 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011f1a:	436a      	muls	r2, r5
 8011f1c:	2410      	movs	r4, #16
 8011f1e:	fb92 f2f4 	sdiv	r2, r2, r4
 8011f22:	1a9b      	subs	r3, r3, r2
 8011f24:	ee07 3a90 	vmov	s15, r3
 8011f28:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801214c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8011f2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011f30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011f34:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011f38:	460a      	mov	r2, r1
 8011f3a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8011f3e:	4603      	mov	r3, r0
 8011f40:	f100 040c 	add.w	r4, r0, #12
 8011f44:	eeb1 6a43 	vneg.f32	s12, s6
 8011f48:	edd2 7a02 	vldr	s15, [r2, #8]
 8011f4c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8011f50:	3214      	adds	r2, #20
 8011f52:	ece3 6a01 	vstmia	r3!, {s13}
 8011f56:	ed52 7a02 	vldr	s15, [r2, #-8]
 8011f5a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011f5e:	429c      	cmp	r4, r3
 8011f60:	edc3 7a02 	vstr	s15, [r3, #8]
 8011f64:	ed52 7a01 	vldr	s15, [r2, #-4]
 8011f68:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011f6c:	edc3 7a05 	vstr	s15, [r3, #20]
 8011f70:	d1ea      	bne.n	8011f48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8011f72:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8011f74:	698b      	ldr	r3, [r1, #24]
 8011f76:	edd0 4a02 	vldr	s9, [r0, #8]
 8011f7a:	edd0 3a00 	vldr	s7, [r0]
 8011f7e:	edd0 6a01 	vldr	s13, [r0, #4]
 8011f82:	ed90 5a05 	vldr	s10, [r0, #20]
 8011f86:	ed90 2a03 	vldr	s4, [r0, #12]
 8011f8a:	edd0 5a04 	vldr	s11, [r0, #16]
 8011f8e:	ed90 1a07 	vldr	s2, [r0, #28]
 8011f92:	edd0 2a06 	vldr	s5, [r0, #24]
 8011f96:	1a9b      	subs	r3, r3, r2
 8011f98:	ee07 3a90 	vmov	s15, r3
 8011f9c:	684b      	ldr	r3, [r1, #4]
 8011f9e:	1a9b      	subs	r3, r3, r2
 8011fa0:	ee07 3a10 	vmov	s14, r3
 8011fa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011fa8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8011fac:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011fb0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8011fb4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011fb8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8011fbc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011fc0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011fc4:	eee6 7a87 	vfma.f32	s15, s13, s14
 8011fc8:	ee32 5a45 	vsub.f32	s10, s4, s10
 8011fcc:	ee67 7a83 	vmul.f32	s15, s15, s6
 8011fd0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8011fd4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8011fd6:	694a      	ldr	r2, [r1, #20]
 8011fd8:	1b13      	subs	r3, r2, r4
 8011fda:	ee07 3a10 	vmov	s14, r3
 8011fde:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011fe2:	680b      	ldr	r3, [r1, #0]
 8011fe4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011fe8:	1b1b      	subs	r3, r3, r4
 8011fea:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8011fee:	ee07 3a10 	vmov	s14, r3
 8011ff2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011ff6:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011ffa:	eee6 4a87 	vfma.f32	s9, s13, s14
 8011ffe:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012002:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8012006:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012008:	698b      	ldr	r3, [r1, #24]
 801200a:	1a9b      	subs	r3, r3, r2
 801200c:	ee06 3a90 	vmov	s13, r3
 8012010:	684b      	ldr	r3, [r1, #4]
 8012012:	1a9b      	subs	r3, r3, r2
 8012014:	ee07 3a10 	vmov	s14, r3
 8012018:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801201c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012020:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012024:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012028:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801202c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012030:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012034:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8012038:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801203a:	694a      	ldr	r2, [r1, #20]
 801203c:	1b13      	subs	r3, r2, r4
 801203e:	ee07 3a10 	vmov	s14, r3
 8012042:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012046:	680b      	ldr	r3, [r1, #0]
 8012048:	ee27 7a04 	vmul.f32	s14, s14, s8
 801204c:	1b1b      	subs	r3, r3, r4
 801204e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012052:	ee07 3a10 	vmov	s14, r3
 8012056:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801205a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801205e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012062:	edd0 5a08 	vldr	s11, [r0, #32]
 8012066:	ee25 5a06 	vmul.f32	s10, s10, s12
 801206a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801206e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8012072:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012074:	698b      	ldr	r3, [r1, #24]
 8012076:	1a9b      	subs	r3, r3, r2
 8012078:	ee07 3a10 	vmov	s14, r3
 801207c:	684b      	ldr	r3, [r1, #4]
 801207e:	1a9b      	subs	r3, r3, r2
 8012080:	ee01 3a90 	vmov	s3, r3
 8012084:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012088:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801208c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012090:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012094:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012098:	ee61 1a84 	vmul.f32	s3, s3, s8
 801209c:	eea1 7a21 	vfma.f32	s14, s2, s3
 80120a0:	ee27 7a03 	vmul.f32	s14, s14, s6
 80120a4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80120a8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80120aa:	694a      	ldr	r2, [r1, #20]
 80120ac:	1b13      	subs	r3, r2, r4
 80120ae:	ee03 3a10 	vmov	s6, r3
 80120b2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80120b6:	680b      	ldr	r3, [r1, #0]
 80120b8:	ee23 3a04 	vmul.f32	s6, s6, s8
 80120bc:	1b1b      	subs	r3, r3, r4
 80120be:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80120c2:	ee03 3a10 	vmov	s6, r3
 80120c6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80120ca:	ee23 4a04 	vmul.f32	s8, s6, s8
 80120ce:	eee1 5a04 	vfma.f32	s11, s2, s8
 80120d2:	ee25 6a86 	vmul.f32	s12, s11, s12
 80120d6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80120da:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80120de:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80120e2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80120e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80120ea:	dd13      	ble.n	8012114 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80120ec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80120f0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80120f4:	63c3      	str	r3, [r0, #60]	; 0x3c
 80120f6:	eee3 7a87 	vfma.f32	s15, s7, s14
 80120fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80120fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012102:	dd15      	ble.n	8012130 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012104:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012108:	6403      	str	r3, [r0, #64]	; 0x40
 801210a:	bd70      	pop	{r4, r5, r6, pc}
 801210c:	4623      	mov	r3, r4
 801210e:	e6fd      	b.n	8011f0c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012110:	462a      	mov	r2, r5
 8012112:	e706      	b.n	8011f22 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012114:	d502      	bpl.n	801211c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012116:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801211a:	e7e9      	b.n	80120f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801211c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012120:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012124:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012128:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801212c:	dade      	bge.n	80120ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801212e:	e7f2      	b.n	8012116 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012130:	d502      	bpl.n	8012138 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012132:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8012136:	e7e7      	b.n	8012108 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012138:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801213c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012140:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012144:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012148:	dadc      	bge.n	8012104 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801214a:	e7f2      	b.n	8012132 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801214c:	3d800000 	.word	0x3d800000

08012150 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012150:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012154:	2714      	movs	r7, #20
 8012156:	435f      	muls	r7, r3
 8012158:	eb02 0c07 	add.w	ip, r2, r7
 801215c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012160:	f115 0e0f 	adds.w	lr, r5, #15
 8012164:	f100 80a2 	bmi.w	80122ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012168:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801216c:	9c08      	ldr	r4, [sp, #32]
 801216e:	f8c0 e014 	str.w	lr, [r0, #20]
 8012172:	2614      	movs	r6, #20
 8012174:	4366      	muls	r6, r4
 8012176:	eb02 0806 	add.w	r8, r2, r6
 801217a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801217e:	f115 040f 	adds.w	r4, r5, #15
 8012182:	f100 809f 	bmi.w	80122c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012186:	1124      	asrs	r4, r4, #4
 8012188:	eba4 040e 	sub.w	r4, r4, lr
 801218c:	6184      	str	r4, [r0, #24]
 801218e:	2c00      	cmp	r4, #0
 8012190:	f000 808a 	beq.w	80122a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012194:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012198:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801219c:	5995      	ldr	r5, [r2, r6]
 801219e:	eba4 0809 	sub.w	r8, r4, r9
 80121a2:	59d4      	ldr	r4, [r2, r7]
 80121a4:	eba5 0a04 	sub.w	sl, r5, r4
 80121a8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80121ac:	fb0e fe05 	mul.w	lr, lr, r5
 80121b0:	fb0a ee19 	mls	lr, sl, r9, lr
 80121b4:	fb08 e404 	mla	r4, r8, r4, lr
 80121b8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80121bc:	3c01      	subs	r4, #1
 80121be:	19a4      	adds	r4, r4, r6
 80121c0:	f100 808c 	bmi.w	80122dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80121c4:	fb94 fef6 	sdiv	lr, r4, r6
 80121c8:	f8c0 e000 	str.w	lr, [r0]
 80121cc:	fb06 441e 	mls	r4, r6, lr, r4
 80121d0:	6104      	str	r4, [r0, #16]
 80121d2:	2d00      	cmp	r5, #0
 80121d4:	f2c0 8095 	blt.w	8012302 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80121d8:	fb95 f4f6 	sdiv	r4, r5, r6
 80121dc:	6044      	str	r4, [r0, #4]
 80121de:	fb06 5514 	mls	r5, r6, r4, r5
 80121e2:	6085      	str	r5, [r0, #8]
 80121e4:	60c6      	str	r6, [r0, #12]
 80121e6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80121ea:	6945      	ldr	r5, [r0, #20]
 80121ec:	59d2      	ldr	r2, [r2, r7]
 80121ee:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8012324 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80121f2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80121f6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80121fa:	ee07 4a10 	vmov	s14, r4
 80121fe:	6804      	ldr	r4, [r0, #0]
 8012200:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012204:	ee07 2a90 	vmov	s15, r2
 8012208:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801220c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012210:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012214:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012218:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801221c:	edd3 6a00 	vldr	s13, [r3]
 8012220:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012224:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8012228:	eee6 6a27 	vfma.f32	s13, s12, s15
 801222c:	edc0 6a07 	vstr	s13, [r0, #28]
 8012230:	edd0 6a01 	vldr	s13, [r0, #4]
 8012234:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8012238:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801223c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012240:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012244:	ed80 6a08 	vstr	s12, [r0, #32]
 8012248:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801224a:	6242      	str	r2, [r0, #36]	; 0x24
 801224c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8012250:	ed93 6a03 	vldr	s12, [r3, #12]
 8012254:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012258:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801225c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012260:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8012264:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8012268:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801226c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012270:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8012274:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8012276:	6302      	str	r2, [r0, #48]	; 0x30
 8012278:	ed93 6a06 	vldr	s12, [r3, #24]
 801227c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8012280:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012284:	eeb0 7a46 	vmov.f32	s14, s12
 8012288:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801228c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012290:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8012294:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8012298:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801229c:	eee6 7a87 	vfma.f32	s15, s13, s14
 80122a0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80122a4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80122a6:	63c3      	str	r3, [r0, #60]	; 0x3c
 80122a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80122ac:	f1c5 0501 	rsb	r5, r5, #1
 80122b0:	f015 050f 	ands.w	r5, r5, #15
 80122b4:	bf18      	it	ne
 80122b6:	2501      	movne	r5, #1
 80122b8:	2410      	movs	r4, #16
 80122ba:	fb9e fef4 	sdiv	lr, lr, r4
 80122be:	ebae 0e05 	sub.w	lr, lr, r5
 80122c2:	e753      	b.n	801216c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80122c4:	f1c5 0501 	rsb	r5, r5, #1
 80122c8:	f015 050f 	ands.w	r5, r5, #15
 80122cc:	bf18      	it	ne
 80122ce:	2501      	movne	r5, #1
 80122d0:	f04f 0910 	mov.w	r9, #16
 80122d4:	fb94 f4f9 	sdiv	r4, r4, r9
 80122d8:	1b64      	subs	r4, r4, r5
 80122da:	e755      	b.n	8012188 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80122dc:	4264      	negs	r4, r4
 80122de:	fb94 fef6 	sdiv	lr, r4, r6
 80122e2:	f1ce 0800 	rsb	r8, lr, #0
 80122e6:	fb06 441e 	mls	r4, r6, lr, r4
 80122ea:	f8c0 8000 	str.w	r8, [r0]
 80122ee:	6104      	str	r4, [r0, #16]
 80122f0:	2c00      	cmp	r4, #0
 80122f2:	f43f af6e 	beq.w	80121d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80122f6:	ea6f 0e0e 	mvn.w	lr, lr
 80122fa:	f8c0 e000 	str.w	lr, [r0]
 80122fe:	1b34      	subs	r4, r6, r4
 8012300:	e766      	b.n	80121d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012302:	426d      	negs	r5, r5
 8012304:	fb95 f4f6 	sdiv	r4, r5, r6
 8012308:	f1c4 0e00 	rsb	lr, r4, #0
 801230c:	fb06 5514 	mls	r5, r6, r4, r5
 8012310:	f8c0 e004 	str.w	lr, [r0, #4]
 8012314:	6085      	str	r5, [r0, #8]
 8012316:	2d00      	cmp	r5, #0
 8012318:	f43f af64 	beq.w	80121e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801231c:	43e4      	mvns	r4, r4
 801231e:	6044      	str	r4, [r0, #4]
 8012320:	1b75      	subs	r5, r6, r5
 8012322:	e75e      	b.n	80121e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012324:	3d800000 	.word	0x3d800000

08012328 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012328:	4602      	mov	r2, r0
 801232a:	b148      	cbz	r0, 8012340 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801232c:	2300      	movs	r3, #0
 801232e:	b298      	uxth	r0, r3
 8012330:	3301      	adds	r3, #1
 8012332:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012336:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801233a:	2900      	cmp	r1, #0
 801233c:	d1f7      	bne.n	801232e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801233e:	4770      	bx	lr
 8012340:	4770      	bx	lr

08012342 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8012342:	b530      	push	{r4, r5, lr}
 8012344:	4604      	mov	r4, r0
 8012346:	b159      	cbz	r1, 8012360 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012348:	b148      	cbz	r0, 801235e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801234a:	2300      	movs	r3, #0
 801234c:	b298      	uxth	r0, r3
 801234e:	4282      	cmp	r2, r0
 8012350:	d905      	bls.n	801235e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012352:	5ccd      	ldrb	r5, [r1, r3]
 8012354:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012358:	3301      	adds	r3, #1
 801235a:	2d00      	cmp	r5, #0
 801235c:	d1f6      	bne.n	801234c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801235e:	bd30      	pop	{r4, r5, pc}
 8012360:	4608      	mov	r0, r1
 8012362:	e7fc      	b.n	801235e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08012364 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8012364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012366:	b08b      	sub	sp, #44	; 0x2c
 8012368:	468c      	mov	ip, r1
 801236a:	2100      	movs	r1, #0
 801236c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8012370:	4604      	mov	r4, r0
 8012372:	261f      	movs	r6, #31
 8012374:	af01      	add	r7, sp, #4
 8012376:	fb94 fef3 	sdiv	lr, r4, r3
 801237a:	fb03 441e 	mls	r4, r3, lr, r4
 801237e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8012382:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8012386:	b2ec      	uxtb	r4, r5
 8012388:	2d09      	cmp	r5, #9
 801238a:	bfd4      	ite	le
 801238c:	3430      	addle	r4, #48	; 0x30
 801238e:	3457      	addgt	r4, #87	; 0x57
 8012390:	b2e4      	uxtb	r4, r4
 8012392:	55bc      	strb	r4, [r7, r6]
 8012394:	4674      	mov	r4, lr
 8012396:	1e71      	subs	r1, r6, #1
 8012398:	b974      	cbnz	r4, 80123b8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801239a:	2800      	cmp	r0, #0
 801239c:	da05      	bge.n	80123aa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801239e:	ab0a      	add	r3, sp, #40	; 0x28
 80123a0:	4419      	add	r1, r3
 80123a2:	232d      	movs	r3, #45	; 0x2d
 80123a4:	f801 3c24 	strb.w	r3, [r1, #-36]
 80123a8:	1eb1      	subs	r1, r6, #2
 80123aa:	3101      	adds	r1, #1
 80123ac:	4439      	add	r1, r7
 80123ae:	4660      	mov	r0, ip
 80123b0:	f7ff ffc7 	bl	8012342 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80123b4:	b00b      	add	sp, #44	; 0x2c
 80123b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80123b8:	460e      	mov	r6, r1
 80123ba:	e7dc      	b.n	8012376 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080123bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80123bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80123be:	b08b      	sub	sp, #44	; 0x2c
 80123c0:	468c      	mov	ip, r1
 80123c2:	2100      	movs	r1, #0
 80123c4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80123c8:	ae01      	add	r6, sp, #4
 80123ca:	211f      	movs	r1, #31
 80123cc:	fbb0 f7f3 	udiv	r7, r0, r3
 80123d0:	fb03 0517 	mls	r5, r3, r7, r0
 80123d4:	b2ec      	uxtb	r4, r5
 80123d6:	2d09      	cmp	r5, #9
 80123d8:	bfd4      	ite	le
 80123da:	3430      	addle	r4, #48	; 0x30
 80123dc:	3457      	addgt	r4, #87	; 0x57
 80123de:	b2e4      	uxtb	r4, r4
 80123e0:	558c      	strb	r4, [r1, r6]
 80123e2:	4638      	mov	r0, r7
 80123e4:	1e4c      	subs	r4, r1, #1
 80123e6:	b92f      	cbnz	r7, 80123f4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80123e8:	4431      	add	r1, r6
 80123ea:	4660      	mov	r0, ip
 80123ec:	f7ff ffa9 	bl	8012342 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80123f0:	b00b      	add	sp, #44	; 0x2c
 80123f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80123f4:	4621      	mov	r1, r4
 80123f6:	e7e9      	b.n	80123cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080123f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80123f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123fc:	4691      	mov	r9, r2
 80123fe:	b085      	sub	sp, #20
 8012400:	6802      	ldr	r2, [r0, #0]
 8012402:	9201      	str	r2, [sp, #4]
 8012404:	4688      	mov	r8, r1
 8012406:	4683      	mov	fp, r0
 8012408:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801240c:	9103      	str	r1, [sp, #12]
 801240e:	4610      	mov	r0, r2
 8012410:	461c      	mov	r4, r3
 8012412:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8012416:	9302      	str	r3, [sp, #8]
 8012418:	f7ff ff86 	bl	8012328 <_ZN8touchgfx7Unicode6strlenEPKt>
 801241c:	f1b8 0f00 	cmp.w	r8, #0
 8012420:	bf0c      	ite	eq
 8012422:	4684      	moveq	ip, r0
 8012424:	f100 0c01 	addne.w	ip, r0, #1
 8012428:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801242c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8012430:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012432:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012434:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8012438:	9903      	ldr	r1, [sp, #12]
 801243a:	fa1f fc8c 	uxth.w	ip, ip
 801243e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8012442:	d041      	beq.n	80124c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012444:	d834      	bhi.n	80124b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8012446:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801244a:	d059      	beq.n	8012500 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801244c:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8012450:	d03a      	beq.n	80124c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8012452:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8012456:	d034      	beq.n	80124c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8012458:	2400      	movs	r4, #0
 801245a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801245e:	3a01      	subs	r2, #1
 8012460:	b169      	cbz	r1, 801247e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012462:	9911      	ldr	r1, [sp, #68]	; 0x44
 8012464:	458c      	cmp	ip, r1
 8012466:	da09      	bge.n	801247c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8012468:	eba1 010c 	sub.w	r1, r1, ip
 801246c:	b289      	uxth	r1, r1
 801246e:	b933      	cbnz	r3, 801247e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012470:	2e00      	cmp	r6, #0
 8012472:	d051      	beq.n	8012518 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012474:	2800      	cmp	r0, #0
 8012476:	d04f      	beq.n	8012518 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8012478:	440c      	add	r4, r1
 801247a:	b2a4      	uxth	r4, r4
 801247c:	2100      	movs	r1, #0
 801247e:	682b      	ldr	r3, [r5, #0]
 8012480:	4293      	cmp	r3, r2
 8012482:	da07      	bge.n	8012494 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8012484:	f1b8 0f00 	cmp.w	r8, #0
 8012488:	d004      	beq.n	8012494 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801248a:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801248e:	682b      	ldr	r3, [r5, #0]
 8012490:	3301      	adds	r3, #1
 8012492:	602b      	str	r3, [r5, #0]
 8012494:	2730      	movs	r7, #48	; 0x30
 8012496:	2c00      	cmp	r4, #0
 8012498:	d04e      	beq.n	8012538 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801249a:	682e      	ldr	r6, [r5, #0]
 801249c:	3c01      	subs	r4, #1
 801249e:	42b2      	cmp	r2, r6
 80124a0:	b2a4      	uxth	r4, r4
 80124a2:	dd49      	ble.n	8012538 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80124a4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80124a8:	682b      	ldr	r3, [r5, #0]
 80124aa:	3301      	adds	r3, #1
 80124ac:	602b      	str	r3, [r5, #0]
 80124ae:	e7f2      	b.n	8012496 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80124b0:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80124b4:	d01d      	beq.n	80124f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80124b6:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80124ba:	d002      	beq.n	80124c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80124bc:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80124c0:	e7c9      	b.n	8012456 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80124c2:	4684      	mov	ip, r0
 80124c4:	f04f 0800 	mov.w	r8, #0
 80124c8:	2c00      	cmp	r4, #0
 80124ca:	d0c6      	beq.n	801245a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80124cc:	b947      	cbnz	r7, 80124e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80124ce:	2801      	cmp	r0, #1
 80124d0:	d106      	bne.n	80124e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80124d2:	8814      	ldrh	r4, [r2, #0]
 80124d4:	2c30      	cmp	r4, #48	; 0x30
 80124d6:	bf02      	ittt	eq
 80124d8:	3202      	addeq	r2, #2
 80124da:	f8cb 2000 	streq.w	r2, [fp]
 80124de:	4638      	moveq	r0, r7
 80124e0:	45bc      	cmp	ip, r7
 80124e2:	da14      	bge.n	801250e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80124e4:	b2bf      	uxth	r7, r7
 80124e6:	eba7 040c 	sub.w	r4, r7, ip
 80124ea:	b2a4      	uxth	r4, r4
 80124ec:	46bc      	mov	ip, r7
 80124ee:	2600      	movs	r6, #0
 80124f0:	e7b3      	b.n	801245a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80124f2:	4684      	mov	ip, r0
 80124f4:	b16c      	cbz	r4, 8012512 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80124f6:	42b8      	cmp	r0, r7
 80124f8:	dd00      	ble.n	80124fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80124fa:	b2b8      	uxth	r0, r7
 80124fc:	2400      	movs	r4, #0
 80124fe:	e003      	b.n	8012508 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8012500:	f04f 0c01 	mov.w	ip, #1
 8012504:	2400      	movs	r4, #0
 8012506:	4660      	mov	r0, ip
 8012508:	4626      	mov	r6, r4
 801250a:	46a0      	mov	r8, r4
 801250c:	e7a5      	b.n	801245a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801250e:	2400      	movs	r4, #0
 8012510:	e7ed      	b.n	80124ee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8012512:	4626      	mov	r6, r4
 8012514:	46a0      	mov	r8, r4
 8012516:	e7a0      	b.n	801245a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8012518:	2900      	cmp	r1, #0
 801251a:	d0b0      	beq.n	801247e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801251c:	2720      	movs	r7, #32
 801251e:	682e      	ldr	r6, [r5, #0]
 8012520:	2900      	cmp	r1, #0
 8012522:	d0ac      	beq.n	801247e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8012524:	3901      	subs	r1, #1
 8012526:	4296      	cmp	r6, r2
 8012528:	b289      	uxth	r1, r1
 801252a:	daa7      	bge.n	801247c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801252c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8012530:	682b      	ldr	r3, [r5, #0]
 8012532:	3301      	adds	r3, #1
 8012534:	602b      	str	r3, [r5, #0]
 8012536:	e7f2      	b.n	801251e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8012538:	b188      	cbz	r0, 801255e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801253a:	682b      	ldr	r3, [r5, #0]
 801253c:	3801      	subs	r0, #1
 801253e:	429a      	cmp	r2, r3
 8012540:	b280      	uxth	r0, r0
 8012542:	dd0c      	ble.n	801255e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8012544:	f8db 3000 	ldr.w	r3, [fp]
 8012548:	1c9c      	adds	r4, r3, #2
 801254a:	f8cb 4000 	str.w	r4, [fp]
 801254e:	881c      	ldrh	r4, [r3, #0]
 8012550:	682b      	ldr	r3, [r5, #0]
 8012552:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8012556:	682b      	ldr	r3, [r5, #0]
 8012558:	3301      	adds	r3, #1
 801255a:	602b      	str	r3, [r5, #0]
 801255c:	e7ec      	b.n	8012538 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801255e:	2620      	movs	r6, #32
 8012560:	b151      	cbz	r1, 8012578 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8012562:	6828      	ldr	r0, [r5, #0]
 8012564:	3901      	subs	r1, #1
 8012566:	4282      	cmp	r2, r0
 8012568:	b289      	uxth	r1, r1
 801256a:	dd05      	ble.n	8012578 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801256c:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8012570:	682b      	ldr	r3, [r5, #0]
 8012572:	3301      	adds	r3, #1
 8012574:	602b      	str	r3, [r5, #0]
 8012576:	e7f3      	b.n	8012560 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8012578:	b005      	add	sp, #20
 801257a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801257e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801257e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012582:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8012586:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801258a:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801258e:	2400      	movs	r4, #0
 8012590:	8014      	strh	r4, [r2, #0]
 8012592:	701c      	strb	r4, [r3, #0]
 8012594:	f888 4000 	strb.w	r4, [r8]
 8012598:	f88c 4000 	strb.w	r4, [ip]
 801259c:	f88e 4000 	strb.w	r4, [lr]
 80125a0:	703c      	strb	r4, [r7, #0]
 80125a2:	6804      	ldr	r4, [r0, #0]
 80125a4:	b1a4      	cbz	r4, 80125d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80125a6:	8824      	ldrh	r4, [r4, #0]
 80125a8:	f04f 0901 	mov.w	r9, #1
 80125ac:	b314      	cbz	r4, 80125f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80125ae:	2c2b      	cmp	r4, #43	; 0x2b
 80125b0:	d001      	beq.n	80125b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80125b2:	2c20      	cmp	r4, #32
 80125b4:	d110      	bne.n	80125d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80125b6:	8014      	strh	r4, [r2, #0]
 80125b8:	6804      	ldr	r4, [r0, #0]
 80125ba:	b10c      	cbz	r4, 80125c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80125bc:	3402      	adds	r4, #2
 80125be:	6004      	str	r4, [r0, #0]
 80125c0:	680c      	ldr	r4, [r1, #0]
 80125c2:	b10c      	cbz	r4, 80125c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80125c4:	3401      	adds	r4, #1
 80125c6:	600c      	str	r4, [r1, #0]
 80125c8:	6804      	ldr	r4, [r0, #0]
 80125ca:	b17c      	cbz	r4, 80125ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80125cc:	8824      	ldrh	r4, [r4, #0]
 80125ce:	e7ed      	b.n	80125ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80125d0:	680c      	ldr	r4, [r1, #0]
 80125d2:	b17c      	cbz	r4, 80125f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80125d4:	7824      	ldrb	r4, [r4, #0]
 80125d6:	e7e7      	b.n	80125a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80125d8:	2c2d      	cmp	r4, #45	; 0x2d
 80125da:	d102      	bne.n	80125e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80125dc:	f883 9000 	strb.w	r9, [r3]
 80125e0:	e7ea      	b.n	80125b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80125e2:	2c23      	cmp	r4, #35	; 0x23
 80125e4:	d107      	bne.n	80125f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80125e6:	f888 9000 	strb.w	r9, [r8]
 80125ea:	e7e5      	b.n	80125b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80125ec:	680c      	ldr	r4, [r1, #0]
 80125ee:	b10c      	cbz	r4, 80125f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80125f0:	7824      	ldrb	r4, [r4, #0]
 80125f2:	e7db      	b.n	80125ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80125f4:	2400      	movs	r4, #0
 80125f6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80125fa:	2b09      	cmp	r3, #9
 80125fc:	d901      	bls.n	8012602 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80125fe:	2c2a      	cmp	r4, #42	; 0x2a
 8012600:	d122      	bne.n	8012648 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012602:	2301      	movs	r3, #1
 8012604:	2c30      	cmp	r4, #48	; 0x30
 8012606:	f88e 3000 	strb.w	r3, [lr]
 801260a:	d10d      	bne.n	8012628 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801260c:	f88c 3000 	strb.w	r3, [ip]
 8012610:	6803      	ldr	r3, [r0, #0]
 8012612:	b10b      	cbz	r3, 8012618 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8012614:	3302      	adds	r3, #2
 8012616:	6003      	str	r3, [r0, #0]
 8012618:	680b      	ldr	r3, [r1, #0]
 801261a:	b10b      	cbz	r3, 8012620 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801261c:	3301      	adds	r3, #1
 801261e:	600b      	str	r3, [r1, #0]
 8012620:	6803      	ldr	r3, [r0, #0]
 8012622:	2b00      	cmp	r3, #0
 8012624:	d02f      	beq.n	8012686 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8012626:	881c      	ldrh	r4, [r3, #0]
 8012628:	2c2a      	cmp	r4, #42	; 0x2a
 801262a:	d135      	bne.n	8012698 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801262c:	f04f 33ff 	mov.w	r3, #4294967295
 8012630:	6033      	str	r3, [r6, #0]
 8012632:	6803      	ldr	r3, [r0, #0]
 8012634:	b10b      	cbz	r3, 801263a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8012636:	3302      	adds	r3, #2
 8012638:	6003      	str	r3, [r0, #0]
 801263a:	680b      	ldr	r3, [r1, #0]
 801263c:	b10b      	cbz	r3, 8012642 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801263e:	3301      	adds	r3, #1
 8012640:	600b      	str	r3, [r1, #0]
 8012642:	6803      	ldr	r3, [r0, #0]
 8012644:	b31b      	cbz	r3, 801268e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8012646:	881c      	ldrh	r4, [r3, #0]
 8012648:	2c2e      	cmp	r4, #46	; 0x2e
 801264a:	d11a      	bne.n	8012682 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801264c:	2301      	movs	r3, #1
 801264e:	703b      	strb	r3, [r7, #0]
 8012650:	6803      	ldr	r3, [r0, #0]
 8012652:	b10b      	cbz	r3, 8012658 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8012654:	3302      	adds	r3, #2
 8012656:	6003      	str	r3, [r0, #0]
 8012658:	680b      	ldr	r3, [r1, #0]
 801265a:	b10b      	cbz	r3, 8012660 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801265c:	3301      	adds	r3, #1
 801265e:	600b      	str	r3, [r1, #0]
 8012660:	6803      	ldr	r3, [r0, #0]
 8012662:	2b00      	cmp	r3, #0
 8012664:	d036      	beq.n	80126d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8012666:	881b      	ldrh	r3, [r3, #0]
 8012668:	2b2a      	cmp	r3, #42	; 0x2a
 801266a:	d137      	bne.n	80126dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801266c:	f04f 33ff 	mov.w	r3, #4294967295
 8012670:	602b      	str	r3, [r5, #0]
 8012672:	6803      	ldr	r3, [r0, #0]
 8012674:	b10b      	cbz	r3, 801267a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8012676:	3302      	adds	r3, #2
 8012678:	6003      	str	r3, [r0, #0]
 801267a:	680b      	ldr	r3, [r1, #0]
 801267c:	b10b      	cbz	r3, 8012682 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801267e:	3301      	adds	r3, #1
 8012680:	600b      	str	r3, [r1, #0]
 8012682:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012686:	680c      	ldr	r4, [r1, #0]
 8012688:	b134      	cbz	r4, 8012698 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801268a:	7824      	ldrb	r4, [r4, #0]
 801268c:	e7cc      	b.n	8012628 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801268e:	680b      	ldr	r3, [r1, #0]
 8012690:	2b00      	cmp	r3, #0
 8012692:	d0f6      	beq.n	8012682 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8012694:	781c      	ldrb	r4, [r3, #0]
 8012696:	e7d7      	b.n	8012648 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8012698:	2300      	movs	r3, #0
 801269a:	6033      	str	r3, [r6, #0]
 801269c:	220a      	movs	r2, #10
 801269e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80126a2:	fa1f f38c 	uxth.w	r3, ip
 80126a6:	2b09      	cmp	r3, #9
 80126a8:	d8ce      	bhi.n	8012648 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80126aa:	6833      	ldr	r3, [r6, #0]
 80126ac:	fb02 c303 	mla	r3, r2, r3, ip
 80126b0:	6033      	str	r3, [r6, #0]
 80126b2:	6803      	ldr	r3, [r0, #0]
 80126b4:	b10b      	cbz	r3, 80126ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80126b6:	3302      	adds	r3, #2
 80126b8:	6003      	str	r3, [r0, #0]
 80126ba:	680b      	ldr	r3, [r1, #0]
 80126bc:	b10b      	cbz	r3, 80126c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80126be:	3301      	adds	r3, #1
 80126c0:	600b      	str	r3, [r1, #0]
 80126c2:	6803      	ldr	r3, [r0, #0]
 80126c4:	b10b      	cbz	r3, 80126ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80126c6:	881c      	ldrh	r4, [r3, #0]
 80126c8:	e7e9      	b.n	801269e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80126ca:	680c      	ldr	r4, [r1, #0]
 80126cc:	2c00      	cmp	r4, #0
 80126ce:	d0e6      	beq.n	801269e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80126d0:	7824      	ldrb	r4, [r4, #0]
 80126d2:	e7e4      	b.n	801269e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80126d4:	680b      	ldr	r3, [r1, #0]
 80126d6:	b10b      	cbz	r3, 80126dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80126d8:	781b      	ldrb	r3, [r3, #0]
 80126da:	e7c5      	b.n	8012668 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80126dc:	2200      	movs	r2, #0
 80126de:	602a      	str	r2, [r5, #0]
 80126e0:	240a      	movs	r4, #10
 80126e2:	3b30      	subs	r3, #48	; 0x30
 80126e4:	b29e      	uxth	r6, r3
 80126e6:	2e09      	cmp	r6, #9
 80126e8:	682a      	ldr	r2, [r5, #0]
 80126ea:	d813      	bhi.n	8012714 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80126ec:	fb04 3302 	mla	r3, r4, r2, r3
 80126f0:	602b      	str	r3, [r5, #0]
 80126f2:	6803      	ldr	r3, [r0, #0]
 80126f4:	b10b      	cbz	r3, 80126fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80126f6:	3302      	adds	r3, #2
 80126f8:	6003      	str	r3, [r0, #0]
 80126fa:	680b      	ldr	r3, [r1, #0]
 80126fc:	b10b      	cbz	r3, 8012702 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80126fe:	3301      	adds	r3, #1
 8012700:	600b      	str	r3, [r1, #0]
 8012702:	6803      	ldr	r3, [r0, #0]
 8012704:	b10b      	cbz	r3, 801270a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8012706:	881b      	ldrh	r3, [r3, #0]
 8012708:	e7eb      	b.n	80126e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801270a:	680b      	ldr	r3, [r1, #0]
 801270c:	2b00      	cmp	r3, #0
 801270e:	d0e8      	beq.n	80126e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012710:	781b      	ldrb	r3, [r3, #0]
 8012712:	e7e6      	b.n	80126e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8012714:	2a06      	cmp	r2, #6
 8012716:	bfa8      	it	ge
 8012718:	2206      	movge	r2, #6
 801271a:	602a      	str	r2, [r5, #0]
 801271c:	e7b1      	b.n	8012682 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801271e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801271e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012722:	b0a3      	sub	sp, #140	; 0x8c
 8012724:	2600      	movs	r6, #0
 8012726:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801272a:	4607      	mov	r7, r0
 801272c:	4688      	mov	r8, r1
 801272e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8012732:	4631      	mov	r1, r6
 8012734:	2242      	movs	r2, #66	; 0x42
 8012736:	4648      	mov	r0, r9
 8012738:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801273a:	960d      	str	r6, [sp, #52]	; 0x34
 801273c:	f00d ffc0 	bl	80206c0 <memset>
 8012740:	b15f      	cbz	r7, 801275a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8012742:	f108 3aff 	add.w	sl, r8, #4294967295
 8012746:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012748:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801274a:	b152      	cbz	r2, 8012762 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801274c:	8812      	ldrh	r2, [r2, #0]
 801274e:	b10a      	cbz	r2, 8012754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012750:	459a      	cmp	sl, r3
 8012752:	dc2e      	bgt.n	80127b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8012754:	2200      	movs	r2, #0
 8012756:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801275a:	4638      	mov	r0, r7
 801275c:	b023      	add	sp, #140	; 0x8c
 801275e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012762:	9a08      	ldr	r2, [sp, #32]
 8012764:	2a00      	cmp	r2, #0
 8012766:	d0f5      	beq.n	8012754 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8012768:	7812      	ldrb	r2, [r2, #0]
 801276a:	e7f0      	b.n	801274e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801276c:	2d00      	cmp	r5, #0
 801276e:	d0ea      	beq.n	8012746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012770:	782a      	ldrb	r2, [r5, #0]
 8012772:	b142      	cbz	r2, 8012786 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8012774:	2a25      	cmp	r2, #37	; 0x25
 8012776:	d001      	beq.n	801277c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8012778:	459a      	cmp	sl, r3
 801277a:	dc08      	bgt.n	801278e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801277c:	f1bb 0f00 	cmp.w	fp, #0
 8012780:	d121      	bne.n	80127c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8012782:	2d00      	cmp	r5, #0
 8012784:	d0df      	beq.n	8012746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8012786:	782a      	ldrb	r2, [r5, #0]
 8012788:	f04f 0b00 	mov.w	fp, #0
 801278c:	e01d      	b.n	80127ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801278e:	f1bb 0f00 	cmp.w	fp, #0
 8012792:	d078      	beq.n	8012886 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8012794:	f8bb 2000 	ldrh.w	r2, [fp]
 8012798:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801279c:	f1bb 0f00 	cmp.w	fp, #0
 80127a0:	d002      	beq.n	80127a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80127a2:	f10b 0202 	add.w	r2, fp, #2
 80127a6:	9209      	str	r2, [sp, #36]	; 0x24
 80127a8:	b10d      	cbz	r5, 80127ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80127aa:	3501      	adds	r5, #1
 80127ac:	9508      	str	r5, [sp, #32]
 80127ae:	3301      	adds	r3, #1
 80127b0:	930d      	str	r3, [sp, #52]	; 0x34
 80127b2:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80127b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80127b8:	f1bb 0f00 	cmp.w	fp, #0
 80127bc:	d0d6      	beq.n	801276c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80127be:	f8bb 2000 	ldrh.w	r2, [fp]
 80127c2:	2a00      	cmp	r2, #0
 80127c4:	d1d6      	bne.n	8012774 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80127c6:	f8bb 2000 	ldrh.w	r2, [fp]
 80127ca:	2a00      	cmp	r2, #0
 80127cc:	d0bb      	beq.n	8012746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80127ce:	459a      	cmp	sl, r3
 80127d0:	ddb9      	ble.n	8012746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80127d2:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80127d6:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80127da:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80127de:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80127e2:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80127e6:	960e      	str	r6, [sp, #56]	; 0x38
 80127e8:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80127ec:	960f      	str	r6, [sp, #60]	; 0x3c
 80127ee:	f1bb 0f00 	cmp.w	fp, #0
 80127f2:	d002      	beq.n	80127fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80127f4:	f10b 0302 	add.w	r3, fp, #2
 80127f8:	9309      	str	r3, [sp, #36]	; 0x24
 80127fa:	b10d      	cbz	r5, 8012800 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80127fc:	1c6b      	adds	r3, r5, #1
 80127fe:	9308      	str	r3, [sp, #32]
 8012800:	ab0f      	add	r3, sp, #60	; 0x3c
 8012802:	9305      	str	r3, [sp, #20]
 8012804:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8012808:	9304      	str	r3, [sp, #16]
 801280a:	ab0e      	add	r3, sp, #56	; 0x38
 801280c:	9303      	str	r3, [sp, #12]
 801280e:	ab0c      	add	r3, sp, #48	; 0x30
 8012810:	9302      	str	r3, [sp, #8]
 8012812:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8012816:	9301      	str	r3, [sp, #4]
 8012818:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801281c:	9300      	str	r3, [sp, #0]
 801281e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8012822:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8012826:	a908      	add	r1, sp, #32
 8012828:	a809      	add	r0, sp, #36	; 0x24
 801282a:	f7ff fea8 	bl	801257e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801282e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012830:	2b00      	cmp	r3, #0
 8012832:	bfbe      	ittt	lt
 8012834:	6823      	ldrlt	r3, [r4, #0]
 8012836:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801283a:	930e      	strlt	r3, [sp, #56]	; 0x38
 801283c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801283e:	bfb8      	it	lt
 8012840:	3404      	addlt	r4, #4
 8012842:	2b00      	cmp	r3, #0
 8012844:	bfb8      	it	lt
 8012846:	6823      	ldrlt	r3, [r4, #0]
 8012848:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801284c:	bfbe      	ittt	lt
 801284e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8012852:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8012854:	3404      	addlt	r4, #4
 8012856:	b1d9      	cbz	r1, 8012890 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8012858:	880b      	ldrh	r3, [r1, #0]
 801285a:	2b69      	cmp	r3, #105	; 0x69
 801285c:	d01f      	beq.n	801289e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801285e:	d82f      	bhi.n	80128c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8012860:	2b58      	cmp	r3, #88	; 0x58
 8012862:	d01c      	beq.n	801289e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8012864:	d818      	bhi.n	8012898 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8012866:	2b25      	cmp	r3, #37	; 0x25
 8012868:	d034      	beq.n	80128d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801286a:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801286e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012870:	f1bb 0f00 	cmp.w	fp, #0
 8012874:	f000 80b8 	beq.w	80129e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8012878:	f8bb 5000 	ldrh.w	r5, [fp]
 801287c:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8012880:	3301      	adds	r3, #1
 8012882:	930d      	str	r3, [sp, #52]	; 0x34
 8012884:	e029      	b.n	80128da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8012886:	b10d      	cbz	r5, 801288c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8012888:	782a      	ldrb	r2, [r5, #0]
 801288a:	e785      	b.n	8012798 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801288c:	462a      	mov	r2, r5
 801288e:	e783      	b.n	8012798 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8012890:	2a00      	cmp	r2, #0
 8012892:	d0ea      	beq.n	801286a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8012894:	7813      	ldrb	r3, [r2, #0]
 8012896:	e7e0      	b.n	801285a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8012898:	3b63      	subs	r3, #99	; 0x63
 801289a:	2b01      	cmp	r3, #1
 801289c:	d8e5      	bhi.n	801286a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801289e:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80128a2:	b329      	cbz	r1, 80128f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80128a4:	880b      	ldrh	r3, [r1, #0]
 80128a6:	2b69      	cmp	r3, #105	; 0x69
 80128a8:	d063      	beq.n	8012972 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80128aa:	d825      	bhi.n	80128f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80128ac:	2b63      	cmp	r3, #99	; 0x63
 80128ae:	d038      	beq.n	8012922 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80128b0:	2b64      	cmp	r3, #100	; 0x64
 80128b2:	d05e      	beq.n	8012972 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80128b4:	2b58      	cmp	r3, #88	; 0x58
 80128b6:	d07b      	beq.n	80129b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80128b8:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80128bc:	4625      	mov	r5, r4
 80128be:	e036      	b.n	801292e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80128c0:	2b73      	cmp	r3, #115	; 0x73
 80128c2:	d0ec      	beq.n	801289e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80128c4:	d802      	bhi.n	80128cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80128c6:	2b6f      	cmp	r3, #111	; 0x6f
 80128c8:	d1cf      	bne.n	801286a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80128ca:	e7e8      	b.n	801289e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80128cc:	2b75      	cmp	r3, #117	; 0x75
 80128ce:	d0e6      	beq.n	801289e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80128d0:	2b78      	cmp	r3, #120	; 0x78
 80128d2:	e7f9      	b.n	80128c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80128d4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80128d6:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80128da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80128dc:	b10b      	cbz	r3, 80128e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80128de:	3302      	adds	r3, #2
 80128e0:	9309      	str	r3, [sp, #36]	; 0x24
 80128e2:	9b08      	ldr	r3, [sp, #32]
 80128e4:	2b00      	cmp	r3, #0
 80128e6:	f43f af2e 	beq.w	8012746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80128ea:	3301      	adds	r3, #1
 80128ec:	9308      	str	r3, [sp, #32]
 80128ee:	e72a      	b.n	8012746 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80128f0:	2a00      	cmp	r2, #0
 80128f2:	d0e1      	beq.n	80128b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80128f4:	7813      	ldrb	r3, [r2, #0]
 80128f6:	e7d6      	b.n	80128a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80128f8:	2b73      	cmp	r3, #115	; 0x73
 80128fa:	d036      	beq.n	801296a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80128fc:	d807      	bhi.n	801290e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80128fe:	2b6f      	cmp	r3, #111	; 0x6f
 8012900:	d1da      	bne.n	80128b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8012902:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012904:	1d25      	adds	r5, r4, #4
 8012906:	eba8 0202 	sub.w	r2, r8, r2
 801290a:	2308      	movs	r3, #8
 801290c:	e04a      	b.n	80129a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801290e:	2b75      	cmp	r3, #117	; 0x75
 8012910:	d043      	beq.n	801299a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8012912:	2b78      	cmp	r3, #120	; 0x78
 8012914:	d1d0      	bne.n	80128b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8012916:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012918:	1d25      	adds	r5, r4, #4
 801291a:	eba8 0202 	sub.w	r2, r8, r2
 801291e:	2310      	movs	r3, #16
 8012920:	e040      	b.n	80129a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8012922:	6823      	ldr	r3, [r4, #0]
 8012924:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8012928:	1d25      	adds	r5, r4, #4
 801292a:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801292e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012930:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8012934:	2b00      	cmp	r3, #0
 8012936:	d052      	beq.n	80129de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8012938:	881a      	ldrh	r2, [r3, #0]
 801293a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801293e:	a80d      	add	r0, sp, #52	; 0x34
 8012940:	9005      	str	r0, [sp, #20]
 8012942:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8012946:	9004      	str	r0, [sp, #16]
 8012948:	980e      	ldr	r0, [sp, #56]	; 0x38
 801294a:	9003      	str	r0, [sp, #12]
 801294c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8012950:	9002      	str	r0, [sp, #8]
 8012952:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012954:	9001      	str	r0, [sp, #4]
 8012956:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801295a:	9000      	str	r0, [sp, #0]
 801295c:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8012960:	a810      	add	r0, sp, #64	; 0x40
 8012962:	f7ff fd49 	bl	80123f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8012966:	462c      	mov	r4, r5
 8012968:	e7b7      	b.n	80128da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801296a:	6823      	ldr	r3, [r4, #0]
 801296c:	1d25      	adds	r5, r4, #4
 801296e:	9310      	str	r3, [sp, #64]	; 0x40
 8012970:	e7dd      	b.n	801292e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012972:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012974:	6820      	ldr	r0, [r4, #0]
 8012976:	eba8 0202 	sub.w	r2, r8, r2
 801297a:	230a      	movs	r3, #10
 801297c:	b292      	uxth	r2, r2
 801297e:	4649      	mov	r1, r9
 8012980:	f7ff fcf0 	bl	8012364 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8012984:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012988:	2b2d      	cmp	r3, #45	; 0x2d
 801298a:	f104 0504 	add.w	r5, r4, #4
 801298e:	d1ce      	bne.n	801292e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8012990:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012994:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012996:	3302      	adds	r3, #2
 8012998:	e7e9      	b.n	801296e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801299a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801299c:	1d25      	adds	r5, r4, #4
 801299e:	eba8 0202 	sub.w	r2, r8, r2
 80129a2:	230a      	movs	r3, #10
 80129a4:	b292      	uxth	r2, r2
 80129a6:	4649      	mov	r1, r9
 80129a8:	6820      	ldr	r0, [r4, #0]
 80129aa:	f7ff fd07 	bl	80123bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80129ae:	e7be      	b.n	801292e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80129b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80129b2:	6820      	ldr	r0, [r4, #0]
 80129b4:	eba8 0202 	sub.w	r2, r8, r2
 80129b8:	b292      	uxth	r2, r2
 80129ba:	2310      	movs	r3, #16
 80129bc:	4649      	mov	r1, r9
 80129be:	f7ff fcfd 	bl	80123bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80129c2:	1d25      	adds	r5, r4, #4
 80129c4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80129c8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80129cc:	2b00      	cmp	r3, #0
 80129ce:	d0ae      	beq.n	801292e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80129d0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80129d4:	2919      	cmp	r1, #25
 80129d6:	d8f7      	bhi.n	80129c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80129d8:	3b20      	subs	r3, #32
 80129da:	8013      	strh	r3, [r2, #0]
 80129dc:	e7f4      	b.n	80129c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80129de:	9a08      	ldr	r2, [sp, #32]
 80129e0:	2a00      	cmp	r2, #0
 80129e2:	d0aa      	beq.n	801293a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80129e4:	7812      	ldrb	r2, [r2, #0]
 80129e6:	e7a8      	b.n	801293a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80129e8:	2d00      	cmp	r5, #0
 80129ea:	f43f af47 	beq.w	801287c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80129ee:	782d      	ldrb	r5, [r5, #0]
 80129f0:	e744      	b.n	801287c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080129f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80129f2:	b507      	push	{r0, r1, r2, lr}
 80129f4:	9300      	str	r3, [sp, #0]
 80129f6:	4613      	mov	r3, r2
 80129f8:	2200      	movs	r2, #0
 80129fa:	f7ff fe90 	bl	801271e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80129fe:	b003      	add	sp, #12
 8012a00:	f85d fb04 	ldr.w	pc, [sp], #4

08012a04 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8012a04:	b40c      	push	{r2, r3}
 8012a06:	b507      	push	{r0, r1, r2, lr}
 8012a08:	ab04      	add	r3, sp, #16
 8012a0a:	f853 2b04 	ldr.w	r2, [r3], #4
 8012a0e:	9301      	str	r3, [sp, #4]
 8012a10:	f7ff ffef 	bl	80129f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8012a14:	b003      	add	sp, #12
 8012a16:	f85d eb04 	ldr.w	lr, [sp], #4
 8012a1a:	b002      	add	sp, #8
 8012a1c:	4770      	bx	lr
	...

08012a20 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8012a20:	4b01      	ldr	r3, [pc, #4]	; (8012a28 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8012a22:	6018      	str	r0, [r3, #0]
 8012a24:	4770      	bx	lr
 8012a26:	bf00      	nop
 8012a28:	20015024 	.word	0x20015024

08012a2c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8012a2c:	4b06      	ldr	r3, [pc, #24]	; (8012a48 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8012a2e:	881a      	ldrh	r2, [r3, #0]
 8012a30:	4282      	cmp	r2, r0
 8012a32:	d807      	bhi.n	8012a44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012a34:	4b05      	ldr	r3, [pc, #20]	; (8012a4c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012a36:	881b      	ldrh	r3, [r3, #0]
 8012a38:	4413      	add	r3, r2
 8012a3a:	4298      	cmp	r0, r3
 8012a3c:	bfac      	ite	ge
 8012a3e:	2000      	movge	r0, #0
 8012a40:	2001      	movlt	r0, #1
 8012a42:	4770      	bx	lr
 8012a44:	2000      	movs	r0, #0
 8012a46:	4770      	bx	lr
 8012a48:	20015044 	.word	0x20015044
 8012a4c:	20015048 	.word	0x20015048

08012a50 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012a50:	b508      	push	{r3, lr}
 8012a52:	4601      	mov	r1, r0
 8012a54:	f7ff ffea 	bl	8012a2c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012a58:	b118      	cbz	r0, 8012a62 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8012a5a:	4b02      	ldr	r3, [pc, #8]	; (8012a64 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8012a5c:	681b      	ldr	r3, [r3, #0]
 8012a5e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012a62:	bd08      	pop	{r3, pc}
 8012a64:	20015028 	.word	0x20015028

08012a68 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012a68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012a6a:	4c24      	ldr	r4, [pc, #144]	; (8012afc <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8012a6c:	6823      	ldr	r3, [r4, #0]
 8012a6e:	2b00      	cmp	r3, #0
 8012a70:	d042      	beq.n	8012af8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012a72:	4a23      	ldr	r2, [pc, #140]	; (8012b00 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012a74:	4d23      	ldr	r5, [pc, #140]	; (8012b04 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012a76:	8811      	ldrh	r1, [r2, #0]
 8012a78:	f8b5 c000 	ldrh.w	ip, [r5]
 8012a7c:	4822      	ldr	r0, [pc, #136]	; (8012b08 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8012a7e:	4461      	add	r1, ip
 8012a80:	1c4a      	adds	r2, r1, #1
 8012a82:	f022 0201 	bic.w	r2, r2, #1
 8012a86:	008f      	lsls	r7, r1, #2
 8012a88:	0412      	lsls	r2, r2, #16
 8012a8a:	19de      	adds	r6, r3, r7
 8012a8c:	0c12      	lsrs	r2, r2, #16
 8012a8e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012a92:	6006      	str	r6, [r0, #0]
 8012a94:	4e1d      	ldr	r6, [pc, #116]	; (8012b0c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012a96:	19da      	adds	r2, r3, r7
 8012a98:	6032      	str	r2, [r6, #0]
 8012a9a:	220e      	movs	r2, #14
 8012a9c:	fb02 f20c 	mul.w	r2, r2, ip
 8012aa0:	3203      	adds	r2, #3
 8012aa2:	f022 0203 	bic.w	r2, r2, #3
 8012aa6:	443a      	add	r2, r7
 8012aa8:	4f19      	ldr	r7, [pc, #100]	; (8012b10 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8012aaa:	4413      	add	r3, r2
 8012aac:	603b      	str	r3, [r7, #0]
 8012aae:	4f19      	ldr	r7, [pc, #100]	; (8012b14 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8012ab0:	2300      	movs	r3, #0
 8012ab2:	803b      	strh	r3, [r7, #0]
 8012ab4:	4f18      	ldr	r7, [pc, #96]	; (8012b18 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8012ab6:	683f      	ldr	r7, [r7, #0]
 8012ab8:	1aba      	subs	r2, r7, r2
 8012aba:	4f18      	ldr	r7, [pc, #96]	; (8012b1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8012abc:	603a      	str	r2, [r7, #0]
 8012abe:	4a18      	ldr	r2, [pc, #96]	; (8012b20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8012ac0:	469c      	mov	ip, r3
 8012ac2:	8013      	strh	r3, [r2, #0]
 8012ac4:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8012ac8:	428b      	cmp	r3, r1
 8012aca:	d10d      	bne.n	8012ae8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8012acc:	882d      	ldrh	r5, [r5, #0]
 8012ace:	6830      	ldr	r0, [r6, #0]
 8012ad0:	2300      	movs	r3, #0
 8012ad2:	240e      	movs	r4, #14
 8012ad4:	429d      	cmp	r5, r3
 8012ad6:	d90f      	bls.n	8012af8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012ad8:	fb04 0203 	mla	r2, r4, r3, r0
 8012adc:	3301      	adds	r3, #1
 8012ade:	7b11      	ldrb	r1, [r2, #12]
 8012ae0:	f36f 1145 	bfc	r1, #5, #1
 8012ae4:	7311      	strb	r1, [r2, #12]
 8012ae6:	e7f5      	b.n	8012ad4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8012ae8:	6822      	ldr	r2, [r4, #0]
 8012aea:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8012aee:	6802      	ldr	r2, [r0, #0]
 8012af0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8012af4:	3301      	adds	r3, #1
 8012af6:	e7e7      	b.n	8012ac8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8012af8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012afa:	bf00      	nop
 8012afc:	20015028 	.word	0x20015028
 8012b00:	20015044 	.word	0x20015044
 8012b04:	20015048 	.word	0x20015048
 8012b08:	2001503c 	.word	0x2001503c
 8012b0c:	2001502c 	.word	0x2001502c
 8012b10:	20015034 	.word	0x20015034
 8012b14:	20015046 	.word	0x20015046
 8012b18:	20015030 	.word	0x20015030
 8012b1c:	20015040 	.word	0x20015040
 8012b20:	20015038 	.word	0x20015038

08012b24 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012b24:	4b06      	ldr	r3, [pc, #24]	; (8012b40 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012b26:	681b      	ldr	r3, [r3, #0]
 8012b28:	b943      	cbnz	r3, 8012b3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012b2a:	b139      	cbz	r1, 8012b3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8012b2c:	4b05      	ldr	r3, [pc, #20]	; (8012b44 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8012b2e:	801a      	strh	r2, [r3, #0]
 8012b30:	4b05      	ldr	r3, [pc, #20]	; (8012b48 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8012b32:	6019      	str	r1, [r3, #0]
 8012b34:	4b05      	ldr	r3, [pc, #20]	; (8012b4c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012b36:	6018      	str	r0, [r3, #0]
 8012b38:	f7ff bf96 	b.w	8012a68 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8012b3c:	4770      	bx	lr
 8012b3e:	bf00      	nop
 8012b40:	20015034 	.word	0x20015034
 8012b44:	20015048 	.word	0x20015048
 8012b48:	20015030 	.word	0x20015030
 8012b4c:	20015028 	.word	0x20015028

08012b50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012b50:	b470      	push	{r4, r5, r6}
 8012b52:	4c07      	ldr	r4, [pc, #28]	; (8012b70 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012b54:	6826      	ldr	r6, [r4, #0]
 8012b56:	4605      	mov	r5, r0
 8012b58:	4610      	mov	r0, r2
 8012b5a:	9a03      	ldr	r2, [sp, #12]
 8012b5c:	b936      	cbnz	r6, 8012b6c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8012b5e:	6025      	str	r5, [r4, #0]
 8012b60:	4c04      	ldr	r4, [pc, #16]	; (8012b74 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012b62:	8021      	strh	r1, [r4, #0]
 8012b64:	bc70      	pop	{r4, r5, r6}
 8012b66:	4619      	mov	r1, r3
 8012b68:	f7ff bfdc 	b.w	8012b24 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8012b6c:	bc70      	pop	{r4, r5, r6}
 8012b6e:	4770      	bx	lr
 8012b70:	2001504c 	.word	0x2001504c
 8012b74:	20015044 	.word	0x20015044

08012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012b78:	4a12      	ldr	r2, [pc, #72]	; (8012bc4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8012b7a:	8803      	ldrh	r3, [r0, #0]
 8012b7c:	8812      	ldrh	r2, [r2, #0]
 8012b7e:	4293      	cmp	r3, r2
 8012b80:	d207      	bcs.n	8012b92 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012b82:	4a11      	ldr	r2, [pc, #68]	; (8012bc8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012b84:	6812      	ldr	r2, [r2, #0]
 8012b86:	2114      	movs	r1, #20
 8012b88:	fb01 2303 	mla	r3, r1, r3, r2
 8012b8c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012b90:	4770      	bx	lr
 8012b92:	490e      	ldr	r1, [pc, #56]	; (8012bcc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012b94:	8809      	ldrh	r1, [r1, #0]
 8012b96:	4411      	add	r1, r2
 8012b98:	428b      	cmp	r3, r1
 8012b9a:	da04      	bge.n	8012ba6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8012b9c:	1a9b      	subs	r3, r3, r2
 8012b9e:	4a0c      	ldr	r2, [pc, #48]	; (8012bd0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012ba0:	210e      	movs	r1, #14
 8012ba2:	6812      	ldr	r2, [r2, #0]
 8012ba4:	e7f0      	b.n	8012b88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012ba6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012baa:	4293      	cmp	r3, r2
 8012bac:	d108      	bne.n	8012bc0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8012bae:	4b09      	ldr	r3, [pc, #36]	; (8012bd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8012bb0:	781b      	ldrb	r3, [r3, #0]
 8012bb2:	b91b      	cbnz	r3, 8012bbc <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8012bb4:	4b08      	ldr	r3, [pc, #32]	; (8012bd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8012bb6:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012bba:	4770      	bx	lr
 8012bbc:	4b07      	ldr	r3, [pc, #28]	; (8012bdc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8012bbe:	e7fa      	b.n	8012bb6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8012bc0:	2000      	movs	r0, #0
 8012bc2:	4770      	bx	lr
 8012bc4:	20015044 	.word	0x20015044
 8012bc8:	2001504c 	.word	0x2001504c
 8012bcc:	20015048 	.word	0x20015048
 8012bd0:	2001502c 	.word	0x2001502c
 8012bd4:	20014fbc 	.word	0x20014fbc
 8012bd8:	20014fbe 	.word	0x20014fbe
 8012bdc:	20014fc0 	.word	0x20014fc0

08012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8012be0:	4a12      	ldr	r2, [pc, #72]	; (8012c2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8012be2:	8803      	ldrh	r3, [r0, #0]
 8012be4:	8812      	ldrh	r2, [r2, #0]
 8012be6:	4293      	cmp	r3, r2
 8012be8:	d207      	bcs.n	8012bfa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8012bea:	4a11      	ldr	r2, [pc, #68]	; (8012c30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8012bec:	6812      	ldr	r2, [r2, #0]
 8012bee:	2114      	movs	r1, #20
 8012bf0:	fb01 2303 	mla	r3, r1, r3, r2
 8012bf4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8012bf8:	4770      	bx	lr
 8012bfa:	490e      	ldr	r1, [pc, #56]	; (8012c34 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8012bfc:	8809      	ldrh	r1, [r1, #0]
 8012bfe:	4411      	add	r1, r2
 8012c00:	428b      	cmp	r3, r1
 8012c02:	da04      	bge.n	8012c0e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8012c04:	1a9b      	subs	r3, r3, r2
 8012c06:	4a0c      	ldr	r2, [pc, #48]	; (8012c38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8012c08:	210e      	movs	r1, #14
 8012c0a:	6812      	ldr	r2, [r2, #0]
 8012c0c:	e7f0      	b.n	8012bf0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8012c0e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012c12:	4293      	cmp	r3, r2
 8012c14:	d108      	bne.n	8012c28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012c16:	4b09      	ldr	r3, [pc, #36]	; (8012c3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012c18:	781b      	ldrb	r3, [r3, #0]
 8012c1a:	b91b      	cbnz	r3, 8012c24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8012c1c:	4b08      	ldr	r3, [pc, #32]	; (8012c40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8012c1e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012c22:	4770      	bx	lr
 8012c24:	4b07      	ldr	r3, [pc, #28]	; (8012c44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012c26:	e7fa      	b.n	8012c1e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012c28:	2000      	movs	r0, #0
 8012c2a:	4770      	bx	lr
 8012c2c:	20015044 	.word	0x20015044
 8012c30:	2001504c 	.word	0x2001504c
 8012c34:	20015048 	.word	0x20015048
 8012c38:	2001502c 	.word	0x2001502c
 8012c3c:	20014fbc 	.word	0x20014fbc
 8012c40:	20014fc0 	.word	0x20014fc0
 8012c44:	20014fbe 	.word	0x20014fbe

08012c48 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012c48:	b510      	push	{r4, lr}
 8012c4a:	4a1f      	ldr	r2, [pc, #124]	; (8012cc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8012c4c:	880b      	ldrh	r3, [r1, #0]
 8012c4e:	8812      	ldrh	r2, [r2, #0]
 8012c50:	4293      	cmp	r3, r2
 8012c52:	d213      	bcs.n	8012c7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012c54:	4a1d      	ldr	r2, [pc, #116]	; (8012ccc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8012c56:	6812      	ldr	r2, [r2, #0]
 8012c58:	2114      	movs	r1, #20
 8012c5a:	fb01 2303 	mla	r3, r1, r3, r2
 8012c5e:	8a1a      	ldrh	r2, [r3, #16]
 8012c60:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012c64:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012c68:	8a5b      	ldrh	r3, [r3, #18]
 8012c6a:	8004      	strh	r4, [r0, #0]
 8012c6c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012c70:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012c74:	8041      	strh	r1, [r0, #2]
 8012c76:	8082      	strh	r2, [r0, #4]
 8012c78:	80c3      	strh	r3, [r0, #6]
 8012c7a:	e00e      	b.n	8012c9a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012c7c:	4914      	ldr	r1, [pc, #80]	; (8012cd0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8012c7e:	8809      	ldrh	r1, [r1, #0]
 8012c80:	4411      	add	r1, r2
 8012c82:	428b      	cmp	r3, r1
 8012c84:	da0a      	bge.n	8012c9c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8012c86:	1a9b      	subs	r3, r3, r2
 8012c88:	4a12      	ldr	r2, [pc, #72]	; (8012cd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8012c8a:	6812      	ldr	r2, [r2, #0]
 8012c8c:	210e      	movs	r1, #14
 8012c8e:	fb01 2303 	mla	r3, r1, r3, r2
 8012c92:	681a      	ldr	r2, [r3, #0]
 8012c94:	6002      	str	r2, [r0, #0]
 8012c96:	685a      	ldr	r2, [r3, #4]
 8012c98:	6042      	str	r2, [r0, #4]
 8012c9a:	bd10      	pop	{r4, pc}
 8012c9c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012ca0:	4293      	cmp	r3, r2
 8012ca2:	d10b      	bne.n	8012cbc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8012ca4:	4b0c      	ldr	r3, [pc, #48]	; (8012cd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012ca6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012caa:	4b0c      	ldr	r3, [pc, #48]	; (8012cdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8012cac:	8081      	strh	r1, [r0, #4]
 8012cae:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012cb2:	80c2      	strh	r2, [r0, #6]
 8012cb4:	2300      	movs	r3, #0
 8012cb6:	8003      	strh	r3, [r0, #0]
 8012cb8:	8043      	strh	r3, [r0, #2]
 8012cba:	e7ee      	b.n	8012c9a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8012cbc:	2300      	movs	r3, #0
 8012cbe:	8003      	strh	r3, [r0, #0]
 8012cc0:	8043      	strh	r3, [r0, #2]
 8012cc2:	8083      	strh	r3, [r0, #4]
 8012cc4:	e7d8      	b.n	8012c78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012cc6:	bf00      	nop
 8012cc8:	20015044 	.word	0x20015044
 8012ccc:	2001504c 	.word	0x2001504c
 8012cd0:	20015048 	.word	0x20015048
 8012cd4:	2001502c 	.word	0x2001502c
 8012cd8:	20014fb8 	.word	0x20014fb8
 8012cdc:	20014fba 	.word	0x20014fba

08012ce0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012ce0:	4a17      	ldr	r2, [pc, #92]	; (8012d40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8012ce2:	8803      	ldrh	r3, [r0, #0]
 8012ce4:	8812      	ldrh	r2, [r2, #0]
 8012ce6:	4293      	cmp	r3, r2
 8012ce8:	d213      	bcs.n	8012d12 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8012cea:	4a16      	ldr	r2, [pc, #88]	; (8012d44 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012cec:	6812      	ldr	r2, [r2, #0]
 8012cee:	2114      	movs	r1, #20
 8012cf0:	fb01 2303 	mla	r3, r1, r3, r2
 8012cf4:	8a1a      	ldrh	r2, [r3, #16]
 8012cf6:	8919      	ldrh	r1, [r3, #8]
 8012cf8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012cfc:	428a      	cmp	r2, r1
 8012cfe:	db1d      	blt.n	8012d3c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012d00:	8a58      	ldrh	r0, [r3, #18]
 8012d02:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012d06:	895b      	ldrh	r3, [r3, #10]
 8012d08:	4298      	cmp	r0, r3
 8012d0a:	bfac      	ite	ge
 8012d0c:	2000      	movge	r0, #0
 8012d0e:	2001      	movlt	r0, #1
 8012d10:	4770      	bx	lr
 8012d12:	490d      	ldr	r1, [pc, #52]	; (8012d48 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012d14:	8809      	ldrh	r1, [r1, #0]
 8012d16:	4411      	add	r1, r2
 8012d18:	428b      	cmp	r3, r1
 8012d1a:	da0d      	bge.n	8012d38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012d1c:	1a9b      	subs	r3, r3, r2
 8012d1e:	4a0b      	ldr	r2, [pc, #44]	; (8012d4c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8012d20:	6812      	ldr	r2, [r2, #0]
 8012d22:	210e      	movs	r1, #14
 8012d24:	fb01 2303 	mla	r3, r1, r3, r2
 8012d28:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012d2c:	891a      	ldrh	r2, [r3, #8]
 8012d2e:	4291      	cmp	r1, r2
 8012d30:	db04      	blt.n	8012d3c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8012d32:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012d36:	e7e6      	b.n	8012d06 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012d38:	2000      	movs	r0, #0
 8012d3a:	4770      	bx	lr
 8012d3c:	2001      	movs	r0, #1
 8012d3e:	4770      	bx	lr
 8012d40:	20015044 	.word	0x20015044
 8012d44:	2001504c 	.word	0x2001504c
 8012d48:	20015048 	.word	0x20015048
 8012d4c:	2001502c 	.word	0x2001502c

08012d50 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012d50:	4a12      	ldr	r2, [pc, #72]	; (8012d9c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8012d52:	8803      	ldrh	r3, [r0, #0]
 8012d54:	8811      	ldrh	r1, [r2, #0]
 8012d56:	428b      	cmp	r3, r1
 8012d58:	d20b      	bcs.n	8012d72 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012d5a:	4a11      	ldr	r2, [pc, #68]	; (8012da0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012d5c:	6812      	ldr	r2, [r2, #0]
 8012d5e:	b112      	cbz	r2, 8012d66 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012d60:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012d64:	b9c0      	cbnz	r0, 8012d98 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012d66:	4a0f      	ldr	r2, [pc, #60]	; (8012da4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012d68:	6811      	ldr	r1, [r2, #0]
 8012d6a:	2214      	movs	r2, #20
 8012d6c:	4353      	muls	r3, r2
 8012d6e:	58c8      	ldr	r0, [r1, r3]
 8012d70:	4770      	bx	lr
 8012d72:	4a0d      	ldr	r2, [pc, #52]	; (8012da8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012d74:	8812      	ldrh	r2, [r2, #0]
 8012d76:	440a      	add	r2, r1
 8012d78:	4293      	cmp	r3, r2
 8012d7a:	da04      	bge.n	8012d86 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012d7c:	4a08      	ldr	r2, [pc, #32]	; (8012da0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012d7e:	6812      	ldr	r2, [r2, #0]
 8012d80:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012d84:	4770      	bx	lr
 8012d86:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012d8a:	4293      	cmp	r3, r2
 8012d8c:	d103      	bne.n	8012d96 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012d8e:	4b07      	ldr	r3, [pc, #28]	; (8012dac <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8012d90:	681b      	ldr	r3, [r3, #0]
 8012d92:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8012d94:	4770      	bx	lr
 8012d96:	2000      	movs	r0, #0
 8012d98:	4770      	bx	lr
 8012d9a:	bf00      	nop
 8012d9c:	20015044 	.word	0x20015044
 8012da0:	20015028 	.word	0x20015028
 8012da4:	2001504c 	.word	0x2001504c
 8012da8:	20015048 	.word	0x20015048
 8012dac:	20014fc4 	.word	0x20014fc4

08012db0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8012db0:	4b24      	ldr	r3, [pc, #144]	; (8012e44 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8012db2:	8802      	ldrh	r2, [r0, #0]
 8012db4:	8818      	ldrh	r0, [r3, #0]
 8012db6:	4282      	cmp	r2, r0
 8012db8:	d221      	bcs.n	8012dfe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8012dba:	4b23      	ldr	r3, [pc, #140]	; (8012e48 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8012dbc:	6819      	ldr	r1, [r3, #0]
 8012dbe:	2314      	movs	r3, #20
 8012dc0:	fb03 1302 	mla	r3, r3, r2, r1
 8012dc4:	6858      	ldr	r0, [r3, #4]
 8012dc6:	2800      	cmp	r0, #0
 8012dc8:	d03a      	beq.n	8012e40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012dca:	4920      	ldr	r1, [pc, #128]	; (8012e4c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012dcc:	6809      	ldr	r1, [r1, #0]
 8012dce:	2900      	cmp	r1, #0
 8012dd0:	d036      	beq.n	8012e40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012dd2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8012dd6:	2900      	cmp	r1, #0
 8012dd8:	d032      	beq.n	8012e40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8012dda:	891a      	ldrh	r2, [r3, #8]
 8012ddc:	8958      	ldrh	r0, [r3, #10]
 8012dde:	4350      	muls	r0, r2
 8012de0:	7c5a      	ldrb	r2, [r3, #17]
 8012de2:	7cdb      	ldrb	r3, [r3, #19]
 8012de4:	0952      	lsrs	r2, r2, #5
 8012de6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012dea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8012dee:	2b0b      	cmp	r3, #11
 8012df0:	bf18      	it	ne
 8012df2:	0040      	lslne	r0, r0, #1
 8012df4:	3003      	adds	r0, #3
 8012df6:	f020 0003 	bic.w	r0, r0, #3
 8012dfa:	4408      	add	r0, r1
 8012dfc:	4770      	bx	lr
 8012dfe:	4b14      	ldr	r3, [pc, #80]	; (8012e50 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8012e00:	881b      	ldrh	r3, [r3, #0]
 8012e02:	4403      	add	r3, r0
 8012e04:	429a      	cmp	r2, r3
 8012e06:	da1a      	bge.n	8012e3e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012e08:	4b12      	ldr	r3, [pc, #72]	; (8012e54 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012e0a:	681b      	ldr	r3, [r3, #0]
 8012e0c:	1a10      	subs	r0, r2, r0
 8012e0e:	210e      	movs	r1, #14
 8012e10:	fb01 3000 	mla	r0, r1, r0, r3
 8012e14:	7b03      	ldrb	r3, [r0, #12]
 8012e16:	f003 031f 	and.w	r3, r3, #31
 8012e1a:	2b0b      	cmp	r3, #11
 8012e1c:	d10b      	bne.n	8012e36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8012e1e:	8903      	ldrh	r3, [r0, #8]
 8012e20:	8940      	ldrh	r0, [r0, #10]
 8012e22:	4358      	muls	r0, r3
 8012e24:	4b09      	ldr	r3, [pc, #36]	; (8012e4c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012e26:	6819      	ldr	r1, [r3, #0]
 8012e28:	3003      	adds	r0, #3
 8012e2a:	f020 0303 	bic.w	r3, r0, #3
 8012e2e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8012e32:	4418      	add	r0, r3
 8012e34:	4770      	bx	lr
 8012e36:	2b0d      	cmp	r3, #13
 8012e38:	d101      	bne.n	8012e3e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012e3a:	300d      	adds	r0, #13
 8012e3c:	4770      	bx	lr
 8012e3e:	2000      	movs	r0, #0
 8012e40:	4770      	bx	lr
 8012e42:	bf00      	nop
 8012e44:	20015044 	.word	0x20015044
 8012e48:	2001504c 	.word	0x2001504c
 8012e4c:	20015028 	.word	0x20015028
 8012e50:	20015048 	.word	0x20015048
 8012e54:	2001502c 	.word	0x2001502c

08012e58 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012e58:	b510      	push	{r4, lr}
 8012e5a:	4a17      	ldr	r2, [pc, #92]	; (8012eb8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8012e5c:	8803      	ldrh	r3, [r0, #0]
 8012e5e:	8812      	ldrh	r2, [r2, #0]
 8012e60:	4293      	cmp	r3, r2
 8012e62:	d20c      	bcs.n	8012e7e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8012e64:	4a15      	ldr	r2, [pc, #84]	; (8012ebc <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8012e66:	6812      	ldr	r2, [r2, #0]
 8012e68:	2114      	movs	r1, #20
 8012e6a:	fb01 2303 	mla	r3, r1, r3, r2
 8012e6e:	7c58      	ldrb	r0, [r3, #17]
 8012e70:	0942      	lsrs	r2, r0, #5
 8012e72:	7cd8      	ldrb	r0, [r3, #19]
 8012e74:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8012e78:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8012e7c:	bd10      	pop	{r4, pc}
 8012e7e:	4910      	ldr	r1, [pc, #64]	; (8012ec0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8012e80:	8809      	ldrh	r1, [r1, #0]
 8012e82:	4411      	add	r1, r2
 8012e84:	428b      	cmp	r3, r1
 8012e86:	da09      	bge.n	8012e9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8012e88:	1a9b      	subs	r3, r3, r2
 8012e8a:	4a0e      	ldr	r2, [pc, #56]	; (8012ec4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8012e8c:	6812      	ldr	r2, [r2, #0]
 8012e8e:	210e      	movs	r1, #14
 8012e90:	fb01 2303 	mla	r3, r1, r3, r2
 8012e94:	7b18      	ldrb	r0, [r3, #12]
 8012e96:	f000 001f 	and.w	r0, r0, #31
 8012e9a:	e7ef      	b.n	8012e7c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8012e9c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012ea0:	4293      	cmp	r3, r2
 8012ea2:	d106      	bne.n	8012eb2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8012ea4:	f7ef fda4 	bl	80029f0 <_ZN8touchgfx3HAL3lcdEv>
 8012ea8:	6803      	ldr	r3, [r0, #0]
 8012eaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012eae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012eb0:	4718      	bx	r3
 8012eb2:	2000      	movs	r0, #0
 8012eb4:	e7e2      	b.n	8012e7c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8012eb6:	bf00      	nop
 8012eb8:	20015044 	.word	0x20015044
 8012ebc:	2001504c 	.word	0x2001504c
 8012ec0:	20015048 	.word	0x20015048
 8012ec4:	2001502c 	.word	0x2001502c

08012ec8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012ec8:	2010      	movs	r0, #16
 8012eca:	4770      	bx	lr

08012ecc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8012ecc:	2000      	movs	r0, #0
 8012ece:	4770      	bx	lr

08012ed0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012ed0:	4b02      	ldr	r3, [pc, #8]	; (8012edc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8012ed2:	8818      	ldrh	r0, [r3, #0]
 8012ed4:	0040      	lsls	r0, r0, #1
 8012ed6:	b280      	uxth	r0, r0
 8012ed8:	4770      	bx	lr
 8012eda:	bf00      	nop
 8012edc:	20014fbe 	.word	0x20014fbe

08012ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012ee0:	2bff      	cmp	r3, #255	; 0xff
 8012ee2:	d050      	beq.n	8012f86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012ee4:	2a0b      	cmp	r2, #11
 8012ee6:	d04a      	beq.n	8012f7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8012ee8:	d80e      	bhi.n	8012f08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012eea:	2a03      	cmp	r2, #3
 8012eec:	d03f      	beq.n	8012f6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8012eee:	d804      	bhi.n	8012efa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8012ef0:	2a01      	cmp	r2, #1
 8012ef2:	d03e      	beq.n	8012f72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8012ef4:	d93f      	bls.n	8012f76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8012ef6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8012ef8:	4770      	bx	lr
 8012efa:	2a09      	cmp	r2, #9
 8012efc:	d03f      	beq.n	8012f7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8012efe:	d83c      	bhi.n	8012f7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8012f00:	2a08      	cmp	r2, #8
 8012f02:	d03a      	beq.n	8012f7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8012f04:	2000      	movs	r0, #0
 8012f06:	4770      	bx	lr
 8012f08:	2a2f      	cmp	r2, #47	; 0x2f
 8012f0a:	d024      	beq.n	8012f56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8012f0c:	d80d      	bhi.n	8012f2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8012f0e:	2a2d      	cmp	r2, #45	; 0x2d
 8012f10:	d014      	beq.n	8012f3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8012f12:	d826      	bhi.n	8012f62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012f14:	2a2c      	cmp	r2, #44	; 0x2c
 8012f16:	d1f5      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f18:	684b      	ldr	r3, [r1, #4]
 8012f1a:	781b      	ldrb	r3, [r3, #0]
 8012f1c:	2b01      	cmp	r3, #1
 8012f1e:	d018      	beq.n	8012f52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8012f20:	d323      	bcc.n	8012f6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8012f22:	2b02      	cmp	r3, #2
 8012f24:	d1ee      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f26:	6880      	ldr	r0, [r0, #8]
 8012f28:	4770      	bx	lr
 8012f2a:	2a31      	cmp	r2, #49	; 0x31
 8012f2c:	d004      	beq.n	8012f38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8012f2e:	d328      	bcc.n	8012f82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8012f30:	2a32      	cmp	r2, #50	; 0x32
 8012f32:	d026      	beq.n	8012f82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8012f34:	2a33      	cmp	r2, #51	; 0x33
 8012f36:	d1e5      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f38:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8012f3a:	4770      	bx	lr
 8012f3c:	684b      	ldr	r3, [r1, #4]
 8012f3e:	781b      	ldrb	r3, [r3, #0]
 8012f40:	2b01      	cmp	r3, #1
 8012f42:	d004      	beq.n	8012f4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8012f44:	d30b      	bcc.n	8012f5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012f46:	2b02      	cmp	r3, #2
 8012f48:	d1dc      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f4a:	6900      	ldr	r0, [r0, #16]
 8012f4c:	4770      	bx	lr
 8012f4e:	6a00      	ldr	r0, [r0, #32]
 8012f50:	4770      	bx	lr
 8012f52:	6980      	ldr	r0, [r0, #24]
 8012f54:	4770      	bx	lr
 8012f56:	684b      	ldr	r3, [r1, #4]
 8012f58:	781b      	ldrb	r3, [r3, #0]
 8012f5a:	2b00      	cmp	r3, #0
 8012f5c:	d1d2      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f5e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8012f60:	4770      	bx	lr
 8012f62:	684b      	ldr	r3, [r1, #4]
 8012f64:	781b      	ldrb	r3, [r3, #0]
 8012f66:	2b00      	cmp	r3, #0
 8012f68:	d1cc      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012f6a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012f6c:	4770      	bx	lr
 8012f6e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8012f70:	4770      	bx	lr
 8012f72:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8012f74:	4770      	bx	lr
 8012f76:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8012f78:	4770      	bx	lr
 8012f7a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8012f7c:	4770      	bx	lr
 8012f7e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8012f80:	4770      	bx	lr
 8012f82:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8012f84:	4770      	bx	lr
 8012f86:	2a0b      	cmp	r2, #11
 8012f88:	d049      	beq.n	801301e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8012f8a:	d80e      	bhi.n	8012faa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8012f8c:	2a03      	cmp	r2, #3
 8012f8e:	d040      	beq.n	8013012 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8012f90:	d804      	bhi.n	8012f9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8012f92:	2a01      	cmp	r2, #1
 8012f94:	d03f      	beq.n	8013016 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8012f96:	d940      	bls.n	801301a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8012f98:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8012f9a:	4770      	bx	lr
 8012f9c:	2a09      	cmp	r2, #9
 8012f9e:	d03e      	beq.n	801301e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8012fa0:	d801      	bhi.n	8012fa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8012fa2:	2a08      	cmp	r2, #8
 8012fa4:	d1ae      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012fa6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8012fa8:	4770      	bx	lr
 8012faa:	2a2f      	cmp	r2, #47	; 0x2f
 8012fac:	d024      	beq.n	8012ff8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8012fae:	d80d      	bhi.n	8012fcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8012fb0:	2a2d      	cmp	r2, #45	; 0x2d
 8012fb2:	d014      	beq.n	8012fde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8012fb4:	d826      	bhi.n	8013004 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8012fb6:	2a2c      	cmp	r2, #44	; 0x2c
 8012fb8:	d1a4      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012fba:	684b      	ldr	r3, [r1, #4]
 8012fbc:	781b      	ldrb	r3, [r3, #0]
 8012fbe:	2b01      	cmp	r3, #1
 8012fc0:	d018      	beq.n	8012ff4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8012fc2:	d324      	bcc.n	801300e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8012fc4:	2b02      	cmp	r3, #2
 8012fc6:	d19d      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012fc8:	68c0      	ldr	r0, [r0, #12]
 8012fca:	4770      	bx	lr
 8012fcc:	2a31      	cmp	r2, #49	; 0x31
 8012fce:	d004      	beq.n	8012fda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8012fd0:	d327      	bcc.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012fd2:	2a32      	cmp	r2, #50	; 0x32
 8012fd4:	d025      	beq.n	8013022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012fd6:	2a33      	cmp	r2, #51	; 0x33
 8012fd8:	d194      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012fda:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8012fdc:	4770      	bx	lr
 8012fde:	684b      	ldr	r3, [r1, #4]
 8012fe0:	781b      	ldrb	r3, [r3, #0]
 8012fe2:	2b01      	cmp	r3, #1
 8012fe4:	d004      	beq.n	8012ff0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012fe6:	d30b      	bcc.n	8013000 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8012fe8:	2b02      	cmp	r3, #2
 8012fea:	d18b      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012fec:	6940      	ldr	r0, [r0, #20]
 8012fee:	4770      	bx	lr
 8012ff0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8012ff2:	4770      	bx	lr
 8012ff4:	69c0      	ldr	r0, [r0, #28]
 8012ff6:	4770      	bx	lr
 8012ff8:	684b      	ldr	r3, [r1, #4]
 8012ffa:	781b      	ldrb	r3, [r3, #0]
 8012ffc:	2b00      	cmp	r3, #0
 8012ffe:	d181      	bne.n	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013000:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8013002:	4770      	bx	lr
 8013004:	684b      	ldr	r3, [r1, #4]
 8013006:	781b      	ldrb	r3, [r3, #0]
 8013008:	2b00      	cmp	r3, #0
 801300a:	f47f af7b 	bne.w	8012f04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801300e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8013010:	4770      	bx	lr
 8013012:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8013014:	4770      	bx	lr
 8013016:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8013018:	4770      	bx	lr
 801301a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801301c:	4770      	bx	lr
 801301e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8013020:	4770      	bx	lr
 8013022:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8013024:	4770      	bx	lr

08013026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013026:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801302a:	b087      	sub	sp, #28
 801302c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801302e:	9205      	str	r2, [sp, #20]
 8013030:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013034:	9202      	str	r2, [sp, #8]
 8013036:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801303a:	9101      	str	r1, [sp, #4]
 801303c:	6841      	ldr	r1, [r0, #4]
 801303e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8013042:	fb01 2404 	mla	r4, r1, r4, r2
 8013046:	6802      	ldr	r2, [r0, #0]
 8013048:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801304c:	f8de 2000 	ldr.w	r2, [lr]
 8013050:	9203      	str	r2, [sp, #12]
 8013052:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013056:	3204      	adds	r2, #4
 8013058:	9204      	str	r2, [sp, #16]
 801305a:	9a02      	ldr	r2, [sp, #8]
 801305c:	43d6      	mvns	r6, r2
 801305e:	b2f6      	uxtb	r6, r6
 8013060:	9a01      	ldr	r2, [sp, #4]
 8013062:	2a00      	cmp	r2, #0
 8013064:	dc03      	bgt.n	801306e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013066:	9a05      	ldr	r2, [sp, #20]
 8013068:	2a00      	cmp	r2, #0
 801306a:	f340 8129 	ble.w	80132c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801306e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013070:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013074:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013078:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801307c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801307e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013082:	2b00      	cmp	r3, #0
 8013084:	dd0e      	ble.n	80130a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013086:	1408      	asrs	r0, r1, #16
 8013088:	d405      	bmi.n	8013096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801308a:	4560      	cmp	r0, ip
 801308c:	da03      	bge.n	8013096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801308e:	1410      	asrs	r0, r2, #16
 8013090:	d401      	bmi.n	8013096 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013092:	42b8      	cmp	r0, r7
 8013094:	db07      	blt.n	80130a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013096:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013098:	4401      	add	r1, r0
 801309a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801309c:	3b01      	subs	r3, #1
 801309e:	4402      	add	r2, r0
 80130a0:	3402      	adds	r4, #2
 80130a2:	e7ee      	b.n	8013082 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80130a4:	d071      	beq.n	801318a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80130a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80130a8:	1e58      	subs	r0, r3, #1
 80130aa:	fb05 1500 	mla	r5, r5, r0, r1
 80130ae:	142d      	asrs	r5, r5, #16
 80130b0:	d45f      	bmi.n	8013172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80130b2:	4565      	cmp	r5, ip
 80130b4:	da5d      	bge.n	8013172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80130b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80130b8:	fb05 2000 	mla	r0, r5, r0, r2
 80130bc:	1400      	asrs	r0, r0, #16
 80130be:	d458      	bmi.n	8013172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80130c0:	42b8      	cmp	r0, r7
 80130c2:	da56      	bge.n	8013172 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80130c4:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80130c8:	4699      	mov	r9, r3
 80130ca:	46a2      	mov	sl, r4
 80130cc:	f1b9 0f00 	cmp.w	r9, #0
 80130d0:	dd57      	ble.n	8013182 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80130d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80130d6:	9803      	ldr	r0, [sp, #12]
 80130d8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80130dc:	140d      	asrs	r5, r1, #16
 80130de:	fb07 000c 	mla	r0, r7, ip, r0
 80130e2:	f109 39ff 	add.w	r9, r9, #4294967295
 80130e6:	5d40      	ldrb	r0, [r0, r5]
 80130e8:	9d04      	ldr	r5, [sp, #16]
 80130ea:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80130ee:	f8ba 5000 	ldrh.w	r5, [sl]
 80130f2:	122f      	asrs	r7, r5, #8
 80130f4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80130f8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80130fc:	fb17 f706 	smulbb	r7, r7, r6
 8013100:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013104:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013108:	00ed      	lsls	r5, r5, #3
 801310a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801310e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8013112:	10c7      	asrs	r7, r0, #3
 8013114:	b2ed      	uxtb	r5, r5
 8013116:	00c0      	lsls	r0, r0, #3
 8013118:	fb18 f806 	smulbb	r8, r8, r6
 801311c:	fb15 f506 	smulbb	r5, r5, r6
 8013120:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013124:	b2c0      	uxtb	r0, r0
 8013126:	fa1f fc8c 	uxth.w	ip, ip
 801312a:	fb07 870b 	mla	r7, r7, fp, r8
 801312e:	fb00 500b 	mla	r0, r0, fp, r5
 8013132:	b280      	uxth	r0, r0
 8013134:	b2bf      	uxth	r7, r7
 8013136:	f10c 0501 	add.w	r5, ip, #1
 801313a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801313e:	f107 0801 	add.w	r8, r7, #1
 8013142:	1c45      	adds	r5, r0, #1
 8013144:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013148:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801314c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801314e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013152:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013156:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801315a:	ea45 0c0c 	orr.w	ip, r5, ip
 801315e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013162:	4401      	add	r1, r0
 8013164:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013166:	ea4c 0c08 	orr.w	ip, ip, r8
 801316a:	f82a cb02 	strh.w	ip, [sl], #2
 801316e:	4402      	add	r2, r0
 8013170:	e7ac      	b.n	80130cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013172:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8013176:	f04f 0800 	mov.w	r8, #0
 801317a:	eb03 0008 	add.w	r0, r3, r8
 801317e:	2800      	cmp	r0, #0
 8013180:	dc41      	bgt.n	8013206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013182:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013186:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801318a:	9b01      	ldr	r3, [sp, #4]
 801318c:	2b00      	cmp	r3, #0
 801318e:	f340 8097 	ble.w	80132c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8013192:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013196:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801319a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801319e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80131a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80131a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80131a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80131ac:	eef0 6a62 	vmov.f32	s13, s5
 80131b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80131b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80131b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80131bc:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80131c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80131c4:	eef0 6a43 	vmov.f32	s13, s6
 80131c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80131cc:	ee12 2a90 	vmov	r2, s5
 80131d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80131d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80131d8:	ee13 2a10 	vmov	r2, s6
 80131dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80131de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80131e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80131e4:	9314      	str	r3, [sp, #80]	; 0x50
 80131e6:	9b01      	ldr	r3, [sp, #4]
 80131e8:	9a05      	ldr	r2, [sp, #20]
 80131ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80131ee:	3b01      	subs	r3, #1
 80131f0:	9301      	str	r3, [sp, #4]
 80131f2:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80131f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80131f8:	eeb0 3a67 	vmov.f32	s6, s15
 80131fc:	bf08      	it	eq
 80131fe:	4613      	moveq	r3, r2
 8013200:	eef0 2a47 	vmov.f32	s5, s14
 8013204:	e72c      	b.n	8013060 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013206:	140f      	asrs	r7, r1, #16
 8013208:	d453      	bmi.n	80132b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801320a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801320e:	42bd      	cmp	r5, r7
 8013210:	dd4f      	ble.n	80132b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013212:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013216:	d44c      	bmi.n	80132b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013218:	f8de 000c 	ldr.w	r0, [lr, #12]
 801321c:	4560      	cmp	r0, ip
 801321e:	dd48      	ble.n	80132b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8013220:	9803      	ldr	r0, [sp, #12]
 8013222:	b22d      	sxth	r5, r5
 8013224:	fb0c 0505 	mla	r5, ip, r5, r0
 8013228:	5de8      	ldrb	r0, [r5, r7]
 801322a:	9d04      	ldr	r5, [sp, #16]
 801322c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013230:	f06f 0501 	mvn.w	r5, #1
 8013234:	fb05 fb08 	mul.w	fp, r5, r8
 8013238:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801323c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013240:	122f      	asrs	r7, r5, #8
 8013242:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013246:	fb17 f706 	smulbb	r7, r7, r6
 801324a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801324e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013252:	00ed      	lsls	r5, r5, #3
 8013254:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013258:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801325c:	10c7      	asrs	r7, r0, #3
 801325e:	b2ed      	uxtb	r5, r5
 8013260:	00c0      	lsls	r0, r0, #3
 8013262:	fb19 f906 	smulbb	r9, r9, r6
 8013266:	fb15 f506 	smulbb	r5, r5, r6
 801326a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801326e:	b2c0      	uxtb	r0, r0
 8013270:	fa1f fc8c 	uxth.w	ip, ip
 8013274:	fb07 970a 	mla	r7, r7, sl, r9
 8013278:	fb00 500a 	mla	r0, r0, sl, r5
 801327c:	b2bf      	uxth	r7, r7
 801327e:	b280      	uxth	r0, r0
 8013280:	f10c 0501 	add.w	r5, ip, #1
 8013284:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013288:	f107 0901 	add.w	r9, r7, #1
 801328c:	1c45      	adds	r5, r0, #1
 801328e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013292:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013296:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801329a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801329e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80132a2:	ea45 0c0c 	orr.w	ip, r5, ip
 80132a6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80132aa:	ea4c 0c09 	orr.w	ip, ip, r9
 80132ae:	f824 c00b 	strh.w	ip, [r4, fp]
 80132b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80132b4:	4401      	add	r1, r0
 80132b6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80132b8:	f108 38ff 	add.w	r8, r8, #4294967295
 80132bc:	4402      	add	r2, r0
 80132be:	e75c      	b.n	801317a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80132c0:	b007      	add	sp, #28
 80132c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080132c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80132c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132ca:	b085      	sub	sp, #20
 80132cc:	4693      	mov	fp, r2
 80132ce:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80132d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80132d2:	6870      	ldr	r0, [r6, #4]
 80132d4:	9100      	str	r1, [sp, #0]
 80132d6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80132da:	fb00 2404 	mla	r4, r0, r4, r2
 80132de:	6832      	ldr	r2, [r6, #0]
 80132e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80132e4:	682a      	ldr	r2, [r5, #0]
 80132e6:	9201      	str	r2, [sp, #4]
 80132e8:	686a      	ldr	r2, [r5, #4]
 80132ea:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80132ee:	3204      	adds	r2, #4
 80132f0:	9202      	str	r2, [sp, #8]
 80132f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80132f6:	9a00      	ldr	r2, [sp, #0]
 80132f8:	2a00      	cmp	r2, #0
 80132fa:	dc03      	bgt.n	8013304 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80132fc:	f1bb 0f00 	cmp.w	fp, #0
 8013300:	f340 80a0 	ble.w	8013444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8013304:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013306:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801330a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801330e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013312:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013314:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013318:	2b00      	cmp	r3, #0
 801331a:	dd0c      	ble.n	8013336 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801331c:	1406      	asrs	r6, r0, #16
 801331e:	d405      	bmi.n	801332c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013320:	454e      	cmp	r6, r9
 8013322:	da03      	bge.n	801332c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013324:	1416      	asrs	r6, r2, #16
 8013326:	d401      	bmi.n	801332c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013328:	4546      	cmp	r6, r8
 801332a:	db05      	blt.n	8013338 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801332c:	4470      	add	r0, lr
 801332e:	4462      	add	r2, ip
 8013330:	3b01      	subs	r3, #1
 8013332:	3402      	adds	r4, #2
 8013334:	e7f0      	b.n	8013318 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013336:	d00f      	beq.n	8013358 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013338:	1e5e      	subs	r6, r3, #1
 801333a:	fb0e 0706 	mla	r7, lr, r6, r0
 801333e:	143f      	asrs	r7, r7, #16
 8013340:	d541      	bpl.n	80133c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8013342:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013346:	4698      	mov	r8, r3
 8013348:	9603      	str	r6, [sp, #12]
 801334a:	f1b8 0f00 	cmp.w	r8, #0
 801334e:	dc59      	bgt.n	8013404 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013350:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013354:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013358:	9b00      	ldr	r3, [sp, #0]
 801335a:	2b00      	cmp	r3, #0
 801335c:	dd72      	ble.n	8013444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801335e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013362:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013366:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801336a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801336c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013370:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013374:	eeb0 6a62 	vmov.f32	s12, s5
 8013378:	ee61 7a27 	vmul.f32	s15, s2, s15
 801337c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013380:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013384:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013388:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801338c:	eeb0 6a43 	vmov.f32	s12, s6
 8013390:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013394:	ee12 2a90 	vmov	r2, s5
 8013398:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801339c:	fb92 fef3 	sdiv	lr, r2, r3
 80133a0:	ee13 2a10 	vmov	r2, s6
 80133a4:	fb92 fcf3 	sdiv	ip, r2, r3
 80133a8:	9b00      	ldr	r3, [sp, #0]
 80133aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80133ae:	3b01      	subs	r3, #1
 80133b0:	9300      	str	r3, [sp, #0]
 80133b2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80133b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80133b8:	eeb0 3a67 	vmov.f32	s6, s15
 80133bc:	bf08      	it	eq
 80133be:	465b      	moveq	r3, fp
 80133c0:	eef0 2a47 	vmov.f32	s5, s14
 80133c4:	e797      	b.n	80132f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80133c6:	454f      	cmp	r7, r9
 80133c8:	dabb      	bge.n	8013342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80133ca:	fb0c 2606 	mla	r6, ip, r6, r2
 80133ce:	1436      	asrs	r6, r6, #16
 80133d0:	d4b7      	bmi.n	8013342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80133d2:	4546      	cmp	r6, r8
 80133d4:	dab5      	bge.n	8013342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80133d6:	461e      	mov	r6, r3
 80133d8:	46a0      	mov	r8, r4
 80133da:	2e00      	cmp	r6, #0
 80133dc:	ddb8      	ble.n	8013350 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80133de:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80133e2:	9901      	ldr	r1, [sp, #4]
 80133e4:	1417      	asrs	r7, r2, #16
 80133e6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80133ea:	fb0a 1707 	mla	r7, sl, r7, r1
 80133ee:	9902      	ldr	r1, [sp, #8]
 80133f0:	f817 7009 	ldrb.w	r7, [r7, r9]
 80133f4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80133f8:	f828 7b02 	strh.w	r7, [r8], #2
 80133fc:	4470      	add	r0, lr
 80133fe:	4462      	add	r2, ip
 8013400:	3e01      	subs	r6, #1
 8013402:	e7ea      	b.n	80133da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8013404:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013408:	d417      	bmi.n	801343a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801340a:	68ae      	ldr	r6, [r5, #8]
 801340c:	454e      	cmp	r6, r9
 801340e:	dd14      	ble.n	801343a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013410:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013414:	d411      	bmi.n	801343a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8013416:	68ef      	ldr	r7, [r5, #12]
 8013418:	4557      	cmp	r7, sl
 801341a:	dd0e      	ble.n	801343a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801341c:	9f01      	ldr	r7, [sp, #4]
 801341e:	b236      	sxth	r6, r6
 8013420:	fb0a 7606 	mla	r6, sl, r6, r7
 8013424:	9f02      	ldr	r7, [sp, #8]
 8013426:	f816 6009 	ldrb.w	r6, [r6, r9]
 801342a:	f06f 0101 	mvn.w	r1, #1
 801342e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013432:	fb01 f608 	mul.w	r6, r1, r8
 8013436:	9903      	ldr	r1, [sp, #12]
 8013438:	538f      	strh	r7, [r1, r6]
 801343a:	4470      	add	r0, lr
 801343c:	4462      	add	r2, ip
 801343e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013442:	e782      	b.n	801334a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013444:	b005      	add	sp, #20
 8013446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801344a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801344a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801344e:	b087      	sub	sp, #28
 8013450:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013452:	9205      	str	r2, [sp, #20]
 8013454:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013458:	9203      	str	r2, [sp, #12]
 801345a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801345e:	9102      	str	r1, [sp, #8]
 8013460:	6861      	ldr	r1, [r4, #4]
 8013462:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8013466:	fb01 2000 	mla	r0, r1, r0, r2
 801346a:	6822      	ldr	r2, [r4, #0]
 801346c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8013470:	9200      	str	r2, [sp, #0]
 8013472:	f8dc 2000 	ldr.w	r2, [ip]
 8013476:	9204      	str	r2, [sp, #16]
 8013478:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801347c:	3204      	adds	r2, #4
 801347e:	9201      	str	r2, [sp, #4]
 8013480:	9a03      	ldr	r2, [sp, #12]
 8013482:	43d5      	mvns	r5, r2
 8013484:	b2ed      	uxtb	r5, r5
 8013486:	9a02      	ldr	r2, [sp, #8]
 8013488:	2a00      	cmp	r2, #0
 801348a:	dc03      	bgt.n	8013494 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801348c:	9a05      	ldr	r2, [sp, #20]
 801348e:	2a00      	cmp	r2, #0
 8013490:	f340 812c 	ble.w	80136ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013494:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013496:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801349a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801349e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80134a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80134a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80134a8:	2b00      	cmp	r3, #0
 80134aa:	dd10      	ble.n	80134ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80134ac:	140c      	asrs	r4, r1, #16
 80134ae:	d405      	bmi.n	80134bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80134b0:	4574      	cmp	r4, lr
 80134b2:	da03      	bge.n	80134bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80134b4:	1414      	asrs	r4, r2, #16
 80134b6:	d401      	bmi.n	80134bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80134b8:	42bc      	cmp	r4, r7
 80134ba:	db09      	blt.n	80134d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80134bc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80134be:	9800      	ldr	r0, [sp, #0]
 80134c0:	4421      	add	r1, r4
 80134c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80134c4:	3002      	adds	r0, #2
 80134c6:	4422      	add	r2, r4
 80134c8:	3b01      	subs	r3, #1
 80134ca:	9000      	str	r0, [sp, #0]
 80134cc:	e7ec      	b.n	80134a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80134ce:	d071      	beq.n	80135b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80134d0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80134d2:	1e5c      	subs	r4, r3, #1
 80134d4:	fb06 1604 	mla	r6, r6, r4, r1
 80134d8:	1436      	asrs	r6, r6, #16
 80134da:	d45d      	bmi.n	8013598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80134dc:	4576      	cmp	r6, lr
 80134de:	da5b      	bge.n	8013598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80134e0:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80134e2:	fb06 2404 	mla	r4, r6, r4, r2
 80134e6:	1424      	asrs	r4, r4, #16
 80134e8:	d456      	bmi.n	8013598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80134ea:	42bc      	cmp	r4, r7
 80134ec:	da54      	bge.n	8013598 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80134ee:	f8dd 9000 	ldr.w	r9, [sp]
 80134f2:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80134f6:	4698      	mov	r8, r3
 80134f8:	f1b8 0f00 	cmp.w	r8, #0
 80134fc:	dd54      	ble.n	80135a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80134fe:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013502:	9804      	ldr	r0, [sp, #16]
 8013504:	1414      	asrs	r4, r2, #16
 8013506:	fb07 0404 	mla	r4, r7, r4, r0
 801350a:	140e      	asrs	r6, r1, #16
 801350c:	9801      	ldr	r0, [sp, #4]
 801350e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013512:	f8b9 4000 	ldrh.w	r4, [r9]
 8013516:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801351a:	eb00 0b0e 	add.w	fp, r0, lr
 801351e:	1227      	asrs	r7, r4, #8
 8013520:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013524:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013528:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801352c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801352e:	fb16 f60a 	smulbb	r6, r6, sl
 8013532:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013536:	fb07 6705 	mla	r7, r7, r5, r6
 801353a:	10e6      	asrs	r6, r4, #3
 801353c:	00e4      	lsls	r4, r4, #3
 801353e:	b2e4      	uxtb	r4, r4
 8013540:	fb1b fb0a 	smulbb	fp, fp, sl
 8013544:	fb14 f405 	smulbb	r4, r4, r5
 8013548:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801354c:	b2bf      	uxth	r7, r7
 801354e:	fb06 b605 	mla	r6, r6, r5, fp
 8013552:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8013556:	b2b6      	uxth	r6, r6
 8013558:	fa1f fe8e 	uxth.w	lr, lr
 801355c:	1c7c      	adds	r4, r7, #1
 801355e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013562:	f106 0b01 	add.w	fp, r6, #1
 8013566:	f10e 0401 	add.w	r4, lr, #1
 801356a:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801356e:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8013572:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013576:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801357a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801357e:	4327      	orrs	r7, r4
 8013580:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013584:	4401      	add	r1, r0
 8013586:	9814      	ldr	r0, [sp, #80]	; 0x50
 8013588:	ea47 070b 	orr.w	r7, r7, fp
 801358c:	f829 7b02 	strh.w	r7, [r9], #2
 8013590:	4402      	add	r2, r0
 8013592:	f108 38ff 	add.w	r8, r8, #4294967295
 8013596:	e7af      	b.n	80134f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013598:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801359c:	f04f 0e00 	mov.w	lr, #0
 80135a0:	eb03 040e 	add.w	r4, r3, lr
 80135a4:	2c00      	cmp	r4, #0
 80135a6:	dc43      	bgt.n	8013630 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80135a8:	9a00      	ldr	r2, [sp, #0]
 80135aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80135ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80135b2:	9300      	str	r3, [sp, #0]
 80135b4:	9b02      	ldr	r3, [sp, #8]
 80135b6:	2b00      	cmp	r3, #0
 80135b8:	f340 8098 	ble.w	80136ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80135bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80135c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80135c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80135c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80135ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80135d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80135d6:	eef0 6a62 	vmov.f32	s13, s5
 80135da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80135de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80135e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80135e6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80135ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80135ee:	eef0 6a43 	vmov.f32	s13, s6
 80135f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80135f6:	ee12 2a90 	vmov	r2, s5
 80135fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80135fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8013602:	ee13 2a10 	vmov	r2, s6
 8013606:	9313      	str	r3, [sp, #76]	; 0x4c
 8013608:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801360a:	fb92 f3f3 	sdiv	r3, r2, r3
 801360e:	9314      	str	r3, [sp, #80]	; 0x50
 8013610:	9b02      	ldr	r3, [sp, #8]
 8013612:	9a05      	ldr	r2, [sp, #20]
 8013614:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013618:	3b01      	subs	r3, #1
 801361a:	9302      	str	r3, [sp, #8]
 801361c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8013620:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013622:	eeb0 3a67 	vmov.f32	s6, s15
 8013626:	bf08      	it	eq
 8013628:	4613      	moveq	r3, r2
 801362a:	eef0 2a47 	vmov.f32	s5, s14
 801362e:	e72a      	b.n	8013486 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013630:	140f      	asrs	r7, r1, #16
 8013632:	d454      	bmi.n	80136de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013634:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013638:	42be      	cmp	r6, r7
 801363a:	dd50      	ble.n	80136de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801363c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8013640:	d44d      	bmi.n	80136de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013642:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8013646:	4544      	cmp	r4, r8
 8013648:	dd49      	ble.n	80136de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801364a:	9c04      	ldr	r4, [sp, #16]
 801364c:	b236      	sxth	r6, r6
 801364e:	fb08 4606 	mla	r6, r8, r6, r4
 8013652:	f06f 0001 	mvn.w	r0, #1
 8013656:	f816 8007 	ldrb.w	r8, [r6, r7]
 801365a:	9c01      	ldr	r4, [sp, #4]
 801365c:	fb00 fa0e 	mul.w	sl, r0, lr
 8013660:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013664:	9800      	ldr	r0, [sp, #0]
 8013666:	eb04 0b08 	add.w	fp, r4, r8
 801366a:	f830 400a 	ldrh.w	r4, [r0, sl]
 801366e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8013672:	9801      	ldr	r0, [sp, #4]
 8013674:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013678:	f810 8008 	ldrb.w	r8, [r0, r8]
 801367c:	9800      	ldr	r0, [sp, #0]
 801367e:	1227      	asrs	r7, r4, #8
 8013680:	fb16 f609 	smulbb	r6, r6, r9
 8013684:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013688:	fb07 6705 	mla	r7, r7, r5, r6
 801368c:	10e6      	asrs	r6, r4, #3
 801368e:	00e4      	lsls	r4, r4, #3
 8013690:	b2e4      	uxtb	r4, r4
 8013692:	fb1b fb09 	smulbb	fp, fp, r9
 8013696:	fb14 f405 	smulbb	r4, r4, r5
 801369a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801369e:	b2bf      	uxth	r7, r7
 80136a0:	fb06 b605 	mla	r6, r6, r5, fp
 80136a4:	fb08 4809 	mla	r8, r8, r9, r4
 80136a8:	b2b6      	uxth	r6, r6
 80136aa:	fa1f f888 	uxth.w	r8, r8
 80136ae:	1c7c      	adds	r4, r7, #1
 80136b0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80136b4:	f106 0b01 	add.w	fp, r6, #1
 80136b8:	f108 0401 	add.w	r4, r8, #1
 80136bc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80136c0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80136c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80136c8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80136cc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80136d0:	4327      	orrs	r7, r4
 80136d2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80136d6:	ea47 070b 	orr.w	r7, r7, fp
 80136da:	f820 700a 	strh.w	r7, [r0, sl]
 80136de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80136e0:	4401      	add	r1, r0
 80136e2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80136e4:	f10e 3eff 	add.w	lr, lr, #4294967295
 80136e8:	4402      	add	r2, r0
 80136ea:	e759      	b.n	80135a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80136ec:	b007      	add	sp, #28
 80136ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080136f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80136f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136f8:	b085      	sub	sp, #20
 80136fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80136fe:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013700:	9203      	str	r2, [sp, #12]
 8013702:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013706:	6870      	ldr	r0, [r6, #4]
 8013708:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801370a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801370e:	686f      	ldr	r7, [r5, #4]
 8013710:	9101      	str	r1, [sp, #4]
 8013712:	fb00 2404 	mla	r4, r0, r4, r2
 8013716:	6832      	ldr	r2, [r6, #0]
 8013718:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801371c:	682a      	ldr	r2, [r5, #0]
 801371e:	9202      	str	r2, [sp, #8]
 8013720:	3704      	adds	r7, #4
 8013722:	9a01      	ldr	r2, [sp, #4]
 8013724:	2a00      	cmp	r2, #0
 8013726:	dc03      	bgt.n	8013730 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013728:	9a03      	ldr	r2, [sp, #12]
 801372a:	2a00      	cmp	r2, #0
 801372c:	f340 80cc 	ble.w	80138c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8013730:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013732:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013736:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801373a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801373e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013740:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013744:	2b00      	cmp	r3, #0
 8013746:	dd0d      	ble.n	8013764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013748:	1406      	asrs	r6, r0, #16
 801374a:	d405      	bmi.n	8013758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801374c:	454e      	cmp	r6, r9
 801374e:	da03      	bge.n	8013758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013750:	1416      	asrs	r6, r2, #16
 8013752:	d401      	bmi.n	8013758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013754:	4546      	cmp	r6, r8
 8013756:	db06      	blt.n	8013766 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013758:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801375a:	4460      	add	r0, ip
 801375c:	4432      	add	r2, r6
 801375e:	3b01      	subs	r3, #1
 8013760:	3402      	adds	r4, #2
 8013762:	e7ef      	b.n	8013744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8013764:	d00f      	beq.n	8013786 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013766:	1e5e      	subs	r6, r3, #1
 8013768:	fb0c 0e06 	mla	lr, ip, r6, r0
 801376c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8013770:	d543      	bpl.n	80137fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8013772:	4698      	mov	r8, r3
 8013774:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8013778:	f1b8 0f00 	cmp.w	r8, #0
 801377c:	dc71      	bgt.n	8013862 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801377e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013782:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013786:	9b01      	ldr	r3, [sp, #4]
 8013788:	2b00      	cmp	r3, #0
 801378a:	f340 809d 	ble.w	80138c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801378e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013792:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013796:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801379a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801379c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80137a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80137a4:	eeb0 6a62 	vmov.f32	s12, s5
 80137a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80137ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80137b4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80137b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80137bc:	eeb0 6a43 	vmov.f32	s12, s6
 80137c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80137c4:	ee12 2a90 	vmov	r2, s5
 80137c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80137cc:	fb92 fcf3 	sdiv	ip, r2, r3
 80137d0:	ee13 2a10 	vmov	r2, s6
 80137d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80137d8:	9312      	str	r3, [sp, #72]	; 0x48
 80137da:	9b01      	ldr	r3, [sp, #4]
 80137dc:	9a03      	ldr	r2, [sp, #12]
 80137de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137e2:	3b01      	subs	r3, #1
 80137e4:	9301      	str	r3, [sp, #4]
 80137e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80137ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80137ec:	eeb0 3a67 	vmov.f32	s6, s15
 80137f0:	bf08      	it	eq
 80137f2:	4613      	moveq	r3, r2
 80137f4:	eef0 2a47 	vmov.f32	s5, s14
 80137f8:	e793      	b.n	8013722 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80137fa:	45ce      	cmp	lr, r9
 80137fc:	dab9      	bge.n	8013772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80137fe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013800:	fb01 2606 	mla	r6, r1, r6, r2
 8013804:	1436      	asrs	r6, r6, #16
 8013806:	d4b4      	bmi.n	8013772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013808:	4546      	cmp	r6, r8
 801380a:	dab2      	bge.n	8013772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801380c:	4698      	mov	r8, r3
 801380e:	46a2      	mov	sl, r4
 8013810:	f1b8 0f00 	cmp.w	r8, #0
 8013814:	ddb3      	ble.n	801377e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013816:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801381a:	9902      	ldr	r1, [sp, #8]
 801381c:	1416      	asrs	r6, r2, #16
 801381e:	fb09 1606 	mla	r6, r9, r6, r1
 8013822:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8013826:	492a      	ldr	r1, [pc, #168]	; (80138d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8013828:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801382c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013830:	eb07 0b0e 	add.w	fp, r7, lr
 8013834:	4460      	add	r0, ip
 8013836:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801383a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801383e:	00f6      	lsls	r6, r6, #3
 8013840:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8013844:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013848:	ea49 0606 	orr.w	r6, r9, r6
 801384c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8013850:	9912      	ldr	r1, [sp, #72]	; 0x48
 8013852:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8013856:	f82a 6b02 	strh.w	r6, [sl], #2
 801385a:	440a      	add	r2, r1
 801385c:	f108 38ff 	add.w	r8, r8, #4294967295
 8013860:	e7d6      	b.n	8013810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013862:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013866:	d429      	bmi.n	80138bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013868:	68ae      	ldr	r6, [r5, #8]
 801386a:	454e      	cmp	r6, r9
 801386c:	dd26      	ble.n	80138bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801386e:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8013872:	d423      	bmi.n	80138bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013874:	68e9      	ldr	r1, [r5, #12]
 8013876:	4559      	cmp	r1, fp
 8013878:	dd20      	ble.n	80138bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801387a:	9902      	ldr	r1, [sp, #8]
 801387c:	fa0f fe86 	sxth.w	lr, r6
 8013880:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8013884:	f06f 0101 	mvn.w	r1, #1
 8013888:	f81e e009 	ldrb.w	lr, [lr, r9]
 801388c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013890:	eb07 060e 	add.w	r6, r7, lr
 8013894:	fb01 f908 	mul.w	r9, r1, r8
 8013898:	f896 b002 	ldrb.w	fp, [r6, #2]
 801389c:	7876      	ldrb	r6, [r6, #1]
 801389e:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80138a2:	00f6      	lsls	r6, r6, #3
 80138a4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80138a8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80138ac:	ea4b 0606 	orr.w	r6, fp, r6
 80138b0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80138b4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80138b8:	f82a 6009 	strh.w	r6, [sl, r9]
 80138bc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80138be:	4460      	add	r0, ip
 80138c0:	440a      	add	r2, r1
 80138c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80138c6:	e757      	b.n	8013778 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80138c8:	b005      	add	sp, #20
 80138ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138ce:	bf00      	nop
 80138d0:	fffff800 	.word	0xfffff800

080138d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80138d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138d8:	b087      	sub	sp, #28
 80138da:	468b      	mov	fp, r1
 80138dc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80138de:	9204      	str	r2, [sp, #16]
 80138e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80138e4:	9205      	str	r2, [sp, #20]
 80138e6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80138ea:	6841      	ldr	r1, [r0, #4]
 80138ec:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80138f0:	fb01 2404 	mla	r4, r1, r4, r2
 80138f4:	6802      	ldr	r2, [r0, #0]
 80138f6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80138fa:	f8dc 2000 	ldr.w	r2, [ip]
 80138fe:	9201      	str	r2, [sp, #4]
 8013900:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013904:	3204      	adds	r2, #4
 8013906:	9202      	str	r2, [sp, #8]
 8013908:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801390c:	f1bb 0f00 	cmp.w	fp, #0
 8013910:	dc03      	bgt.n	801391a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8013912:	9a04      	ldr	r2, [sp, #16]
 8013914:	2a00      	cmp	r2, #0
 8013916:	f340 8138 	ble.w	8013b8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801391a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801391c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8013920:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013924:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013928:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801392a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801392e:	2b00      	cmp	r3, #0
 8013930:	dd0e      	ble.n	8013950 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013932:	1402      	asrs	r2, r0, #16
 8013934:	d405      	bmi.n	8013942 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013936:	42ba      	cmp	r2, r7
 8013938:	da03      	bge.n	8013942 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801393a:	140a      	asrs	r2, r1, #16
 801393c:	d401      	bmi.n	8013942 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801393e:	42b2      	cmp	r2, r6
 8013940:	db07      	blt.n	8013952 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013942:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013944:	4410      	add	r0, r2
 8013946:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013948:	3b01      	subs	r3, #1
 801394a:	4411      	add	r1, r2
 801394c:	3402      	adds	r4, #2
 801394e:	e7ee      	b.n	801392e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8013950:	d019      	beq.n	8013986 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013952:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013954:	1e5a      	subs	r2, r3, #1
 8013956:	fb05 0502 	mla	r5, r5, r2, r0
 801395a:	142d      	asrs	r5, r5, #16
 801395c:	d409      	bmi.n	8013972 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801395e:	42bd      	cmp	r5, r7
 8013960:	da07      	bge.n	8013972 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013962:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013964:	fb05 1202 	mla	r2, r5, r2, r1
 8013968:	1412      	asrs	r2, r2, #16
 801396a:	d402      	bmi.n	8013972 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801396c:	42b2      	cmp	r2, r6
 801396e:	f2c0 80ac 	blt.w	8013aca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8013972:	f04f 0e00 	mov.w	lr, #0
 8013976:	eb03 020e 	add.w	r2, r3, lr
 801397a:	2a00      	cmp	r2, #0
 801397c:	dc3e      	bgt.n	80139fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801397e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013982:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013986:	f1bb 0f00 	cmp.w	fp, #0
 801398a:	f340 80fe 	ble.w	8013b8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801398e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013992:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013996:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801399a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801399c:	f1bb 0b01 	subs.w	fp, fp, #1
 80139a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80139a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80139a8:	eeb0 6a62 	vmov.f32	s12, s5
 80139ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80139b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80139b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80139b8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80139bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80139c0:	eeb0 6a43 	vmov.f32	s12, s6
 80139c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80139c8:	ee12 2a90 	vmov	r2, s5
 80139cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80139d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80139d4:	ee13 2a10 	vmov	r2, s6
 80139d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80139dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80139de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80139e4:	9a04      	ldr	r2, [sp, #16]
 80139e6:	9314      	str	r3, [sp, #80]	; 0x50
 80139e8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80139ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80139ee:	eeb0 3a67 	vmov.f32	s6, s15
 80139f2:	bf08      	it	eq
 80139f4:	4613      	moveq	r3, r2
 80139f6:	eef0 2a47 	vmov.f32	s5, s14
 80139fa:	e787      	b.n	801390c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80139fc:	1406      	asrs	r6, r0, #16
 80139fe:	d45d      	bmi.n	8013abc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013a00:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013a04:	42b5      	cmp	r5, r6
 8013a06:	dd59      	ble.n	8013abc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013a08:	140f      	asrs	r7, r1, #16
 8013a0a:	d457      	bmi.n	8013abc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013a0c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8013a10:	42ba      	cmp	r2, r7
 8013a12:	dd53      	ble.n	8013abc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013a14:	9a01      	ldr	r2, [sp, #4]
 8013a16:	b22d      	sxth	r5, r5
 8013a18:	fb07 2505 	mla	r5, r7, r5, r2
 8013a1c:	5daa      	ldrb	r2, [r5, r6]
 8013a1e:	9d02      	ldr	r5, [sp, #8]
 8013a20:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013a24:	0e2e      	lsrs	r6, r5, #24
 8013a26:	d049      	beq.n	8013abc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013a28:	f06f 0201 	mvn.w	r2, #1
 8013a2c:	fb02 f20e 	mul.w	r2, r2, lr
 8013a30:	9203      	str	r2, [sp, #12]
 8013a32:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013a36:	9a05      	ldr	r2, [sp, #20]
 8013a38:	4356      	muls	r6, r2
 8013a3a:	1c72      	adds	r2, r6, #1
 8013a3c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013a40:	1212      	asrs	r2, r2, #8
 8013a42:	fa1f f982 	uxth.w	r9, r2
 8013a46:	ea4f 2728 	mov.w	r7, r8, asr #8
 8013a4a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013a4e:	43d2      	mvns	r2, r2
 8013a50:	b2d2      	uxtb	r2, r2
 8013a52:	fb16 f609 	smulbb	r6, r6, r9
 8013a56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013a5a:	fb07 6702 	mla	r7, r7, r2, r6
 8013a5e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013a62:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013a66:	b2ed      	uxtb	r5, r5
 8013a68:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013a6c:	fa5f f888 	uxtb.w	r8, r8
 8013a70:	fb15 f509 	smulbb	r5, r5, r9
 8013a74:	fb08 5502 	mla	r5, r8, r2, r5
 8013a78:	b2bf      	uxth	r7, r7
 8013a7a:	fb1a fa09 	smulbb	sl, sl, r9
 8013a7e:	b2ad      	uxth	r5, r5
 8013a80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013a84:	fb06 a602 	mla	r6, r6, r2, sl
 8013a88:	1c7a      	adds	r2, r7, #1
 8013a8a:	f105 0a01 	add.w	sl, r5, #1
 8013a8e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013a92:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013a96:	b2b6      	uxth	r6, r6
 8013a98:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013a9c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013aa0:	ea4a 0707 	orr.w	r7, sl, r7
 8013aa4:	f106 0a01 	add.w	sl, r6, #1
 8013aa8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013aac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013ab0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013ab4:	9a03      	ldr	r2, [sp, #12]
 8013ab6:	ea47 070a 	orr.w	r7, r7, sl
 8013aba:	52a7      	strh	r7, [r4, r2]
 8013abc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013abe:	4410      	add	r0, r2
 8013ac0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013ac2:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013ac6:	4411      	add	r1, r2
 8013ac8:	e755      	b.n	8013976 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013aca:	f04f 0800 	mov.w	r8, #0
 8013ace:	eba3 0208 	sub.w	r2, r3, r8
 8013ad2:	2a00      	cmp	r2, #0
 8013ad4:	f77f af53 	ble.w	801397e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013ad8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013adc:	9f01      	ldr	r7, [sp, #4]
 8013ade:	140a      	asrs	r2, r1, #16
 8013ae0:	1405      	asrs	r5, r0, #16
 8013ae2:	fb06 7202 	mla	r2, r6, r2, r7
 8013ae6:	5d52      	ldrb	r2, [r2, r5]
 8013ae8:	9d02      	ldr	r5, [sp, #8]
 8013aea:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013aee:	0e2e      	lsrs	r6, r5, #24
 8013af0:	d044      	beq.n	8013b7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8013af2:	9a05      	ldr	r2, [sp, #20]
 8013af4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013af8:	4356      	muls	r6, r2
 8013afa:	1c72      	adds	r2, r6, #1
 8013afc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013b00:	1212      	asrs	r2, r2, #8
 8013b02:	fa1f f982 	uxth.w	r9, r2
 8013b06:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013b0a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013b0e:	43d2      	mvns	r2, r2
 8013b10:	b2d2      	uxtb	r2, r2
 8013b12:	fb16 f609 	smulbb	r6, r6, r9
 8013b16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013b1a:	fb07 6702 	mla	r7, r7, r2, r6
 8013b1e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013b22:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013b26:	b2ed      	uxtb	r5, r5
 8013b28:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013b2c:	fa5f fe8e 	uxtb.w	lr, lr
 8013b30:	fb15 f509 	smulbb	r5, r5, r9
 8013b34:	fb0e 5502 	mla	r5, lr, r2, r5
 8013b38:	b2bf      	uxth	r7, r7
 8013b3a:	fb1a fa09 	smulbb	sl, sl, r9
 8013b3e:	b2ad      	uxth	r5, r5
 8013b40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013b44:	fb06 a602 	mla	r6, r6, r2, sl
 8013b48:	1c7a      	adds	r2, r7, #1
 8013b4a:	f105 0a01 	add.w	sl, r5, #1
 8013b4e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013b52:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013b56:	b2b6      	uxth	r6, r6
 8013b58:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013b5c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013b60:	ea4a 0707 	orr.w	r7, sl, r7
 8013b64:	f106 0a01 	add.w	sl, r6, #1
 8013b68:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013b6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013b70:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013b74:	ea47 070a 	orr.w	r7, r7, sl
 8013b78:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013b7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013b7e:	4410      	add	r0, r2
 8013b80:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013b82:	f108 0801 	add.w	r8, r8, #1
 8013b86:	4411      	add	r1, r2
 8013b88:	e7a1      	b.n	8013ace <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8013b8a:	b007      	add	sp, #28
 8013b8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b94:	b085      	sub	sp, #20
 8013b96:	468b      	mov	fp, r1
 8013b98:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013b9a:	9203      	str	r2, [sp, #12]
 8013b9c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013ba0:	6841      	ldr	r1, [r0, #4]
 8013ba2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8013ba6:	fb01 2404 	mla	r4, r1, r4, r2
 8013baa:	6802      	ldr	r2, [r0, #0]
 8013bac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013bb0:	f8de 2000 	ldr.w	r2, [lr]
 8013bb4:	9200      	str	r2, [sp, #0]
 8013bb6:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013bba:	3204      	adds	r2, #4
 8013bbc:	9201      	str	r2, [sp, #4]
 8013bbe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013bc2:	f1bb 0f00 	cmp.w	fp, #0
 8013bc6:	dc03      	bgt.n	8013bd0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013bc8:	9a03      	ldr	r2, [sp, #12]
 8013bca:	2a00      	cmp	r2, #0
 8013bcc:	f340 8153 	ble.w	8013e76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013bd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013bd2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013bd6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013bda:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013bde:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013be0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013be4:	2b00      	cmp	r3, #0
 8013be6:	dd0e      	ble.n	8013c06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013be8:	1408      	asrs	r0, r1, #16
 8013bea:	d405      	bmi.n	8013bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013bec:	42b8      	cmp	r0, r7
 8013bee:	da03      	bge.n	8013bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013bf0:	1410      	asrs	r0, r2, #16
 8013bf2:	d401      	bmi.n	8013bf8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013bf4:	42b0      	cmp	r0, r6
 8013bf6:	db07      	blt.n	8013c08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013bf8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013bfa:	4401      	add	r1, r0
 8013bfc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013bfe:	3b01      	subs	r3, #1
 8013c00:	4402      	add	r2, r0
 8013c02:	3402      	adds	r4, #2
 8013c04:	e7ee      	b.n	8013be4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013c06:	d017      	beq.n	8013c38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013c08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013c0a:	1e58      	subs	r0, r3, #1
 8013c0c:	fb05 1500 	mla	r5, r5, r0, r1
 8013c10:	142d      	asrs	r5, r5, #16
 8013c12:	d409      	bmi.n	8013c28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013c14:	42bd      	cmp	r5, r7
 8013c16:	da07      	bge.n	8013c28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013c18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013c1a:	fb05 2000 	mla	r0, r5, r0, r2
 8013c1e:	1400      	asrs	r0, r0, #16
 8013c20:	d402      	bmi.n	8013c28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013c22:	42b0      	cmp	r0, r6
 8013c24:	f2c0 80bc 	blt.w	8013da0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013c28:	2600      	movs	r6, #0
 8013c2a:	1998      	adds	r0, r3, r6
 8013c2c:	2800      	cmp	r0, #0
 8013c2e:	dc3e      	bgt.n	8013cae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8013c30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013c34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013c38:	f1bb 0f00 	cmp.w	fp, #0
 8013c3c:	f340 811b 	ble.w	8013e76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8013c40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013c44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013c48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013c4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013c52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013c56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013c5a:	eeb0 6a62 	vmov.f32	s12, s5
 8013c5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013c62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013c66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013c6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013c6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013c72:	eeb0 6a43 	vmov.f32	s12, s6
 8013c76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013c7a:	ee12 2a90 	vmov	r2, s5
 8013c7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013c82:	fb92 f3f3 	sdiv	r3, r2, r3
 8013c86:	ee13 2a10 	vmov	r2, s6
 8013c8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013c8e:	9311      	str	r3, [sp, #68]	; 0x44
 8013c90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c92:	fb92 f3f3 	sdiv	r3, r2, r3
 8013c96:	9a03      	ldr	r2, [sp, #12]
 8013c98:	9312      	str	r3, [sp, #72]	; 0x48
 8013c9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013c9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ca0:	eeb0 3a67 	vmov.f32	s6, s15
 8013ca4:	bf08      	it	eq
 8013ca6:	4613      	moveq	r3, r2
 8013ca8:	eef0 2a47 	vmov.f32	s5, s14
 8013cac:	e789      	b.n	8013bc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013cae:	140f      	asrs	r7, r1, #16
 8013cb0:	d426      	bmi.n	8013d00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013cb2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013cb6:	42bd      	cmp	r5, r7
 8013cb8:	dd22      	ble.n	8013d00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013cba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013cbe:	d41f      	bmi.n	8013d00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013cc0:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013cc4:	4560      	cmp	r0, ip
 8013cc6:	dd1b      	ble.n	8013d00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013cc8:	9800      	ldr	r0, [sp, #0]
 8013cca:	b22d      	sxth	r5, r5
 8013ccc:	fb0c 0505 	mla	r5, ip, r5, r0
 8013cd0:	5de8      	ldrb	r0, [r5, r7]
 8013cd2:	9d01      	ldr	r5, [sp, #4]
 8013cd4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013cd8:	0e07      	lsrs	r7, r0, #24
 8013cda:	2fff      	cmp	r7, #255	; 0xff
 8013cdc:	d116      	bne.n	8013d0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013cde:	f06f 0501 	mvn.w	r5, #1
 8013ce2:	fb05 f706 	mul.w	r7, r5, r6
 8013ce6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8013cea:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8013cee:	0945      	lsrs	r5, r0, #5
 8013cf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013cf4:	ea4c 0505 	orr.w	r5, ip, r5
 8013cf8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013cfc:	4305      	orrs	r5, r0
 8013cfe:	53e5      	strh	r5, [r4, r7]
 8013d00:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013d02:	4401      	add	r1, r0
 8013d04:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013d06:	3e01      	subs	r6, #1
 8013d08:	4402      	add	r2, r0
 8013d0a:	e78e      	b.n	8013c2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013d0c:	b2fd      	uxtb	r5, r7
 8013d0e:	2f00      	cmp	r7, #0
 8013d10:	d0f6      	beq.n	8013d00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013d12:	f06f 0701 	mvn.w	r7, #1
 8013d16:	4377      	muls	r7, r6
 8013d18:	fa1f f985 	uxth.w	r9, r5
 8013d1c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013d20:	9702      	str	r7, [sp, #8]
 8013d22:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013d26:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013d2a:	43ed      	mvns	r5, r5
 8013d2c:	b2ed      	uxtb	r5, r5
 8013d2e:	fb17 f709 	smulbb	r7, r7, r9
 8013d32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013d36:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013d3a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013d3e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013d42:	b2c0      	uxtb	r0, r0
 8013d44:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013d48:	fa5f f888 	uxtb.w	r8, r8
 8013d4c:	fb10 f009 	smulbb	r0, r0, r9
 8013d50:	fb08 0005 	mla	r0, r8, r5, r0
 8013d54:	b280      	uxth	r0, r0
 8013d56:	fa1f fc8c 	uxth.w	ip, ip
 8013d5a:	fb1a fa09 	smulbb	sl, sl, r9
 8013d5e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013d62:	fb07 a705 	mla	r7, r7, r5, sl
 8013d66:	f100 0a01 	add.w	sl, r0, #1
 8013d6a:	f10c 0501 	add.w	r5, ip, #1
 8013d6e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013d72:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013d76:	b2bf      	uxth	r7, r7
 8013d78:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013d7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013d80:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013d84:	f107 0a01 	add.w	sl, r7, #1
 8013d88:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013d8c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013d90:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013d94:	9802      	ldr	r0, [sp, #8]
 8013d96:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013d9a:	f824 c000 	strh.w	ip, [r4, r0]
 8013d9e:	e7af      	b.n	8013d00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013da0:	f04f 0800 	mov.w	r8, #0
 8013da4:	eba3 0008 	sub.w	r0, r3, r8
 8013da8:	2800      	cmp	r0, #0
 8013daa:	f77f af41 	ble.w	8013c30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013dae:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013db2:	9f00      	ldr	r7, [sp, #0]
 8013db4:	1410      	asrs	r0, r2, #16
 8013db6:	140d      	asrs	r5, r1, #16
 8013db8:	fb06 7000 	mla	r0, r6, r0, r7
 8013dbc:	5d40      	ldrb	r0, [r0, r5]
 8013dbe:	9d01      	ldr	r5, [sp, #4]
 8013dc0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013dc4:	0e2e      	lsrs	r6, r5, #24
 8013dc6:	2eff      	cmp	r6, #255	; 0xff
 8013dc8:	d112      	bne.n	8013df0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013dca:	482c      	ldr	r0, [pc, #176]	; (8013e7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013dcc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013dd0:	0968      	lsrs	r0, r5, #5
 8013dd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8013dd6:	4330      	orrs	r0, r6
 8013dd8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013ddc:	4328      	orrs	r0, r5
 8013dde:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8013de2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013de4:	4401      	add	r1, r0
 8013de6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013de8:	f108 0801 	add.w	r8, r8, #1
 8013dec:	4402      	add	r2, r0
 8013dee:	e7d9      	b.n	8013da4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013df0:	b2f0      	uxtb	r0, r6
 8013df2:	2e00      	cmp	r6, #0
 8013df4:	d0f5      	beq.n	8013de2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013df6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013dfa:	fa1f f980 	uxth.w	r9, r0
 8013dfe:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013e02:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013e06:	43c0      	mvns	r0, r0
 8013e08:	b2c0      	uxtb	r0, r0
 8013e0a:	fb16 f609 	smulbb	r6, r6, r9
 8013e0e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013e12:	fb07 6700 	mla	r7, r7, r0, r6
 8013e16:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013e1a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013e1e:	b2ed      	uxtb	r5, r5
 8013e20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013e24:	fa5f fc8c 	uxtb.w	ip, ip
 8013e28:	fb15 f509 	smulbb	r5, r5, r9
 8013e2c:	fb0c 5500 	mla	r5, ip, r0, r5
 8013e30:	b2bf      	uxth	r7, r7
 8013e32:	fb1a fa09 	smulbb	sl, sl, r9
 8013e36:	b2ad      	uxth	r5, r5
 8013e38:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013e3c:	fb06 a600 	mla	r6, r6, r0, sl
 8013e40:	1c78      	adds	r0, r7, #1
 8013e42:	f105 0a01 	add.w	sl, r5, #1
 8013e46:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013e4a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013e4e:	b2b6      	uxth	r6, r6
 8013e50:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013e54:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013e58:	ea4a 0707 	orr.w	r7, sl, r7
 8013e5c:	f106 0a01 	add.w	sl, r6, #1
 8013e60:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013e64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013e68:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013e6c:	ea47 070a 	orr.w	r7, r7, sl
 8013e70:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8013e74:	e7b5      	b.n	8013de2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013e76:	b005      	add	sp, #20
 8013e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e7c:	fffff800 	.word	0xfffff800

08013e80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e84:	b087      	sub	sp, #28
 8013e86:	468b      	mov	fp, r1
 8013e88:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013e8a:	9204      	str	r2, [sp, #16]
 8013e8c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013e90:	9205      	str	r2, [sp, #20]
 8013e92:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8013e96:	6861      	ldr	r1, [r4, #4]
 8013e98:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8013e9c:	fb01 2000 	mla	r0, r1, r0, r2
 8013ea0:	6822      	ldr	r2, [r4, #0]
 8013ea2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013ea6:	f8de 2000 	ldr.w	r2, [lr]
 8013eaa:	9201      	str	r2, [sp, #4]
 8013eac:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013eb0:	9202      	str	r2, [sp, #8]
 8013eb2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013eb6:	f1bb 0f00 	cmp.w	fp, #0
 8013eba:	dc03      	bgt.n	8013ec4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013ebc:	9a04      	ldr	r2, [sp, #16]
 8013ebe:	2a00      	cmp	r2, #0
 8013ec0:	f340 8142 	ble.w	8014148 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013ec4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013ec6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013eca:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013ece:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013ed2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013ed4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013ed8:	2b00      	cmp	r3, #0
 8013eda:	dd0e      	ble.n	8013efa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013edc:	140c      	asrs	r4, r1, #16
 8013ede:	d405      	bmi.n	8013eec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013ee0:	42bc      	cmp	r4, r7
 8013ee2:	da03      	bge.n	8013eec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013ee4:	1414      	asrs	r4, r2, #16
 8013ee6:	d401      	bmi.n	8013eec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013ee8:	42b4      	cmp	r4, r6
 8013eea:	db07      	blt.n	8013efc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013eec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013eee:	4421      	add	r1, r4
 8013ef0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8013ef2:	3b01      	subs	r3, #1
 8013ef4:	4422      	add	r2, r4
 8013ef6:	3002      	adds	r0, #2
 8013ef8:	e7ee      	b.n	8013ed8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013efa:	d019      	beq.n	8013f30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013efc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013efe:	1e5c      	subs	r4, r3, #1
 8013f00:	fb05 1504 	mla	r5, r5, r4, r1
 8013f04:	142d      	asrs	r5, r5, #16
 8013f06:	d409      	bmi.n	8013f1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013f08:	42bd      	cmp	r5, r7
 8013f0a:	da07      	bge.n	8013f1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013f0c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013f0e:	fb05 2404 	mla	r4, r5, r4, r2
 8013f12:	1424      	asrs	r4, r4, #16
 8013f14:	d402      	bmi.n	8013f1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013f16:	42b4      	cmp	r4, r6
 8013f18:	f2c0 80b1 	blt.w	801407e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013f1c:	f04f 0800 	mov.w	r8, #0
 8013f20:	eb03 0408 	add.w	r4, r3, r8
 8013f24:	2c00      	cmp	r4, #0
 8013f26:	dc3e      	bgt.n	8013fa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013f28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013f2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013f30:	f1bb 0f00 	cmp.w	fp, #0
 8013f34:	f340 8108 	ble.w	8014148 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013f38:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013f3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013f40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013f44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f46:	f1bb 0b01 	subs.w	fp, fp, #1
 8013f4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013f4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013f52:	eeb0 6a62 	vmov.f32	s12, s5
 8013f56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013f5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013f62:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013f66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013f6a:	eeb0 6a43 	vmov.f32	s12, s6
 8013f6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013f72:	ee12 2a90 	vmov	r2, s5
 8013f76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013f7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f7e:	ee13 2a10 	vmov	r2, s6
 8013f82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013f86:	9313      	str	r3, [sp, #76]	; 0x4c
 8013f88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8013f8e:	9a04      	ldr	r2, [sp, #16]
 8013f90:	9314      	str	r3, [sp, #80]	; 0x50
 8013f92:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013f96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f98:	eeb0 3a67 	vmov.f32	s6, s15
 8013f9c:	bf08      	it	eq
 8013f9e:	4613      	moveq	r3, r2
 8013fa0:	eef0 2a47 	vmov.f32	s5, s14
 8013fa4:	e787      	b.n	8013eb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013fa6:	140e      	asrs	r6, r1, #16
 8013fa8:	d462      	bmi.n	8014070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013faa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013fae:	42b5      	cmp	r5, r6
 8013fb0:	dd5e      	ble.n	8014070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013fb2:	1417      	asrs	r7, r2, #16
 8013fb4:	d45c      	bmi.n	8014070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013fb6:	f8de 400c 	ldr.w	r4, [lr, #12]
 8013fba:	42bc      	cmp	r4, r7
 8013fbc:	dd58      	ble.n	8014070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013fbe:	b22d      	sxth	r5, r5
 8013fc0:	fb07 6505 	mla	r5, r7, r5, r6
 8013fc4:	9c02      	ldr	r4, [sp, #8]
 8013fc6:	5d66      	ldrb	r6, [r4, r5]
 8013fc8:	2e00      	cmp	r6, #0
 8013fca:	d051      	beq.n	8014070 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013fcc:	9c01      	ldr	r4, [sp, #4]
 8013fce:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8013fd2:	f06f 0401 	mvn.w	r4, #1
 8013fd6:	fb04 f408 	mul.w	r4, r4, r8
 8013fda:	9403      	str	r4, [sp, #12]
 8013fdc:	5b05      	ldrh	r5, [r0, r4]
 8013fde:	9c05      	ldr	r4, [sp, #20]
 8013fe0:	4366      	muls	r6, r4
 8013fe2:	1c74      	adds	r4, r6, #1
 8013fe4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013fe8:	1224      	asrs	r4, r4, #8
 8013fea:	b2a7      	uxth	r7, r4
 8013fec:	122e      	asrs	r6, r5, #8
 8013fee:	43e4      	mvns	r4, r4
 8013ff0:	b2e4      	uxtb	r4, r4
 8013ff2:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8013ff6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013ffa:	fb16 f604 	smulbb	r6, r6, r4
 8013ffe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8014002:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014006:	00ed      	lsls	r5, r5, #3
 8014008:	fb0c 6c07 	mla	ip, ip, r7, r6
 801400c:	b2ed      	uxtb	r5, r5
 801400e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8014012:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8014016:	fb15 f504 	smulbb	r5, r5, r4
 801401a:	fa5f f989 	uxtb.w	r9, r9
 801401e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014022:	fb09 5507 	mla	r5, r9, r7, r5
 8014026:	fb1a fa04 	smulbb	sl, sl, r4
 801402a:	fa1f fc8c 	uxth.w	ip, ip
 801402e:	b2ad      	uxth	r5, r5
 8014030:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014034:	fb06 a607 	mla	r6, r6, r7, sl
 8014038:	f10c 0401 	add.w	r4, ip, #1
 801403c:	f105 0a01 	add.w	sl, r5, #1
 8014040:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014044:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014048:	b2b6      	uxth	r6, r6
 801404a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801404e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014052:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014056:	f106 0a01 	add.w	sl, r6, #1
 801405a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801405e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014062:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014066:	9c03      	ldr	r4, [sp, #12]
 8014068:	ea4c 0c0a 	orr.w	ip, ip, sl
 801406c:	f820 c004 	strh.w	ip, [r0, r4]
 8014070:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014072:	4421      	add	r1, r4
 8014074:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014076:	f108 38ff 	add.w	r8, r8, #4294967295
 801407a:	4422      	add	r2, r4
 801407c:	e750      	b.n	8013f20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801407e:	f04f 0900 	mov.w	r9, #0
 8014082:	eba3 0409 	sub.w	r4, r3, r9
 8014086:	2c00      	cmp	r4, #0
 8014088:	f77f af4e 	ble.w	8013f28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801408c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014090:	140d      	asrs	r5, r1, #16
 8014092:	1414      	asrs	r4, r2, #16
 8014094:	fb06 5404 	mla	r4, r6, r4, r5
 8014098:	9d02      	ldr	r5, [sp, #8]
 801409a:	5d2e      	ldrb	r6, [r5, r4]
 801409c:	2e00      	cmp	r6, #0
 801409e:	d04c      	beq.n	801413a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80140a0:	9d01      	ldr	r5, [sp, #4]
 80140a2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80140a6:	9c05      	ldr	r4, [sp, #20]
 80140a8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80140ac:	4366      	muls	r6, r4
 80140ae:	1c74      	adds	r4, r6, #1
 80140b0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80140b4:	1224      	asrs	r4, r4, #8
 80140b6:	b2a7      	uxth	r7, r4
 80140b8:	122e      	asrs	r6, r5, #8
 80140ba:	43e4      	mvns	r4, r4
 80140bc:	b2e4      	uxtb	r4, r4
 80140be:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80140c2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80140c6:	fb16 f604 	smulbb	r6, r6, r4
 80140ca:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80140ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80140d2:	00ed      	lsls	r5, r5, #3
 80140d4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80140d8:	b2ed      	uxtb	r5, r5
 80140da:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80140de:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80140e2:	fb15 f504 	smulbb	r5, r5, r4
 80140e6:	fa5f f888 	uxtb.w	r8, r8
 80140ea:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80140ee:	fb08 5507 	mla	r5, r8, r7, r5
 80140f2:	fb1a fa04 	smulbb	sl, sl, r4
 80140f6:	fa1f fc8c 	uxth.w	ip, ip
 80140fa:	b2ad      	uxth	r5, r5
 80140fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014100:	fb06 a607 	mla	r6, r6, r7, sl
 8014104:	f10c 0401 	add.w	r4, ip, #1
 8014108:	f105 0a01 	add.w	sl, r5, #1
 801410c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8014110:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014114:	b2b6      	uxth	r6, r6
 8014116:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801411a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801411e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014122:	f106 0a01 	add.w	sl, r6, #1
 8014126:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801412a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801412e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014132:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014136:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801413a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801413c:	4421      	add	r1, r4
 801413e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014140:	f109 0901 	add.w	r9, r9, #1
 8014144:	4422      	add	r2, r4
 8014146:	e79c      	b.n	8014082 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014148:	b007      	add	sp, #28
 801414a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801414e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801414e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014152:	b085      	sub	sp, #20
 8014154:	468b      	mov	fp, r1
 8014156:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014158:	9203      	str	r2, [sp, #12]
 801415a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801415e:	6861      	ldr	r1, [r4, #4]
 8014160:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014164:	fb01 2000 	mla	r0, r1, r0, r2
 8014168:	6822      	ldr	r2, [r4, #0]
 801416a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801416e:	f8d8 2000 	ldr.w	r2, [r8]
 8014172:	9200      	str	r2, [sp, #0]
 8014174:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8014178:	9201      	str	r2, [sp, #4]
 801417a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801417e:	f1bb 0f00 	cmp.w	fp, #0
 8014182:	dc03      	bgt.n	801418c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014184:	9a03      	ldr	r2, [sp, #12]
 8014186:	2a00      	cmp	r2, #0
 8014188:	f340 8146 	ble.w	8014418 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801418c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801418e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014192:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014196:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801419a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801419c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80141a0:	2b00      	cmp	r3, #0
 80141a2:	dd0e      	ble.n	80141c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80141a4:	140c      	asrs	r4, r1, #16
 80141a6:	d405      	bmi.n	80141b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80141a8:	42bc      	cmp	r4, r7
 80141aa:	da03      	bge.n	80141b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80141ac:	1414      	asrs	r4, r2, #16
 80141ae:	d401      	bmi.n	80141b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80141b0:	42b4      	cmp	r4, r6
 80141b2:	db07      	blt.n	80141c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80141b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80141b6:	4421      	add	r1, r4
 80141b8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80141ba:	3b01      	subs	r3, #1
 80141bc:	4422      	add	r2, r4
 80141be:	3002      	adds	r0, #2
 80141c0:	e7ee      	b.n	80141a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80141c2:	d017      	beq.n	80141f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80141c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80141c6:	1e5c      	subs	r4, r3, #1
 80141c8:	fb05 1504 	mla	r5, r5, r4, r1
 80141cc:	142d      	asrs	r5, r5, #16
 80141ce:	d409      	bmi.n	80141e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80141d0:	42bd      	cmp	r5, r7
 80141d2:	da07      	bge.n	80141e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80141d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80141d6:	fb05 2404 	mla	r4, r5, r4, r2
 80141da:	1424      	asrs	r4, r4, #16
 80141dc:	d402      	bmi.n	80141e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80141de:	42b4      	cmp	r4, r6
 80141e0:	f2c0 80b3 	blt.w	801434a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80141e4:	2600      	movs	r6, #0
 80141e6:	199c      	adds	r4, r3, r6
 80141e8:	2c00      	cmp	r4, #0
 80141ea:	dc3e      	bgt.n	801426a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80141ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80141f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80141f4:	f1bb 0f00 	cmp.w	fp, #0
 80141f8:	f340 810e 	ble.w	8014418 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80141fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014200:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014204:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014208:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801420a:	f1bb 0b01 	subs.w	fp, fp, #1
 801420e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014212:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014216:	eeb0 6a62 	vmov.f32	s12, s5
 801421a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801421e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014222:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014226:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801422a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801422e:	eeb0 6a43 	vmov.f32	s12, s6
 8014232:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014236:	ee12 2a90 	vmov	r2, s5
 801423a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801423e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014242:	ee13 2a10 	vmov	r2, s6
 8014246:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801424a:	9311      	str	r3, [sp, #68]	; 0x44
 801424c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801424e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014252:	9a03      	ldr	r2, [sp, #12]
 8014254:	9312      	str	r3, [sp, #72]	; 0x48
 8014256:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801425a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801425c:	eeb0 3a67 	vmov.f32	s6, s15
 8014260:	bf08      	it	eq
 8014262:	4613      	moveq	r3, r2
 8014264:	eef0 2a47 	vmov.f32	s5, s14
 8014268:	e789      	b.n	801417e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801426a:	140f      	asrs	r7, r1, #16
 801426c:	d418      	bmi.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801426e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014272:	42bd      	cmp	r5, r7
 8014274:	dd14      	ble.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014276:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801427a:	d411      	bmi.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801427c:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8014280:	4564      	cmp	r4, ip
 8014282:	dd0d      	ble.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8014284:	b22d      	sxth	r5, r5
 8014286:	fb0c 7505 	mla	r5, ip, r5, r7
 801428a:	9c01      	ldr	r4, [sp, #4]
 801428c:	5d64      	ldrb	r4, [r4, r5]
 801428e:	2cff      	cmp	r4, #255	; 0xff
 8014290:	d10c      	bne.n	80142ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014292:	9c00      	ldr	r4, [sp, #0]
 8014294:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8014298:	f06f 0401 	mvn.w	r4, #1
 801429c:	4374      	muls	r4, r6
 801429e:	5305      	strh	r5, [r0, r4]
 80142a0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80142a2:	4421      	add	r1, r4
 80142a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80142a6:	3e01      	subs	r6, #1
 80142a8:	4422      	add	r2, r4
 80142aa:	e79c      	b.n	80141e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80142ac:	2c00      	cmp	r4, #0
 80142ae:	d0f7      	beq.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80142b0:	9f00      	ldr	r7, [sp, #0]
 80142b2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80142b6:	f06f 0501 	mvn.w	r5, #1
 80142ba:	4375      	muls	r5, r6
 80142bc:	9502      	str	r5, [sp, #8]
 80142be:	5b45      	ldrh	r5, [r0, r5]
 80142c0:	fa1f fc84 	uxth.w	ip, r4
 80142c4:	122f      	asrs	r7, r5, #8
 80142c6:	43e4      	mvns	r4, r4
 80142c8:	b2e4      	uxtb	r4, r4
 80142ca:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80142ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80142d2:	fb17 f704 	smulbb	r7, r7, r4
 80142d6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80142da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80142de:	00ed      	lsls	r5, r5, #3
 80142e0:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80142e4:	b2ed      	uxtb	r5, r5
 80142e6:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80142ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80142ee:	fb15 f504 	smulbb	r5, r5, r4
 80142f2:	fa5f f989 	uxtb.w	r9, r9
 80142f6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80142fa:	fb09 550c 	mla	r5, r9, ip, r5
 80142fe:	fb1a fa04 	smulbb	sl, sl, r4
 8014302:	fa1f fe8e 	uxth.w	lr, lr
 8014306:	b2ad      	uxth	r5, r5
 8014308:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801430c:	fb07 a70c 	mla	r7, r7, ip, sl
 8014310:	f10e 0401 	add.w	r4, lr, #1
 8014314:	f105 0a01 	add.w	sl, r5, #1
 8014318:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801431c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014320:	b2bf      	uxth	r7, r7
 8014322:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014326:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801432a:	ea4a 0e0e 	orr.w	lr, sl, lr
 801432e:	f107 0a01 	add.w	sl, r7, #1
 8014332:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014336:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801433a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801433e:	9c02      	ldr	r4, [sp, #8]
 8014340:	ea4e 0e0a 	orr.w	lr, lr, sl
 8014344:	f820 e004 	strh.w	lr, [r0, r4]
 8014348:	e7aa      	b.n	80142a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801434a:	f04f 0900 	mov.w	r9, #0
 801434e:	eba3 0409 	sub.w	r4, r3, r9
 8014352:	2c00      	cmp	r4, #0
 8014354:	f77f af4a 	ble.w	80141ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014358:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801435c:	1414      	asrs	r4, r2, #16
 801435e:	140d      	asrs	r5, r1, #16
 8014360:	fb06 5504 	mla	r5, r6, r4, r5
 8014364:	9c01      	ldr	r4, [sp, #4]
 8014366:	5d64      	ldrb	r4, [r4, r5]
 8014368:	2cff      	cmp	r4, #255	; 0xff
 801436a:	d10b      	bne.n	8014384 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801436c:	9c00      	ldr	r4, [sp, #0]
 801436e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8014372:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8014376:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014378:	4421      	add	r1, r4
 801437a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801437c:	f109 0901 	add.w	r9, r9, #1
 8014380:	4422      	add	r2, r4
 8014382:	e7e4      	b.n	801434e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8014384:	2c00      	cmp	r4, #0
 8014386:	d0f6      	beq.n	8014376 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014388:	9e00      	ldr	r6, [sp, #0]
 801438a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801438e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8014392:	b2a7      	uxth	r7, r4
 8014394:	122e      	asrs	r6, r5, #8
 8014396:	43e4      	mvns	r4, r4
 8014398:	b2e4      	uxtb	r4, r4
 801439a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801439e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80143a2:	fb16 f604 	smulbb	r6, r6, r4
 80143a6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80143aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80143ae:	00ed      	lsls	r5, r5, #3
 80143b0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80143b4:	b2ed      	uxtb	r5, r5
 80143b6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80143ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80143be:	fb15 f504 	smulbb	r5, r5, r4
 80143c2:	fa5f fe8e 	uxtb.w	lr, lr
 80143c6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80143ca:	fb0e 5507 	mla	r5, lr, r7, r5
 80143ce:	fb1a fa04 	smulbb	sl, sl, r4
 80143d2:	fa1f fc8c 	uxth.w	ip, ip
 80143d6:	b2ad      	uxth	r5, r5
 80143d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80143dc:	fb06 a607 	mla	r6, r6, r7, sl
 80143e0:	f10c 0401 	add.w	r4, ip, #1
 80143e4:	f105 0a01 	add.w	sl, r5, #1
 80143e8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80143ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80143f0:	b2b6      	uxth	r6, r6
 80143f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80143f6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80143fa:	ea4a 0c0c 	orr.w	ip, sl, ip
 80143fe:	f106 0a01 	add.w	sl, r6, #1
 8014402:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014406:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801440a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801440e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014412:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8014416:	e7ae      	b.n	8014376 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014418:	b005      	add	sp, #20
 801441a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801441e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801441e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014422:	b085      	sub	sp, #20
 8014424:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014426:	9203      	str	r2, [sp, #12]
 8014428:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801442c:	9201      	str	r2, [sp, #4]
 801442e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014432:	9100      	str	r1, [sp, #0]
 8014434:	6841      	ldr	r1, [r0, #4]
 8014436:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801443a:	fb01 2404 	mla	r4, r1, r4, r2
 801443e:	6802      	ldr	r2, [r0, #0]
 8014440:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014444:	f8de 2000 	ldr.w	r2, [lr]
 8014448:	9202      	str	r2, [sp, #8]
 801444a:	9a01      	ldr	r2, [sp, #4]
 801444c:	43d6      	mvns	r6, r2
 801444e:	b2f6      	uxtb	r6, r6
 8014450:	9a00      	ldr	r2, [sp, #0]
 8014452:	2a00      	cmp	r2, #0
 8014454:	dc03      	bgt.n	801445e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014456:	9a03      	ldr	r2, [sp, #12]
 8014458:	2a00      	cmp	r2, #0
 801445a:	f340 8124 	ble.w	80146a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801445e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014460:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014464:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014468:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801446c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801446e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014472:	2b00      	cmp	r3, #0
 8014474:	dd0e      	ble.n	8014494 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014476:	1408      	asrs	r0, r1, #16
 8014478:	d405      	bmi.n	8014486 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801447a:	4560      	cmp	r0, ip
 801447c:	da03      	bge.n	8014486 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801447e:	1410      	asrs	r0, r2, #16
 8014480:	d401      	bmi.n	8014486 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014482:	42b8      	cmp	r0, r7
 8014484:	db07      	blt.n	8014496 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014486:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014488:	4401      	add	r1, r0
 801448a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801448c:	3b01      	subs	r3, #1
 801448e:	4402      	add	r2, r0
 8014490:	3402      	adds	r4, #2
 8014492:	e7ee      	b.n	8014472 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014494:	d06e      	beq.n	8014574 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014496:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014498:	1e58      	subs	r0, r3, #1
 801449a:	fb05 1500 	mla	r5, r5, r0, r1
 801449e:	142d      	asrs	r5, r5, #16
 80144a0:	d45c      	bmi.n	801455c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80144a2:	4565      	cmp	r5, ip
 80144a4:	da5a      	bge.n	801455c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80144a6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80144a8:	fb05 2000 	mla	r0, r5, r0, r2
 80144ac:	1400      	asrs	r0, r0, #16
 80144ae:	d455      	bmi.n	801455c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80144b0:	42b8      	cmp	r0, r7
 80144b2:	da53      	bge.n	801455c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80144b4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80144b8:	4699      	mov	r9, r3
 80144ba:	46a2      	mov	sl, r4
 80144bc:	f1b9 0f00 	cmp.w	r9, #0
 80144c0:	dd54      	ble.n	801456c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80144c2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80144c6:	140d      	asrs	r5, r1, #16
 80144c8:	1410      	asrs	r0, r2, #16
 80144ca:	fb07 5000 	mla	r0, r7, r0, r5
 80144ce:	9d02      	ldr	r5, [sp, #8]
 80144d0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80144d4:	f8ba 5000 	ldrh.w	r5, [sl]
 80144d8:	122f      	asrs	r7, r5, #8
 80144da:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80144de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80144e2:	fb17 f706 	smulbb	r7, r7, r6
 80144e6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80144ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80144ee:	00ed      	lsls	r5, r5, #3
 80144f0:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80144f4:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80144f8:	10c7      	asrs	r7, r0, #3
 80144fa:	b2ed      	uxtb	r5, r5
 80144fc:	00c0      	lsls	r0, r0, #3
 80144fe:	fb18 f806 	smulbb	r8, r8, r6
 8014502:	fb15 f506 	smulbb	r5, r5, r6
 8014506:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801450a:	b2c0      	uxtb	r0, r0
 801450c:	fa1f fc8c 	uxth.w	ip, ip
 8014510:	fb07 870b 	mla	r7, r7, fp, r8
 8014514:	fb00 500b 	mla	r0, r0, fp, r5
 8014518:	b280      	uxth	r0, r0
 801451a:	b2bf      	uxth	r7, r7
 801451c:	f10c 0501 	add.w	r5, ip, #1
 8014520:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014524:	f107 0801 	add.w	r8, r7, #1
 8014528:	1c45      	adds	r5, r0, #1
 801452a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801452e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014532:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014534:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014538:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801453c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014540:	ea45 0c0c 	orr.w	ip, r5, ip
 8014544:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014548:	4401      	add	r1, r0
 801454a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801454c:	ea4c 0c08 	orr.w	ip, ip, r8
 8014550:	f82a cb02 	strh.w	ip, [sl], #2
 8014554:	4402      	add	r2, r0
 8014556:	f109 39ff 	add.w	r9, r9, #4294967295
 801455a:	e7af      	b.n	80144bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801455c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8014560:	f04f 0800 	mov.w	r8, #0
 8014564:	eb03 0008 	add.w	r0, r3, r8
 8014568:	2800      	cmp	r0, #0
 801456a:	dc41      	bgt.n	80145f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801456c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014570:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014574:	9b00      	ldr	r3, [sp, #0]
 8014576:	2b00      	cmp	r3, #0
 8014578:	f340 8095 	ble.w	80146a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801457c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014580:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014584:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014588:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801458a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801458e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014592:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014596:	eef0 6a62 	vmov.f32	s13, s5
 801459a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801459e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80145a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80145a6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80145aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80145ae:	eef0 6a43 	vmov.f32	s13, s6
 80145b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80145b6:	ee12 2a90 	vmov	r2, s5
 80145ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80145be:	fb92 f3f3 	sdiv	r3, r2, r3
 80145c2:	ee13 2a10 	vmov	r2, s6
 80145c6:	9311      	str	r3, [sp, #68]	; 0x44
 80145c8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80145ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80145ce:	9312      	str	r3, [sp, #72]	; 0x48
 80145d0:	9b00      	ldr	r3, [sp, #0]
 80145d2:	9a03      	ldr	r2, [sp, #12]
 80145d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80145d8:	3b01      	subs	r3, #1
 80145da:	9300      	str	r3, [sp, #0]
 80145dc:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80145e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80145e2:	eeb0 3a67 	vmov.f32	s6, s15
 80145e6:	bf08      	it	eq
 80145e8:	4613      	moveq	r3, r2
 80145ea:	eef0 2a47 	vmov.f32	s5, s14
 80145ee:	e72f      	b.n	8014450 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80145f0:	140f      	asrs	r7, r1, #16
 80145f2:	d451      	bmi.n	8014698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80145f4:	f8de 5008 	ldr.w	r5, [lr, #8]
 80145f8:	42bd      	cmp	r5, r7
 80145fa:	dd4d      	ble.n	8014698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80145fc:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014600:	d44a      	bmi.n	8014698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014602:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014606:	4560      	cmp	r0, ip
 8014608:	dd46      	ble.n	8014698 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801460a:	b22d      	sxth	r5, r5
 801460c:	fb0c 7505 	mla	r5, ip, r5, r7
 8014610:	9802      	ldr	r0, [sp, #8]
 8014612:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014616:	f06f 0501 	mvn.w	r5, #1
 801461a:	fb05 fb08 	mul.w	fp, r5, r8
 801461e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014622:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014626:	122f      	asrs	r7, r5, #8
 8014628:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801462c:	fb17 f706 	smulbb	r7, r7, r6
 8014630:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014634:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014638:	00ed      	lsls	r5, r5, #3
 801463a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801463e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014642:	10c7      	asrs	r7, r0, #3
 8014644:	b2ed      	uxtb	r5, r5
 8014646:	00c0      	lsls	r0, r0, #3
 8014648:	fb19 f906 	smulbb	r9, r9, r6
 801464c:	fb15 f506 	smulbb	r5, r5, r6
 8014650:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014654:	b2c0      	uxtb	r0, r0
 8014656:	fa1f fc8c 	uxth.w	ip, ip
 801465a:	fb07 970a 	mla	r7, r7, sl, r9
 801465e:	fb00 500a 	mla	r0, r0, sl, r5
 8014662:	b2bf      	uxth	r7, r7
 8014664:	b280      	uxth	r0, r0
 8014666:	f10c 0501 	add.w	r5, ip, #1
 801466a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801466e:	f107 0901 	add.w	r9, r7, #1
 8014672:	1c45      	adds	r5, r0, #1
 8014674:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014678:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801467c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014680:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014684:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014688:	ea45 0c0c 	orr.w	ip, r5, ip
 801468c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014690:	ea4c 0c09 	orr.w	ip, ip, r9
 8014694:	f824 c00b 	strh.w	ip, [r4, fp]
 8014698:	9811      	ldr	r0, [sp, #68]	; 0x44
 801469a:	4401      	add	r1, r0
 801469c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801469e:	f108 38ff 	add.w	r8, r8, #4294967295
 80146a2:	4402      	add	r2, r0
 80146a4:	e75e      	b.n	8014564 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80146a6:	b005      	add	sp, #20
 80146a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080146ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80146ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146b0:	b085      	sub	sp, #20
 80146b2:	4693      	mov	fp, r2
 80146b4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80146b6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80146b8:	6870      	ldr	r0, [r6, #4]
 80146ba:	9101      	str	r1, [sp, #4]
 80146bc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80146c0:	fb00 2404 	mla	r4, r0, r4, r2
 80146c4:	6832      	ldr	r2, [r6, #0]
 80146c6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80146ca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80146ce:	682a      	ldr	r2, [r5, #0]
 80146d0:	9202      	str	r2, [sp, #8]
 80146d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80146d6:	9a01      	ldr	r2, [sp, #4]
 80146d8:	2a00      	cmp	r2, #0
 80146da:	dc03      	bgt.n	80146e4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80146dc:	f1bb 0f00 	cmp.w	fp, #0
 80146e0:	f340 809a 	ble.w	8014818 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80146e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80146e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80146ea:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80146ee:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80146f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80146f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80146f8:	2b00      	cmp	r3, #0
 80146fa:	dd0c      	ble.n	8014716 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80146fc:	1406      	asrs	r6, r0, #16
 80146fe:	d405      	bmi.n	801470c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014700:	454e      	cmp	r6, r9
 8014702:	da03      	bge.n	801470c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014704:	1416      	asrs	r6, r2, #16
 8014706:	d401      	bmi.n	801470c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014708:	4546      	cmp	r6, r8
 801470a:	db05      	blt.n	8014718 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801470c:	4470      	add	r0, lr
 801470e:	4462      	add	r2, ip
 8014710:	3b01      	subs	r3, #1
 8014712:	3402      	adds	r4, #2
 8014714:	e7f0      	b.n	80146f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014716:	d00f      	beq.n	8014738 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014718:	1e5e      	subs	r6, r3, #1
 801471a:	fb0e 0706 	mla	r7, lr, r6, r0
 801471e:	143f      	asrs	r7, r7, #16
 8014720:	d541      	bpl.n	80147a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8014722:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014726:	4698      	mov	r8, r3
 8014728:	9603      	str	r6, [sp, #12]
 801472a:	f1b8 0f00 	cmp.w	r8, #0
 801472e:	dc56      	bgt.n	80147de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8014730:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014734:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014738:	9b01      	ldr	r3, [sp, #4]
 801473a:	2b00      	cmp	r3, #0
 801473c:	dd6c      	ble.n	8014818 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801473e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014742:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014746:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801474a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801474c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014750:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014754:	eeb0 6a62 	vmov.f32	s12, s5
 8014758:	ee61 7a27 	vmul.f32	s15, s2, s15
 801475c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014760:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014764:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014768:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801476c:	eeb0 6a43 	vmov.f32	s12, s6
 8014770:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014774:	ee12 2a90 	vmov	r2, s5
 8014778:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801477c:	fb92 fef3 	sdiv	lr, r2, r3
 8014780:	ee13 2a10 	vmov	r2, s6
 8014784:	fb92 fcf3 	sdiv	ip, r2, r3
 8014788:	9b01      	ldr	r3, [sp, #4]
 801478a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801478e:	3b01      	subs	r3, #1
 8014790:	9301      	str	r3, [sp, #4]
 8014792:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014796:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014798:	eeb0 3a67 	vmov.f32	s6, s15
 801479c:	bf08      	it	eq
 801479e:	465b      	moveq	r3, fp
 80147a0:	eef0 2a47 	vmov.f32	s5, s14
 80147a4:	e797      	b.n	80146d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80147a6:	454f      	cmp	r7, r9
 80147a8:	dabb      	bge.n	8014722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80147aa:	fb0c 2606 	mla	r6, ip, r6, r2
 80147ae:	1436      	asrs	r6, r6, #16
 80147b0:	d4b7      	bmi.n	8014722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80147b2:	4546      	cmp	r6, r8
 80147b4:	dab5      	bge.n	8014722 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80147b6:	461e      	mov	r6, r3
 80147b8:	46a0      	mov	r8, r4
 80147ba:	2e00      	cmp	r6, #0
 80147bc:	ddb8      	ble.n	8014730 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80147be:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80147c2:	9902      	ldr	r1, [sp, #8]
 80147c4:	1417      	asrs	r7, r2, #16
 80147c6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80147ca:	fb0a 9707 	mla	r7, sl, r7, r9
 80147ce:	4470      	add	r0, lr
 80147d0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80147d4:	f828 7b02 	strh.w	r7, [r8], #2
 80147d8:	4462      	add	r2, ip
 80147da:	3e01      	subs	r6, #1
 80147dc:	e7ed      	b.n	80147ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80147de:	ea5f 4920 	movs.w	r9, r0, asr #16
 80147e2:	d414      	bmi.n	801480e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80147e4:	68ae      	ldr	r6, [r5, #8]
 80147e6:	454e      	cmp	r6, r9
 80147e8:	dd11      	ble.n	801480e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80147ea:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80147ee:	d40e      	bmi.n	801480e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80147f0:	68ef      	ldr	r7, [r5, #12]
 80147f2:	4557      	cmp	r7, sl
 80147f4:	dd0b      	ble.n	801480e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80147f6:	b236      	sxth	r6, r6
 80147f8:	fb0a 9606 	mla	r6, sl, r6, r9
 80147fc:	9f02      	ldr	r7, [sp, #8]
 80147fe:	f06f 0101 	mvn.w	r1, #1
 8014802:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014806:	fb01 f608 	mul.w	r6, r1, r8
 801480a:	9903      	ldr	r1, [sp, #12]
 801480c:	538f      	strh	r7, [r1, r6]
 801480e:	4470      	add	r0, lr
 8014810:	4462      	add	r2, ip
 8014812:	f108 38ff 	add.w	r8, r8, #4294967295
 8014816:	e788      	b.n	801472a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014818:	b005      	add	sp, #20
 801481a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801481e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801481e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014822:	b087      	sub	sp, #28
 8014824:	468b      	mov	fp, r1
 8014826:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014828:	9203      	str	r2, [sp, #12]
 801482a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801482e:	9204      	str	r2, [sp, #16]
 8014830:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8014834:	6841      	ldr	r1, [r0, #4]
 8014836:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801483a:	fb01 2505 	mla	r5, r1, r5, r2
 801483e:	6802      	ldr	r2, [r0, #0]
 8014840:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8014844:	f8d9 2000 	ldr.w	r2, [r9]
 8014848:	9201      	str	r2, [sp, #4]
 801484a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801484e:	f1bb 0f00 	cmp.w	fp, #0
 8014852:	dc03      	bgt.n	801485c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014854:	9a03      	ldr	r2, [sp, #12]
 8014856:	2a00      	cmp	r2, #0
 8014858:	f340 8159 	ble.w	8014b0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801485c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801485e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014862:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014866:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801486a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801486c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014870:	2b00      	cmp	r3, #0
 8014872:	dd0e      	ble.n	8014892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8014874:	1402      	asrs	r2, r0, #16
 8014876:	d405      	bmi.n	8014884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014878:	42ba      	cmp	r2, r7
 801487a:	da03      	bge.n	8014884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801487c:	140a      	asrs	r2, r1, #16
 801487e:	d401      	bmi.n	8014884 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014880:	42b2      	cmp	r2, r6
 8014882:	db07      	blt.n	8014894 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014884:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014886:	4410      	add	r0, r2
 8014888:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801488a:	3b01      	subs	r3, #1
 801488c:	4411      	add	r1, r2
 801488e:	3502      	adds	r5, #2
 8014890:	e7ee      	b.n	8014870 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014892:	d017      	beq.n	80148c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014894:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014896:	1e5a      	subs	r2, r3, #1
 8014898:	fb04 0402 	mla	r4, r4, r2, r0
 801489c:	1424      	asrs	r4, r4, #16
 801489e:	d409      	bmi.n	80148b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80148a0:	42bc      	cmp	r4, r7
 80148a2:	da07      	bge.n	80148b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80148a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80148a6:	fb04 1202 	mla	r2, r4, r2, r1
 80148aa:	1412      	asrs	r2, r2, #16
 80148ac:	d402      	bmi.n	80148b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80148ae:	42b2      	cmp	r2, r6
 80148b0:	f2c0 80bf 	blt.w	8014a32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80148b4:	2700      	movs	r7, #0
 80148b6:	19da      	adds	r2, r3, r7
 80148b8:	2a00      	cmp	r2, #0
 80148ba:	dc3e      	bgt.n	801493a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80148bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80148c0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80148c4:	f1bb 0f00 	cmp.w	fp, #0
 80148c8:	f340 8121 	ble.w	8014b0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80148cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80148d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80148d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80148d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148da:	f1bb 0b01 	subs.w	fp, fp, #1
 80148de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80148e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80148e6:	eeb0 6a62 	vmov.f32	s12, s5
 80148ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80148ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80148f6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80148fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80148fe:	eeb0 6a43 	vmov.f32	s12, s6
 8014902:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014906:	ee12 2a90 	vmov	r2, s5
 801490a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801490e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014912:	ee13 2a10 	vmov	r2, s6
 8014916:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801491a:	9313      	str	r3, [sp, #76]	; 0x4c
 801491c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801491e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014922:	9a03      	ldr	r2, [sp, #12]
 8014924:	9314      	str	r3, [sp, #80]	; 0x50
 8014926:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801492a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801492c:	eeb0 3a67 	vmov.f32	s6, s15
 8014930:	bf08      	it	eq
 8014932:	4613      	moveq	r3, r2
 8014934:	eef0 2a47 	vmov.f32	s5, s14
 8014938:	e789      	b.n	801484e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801493a:	1406      	asrs	r6, r0, #16
 801493c:	d42d      	bmi.n	801499a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801493e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8014942:	42b4      	cmp	r4, r6
 8014944:	dd29      	ble.n	801499a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014946:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801494a:	d426      	bmi.n	801499a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801494c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014950:	4562      	cmp	r2, ip
 8014952:	dd22      	ble.n	801499a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014954:	b224      	sxth	r4, r4
 8014956:	9a01      	ldr	r2, [sp, #4]
 8014958:	fb0c 6404 	mla	r4, ip, r4, r6
 801495c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8014960:	0e22      	lsrs	r2, r4, #24
 8014962:	d01a      	beq.n	801499a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014964:	9e04      	ldr	r6, [sp, #16]
 8014966:	4372      	muls	r2, r6
 8014968:	1c56      	adds	r6, r2, #1
 801496a:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801496e:	1212      	asrs	r2, r2, #8
 8014970:	0a26      	lsrs	r6, r4, #8
 8014972:	2aff      	cmp	r2, #255	; 0xff
 8014974:	9605      	str	r6, [sp, #20]
 8014976:	d116      	bne.n	80149a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8014978:	f06f 0201 	mvn.w	r2, #1
 801497c:	fb02 fc07 	mul.w	ip, r2, r7
 8014980:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8014984:	0962      	lsrs	r2, r4, #5
 8014986:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801498a:	f026 0607 	bic.w	r6, r6, #7
 801498e:	4316      	orrs	r6, r2
 8014990:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014994:	4326      	orrs	r6, r4
 8014996:	f825 600c 	strh.w	r6, [r5, ip]
 801499a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801499c:	4410      	add	r0, r2
 801499e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80149a0:	3f01      	subs	r7, #1
 80149a2:	4411      	add	r1, r2
 80149a4:	e787      	b.n	80148b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80149a6:	f06f 0601 	mvn.w	r6, #1
 80149aa:	437e      	muls	r6, r7
 80149ac:	fa1f fa82 	uxth.w	sl, r2
 80149b0:	f835 8006 	ldrh.w	r8, [r5, r6]
 80149b4:	9602      	str	r6, [sp, #8]
 80149b6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80149ba:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80149be:	43d2      	mvns	r2, r2
 80149c0:	b2d2      	uxtb	r2, r2
 80149c2:	fb1c fc0a 	smulbb	ip, ip, sl
 80149c6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80149ca:	fb0e ce02 	mla	lr, lr, r2, ip
 80149ce:	b2e4      	uxtb	r4, r4
 80149d0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80149d4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80149d8:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80149dc:	fa5f f888 	uxtb.w	r8, r8
 80149e0:	fb14 f40a 	smulbb	r4, r4, sl
 80149e4:	fb08 4402 	mla	r4, r8, r2, r4
 80149e8:	fa1f fe8e 	uxth.w	lr, lr
 80149ec:	fb16 f60a 	smulbb	r6, r6, sl
 80149f0:	b2a4      	uxth	r4, r4
 80149f2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80149f6:	fb0c 6c02 	mla	ip, ip, r2, r6
 80149fa:	f10e 0201 	add.w	r2, lr, #1
 80149fe:	1c66      	adds	r6, r4, #1
 8014a00:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014a04:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014a08:	fa1f fc8c 	uxth.w	ip, ip
 8014a0c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014a10:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8014a14:	ea46 0e0e 	orr.w	lr, r6, lr
 8014a18:	f10c 0601 	add.w	r6, ip, #1
 8014a1c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014a20:	0976      	lsrs	r6, r6, #5
 8014a22:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014a26:	9a02      	ldr	r2, [sp, #8]
 8014a28:	ea4e 0e06 	orr.w	lr, lr, r6
 8014a2c:	f825 e002 	strh.w	lr, [r5, r2]
 8014a30:	e7b3      	b.n	801499a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014a32:	f04f 0800 	mov.w	r8, #0
 8014a36:	eba3 0208 	sub.w	r2, r3, r8
 8014a3a:	2a00      	cmp	r2, #0
 8014a3c:	f77f af3e 	ble.w	80148bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a40:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8014a44:	1404      	asrs	r4, r0, #16
 8014a46:	140a      	asrs	r2, r1, #16
 8014a48:	fb06 4202 	mla	r2, r6, r2, r4
 8014a4c:	9c01      	ldr	r4, [sp, #4]
 8014a4e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8014a52:	0e22      	lsrs	r2, r4, #24
 8014a54:	d016      	beq.n	8014a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014a56:	9e04      	ldr	r6, [sp, #16]
 8014a58:	4372      	muls	r2, r6
 8014a5a:	1c56      	adds	r6, r2, #1
 8014a5c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014a60:	1212      	asrs	r2, r2, #8
 8014a62:	2aff      	cmp	r2, #255	; 0xff
 8014a64:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8014a68:	d113      	bne.n	8014a92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8014a6a:	0962      	lsrs	r2, r4, #5
 8014a6c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8014a70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014a74:	f026 0607 	bic.w	r6, r6, #7
 8014a78:	4316      	orrs	r6, r2
 8014a7a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014a7e:	4326      	orrs	r6, r4
 8014a80:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8014a84:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014a86:	4410      	add	r0, r2
 8014a88:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014a8a:	f108 0801 	add.w	r8, r8, #1
 8014a8e:	4411      	add	r1, r2
 8014a90:	e7d1      	b.n	8014a36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8014a92:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8014a96:	fa1f fa82 	uxth.w	sl, r2
 8014a9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014a9e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8014aa2:	43d2      	mvns	r2, r2
 8014aa4:	b2d2      	uxtb	r2, r2
 8014aa6:	fb17 f70a 	smulbb	r7, r7, sl
 8014aaa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014aae:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014ab2:	b2e4      	uxtb	r4, r4
 8014ab4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014ab8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014abc:	fa5f fe8e 	uxtb.w	lr, lr
 8014ac0:	fb14 f40a 	smulbb	r4, r4, sl
 8014ac4:	fb0e 4402 	mla	r4, lr, r2, r4
 8014ac8:	b2f6      	uxtb	r6, r6
 8014aca:	fa1f fc8c 	uxth.w	ip, ip
 8014ace:	fb16 f60a 	smulbb	r6, r6, sl
 8014ad2:	b2a4      	uxth	r4, r4
 8014ad4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014ad8:	fb07 6702 	mla	r7, r7, r2, r6
 8014adc:	f10c 0201 	add.w	r2, ip, #1
 8014ae0:	1c66      	adds	r6, r4, #1
 8014ae2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014ae6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8014aea:	b2bf      	uxth	r7, r7
 8014aec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014af0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014af4:	ea46 0c0c 	orr.w	ip, r6, ip
 8014af8:	1c7e      	adds	r6, r7, #1
 8014afa:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014afe:	0976      	lsrs	r6, r6, #5
 8014b00:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014b04:	ea4c 0c06 	orr.w	ip, ip, r6
 8014b08:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014b0c:	e7ba      	b.n	8014a84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8014b0e:	b007      	add	sp, #28
 8014b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014b14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b18:	b085      	sub	sp, #20
 8014b1a:	468b      	mov	fp, r1
 8014b1c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014b1e:	9203      	str	r2, [sp, #12]
 8014b20:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014b24:	6841      	ldr	r1, [r0, #4]
 8014b26:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8014b2a:	fb01 2404 	mla	r4, r1, r4, r2
 8014b2e:	6802      	ldr	r2, [r0, #0]
 8014b30:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014b34:	f8d8 2000 	ldr.w	r2, [r8]
 8014b38:	9201      	str	r2, [sp, #4]
 8014b3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014b3e:	f1bb 0f00 	cmp.w	fp, #0
 8014b42:	dc03      	bgt.n	8014b4c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014b44:	9a03      	ldr	r2, [sp, #12]
 8014b46:	2a00      	cmp	r2, #0
 8014b48:	f340 814f 	ble.w	8014dea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014b4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014b4e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014b52:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014b56:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014b5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014b5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014b60:	2b00      	cmp	r3, #0
 8014b62:	dd0e      	ble.n	8014b82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014b64:	1408      	asrs	r0, r1, #16
 8014b66:	d405      	bmi.n	8014b74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014b68:	42b8      	cmp	r0, r7
 8014b6a:	da03      	bge.n	8014b74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014b6c:	1410      	asrs	r0, r2, #16
 8014b6e:	d401      	bmi.n	8014b74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014b70:	42b0      	cmp	r0, r6
 8014b72:	db07      	blt.n	8014b84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014b74:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014b76:	4401      	add	r1, r0
 8014b78:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014b7a:	3b01      	subs	r3, #1
 8014b7c:	4402      	add	r2, r0
 8014b7e:	3402      	adds	r4, #2
 8014b80:	e7ee      	b.n	8014b60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014b82:	d017      	beq.n	8014bb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014b84:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014b86:	1e58      	subs	r0, r3, #1
 8014b88:	fb05 1500 	mla	r5, r5, r0, r1
 8014b8c:	142d      	asrs	r5, r5, #16
 8014b8e:	d409      	bmi.n	8014ba4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014b90:	42bd      	cmp	r5, r7
 8014b92:	da07      	bge.n	8014ba4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014b94:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014b96:	fb05 2000 	mla	r0, r5, r0, r2
 8014b9a:	1400      	asrs	r0, r0, #16
 8014b9c:	d402      	bmi.n	8014ba4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8014b9e:	42b0      	cmp	r0, r6
 8014ba0:	f2c0 80ba 	blt.w	8014d18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014ba4:	2600      	movs	r6, #0
 8014ba6:	1998      	adds	r0, r3, r6
 8014ba8:	2800      	cmp	r0, #0
 8014baa:	dc3e      	bgt.n	8014c2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014bac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014bb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014bb4:	f1bb 0f00 	cmp.w	fp, #0
 8014bb8:	f340 8117 	ble.w	8014dea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014bbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014bc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014bc4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014bc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014bca:	f1bb 0b01 	subs.w	fp, fp, #1
 8014bce:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014bd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014bd6:	eeb0 6a62 	vmov.f32	s12, s5
 8014bda:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014bde:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014be2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014be6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014bea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014bee:	eeb0 6a43 	vmov.f32	s12, s6
 8014bf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014bf6:	ee12 2a90 	vmov	r2, s5
 8014bfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014bfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c02:	ee13 2a10 	vmov	r2, s6
 8014c06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c0a:	9311      	str	r3, [sp, #68]	; 0x44
 8014c0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c12:	9a03      	ldr	r2, [sp, #12]
 8014c14:	9312      	str	r3, [sp, #72]	; 0x48
 8014c16:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014c1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c1c:	eeb0 3a67 	vmov.f32	s6, s15
 8014c20:	bf08      	it	eq
 8014c22:	4613      	moveq	r3, r2
 8014c24:	eef0 2a47 	vmov.f32	s5, s14
 8014c28:	e789      	b.n	8014b3e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014c2a:	140f      	asrs	r7, r1, #16
 8014c2c:	d424      	bmi.n	8014c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014c2e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8014c32:	42bd      	cmp	r5, r7
 8014c34:	dd20      	ble.n	8014c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014c36:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014c3a:	d41d      	bmi.n	8014c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014c3c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014c40:	4560      	cmp	r0, ip
 8014c42:	dd19      	ble.n	8014c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014c44:	b22d      	sxth	r5, r5
 8014c46:	fb0c 7505 	mla	r5, ip, r5, r7
 8014c4a:	9801      	ldr	r0, [sp, #4]
 8014c4c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8014c50:	0e07      	lsrs	r7, r0, #24
 8014c52:	2fff      	cmp	r7, #255	; 0xff
 8014c54:	d116      	bne.n	8014c84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014c56:	f06f 0501 	mvn.w	r5, #1
 8014c5a:	fb05 f706 	mul.w	r7, r5, r6
 8014c5e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8014c62:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014c66:	0945      	lsrs	r5, r0, #5
 8014c68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014c6c:	ea4c 0505 	orr.w	r5, ip, r5
 8014c70:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014c74:	4305      	orrs	r5, r0
 8014c76:	53e5      	strh	r5, [r4, r7]
 8014c78:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014c7a:	4401      	add	r1, r0
 8014c7c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014c7e:	3e01      	subs	r6, #1
 8014c80:	4402      	add	r2, r0
 8014c82:	e790      	b.n	8014ba6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014c84:	b2fd      	uxtb	r5, r7
 8014c86:	2f00      	cmp	r7, #0
 8014c88:	d0f6      	beq.n	8014c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014c8a:	f06f 0701 	mvn.w	r7, #1
 8014c8e:	4377      	muls	r7, r6
 8014c90:	fa1f f985 	uxth.w	r9, r5
 8014c94:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014c98:	9702      	str	r7, [sp, #8]
 8014c9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014c9e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014ca2:	43ed      	mvns	r5, r5
 8014ca4:	b2ed      	uxtb	r5, r5
 8014ca6:	fb17 f709 	smulbb	r7, r7, r9
 8014caa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014cae:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014cb2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014cb6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014cba:	b2c0      	uxtb	r0, r0
 8014cbc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014cc0:	fa5f fe8e 	uxtb.w	lr, lr
 8014cc4:	fb10 f009 	smulbb	r0, r0, r9
 8014cc8:	fb0e 0005 	mla	r0, lr, r5, r0
 8014ccc:	b280      	uxth	r0, r0
 8014cce:	fa1f fc8c 	uxth.w	ip, ip
 8014cd2:	fb1a fa09 	smulbb	sl, sl, r9
 8014cd6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014cda:	fb07 a705 	mla	r7, r7, r5, sl
 8014cde:	f100 0a01 	add.w	sl, r0, #1
 8014ce2:	f10c 0501 	add.w	r5, ip, #1
 8014ce6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014cea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014cee:	b2bf      	uxth	r7, r7
 8014cf0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014cf4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014cf8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014cfc:	f107 0a01 	add.w	sl, r7, #1
 8014d00:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014d04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014d08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014d0c:	9802      	ldr	r0, [sp, #8]
 8014d0e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014d12:	f824 c000 	strh.w	ip, [r4, r0]
 8014d16:	e7af      	b.n	8014c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014d18:	f04f 0e00 	mov.w	lr, #0
 8014d1c:	eba3 000e 	sub.w	r0, r3, lr
 8014d20:	2800      	cmp	r0, #0
 8014d22:	f77f af43 	ble.w	8014bac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014d26:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014d2a:	140d      	asrs	r5, r1, #16
 8014d2c:	1410      	asrs	r0, r2, #16
 8014d2e:	fb06 5000 	mla	r0, r6, r0, r5
 8014d32:	9d01      	ldr	r5, [sp, #4]
 8014d34:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014d38:	0e2e      	lsrs	r6, r5, #24
 8014d3a:	2eff      	cmp	r6, #255	; 0xff
 8014d3c:	d112      	bne.n	8014d64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8014d3e:	482c      	ldr	r0, [pc, #176]	; (8014df0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8014d40:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014d44:	0968      	lsrs	r0, r5, #5
 8014d46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8014d4a:	4330      	orrs	r0, r6
 8014d4c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014d50:	4328      	orrs	r0, r5
 8014d52:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8014d56:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014d58:	4401      	add	r1, r0
 8014d5a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014d5c:	f10e 0e01 	add.w	lr, lr, #1
 8014d60:	4402      	add	r2, r0
 8014d62:	e7db      	b.n	8014d1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8014d64:	b2f0      	uxtb	r0, r6
 8014d66:	2e00      	cmp	r6, #0
 8014d68:	d0f5      	beq.n	8014d56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014d6a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014d6e:	fa1f f980 	uxth.w	r9, r0
 8014d72:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014d76:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014d7a:	43c0      	mvns	r0, r0
 8014d7c:	b2c0      	uxtb	r0, r0
 8014d7e:	fb16 f609 	smulbb	r6, r6, r9
 8014d82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014d86:	fb07 6700 	mla	r7, r7, r0, r6
 8014d8a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014d8e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014d92:	b2ed      	uxtb	r5, r5
 8014d94:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014d98:	fa5f fc8c 	uxtb.w	ip, ip
 8014d9c:	fb15 f509 	smulbb	r5, r5, r9
 8014da0:	fb0c 5500 	mla	r5, ip, r0, r5
 8014da4:	b2bf      	uxth	r7, r7
 8014da6:	fb1a fa09 	smulbb	sl, sl, r9
 8014daa:	b2ad      	uxth	r5, r5
 8014dac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014db0:	fb06 a600 	mla	r6, r6, r0, sl
 8014db4:	1c78      	adds	r0, r7, #1
 8014db6:	f105 0a01 	add.w	sl, r5, #1
 8014dba:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014dbe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014dc2:	b2b6      	uxth	r6, r6
 8014dc4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014dc8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014dcc:	ea4a 0707 	orr.w	r7, sl, r7
 8014dd0:	f106 0a01 	add.w	sl, r6, #1
 8014dd4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014dd8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014ddc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014de0:	ea47 070a 	orr.w	r7, r7, sl
 8014de4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014de8:	e7b5      	b.n	8014d56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014dea:	b005      	add	sp, #20
 8014dec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014df0:	fffff800 	.word	0xfffff800

08014df4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014df8:	b087      	sub	sp, #28
 8014dfa:	468b      	mov	fp, r1
 8014dfc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014dfe:	9203      	str	r2, [sp, #12]
 8014e00:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014e04:	9204      	str	r2, [sp, #16]
 8014e06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014e0a:	6841      	ldr	r1, [r0, #4]
 8014e0c:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8014e10:	fb01 2404 	mla	r4, r1, r4, r2
 8014e14:	6802      	ldr	r2, [r0, #0]
 8014e16:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e1a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014e1e:	3201      	adds	r2, #1
 8014e20:	f022 0201 	bic.w	r2, r2, #1
 8014e24:	9200      	str	r2, [sp, #0]
 8014e26:	f8d9 2000 	ldr.w	r2, [r9]
 8014e2a:	9201      	str	r2, [sp, #4]
 8014e2c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e30:	f1bb 0f00 	cmp.w	fp, #0
 8014e34:	dc03      	bgt.n	8014e3e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014e36:	9a03      	ldr	r2, [sp, #12]
 8014e38:	2a00      	cmp	r2, #0
 8014e3a:	f340 8169 	ble.w	8015110 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014e3e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014e40:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8014e44:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8014e48:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014e4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014e4e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014e52:	2b00      	cmp	r3, #0
 8014e54:	dd0e      	ble.n	8014e74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014e56:	1402      	asrs	r2, r0, #16
 8014e58:	d405      	bmi.n	8014e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e5a:	42ba      	cmp	r2, r7
 8014e5c:	da03      	bge.n	8014e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e5e:	140a      	asrs	r2, r1, #16
 8014e60:	d401      	bmi.n	8014e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e62:	42b2      	cmp	r2, r6
 8014e64:	db07      	blt.n	8014e76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014e66:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014e68:	4410      	add	r0, r2
 8014e6a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014e6c:	3b01      	subs	r3, #1
 8014e6e:	4411      	add	r1, r2
 8014e70:	3402      	adds	r4, #2
 8014e72:	e7ee      	b.n	8014e52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014e74:	d017      	beq.n	8014ea6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014e76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014e78:	1e5a      	subs	r2, r3, #1
 8014e7a:	fb05 0502 	mla	r5, r5, r2, r0
 8014e7e:	142d      	asrs	r5, r5, #16
 8014e80:	d409      	bmi.n	8014e96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014e82:	42bd      	cmp	r5, r7
 8014e84:	da07      	bge.n	8014e96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014e86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014e88:	fb05 1202 	mla	r2, r5, r2, r1
 8014e8c:	1412      	asrs	r2, r2, #16
 8014e8e:	d402      	bmi.n	8014e96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014e90:	42b2      	cmp	r2, r6
 8014e92:	f2c0 80c7 	blt.w	8015024 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8014e96:	2700      	movs	r7, #0
 8014e98:	19da      	adds	r2, r3, r7
 8014e9a:	2a00      	cmp	r2, #0
 8014e9c:	dc3e      	bgt.n	8014f1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014e9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ea2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ea6:	f1bb 0f00 	cmp.w	fp, #0
 8014eaa:	f340 8131 	ble.w	8015110 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8014eae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014eb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014eb6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014eba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ebc:	f1bb 0b01 	subs.w	fp, fp, #1
 8014ec0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ec4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ec8:	eeb0 6a62 	vmov.f32	s12, s5
 8014ecc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014ed0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ed4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ed8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014edc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ee0:	eeb0 6a43 	vmov.f32	s12, s6
 8014ee4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ee8:	ee12 2a90 	vmov	r2, s5
 8014eec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ef0:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ef4:	ee13 2a10 	vmov	r2, s6
 8014ef8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014efc:	9313      	str	r3, [sp, #76]	; 0x4c
 8014efe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f00:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f04:	9a03      	ldr	r2, [sp, #12]
 8014f06:	9314      	str	r3, [sp, #80]	; 0x50
 8014f08:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014f0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f0e:	eeb0 3a67 	vmov.f32	s6, s15
 8014f12:	bf08      	it	eq
 8014f14:	4613      	moveq	r3, r2
 8014f16:	eef0 2a47 	vmov.f32	s5, s14
 8014f1a:	e789      	b.n	8014e30 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014f1c:	1405      	asrs	r5, r0, #16
 8014f1e:	d435      	bmi.n	8014f8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014f20:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014f24:	42aa      	cmp	r2, r5
 8014f26:	dd31      	ble.n	8014f8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014f28:	140e      	asrs	r6, r1, #16
 8014f2a:	d42f      	bmi.n	8014f8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014f2c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014f30:	42b2      	cmp	r2, r6
 8014f32:	dd2b      	ble.n	8014f8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014f34:	9a00      	ldr	r2, [sp, #0]
 8014f36:	fb06 5502 	mla	r5, r6, r2, r5
 8014f3a:	086a      	lsrs	r2, r5, #1
 8014f3c:	9e01      	ldr	r6, [sp, #4]
 8014f3e:	5cb2      	ldrb	r2, [r6, r2]
 8014f40:	07ee      	lsls	r6, r5, #31
 8014f42:	bf54      	ite	pl
 8014f44:	f002 020f 	andpl.w	r2, r2, #15
 8014f48:	1112      	asrmi	r2, r2, #4
 8014f4a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014f4e:	b2d2      	uxtb	r2, r2
 8014f50:	b1e2      	cbz	r2, 8014f8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8014f52:	9d04      	ldr	r5, [sp, #16]
 8014f54:	436a      	muls	r2, r5
 8014f56:	1c55      	adds	r5, r2, #1
 8014f58:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014f5c:	4d6e      	ldr	r5, [pc, #440]	; (8015118 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014f5e:	682d      	ldr	r5, [r5, #0]
 8014f60:	1212      	asrs	r2, r2, #8
 8014f62:	0a2e      	lsrs	r6, r5, #8
 8014f64:	2aff      	cmp	r2, #255	; 0xff
 8014f66:	9605      	str	r6, [sp, #20]
 8014f68:	d116      	bne.n	8014f98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8014f6a:	f06f 0201 	mvn.w	r2, #1
 8014f6e:	fb02 fc07 	mul.w	ip, r2, r7
 8014f72:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8014f76:	096a      	lsrs	r2, r5, #5
 8014f78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014f7c:	f026 0607 	bic.w	r6, r6, #7
 8014f80:	4316      	orrs	r6, r2
 8014f82:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014f86:	432e      	orrs	r6, r5
 8014f88:	f824 600c 	strh.w	r6, [r4, ip]
 8014f8c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014f8e:	4410      	add	r0, r2
 8014f90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014f92:	3f01      	subs	r7, #1
 8014f94:	4411      	add	r1, r2
 8014f96:	e77f      	b.n	8014e98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8014f98:	f06f 0601 	mvn.w	r6, #1
 8014f9c:	437e      	muls	r6, r7
 8014f9e:	fa1f fa82 	uxth.w	sl, r2
 8014fa2:	f834 8006 	ldrh.w	r8, [r4, r6]
 8014fa6:	9602      	str	r6, [sp, #8]
 8014fa8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014fac:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8014fb0:	43d2      	mvns	r2, r2
 8014fb2:	b2d2      	uxtb	r2, r2
 8014fb4:	fb1c fc0a 	smulbb	ip, ip, sl
 8014fb8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8014fbc:	fb0e ce02 	mla	lr, lr, r2, ip
 8014fc0:	b2ed      	uxtb	r5, r5
 8014fc2:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014fc6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014fca:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014fce:	fa5f f888 	uxtb.w	r8, r8
 8014fd2:	fb15 f50a 	smulbb	r5, r5, sl
 8014fd6:	fb08 5502 	mla	r5, r8, r2, r5
 8014fda:	fa1f fe8e 	uxth.w	lr, lr
 8014fde:	fb16 f60a 	smulbb	r6, r6, sl
 8014fe2:	b2ad      	uxth	r5, r5
 8014fe4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8014fe8:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014fec:	f10e 0201 	add.w	r2, lr, #1
 8014ff0:	1c6e      	adds	r6, r5, #1
 8014ff2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014ff6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8014ffa:	fa1f fc8c 	uxth.w	ip, ip
 8014ffe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015002:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015006:	ea46 0e0e 	orr.w	lr, r6, lr
 801500a:	f10c 0601 	add.w	r6, ip, #1
 801500e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015012:	0976      	lsrs	r6, r6, #5
 8015014:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015018:	9a02      	ldr	r2, [sp, #8]
 801501a:	ea4e 0e06 	orr.w	lr, lr, r6
 801501e:	f824 e002 	strh.w	lr, [r4, r2]
 8015022:	e7b3      	b.n	8014f8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015024:	f04f 0800 	mov.w	r8, #0
 8015028:	eba3 0208 	sub.w	r2, r3, r8
 801502c:	2a00      	cmp	r2, #0
 801502e:	f77f af36 	ble.w	8014e9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015032:	9e00      	ldr	r6, [sp, #0]
 8015034:	1402      	asrs	r2, r0, #16
 8015036:	140d      	asrs	r5, r1, #16
 8015038:	fb06 2505 	mla	r5, r6, r5, r2
 801503c:	086a      	lsrs	r2, r5, #1
 801503e:	9e01      	ldr	r6, [sp, #4]
 8015040:	5cb2      	ldrb	r2, [r6, r2]
 8015042:	07ed      	lsls	r5, r5, #31
 8015044:	bf54      	ite	pl
 8015046:	f002 020f 	andpl.w	r2, r2, #15
 801504a:	1112      	asrmi	r2, r2, #4
 801504c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015050:	b2d2      	uxtb	r2, r2
 8015052:	b1c2      	cbz	r2, 8015086 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015054:	9d04      	ldr	r5, [sp, #16]
 8015056:	436a      	muls	r2, r5
 8015058:	1c55      	adds	r5, r2, #1
 801505a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801505e:	4d2e      	ldr	r5, [pc, #184]	; (8015118 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8015060:	1212      	asrs	r2, r2, #8
 8015062:	682e      	ldr	r6, [r5, #0]
 8015064:	2aff      	cmp	r2, #255	; 0xff
 8015066:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801506a:	d113      	bne.n	8015094 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801506c:	0972      	lsrs	r2, r6, #5
 801506e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8015072:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015076:	f025 0507 	bic.w	r5, r5, #7
 801507a:	4315      	orrs	r5, r2
 801507c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8015080:	4335      	orrs	r5, r6
 8015082:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8015086:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015088:	4410      	add	r0, r2
 801508a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801508c:	f108 0801 	add.w	r8, r8, #1
 8015090:	4411      	add	r1, r2
 8015092:	e7c9      	b.n	8015028 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8015094:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015098:	fa1f fa82 	uxth.w	sl, r2
 801509c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80150a0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80150a4:	43d2      	mvns	r2, r2
 80150a6:	b2d2      	uxtb	r2, r2
 80150a8:	fb17 f70a 	smulbb	r7, r7, sl
 80150ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80150b0:	fb0c 7c02 	mla	ip, ip, r2, r7
 80150b4:	b2f6      	uxtb	r6, r6
 80150b6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80150ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80150be:	fa5f fe8e 	uxtb.w	lr, lr
 80150c2:	fb16 f60a 	smulbb	r6, r6, sl
 80150c6:	fb0e 6602 	mla	r6, lr, r2, r6
 80150ca:	b2ed      	uxtb	r5, r5
 80150cc:	fa1f fc8c 	uxth.w	ip, ip
 80150d0:	fb15 f50a 	smulbb	r5, r5, sl
 80150d4:	b2b6      	uxth	r6, r6
 80150d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80150da:	fb07 5702 	mla	r7, r7, r2, r5
 80150de:	f10c 0201 	add.w	r2, ip, #1
 80150e2:	1c75      	adds	r5, r6, #1
 80150e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80150e8:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80150ec:	b2bf      	uxth	r7, r7
 80150ee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80150f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80150f6:	ea45 0c0c 	orr.w	ip, r5, ip
 80150fa:	1c7d      	adds	r5, r7, #1
 80150fc:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8015100:	096d      	lsrs	r5, r5, #5
 8015102:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015106:	ea4c 0c05 	orr.w	ip, ip, r5
 801510a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801510e:	e7ba      	b.n	8015086 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8015110:	b007      	add	sp, #28
 8015112:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015116:	bf00      	nop
 8015118:	20014fcc 	.word	0x20014fcc

0801511c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801511c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015120:	b087      	sub	sp, #28
 8015122:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8015430 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015126:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015128:	9205      	str	r2, [sp, #20]
 801512a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801512e:	9101      	str	r1, [sp, #4]
 8015130:	6841      	ldr	r1, [r0, #4]
 8015132:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8015136:	fb01 2404 	mla	r4, r1, r4, r2
 801513a:	6802      	ldr	r2, [r0, #0]
 801513c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015140:	f8db 2008 	ldr.w	r2, [fp, #8]
 8015144:	3201      	adds	r2, #1
 8015146:	f022 0201 	bic.w	r2, r2, #1
 801514a:	9202      	str	r2, [sp, #8]
 801514c:	f8db 2000 	ldr.w	r2, [fp]
 8015150:	9203      	str	r2, [sp, #12]
 8015152:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015156:	9a01      	ldr	r2, [sp, #4]
 8015158:	2a00      	cmp	r2, #0
 801515a:	dc03      	bgt.n	8015164 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801515c:	9a05      	ldr	r2, [sp, #20]
 801515e:	2a00      	cmp	r2, #0
 8015160:	f340 8162 	ble.w	8015428 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8015164:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015166:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801516a:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801516e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015172:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015174:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015178:	2b00      	cmp	r3, #0
 801517a:	dd0e      	ble.n	801519a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801517c:	1402      	asrs	r2, r0, #16
 801517e:	d405      	bmi.n	801518c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015180:	42ba      	cmp	r2, r7
 8015182:	da03      	bge.n	801518c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015184:	140a      	asrs	r2, r1, #16
 8015186:	d401      	bmi.n	801518c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015188:	42b2      	cmp	r2, r6
 801518a:	db07      	blt.n	801519c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801518c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801518e:	4410      	add	r0, r2
 8015190:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015192:	3b01      	subs	r3, #1
 8015194:	4411      	add	r1, r2
 8015196:	3402      	adds	r4, #2
 8015198:	e7ee      	b.n	8015178 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801519a:	d017      	beq.n	80151cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801519c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801519e:	1e5a      	subs	r2, r3, #1
 80151a0:	fb05 0502 	mla	r5, r5, r2, r0
 80151a4:	142d      	asrs	r5, r5, #16
 80151a6:	d409      	bmi.n	80151bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80151a8:	42bd      	cmp	r5, r7
 80151aa:	da07      	bge.n	80151bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80151ac:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80151ae:	fb05 1202 	mla	r2, r5, r2, r1
 80151b2:	1412      	asrs	r2, r2, #16
 80151b4:	d402      	bmi.n	80151bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80151b6:	42b2      	cmp	r2, r6
 80151b8:	f2c0 80c3 	blt.w	8015342 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80151bc:	2500      	movs	r5, #0
 80151be:	195a      	adds	r2, r3, r5
 80151c0:	2a00      	cmp	r2, #0
 80151c2:	dc3f      	bgt.n	8015244 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80151c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80151c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80151cc:	9b01      	ldr	r3, [sp, #4]
 80151ce:	2b00      	cmp	r3, #0
 80151d0:	f340 812a 	ble.w	8015428 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80151d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80151d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80151dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80151e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80151e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80151e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80151ea:	eeb0 6a62 	vmov.f32	s12, s5
 80151ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 80151f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80151f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80151fa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80151fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015202:	eeb0 6a43 	vmov.f32	s12, s6
 8015206:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801520a:	ee12 2a90 	vmov	r2, s5
 801520e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015212:	fb92 f3f3 	sdiv	r3, r2, r3
 8015216:	ee13 2a10 	vmov	r2, s6
 801521a:	9313      	str	r3, [sp, #76]	; 0x4c
 801521c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801521e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015222:	9314      	str	r3, [sp, #80]	; 0x50
 8015224:	9b01      	ldr	r3, [sp, #4]
 8015226:	9a05      	ldr	r2, [sp, #20]
 8015228:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801522c:	3b01      	subs	r3, #1
 801522e:	9301      	str	r3, [sp, #4]
 8015230:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015234:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015236:	eeb0 3a67 	vmov.f32	s6, s15
 801523a:	bf08      	it	eq
 801523c:	4613      	moveq	r3, r2
 801523e:	eef0 2a47 	vmov.f32	s5, s14
 8015242:	e788      	b.n	8015156 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015244:	1406      	asrs	r6, r0, #16
 8015246:	d42c      	bmi.n	80152a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015248:	f8db 2008 	ldr.w	r2, [fp, #8]
 801524c:	42b2      	cmp	r2, r6
 801524e:	dd28      	ble.n	80152a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015250:	140f      	asrs	r7, r1, #16
 8015252:	d426      	bmi.n	80152a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015254:	f8db 200c 	ldr.w	r2, [fp, #12]
 8015258:	42ba      	cmp	r2, r7
 801525a:	dd22      	ble.n	80152a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801525c:	9a02      	ldr	r2, [sp, #8]
 801525e:	fb07 6602 	mla	r6, r7, r2, r6
 8015262:	0872      	lsrs	r2, r6, #1
 8015264:	9f03      	ldr	r7, [sp, #12]
 8015266:	5cba      	ldrb	r2, [r7, r2]
 8015268:	07f6      	lsls	r6, r6, #31
 801526a:	bf54      	ite	pl
 801526c:	f002 020f 	andpl.w	r2, r2, #15
 8015270:	1112      	asrmi	r2, r2, #4
 8015272:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8015276:	b2d2      	uxtb	r2, r2
 8015278:	2aff      	cmp	r2, #255	; 0xff
 801527a:	d118      	bne.n	80152ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801527c:	f8d8 2000 	ldr.w	r2, [r8]
 8015280:	f06f 0601 	mvn.w	r6, #1
 8015284:	fb06 f705 	mul.w	r7, r6, r5
 8015288:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801528c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8015290:	0956      	lsrs	r6, r2, #5
 8015292:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015296:	ea4c 0606 	orr.w	r6, ip, r6
 801529a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801529e:	4316      	orrs	r6, r2
 80152a0:	53e6      	strh	r6, [r4, r7]
 80152a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80152a4:	4410      	add	r0, r2
 80152a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80152a8:	3d01      	subs	r5, #1
 80152aa:	4411      	add	r1, r2
 80152ac:	e787      	b.n	80151be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80152ae:	2a00      	cmp	r2, #0
 80152b0:	d0f7      	beq.n	80152a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80152b2:	f06f 0601 	mvn.w	r6, #1
 80152b6:	436e      	muls	r6, r5
 80152b8:	f8d8 c000 	ldr.w	ip, [r8]
 80152bc:	f834 e006 	ldrh.w	lr, [r4, r6]
 80152c0:	9604      	str	r6, [sp, #16]
 80152c2:	fa1f f982 	uxth.w	r9, r2
 80152c6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80152ca:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80152ce:	43d2      	mvns	r2, r2
 80152d0:	b2d2      	uxtb	r2, r2
 80152d2:	fb16 f609 	smulbb	r6, r6, r9
 80152d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80152da:	fb07 6702 	mla	r7, r7, r2, r6
 80152de:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80152e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80152e6:	fa5f fc8c 	uxtb.w	ip, ip
 80152ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80152ee:	fa5f fe8e 	uxtb.w	lr, lr
 80152f2:	fb1c fc09 	smulbb	ip, ip, r9
 80152f6:	fb0e cc02 	mla	ip, lr, r2, ip
 80152fa:	b2bf      	uxth	r7, r7
 80152fc:	fb1a fa09 	smulbb	sl, sl, r9
 8015300:	fa1f fc8c 	uxth.w	ip, ip
 8015304:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015308:	fb06 a602 	mla	r6, r6, r2, sl
 801530c:	1c7a      	adds	r2, r7, #1
 801530e:	f10c 0a01 	add.w	sl, ip, #1
 8015312:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015316:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801531a:	b2b6      	uxth	r6, r6
 801531c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015320:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015324:	ea4a 0707 	orr.w	r7, sl, r7
 8015328:	f106 0a01 	add.w	sl, r6, #1
 801532c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015330:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015334:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015338:	9a04      	ldr	r2, [sp, #16]
 801533a:	ea47 070a 	orr.w	r7, r7, sl
 801533e:	52a7      	strh	r7, [r4, r2]
 8015340:	e7af      	b.n	80152a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015342:	f04f 0e00 	mov.w	lr, #0
 8015346:	eba3 020e 	sub.w	r2, r3, lr
 801534a:	2a00      	cmp	r2, #0
 801534c:	f77f af3a 	ble.w	80151c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015350:	9e02      	ldr	r6, [sp, #8]
 8015352:	1402      	asrs	r2, r0, #16
 8015354:	140d      	asrs	r5, r1, #16
 8015356:	fb06 2505 	mla	r5, r6, r5, r2
 801535a:	086a      	lsrs	r2, r5, #1
 801535c:	9e03      	ldr	r6, [sp, #12]
 801535e:	5cb2      	ldrb	r2, [r6, r2]
 8015360:	07ed      	lsls	r5, r5, #31
 8015362:	bf54      	ite	pl
 8015364:	f002 020f 	andpl.w	r2, r2, #15
 8015368:	1112      	asrmi	r2, r2, #4
 801536a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801536e:	b2d2      	uxtb	r2, r2
 8015370:	2aff      	cmp	r2, #255	; 0xff
 8015372:	d115      	bne.n	80153a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8015374:	f8d8 5000 	ldr.w	r5, [r8]
 8015378:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801537c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8015380:	096a      	lsrs	r2, r5, #5
 8015382:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015386:	4332      	orrs	r2, r6
 8015388:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801538c:	432a      	orrs	r2, r5
 801538e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8015392:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015394:	4410      	add	r0, r2
 8015396:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015398:	f10e 0e01 	add.w	lr, lr, #1
 801539c:	4411      	add	r1, r2
 801539e:	e7d2      	b.n	8015346 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80153a0:	2a00      	cmp	r2, #0
 80153a2:	d0f6      	beq.n	8015392 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80153a4:	f8d8 7000 	ldr.w	r7, [r8]
 80153a8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80153ac:	fa1f f982 	uxth.w	r9, r2
 80153b0:	ea4f 262c 	mov.w	r6, ip, asr #8
 80153b4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80153b8:	43d2      	mvns	r2, r2
 80153ba:	b2d2      	uxtb	r2, r2
 80153bc:	fb15 f509 	smulbb	r5, r5, r9
 80153c0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80153c4:	fb06 5602 	mla	r6, r6, r2, r5
 80153c8:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80153cc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80153d0:	b2ff      	uxtb	r7, r7
 80153d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80153d6:	fa5f fc8c 	uxtb.w	ip, ip
 80153da:	fb17 f709 	smulbb	r7, r7, r9
 80153de:	fb0c 7702 	mla	r7, ip, r2, r7
 80153e2:	b2b6      	uxth	r6, r6
 80153e4:	fb1a fa09 	smulbb	sl, sl, r9
 80153e8:	b2bf      	uxth	r7, r7
 80153ea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80153ee:	fb05 a502 	mla	r5, r5, r2, sl
 80153f2:	1c72      	adds	r2, r6, #1
 80153f4:	f107 0a01 	add.w	sl, r7, #1
 80153f8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80153fc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015400:	b2ad      	uxth	r5, r5
 8015402:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015406:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801540a:	ea4a 0606 	orr.w	r6, sl, r6
 801540e:	f105 0a01 	add.w	sl, r5, #1
 8015412:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015416:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801541a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801541e:	ea46 060a 	orr.w	r6, r6, sl
 8015422:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8015426:	e7b4      	b.n	8015392 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8015428:	b007      	add	sp, #28
 801542a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801542e:	bf00      	nop
 8015430:	20014fcc 	.word	0x20014fcc

08015434 <_ZN8touchgfx8LCD16bppD1Ev>:
 8015434:	4770      	bx	lr

08015436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8015436:	4770      	bx	lr

08015438 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8015438:	4770      	bx	lr

0801543a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801543a:	4770      	bx	lr

0801543c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801543c:	4770      	bx	lr

0801543e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801543e:	4770      	bx	lr

08015440 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8015440:	4770      	bx	lr

08015442 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8015442:	4770      	bx	lr

08015444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015444:	4770      	bx	lr

08015446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015446:	4770      	bx	lr

08015448 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015448:	4770      	bx	lr

0801544a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801544a:	4770      	bx	lr

0801544c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801544c:	4770      	bx	lr

0801544e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801544e:	4770      	bx	lr

08015450 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8015450:	4770      	bx	lr

08015452 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8015452:	4770      	bx	lr

08015454 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015454:	4770      	bx	lr

08015456 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015456:	4770      	bx	lr

08015458 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015458:	4770      	bx	lr

0801545a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801545a:	4770      	bx	lr

0801545c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801545c:	4770      	bx	lr

0801545e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801545e:	4770      	bx	lr

08015460 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8015460:	4770      	bx	lr

08015462 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8015462:	4770      	bx	lr

08015464 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8015464:	4770      	bx	lr

08015466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8015466:	4770      	bx	lr

08015468 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015468:	4770      	bx	lr

0801546a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801546a:	4770      	bx	lr

0801546c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801546c:	4770      	bx	lr

0801546e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801546e:	4770      	bx	lr

08015470 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8015470:	4770      	bx	lr

08015472 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8015472:	4770      	bx	lr

08015474 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8015474:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015478:	b088      	sub	sp, #32
 801547a:	ac08      	add	r4, sp, #32
 801547c:	4606      	mov	r6, r0
 801547e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8015482:	4620      	mov	r0, r4
 8015484:	4688      	mov	r8, r1
 8015486:	4691      	mov	r9, r2
 8015488:	f7fd fc62 	bl	8012d50 <_ZNK8touchgfx6Bitmap7getDataEv>
 801548c:	6833      	ldr	r3, [r6, #0]
 801548e:	4605      	mov	r5, r0
 8015490:	4620      	mov	r0, r4
 8015492:	699f      	ldr	r7, [r3, #24]
 8015494:	f7fd fb70 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015498:	4682      	mov	sl, r0
 801549a:	4620      	mov	r0, r4
 801549c:	f7fd fba0 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80154a0:	9500      	str	r5, [sp, #0]
 80154a2:	e9cd a001 	strd	sl, r0, [sp, #4]
 80154a6:	464b      	mov	r3, r9
 80154a8:	a806      	add	r0, sp, #24
 80154aa:	4642      	mov	r2, r8
 80154ac:	4631      	mov	r1, r6
 80154ae:	47b8      	blx	r7
 80154b0:	4628      	mov	r0, r5
 80154b2:	b008      	add	sp, #32
 80154b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080154b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80154b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80154bc:	2300      	movs	r3, #0
 80154be:	9300      	str	r3, [sp, #0]
 80154c0:	4b3d      	ldr	r3, [pc, #244]	; (80155b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80154c2:	781b      	ldrb	r3, [r3, #0]
 80154c4:	2b00      	cmp	r3, #0
 80154c6:	d137      	bne.n	8015538 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80154c8:	4a3c      	ldr	r2, [pc, #240]	; (80155bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80154ca:	f9b2 2000 	ldrsh.w	r2, [r2]
 80154ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 80154d2:	2b00      	cmp	r3, #0
 80154d4:	d132      	bne.n	801553c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80154d6:	4b3a      	ldr	r3, [pc, #232]	; (80155c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80154d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80154dc:	6808      	ldr	r0, [r1, #0]
 80154de:	6849      	ldr	r1, [r1, #4]
 80154e0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80154e4:	ac02      	add	r4, sp, #8
 80154e6:	ab02      	add	r3, sp, #8
 80154e8:	c303      	stmia	r3!, {r0, r1}
 80154ea:	4669      	mov	r1, sp
 80154ec:	4620      	mov	r0, r4
 80154ee:	f7fa f923 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80154f2:	4668      	mov	r0, sp
 80154f4:	f7fa f8dc 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80154f8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80154fc:	f8bd 2000 	ldrh.w	r2, [sp]
 8015500:	4d30      	ldr	r5, [pc, #192]	; (80155c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015502:	4413      	add	r3, r2
 8015504:	f8ad 3008 	strh.w	r3, [sp, #8]
 8015508:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801550c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015510:	6828      	ldr	r0, [r5, #0]
 8015512:	4413      	add	r3, r2
 8015514:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015518:	6803      	ldr	r3, [r0, #0]
 801551a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801551c:	4798      	blx	r3
 801551e:	f010 0f01 	tst.w	r0, #1
 8015522:	462f      	mov	r7, r5
 8015524:	d00c      	beq.n	8015540 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015526:	6828      	ldr	r0, [r5, #0]
 8015528:	6803      	ldr	r3, [r0, #0]
 801552a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801552e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8015530:	4798      	blx	r3
 8015532:	b004      	add	sp, #16
 8015534:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015538:	4a21      	ldr	r2, [pc, #132]	; (80155c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801553a:	e7c6      	b.n	80154ca <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801553c:	4b1f      	ldr	r3, [pc, #124]	; (80155bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801553e:	e7cb      	b.n	80154d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8015540:	6838      	ldr	r0, [r7, #0]
 8015542:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8015546:	6803      	ldr	r3, [r0, #0]
 8015548:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801554c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801554e:	4798      	blx	r3
 8015550:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8015554:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015558:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801555c:	fb16 3602 	smlabb	r6, r6, r2, r3
 8015560:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8015564:	6838      	ldr	r0, [r7, #0]
 8015566:	6803      	ldr	r3, [r0, #0]
 8015568:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801556a:	4798      	blx	r3
 801556c:	4a13      	ldr	r2, [pc, #76]	; (80155bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801556e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8015572:	8813      	ldrh	r3, [r2, #0]
 8015574:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8015578:	fb03 1404 	mla	r4, r3, r4, r1
 801557c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8015580:	435d      	muls	r5, r3
 8015582:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015586:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801558a:	4691      	mov	r9, r2
 801558c:	6838      	ldr	r0, [r7, #0]
 801558e:	42ac      	cmp	r4, r5
 8015590:	6803      	ldr	r3, [r0, #0]
 8015592:	d20e      	bcs.n	80155b2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8015594:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8015598:	4632      	mov	r2, r6
 801559a:	4643      	mov	r3, r8
 801559c:	4621      	mov	r1, r4
 801559e:	47d0      	blx	sl
 80155a0:	f8b9 3000 	ldrh.w	r3, [r9]
 80155a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155a8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80155ac:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80155b0:	e7ec      	b.n	801558c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80155b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80155b4:	4798      	blx	r3
 80155b6:	e7bc      	b.n	8015532 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80155b8:	20014fbc 	.word	0x20014fbc
 80155bc:	20014fbe 	.word	0x20014fbe
 80155c0:	20014fc0 	.word	0x20014fc0
 80155c4:	20014fc4 	.word	0x20014fc4

080155c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80155c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155cc:	b08b      	sub	sp, #44	; 0x2c
 80155ce:	460f      	mov	r7, r1
 80155d0:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80155d4:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80155d8:	4616      	mov	r6, r2
 80155da:	f1bb 0f00 	cmp.w	fp, #0
 80155de:	d04a      	beq.n	8015676 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80155e0:	6810      	ldr	r0, [r2, #0]
 80155e2:	6851      	ldr	r1, [r2, #4]
 80155e4:	ad06      	add	r5, sp, #24
 80155e6:	c503      	stmia	r5!, {r0, r1}
 80155e8:	6818      	ldr	r0, [r3, #0]
 80155ea:	6859      	ldr	r1, [r3, #4]
 80155ec:	ad08      	add	r5, sp, #32
 80155ee:	c503      	stmia	r5!, {r0, r1}
 80155f0:	a806      	add	r0, sp, #24
 80155f2:	f7fa f85d 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80155f6:	4631      	mov	r1, r6
 80155f8:	a808      	add	r0, sp, #32
 80155fa:	f7fa f89d 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80155fe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015602:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015606:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801560a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801560e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8015612:	fb16 2103 	smlabb	r1, r6, r3, r2
 8015616:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801561a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801561e:	4f5f      	ldr	r7, [pc, #380]	; (801579c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015620:	440a      	add	r2, r1
 8015622:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015626:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801562a:	6838      	ldr	r0, [r7, #0]
 801562c:	4413      	add	r3, r2
 801562e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015632:	6803      	ldr	r3, [r0, #0]
 8015634:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015636:	4798      	blx	r3
 8015638:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801563c:	46b9      	mov	r9, r7
 801563e:	d11d      	bne.n	801567c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8015640:	b9fc      	cbnz	r4, 8015682 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015642:	f010 0f01 	tst.w	r0, #1
 8015646:	d01c      	beq.n	8015682 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8015648:	f8d9 0000 	ldr.w	r0, [r9]
 801564c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8015650:	6801      	ldr	r1, [r0, #0]
 8015652:	f8cd b00c 	str.w	fp, [sp, #12]
 8015656:	2700      	movs	r7, #0
 8015658:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801565c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8015660:	9402      	str	r4, [sp, #8]
 8015662:	b2ad      	uxth	r5, r5
 8015664:	fa1f f488 	uxth.w	r4, r8
 8015668:	9501      	str	r5, [sp, #4]
 801566a:	9400      	str	r4, [sp, #0]
 801566c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801566e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015672:	4631      	mov	r1, r6
 8015674:	47a0      	blx	r4
 8015676:	b00b      	add	sp, #44	; 0x2c
 8015678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801567c:	f010 0f04 	tst.w	r0, #4
 8015680:	e7e1      	b.n	8015646 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8015682:	f8d9 0000 	ldr.w	r0, [r9]
 8015686:	6803      	ldr	r3, [r0, #0]
 8015688:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801568a:	4798      	blx	r3
 801568c:	4b44      	ldr	r3, [pc, #272]	; (80157a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801568e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8015692:	881a      	ldrh	r2, [r3, #0]
 8015694:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015698:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801569c:	fb02 1404 	mla	r4, r2, r4, r1
 80156a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80156a4:	469a      	mov	sl, r3
 80156a6:	fb05 f502 	mul.w	r5, r5, r2
 80156aa:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80156ae:	d059      	beq.n	8015764 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80156b0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80156b4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80156b8:	fa1f f28b 	uxth.w	r2, fp
 80156bc:	fa1f f989 	uxth.w	r9, r9
 80156c0:	469e      	mov	lr, r3
 80156c2:	42ac      	cmp	r4, r5
 80156c4:	d264      	bcs.n	8015790 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80156c6:	eb04 0a07 	add.w	sl, r4, r7
 80156ca:	4554      	cmp	r4, sl
 80156cc:	d23d      	bcs.n	801574a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80156ce:	8821      	ldrh	r1, [r4, #0]
 80156d0:	f836 3b02 	ldrh.w	r3, [r6], #2
 80156d4:	1208      	asrs	r0, r1, #8
 80156d6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80156da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80156de:	fb10 f009 	smulbb	r0, r0, r9
 80156e2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80156e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80156ea:	00c9      	lsls	r1, r1, #3
 80156ec:	fb0c 0c02 	mla	ip, ip, r2, r0
 80156f0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80156f4:	10d8      	asrs	r0, r3, #3
 80156f6:	b2c9      	uxtb	r1, r1
 80156f8:	00db      	lsls	r3, r3, #3
 80156fa:	fa1f fc8c 	uxth.w	ip, ip
 80156fe:	fb1b fb09 	smulbb	fp, fp, r9
 8015702:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015706:	b2db      	uxtb	r3, r3
 8015708:	fb11 f109 	smulbb	r1, r1, r9
 801570c:	fb00 b002 	mla	r0, r0, r2, fp
 8015710:	fb03 1302 	mla	r3, r3, r2, r1
 8015714:	f10c 0b01 	add.w	fp, ip, #1
 8015718:	b29b      	uxth	r3, r3
 801571a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801571e:	b280      	uxth	r0, r0
 8015720:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8015724:	f103 0c01 	add.w	ip, r3, #1
 8015728:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801572c:	1c43      	adds	r3, r0, #1
 801572e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8015732:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015736:	0940      	lsrs	r0, r0, #5
 8015738:	ea4c 0c0b 	orr.w	ip, ip, fp
 801573c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015740:	ea4c 0c00 	orr.w	ip, ip, r0
 8015744:	f824 cb02 	strh.w	ip, [r4], #2
 8015748:	e7bf      	b.n	80156ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801574a:	f8be 3000 	ldrh.w	r3, [lr]
 801574e:	eba3 0308 	sub.w	r3, r3, r8
 8015752:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015756:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801575a:	eba3 0308 	sub.w	r3, r3, r8
 801575e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8015762:	e7ae      	b.n	80156c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8015764:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015768:	f8d9 0000 	ldr.w	r0, [r9]
 801576c:	42ac      	cmp	r4, r5
 801576e:	6803      	ldr	r3, [r0, #0]
 8015770:	d20e      	bcs.n	8015790 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015772:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8015776:	4632      	mov	r2, r6
 8015778:	463b      	mov	r3, r7
 801577a:	4621      	mov	r1, r4
 801577c:	47c0      	blx	r8
 801577e:	f8ba 3000 	ldrh.w	r3, [sl]
 8015782:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015786:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801578a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801578e:	e7eb      	b.n	8015768 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8015790:	4b02      	ldr	r3, [pc, #8]	; (801579c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8015792:	6818      	ldr	r0, [r3, #0]
 8015794:	6803      	ldr	r3, [r0, #0]
 8015796:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015798:	4798      	blx	r3
 801579a:	e76c      	b.n	8015676 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801579c:	20014fc4 	.word	0x20014fc4
 80157a0:	20014fbe 	.word	0x20014fbe

080157a4 <_ZN8touchgfx8LCD16bppD0Ev>:
 80157a4:	b510      	push	{r4, lr}
 80157a6:	2184      	movs	r1, #132	; 0x84
 80157a8:	4604      	mov	r4, r0
 80157aa:	f00a fe3d 	bl	8020428 <_ZdlPvj>
 80157ae:	4620      	mov	r0, r4
 80157b0:	bd10      	pop	{r4, pc}

080157b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80157b2:	b510      	push	{r4, lr}
 80157b4:	2104      	movs	r1, #4
 80157b6:	4604      	mov	r4, r0
 80157b8:	f00a fe36 	bl	8020428 <_ZdlPvj>
 80157bc:	4620      	mov	r0, r4
 80157be:	bd10      	pop	{r4, pc}

080157c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80157c0:	b510      	push	{r4, lr}
 80157c2:	2104      	movs	r1, #4
 80157c4:	4604      	mov	r4, r0
 80157c6:	f00a fe2f 	bl	8020428 <_ZdlPvj>
 80157ca:	4620      	mov	r0, r4
 80157cc:	bd10      	pop	{r4, pc}

080157ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80157ce:	b510      	push	{r4, lr}
 80157d0:	f640 0144 	movw	r1, #2116	; 0x844
 80157d4:	4604      	mov	r4, r0
 80157d6:	f00a fe27 	bl	8020428 <_ZdlPvj>
 80157da:	4620      	mov	r0, r4
 80157dc:	bd10      	pop	{r4, pc}

080157de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80157de:	b510      	push	{r4, lr}
 80157e0:	2104      	movs	r1, #4
 80157e2:	4604      	mov	r4, r0
 80157e4:	f00a fe20 	bl	8020428 <_ZdlPvj>
 80157e8:	4620      	mov	r0, r4
 80157ea:	bd10      	pop	{r4, pc}

080157ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80157ec:	b510      	push	{r4, lr}
 80157ee:	2104      	movs	r1, #4
 80157f0:	4604      	mov	r4, r0
 80157f2:	f00a fe19 	bl	8020428 <_ZdlPvj>
 80157f6:	4620      	mov	r0, r4
 80157f8:	bd10      	pop	{r4, pc}

080157fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80157fa:	b510      	push	{r4, lr}
 80157fc:	2104      	movs	r1, #4
 80157fe:	4604      	mov	r4, r0
 8015800:	f00a fe12 	bl	8020428 <_ZdlPvj>
 8015804:	4620      	mov	r0, r4
 8015806:	bd10      	pop	{r4, pc}

08015808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015808:	b510      	push	{r4, lr}
 801580a:	2104      	movs	r1, #4
 801580c:	4604      	mov	r4, r0
 801580e:	f00a fe0b 	bl	8020428 <_ZdlPvj>
 8015812:	4620      	mov	r0, r4
 8015814:	bd10      	pop	{r4, pc}

08015816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015816:	b510      	push	{r4, lr}
 8015818:	2104      	movs	r1, #4
 801581a:	4604      	mov	r4, r0
 801581c:	f00a fe04 	bl	8020428 <_ZdlPvj>
 8015820:	4620      	mov	r0, r4
 8015822:	bd10      	pop	{r4, pc}

08015824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015824:	b510      	push	{r4, lr}
 8015826:	2104      	movs	r1, #4
 8015828:	4604      	mov	r4, r0
 801582a:	f00a fdfd 	bl	8020428 <_ZdlPvj>
 801582e:	4620      	mov	r0, r4
 8015830:	bd10      	pop	{r4, pc}

08015832 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015832:	b510      	push	{r4, lr}
 8015834:	2104      	movs	r1, #4
 8015836:	4604      	mov	r4, r0
 8015838:	f00a fdf6 	bl	8020428 <_ZdlPvj>
 801583c:	4620      	mov	r0, r4
 801583e:	bd10      	pop	{r4, pc}

08015840 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8015840:	b510      	push	{r4, lr}
 8015842:	2104      	movs	r1, #4
 8015844:	4604      	mov	r4, r0
 8015846:	f00a fdef 	bl	8020428 <_ZdlPvj>
 801584a:	4620      	mov	r0, r4
 801584c:	bd10      	pop	{r4, pc}

0801584e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801584e:	b510      	push	{r4, lr}
 8015850:	2104      	movs	r1, #4
 8015852:	4604      	mov	r4, r0
 8015854:	f00a fde8 	bl	8020428 <_ZdlPvj>
 8015858:	4620      	mov	r0, r4
 801585a:	bd10      	pop	{r4, pc}

0801585c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801585c:	b510      	push	{r4, lr}
 801585e:	2104      	movs	r1, #4
 8015860:	4604      	mov	r4, r0
 8015862:	f00a fde1 	bl	8020428 <_ZdlPvj>
 8015866:	4620      	mov	r0, r4
 8015868:	bd10      	pop	{r4, pc}

0801586a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801586a:	b510      	push	{r4, lr}
 801586c:	2104      	movs	r1, #4
 801586e:	4604      	mov	r4, r0
 8015870:	f00a fdda 	bl	8020428 <_ZdlPvj>
 8015874:	4620      	mov	r0, r4
 8015876:	bd10      	pop	{r4, pc}

08015878 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015878:	b510      	push	{r4, lr}
 801587a:	2104      	movs	r1, #4
 801587c:	4604      	mov	r4, r0
 801587e:	f00a fdd3 	bl	8020428 <_ZdlPvj>
 8015882:	4620      	mov	r0, r4
 8015884:	bd10      	pop	{r4, pc}

08015886 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015886:	b510      	push	{r4, lr}
 8015888:	2104      	movs	r1, #4
 801588a:	4604      	mov	r4, r0
 801588c:	f00a fdcc 	bl	8020428 <_ZdlPvj>
 8015890:	4620      	mov	r0, r4
 8015892:	bd10      	pop	{r4, pc}

08015894 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8015894:	b510      	push	{r4, lr}
 8015896:	2104      	movs	r1, #4
 8015898:	4604      	mov	r4, r0
 801589a:	f00a fdc5 	bl	8020428 <_ZdlPvj>
 801589e:	4620      	mov	r0, r4
 80158a0:	bd10      	pop	{r4, pc}

080158a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80158a2:	b510      	push	{r4, lr}
 80158a4:	2104      	movs	r1, #4
 80158a6:	4604      	mov	r4, r0
 80158a8:	f00a fdbe 	bl	8020428 <_ZdlPvj>
 80158ac:	4620      	mov	r0, r4
 80158ae:	bd10      	pop	{r4, pc}

080158b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80158b0:	b510      	push	{r4, lr}
 80158b2:	2104      	movs	r1, #4
 80158b4:	4604      	mov	r4, r0
 80158b6:	f00a fdb7 	bl	8020428 <_ZdlPvj>
 80158ba:	4620      	mov	r0, r4
 80158bc:	bd10      	pop	{r4, pc}

080158be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80158be:	b510      	push	{r4, lr}
 80158c0:	2104      	movs	r1, #4
 80158c2:	4604      	mov	r4, r0
 80158c4:	f00a fdb0 	bl	8020428 <_ZdlPvj>
 80158c8:	4620      	mov	r0, r4
 80158ca:	bd10      	pop	{r4, pc}

080158cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80158cc:	b510      	push	{r4, lr}
 80158ce:	2104      	movs	r1, #4
 80158d0:	4604      	mov	r4, r0
 80158d2:	f00a fda9 	bl	8020428 <_ZdlPvj>
 80158d6:	4620      	mov	r0, r4
 80158d8:	bd10      	pop	{r4, pc}

080158da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80158da:	b510      	push	{r4, lr}
 80158dc:	2104      	movs	r1, #4
 80158de:	4604      	mov	r4, r0
 80158e0:	f00a fda2 	bl	8020428 <_ZdlPvj>
 80158e4:	4620      	mov	r0, r4
 80158e6:	bd10      	pop	{r4, pc}

080158e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80158e8:	b510      	push	{r4, lr}
 80158ea:	2104      	movs	r1, #4
 80158ec:	4604      	mov	r4, r0
 80158ee:	f00a fd9b 	bl	8020428 <_ZdlPvj>
 80158f2:	4620      	mov	r0, r4
 80158f4:	bd10      	pop	{r4, pc}

080158f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80158f6:	b510      	push	{r4, lr}
 80158f8:	2104      	movs	r1, #4
 80158fa:	4604      	mov	r4, r0
 80158fc:	f00a fd94 	bl	8020428 <_ZdlPvj>
 8015900:	4620      	mov	r0, r4
 8015902:	bd10      	pop	{r4, pc}

08015904 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015904:	b510      	push	{r4, lr}
 8015906:	2104      	movs	r1, #4
 8015908:	4604      	mov	r4, r0
 801590a:	f00a fd8d 	bl	8020428 <_ZdlPvj>
 801590e:	4620      	mov	r0, r4
 8015910:	bd10      	pop	{r4, pc}

08015912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015912:	b510      	push	{r4, lr}
 8015914:	2104      	movs	r1, #4
 8015916:	4604      	mov	r4, r0
 8015918:	f00a fd86 	bl	8020428 <_ZdlPvj>
 801591c:	4620      	mov	r0, r4
 801591e:	bd10      	pop	{r4, pc}

08015920 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015920:	b510      	push	{r4, lr}
 8015922:	2104      	movs	r1, #4
 8015924:	4604      	mov	r4, r0
 8015926:	f00a fd7f 	bl	8020428 <_ZdlPvj>
 801592a:	4620      	mov	r0, r4
 801592c:	bd10      	pop	{r4, pc}

0801592e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801592e:	b510      	push	{r4, lr}
 8015930:	2104      	movs	r1, #4
 8015932:	4604      	mov	r4, r0
 8015934:	f00a fd78 	bl	8020428 <_ZdlPvj>
 8015938:	4620      	mov	r0, r4
 801593a:	bd10      	pop	{r4, pc}

0801593c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801593c:	b510      	push	{r4, lr}
 801593e:	2104      	movs	r1, #4
 8015940:	4604      	mov	r4, r0
 8015942:	f00a fd71 	bl	8020428 <_ZdlPvj>
 8015946:	4620      	mov	r0, r4
 8015948:	bd10      	pop	{r4, pc}

0801594a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801594a:	b510      	push	{r4, lr}
 801594c:	2104      	movs	r1, #4
 801594e:	4604      	mov	r4, r0
 8015950:	f00a fd6a 	bl	8020428 <_ZdlPvj>
 8015954:	4620      	mov	r0, r4
 8015956:	bd10      	pop	{r4, pc}

08015958 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8015958:	b510      	push	{r4, lr}
 801595a:	2104      	movs	r1, #4
 801595c:	4604      	mov	r4, r0
 801595e:	f00a fd63 	bl	8020428 <_ZdlPvj>
 8015962:	4620      	mov	r0, r4
 8015964:	bd10      	pop	{r4, pc}
	...

08015968 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801596c:	b08f      	sub	sp, #60	; 0x3c
 801596e:	461c      	mov	r4, r3
 8015970:	9205      	str	r2, [sp, #20]
 8015972:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015976:	9100      	str	r1, [sp, #0]
 8015978:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801597a:	9201      	str	r2, [sp, #4]
 801597c:	2a00      	cmp	r2, #0
 801597e:	f000 8115 	beq.w	8015bac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8015982:	6820      	ldr	r0, [r4, #0]
 8015984:	6861      	ldr	r1, [r4, #4]
 8015986:	aa0a      	add	r2, sp, #40	; 0x28
 8015988:	c203      	stmia	r2!, {r0, r1}
 801598a:	6818      	ldr	r0, [r3, #0]
 801598c:	6859      	ldr	r1, [r3, #4]
 801598e:	aa0c      	add	r2, sp, #48	; 0x30
 8015990:	c203      	stmia	r2!, {r0, r1}
 8015992:	a80a      	add	r0, sp, #40	; 0x28
 8015994:	f7f9 fe8c 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015998:	4621      	mov	r1, r4
 801599a:	a80c      	add	r0, sp, #48	; 0x30
 801599c:	f7f9 fecc 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80159a0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80159a4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 80159a8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 80159ac:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80159b0:	bfde      	ittt	le
 80159b2:	b2b3      	uxthle	r3, r6
 80159b4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 80159b8:	fb92 f3f3 	sdivle	r3, r2, r3
 80159bc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80159c0:	bfc8      	it	gt
 80159c2:	2301      	movgt	r3, #1
 80159c4:	fb92 f1f3 	sdiv	r1, r2, r3
 80159c8:	fa1f fc81 	uxth.w	ip, r1
 80159cc:	fb0c 2413 	mls	r4, ip, r3, r2
 80159d0:	fb14 f406 	smulbb	r4, r4, r6
 80159d4:	441d      	add	r5, r3
 80159d6:	4404      	add	r4, r0
 80159d8:	4661      	mov	r1, ip
 80159da:	3d01      	subs	r5, #1
 80159dc:	b2a4      	uxth	r4, r4
 80159de:	fb95 f5f3 	sdiv	r5, r5, r3
 80159e2:	b131      	cbz	r1, 80159f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 80159e4:	9b05      	ldr	r3, [sp, #20]
 80159e6:	9900      	ldr	r1, [sp, #0]
 80159e8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80159ec:	ba1b      	rev	r3, r3
 80159ee:	4419      	add	r1, r3
 80159f0:	9100      	str	r1, [sp, #0]
 80159f2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80159f6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 80159fa:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80159fe:	4418      	add	r0, r3
 8015a00:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8015a04:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8015a08:	441a      	add	r2, r3
 8015a0a:	4b6a      	ldr	r3, [pc, #424]	; (8015bb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015a0c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8015a10:	6818      	ldr	r0, [r3, #0]
 8015a12:	6803      	ldr	r3, [r0, #0]
 8015a14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015a16:	4798      	blx	r3
 8015a18:	4967      	ldr	r1, [pc, #412]	; (8015bb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015a1a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8015a1e:	880b      	ldrh	r3, [r1, #0]
 8015a20:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8015a24:	9109      	str	r1, [sp, #36]	; 0x24
 8015a26:	fb03 c202 	mla	r2, r3, r2, ip
 8015a2a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015a2e:	4373      	muls	r3, r6
 8015a30:	b2ad      	uxth	r5, r5
 8015a32:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015a36:	00ad      	lsls	r5, r5, #2
 8015a38:	9306      	str	r3, [sp, #24]
 8015a3a:	1d2b      	adds	r3, r5, #4
 8015a3c:	9307      	str	r3, [sp, #28]
 8015a3e:	9b01      	ldr	r3, [sp, #4]
 8015a40:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015a44:	9103      	str	r1, [sp, #12]
 8015a46:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8015a4a:	2c00      	cmp	r4, #0
 8015a4c:	bf0c      	ite	eq
 8015a4e:	46c6      	moveq	lr, r8
 8015a50:	f04f 0e00 	movne.w	lr, #0
 8015a54:	2300      	movs	r3, #0
 8015a56:	b292      	uxth	r2, r2
 8015a58:	fa1f fe8e 	uxth.w	lr, lr
 8015a5c:	9302      	str	r3, [sp, #8]
 8015a5e:	9204      	str	r2, [sp, #16]
 8015a60:	9a06      	ldr	r2, [sp, #24]
 8015a62:	4282      	cmp	r2, r0
 8015a64:	f240 809d 	bls.w	8015ba2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8015a68:	b963      	cbnz	r3, 8015a84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015a6a:	9b00      	ldr	r3, [sp, #0]
 8015a6c:	781a      	ldrb	r2, [r3, #0]
 8015a6e:	0993      	lsrs	r3, r2, #6
 8015a70:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8015a74:	9202      	str	r2, [sp, #8]
 8015a76:	1e5a      	subs	r2, r3, #1
 8015a78:	2a02      	cmp	r2, #2
 8015a7a:	d815      	bhi.n	8015aa8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8015a7c:	9a00      	ldr	r2, [sp, #0]
 8015a7e:	3201      	adds	r2, #1
 8015a80:	9200      	str	r2, [sp, #0]
 8015a82:	b29b      	uxth	r3, r3
 8015a84:	b1b4      	cbz	r4, 8015ab4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8015a86:	429c      	cmp	r4, r3
 8015a88:	bf95      	itete	ls
 8015a8a:	1b1c      	subls	r4, r3, r4
 8015a8c:	1ae4      	subhi	r4, r4, r3
 8015a8e:	fa1f fa84 	uxthls.w	sl, r4
 8015a92:	b2a4      	uxthhi	r4, r4
 8015a94:	bf87      	ittee	hi
 8015a96:	4671      	movhi	r1, lr
 8015a98:	f04f 0a00 	movhi.w	sl, #0
 8015a9c:	fa1f f188 	uxthls.w	r1, r8
 8015aa0:	2400      	movls	r4, #0
 8015aa2:	4653      	mov	r3, sl
 8015aa4:	468e      	mov	lr, r1
 8015aa6:	e7db      	b.n	8015a60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8015aa8:	9a00      	ldr	r2, [sp, #0]
 8015aaa:	9b00      	ldr	r3, [sp, #0]
 8015aac:	3202      	adds	r2, #2
 8015aae:	785b      	ldrb	r3, [r3, #1]
 8015ab0:	9200      	str	r2, [sp, #0]
 8015ab2:	e7e7      	b.n	8015a84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8015ab4:	2202      	movs	r2, #2
 8015ab6:	4615      	mov	r5, r2
 8015ab8:	9907      	ldr	r1, [sp, #28]
 8015aba:	9a02      	ldr	r2, [sp, #8]
 8015abc:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015ac0:	9905      	ldr	r1, [sp, #20]
 8015ac2:	4573      	cmp	r3, lr
 8015ac4:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015ac8:	9a01      	ldr	r2, [sp, #4]
 8015aca:	bf2b      	itete	cs
 8015acc:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015ad0:	ebae 0103 	subcc.w	r1, lr, r3
 8015ad4:	46f1      	movcs	r9, lr
 8015ad6:	4699      	movcc	r9, r3
 8015ad8:	bf27      	ittee	cs
 8015ada:	fa1f fa8a 	uxthcs.w	sl, sl
 8015ade:	4621      	movcs	r1, r4
 8015ae0:	b289      	uxthcc	r1, r1
 8015ae2:	46a2      	movcc	sl, r4
 8015ae4:	2aff      	cmp	r2, #255	; 0xff
 8015ae6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015aea:	d105      	bne.n	8015af8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8015aec:	4481      	add	r9, r0
 8015aee:	4581      	cmp	r9, r0
 8015af0:	d045      	beq.n	8015b7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8015af2:	f820 cb02 	strh.w	ip, [r0], #2
 8015af6:	e7fa      	b.n	8015aee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8015af8:	9d03      	ldr	r5, [sp, #12]
 8015afa:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015afe:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015b02:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015b06:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015b0a:	436a      	muls	r2, r5
 8015b0c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015b10:	fa5f fc8c 	uxtb.w	ip, ip
 8015b14:	9208      	str	r2, [sp, #32]
 8015b16:	fb0b fb05 	mul.w	fp, fp, r5
 8015b1a:	fb0c fc05 	mul.w	ip, ip, r5
 8015b1e:	4481      	add	r9, r0
 8015b20:	4581      	cmp	r9, r0
 8015b22:	d02c      	beq.n	8015b7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8015b24:	8802      	ldrh	r2, [r0, #0]
 8015b26:	9d04      	ldr	r5, [sp, #16]
 8015b28:	9f04      	ldr	r7, [sp, #16]
 8015b2a:	1216      	asrs	r6, r2, #8
 8015b2c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015b30:	fb16 f605 	smulbb	r6, r6, r5
 8015b34:	9d08      	ldr	r5, [sp, #32]
 8015b36:	442e      	add	r6, r5
 8015b38:	10d5      	asrs	r5, r2, #3
 8015b3a:	00d2      	lsls	r2, r2, #3
 8015b3c:	b2d2      	uxtb	r2, r2
 8015b3e:	fb12 f207 	smulbb	r2, r2, r7
 8015b42:	b2b6      	uxth	r6, r6
 8015b44:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015b48:	4462      	add	r2, ip
 8015b4a:	fb15 f507 	smulbb	r5, r5, r7
 8015b4e:	b292      	uxth	r2, r2
 8015b50:	1c77      	adds	r7, r6, #1
 8015b52:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8015b56:	1c57      	adds	r7, r2, #1
 8015b58:	445d      	add	r5, fp
 8015b5a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8015b5e:	b2ad      	uxth	r5, r5
 8015b60:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015b64:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015b68:	4316      	orrs	r6, r2
 8015b6a:	1c6a      	adds	r2, r5, #1
 8015b6c:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015b70:	096d      	lsrs	r5, r5, #5
 8015b72:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015b76:	432e      	orrs	r6, r5
 8015b78:	f820 6b02 	strh.w	r6, [r0], #2
 8015b7c:	e7d0      	b.n	8015b20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8015b7e:	4573      	cmp	r3, lr
 8015b80:	d38f      	bcc.n	8015aa2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8015b82:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8015b86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015b88:	fa1f f188 	uxth.w	r1, r8
 8015b8c:	1a64      	subs	r4, r4, r1
 8015b8e:	881b      	ldrh	r3, [r3, #0]
 8015b90:	b2a4      	uxth	r4, r4
 8015b92:	2c00      	cmp	r4, #0
 8015b94:	eba3 0308 	sub.w	r3, r3, r8
 8015b98:	bf18      	it	ne
 8015b9a:	2100      	movne	r1, #0
 8015b9c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015ba0:	e77f      	b.n	8015aa2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8015ba2:	4b04      	ldr	r3, [pc, #16]	; (8015bb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015ba4:	6818      	ldr	r0, [r3, #0]
 8015ba6:	6803      	ldr	r3, [r0, #0]
 8015ba8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015baa:	4798      	blx	r3
 8015bac:	b00f      	add	sp, #60	; 0x3c
 8015bae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bb2:	bf00      	nop
 8015bb4:	20014fc4 	.word	0x20014fc4
 8015bb8:	20014fbe 	.word	0x20014fbe

08015bbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bc0:	b09f      	sub	sp, #124	; 0x7c
 8015bc2:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8015bc6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8015bca:	9209      	str	r2, [sp, #36]	; 0x24
 8015bcc:	461d      	mov	r5, r3
 8015bce:	4604      	mov	r4, r0
 8015bd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015bd2:	2a00      	cmp	r2, #0
 8015bd4:	f000 81eb 	beq.w	8015fae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8015bd8:	6828      	ldr	r0, [r5, #0]
 8015bda:	6869      	ldr	r1, [r5, #4]
 8015bdc:	aa1a      	add	r2, sp, #104	; 0x68
 8015bde:	c203      	stmia	r2!, {r0, r1}
 8015be0:	6818      	ldr	r0, [r3, #0]
 8015be2:	6859      	ldr	r1, [r3, #4]
 8015be4:	aa1c      	add	r2, sp, #112	; 0x70
 8015be6:	c203      	stmia	r2!, {r0, r1}
 8015be8:	a81a      	add	r0, sp, #104	; 0x68
 8015bea:	f7f9 fd61 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015bee:	4629      	mov	r1, r5
 8015bf0:	a81c      	add	r0, sp, #112	; 0x70
 8015bf2:	f7f9 fda1 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015bf6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8015bfa:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8015bfe:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 8015c02:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8015c06:	bfd7      	itett	le
 8015c08:	b29a      	uxthle	r2, r3
 8015c0a:	2201      	movgt	r2, #1
 8015c0c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8015c10:	fb91 f2f2 	sdivle	r2, r1, r2
 8015c14:	9202      	str	r2, [sp, #8]
 8015c16:	9802      	ldr	r0, [sp, #8]
 8015c18:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8015c1c:	fb92 f0f0 	sdiv	r0, r2, r0
 8015c20:	b280      	uxth	r0, r0
 8015c22:	9010      	str	r0, [sp, #64]	; 0x40
 8015c24:	9902      	ldr	r1, [sp, #8]
 8015c26:	9802      	ldr	r0, [sp, #8]
 8015c28:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8015c2a:	4488      	add	r8, r1
 8015c2c:	fb05 2510 	mls	r5, r5, r0, r2
 8015c30:	fb15 f503 	smulbb	r5, r5, r3
 8015c34:	f108 38ff 	add.w	r8, r8, #4294967295
 8015c38:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8015c3c:	fb98 f8f1 	sdiv	r8, r8, r1
 8015c40:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8015c44:	440d      	add	r5, r1
 8015c46:	4419      	add	r1, r3
 8015c48:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8015c4c:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8015c50:	441a      	add	r2, r3
 8015c52:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8015c56:	9304      	str	r3, [sp, #16]
 8015c58:	4b95      	ldr	r3, [pc, #596]	; (8015eb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8015c5a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8015c5e:	6818      	ldr	r0, [r3, #0]
 8015c60:	6803      	ldr	r3, [r0, #0]
 8015c62:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015c64:	4798      	blx	r3
 8015c66:	4b93      	ldr	r3, [pc, #588]	; (8015eb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8015c68:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8015c6c:	881a      	ldrh	r2, [r3, #0]
 8015c6e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8015c72:	9318      	str	r3, [sp, #96]	; 0x60
 8015c74:	fb02 7101 	mla	r1, r2, r1, r7
 8015c78:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015c7c:	4356      	muls	r6, r2
 8015c7e:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8015c82:	f108 0801 	add.w	r8, r8, #1
 8015c86:	920a      	str	r2, [sp, #40]	; 0x28
 8015c88:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015c8a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8015c8e:	930f      	str	r3, [sp, #60]	; 0x3c
 8015c90:	fa1f f888 	uxth.w	r8, r8
 8015c94:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8015c98:	f108 0204 	add.w	r2, r8, #4
 8015c9c:	9211      	str	r2, [sp, #68]	; 0x44
 8015c9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015ca0:	4b85      	ldr	r3, [pc, #532]	; (8015eb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8015ca2:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 8015ca6:	b2ad      	uxth	r5, r5
 8015ca8:	9215      	str	r2, [sp, #84]	; 0x54
 8015caa:	2d00      	cmp	r5, #0
 8015cac:	9a04      	ldr	r2, [sp, #16]
 8015cae:	f04f 0100 	mov.w	r1, #0
 8015cb2:	bf18      	it	ne
 8015cb4:	2200      	movne	r2, #0
 8015cb6:	1b1b      	subs	r3, r3, r4
 8015cb8:	b292      	uxth	r2, r2
 8015cba:	910d      	str	r1, [sp, #52]	; 0x34
 8015cbc:	9319      	str	r3, [sp, #100]	; 0x64
 8015cbe:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015cc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015cc2:	fa11 f383 	uxtah	r3, r1, r3
 8015cc6:	9914      	ldr	r1, [sp, #80]	; 0x50
 8015cc8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015ccc:	3304      	adds	r3, #4
 8015cce:	9306      	str	r3, [sp, #24]
 8015cd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015cd2:	4283      	cmp	r3, r0
 8015cd4:	f240 8166 	bls.w	8015fa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8015cd8:	9902      	ldr	r1, [sp, #8]
 8015cda:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8015cde:	fbb5 f3f3 	udiv	r3, r5, r3
 8015ce2:	1acb      	subs	r3, r1, r3
 8015ce4:	b29b      	uxth	r3, r3
 8015ce6:	9316      	str	r3, [sp, #88]	; 0x58
 8015ce8:	9b06      	ldr	r3, [sp, #24]
 8015cea:	9e06      	ldr	r6, [sp, #24]
 8015cec:	7859      	ldrb	r1, [r3, #1]
 8015cee:	789b      	ldrb	r3, [r3, #2]
 8015cf0:	7836      	ldrb	r6, [r6, #0]
 8015cf2:	9612      	str	r6, [sp, #72]	; 0x48
 8015cf4:	021b      	lsls	r3, r3, #8
 8015cf6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8015cfa:	9906      	ldr	r1, [sp, #24]
 8015cfc:	78c9      	ldrb	r1, [r1, #3]
 8015cfe:	430b      	orrs	r3, r1
 8015d00:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8015d02:	3601      	adds	r6, #1
 8015d04:	4419      	add	r1, r3
 8015d06:	9605      	str	r6, [sp, #20]
 8015d08:	1c4e      	adds	r6, r1, #1
 8015d0a:	9603      	str	r6, [sp, #12]
 8015d0c:	7849      	ldrb	r1, [r1, #1]
 8015d0e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015d10:	0209      	lsls	r1, r1, #8
 8015d12:	5cf3      	ldrb	r3, [r6, r3]
 8015d14:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 8015d18:	4319      	orrs	r1, r3
 8015d1a:	b28b      	uxth	r3, r1
 8015d1c:	930c      	str	r3, [sp, #48]	; 0x30
 8015d1e:	2300      	movs	r3, #0
 8015d20:	f04f 0a01 	mov.w	sl, #1
 8015d24:	9307      	str	r3, [sp, #28]
 8015d26:	469c      	mov	ip, r3
 8015d28:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8015d2c:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8015d30:	46d3      	mov	fp, sl
 8015d32:	4657      	mov	r7, sl
 8015d34:	930e      	str	r3, [sp, #56]	; 0x38
 8015d36:	2d00      	cmp	r5, #0
 8015d38:	d07e      	beq.n	8015e38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8015d3a:	42af      	cmp	r7, r5
 8015d3c:	d26e      	bcs.n	8015e1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8015d3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015d40:	9201      	str	r2, [sp, #4]
 8015d42:	1bed      	subs	r5, r5, r7
 8015d44:	4283      	cmp	r3, r0
 8015d46:	b2ad      	uxth	r5, r5
 8015d48:	d802      	bhi.n	8015d50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8015d4a:	e073      	b.n	8015e34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8015d4c:	2b00      	cmp	r3, #0
 8015d4e:	d15f      	bne.n	8015e10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8015d50:	9b03      	ldr	r3, [sp, #12]
 8015d52:	785b      	ldrb	r3, [r3, #1]
 8015d54:	f1cb 0207 	rsb	r2, fp, #7
 8015d58:	4093      	lsls	r3, r2
 8015d5a:	005b      	lsls	r3, r3, #1
 8015d5c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8015d60:	9b03      	ldr	r3, [sp, #12]
 8015d62:	781b      	ldrb	r3, [r3, #0]
 8015d64:	fa43 f30b 	asr.w	r3, r3, fp
 8015d68:	b2db      	uxtb	r3, r3
 8015d6a:	4313      	orrs	r3, r2
 8015d6c:	f10b 0201 	add.w	r2, fp, #1
 8015d70:	fa5f fb82 	uxtb.w	fp, r2
 8015d74:	9a03      	ldr	r2, [sp, #12]
 8015d76:	f1bb 0f08 	cmp.w	fp, #8
 8015d7a:	bf15      	itete	ne
 8015d7c:	3201      	addne	r2, #1
 8015d7e:	3202      	addeq	r2, #2
 8015d80:	9203      	strne	r2, [sp, #12]
 8015d82:	9203      	streq	r2, [sp, #12]
 8015d84:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015d86:	b29f      	uxth	r7, r3
 8015d88:	bf08      	it	eq
 8015d8a:	f04f 0b00 	moveq.w	fp, #0
 8015d8e:	42ba      	cmp	r2, r7
 8015d90:	d309      	bcc.n	8015da6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8015d92:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8015d96:	2301      	movs	r3, #1
 8015d98:	9a05      	ldr	r2, [sp, #20]
 8015d9a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8015d9e:	d30e      	bcc.n	8015dbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8015da0:	469a      	mov	sl, r3
 8015da2:	2600      	movs	r6, #0
 8015da4:	e035      	b.n	8015e12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8015da6:	9b05      	ldr	r3, [sp, #20]
 8015da8:	429f      	cmp	r7, r3
 8015daa:	d318      	bcc.n	8015dde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8015dac:	eb04 030a 	add.w	r3, r4, sl
 8015db0:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 8015db4:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 8015db8:	f10a 0301 	add.w	r3, sl, #1
 8015dbc:	b29b      	uxth	r3, r3
 8015dbe:	9a05      	ldr	r2, [sp, #20]
 8015dc0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8015dc4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015dc6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8015dca:	7116      	strb	r6, [r2, #4]
 8015dcc:	f10a 0601 	add.w	r6, sl, #1
 8015dd0:	80d1      	strh	r1, [r2, #6]
 8015dd2:	7156      	strb	r6, [r2, #5]
 8015dd4:	9a05      	ldr	r2, [sp, #20]
 8015dd6:	3201      	adds	r2, #1
 8015dd8:	b292      	uxth	r2, r2
 8015dda:	9205      	str	r2, [sp, #20]
 8015ddc:	e7e0      	b.n	8015da0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8015dde:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8015de2:	463a      	mov	r2, r7
 8015de4:	795b      	ldrb	r3, [r3, #5]
 8015de6:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8015dea:	4426      	add	r6, r4
 8015dec:	9919      	ldr	r1, [sp, #100]	; 0x64
 8015dee:	eb01 0c06 	add.w	ip, r1, r6
 8015df2:	f1bc 0f00 	cmp.w	ip, #0
 8015df6:	dd07      	ble.n	8015e08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8015df8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8015dfc:	f892 c004 	ldrb.w	ip, [r2, #4]
 8015e00:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8015e04:	88d2      	ldrh	r2, [r2, #6]
 8015e06:	e7f1      	b.n	8015dec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8015e08:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8015e0c:	b29b      	uxth	r3, r3
 8015e0e:	e7c3      	b.n	8015d98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8015e10:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015e12:	970c      	str	r7, [sp, #48]	; 0x30
 8015e14:	9a01      	ldr	r2, [sp, #4]
 8015e16:	46b4      	mov	ip, r6
 8015e18:	461f      	mov	r7, r3
 8015e1a:	e78c      	b.n	8015d36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8015e1c:	1b7b      	subs	r3, r7, r5
 8015e1e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015e22:	9201      	str	r2, [sp, #4]
 8015e24:	eb0c 0605 	add.w	r6, ip, r5
 8015e28:	b29b      	uxth	r3, r3
 8015e2a:	b2b6      	uxth	r6, r6
 8015e2c:	2500      	movs	r5, #0
 8015e2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015e30:	4282      	cmp	r2, r0
 8015e32:	d88b      	bhi.n	8015d4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8015e34:	9a01      	ldr	r2, [sp, #4]
 8015e36:	e74b      	b.n	8015cd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8015e38:	4297      	cmp	r7, r2
 8015e3a:	d332      	bcc.n	8015ea2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8015e3c:	1abb      	subs	r3, r7, r2
 8015e3e:	b29b      	uxth	r3, r3
 8015e40:	9208      	str	r2, [sp, #32]
 8015e42:	9501      	str	r5, [sp, #4]
 8015e44:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015e46:	29ff      	cmp	r1, #255	; 0xff
 8015e48:	9908      	ldr	r1, [sp, #32]
 8015e4a:	eb0c 0601 	add.w	r6, ip, r1
 8015e4e:	d135      	bne.n	8015ebc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8015e50:	f1a0 0e02 	sub.w	lr, r0, #2
 8015e54:	b2b6      	uxth	r6, r6
 8015e56:	45b4      	cmp	ip, r6
 8015e58:	f040 808c 	bne.w	8015f74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8015e5c:	9908      	ldr	r1, [sp, #32]
 8015e5e:	4297      	cmp	r7, r2
 8015e60:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015e64:	d3e2      	bcc.n	8015e2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8015e66:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015e68:	9904      	ldr	r1, [sp, #16]
 8015e6a:	8812      	ldrh	r2, [r2, #0]
 8015e6c:	1a52      	subs	r2, r2, r1
 8015e6e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015e72:	9a07      	ldr	r2, [sp, #28]
 8015e74:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015e76:	3201      	adds	r2, #1
 8015e78:	428a      	cmp	r2, r1
 8015e7a:	9207      	str	r2, [sp, #28]
 8015e7c:	f040 8087 	bne.w	8015f8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8015e80:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8015e84:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 8015e88:	9b04      	ldr	r3, [sp, #16]
 8015e8a:	1bed      	subs	r5, r5, r7
 8015e8c:	b2ad      	uxth	r5, r5
 8015e8e:	2d00      	cmp	r5, #0
 8015e90:	bf08      	it	eq
 8015e92:	461a      	moveq	r2, r3
 8015e94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015e96:	bf18      	it	ne
 8015e98:	2200      	movne	r2, #0
 8015e9a:	3301      	adds	r3, #1
 8015e9c:	930d      	str	r3, [sp, #52]	; 0x34
 8015e9e:	b292      	uxth	r2, r2
 8015ea0:	e70d      	b.n	8015cbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8015ea2:	1bd1      	subs	r1, r2, r7
 8015ea4:	b28b      	uxth	r3, r1
 8015ea6:	9301      	str	r3, [sp, #4]
 8015ea8:	9708      	str	r7, [sp, #32]
 8015eaa:	462b      	mov	r3, r5
 8015eac:	e7ca      	b.n	8015e44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8015eae:	bf00      	nop
 8015eb0:	20014fc4 	.word	0x20014fc4
 8015eb4:	20014fbe 	.word	0x20014fbe
 8015eb8:	fffff7fb 	.word	0xfffff7fb
 8015ebc:	b2b6      	uxth	r6, r6
 8015ebe:	900b      	str	r0, [sp, #44]	; 0x2c
 8015ec0:	45b4      	cmp	ip, r6
 8015ec2:	d0cb      	beq.n	8015e5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8015ec4:	f10c 0101 	add.w	r1, ip, #1
 8015ec8:	44a4      	add	ip, r4
 8015eca:	9117      	str	r1, [sp, #92]	; 0x5c
 8015ecc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8015ed0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8015ed2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8015ed6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8015ed8:	f8b1 c000 	ldrh.w	ip, [r1]
 8015edc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015ede:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8015ee2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015ee6:	fb1e fe01 	smulbb	lr, lr, r1
 8015eea:	ea4f 2825 	mov.w	r8, r5, asr #8
 8015eee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015ef0:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8015ef4:	fb08 e801 	mla	r8, r8, r1, lr
 8015ef8:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8015efc:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015efe:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015f02:	fb19 f901 	smulbb	r9, r9, r1
 8015f06:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8015f0a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015f0c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8015f10:	fb0e 9e01 	mla	lr, lr, r1, r9
 8015f14:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015f18:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015f1a:	fa5f fc8c 	uxtb.w	ip, ip
 8015f1e:	fb1c fc01 	smulbb	ip, ip, r1
 8015f22:	00ed      	lsls	r5, r5, #3
 8015f24:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015f26:	b2ed      	uxtb	r5, r5
 8015f28:	fb05 c501 	mla	r5, r5, r1, ip
 8015f2c:	fa1f f888 	uxth.w	r8, r8
 8015f30:	fa1f fe8e 	uxth.w	lr, lr
 8015f34:	b2ad      	uxth	r5, r5
 8015f36:	f108 0c01 	add.w	ip, r8, #1
 8015f3a:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8015f3e:	f10e 0901 	add.w	r9, lr, #1
 8015f42:	f105 0c01 	add.w	ip, r5, #1
 8015f46:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8015f4a:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8015f4e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015f52:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8015f56:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015f5a:	ea4c 0808 	orr.w	r8, ip, r8
 8015f5e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8015f60:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 8015f64:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015f68:	ea48 0809 	orr.w	r8, r8, r9
 8015f6c:	f821 8b02 	strh.w	r8, [r1], #2
 8015f70:	910b      	str	r1, [sp, #44]	; 0x2c
 8015f72:	e7a5      	b.n	8015ec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8015f74:	f10c 0801 	add.w	r8, ip, #1
 8015f78:	44a4      	add	ip, r4
 8015f7a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8015f7c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8015f80:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8015f84:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8015f88:	fa1f fc88 	uxth.w	ip, r8
 8015f8c:	e763      	b.n	8015e56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8015f8e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015f92:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8015f96:	1aad      	subs	r5, r5, r2
 8015f98:	b2ad      	uxth	r5, r5
 8015f9a:	2d00      	cmp	r5, #0
 8015f9c:	bf18      	it	ne
 8015f9e:	2200      	movne	r2, #0
 8015fa0:	9201      	str	r2, [sp, #4]
 8015fa2:	e744      	b.n	8015e2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8015fa4:	4b03      	ldr	r3, [pc, #12]	; (8015fb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 8015fa6:	6818      	ldr	r0, [r3, #0]
 8015fa8:	6803      	ldr	r3, [r0, #0]
 8015faa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015fac:	4798      	blx	r3
 8015fae:	b01f      	add	sp, #124	; 0x7c
 8015fb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015fb4:	20014fc4 	.word	0x20014fc4

08015fb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8015fb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fbc:	b08f      	sub	sp, #60	; 0x3c
 8015fbe:	461c      	mov	r4, r3
 8015fc0:	9203      	str	r2, [sp, #12]
 8015fc2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015fc6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015fc8:	9202      	str	r2, [sp, #8]
 8015fca:	460f      	mov	r7, r1
 8015fcc:	2a00      	cmp	r2, #0
 8015fce:	f000 8128 	beq.w	8016222 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8015fd2:	6820      	ldr	r0, [r4, #0]
 8015fd4:	6861      	ldr	r1, [r4, #4]
 8015fd6:	aa0a      	add	r2, sp, #40	; 0x28
 8015fd8:	c203      	stmia	r2!, {r0, r1}
 8015fda:	6818      	ldr	r0, [r3, #0]
 8015fdc:	6859      	ldr	r1, [r3, #4]
 8015fde:	aa0c      	add	r2, sp, #48	; 0x30
 8015fe0:	c203      	stmia	r2!, {r0, r1}
 8015fe2:	a80a      	add	r0, sp, #40	; 0x28
 8015fe4:	f7f9 fb64 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015fe8:	4621      	mov	r1, r4
 8015fea:	a80c      	add	r0, sp, #48	; 0x30
 8015fec:	f7f9 fba4 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015ff0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8015ff4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8015ff8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8015ffc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8016000:	bfde      	ittt	le
 8016002:	b2b3      	uxthle	r3, r6
 8016004:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8016008:	fb92 f3f3 	sdivle	r3, r2, r3
 801600c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8016010:	bfc8      	it	gt
 8016012:	2301      	movgt	r3, #1
 8016014:	fb92 f1f3 	sdiv	r1, r2, r3
 8016018:	fa1f fc81 	uxth.w	ip, r1
 801601c:	fb0c 2413 	mls	r4, ip, r3, r2
 8016020:	fb14 f406 	smulbb	r4, r4, r6
 8016024:	441d      	add	r5, r3
 8016026:	4404      	add	r4, r0
 8016028:	4661      	mov	r1, ip
 801602a:	3d01      	subs	r5, #1
 801602c:	b2a4      	uxth	r4, r4
 801602e:	fb95 f5f3 	sdiv	r5, r5, r3
 8016032:	b121      	cbz	r1, 801603e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8016034:	9b03      	ldr	r3, [sp, #12]
 8016036:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801603a:	ba1b      	rev	r3, r3
 801603c:	441f      	add	r7, r3
 801603e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016042:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8016046:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801604a:	4418      	add	r0, r3
 801604c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8016050:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8016054:	441a      	add	r2, r3
 8016056:	4b74      	ldr	r3, [pc, #464]	; (8016228 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8016058:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801605c:	6818      	ldr	r0, [r3, #0]
 801605e:	6803      	ldr	r3, [r0, #0]
 8016060:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016062:	4798      	blx	r3
 8016064:	4a71      	ldr	r2, [pc, #452]	; (801622c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8016066:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801606a:	8813      	ldrh	r3, [r2, #0]
 801606c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8016070:	9209      	str	r2, [sp, #36]	; 0x24
 8016072:	fb03 c101 	mla	r1, r3, r1, ip
 8016076:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801607a:	4373      	muls	r3, r6
 801607c:	b2ad      	uxth	r5, r5
 801607e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016082:	00ad      	lsls	r5, r5, #2
 8016084:	2c00      	cmp	r4, #0
 8016086:	9304      	str	r3, [sp, #16]
 8016088:	f105 0304 	add.w	r3, r5, #4
 801608c:	9305      	str	r3, [sp, #20]
 801608e:	bf0c      	ite	eq
 8016090:	46c8      	moveq	r8, r9
 8016092:	f04f 0800 	movne.w	r8, #0
 8016096:	2300      	movs	r3, #0
 8016098:	fa1f f888 	uxth.w	r8, r8
 801609c:	9301      	str	r3, [sp, #4]
 801609e:	9a04      	ldr	r2, [sp, #16]
 80160a0:	4282      	cmp	r2, r0
 80160a2:	f240 80b9 	bls.w	8016218 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80160a6:	b95b      	cbnz	r3, 80160c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 80160a8:	783a      	ldrb	r2, [r7, #0]
 80160aa:	0993      	lsrs	r3, r2, #6
 80160ac:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80160b0:	9201      	str	r2, [sp, #4]
 80160b2:	1e5a      	subs	r2, r3, #1
 80160b4:	2a02      	cmp	r2, #2
 80160b6:	bf8d      	iteet	hi
 80160b8:	787b      	ldrbhi	r3, [r7, #1]
 80160ba:	3701      	addls	r7, #1
 80160bc:	b29b      	uxthls	r3, r3
 80160be:	3702      	addhi	r7, #2
 80160c0:	b184      	cbz	r4, 80160e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 80160c2:	429c      	cmp	r4, r3
 80160c4:	bf95      	itete	ls
 80160c6:	1b1c      	subls	r4, r3, r4
 80160c8:	1ae4      	subhi	r4, r4, r3
 80160ca:	fa1f fa84 	uxthls.w	sl, r4
 80160ce:	b2a4      	uxthhi	r4, r4
 80160d0:	bf87      	ittee	hi
 80160d2:	46c4      	movhi	ip, r8
 80160d4:	f04f 0a00 	movhi.w	sl, #0
 80160d8:	fa1f fc89 	uxthls.w	ip, r9
 80160dc:	2400      	movls	r4, #0
 80160de:	4653      	mov	r3, sl
 80160e0:	46e0      	mov	r8, ip
 80160e2:	e7dc      	b.n	801609e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 80160e4:	2204      	movs	r2, #4
 80160e6:	4615      	mov	r5, r2
 80160e8:	9905      	ldr	r1, [sp, #20]
 80160ea:	9a01      	ldr	r2, [sp, #4]
 80160ec:	fb15 1202 	smlabb	r2, r5, r2, r1
 80160f0:	9903      	ldr	r1, [sp, #12]
 80160f2:	588a      	ldr	r2, [r1, r2]
 80160f4:	4543      	cmp	r3, r8
 80160f6:	bf27      	ittee	cs
 80160f8:	eba3 0a08 	subcs.w	sl, r3, r8
 80160fc:	46c6      	movcs	lr, r8
 80160fe:	eba8 0c03 	subcc.w	ip, r8, r3
 8016102:	469e      	movcc	lr, r3
 8016104:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016108:	bf27      	ittee	cs
 801610a:	fa1f fa8a 	uxthcs.w	sl, sl
 801610e:	46a4      	movcs	ip, r4
 8016110:	fa1f fc8c 	uxthcc.w	ip, ip
 8016114:	46a2      	movcc	sl, r4
 8016116:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801611a:	2900      	cmp	r1, #0
 801611c:	d066      	beq.n	80161ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801611e:	29ff      	cmp	r1, #255	; 0xff
 8016120:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016124:	d114      	bne.n	8016150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016126:	9d02      	ldr	r5, [sp, #8]
 8016128:	2dff      	cmp	r5, #255	; 0xff
 801612a:	d111      	bne.n	8016150 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801612c:	0951      	lsrs	r1, r2, #5
 801612e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016132:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016136:	f026 0607 	bic.w	r6, r6, #7
 801613a:	430e      	orrs	r6, r1
 801613c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016140:	4316      	orrs	r6, r2
 8016142:	b2b6      	uxth	r6, r6
 8016144:	4486      	add	lr, r0
 8016146:	4586      	cmp	lr, r0
 8016148:	d051      	beq.n	80161ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801614a:	f820 6b02 	strh.w	r6, [r0], #2
 801614e:	e7fa      	b.n	8016146 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8016150:	9d02      	ldr	r5, [sp, #8]
 8016152:	4369      	muls	r1, r5
 8016154:	1c4d      	adds	r5, r1, #1
 8016156:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801615a:	122d      	asrs	r5, r5, #8
 801615c:	ea6f 0b05 	mvn.w	fp, r5
 8016160:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8016164:	b2ad      	uxth	r5, r5
 8016166:	b2f6      	uxtb	r6, r6
 8016168:	b2d2      	uxtb	r2, r2
 801616a:	fb11 f105 	smulbb	r1, r1, r5
 801616e:	fb16 f605 	smulbb	r6, r6, r5
 8016172:	fb12 f205 	smulbb	r2, r2, r5
 8016176:	b289      	uxth	r1, r1
 8016178:	b2b6      	uxth	r6, r6
 801617a:	b292      	uxth	r2, r2
 801617c:	9106      	str	r1, [sp, #24]
 801617e:	9607      	str	r6, [sp, #28]
 8016180:	9208      	str	r2, [sp, #32]
 8016182:	4486      	add	lr, r0
 8016184:	fa5f fb8b 	uxtb.w	fp, fp
 8016188:	4586      	cmp	lr, r0
 801618a:	d030      	beq.n	80161ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801618c:	8802      	ldrh	r2, [r0, #0]
 801618e:	9906      	ldr	r1, [sp, #24]
 8016190:	1216      	asrs	r6, r2, #8
 8016192:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016196:	10d5      	asrs	r5, r2, #3
 8016198:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801619c:	fb06 160b 	mla	r6, r6, fp, r1
 80161a0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80161a4:	9907      	ldr	r1, [sp, #28]
 80161a6:	00d2      	lsls	r2, r2, #3
 80161a8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80161ac:	fb05 150b 	mla	r5, r5, fp, r1
 80161b0:	b2d2      	uxtb	r2, r2
 80161b2:	9908      	ldr	r1, [sp, #32]
 80161b4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80161b8:	b2b6      	uxth	r6, r6
 80161ba:	fb02 120b 	mla	r2, r2, fp, r1
 80161be:	b292      	uxth	r2, r2
 80161c0:	1c71      	adds	r1, r6, #1
 80161c2:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 80161c6:	1c51      	adds	r1, r2, #1
 80161c8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80161cc:	b2ad      	uxth	r5, r5
 80161ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80161d2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80161d6:	4316      	orrs	r6, r2
 80161d8:	1c6a      	adds	r2, r5, #1
 80161da:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80161de:	096d      	lsrs	r5, r5, #5
 80161e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80161e4:	432e      	orrs	r6, r5
 80161e6:	f820 6b02 	strh.w	r6, [r0], #2
 80161ea:	e7cd      	b.n	8016188 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 80161ec:	4470      	add	r0, lr
 80161ee:	4543      	cmp	r3, r8
 80161f0:	f4ff af75 	bcc.w	80160de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 80161f4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80161f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161fa:	fa1f fc89 	uxth.w	ip, r9
 80161fe:	eba4 040c 	sub.w	r4, r4, ip
 8016202:	881b      	ldrh	r3, [r3, #0]
 8016204:	b2a4      	uxth	r4, r4
 8016206:	2c00      	cmp	r4, #0
 8016208:	eba3 0309 	sub.w	r3, r3, r9
 801620c:	bf18      	it	ne
 801620e:	f04f 0c00 	movne.w	ip, #0
 8016212:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016216:	e762      	b.n	80160de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8016218:	4b03      	ldr	r3, [pc, #12]	; (8016228 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801621a:	6818      	ldr	r0, [r3, #0]
 801621c:	6803      	ldr	r3, [r0, #0]
 801621e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016220:	4798      	blx	r3
 8016222:	b00f      	add	sp, #60	; 0x3c
 8016224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016228:	20014fc4 	.word	0x20014fc4
 801622c:	20014fbe 	.word	0x20014fbe

08016230 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016234:	b093      	sub	sp, #76	; 0x4c
 8016236:	461c      	mov	r4, r3
 8016238:	9205      	str	r2, [sp, #20]
 801623a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801623e:	9101      	str	r1, [sp, #4]
 8016240:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016242:	9202      	str	r2, [sp, #8]
 8016244:	2a00      	cmp	r2, #0
 8016246:	f000 812c 	beq.w	80164a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801624a:	6820      	ldr	r0, [r4, #0]
 801624c:	6861      	ldr	r1, [r4, #4]
 801624e:	aa0e      	add	r2, sp, #56	; 0x38
 8016250:	c203      	stmia	r2!, {r0, r1}
 8016252:	6818      	ldr	r0, [r3, #0]
 8016254:	6859      	ldr	r1, [r3, #4]
 8016256:	aa10      	add	r2, sp, #64	; 0x40
 8016258:	c203      	stmia	r2!, {r0, r1}
 801625a:	a80e      	add	r0, sp, #56	; 0x38
 801625c:	f7f9 fa28 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016260:	4621      	mov	r1, r4
 8016262:	a810      	add	r0, sp, #64	; 0x40
 8016264:	f7f9 fa68 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016268:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801626c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8016270:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8016274:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8016278:	bfde      	ittt	le
 801627a:	b2b3      	uxthle	r3, r6
 801627c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8016280:	fb92 f3f3 	sdivle	r3, r2, r3
 8016284:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8016288:	bfc8      	it	gt
 801628a:	2301      	movgt	r3, #1
 801628c:	fb92 f1f3 	sdiv	r1, r2, r3
 8016290:	fa1f fc81 	uxth.w	ip, r1
 8016294:	fb0c 2413 	mls	r4, ip, r3, r2
 8016298:	fb14 f406 	smulbb	r4, r4, r6
 801629c:	441d      	add	r5, r3
 801629e:	4404      	add	r4, r0
 80162a0:	4661      	mov	r1, ip
 80162a2:	3d01      	subs	r5, #1
 80162a4:	b2a4      	uxth	r4, r4
 80162a6:	fb95 f5f3 	sdiv	r5, r5, r3
 80162aa:	b131      	cbz	r1, 80162ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 80162ac:	9b05      	ldr	r3, [sp, #20]
 80162ae:	9901      	ldr	r1, [sp, #4]
 80162b0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80162b4:	ba1b      	rev	r3, r3
 80162b6:	4419      	add	r1, r3
 80162b8:	9101      	str	r1, [sp, #4]
 80162ba:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80162be:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80162c2:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 80162c6:	4418      	add	r0, r3
 80162c8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 80162cc:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 80162d0:	441a      	add	r2, r3
 80162d2:	4b75      	ldr	r3, [pc, #468]	; (80164a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80162d4:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 80162d8:	6818      	ldr	r0, [r3, #0]
 80162da:	6803      	ldr	r3, [r0, #0]
 80162dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80162de:	4798      	blx	r3
 80162e0:	4972      	ldr	r1, [pc, #456]	; (80164ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 80162e2:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 80162e6:	880b      	ldrh	r3, [r1, #0]
 80162e8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80162ec:	910d      	str	r1, [sp, #52]	; 0x34
 80162ee:	fb03 c202 	mla	r2, r3, r2, ip
 80162f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80162f6:	4373      	muls	r3, r6
 80162f8:	b2ad      	uxth	r5, r5
 80162fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80162fe:	00ad      	lsls	r5, r5, #2
 8016300:	9308      	str	r3, [sp, #32]
 8016302:	1d2b      	adds	r3, r5, #4
 8016304:	9309      	str	r3, [sp, #36]	; 0x24
 8016306:	9b02      	ldr	r3, [sp, #8]
 8016308:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801630c:	9106      	str	r1, [sp, #24]
 801630e:	43da      	mvns	r2, r3
 8016310:	2c00      	cmp	r4, #0
 8016312:	bf0c      	ite	eq
 8016314:	46dc      	moveq	ip, fp
 8016316:	f04f 0c00 	movne.w	ip, #0
 801631a:	2300      	movs	r3, #0
 801631c:	b2d2      	uxtb	r2, r2
 801631e:	fa1f fc8c 	uxth.w	ip, ip
 8016322:	9303      	str	r3, [sp, #12]
 8016324:	9207      	str	r2, [sp, #28]
 8016326:	9a08      	ldr	r2, [sp, #32]
 8016328:	4282      	cmp	r2, r0
 801632a:	f240 80b5 	bls.w	8016498 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801632e:	b963      	cbnz	r3, 801634a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8016330:	9b01      	ldr	r3, [sp, #4]
 8016332:	781a      	ldrb	r2, [r3, #0]
 8016334:	0993      	lsrs	r3, r2, #6
 8016336:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801633a:	9203      	str	r2, [sp, #12]
 801633c:	1e5a      	subs	r2, r3, #1
 801633e:	2a02      	cmp	r2, #2
 8016340:	d815      	bhi.n	801636e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8016342:	9a01      	ldr	r2, [sp, #4]
 8016344:	3201      	adds	r2, #1
 8016346:	9201      	str	r2, [sp, #4]
 8016348:	b29b      	uxth	r3, r3
 801634a:	b1b4      	cbz	r4, 801637a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801634c:	429c      	cmp	r4, r3
 801634e:	bf95      	itete	ls
 8016350:	1b1c      	subls	r4, r3, r4
 8016352:	1ae4      	subhi	r4, r4, r3
 8016354:	fa1f f884 	uxthls.w	r8, r4
 8016358:	b2a4      	uxthhi	r4, r4
 801635a:	bf87      	ittee	hi
 801635c:	4666      	movhi	r6, ip
 801635e:	f04f 0800 	movhi.w	r8, #0
 8016362:	fa1f f68b 	uxthls.w	r6, fp
 8016366:	2400      	movls	r4, #0
 8016368:	4643      	mov	r3, r8
 801636a:	46b4      	mov	ip, r6
 801636c:	e7db      	b.n	8016326 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801636e:	9a01      	ldr	r2, [sp, #4]
 8016370:	9b01      	ldr	r3, [sp, #4]
 8016372:	3202      	adds	r2, #2
 8016374:	785b      	ldrb	r3, [r3, #1]
 8016376:	9201      	str	r2, [sp, #4]
 8016378:	e7e7      	b.n	801634a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801637a:	2203      	movs	r2, #3
 801637c:	4615      	mov	r5, r2
 801637e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016380:	9a03      	ldr	r2, [sp, #12]
 8016382:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016386:	9905      	ldr	r1, [sp, #20]
 8016388:	4563      	cmp	r3, ip
 801638a:	eb01 0502 	add.w	r5, r1, r2
 801638e:	9902      	ldr	r1, [sp, #8]
 8016390:	bf29      	itett	cs
 8016392:	eba3 080c 	subcs.w	r8, r3, ip
 8016396:	ebac 0603 	subcc.w	r6, ip, r3
 801639a:	fa1f f888 	uxthcs.w	r8, r8
 801639e:	46e1      	movcs	r9, ip
 80163a0:	bf2f      	iteee	cs
 80163a2:	4626      	movcs	r6, r4
 80163a4:	b2b6      	uxthcc	r6, r6
 80163a6:	4699      	movcc	r9, r3
 80163a8:	46a0      	movcc	r8, r4
 80163aa:	29ff      	cmp	r1, #255	; 0xff
 80163ac:	d04a      	beq.n	8016444 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80163ae:	9f06      	ldr	r7, [sp, #24]
 80163b0:	78a9      	ldrb	r1, [r5, #2]
 80163b2:	9004      	str	r0, [sp, #16]
 80163b4:	4379      	muls	r1, r7
 80163b6:	910a      	str	r1, [sp, #40]	; 0x28
 80163b8:	7869      	ldrb	r1, [r5, #1]
 80163ba:	4379      	muls	r1, r7
 80163bc:	910b      	str	r1, [sp, #44]	; 0x2c
 80163be:	9905      	ldr	r1, [sp, #20]
 80163c0:	5c8a      	ldrb	r2, [r1, r2]
 80163c2:	437a      	muls	r2, r7
 80163c4:	920c      	str	r2, [sp, #48]	; 0x30
 80163c6:	46ca      	mov	sl, r9
 80163c8:	f1ba 0f00 	cmp.w	sl, #0
 80163cc:	d03d      	beq.n	801644a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 80163ce:	9a04      	ldr	r2, [sp, #16]
 80163d0:	9f07      	ldr	r7, [sp, #28]
 80163d2:	8812      	ldrh	r2, [r2, #0]
 80163d4:	1215      	asrs	r5, r2, #8
 80163d6:	46be      	mov	lr, r7
 80163d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80163dc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80163de:	10d1      	asrs	r1, r2, #3
 80163e0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80163e4:	fb05 750e 	mla	r5, r5, lr, r7
 80163e8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80163ec:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80163ee:	00d2      	lsls	r2, r2, #3
 80163f0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80163f4:	fb01 710e 	mla	r1, r1, lr, r7
 80163f8:	b2d2      	uxtb	r2, r2
 80163fa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80163fc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016400:	b2ad      	uxth	r5, r5
 8016402:	fb02 720e 	mla	r2, r2, lr, r7
 8016406:	b292      	uxth	r2, r2
 8016408:	f105 0e01 	add.w	lr, r5, #1
 801640c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016410:	f102 0e01 	add.w	lr, r2, #1
 8016414:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8016418:	b289      	uxth	r1, r1
 801641a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801641e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016422:	4315      	orrs	r5, r2
 8016424:	1c4a      	adds	r2, r1, #1
 8016426:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801642a:	0949      	lsrs	r1, r1, #5
 801642c:	9a04      	ldr	r2, [sp, #16]
 801642e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016432:	430d      	orrs	r5, r1
 8016434:	f822 5b02 	strh.w	r5, [r2], #2
 8016438:	f10a 3aff 	add.w	sl, sl, #4294967295
 801643c:	9204      	str	r2, [sp, #16]
 801643e:	fa1f fa8a 	uxth.w	sl, sl
 8016442:	e7c1      	b.n	80163c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8016444:	4649      	mov	r1, r9
 8016446:	4686      	mov	lr, r0
 8016448:	b999      	cbnz	r1, 8016472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801644a:	4563      	cmp	r3, ip
 801644c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8016450:	d38a      	bcc.n	8016368 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016452:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 8016456:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016458:	fa1f f68b 	uxth.w	r6, fp
 801645c:	1ba4      	subs	r4, r4, r6
 801645e:	881b      	ldrh	r3, [r3, #0]
 8016460:	b2a4      	uxth	r4, r4
 8016462:	2c00      	cmp	r4, #0
 8016464:	eba3 030b 	sub.w	r3, r3, fp
 8016468:	bf18      	it	ne
 801646a:	2600      	movne	r6, #0
 801646c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016470:	e77a      	b.n	8016368 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8016472:	78aa      	ldrb	r2, [r5, #2]
 8016474:	4f0e      	ldr	r7, [pc, #56]	; (80164b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8016476:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801647a:	786a      	ldrb	r2, [r5, #1]
 801647c:	00d2      	lsls	r2, r2, #3
 801647e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016482:	ea4a 0202 	orr.w	r2, sl, r2
 8016486:	f895 a000 	ldrb.w	sl, [r5]
 801648a:	3901      	subs	r1, #1
 801648c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8016490:	f82e 2b02 	strh.w	r2, [lr], #2
 8016494:	b289      	uxth	r1, r1
 8016496:	e7d7      	b.n	8016448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8016498:	4b03      	ldr	r3, [pc, #12]	; (80164a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801649a:	6818      	ldr	r0, [r3, #0]
 801649c:	6803      	ldr	r3, [r0, #0]
 801649e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80164a0:	4798      	blx	r3
 80164a2:	b013      	add	sp, #76	; 0x4c
 80164a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164a8:	20014fc4 	.word	0x20014fc4
 80164ac:	20014fbe 	.word	0x20014fbe
 80164b0:	fffff800 	.word	0xfffff800

080164b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80164b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164b8:	b09d      	sub	sp, #116	; 0x74
 80164ba:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 80164be:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 80164c2:	920e      	str	r2, [sp, #56]	; 0x38
 80164c4:	461c      	mov	r4, r3
 80164c6:	4683      	mov	fp, r0
 80164c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80164ca:	2a00      	cmp	r2, #0
 80164cc:	f000 81e0 	beq.w	8016890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 80164d0:	6820      	ldr	r0, [r4, #0]
 80164d2:	6861      	ldr	r1, [r4, #4]
 80164d4:	aa18      	add	r2, sp, #96	; 0x60
 80164d6:	c203      	stmia	r2!, {r0, r1}
 80164d8:	6818      	ldr	r0, [r3, #0]
 80164da:	6859      	ldr	r1, [r3, #4]
 80164dc:	aa1a      	add	r2, sp, #104	; 0x68
 80164de:	c203      	stmia	r2!, {r0, r1}
 80164e0:	a818      	add	r0, sp, #96	; 0x60
 80164e2:	f7f9 f8e5 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80164e6:	4621      	mov	r1, r4
 80164e8:	a81a      	add	r0, sp, #104	; 0x68
 80164ea:	f7f9 f925 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80164ee:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 80164f2:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 80164f6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 80164fa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80164fe:	bfd7      	itett	le
 8016500:	b29a      	uxthle	r2, r3
 8016502:	2201      	movgt	r2, #1
 8016504:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8016508:	fb91 f2f2 	sdivle	r2, r1, r2
 801650c:	9202      	str	r2, [sp, #8]
 801650e:	9802      	ldr	r0, [sp, #8]
 8016510:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8016514:	fb92 f0f0 	sdiv	r0, r2, r0
 8016518:	b280      	uxth	r0, r0
 801651a:	900f      	str	r0, [sp, #60]	; 0x3c
 801651c:	9902      	ldr	r1, [sp, #8]
 801651e:	9802      	ldr	r0, [sp, #8]
 8016520:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8016522:	440c      	add	r4, r1
 8016524:	fb05 2510 	mls	r5, r5, r0, r2
 8016528:	fb15 f503 	smulbb	r5, r5, r3
 801652c:	3c01      	subs	r4, #1
 801652e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 8016532:	fb94 f4f1 	sdiv	r4, r4, r1
 8016536:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801653a:	440d      	add	r5, r1
 801653c:	4419      	add	r1, r3
 801653e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 8016542:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 8016546:	441a      	add	r2, r3
 8016548:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801654c:	9306      	str	r3, [sp, #24]
 801654e:	4bb3      	ldr	r3, [pc, #716]	; (801681c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8016550:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 8016554:	6818      	ldr	r0, [r3, #0]
 8016556:	6803      	ldr	r3, [r0, #0]
 8016558:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801655a:	4798      	blx	r3
 801655c:	4bb0      	ldr	r3, [pc, #704]	; (8016820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801655e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 8016562:	881a      	ldrh	r2, [r3, #0]
 8016564:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 8016568:	9316      	str	r3, [sp, #88]	; 0x58
 801656a:	fb02 7101 	mla	r1, r2, r1, r7
 801656e:	3401      	adds	r4, #1
 8016570:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8016574:	b2a4      	uxth	r4, r4
 8016576:	4356      	muls	r6, r2
 8016578:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801657c:	00a4      	lsls	r4, r4, #2
 801657e:	920a      	str	r2, [sp, #40]	; 0x28
 8016580:	1d22      	adds	r2, r4, #4
 8016582:	b2ad      	uxth	r5, r5
 8016584:	9213      	str	r2, [sp, #76]	; 0x4c
 8016586:	4ba7      	ldr	r3, [pc, #668]	; (8016824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8016588:	9a06      	ldr	r2, [sp, #24]
 801658a:	2d00      	cmp	r5, #0
 801658c:	bf0c      	ite	eq
 801658e:	4611      	moveq	r1, r2
 8016590:	2100      	movne	r1, #0
 8016592:	2200      	movs	r2, #0
 8016594:	eba3 030b 	sub.w	r3, r3, fp
 8016598:	b289      	uxth	r1, r1
 801659a:	920d      	str	r2, [sp, #52]	; 0x34
 801659c:	9317      	str	r3, [sp, #92]	; 0x5c
 801659e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80165a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80165a2:	fa12 f383 	uxtah	r3, r2, r3
 80165a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80165a8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80165ac:	3304      	adds	r3, #4
 80165ae:	9308      	str	r3, [sp, #32]
 80165b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80165b2:	4543      	cmp	r3, r8
 80165b4:	f240 8167 	bls.w	8016886 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 80165b8:	9a02      	ldr	r2, [sp, #8]
 80165ba:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 80165be:	fbb5 f3f3 	udiv	r3, r5, r3
 80165c2:	1ad3      	subs	r3, r2, r3
 80165c4:	b29b      	uxth	r3, r3
 80165c6:	9314      	str	r3, [sp, #80]	; 0x50
 80165c8:	9b08      	ldr	r3, [sp, #32]
 80165ca:	9808      	ldr	r0, [sp, #32]
 80165cc:	785a      	ldrb	r2, [r3, #1]
 80165ce:	789b      	ldrb	r3, [r3, #2]
 80165d0:	7800      	ldrb	r0, [r0, #0]
 80165d2:	9010      	str	r0, [sp, #64]	; 0x40
 80165d4:	021b      	lsls	r3, r3, #8
 80165d6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80165da:	9a08      	ldr	r2, [sp, #32]
 80165dc:	78d2      	ldrb	r2, [r2, #3]
 80165de:	4313      	orrs	r3, r2
 80165e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80165e2:	3001      	adds	r0, #1
 80165e4:	441a      	add	r2, r3
 80165e6:	9007      	str	r0, [sp, #28]
 80165e8:	1c50      	adds	r0, r2, #1
 80165ea:	9005      	str	r0, [sp, #20]
 80165ec:	7852      	ldrb	r2, [r2, #1]
 80165ee:	9811      	ldr	r0, [sp, #68]	; 0x44
 80165f0:	0212      	lsls	r2, r2, #8
 80165f2:	5cc3      	ldrb	r3, [r0, r3]
 80165f4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80165f8:	431a      	orrs	r2, r3
 80165fa:	b293      	uxth	r3, r2
 80165fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80165fe:	2300      	movs	r3, #0
 8016600:	9309      	str	r3, [sp, #36]	; 0x24
 8016602:	2301      	movs	r3, #1
 8016604:	9301      	str	r3, [sp, #4]
 8016606:	9304      	str	r3, [sp, #16]
 8016608:	2300      	movs	r3, #0
 801660a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801660e:	9303      	str	r3, [sp, #12]
 8016610:	f04f 0e01 	mov.w	lr, #1
 8016614:	2d00      	cmp	r5, #0
 8016616:	d07c      	beq.n	8016712 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8016618:	45ae      	cmp	lr, r5
 801661a:	d26b      	bcs.n	80166f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801661c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801661e:	eba5 050e 	sub.w	r5, r5, lr
 8016622:	4543      	cmp	r3, r8
 8016624:	b2ad      	uxth	r5, r5
 8016626:	460c      	mov	r4, r1
 8016628:	d802      	bhi.n	8016630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801662a:	e070      	b.n	801670e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801662c:	2b00      	cmp	r3, #0
 801662e:	d15c      	bne.n	80166ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016630:	9b05      	ldr	r3, [sp, #20]
 8016632:	9a04      	ldr	r2, [sp, #16]
 8016634:	785b      	ldrb	r3, [r3, #1]
 8016636:	9904      	ldr	r1, [sp, #16]
 8016638:	f1c2 0207 	rsb	r2, r2, #7
 801663c:	4093      	lsls	r3, r2
 801663e:	005b      	lsls	r3, r3, #1
 8016640:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016644:	9b05      	ldr	r3, [sp, #20]
 8016646:	781b      	ldrb	r3, [r3, #0]
 8016648:	410b      	asrs	r3, r1
 801664a:	3101      	adds	r1, #1
 801664c:	b2c9      	uxtb	r1, r1
 801664e:	2908      	cmp	r1, #8
 8016650:	9104      	str	r1, [sp, #16]
 8016652:	9905      	ldr	r1, [sp, #20]
 8016654:	bf0a      	itet	eq
 8016656:	3102      	addeq	r1, #2
 8016658:	3101      	addne	r1, #1
 801665a:	9105      	streq	r1, [sp, #20]
 801665c:	b2db      	uxtb	r3, r3
 801665e:	bf0a      	itet	eq
 8016660:	2100      	moveq	r1, #0
 8016662:	9105      	strne	r1, [sp, #20]
 8016664:	9104      	streq	r1, [sp, #16]
 8016666:	4313      	orrs	r3, r2
 8016668:	9910      	ldr	r1, [sp, #64]	; 0x40
 801666a:	b29a      	uxth	r2, r3
 801666c:	4291      	cmp	r1, r2
 801666e:	d30a      	bcc.n	8016686 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8016670:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 8016674:	2301      	movs	r3, #1
 8016676:	9907      	ldr	r1, [sp, #28]
 8016678:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801667c:	d30f      	bcc.n	801669e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801667e:	2100      	movs	r1, #0
 8016680:	9301      	str	r3, [sp, #4]
 8016682:	9103      	str	r1, [sp, #12]
 8016684:	e032      	b.n	80166ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8016686:	9b07      	ldr	r3, [sp, #28]
 8016688:	429a      	cmp	r2, r3
 801668a:	d318      	bcc.n	80166be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801668c:	9b01      	ldr	r3, [sp, #4]
 801668e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8016692:	445b      	add	r3, fp
 8016694:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8016698:	9b01      	ldr	r3, [sp, #4]
 801669a:	3301      	adds	r3, #1
 801669c:	b29b      	uxth	r3, r3
 801669e:	9907      	ldr	r1, [sp, #28]
 80166a0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 80166a4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80166a8:	7108      	strb	r0, [r1, #4]
 80166aa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80166ac:	80c8      	strh	r0, [r1, #6]
 80166ae:	9801      	ldr	r0, [sp, #4]
 80166b0:	3001      	adds	r0, #1
 80166b2:	7148      	strb	r0, [r1, #5]
 80166b4:	9907      	ldr	r1, [sp, #28]
 80166b6:	3101      	adds	r1, #1
 80166b8:	b289      	uxth	r1, r1
 80166ba:	9107      	str	r1, [sp, #28]
 80166bc:	e7df      	b.n	801667e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80166be:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80166c2:	4611      	mov	r1, r2
 80166c4:	795b      	ldrb	r3, [r3, #5]
 80166c6:	f603 0004 	addw	r0, r3, #2052	; 0x804
 80166ca:	4458      	add	r0, fp
 80166cc:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 80166ce:	4406      	add	r6, r0
 80166d0:	2e00      	cmp	r6, #0
 80166d2:	dd06      	ble.n	80166e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80166d4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80166d8:	790e      	ldrb	r6, [r1, #4]
 80166da:	f800 6d01 	strb.w	r6, [r0, #-1]!
 80166de:	88c9      	ldrh	r1, [r1, #6]
 80166e0:	e7f4      	b.n	80166cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 80166e2:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 80166e6:	b29b      	uxth	r3, r3
 80166e8:	e7c5      	b.n	8016676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 80166ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80166ec:	920b      	str	r2, [sp, #44]	; 0x2c
 80166ee:	4621      	mov	r1, r4
 80166f0:	469e      	mov	lr, r3
 80166f2:	e78f      	b.n	8016614 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 80166f4:	9a03      	ldr	r2, [sp, #12]
 80166f6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80166fa:	442a      	add	r2, r5
 80166fc:	ebae 0305 	sub.w	r3, lr, r5
 8016700:	b292      	uxth	r2, r2
 8016702:	b29b      	uxth	r3, r3
 8016704:	9203      	str	r2, [sp, #12]
 8016706:	2500      	movs	r5, #0
 8016708:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801670a:	4542      	cmp	r2, r8
 801670c:	d88e      	bhi.n	801662c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801670e:	4621      	mov	r1, r4
 8016710:	e74e      	b.n	80165b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8016712:	458e      	cmp	lr, r1
 8016714:	bf29      	itett	cs
 8016716:	ebae 0301 	subcs.w	r3, lr, r1
 801671a:	eba1 040e 	subcc.w	r4, r1, lr
 801671e:	b29b      	uxthcs	r3, r3
 8016720:	910c      	strcs	r1, [sp, #48]	; 0x30
 8016722:	bf2f      	iteee	cs
 8016724:	462c      	movcs	r4, r5
 8016726:	b2a4      	uxthcc	r4, r4
 8016728:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801672c:	462b      	movcc	r3, r5
 801672e:	f04f 0900 	mov.w	r9, #0
 8016732:	9a03      	ldr	r2, [sp, #12]
 8016734:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016736:	444a      	add	r2, r9
 8016738:	4548      	cmp	r0, r9
 801673a:	b292      	uxth	r2, r2
 801673c:	d074      	beq.n	8016828 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801673e:	445a      	add	r2, fp
 8016740:	2004      	movs	r0, #4
 8016742:	4605      	mov	r5, r0
 8016744:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 8016748:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801674a:	fb15 0202 	smlabb	r2, r5, r2, r0
 801674e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016750:	5880      	ldr	r0, [r0, r2]
 8016752:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8016756:	d014      	beq.n	8016782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8016758:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801675c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8016760:	d112      	bne.n	8016788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8016762:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016764:	2aff      	cmp	r2, #255	; 0xff
 8016766:	d10f      	bne.n	8016788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8016768:	0942      	lsrs	r2, r0, #5
 801676a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801676e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016772:	f025 0507 	bic.w	r5, r5, #7
 8016776:	4315      	orrs	r5, r2
 8016778:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801677c:	4305      	orrs	r5, r0
 801677e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8016782:	f109 0901 	add.w	r9, r9, #1
 8016786:	e7d4      	b.n	8016732 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8016788:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801678c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016790:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8016794:	9215      	str	r2, [sp, #84]	; 0x54
 8016796:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016798:	fb02 fa0a 	mul.w	sl, r2, sl
 801679c:	f10a 0201 	add.w	r2, sl, #1
 80167a0:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80167a4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80167a8:	1212      	asrs	r2, r2, #8
 80167aa:	fa1f fa82 	uxth.w	sl, r2
 80167ae:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80167b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80167b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80167ba:	43d2      	mvns	r2, r2
 80167bc:	b2d2      	uxtb	r2, r2
 80167be:	fb16 f60a 	smulbb	r6, r6, sl
 80167c2:	fa5f fc8c 	uxtb.w	ip, ip
 80167c6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80167ca:	b2c0      	uxtb	r0, r0
 80167cc:	fb07 6702 	mla	r7, r7, r2, r6
 80167d0:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80167d4:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80167d6:	fb10 f00a 	smulbb	r0, r0, sl
 80167da:	fb0c 0002 	mla	r0, ip, r2, r0
 80167de:	b2ed      	uxtb	r5, r5
 80167e0:	b2bf      	uxth	r7, r7
 80167e2:	fb15 f50a 	smulbb	r5, r5, sl
 80167e6:	b280      	uxth	r0, r0
 80167e8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80167ec:	fb06 5602 	mla	r6, r6, r2, r5
 80167f0:	1c7a      	adds	r2, r7, #1
 80167f2:	1c45      	adds	r5, r0, #1
 80167f4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80167f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80167fc:	b2b6      	uxth	r6, r6
 80167fe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016802:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016806:	432f      	orrs	r7, r5
 8016808:	1c75      	adds	r5, r6, #1
 801680a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801680e:	096d      	lsrs	r5, r5, #5
 8016810:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016814:	432f      	orrs	r7, r5
 8016816:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801681a:	e7b2      	b.n	8016782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801681c:	20014fc4 	.word	0x20014fc4
 8016820:	20014fbe 	.word	0x20014fbe
 8016824:	fffff7fb 	.word	0xfffff7fb
 8016828:	9203      	str	r2, [sp, #12]
 801682a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801682c:	458e      	cmp	lr, r1
 801682e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016832:	f4ff af68 	bcc.w	8016706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8016836:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016838:	9906      	ldr	r1, [sp, #24]
 801683a:	8812      	ldrh	r2, [r2, #0]
 801683c:	1a52      	subs	r2, r2, r1
 801683e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016842:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016844:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016846:	3201      	adds	r2, #1
 8016848:	428a      	cmp	r2, r1
 801684a:	9209      	str	r2, [sp, #36]	; 0x24
 801684c:	d111      	bne.n	8016872 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801684e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8016852:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8016856:	9b06      	ldr	r3, [sp, #24]
 8016858:	eba5 0509 	sub.w	r5, r5, r9
 801685c:	b2ad      	uxth	r5, r5
 801685e:	2d00      	cmp	r5, #0
 8016860:	bf08      	it	eq
 8016862:	4619      	moveq	r1, r3
 8016864:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016866:	bf18      	it	ne
 8016868:	2100      	movne	r1, #0
 801686a:	3301      	adds	r3, #1
 801686c:	930d      	str	r3, [sp, #52]	; 0x34
 801686e:	b289      	uxth	r1, r1
 8016870:	e695      	b.n	801659e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8016872:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016876:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801687a:	1b2d      	subs	r5, r5, r4
 801687c:	b2ad      	uxth	r5, r5
 801687e:	2d00      	cmp	r5, #0
 8016880:	bf18      	it	ne
 8016882:	2400      	movne	r4, #0
 8016884:	e740      	b.n	8016708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8016886:	4b04      	ldr	r3, [pc, #16]	; (8016898 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8016888:	6818      	ldr	r0, [r3, #0]
 801688a:	6803      	ldr	r3, [r0, #0]
 801688c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801688e:	4798      	blx	r3
 8016890:	b01d      	add	sp, #116	; 0x74
 8016892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016896:	bf00      	nop
 8016898:	20014fc4 	.word	0x20014fc4

0801689c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801689c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168a0:	b09f      	sub	sp, #124	; 0x7c
 80168a2:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 80168a6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 80168aa:	920a      	str	r2, [sp, #40]	; 0x28
 80168ac:	461d      	mov	r5, r3
 80168ae:	4604      	mov	r4, r0
 80168b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80168b2:	2a00      	cmp	r2, #0
 80168b4:	f000 81fa 	beq.w	8016cac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 80168b8:	6828      	ldr	r0, [r5, #0]
 80168ba:	6869      	ldr	r1, [r5, #4]
 80168bc:	aa1a      	add	r2, sp, #104	; 0x68
 80168be:	c203      	stmia	r2!, {r0, r1}
 80168c0:	6818      	ldr	r0, [r3, #0]
 80168c2:	6859      	ldr	r1, [r3, #4]
 80168c4:	aa1c      	add	r2, sp, #112	; 0x70
 80168c6:	c203      	stmia	r2!, {r0, r1}
 80168c8:	a81a      	add	r0, sp, #104	; 0x68
 80168ca:	f7f8 fef1 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80168ce:	4629      	mov	r1, r5
 80168d0:	a81c      	add	r0, sp, #112	; 0x70
 80168d2:	f7f8 ff31 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80168d6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 80168da:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 80168de:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 80168e2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80168e6:	bfd7      	itett	le
 80168e8:	b29a      	uxthle	r2, r3
 80168ea:	2201      	movgt	r2, #1
 80168ec:	f44f 6180 	movle.w	r1, #1024	; 0x400
 80168f0:	fb91 f2f2 	sdivle	r2, r1, r2
 80168f4:	9201      	str	r2, [sp, #4]
 80168f6:	9801      	ldr	r0, [sp, #4]
 80168f8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 80168fc:	fb92 f0f0 	sdiv	r0, r2, r0
 8016900:	b280      	uxth	r0, r0
 8016902:	9010      	str	r0, [sp, #64]	; 0x40
 8016904:	9901      	ldr	r1, [sp, #4]
 8016906:	9801      	ldr	r0, [sp, #4]
 8016908:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801690a:	440e      	add	r6, r1
 801690c:	fb05 2510 	mls	r5, r5, r0, r2
 8016910:	fb15 f503 	smulbb	r5, r5, r3
 8016914:	3e01      	subs	r6, #1
 8016916:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801691a:	fb96 f6f1 	sdiv	r6, r6, r1
 801691e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8016922:	440d      	add	r5, r1
 8016924:	4419      	add	r1, r3
 8016926:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801692a:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801692e:	441a      	add	r2, r3
 8016930:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8016934:	9304      	str	r3, [sp, #16]
 8016936:	4b96      	ldr	r3, [pc, #600]	; (8016b90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016938:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801693c:	6818      	ldr	r0, [r3, #0]
 801693e:	6803      	ldr	r3, [r0, #0]
 8016940:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016942:	4798      	blx	r3
 8016944:	4b93      	ldr	r3, [pc, #588]	; (8016b94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016946:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801694a:	881a      	ldrh	r2, [r3, #0]
 801694c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8016950:	9318      	str	r3, [sp, #96]	; 0x60
 8016952:	fb02 c101 	mla	r1, r2, r1, ip
 8016956:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801695a:	4357      	muls	r7, r2
 801695c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8016960:	3601      	adds	r6, #1
 8016962:	920b      	str	r2, [sp, #44]	; 0x2c
 8016964:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016966:	4b8c      	ldr	r3, [pc, #560]	; (8016b98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016968:	b2b6      	uxth	r6, r6
 801696a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801696e:	1d32      	adds	r2, r6, #4
 8016970:	9206      	str	r2, [sp, #24]
 8016972:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016974:	43d2      	mvns	r2, r2
 8016976:	b2d2      	uxtb	r2, r2
 8016978:	b2ad      	uxth	r5, r5
 801697a:	9215      	str	r2, [sp, #84]	; 0x54
 801697c:	9a04      	ldr	r2, [sp, #16]
 801697e:	2d00      	cmp	r5, #0
 8016980:	bf0c      	ite	eq
 8016982:	4611      	moveq	r1, r2
 8016984:	2100      	movne	r1, #0
 8016986:	2200      	movs	r2, #0
 8016988:	1b1b      	subs	r3, r3, r4
 801698a:	b289      	uxth	r1, r1
 801698c:	920d      	str	r2, [sp, #52]	; 0x34
 801698e:	9319      	str	r3, [sp, #100]	; 0x64
 8016990:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016992:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016994:	fa12 f383 	uxtah	r3, r2, r3
 8016998:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801699a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801699e:	3304      	adds	r3, #4
 80169a0:	9307      	str	r3, [sp, #28]
 80169a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80169a4:	455b      	cmp	r3, fp
 80169a6:	f240 817c 	bls.w	8016ca2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80169aa:	9a01      	ldr	r2, [sp, #4]
 80169ac:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 80169b0:	fbb5 f3f3 	udiv	r3, r5, r3
 80169b4:	1ad3      	subs	r3, r2, r3
 80169b6:	b29b      	uxth	r3, r3
 80169b8:	9316      	str	r3, [sp, #88]	; 0x58
 80169ba:	9b07      	ldr	r3, [sp, #28]
 80169bc:	9807      	ldr	r0, [sp, #28]
 80169be:	785a      	ldrb	r2, [r3, #1]
 80169c0:	789b      	ldrb	r3, [r3, #2]
 80169c2:	7800      	ldrb	r0, [r0, #0]
 80169c4:	9011      	str	r0, [sp, #68]	; 0x44
 80169c6:	021b      	lsls	r3, r3, #8
 80169c8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80169cc:	9a07      	ldr	r2, [sp, #28]
 80169ce:	78d2      	ldrb	r2, [r2, #3]
 80169d0:	4313      	orrs	r3, r2
 80169d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169d4:	3001      	adds	r0, #1
 80169d6:	441a      	add	r2, r3
 80169d8:	9005      	str	r0, [sp, #20]
 80169da:	1c50      	adds	r0, r2, #1
 80169dc:	9003      	str	r0, [sp, #12]
 80169de:	7852      	ldrb	r2, [r2, #1]
 80169e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80169e2:	0212      	lsls	r2, r2, #8
 80169e4:	5cc3      	ldrb	r3, [r0, r3]
 80169e6:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80169ea:	431a      	orrs	r2, r3
 80169ec:	b293      	uxth	r3, r2
 80169ee:	930c      	str	r3, [sp, #48]	; 0x30
 80169f0:	2300      	movs	r3, #0
 80169f2:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 80169f6:	9308      	str	r3, [sp, #32]
 80169f8:	461a      	mov	r2, r3
 80169fa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80169fe:	930e      	str	r3, [sp, #56]	; 0x38
 8016a00:	f04f 0801 	mov.w	r8, #1
 8016a04:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8016a08:	f8cd 8008 	str.w	r8, [sp, #8]
 8016a0c:	46c4      	mov	ip, r8
 8016a0e:	930f      	str	r3, [sp, #60]	; 0x3c
 8016a10:	2d00      	cmp	r5, #0
 8016a12:	d07c      	beq.n	8016b0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8016a14:	45ac      	cmp	ip, r5
 8016a16:	d26c      	bcs.n	8016af2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8016a18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016a1a:	eba5 050c 	sub.w	r5, r5, ip
 8016a1e:	455b      	cmp	r3, fp
 8016a20:	b2ad      	uxth	r5, r5
 8016a22:	4608      	mov	r0, r1
 8016a24:	d802      	bhi.n	8016a2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8016a26:	e070      	b.n	8016b0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8016a28:	2b00      	cmp	r3, #0
 8016a2a:	d15c      	bne.n	8016ae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8016a2c:	9b03      	ldr	r3, [sp, #12]
 8016a2e:	9a02      	ldr	r2, [sp, #8]
 8016a30:	785b      	ldrb	r3, [r3, #1]
 8016a32:	9902      	ldr	r1, [sp, #8]
 8016a34:	f1c2 0207 	rsb	r2, r2, #7
 8016a38:	4093      	lsls	r3, r2
 8016a3a:	005b      	lsls	r3, r3, #1
 8016a3c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016a40:	9b03      	ldr	r3, [sp, #12]
 8016a42:	781b      	ldrb	r3, [r3, #0]
 8016a44:	410b      	asrs	r3, r1
 8016a46:	3101      	adds	r1, #1
 8016a48:	b2c9      	uxtb	r1, r1
 8016a4a:	2908      	cmp	r1, #8
 8016a4c:	9102      	str	r1, [sp, #8]
 8016a4e:	9903      	ldr	r1, [sp, #12]
 8016a50:	bf0a      	itet	eq
 8016a52:	3102      	addeq	r1, #2
 8016a54:	3101      	addne	r1, #1
 8016a56:	9103      	streq	r1, [sp, #12]
 8016a58:	b2db      	uxtb	r3, r3
 8016a5a:	bf0a      	itet	eq
 8016a5c:	2100      	moveq	r1, #0
 8016a5e:	9103      	strne	r1, [sp, #12]
 8016a60:	9102      	streq	r1, [sp, #8]
 8016a62:	4313      	orrs	r3, r2
 8016a64:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016a66:	b29a      	uxth	r2, r3
 8016a68:	4291      	cmp	r1, r2
 8016a6a:	d30a      	bcc.n	8016a82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8016a6c:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8016a70:	2301      	movs	r3, #1
 8016a72:	9905      	ldr	r1, [sp, #20]
 8016a74:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8016a78:	d30f      	bcc.n	8016a9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8016a7a:	2100      	movs	r1, #0
 8016a7c:	4698      	mov	r8, r3
 8016a7e:	9100      	str	r1, [sp, #0]
 8016a80:	e032      	b.n	8016ae8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8016a82:	9b05      	ldr	r3, [sp, #20]
 8016a84:	429a      	cmp	r2, r3
 8016a86:	d318      	bcc.n	8016aba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8016a88:	eb04 0308 	add.w	r3, r4, r8
 8016a8c:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8016a90:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8016a94:	f108 0301 	add.w	r3, r8, #1
 8016a98:	b29b      	uxth	r3, r3
 8016a9a:	9905      	ldr	r1, [sp, #20]
 8016a9c:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8016aa0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016aa4:	710e      	strb	r6, [r1, #4]
 8016aa6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016aa8:	80ce      	strh	r6, [r1, #6]
 8016aaa:	f108 0601 	add.w	r6, r8, #1
 8016aae:	714e      	strb	r6, [r1, #5]
 8016ab0:	9905      	ldr	r1, [sp, #20]
 8016ab2:	3101      	adds	r1, #1
 8016ab4:	b289      	uxth	r1, r1
 8016ab6:	9105      	str	r1, [sp, #20]
 8016ab8:	e7df      	b.n	8016a7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8016aba:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8016abe:	4611      	mov	r1, r2
 8016ac0:	795b      	ldrb	r3, [r3, #5]
 8016ac2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8016ac6:	4426      	add	r6, r4
 8016ac8:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8016aca:	4437      	add	r7, r6
 8016acc:	2f00      	cmp	r7, #0
 8016ace:	dd06      	ble.n	8016ade <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8016ad0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016ad4:	790f      	ldrb	r7, [r1, #4]
 8016ad6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8016ada:	88c9      	ldrh	r1, [r1, #6]
 8016adc:	e7f4      	b.n	8016ac8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8016ade:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8016ae2:	b29b      	uxth	r3, r3
 8016ae4:	e7c5      	b.n	8016a72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8016ae6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016ae8:	920c      	str	r2, [sp, #48]	; 0x30
 8016aea:	4601      	mov	r1, r0
 8016aec:	9a00      	ldr	r2, [sp, #0]
 8016aee:	469c      	mov	ip, r3
 8016af0:	e78e      	b.n	8016a10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8016af2:	1957      	adds	r7, r2, r5
 8016af4:	ebac 0305 	sub.w	r3, ip, r5
 8016af8:	b2ba      	uxth	r2, r7
 8016afa:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016afe:	9200      	str	r2, [sp, #0]
 8016b00:	b29b      	uxth	r3, r3
 8016b02:	2500      	movs	r5, #0
 8016b04:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016b06:	455a      	cmp	r2, fp
 8016b08:	d88e      	bhi.n	8016a28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8016b0a:	4601      	mov	r1, r0
 8016b0c:	e749      	b.n	80169a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8016b0e:	458c      	cmp	ip, r1
 8016b10:	bf2c      	ite	cs
 8016b12:	4628      	movcs	r0, r5
 8016b14:	462b      	movcc	r3, r5
 8016b16:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8016b18:	bf27      	ittee	cs
 8016b1a:	9109      	strcs	r1, [sp, #36]	; 0x24
 8016b1c:	ebac 0301 	subcs.w	r3, ip, r1
 8016b20:	eba1 000c 	subcc.w	r0, r1, ip
 8016b24:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8016b28:	bf2c      	ite	cs
 8016b2a:	b29b      	uxthcs	r3, r3
 8016b2c:	b280      	uxthcc	r0, r0
 8016b2e:	2dff      	cmp	r5, #255	; 0xff
 8016b30:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8016b32:	eb02 0705 	add.w	r7, r2, r5
 8016b36:	b2bd      	uxth	r5, r7
 8016b38:	9500      	str	r5, [sp, #0]
 8016b3a:	d12f      	bne.n	8016b9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8016b3c:	465e      	mov	r6, fp
 8016b3e:	9d00      	ldr	r5, [sp, #0]
 8016b40:	42aa      	cmp	r2, r5
 8016b42:	f040 8084 	bne.w	8016c4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8016b46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016b48:	458c      	cmp	ip, r1
 8016b4a:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016b4e:	d3d8      	bcc.n	8016b02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8016b50:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8016b52:	9904      	ldr	r1, [sp, #16]
 8016b54:	8812      	ldrh	r2, [r2, #0]
 8016b56:	1a52      	subs	r2, r2, r1
 8016b58:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016b5c:	9a08      	ldr	r2, [sp, #32]
 8016b5e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8016b60:	3201      	adds	r2, #1
 8016b62:	428a      	cmp	r2, r1
 8016b64:	9208      	str	r2, [sp, #32]
 8016b66:	f040 8092 	bne.w	8016c8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8016b6a:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8016b6e:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8016b72:	9b04      	ldr	r3, [sp, #16]
 8016b74:	eba5 050c 	sub.w	r5, r5, ip
 8016b78:	b2ad      	uxth	r5, r5
 8016b7a:	2d00      	cmp	r5, #0
 8016b7c:	bf08      	it	eq
 8016b7e:	4619      	moveq	r1, r3
 8016b80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016b82:	bf18      	it	ne
 8016b84:	2100      	movne	r1, #0
 8016b86:	3301      	adds	r3, #1
 8016b88:	930d      	str	r3, [sp, #52]	; 0x34
 8016b8a:	b289      	uxth	r1, r1
 8016b8c:	e700      	b.n	8016990 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8016b8e:	bf00      	nop
 8016b90:	20014fc4 	.word	0x20014fc4
 8016b94:	20014fbe 	.word	0x20014fbe
 8016b98:	fffff7fb 	.word	0xfffff7fb
 8016b9c:	46d9      	mov	r9, fp
 8016b9e:	9d00      	ldr	r5, [sp, #0]
 8016ba0:	42aa      	cmp	r2, r5
 8016ba2:	d0d0      	beq.n	8016b46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8016ba4:	1c55      	adds	r5, r2, #1
 8016ba6:	4422      	add	r2, r4
 8016ba8:	9517      	str	r5, [sp, #92]	; 0x5c
 8016baa:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8016bae:	9a06      	ldr	r2, [sp, #24]
 8016bb0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016bb4:	4472      	add	r2, lr
 8016bb6:	9212      	str	r2, [sp, #72]	; 0x48
 8016bb8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8016bba:	f8b9 2000 	ldrh.w	r2, [r9]
 8016bbe:	f897 a002 	ldrb.w	sl, [r7, #2]
 8016bc2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016bc4:	1216      	asrs	r6, r2, #8
 8016bc6:	fb1a fa07 	smulbb	sl, sl, r7
 8016bca:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016bce:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016bd0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016bd4:	fb06 a607 	mla	r6, r6, r7, sl
 8016bd8:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8016bda:	f897 a001 	ldrb.w	sl, [r7, #1]
 8016bde:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016be0:	10d5      	asrs	r5, r2, #3
 8016be2:	fb1a fa07 	smulbb	sl, sl, r7
 8016be6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016bea:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016bec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016bf0:	fb05 a507 	mla	r5, r5, r7, sl
 8016bf4:	9f06      	ldr	r7, [sp, #24]
 8016bf6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8016bfa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8016bfc:	00d2      	lsls	r2, r2, #3
 8016bfe:	fb1e fe07 	smulbb	lr, lr, r7
 8016c02:	b2d2      	uxtb	r2, r2
 8016c04:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016c06:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016c0a:	b2b6      	uxth	r6, r6
 8016c0c:	fb02 e207 	mla	r2, r2, r7, lr
 8016c10:	b292      	uxth	r2, r2
 8016c12:	b2ad      	uxth	r5, r5
 8016c14:	f106 0a01 	add.w	sl, r6, #1
 8016c18:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8016c1c:	f102 0e01 	add.w	lr, r2, #1
 8016c20:	f105 0a01 	add.w	sl, r5, #1
 8016c24:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8016c28:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016c2c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016c30:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016c34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016c38:	ea4e 0606 	orr.w	r6, lr, r6
 8016c3c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016c40:	ea46 060a 	orr.w	r6, r6, sl
 8016c44:	f829 6b02 	strh.w	r6, [r9], #2
 8016c48:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8016c4c:	e7a7      	b.n	8016b9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8016c4e:	f102 0e01 	add.w	lr, r2, #1
 8016c52:	4422      	add	r2, r4
 8016c54:	9f06      	ldr	r7, [sp, #24]
 8016c56:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8016c5a:	9a06      	ldr	r2, [sp, #24]
 8016c5c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016c60:	eb02 0a05 	add.w	sl, r2, r5
 8016c64:	4a13      	ldr	r2, [pc, #76]	; (8016cb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8016c66:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8016c6a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8016c6e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016c72:	00d2      	lsls	r2, r2, #3
 8016c74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016c78:	ea49 0202 	orr.w	r2, r9, r2
 8016c7c:	f817 9005 	ldrb.w	r9, [r7, r5]
 8016c80:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8016c84:	f826 2b02 	strh.w	r2, [r6], #2
 8016c88:	fa1f f28e 	uxth.w	r2, lr
 8016c8c:	e757      	b.n	8016b3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8016c8e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8016c92:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8016c96:	1a2d      	subs	r5, r5, r0
 8016c98:	b2ad      	uxth	r5, r5
 8016c9a:	2d00      	cmp	r5, #0
 8016c9c:	bf18      	it	ne
 8016c9e:	2000      	movne	r0, #0
 8016ca0:	e730      	b.n	8016b04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8016ca2:	4b05      	ldr	r3, [pc, #20]	; (8016cb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8016ca4:	6818      	ldr	r0, [r3, #0]
 8016ca6:	6803      	ldr	r3, [r0, #0]
 8016ca8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016caa:	4798      	blx	r3
 8016cac:	b01f      	add	sp, #124	; 0x7c
 8016cae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016cb2:	bf00      	nop
 8016cb4:	fffff800 	.word	0xfffff800
 8016cb8:	20014fc4 	.word	0x20014fc4

08016cbc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8016cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cc0:	b091      	sub	sp, #68	; 0x44
 8016cc2:	469b      	mov	fp, r3
 8016cc4:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8016cc8:	4616      	mov	r6, r2
 8016cca:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8016cce:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016cd2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8016cd6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8016cda:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016cde:	4604      	mov	r4, r0
 8016ce0:	460d      	mov	r5, r1
 8016ce2:	4640      	mov	r0, r8
 8016ce4:	4659      	mov	r1, fp
 8016ce6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016cea:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8016cee:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8016cf2:	f7f5 f885 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 8016cf6:	4631      	mov	r1, r6
 8016cf8:	4640      	mov	r0, r8
 8016cfa:	f7f5 f881 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 8016cfe:	4b74      	ldr	r3, [pc, #464]	; (8016ed0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8016d00:	8818      	ldrh	r0, [r3, #0]
 8016d02:	4b74      	ldr	r3, [pc, #464]	; (8016ed4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8016d04:	8819      	ldrh	r1, [r3, #0]
 8016d06:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016d0a:	2b00      	cmp	r3, #0
 8016d0c:	b202      	sxth	r2, r0
 8016d0e:	b20e      	sxth	r6, r1
 8016d10:	da07      	bge.n	8016d22 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8016d12:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016d16:	4463      	add	r3, ip
 8016d18:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8016d1c:	2300      	movs	r3, #0
 8016d1e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8016d22:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8016d26:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8016d2a:	1ad2      	subs	r2, r2, r3
 8016d2c:	4594      	cmp	ip, r2
 8016d2e:	bfc4      	itt	gt
 8016d30:	1ac2      	subgt	r2, r0, r3
 8016d32:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8016d36:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016d3a:	2a00      	cmp	r2, #0
 8016d3c:	da07      	bge.n	8016d4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8016d3e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8016d42:	4462      	add	r2, ip
 8016d44:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016d48:	2200      	movs	r2, #0
 8016d4a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8016d4e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8016d52:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8016d56:	eba6 060a 	sub.w	r6, r6, sl
 8016d5a:	42b2      	cmp	r2, r6
 8016d5c:	bfc4      	itt	gt
 8016d5e:	eba1 020a 	subgt.w	r2, r1, sl
 8016d62:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8016d66:	4a5c      	ldr	r2, [pc, #368]	; (8016ed8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8016d68:	7812      	ldrb	r2, [r2, #0]
 8016d6a:	b9a2      	cbnz	r2, 8016d96 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8016d6c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8016d70:	4286      	cmp	r6, r0
 8016d72:	4640      	mov	r0, r8
 8016d74:	9303      	str	r3, [sp, #12]
 8016d76:	bf14      	ite	ne
 8016d78:	2600      	movne	r6, #0
 8016d7a:	2601      	moveq	r6, #1
 8016d7c:	f7f5 f883 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016d80:	9b03      	ldr	r3, [sp, #12]
 8016d82:	b160      	cbz	r0, 8016d9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8016d84:	2300      	movs	r3, #0
 8016d86:	8023      	strh	r3, [r4, #0]
 8016d88:	8063      	strh	r3, [r4, #2]
 8016d8a:	80a3      	strh	r3, [r4, #4]
 8016d8c:	4620      	mov	r0, r4
 8016d8e:	80e3      	strh	r3, [r4, #6]
 8016d90:	b011      	add	sp, #68	; 0x44
 8016d92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d96:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8016d9a:	428e      	cmp	r6, r1
 8016d9c:	e7e9      	b.n	8016d72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8016d9e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8016da2:	9205      	str	r2, [sp, #20]
 8016da4:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8016da8:	9206      	str	r2, [sp, #24]
 8016daa:	f8bb 2000 	ldrh.w	r2, [fp]
 8016dae:	900e      	str	r0, [sp, #56]	; 0x38
 8016db0:	1a9b      	subs	r3, r3, r2
 8016db2:	b21b      	sxth	r3, r3
 8016db4:	9303      	str	r3, [sp, #12]
 8016db6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8016dba:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8016dbe:	ebaa 0a03 	sub.w	sl, sl, r3
 8016dc2:	fa0f f38a 	sxth.w	r3, sl
 8016dc6:	9304      	str	r3, [sp, #16]
 8016dc8:	9b03      	ldr	r3, [sp, #12]
 8016dca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8016dce:	9b04      	ldr	r3, [sp, #16]
 8016dd0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016dd4:	9b05      	ldr	r3, [sp, #20]
 8016dd6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8016dda:	a90e      	add	r1, sp, #56	; 0x38
 8016ddc:	9b06      	ldr	r3, [sp, #24]
 8016dde:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016de2:	a80c      	add	r0, sp, #48	; 0x30
 8016de4:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8016de8:	f7f8 fca6 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016dec:	4640      	mov	r0, r8
 8016dee:	f7f8 fc5f 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016df2:	a80e      	add	r0, sp, #56	; 0x38
 8016df4:	f7f8 fc5c 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016df8:	4b38      	ldr	r3, [pc, #224]	; (8016edc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8016dfa:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8016dfe:	881b      	ldrh	r3, [r3, #0]
 8016e00:	9307      	str	r3, [sp, #28]
 8016e02:	682b      	ldr	r3, [r5, #0]
 8016e04:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8016ee0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8016e08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016e0a:	4628      	mov	r0, r5
 8016e0c:	4798      	blx	r3
 8016e0e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8016e12:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8016e16:	4681      	mov	r9, r0
 8016e18:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8016e1c:	f8db 0000 	ldr.w	r0, [fp]
 8016e20:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8016e22:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8016e26:	6803      	ldr	r3, [r0, #0]
 8016e28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016e2a:	4798      	blx	r3
 8016e2c:	4607      	mov	r7, r0
 8016e2e:	f8db 0000 	ldr.w	r0, [fp]
 8016e32:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8016e36:	6803      	ldr	r3, [r0, #0]
 8016e38:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8016e3c:	9109      	str	r1, [sp, #36]	; 0x24
 8016e3e:	9208      	str	r2, [sp, #32]
 8016e40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016e42:	4798      	blx	r3
 8016e44:	f010 0f01 	tst.w	r0, #1
 8016e48:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016e4c:	d012      	beq.n	8016e74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8016e4e:	f8db 0000 	ldr.w	r0, [fp]
 8016e52:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8016e56:	6803      	ldr	r3, [r0, #0]
 8016e58:	9200      	str	r2, [sp, #0]
 8016e5a:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8016e5c:	e898 0006 	ldmia.w	r8, {r1, r2}
 8016e60:	462b      	mov	r3, r5
 8016e62:	47b0      	blx	r6
 8016e64:	9b03      	ldr	r3, [sp, #12]
 8016e66:	8023      	strh	r3, [r4, #0]
 8016e68:	9b04      	ldr	r3, [sp, #16]
 8016e6a:	8063      	strh	r3, [r4, #2]
 8016e6c:	9b05      	ldr	r3, [sp, #20]
 8016e6e:	80a3      	strh	r3, [r4, #4]
 8016e70:	9b06      	ldr	r3, [sp, #24]
 8016e72:	e78b      	b.n	8016d8c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8016e74:	fb09 f202 	mul.w	r2, r9, r2
 8016e78:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8016e7c:	440f      	add	r7, r1
 8016e7e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8016e82:	b166      	cbz	r6, 8016e9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8016e84:	9a07      	ldr	r2, [sp, #28]
 8016e86:	4592      	cmp	sl, r2
 8016e88:	d109      	bne.n	8016e9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8016e8a:	f8db 0000 	ldr.w	r0, [fp]
 8016e8e:	6802      	ldr	r2, [r0, #0]
 8016e90:	fb09 f303 	mul.w	r3, r9, r3
 8016e94:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8016e96:	4629      	mov	r1, r5
 8016e98:	463a      	mov	r2, r7
 8016e9a:	47b0      	blx	r6
 8016e9c:	e7e2      	b.n	8016e64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8016e9e:	fb0a f303 	mul.w	r3, sl, r3
 8016ea2:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8016ee0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8016ea6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8016eaa:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8016eae:	4545      	cmp	r5, r8
 8016eb0:	d2d8      	bcs.n	8016e64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8016eb2:	f8db 0000 	ldr.w	r0, [fp]
 8016eb6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8016eba:	6802      	ldr	r2, [r0, #0]
 8016ebc:	4629      	mov	r1, r5
 8016ebe:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8016ec2:	005b      	lsls	r3, r3, #1
 8016ec4:	463a      	mov	r2, r7
 8016ec6:	47d0      	blx	sl
 8016ec8:	444f      	add	r7, r9
 8016eca:	4435      	add	r5, r6
 8016ecc:	e7ef      	b.n	8016eae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8016ece:	bf00      	nop
 8016ed0:	20014fb8 	.word	0x20014fb8
 8016ed4:	20014fba 	.word	0x20014fba
 8016ed8:	20014fbc 	.word	0x20014fbc
 8016edc:	20014fbe 	.word	0x20014fbe
 8016ee0:	20014fc4 	.word	0x20014fc4

08016ee4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8016ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016ee6:	4606      	mov	r6, r0
 8016ee8:	b087      	sub	sp, #28
 8016eea:	460c      	mov	r4, r1
 8016eec:	4617      	mov	r7, r2
 8016eee:	461d      	mov	r5, r3
 8016ef0:	b333      	cbz	r3, 8016f40 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016ef2:	4608      	mov	r0, r1
 8016ef4:	f7f4 ffc7 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016ef8:	bb10      	cbnz	r0, 8016f40 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016efa:	6820      	ldr	r0, [r4, #0]
 8016efc:	6861      	ldr	r1, [r4, #4]
 8016efe:	4c1c      	ldr	r4, [pc, #112]	; (8016f70 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8016f00:	ab04      	add	r3, sp, #16
 8016f02:	c303      	stmia	r3!, {r0, r1}
 8016f04:	a804      	add	r0, sp, #16
 8016f06:	f7f8 fbd3 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f0a:	6820      	ldr	r0, [r4, #0]
 8016f0c:	6803      	ldr	r3, [r0, #0]
 8016f0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f10:	4798      	blx	r3
 8016f12:	2dff      	cmp	r5, #255	; 0xff
 8016f14:	d016      	beq.n	8016f44 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8016f16:	f010 0f08 	tst.w	r0, #8
 8016f1a:	6820      	ldr	r0, [r4, #0]
 8016f1c:	d015      	beq.n	8016f4a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8016f1e:	2400      	movs	r4, #0
 8016f20:	6801      	ldr	r1, [r0, #0]
 8016f22:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016f26:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016f2a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8016f2e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8016f32:	9401      	str	r4, [sp, #4]
 8016f34:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8016f38:	9400      	str	r4, [sp, #0]
 8016f3a:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8016f3c:	4639      	mov	r1, r7
 8016f3e:	47a0      	blx	r4
 8016f40:	b007      	add	sp, #28
 8016f42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016f44:	f010 0f02 	tst.w	r0, #2
 8016f48:	e7e7      	b.n	8016f1a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8016f4a:	6803      	ldr	r3, [r0, #0]
 8016f4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016f4e:	4798      	blx	r3
 8016f50:	4b08      	ldr	r3, [pc, #32]	; (8016f74 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8016f52:	881a      	ldrh	r2, [r3, #0]
 8016f54:	6833      	ldr	r3, [r6, #0]
 8016f56:	e9cd 7500 	strd	r7, r5, [sp]
 8016f5a:	4601      	mov	r1, r0
 8016f5c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8016f5e:	4630      	mov	r0, r6
 8016f60:	ab04      	add	r3, sp, #16
 8016f62:	47a8      	blx	r5
 8016f64:	6820      	ldr	r0, [r4, #0]
 8016f66:	6803      	ldr	r3, [r0, #0]
 8016f68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016f6a:	4798      	blx	r3
 8016f6c:	e7e8      	b.n	8016f40 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8016f6e:	bf00      	nop
 8016f70:	20014fc4 	.word	0x20014fc4
 8016f74:	20014fbe 	.word	0x20014fbe

08016f78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8016f78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016f7c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8016f80:	9e08      	ldr	r6, [sp, #32]
 8016f82:	4688      	mov	r8, r1
 8016f84:	4614      	mov	r4, r2
 8016f86:	461d      	mov	r5, r3
 8016f88:	2f00      	cmp	r7, #0
 8016f8a:	f000 80a9 	beq.w	80170e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016f8e:	4618      	mov	r0, r3
 8016f90:	f7f4 ff79 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016f94:	2800      	cmp	r0, #0
 8016f96:	f040 80a3 	bne.w	80170e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016f9a:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016f9e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016fa2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8016fa6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8016faa:	fb04 1303 	mla	r3, r4, r3, r1
 8016fae:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8016fb2:	4365      	muls	r5, r4
 8016fb4:	2fff      	cmp	r7, #255	; 0xff
 8016fb6:	eba4 0200 	sub.w	r2, r4, r0
 8016fba:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8016fbe:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8016fc2:	d04a      	beq.n	801705a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8016fc4:	b2bc      	uxth	r4, r7
 8016fc6:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8016fca:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8016fce:	fa5f f788 	uxtb.w	r7, r8
 8016fd2:	b2f3      	uxtb	r3, r6
 8016fd4:	0040      	lsls	r0, r0, #1
 8016fd6:	fb0e fe04 	mul.w	lr, lr, r4
 8016fda:	4367      	muls	r7, r4
 8016fdc:	4363      	muls	r3, r4
 8016fde:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8016fe2:	fa1f fc8c 	uxth.w	ip, ip
 8016fe6:	42a9      	cmp	r1, r5
 8016fe8:	d27a      	bcs.n	80170e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016fea:	eb01 0900 	add.w	r9, r1, r0
 8016fee:	4549      	cmp	r1, r9
 8016ff0:	d231      	bcs.n	8017056 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8016ff2:	880a      	ldrh	r2, [r1, #0]
 8016ff4:	1214      	asrs	r4, r2, #8
 8016ff6:	10d6      	asrs	r6, r2, #3
 8016ff8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8016ffc:	00d2      	lsls	r2, r2, #3
 8016ffe:	b2d2      	uxtb	r2, r2
 8017000:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017004:	fb14 f40c 	smulbb	r4, r4, ip
 8017008:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801700c:	4474      	add	r4, lr
 801700e:	fb12 f20c 	smulbb	r2, r2, ip
 8017012:	b2a4      	uxth	r4, r4
 8017014:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017018:	441a      	add	r2, r3
 801701a:	b292      	uxth	r2, r2
 801701c:	f104 0a01 	add.w	sl, r4, #1
 8017020:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017024:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017028:	fb16 f60c 	smulbb	r6, r6, ip
 801702c:	f102 0a01 	add.w	sl, r2, #1
 8017030:	443e      	add	r6, r7
 8017032:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017036:	b2b6      	uxth	r6, r6
 8017038:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801703c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017040:	4322      	orrs	r2, r4
 8017042:	1c74      	adds	r4, r6, #1
 8017044:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017048:	0976      	lsrs	r6, r6, #5
 801704a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801704e:	4332      	orrs	r2, r6
 8017050:	f821 2b02 	strh.w	r2, [r1], #2
 8017054:	e7cb      	b.n	8016fee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017056:	4441      	add	r1, r8
 8017058:	e7c5      	b.n	8016fe6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801705a:	4f22      	ldr	r7, [pc, #136]	; (80170e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801705c:	0973      	lsrs	r3, r6, #5
 801705e:	ea08 0707 	and.w	r7, r8, r7
 8017062:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017066:	433b      	orrs	r3, r7
 8017068:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801706c:	4333      	orrs	r3, r6
 801706e:	07e7      	lsls	r7, r4, #31
 8017070:	b29b      	uxth	r3, r3
 8017072:	d50b      	bpl.n	801708c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017074:	0040      	lsls	r0, r0, #1
 8017076:	0052      	lsls	r2, r2, #1
 8017078:	42a9      	cmp	r1, r5
 801707a:	d231      	bcs.n	80170e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801707c:	180c      	adds	r4, r1, r0
 801707e:	42a1      	cmp	r1, r4
 8017080:	d202      	bcs.n	8017088 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017082:	f821 3b02 	strh.w	r3, [r1], #2
 8017086:	e7fa      	b.n	801707e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017088:	4411      	add	r1, r2
 801708a:	e7f5      	b.n	8017078 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801708c:	078e      	lsls	r6, r1, #30
 801708e:	d008      	beq.n	80170a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017090:	0066      	lsls	r6, r4, #1
 8017092:	460a      	mov	r2, r1
 8017094:	42aa      	cmp	r2, r5
 8017096:	d202      	bcs.n	801709e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017098:	8013      	strh	r3, [r2, #0]
 801709a:	4432      	add	r2, r6
 801709c:	e7fa      	b.n	8017094 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801709e:	3102      	adds	r1, #2
 80170a0:	3801      	subs	r0, #1
 80170a2:	07c2      	lsls	r2, r0, #31
 80170a4:	d50b      	bpl.n	80170be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80170a6:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80170aa:	3a01      	subs	r2, #1
 80170ac:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80170b0:	0066      	lsls	r6, r4, #1
 80170b2:	42aa      	cmp	r2, r5
 80170b4:	d202      	bcs.n	80170bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80170b6:	8013      	strh	r3, [r2, #0]
 80170b8:	4432      	add	r2, r6
 80170ba:	e7fa      	b.n	80170b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80170bc:	3801      	subs	r0, #1
 80170be:	b178      	cbz	r0, 80170e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80170c0:	1040      	asrs	r0, r0, #1
 80170c2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80170c6:	0080      	lsls	r0, r0, #2
 80170c8:	0064      	lsls	r4, r4, #1
 80170ca:	42a9      	cmp	r1, r5
 80170cc:	d208      	bcs.n	80170e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80170ce:	180e      	adds	r6, r1, r0
 80170d0:	460a      	mov	r2, r1
 80170d2:	42b2      	cmp	r2, r6
 80170d4:	d202      	bcs.n	80170dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80170d6:	f842 3b04 	str.w	r3, [r2], #4
 80170da:	e7fa      	b.n	80170d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80170dc:	4421      	add	r1, r4
 80170de:	e7f4      	b.n	80170ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80170e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80170e4:	00fff800 	.word	0x00fff800

080170e8 <_ZN8touchgfx8LCD16bppC1Ev>:
 80170e8:	2200      	movs	r2, #0
 80170ea:	4912      	ldr	r1, [pc, #72]	; (8017134 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80170ec:	6042      	str	r2, [r0, #4]
 80170ee:	6001      	str	r1, [r0, #0]
 80170f0:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80170f4:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80170f8:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80170fc:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017100:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017104:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8017108:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801710c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017110:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017114:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8017118:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801711c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017120:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017124:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8017128:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801712c:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8017130:	4770      	bx	lr
 8017132:	bf00      	nop
 8017134:	080237a8 	.word	0x080237a8

08017138 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801713c:	460d      	mov	r5, r1
 801713e:	b08d      	sub	sp, #52	; 0x34
 8017140:	4604      	mov	r4, r0
 8017142:	6808      	ldr	r0, [r1, #0]
 8017144:	6849      	ldr	r1, [r1, #4]
 8017146:	4699      	mov	r9, r3
 8017148:	ab08      	add	r3, sp, #32
 801714a:	c303      	stmia	r3!, {r0, r1}
 801714c:	6810      	ldr	r0, [r2, #0]
 801714e:	6851      	ldr	r1, [r2, #4]
 8017150:	ab0a      	add	r3, sp, #40	; 0x28
 8017152:	c303      	stmia	r3!, {r0, r1}
 8017154:	a808      	add	r0, sp, #32
 8017156:	f7f8 faab 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801715a:	4629      	mov	r1, r5
 801715c:	a80a      	add	r0, sp, #40	; 0x28
 801715e:	f7f8 faeb 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017162:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017166:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801716a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801716e:	4d63      	ldr	r5, [pc, #396]	; (80172fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017170:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017174:	6828      	ldr	r0, [r5, #0]
 8017176:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801717a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801717e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017182:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017186:	440a      	add	r2, r1
 8017188:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801718c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017190:	4413      	add	r3, r2
 8017192:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017196:	6803      	ldr	r3, [r0, #0]
 8017198:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801719a:	4798      	blx	r3
 801719c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80171a0:	d119      	bne.n	80171d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80171a2:	f010 0f20 	tst.w	r0, #32
 80171a6:	6828      	ldr	r0, [r5, #0]
 80171a8:	d018      	beq.n	80171dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80171aa:	2500      	movs	r5, #0
 80171ac:	6801      	ldr	r1, [r0, #0]
 80171ae:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80171b2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80171b6:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80171ba:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80171be:	9502      	str	r5, [sp, #8]
 80171c0:	b2b6      	uxth	r6, r6
 80171c2:	fa1f f588 	uxth.w	r5, r8
 80171c6:	9601      	str	r6, [sp, #4]
 80171c8:	9500      	str	r5, [sp, #0]
 80171ca:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80171cc:	4621      	mov	r1, r4
 80171ce:	47a8      	blx	r5
 80171d0:	b00d      	add	sp, #52	; 0x34
 80171d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171d6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80171da:	e7e4      	b.n	80171a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80171dc:	6803      	ldr	r3, [r0, #0]
 80171de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80171e0:	4798      	blx	r3
 80171e2:	4947      	ldr	r1, [pc, #284]	; (8017300 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80171e4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80171e8:	880b      	ldrh	r3, [r1, #0]
 80171ea:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80171ee:	fb03 5202 	mla	r2, r3, r2, r5
 80171f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80171f6:	4373      	muls	r3, r6
 80171f8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80171fc:	9307      	str	r3, [sp, #28]
 80171fe:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017202:	9306      	str	r3, [sp, #24]
 8017204:	468a      	mov	sl, r1
 8017206:	9b07      	ldr	r3, [sp, #28]
 8017208:	4298      	cmp	r0, r3
 801720a:	d270      	bcs.n	80172ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801720c:	9b06      	ldr	r3, [sp, #24]
 801720e:	4621      	mov	r1, r4
 8017210:	eb00 0b03 	add.w	fp, r0, r3
 8017214:	4558      	cmp	r0, fp
 8017216:	d25d      	bcs.n	80172d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017218:	f851 4b04 	ldr.w	r4, [r1], #4
 801721c:	0e23      	lsrs	r3, r4, #24
 801721e:	d014      	beq.n	801724a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017220:	2bff      	cmp	r3, #255	; 0xff
 8017222:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017226:	d112      	bne.n	801724e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017228:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801722c:	d10f      	bne.n	801724e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801722e:	0963      	lsrs	r3, r4, #5
 8017230:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017234:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017238:	f02c 0c07 	bic.w	ip, ip, #7
 801723c:	ea43 0c0c 	orr.w	ip, r3, ip
 8017240:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017244:	ea4c 0404 	orr.w	r4, ip, r4
 8017248:	8004      	strh	r4, [r0, #0]
 801724a:	3002      	adds	r0, #2
 801724c:	e7e2      	b.n	8017214 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801724e:	fb09 f303 	mul.w	r3, r9, r3
 8017252:	8807      	ldrh	r7, [r0, #0]
 8017254:	1c5a      	adds	r2, r3, #1
 8017256:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801725a:	1212      	asrs	r2, r2, #8
 801725c:	123e      	asrs	r6, r7, #8
 801725e:	b293      	uxth	r3, r2
 8017260:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017264:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017268:	43d2      	mvns	r2, r2
 801726a:	b2d2      	uxtb	r2, r2
 801726c:	10fd      	asrs	r5, r7, #3
 801726e:	fb1e fe03 	smulbb	lr, lr, r3
 8017272:	00ff      	lsls	r7, r7, #3
 8017274:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017278:	fb06 e602 	mla	r6, r6, r2, lr
 801727c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017280:	b2ff      	uxtb	r7, r7
 8017282:	fa5f fc8c 	uxtb.w	ip, ip
 8017286:	b2e4      	uxtb	r4, r4
 8017288:	b2b6      	uxth	r6, r6
 801728a:	fb1c fc03 	smulbb	ip, ip, r3
 801728e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017292:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017296:	fb14 f403 	smulbb	r4, r4, r3
 801729a:	fb05 c502 	mla	r5, r5, r2, ip
 801729e:	f106 0e01 	add.w	lr, r6, #1
 80172a2:	fb07 4702 	mla	r7, r7, r2, r4
 80172a6:	b2ad      	uxth	r5, r5
 80172a8:	b2bf      	uxth	r7, r7
 80172aa:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80172ae:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 80172b2:	f105 0c01 	add.w	ip, r5, #1
 80172b6:	1c7e      	adds	r6, r7, #1
 80172b8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80172bc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80172c0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80172c4:	096d      	lsrs	r5, r5, #5
 80172c6:	ea46 060e 	orr.w	r6, r6, lr
 80172ca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80172ce:	432e      	orrs	r6, r5
 80172d0:	8006      	strh	r6, [r0, #0]
 80172d2:	e7ba      	b.n	801724a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80172d4:	f8ba 3000 	ldrh.w	r3, [sl]
 80172d8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80172dc:	eba3 0308 	sub.w	r3, r3, r8
 80172e0:	eba4 0408 	sub.w	r4, r4, r8
 80172e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80172e8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80172ec:	e78b      	b.n	8017206 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80172ee:	4b03      	ldr	r3, [pc, #12]	; (80172fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80172f0:	6818      	ldr	r0, [r3, #0]
 80172f2:	6803      	ldr	r3, [r0, #0]
 80172f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80172f6:	4798      	blx	r3
 80172f8:	e76a      	b.n	80171d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80172fa:	bf00      	nop
 80172fc:	20014fc4 	.word	0x20014fc4
 8017300:	20014fbe 	.word	0x20014fbe

08017304 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017304:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017308:	460c      	mov	r4, r1
 801730a:	b085      	sub	sp, #20
 801730c:	6810      	ldr	r0, [r2, #0]
 801730e:	6851      	ldr	r1, [r2, #4]
 8017310:	466d      	mov	r5, sp
 8017312:	c503      	stmia	r5!, {r0, r1}
 8017314:	6818      	ldr	r0, [r3, #0]
 8017316:	6859      	ldr	r1, [r3, #4]
 8017318:	4616      	mov	r6, r2
 801731a:	c503      	stmia	r5!, {r0, r1}
 801731c:	4668      	mov	r0, sp
 801731e:	f7f8 f9c7 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017322:	4631      	mov	r1, r6
 8017324:	a802      	add	r0, sp, #8
 8017326:	f7f8 fa07 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801732a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801732e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017332:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017336:	4d28      	ldr	r5, [pc, #160]	; (80173d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017338:	4e28      	ldr	r6, [pc, #160]	; (80173dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801733a:	6828      	ldr	r0, [r5, #0]
 801733c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017340:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017344:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017348:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801734c:	f8bd 1000 	ldrh.w	r1, [sp]
 8017350:	440a      	add	r2, r1
 8017352:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017356:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801735a:	4413      	add	r3, r2
 801735c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017360:	6803      	ldr	r3, [r0, #0]
 8017362:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017364:	4798      	blx	r3
 8017366:	8833      	ldrh	r3, [r6, #0]
 8017368:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801736c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017370:	f8df e06c 	ldr.w	lr, [pc, #108]	; 80173e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017374:	fb03 1202 	mla	r2, r3, r2, r1
 8017378:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801737c:	fb08 f303 	mul.w	r3, r8, r3
 8017380:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017384:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017388:	4298      	cmp	r0, r3
 801738a:	d21d      	bcs.n	80173c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801738c:	eb00 080c 	add.w	r8, r0, ip
 8017390:	4540      	cmp	r0, r8
 8017392:	d20f      	bcs.n	80173b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017394:	f854 1b04 	ldr.w	r1, [r4], #4
 8017398:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801739c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80173a0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80173a4:	ea42 0209 	orr.w	r2, r2, r9
 80173a8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80173ac:	430a      	orrs	r2, r1
 80173ae:	f820 2b02 	strh.w	r2, [r0], #2
 80173b2:	e7ed      	b.n	8017390 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80173b4:	8832      	ldrh	r2, [r6, #0]
 80173b6:	1bd2      	subs	r2, r2, r7
 80173b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80173bc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80173c0:	1bd2      	subs	r2, r2, r7
 80173c2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80173c6:	e7df      	b.n	8017388 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80173c8:	6828      	ldr	r0, [r5, #0]
 80173ca:	6803      	ldr	r3, [r0, #0]
 80173cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80173ce:	4798      	blx	r3
 80173d0:	b005      	add	sp, #20
 80173d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80173d6:	bf00      	nop
 80173d8:	20014fc4 	.word	0x20014fc4
 80173dc:	20014fbe 	.word	0x20014fbe
 80173e0:	fffff800 	.word	0xfffff800

080173e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80173e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80173e8:	460e      	mov	r6, r1
 80173ea:	b08e      	sub	sp, #56	; 0x38
 80173ec:	4604      	mov	r4, r0
 80173ee:	6808      	ldr	r0, [r1, #0]
 80173f0:	6849      	ldr	r1, [r1, #4]
 80173f2:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80175cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80173f6:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 80175d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80173fa:	461d      	mov	r5, r3
 80173fc:	ab0a      	add	r3, sp, #40	; 0x28
 80173fe:	c303      	stmia	r3!, {r0, r1}
 8017400:	6810      	ldr	r0, [r2, #0]
 8017402:	6851      	ldr	r1, [r2, #4]
 8017404:	ab0c      	add	r3, sp, #48	; 0x30
 8017406:	c303      	stmia	r3!, {r0, r1}
 8017408:	a80a      	add	r0, sp, #40	; 0x28
 801740a:	f7f8 f951 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801740e:	4631      	mov	r1, r6
 8017410:	a80c      	add	r0, sp, #48	; 0x30
 8017412:	f7f8 f991 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017416:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801741a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801741e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017422:	f8d8 0000 	ldr.w	r0, [r8]
 8017426:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801742a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801742e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017432:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017436:	440c      	add	r4, r1
 8017438:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801743c:	440a      	add	r2, r1
 801743e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017442:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017446:	4413      	add	r3, r2
 8017448:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801744c:	6803      	ldr	r3, [r0, #0]
 801744e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017450:	4798      	blx	r3
 8017452:	2dff      	cmp	r5, #255	; 0xff
 8017454:	d124      	bne.n	80174a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017456:	f010 0f01 	tst.w	r0, #1
 801745a:	f8d8 0000 	ldr.w	r0, [r8]
 801745e:	d022      	beq.n	80174a6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017460:	2100      	movs	r1, #0
 8017462:	f8d0 c000 	ldr.w	ip, [r0]
 8017466:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801746a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801746e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017472:	f04f 0e01 	mov.w	lr, #1
 8017476:	f8cd e018 	str.w	lr, [sp, #24]
 801747a:	f8b9 e000 	ldrh.w	lr, [r9]
 801747e:	9503      	str	r5, [sp, #12]
 8017480:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017484:	b2b6      	uxth	r6, r6
 8017486:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801748a:	9102      	str	r1, [sp, #8]
 801748c:	b2bf      	uxth	r7, r7
 801748e:	9601      	str	r6, [sp, #4]
 8017490:	9700      	str	r7, [sp, #0]
 8017492:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017496:	4621      	mov	r1, r4
 8017498:	47a8      	blx	r5
 801749a:	b00e      	add	sp, #56	; 0x38
 801749c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80174a0:	f010 0f04 	tst.w	r0, #4
 80174a4:	e7d9      	b.n	801745a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80174a6:	6803      	ldr	r3, [r0, #0]
 80174a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80174aa:	4798      	blx	r3
 80174ac:	f8b9 3000 	ldrh.w	r3, [r9]
 80174b0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80174b4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 80174b8:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80174bc:	fb03 1202 	mla	r2, r3, r2, r1
 80174c0:	ebac 0c07 	sub.w	ip, ip, r7
 80174c4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80174c8:	435e      	muls	r6, r3
 80174ca:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80174ce:	2dff      	cmp	r5, #255	; 0xff
 80174d0:	eba3 0707 	sub.w	r7, r3, r7
 80174d4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80174d8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80174dc:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80174e0:	d049      	beq.n	8017576 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80174e2:	43eb      	mvns	r3, r5
 80174e4:	fa1f f985 	uxth.w	r9, r5
 80174e8:	b2db      	uxtb	r3, r3
 80174ea:	42b0      	cmp	r0, r6
 80174ec:	d266      	bcs.n	80175bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80174ee:	eb00 0a0e 	add.w	sl, r0, lr
 80174f2:	4550      	cmp	r0, sl
 80174f4:	4621      	mov	r1, r4
 80174f6:	f104 0403 	add.w	r4, r4, #3
 80174fa:	d25b      	bcs.n	80175b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80174fc:	8802      	ldrh	r2, [r0, #0]
 80174fe:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017502:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017506:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801750a:	fb11 f109 	smulbb	r1, r1, r9
 801750e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017512:	10d5      	asrs	r5, r2, #3
 8017514:	fb08 1803 	mla	r8, r8, r3, r1
 8017518:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801751c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017520:	fb11 f109 	smulbb	r1, r1, r9
 8017524:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017528:	fb05 1503 	mla	r5, r5, r3, r1
 801752c:	00d2      	lsls	r2, r2, #3
 801752e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017532:	b2d2      	uxtb	r2, r2
 8017534:	fb11 f109 	smulbb	r1, r1, r9
 8017538:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801753c:	fa1f f888 	uxth.w	r8, r8
 8017540:	fb02 1203 	mla	r2, r2, r3, r1
 8017544:	b292      	uxth	r2, r2
 8017546:	f108 0101 	add.w	r1, r8, #1
 801754a:	b2ad      	uxth	r5, r5
 801754c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017550:	1c51      	adds	r1, r2, #1
 8017552:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017556:	1c69      	adds	r1, r5, #1
 8017558:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801755c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017560:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017564:	096d      	lsrs	r5, r5, #5
 8017566:	ea42 0208 	orr.w	r2, r2, r8
 801756a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801756e:	432a      	orrs	r2, r5
 8017570:	f820 2b02 	strh.w	r2, [r0], #2
 8017574:	e7bd      	b.n	80174f2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017576:	4a14      	ldr	r2, [pc, #80]	; (80175c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017578:	42b0      	cmp	r0, r6
 801757a:	d21f      	bcs.n	80175bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801757c:	eb00 050e 	add.w	r5, r0, lr
 8017580:	42a8      	cmp	r0, r5
 8017582:	4621      	mov	r1, r4
 8017584:	f104 0403 	add.w	r4, r4, #3
 8017588:	d210      	bcs.n	80175ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801758a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801758e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017592:	00db      	lsls	r3, r3, #3
 8017594:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017598:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801759c:	430b      	orrs	r3, r1
 801759e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80175a2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80175a6:	f820 3b02 	strh.w	r3, [r0], #2
 80175aa:	e7e9      	b.n	8017580 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80175ac:	4438      	add	r0, r7
 80175ae:	eb01 040c 	add.w	r4, r1, ip
 80175b2:	e7e1      	b.n	8017578 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80175b4:	4438      	add	r0, r7
 80175b6:	eb01 040c 	add.w	r4, r1, ip
 80175ba:	e796      	b.n	80174ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80175bc:	4b03      	ldr	r3, [pc, #12]	; (80175cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80175be:	6818      	ldr	r0, [r3, #0]
 80175c0:	6803      	ldr	r3, [r0, #0]
 80175c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80175c4:	4798      	blx	r3
 80175c6:	e768      	b.n	801749a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80175c8:	fffff800 	.word	0xfffff800
 80175cc:	20014fc4 	.word	0x20014fc4
 80175d0:	20014fbe 	.word	0x20014fbe

080175d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80175d4:	b4f0      	push	{r4, r5, r6, r7}
 80175d6:	4616      	mov	r6, r2
 80175d8:	2e01      	cmp	r6, #1
 80175da:	461c      	mov	r4, r3
 80175dc:	460d      	mov	r5, r1
 80175de:	9a04      	ldr	r2, [sp, #16]
 80175e0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80175e4:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80175e8:	d012      	beq.n	8017610 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80175ea:	d303      	bcc.n	80175f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80175ec:	2e02      	cmp	r6, #2
 80175ee:	d00a      	beq.n	8017606 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80175f0:	bcf0      	pop	{r4, r5, r6, r7}
 80175f2:	4770      	bx	lr
 80175f4:	6805      	ldr	r5, [r0, #0]
 80175f6:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80175fa:	68ed      	ldr	r5, [r5, #12]
 80175fc:	4613      	mov	r3, r2
 80175fe:	46ac      	mov	ip, r5
 8017600:	4622      	mov	r2, r4
 8017602:	bcf0      	pop	{r4, r5, r6, r7}
 8017604:	4760      	bx	ip
 8017606:	4621      	mov	r1, r4
 8017608:	4628      	mov	r0, r5
 801760a:	bcf0      	pop	{r4, r5, r6, r7}
 801760c:	f7ff bd94 	b.w	8017138 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017610:	4621      	mov	r1, r4
 8017612:	4628      	mov	r0, r5
 8017614:	bcf0      	pop	{r4, r5, r6, r7}
 8017616:	f7ff bee5 	b.w	80173e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801761c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801761c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017620:	4681      	mov	r9, r0
 8017622:	b093      	sub	sp, #76	; 0x4c
 8017624:	6810      	ldr	r0, [r2, #0]
 8017626:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801762a:	4f6d      	ldr	r7, [pc, #436]	; (80177e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801762c:	4688      	mov	r8, r1
 801762e:	6851      	ldr	r1, [r2, #4]
 8017630:	ac0e      	add	r4, sp, #56	; 0x38
 8017632:	c403      	stmia	r4!, {r0, r1}
 8017634:	6818      	ldr	r0, [r3, #0]
 8017636:	6859      	ldr	r1, [r3, #4]
 8017638:	ac10      	add	r4, sp, #64	; 0x40
 801763a:	4616      	mov	r6, r2
 801763c:	c403      	stmia	r4!, {r0, r1}
 801763e:	a80e      	add	r0, sp, #56	; 0x38
 8017640:	f7f8 f836 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017644:	4631      	mov	r1, r6
 8017646:	a810      	add	r0, sp, #64	; 0x40
 8017648:	f7f8 f876 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801764c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017650:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017654:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017658:	4e62      	ldr	r6, [pc, #392]	; (80177e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801765a:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801765e:	6830      	ldr	r0, [r6, #0]
 8017660:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017664:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017668:	4489      	add	r9, r1
 801766a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801766e:	440a      	add	r2, r1
 8017670:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017674:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017678:	4413      	add	r3, r2
 801767a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801767e:	6803      	ldr	r3, [r0, #0]
 8017680:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017682:	4798      	blx	r3
 8017684:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017688:	6830      	ldr	r0, [r6, #0]
 801768a:	d01d      	beq.n	80176c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801768c:	2200      	movs	r2, #0
 801768e:	6801      	ldr	r1, [r0, #0]
 8017690:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017694:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017698:	220b      	movs	r2, #11
 801769a:	9207      	str	r2, [sp, #28]
 801769c:	883a      	ldrh	r2, [r7, #0]
 801769e:	9206      	str	r2, [sp, #24]
 80176a0:	2201      	movs	r2, #1
 80176a2:	e9cd a204 	strd	sl, r2, [sp, #16]
 80176a6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80176aa:	9203      	str	r2, [sp, #12]
 80176ac:	b2a4      	uxth	r4, r4
 80176ae:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80176b2:	9200      	str	r2, [sp, #0]
 80176b4:	b2ad      	uxth	r5, r5
 80176b6:	9502      	str	r5, [sp, #8]
 80176b8:	9401      	str	r4, [sp, #4]
 80176ba:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80176bc:	4642      	mov	r2, r8
 80176be:	4649      	mov	r1, r9
 80176c0:	47a0      	blx	r4
 80176c2:	b013      	add	sp, #76	; 0x4c
 80176c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176c8:	6803      	ldr	r3, [r0, #0]
 80176ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80176cc:	4798      	blx	r3
 80176ce:	883b      	ldrh	r3, [r7, #0]
 80176d0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80176d4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80176d8:	fb03 1202 	mla	r2, r3, r2, r1
 80176dc:	435d      	muls	r5, r3
 80176de:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80176e2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80176e6:	920c      	str	r2, [sp, #48]	; 0x30
 80176e8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 80176ec:	1b12      	subs	r2, r2, r4
 80176ee:	920d      	str	r2, [sp, #52]	; 0x34
 80176f0:	0062      	lsls	r2, r4, #1
 80176f2:	1b1c      	subs	r4, r3, r4
 80176f4:	0063      	lsls	r3, r4, #1
 80176f6:	920a      	str	r2, [sp, #40]	; 0x28
 80176f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80176fa:	f04f 0e04 	mov.w	lr, #4
 80176fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017700:	4298      	cmp	r0, r3
 8017702:	d266      	bcs.n	80177d2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017704:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017706:	eb00 0b03 	add.w	fp, r0, r3
 801770a:	4558      	cmp	r0, fp
 801770c:	d25c      	bcs.n	80177c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801770e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017712:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017716:	f858 2003 	ldr.w	r2, [r8, r3]
 801771a:	0e11      	lsrs	r1, r2, #24
 801771c:	d012      	beq.n	8017744 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801771e:	29ff      	cmp	r1, #255	; 0xff
 8017720:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017724:	d110      	bne.n	8017748 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017726:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801772a:	d10d      	bne.n	8017748 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801772c:	0953      	lsrs	r3, r2, #5
 801772e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017732:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017736:	f027 0707 	bic.w	r7, r7, #7
 801773a:	431f      	orrs	r7, r3
 801773c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017740:	433a      	orrs	r2, r7
 8017742:	8002      	strh	r2, [r0, #0]
 8017744:	3002      	adds	r0, #2
 8017746:	e7e0      	b.n	801770a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017748:	fb0a f101 	mul.w	r1, sl, r1
 801774c:	8806      	ldrh	r6, [r0, #0]
 801774e:	1c4b      	adds	r3, r1, #1
 8017750:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017754:	1235      	asrs	r5, r6, #8
 8017756:	10f4      	asrs	r4, r6, #3
 8017758:	121b      	asrs	r3, r3, #8
 801775a:	00f6      	lsls	r6, r6, #3
 801775c:	b299      	uxth	r1, r3
 801775e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017762:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017766:	b2f6      	uxtb	r6, r6
 8017768:	43db      	mvns	r3, r3
 801776a:	b2d2      	uxtb	r2, r2
 801776c:	b2db      	uxtb	r3, r3
 801776e:	fb1c fc01 	smulbb	ip, ip, r1
 8017772:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017776:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801777a:	fb12 f201 	smulbb	r2, r2, r1
 801777e:	fb05 c503 	mla	r5, r5, r3, ip
 8017782:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017786:	b2ff      	uxtb	r7, r7
 8017788:	fb06 2203 	mla	r2, r6, r3, r2
 801778c:	b2ad      	uxth	r5, r5
 801778e:	fb17 f701 	smulbb	r7, r7, r1
 8017792:	b292      	uxth	r2, r2
 8017794:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017798:	fb04 7403 	mla	r4, r4, r3, r7
 801779c:	f105 0c01 	add.w	ip, r5, #1
 80177a0:	1c57      	adds	r7, r2, #1
 80177a2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80177a6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80177aa:	b2a4      	uxth	r4, r4
 80177ac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80177b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80177b4:	433d      	orrs	r5, r7
 80177b6:	1c67      	adds	r7, r4, #1
 80177b8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80177bc:	0964      	lsrs	r4, r4, #5
 80177be:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80177c2:	4325      	orrs	r5, r4
 80177c4:	8005      	strh	r5, [r0, #0]
 80177c6:	e7bd      	b.n	8017744 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80177c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80177ca:	4418      	add	r0, r3
 80177cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80177ce:	4499      	add	r9, r3
 80177d0:	e795      	b.n	80176fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80177d2:	4b04      	ldr	r3, [pc, #16]	; (80177e4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80177d4:	6818      	ldr	r0, [r3, #0]
 80177d6:	6803      	ldr	r3, [r0, #0]
 80177d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80177da:	4798      	blx	r3
 80177dc:	e771      	b.n	80176c2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80177de:	bf00      	nop
 80177e0:	20014fbe 	.word	0x20014fbe
 80177e4:	20014fc4 	.word	0x20014fc4

080177e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80177e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177ec:	b087      	sub	sp, #28
 80177ee:	4680      	mov	r8, r0
 80177f0:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 80177f4:	460d      	mov	r5, r1
 80177f6:	4614      	mov	r4, r2
 80177f8:	2e00      	cmp	r6, #0
 80177fa:	f000 80b9 	beq.w	8017970 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80177fe:	6810      	ldr	r0, [r2, #0]
 8017800:	6851      	ldr	r1, [r2, #4]
 8017802:	af02      	add	r7, sp, #8
 8017804:	c703      	stmia	r7!, {r0, r1}
 8017806:	6818      	ldr	r0, [r3, #0]
 8017808:	6859      	ldr	r1, [r3, #4]
 801780a:	af04      	add	r7, sp, #16
 801780c:	c703      	stmia	r7!, {r0, r1}
 801780e:	a802      	add	r0, sp, #8
 8017810:	f7f7 ff4e 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017814:	4621      	mov	r1, r4
 8017816:	a804      	add	r0, sp, #16
 8017818:	f7f7 ff8e 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801781c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017820:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017824:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017828:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801782c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017830:	eb08 0401 	add.w	r4, r8, r1
 8017834:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017838:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801783c:	440a      	add	r2, r1
 801783e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017842:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017846:	4413      	add	r3, r2
 8017848:	f8ad 3012 	strh.w	r3, [sp, #18]
 801784c:	4b4a      	ldr	r3, [pc, #296]	; (8017978 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801784e:	6818      	ldr	r0, [r3, #0]
 8017850:	6803      	ldr	r3, [r0, #0]
 8017852:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017854:	4798      	blx	r3
 8017856:	4b49      	ldr	r3, [pc, #292]	; (801797c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017858:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801785c:	881a      	ldrh	r2, [r3, #0]
 801785e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017862:	2eff      	cmp	r6, #255	; 0xff
 8017864:	fb02 c101 	mla	r1, r2, r1, ip
 8017868:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801786c:	fb02 f207 	mul.w	r2, r2, r7
 8017870:	f105 0104 	add.w	r1, r5, #4
 8017874:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017878:	461d      	mov	r5, r3
 801787a:	d05a      	beq.n	8017932 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801787c:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017880:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017884:	b2b6      	uxth	r6, r6
 8017886:	fa1f fe8e 	uxth.w	lr, lr
 801788a:	9301      	str	r3, [sp, #4]
 801788c:	4282      	cmp	r2, r0
 801788e:	d96a      	bls.n	8017966 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017890:	eb00 0b0a 	add.w	fp, r0, sl
 8017894:	4583      	cmp	fp, r0
 8017896:	d940      	bls.n	801791a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017898:	f814 3b01 	ldrb.w	r3, [r4], #1
 801789c:	8805      	ldrh	r5, [r0, #0]
 801789e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80178a2:	122f      	asrs	r7, r5, #8
 80178a4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80178a8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80178ac:	fb17 f70e 	smulbb	r7, r7, lr
 80178b0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80178b4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80178b8:	00ed      	lsls	r5, r5, #3
 80178ba:	fb0c 7c06 	mla	ip, ip, r6, r7
 80178be:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80178c2:	10df      	asrs	r7, r3, #3
 80178c4:	b2ed      	uxtb	r5, r5
 80178c6:	00db      	lsls	r3, r3, #3
 80178c8:	fa1f fc8c 	uxth.w	ip, ip
 80178cc:	fb19 f90e 	smulbb	r9, r9, lr
 80178d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80178d4:	b2db      	uxtb	r3, r3
 80178d6:	fb15 f50e 	smulbb	r5, r5, lr
 80178da:	fb07 9706 	mla	r7, r7, r6, r9
 80178de:	fb03 5306 	mla	r3, r3, r6, r5
 80178e2:	f10c 0901 	add.w	r9, ip, #1
 80178e6:	b29b      	uxth	r3, r3
 80178e8:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80178ec:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80178f0:	f103 0c01 	add.w	ip, r3, #1
 80178f4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80178f8:	b2bf      	uxth	r7, r7
 80178fa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80178fe:	ea4c 0c09 	orr.w	ip, ip, r9
 8017902:	f107 0901 	add.w	r9, r7, #1
 8017906:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801790a:	097f      	lsrs	r7, r7, #5
 801790c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017910:	ea4c 0c07 	orr.w	ip, ip, r7
 8017914:	f820 cb02 	strh.w	ip, [r0], #2
 8017918:	e7bc      	b.n	8017894 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801791a:	9b01      	ldr	r3, [sp, #4]
 801791c:	881b      	ldrh	r3, [r3, #0]
 801791e:	eba3 0308 	sub.w	r3, r3, r8
 8017922:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017926:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801792a:	eba3 0308 	sub.w	r3, r3, r8
 801792e:	441c      	add	r4, r3
 8017930:	e7ac      	b.n	801788c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017932:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017936:	4282      	cmp	r2, r0
 8017938:	d915      	bls.n	8017966 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801793a:	eb00 060a 	add.w	r6, r0, sl
 801793e:	4286      	cmp	r6, r0
 8017940:	d906      	bls.n	8017950 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017942:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017946:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801794a:	f820 3b02 	strh.w	r3, [r0], #2
 801794e:	e7f6      	b.n	801793e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017950:	882b      	ldrh	r3, [r5, #0]
 8017952:	eba3 0308 	sub.w	r3, r3, r8
 8017956:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801795a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801795e:	eba3 0308 	sub.w	r3, r3, r8
 8017962:	441c      	add	r4, r3
 8017964:	e7e7      	b.n	8017936 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017966:	4b04      	ldr	r3, [pc, #16]	; (8017978 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017968:	6818      	ldr	r0, [r3, #0]
 801796a:	6803      	ldr	r3, [r0, #0]
 801796c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801796e:	4798      	blx	r3
 8017970:	b007      	add	sp, #28
 8017972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017976:	bf00      	nop
 8017978:	20014fc4 	.word	0x20014fc4
 801797c:	20014fbe 	.word	0x20014fbe

08017980 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017984:	b091      	sub	sp, #68	; 0x44
 8017986:	4680      	mov	r8, r0
 8017988:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801798c:	460f      	mov	r7, r1
 801798e:	4614      	mov	r4, r2
 8017990:	2d00      	cmp	r5, #0
 8017992:	d051      	beq.n	8017a38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017994:	6810      	ldr	r0, [r2, #0]
 8017996:	6851      	ldr	r1, [r2, #4]
 8017998:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8017b9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801799c:	ae0c      	add	r6, sp, #48	; 0x30
 801799e:	c603      	stmia	r6!, {r0, r1}
 80179a0:	6818      	ldr	r0, [r3, #0]
 80179a2:	6859      	ldr	r1, [r3, #4]
 80179a4:	ae0e      	add	r6, sp, #56	; 0x38
 80179a6:	c603      	stmia	r6!, {r0, r1}
 80179a8:	a80c      	add	r0, sp, #48	; 0x30
 80179aa:	f7f7 fe81 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179ae:	4621      	mov	r1, r4
 80179b0:	a80e      	add	r0, sp, #56	; 0x38
 80179b2:	f7f7 fec1 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80179b6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80179ba:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80179be:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80179c2:	f8d9 0000 	ldr.w	r0, [r9]
 80179c6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80179ca:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80179ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 80179d2:	eb08 0401 	add.w	r4, r8, r1
 80179d6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80179da:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8017ba0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80179de:	440a      	add	r2, r1
 80179e0:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80179e4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80179e8:	4413      	add	r3, r2
 80179ea:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80179ee:	6803      	ldr	r3, [r0, #0]
 80179f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80179f2:	4798      	blx	r3
 80179f4:	f010 0f80 	tst.w	r0, #128	; 0x80
 80179f8:	f8d9 0000 	ldr.w	r0, [r9]
 80179fc:	d01f      	beq.n	8017a3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80179fe:	2200      	movs	r2, #0
 8017a00:	6801      	ldr	r1, [r0, #0]
 8017a02:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017a06:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017a0a:	220b      	movs	r2, #11
 8017a0c:	9207      	str	r2, [sp, #28]
 8017a0e:	f8b8 2000 	ldrh.w	r2, [r8]
 8017a12:	9206      	str	r2, [sp, #24]
 8017a14:	2201      	movs	r2, #1
 8017a16:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017a1a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017a1e:	9203      	str	r2, [sp, #12]
 8017a20:	fa1f f28a 	uxth.w	r2, sl
 8017a24:	9202      	str	r2, [sp, #8]
 8017a26:	b2b6      	uxth	r6, r6
 8017a28:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017a2c:	9200      	str	r2, [sp, #0]
 8017a2e:	9601      	str	r6, [sp, #4]
 8017a30:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017a32:	463a      	mov	r2, r7
 8017a34:	4621      	mov	r1, r4
 8017a36:	47a8      	blx	r5
 8017a38:	b011      	add	sp, #68	; 0x44
 8017a3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a3e:	6803      	ldr	r3, [r0, #0]
 8017a40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a42:	4798      	blx	r3
 8017a44:	f8b8 2000 	ldrh.w	r2, [r8]
 8017a48:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017a4c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8017a50:	2dff      	cmp	r5, #255	; 0xff
 8017a52:	fb02 1303 	mla	r3, r2, r3, r1
 8017a56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017a5a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8017a5e:	fb0a fa02 	mul.w	sl, sl, r2
 8017a62:	d062      	beq.n	8017b2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017a64:	ea6f 0c05 	mvn.w	ip, r5
 8017a68:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017a6c:	930a      	str	r3, [sp, #40]	; 0x28
 8017a6e:	b2ad      	uxth	r5, r5
 8017a70:	fa5f fc8c 	uxtb.w	ip, ip
 8017a74:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8017a78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017a7a:	4298      	cmp	r0, r3
 8017a7c:	f080 8085 	bcs.w	8017b8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017a80:	eb00 0b09 	add.w	fp, r0, r9
 8017a84:	4558      	cmp	r0, fp
 8017a86:	d246      	bcs.n	8017b16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017a88:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017a8c:	2303      	movs	r3, #3
 8017a8e:	2204      	movs	r2, #4
 8017a90:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017a94:	eb07 0a0e 	add.w	sl, r7, lr
 8017a98:	8803      	ldrh	r3, [r0, #0]
 8017a9a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8017a9e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017aa2:	1219      	asrs	r1, r3, #8
 8017aa4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017aa8:	fb18 f805 	smulbb	r8, r8, r5
 8017aac:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017ab0:	10da      	asrs	r2, r3, #3
 8017ab2:	fb01 810c 	mla	r1, r1, ip, r8
 8017ab6:	00db      	lsls	r3, r3, #3
 8017ab8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017abc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017ac0:	b2db      	uxtb	r3, r3
 8017ac2:	fb18 f805 	smulbb	r8, r8, r5
 8017ac6:	fb1e fe05 	smulbb	lr, lr, r5
 8017aca:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8017ace:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8017ad2:	b289      	uxth	r1, r1
 8017ad4:	fb02 820c 	mla	r2, r2, ip, r8
 8017ad8:	fb03 e30c 	mla	r3, r3, ip, lr
 8017adc:	b292      	uxth	r2, r2
 8017ade:	b29b      	uxth	r3, r3
 8017ae0:	f101 0801 	add.w	r8, r1, #1
 8017ae4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8017ae8:	f103 0e01 	add.w	lr, r3, #1
 8017aec:	f102 0801 	add.w	r8, r2, #1
 8017af0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8017af4:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8017af8:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017afc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017b00:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017b04:	ea4e 0101 	orr.w	r1, lr, r1
 8017b08:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017b0c:	ea41 0108 	orr.w	r1, r1, r8
 8017b10:	f820 1b02 	strh.w	r1, [r0], #2
 8017b14:	e7b6      	b.n	8017a84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8017b16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017b18:	881b      	ldrh	r3, [r3, #0]
 8017b1a:	1b9b      	subs	r3, r3, r6
 8017b1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017b20:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017b24:	1b9b      	subs	r3, r3, r6
 8017b26:	441c      	add	r4, r3
 8017b28:	e7a6      	b.n	8017a78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8017b2a:	491b      	ldr	r1, [pc, #108]	; (8017b98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8017b2c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8017b30:	2203      	movs	r2, #3
 8017b32:	2504      	movs	r5, #4
 8017b34:	4550      	cmp	r0, sl
 8017b36:	d228      	bcs.n	8017b8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017b38:	eb00 0c09 	add.w	ip, r0, r9
 8017b3c:	4560      	cmp	r0, ip
 8017b3e:	4623      	mov	r3, r4
 8017b40:	d219      	bcs.n	8017b76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8017b42:	f893 e000 	ldrb.w	lr, [r3]
 8017b46:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017b4a:	eb07 0b0e 	add.w	fp, r7, lr
 8017b4e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017b52:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017b56:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017b5a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8017b5e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8017b62:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017b66:	ea43 030b 	orr.w	r3, r3, fp
 8017b6a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8017b6e:	3401      	adds	r4, #1
 8017b70:	f820 3b02 	strh.w	r3, [r0], #2
 8017b74:	e7e2      	b.n	8017b3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8017b76:	f8b8 3000 	ldrh.w	r3, [r8]
 8017b7a:	1b9b      	subs	r3, r3, r6
 8017b7c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017b80:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017b84:	1b9b      	subs	r3, r3, r6
 8017b86:	441c      	add	r4, r3
 8017b88:	e7d4      	b.n	8017b34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017b8a:	4b04      	ldr	r3, [pc, #16]	; (8017b9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017b8c:	6818      	ldr	r0, [r3, #0]
 8017b8e:	6803      	ldr	r3, [r0, #0]
 8017b90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b92:	4798      	blx	r3
 8017b94:	e750      	b.n	8017a38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017b96:	bf00      	nop
 8017b98:	fffff800 	.word	0xfffff800
 8017b9c:	20014fc4 	.word	0x20014fc4
 8017ba0:	20014fbe 	.word	0x20014fbe

08017ba4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017ba4:	b4f0      	push	{r4, r5, r6, r7}
 8017ba6:	460c      	mov	r4, r1
 8017ba8:	4611      	mov	r1, r2
 8017baa:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8017bae:	780f      	ldrb	r7, [r1, #0]
 8017bb0:	784e      	ldrb	r6, [r1, #1]
 8017bb2:	2f01      	cmp	r7, #1
 8017bb4:	461a      	mov	r2, r3
 8017bb6:	9b04      	ldr	r3, [sp, #16]
 8017bb8:	d036      	beq.n	8017c28 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8017bba:	d31e      	bcc.n	8017bfa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8017bbc:	2f02      	cmp	r7, #2
 8017bbe:	d14a      	bne.n	8017c56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017bc0:	2e03      	cmp	r6, #3
 8017bc2:	d848      	bhi.n	8017c56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017bc4:	e8df f006 	tbb	[pc, r6]
 8017bc8:	16140702 	.word	0x16140702
 8017bcc:	9504      	str	r5, [sp, #16]
 8017bce:	4620      	mov	r0, r4
 8017bd0:	bcf0      	pop	{r4, r5, r6, r7}
 8017bd2:	f7ff be09 	b.w	80177e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8017bd6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8017bd8:	2800      	cmp	r0, #0
 8017bda:	d03c      	beq.n	8017c56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017bdc:	6806      	ldr	r6, [r0, #0]
 8017bde:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017be2:	68b5      	ldr	r5, [r6, #8]
 8017be4:	4613      	mov	r3, r2
 8017be6:	46ac      	mov	ip, r5
 8017be8:	460a      	mov	r2, r1
 8017bea:	4621      	mov	r1, r4
 8017bec:	bcf0      	pop	{r4, r5, r6, r7}
 8017bee:	4760      	bx	ip
 8017bf0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8017bf2:	e7f1      	b.n	8017bd8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017bf4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8017bf8:	e7ee      	b.n	8017bd8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8017bfa:	2e03      	cmp	r6, #3
 8017bfc:	d82b      	bhi.n	8017c56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017bfe:	e8df f006 	tbb	[pc, r6]
 8017c02:	0702      	.short	0x0702
 8017c04:	100e      	.short	0x100e
 8017c06:	9504      	str	r5, [sp, #16]
 8017c08:	4620      	mov	r0, r4
 8017c0a:	bcf0      	pop	{r4, r5, r6, r7}
 8017c0c:	f7ff bd06 	b.w	801761c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8017c10:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8017c12:	b300      	cbz	r0, 8017c56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017c14:	6806      	ldr	r6, [r0, #0]
 8017c16:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017c1a:	68f5      	ldr	r5, [r6, #12]
 8017c1c:	e7e2      	b.n	8017be4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8017c1e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8017c20:	e7f7      	b.n	8017c12 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8017c22:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8017c26:	e7f4      	b.n	8017c12 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8017c28:	2e03      	cmp	r6, #3
 8017c2a:	d814      	bhi.n	8017c56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017c2c:	e8df f006 	tbb	[pc, r6]
 8017c30:	100e0702 	.word	0x100e0702
 8017c34:	9504      	str	r5, [sp, #16]
 8017c36:	4620      	mov	r0, r4
 8017c38:	bcf0      	pop	{r4, r5, r6, r7}
 8017c3a:	f7ff bea1 	b.w	8017980 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8017c3e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8017c40:	b148      	cbz	r0, 8017c56 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8017c42:	6806      	ldr	r6, [r0, #0]
 8017c44:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017c48:	6935      	ldr	r5, [r6, #16]
 8017c4a:	e7cb      	b.n	8017be4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8017c4c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8017c4e:	e7f7      	b.n	8017c40 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8017c50:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8017c54:	e7f4      	b.n	8017c40 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8017c56:	bcf0      	pop	{r4, r5, r6, r7}
 8017c58:	4770      	bx	lr
	...

08017c5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8017c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c60:	4604      	mov	r4, r0
 8017c62:	b087      	sub	sp, #28
 8017c64:	6810      	ldr	r0, [r2, #0]
 8017c66:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8017c6a:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8017ea4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8017c6e:	460e      	mov	r6, r1
 8017c70:	6851      	ldr	r1, [r2, #4]
 8017c72:	ad02      	add	r5, sp, #8
 8017c74:	c503      	stmia	r5!, {r0, r1}
 8017c76:	6818      	ldr	r0, [r3, #0]
 8017c78:	6859      	ldr	r1, [r3, #4]
 8017c7a:	ad04      	add	r5, sp, #16
 8017c7c:	4617      	mov	r7, r2
 8017c7e:	c503      	stmia	r5!, {r0, r1}
 8017c80:	a802      	add	r0, sp, #8
 8017c82:	f7f7 fd15 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c86:	4639      	mov	r1, r7
 8017c88:	a804      	add	r0, sp, #16
 8017c8a:	f7f7 fd55 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c8e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017c92:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017c96:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8017c9a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017c9e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017ca2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017ca6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8017caa:	440e      	add	r6, r1
 8017cac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017cb0:	440a      	add	r2, r1
 8017cb2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017cb6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017cba:	4413      	add	r3, r2
 8017cbc:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017cc0:	4b77      	ldr	r3, [pc, #476]	; (8017ea0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8017cc2:	6818      	ldr	r0, [r3, #0]
 8017cc4:	6803      	ldr	r3, [r0, #0]
 8017cc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017cc8:	4798      	blx	r3
 8017cca:	f8b9 b000 	ldrh.w	fp, [r9]
 8017cce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017cd2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017cd6:	fb0b 2303 	mla	r3, fp, r3, r2
 8017cda:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017cde:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017ce2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017ce6:	fb05 f50b 	mul.w	r5, r5, fp
 8017cea:	9300      	str	r3, [sp, #0]
 8017cec:	d069      	beq.n	8017dc2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8017cee:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8017cf2:	4558      	cmp	r0, fp
 8017cf4:	f080 80cc 	bcs.w	8017e90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017cf8:	9b00      	ldr	r3, [sp, #0]
 8017cfa:	18c3      	adds	r3, r0, r3
 8017cfc:	9301      	str	r3, [sp, #4]
 8017cfe:	4631      	mov	r1, r6
 8017d00:	9b01      	ldr	r3, [sp, #4]
 8017d02:	4298      	cmp	r0, r3
 8017d04:	d24f      	bcs.n	8017da6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8017d06:	f811 2b01 	ldrb.w	r2, [r1], #1
 8017d0a:	2a00      	cmp	r2, #0
 8017d0c:	d048      	beq.n	8017da0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017d0e:	fb0a f202 	mul.w	r2, sl, r2
 8017d12:	1c53      	adds	r3, r2, #1
 8017d14:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017d18:	121b      	asrs	r3, r3, #8
 8017d1a:	d041      	beq.n	8017da0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8017d1c:	8802      	ldrh	r2, [r0, #0]
 8017d1e:	f8b4 c000 	ldrh.w	ip, [r4]
 8017d22:	b29e      	uxth	r6, r3
 8017d24:	1215      	asrs	r5, r2, #8
 8017d26:	43db      	mvns	r3, r3
 8017d28:	b2db      	uxtb	r3, r3
 8017d2a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017d2e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017d32:	fb15 f503 	smulbb	r5, r5, r3
 8017d36:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8017d3a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017d3e:	00d2      	lsls	r2, r2, #3
 8017d40:	fb07 5706 	mla	r7, r7, r6, r5
 8017d44:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017d48:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017d4c:	b2d2      	uxtb	r2, r2
 8017d4e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017d52:	b2bf      	uxth	r7, r7
 8017d54:	fb1e fe03 	smulbb	lr, lr, r3
 8017d58:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017d5c:	fa5f fc8c 	uxtb.w	ip, ip
 8017d60:	fb12 f203 	smulbb	r2, r2, r3
 8017d64:	fb05 e506 	mla	r5, r5, r6, lr
 8017d68:	fb0c 2c06 	mla	ip, ip, r6, r2
 8017d6c:	f107 0e01 	add.w	lr, r7, #1
 8017d70:	fa1f fc8c 	uxth.w	ip, ip
 8017d74:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8017d78:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8017d7c:	f10c 0701 	add.w	r7, ip, #1
 8017d80:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017d84:	b2ad      	uxth	r5, r5
 8017d86:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017d8a:	ea47 070e 	orr.w	r7, r7, lr
 8017d8e:	f105 0e01 	add.w	lr, r5, #1
 8017d92:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017d96:	096d      	lsrs	r5, r5, #5
 8017d98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017d9c:	432f      	orrs	r7, r5
 8017d9e:	8007      	strh	r7, [r0, #0]
 8017da0:	3002      	adds	r0, #2
 8017da2:	3402      	adds	r4, #2
 8017da4:	e7ac      	b.n	8017d00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8017da6:	f8b9 3000 	ldrh.w	r3, [r9]
 8017daa:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017dae:	eba3 0308 	sub.w	r3, r3, r8
 8017db2:	eba6 0608 	sub.w	r6, r6, r8
 8017db6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017dba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017dbe:	440e      	add	r6, r1
 8017dc0:	e797      	b.n	8017cf2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8017dc2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017dc6:	42a8      	cmp	r0, r5
 8017dc8:	d262      	bcs.n	8017e90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8017dca:	9b00      	ldr	r3, [sp, #0]
 8017dcc:	4631      	mov	r1, r6
 8017dce:	eb00 0b03 	add.w	fp, r0, r3
 8017dd2:	4558      	cmp	r0, fp
 8017dd4:	d24e      	bcs.n	8017e74 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8017dd6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8017dda:	b12b      	cbz	r3, 8017de8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8017ddc:	2bff      	cmp	r3, #255	; 0xff
 8017dde:	f8b4 e000 	ldrh.w	lr, [r4]
 8017de2:	d104      	bne.n	8017dee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8017de4:	f8a0 e000 	strh.w	lr, [r0]
 8017de8:	3002      	adds	r0, #2
 8017dea:	3402      	adds	r4, #2
 8017dec:	e7f1      	b.n	8017dd2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8017dee:	8802      	ldrh	r2, [r0, #0]
 8017df0:	b29f      	uxth	r7, r3
 8017df2:	1216      	asrs	r6, r2, #8
 8017df4:	43db      	mvns	r3, r3
 8017df6:	b2db      	uxtb	r3, r3
 8017df8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017dfc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017e00:	fb16 f603 	smulbb	r6, r6, r3
 8017e04:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8017e08:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017e0c:	00d2      	lsls	r2, r2, #3
 8017e0e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8017e12:	b2d2      	uxtb	r2, r2
 8017e14:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017e18:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8017e1c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017e20:	fb1a fa03 	smulbb	sl, sl, r3
 8017e24:	fa1f fc8c 	uxth.w	ip, ip
 8017e28:	fb12 f303 	smulbb	r3, r2, r3
 8017e2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017e30:	fa5f fe8e 	uxtb.w	lr, lr
 8017e34:	fb06 a607 	mla	r6, r6, r7, sl
 8017e38:	f10c 0201 	add.w	r2, ip, #1
 8017e3c:	fb0e 3307 	mla	r3, lr, r7, r3
 8017e40:	b2b6      	uxth	r6, r6
 8017e42:	b29b      	uxth	r3, r3
 8017e44:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017e48:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8017e4c:	f106 0a01 	add.w	sl, r6, #1
 8017e50:	f103 0c01 	add.w	ip, r3, #1
 8017e54:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017e58:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017e5c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017e60:	0976      	lsrs	r6, r6, #5
 8017e62:	ea4c 0c02 	orr.w	ip, ip, r2
 8017e66:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017e6a:	ea4c 0c06 	orr.w	ip, ip, r6
 8017e6e:	f8a0 c000 	strh.w	ip, [r0]
 8017e72:	e7b9      	b.n	8017de8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8017e74:	f8b9 3000 	ldrh.w	r3, [r9]
 8017e78:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8017e7c:	eba3 0308 	sub.w	r3, r3, r8
 8017e80:	eba6 0608 	sub.w	r6, r6, r8
 8017e84:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017e88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017e8c:	440e      	add	r6, r1
 8017e8e:	e79a      	b.n	8017dc6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8017e90:	4b03      	ldr	r3, [pc, #12]	; (8017ea0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8017e92:	6818      	ldr	r0, [r3, #0]
 8017e94:	6803      	ldr	r3, [r0, #0]
 8017e96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017e98:	4798      	blx	r3
 8017e9a:	b007      	add	sp, #28
 8017e9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ea0:	20014fc4 	.word	0x20014fc4
 8017ea4:	20014fbe 	.word	0x20014fbe

08017ea8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8017ea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017eac:	b089      	sub	sp, #36	; 0x24
 8017eae:	4682      	mov	sl, r0
 8017eb0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8017eb4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017eb6:	460f      	mov	r7, r1
 8017eb8:	4691      	mov	r9, r2
 8017eba:	4698      	mov	r8, r3
 8017ebc:	2e00      	cmp	r6, #0
 8017ebe:	d03d      	beq.n	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8017ec0:	4608      	mov	r0, r1
 8017ec2:	f7fa fe59 	bl	8012b78 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017ec6:	4605      	mov	r5, r0
 8017ec8:	4638      	mov	r0, r7
 8017eca:	f7fa fe89 	bl	8012be0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017ece:	f8ad 000e 	strh.w	r0, [sp, #14]
 8017ed2:	4638      	mov	r0, r7
 8017ed4:	f8ad 9008 	strh.w	r9, [sp, #8]
 8017ed8:	f8ad 500c 	strh.w	r5, [sp, #12]
 8017edc:	f8ad 800a 	strh.w	r8, [sp, #10]
 8017ee0:	f7fa ff36 	bl	8012d50 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017ee4:	4605      	mov	r5, r0
 8017ee6:	4638      	mov	r0, r7
 8017ee8:	f7fa ff62 	bl	8012db0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8017eec:	4681      	mov	r9, r0
 8017eee:	4638      	mov	r0, r7
 8017ef0:	f7fa ffb2 	bl	8012e58 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017ef4:	280b      	cmp	r0, #11
 8017ef6:	d821      	bhi.n	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8017ef8:	e8df f000 	tbb	[pc, r0]
 8017efc:	2006aebe 	.word	0x2006aebe
 8017f00:	20202020 	.word	0x20202020
 8017f04:	b5202020 	.word	0xb5202020
 8017f08:	4bb0      	ldr	r3, [pc, #704]	; (80181cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8017f0a:	6818      	ldr	r0, [r3, #0]
 8017f0c:	6803      	ldr	r3, [r0, #0]
 8017f0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017f10:	4798      	blx	r3
 8017f12:	2eff      	cmp	r6, #255	; 0xff
 8017f14:	d101      	bne.n	8017f1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8017f16:	0683      	lsls	r3, r0, #26
 8017f18:	d506      	bpl.n	8017f28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8017f1a:	4633      	mov	r3, r6
 8017f1c:	4622      	mov	r2, r4
 8017f1e:	a902      	add	r1, sp, #8
 8017f20:	4628      	mov	r0, r5
 8017f22:	f7ff f909 	bl	8017138 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017f26:	e009      	b.n	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8017f28:	4638      	mov	r0, r7
 8017f2a:	f7fa fed9 	bl	8012ce0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017f2e:	b940      	cbnz	r0, 8017f42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8017f30:	4623      	mov	r3, r4
 8017f32:	aa02      	add	r2, sp, #8
 8017f34:	4629      	mov	r1, r5
 8017f36:	4650      	mov	r0, sl
 8017f38:	f7ff f9e4 	bl	8017304 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8017f3c:	b009      	add	sp, #36	; 0x24
 8017f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f42:	f10d 0818 	add.w	r8, sp, #24
 8017f46:	4639      	mov	r1, r7
 8017f48:	4640      	mov	r0, r8
 8017f4a:	f7fa fe7d 	bl	8012c48 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017f4e:	e898 0003 	ldmia.w	r8, {r0, r1}
 8017f52:	af04      	add	r7, sp, #16
 8017f54:	e887 0003 	stmia.w	r7, {r0, r1}
 8017f58:	4638      	mov	r0, r7
 8017f5a:	4621      	mov	r1, r4
 8017f5c:	f7f3 ff50 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 8017f60:	4638      	mov	r0, r7
 8017f62:	f7f3 ff90 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017f66:	2800      	cmp	r0, #0
 8017f68:	d1d7      	bne.n	8017f1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8017f6a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017f6e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017f72:	4293      	cmp	r3, r2
 8017f74:	dd12      	ble.n	8017f9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 8017f76:	1a9b      	subs	r3, r3, r2
 8017f78:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017f7c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017f80:	f8ad 0018 	strh.w	r0, [sp, #24]
 8017f84:	f8ad 201a 	strh.w	r2, [sp, #26]
 8017f88:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017f8c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017f90:	4642      	mov	r2, r8
 8017f92:	4633      	mov	r3, r6
 8017f94:	a902      	add	r1, sp, #8
 8017f96:	4628      	mov	r0, r5
 8017f98:	f7ff f8ce 	bl	8017138 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017f9c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017fa0:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017fa4:	4293      	cmp	r3, r2
 8017fa6:	dd12      	ble.n	8017fce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8017fa8:	1a9b      	subs	r3, r3, r2
 8017faa:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017fae:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8017fb2:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017fb6:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017fba:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017fbe:	f8ad 101e 	strh.w	r1, [sp, #30]
 8017fc2:	23ff      	movs	r3, #255	; 0xff
 8017fc4:	4642      	mov	r2, r8
 8017fc6:	a902      	add	r1, sp, #8
 8017fc8:	4628      	mov	r0, r5
 8017fca:	f7ff f8b5 	bl	8017138 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017fce:	463b      	mov	r3, r7
 8017fd0:	aa02      	add	r2, sp, #8
 8017fd2:	4629      	mov	r1, r5
 8017fd4:	4650      	mov	r0, sl
 8017fd6:	f7ff f995 	bl	8017304 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8017fda:	88a2      	ldrh	r2, [r4, #4]
 8017fdc:	8823      	ldrh	r3, [r4, #0]
 8017fde:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8017fe2:	4413      	add	r3, r2
 8017fe4:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017fe8:	440a      	add	r2, r1
 8017fea:	b29b      	uxth	r3, r3
 8017fec:	b292      	uxth	r2, r2
 8017fee:	b211      	sxth	r1, r2
 8017ff0:	b218      	sxth	r0, r3
 8017ff2:	4288      	cmp	r0, r1
 8017ff4:	dd12      	ble.n	801801c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8017ff6:	1a9b      	subs	r3, r3, r2
 8017ff8:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8017ffc:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018000:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018004:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018008:	f8ad 001e 	strh.w	r0, [sp, #30]
 801800c:	23ff      	movs	r3, #255	; 0xff
 801800e:	4642      	mov	r2, r8
 8018010:	a902      	add	r1, sp, #8
 8018012:	4628      	mov	r0, r5
 8018014:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018018:	f7ff f88e 	bl	8017138 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801801c:	88e2      	ldrh	r2, [r4, #6]
 801801e:	8863      	ldrh	r3, [r4, #2]
 8018020:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018024:	4413      	add	r3, r2
 8018026:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801802a:	440a      	add	r2, r1
 801802c:	b29b      	uxth	r3, r3
 801802e:	b292      	uxth	r2, r2
 8018030:	b211      	sxth	r1, r2
 8018032:	b218      	sxth	r0, r3
 8018034:	4288      	cmp	r0, r1
 8018036:	dd81      	ble.n	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018038:	1a9b      	subs	r3, r3, r2
 801803a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801803e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018042:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018046:	f8ad 6018 	strh.w	r6, [sp, #24]
 801804a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801804e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018052:	23ff      	movs	r3, #255	; 0xff
 8018054:	4642      	mov	r2, r8
 8018056:	e762      	b.n	8017f1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8018058:	4633      	mov	r3, r6
 801805a:	4622      	mov	r2, r4
 801805c:	a902      	add	r1, sp, #8
 801805e:	4628      	mov	r0, r5
 8018060:	f7ff f9c0 	bl	80173e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018064:	e76a      	b.n	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018066:	e9cd 4600 	strd	r4, r6, [sp]
 801806a:	ab02      	add	r3, sp, #8
 801806c:	464a      	mov	r2, r9
 801806e:	4629      	mov	r1, r5
 8018070:	4650      	mov	r0, sl
 8018072:	f7ff fd97 	bl	8017ba4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018076:	e761      	b.n	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018078:	4638      	mov	r0, r7
 801807a:	f7fa fe31 	bl	8012ce0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801807e:	b950      	cbnz	r0, 8018096 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8018080:	e9cd 6000 	strd	r6, r0, [sp]
 8018084:	f8da 3000 	ldr.w	r3, [sl]
 8018088:	aa02      	add	r2, sp, #8
 801808a:	68de      	ldr	r6, [r3, #12]
 801808c:	4629      	mov	r1, r5
 801808e:	4623      	mov	r3, r4
 8018090:	4650      	mov	r0, sl
 8018092:	47b0      	blx	r6
 8018094:	e752      	b.n	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8018096:	f10d 0818 	add.w	r8, sp, #24
 801809a:	4639      	mov	r1, r7
 801809c:	4640      	mov	r0, r8
 801809e:	f7fa fdd3 	bl	8012c48 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80180a2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80180a6:	af04      	add	r7, sp, #16
 80180a8:	e887 0003 	stmia.w	r7, {r0, r1}
 80180ac:	4638      	mov	r0, r7
 80180ae:	4621      	mov	r1, r4
 80180b0:	f7f3 fea6 	bl	800be00 <_ZN8touchgfx4RectaNERKS0_>
 80180b4:	4638      	mov	r0, r7
 80180b6:	f7f3 fee6 	bl	800be86 <_ZNK8touchgfx4Rect7isEmptyEv>
 80180ba:	b138      	cbz	r0, 80180cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 80180bc:	9600      	str	r6, [sp, #0]
 80180be:	4623      	mov	r3, r4
 80180c0:	aa02      	add	r2, sp, #8
 80180c2:	4649      	mov	r1, r9
 80180c4:	4628      	mov	r0, r5
 80180c6:	f7ff fdc9 	bl	8017c5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80180ca:	e737      	b.n	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80180cc:	e9cd 6000 	strd	r6, r0, [sp]
 80180d0:	f8da 3000 	ldr.w	r3, [sl]
 80180d4:	aa02      	add	r2, sp, #8
 80180d6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80180da:	4629      	mov	r1, r5
 80180dc:	463b      	mov	r3, r7
 80180de:	4650      	mov	r0, sl
 80180e0:	47d8      	blx	fp
 80180e2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80180e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80180ea:	4293      	cmp	r3, r2
 80180ec:	dd13      	ble.n	8018116 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80180ee:	f9b4 0000 	ldrsh.w	r0, [r4]
 80180f2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80180f6:	f8ad 0018 	strh.w	r0, [sp, #24]
 80180fa:	1a9b      	subs	r3, r3, r2
 80180fc:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018100:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018104:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018108:	9600      	str	r6, [sp, #0]
 801810a:	4643      	mov	r3, r8
 801810c:	aa02      	add	r2, sp, #8
 801810e:	4649      	mov	r1, r9
 8018110:	4628      	mov	r0, r5
 8018112:	f7ff fda3 	bl	8017c5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018116:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801811a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801811e:	4293      	cmp	r3, r2
 8018120:	dd13      	ble.n	801814a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 8018122:	1a9b      	subs	r3, r3, r2
 8018124:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018128:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801812c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018130:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018134:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018138:	f8ad 101e 	strh.w	r1, [sp, #30]
 801813c:	9600      	str	r6, [sp, #0]
 801813e:	4643      	mov	r3, r8
 8018140:	aa02      	add	r2, sp, #8
 8018142:	4649      	mov	r1, r9
 8018144:	4628      	mov	r0, r5
 8018146:	f7ff fd89 	bl	8017c5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801814a:	88a2      	ldrh	r2, [r4, #4]
 801814c:	8823      	ldrh	r3, [r4, #0]
 801814e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018152:	4413      	add	r3, r2
 8018154:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018158:	440a      	add	r2, r1
 801815a:	b29b      	uxth	r3, r3
 801815c:	b292      	uxth	r2, r2
 801815e:	b211      	sxth	r1, r2
 8018160:	b218      	sxth	r0, r3
 8018162:	4288      	cmp	r0, r1
 8018164:	dd13      	ble.n	801818e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 8018166:	1a9b      	subs	r3, r3, r2
 8018168:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801816c:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018170:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018174:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018178:	f8ad 001e 	strh.w	r0, [sp, #30]
 801817c:	9600      	str	r6, [sp, #0]
 801817e:	4643      	mov	r3, r8
 8018180:	aa02      	add	r2, sp, #8
 8018182:	4649      	mov	r1, r9
 8018184:	4628      	mov	r0, r5
 8018186:	f8ad 701a 	strh.w	r7, [sp, #26]
 801818a:	f7ff fd67 	bl	8017c5c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801818e:	88e2      	ldrh	r2, [r4, #6]
 8018190:	8863      	ldrh	r3, [r4, #2]
 8018192:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018196:	4413      	add	r3, r2
 8018198:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801819c:	440a      	add	r2, r1
 801819e:	b29b      	uxth	r3, r3
 80181a0:	b292      	uxth	r2, r2
 80181a2:	b211      	sxth	r1, r2
 80181a4:	b218      	sxth	r0, r3
 80181a6:	4288      	cmp	r0, r1
 80181a8:	f77f aec8 	ble.w	8017f3c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80181ac:	f9b4 7000 	ldrsh.w	r7, [r4]
 80181b0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80181b4:	f8ad 7018 	strh.w	r7, [sp, #24]
 80181b8:	1a9b      	subs	r3, r3, r2
 80181ba:	f8ad 301e 	strh.w	r3, [sp, #30]
 80181be:	f8ad 101a 	strh.w	r1, [sp, #26]
 80181c2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80181c6:	9600      	str	r6, [sp, #0]
 80181c8:	4643      	mov	r3, r8
 80181ca:	e779      	b.n	80180c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 80181cc:	20014fc4 	.word	0x20014fc4

080181d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80181d0:	b180      	cbz	r0, 80181f4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80181d2:	2903      	cmp	r1, #3
 80181d4:	d81c      	bhi.n	8018210 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80181d6:	e8df f001 	tbb	[pc, r1]
 80181da:	1d02      	.short	0x1d02
 80181dc:	1f08      	.short	0x1f08
 80181de:	4b10      	ldr	r3, [pc, #64]	; (8018220 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80181e0:	8818      	ldrh	r0, [r3, #0]
 80181e2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80181e6:	4240      	negs	r0, r0
 80181e8:	4770      	bx	lr
 80181ea:	4b0d      	ldr	r3, [pc, #52]	; (8018220 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80181ec:	8818      	ldrh	r0, [r3, #0]
 80181ee:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80181f2:	4770      	bx	lr
 80181f4:	2903      	cmp	r1, #3
 80181f6:	d80b      	bhi.n	8018210 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80181f8:	a301      	add	r3, pc, #4	; (adr r3, 8018200 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80181fa:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80181fe:	bf00      	nop
 8018200:	08018215 	.word	0x08018215
 8018204:	080181eb 	.word	0x080181eb
 8018208:	08018219 	.word	0x08018219
 801820c:	080181df 	.word	0x080181df
 8018210:	2000      	movs	r0, #0
 8018212:	4770      	bx	lr
 8018214:	2001      	movs	r0, #1
 8018216:	4770      	bx	lr
 8018218:	f04f 30ff 	mov.w	r0, #4294967295
 801821c:	4770      	bx	lr
 801821e:	bf00      	nop
 8018220:	20014fbe 	.word	0x20014fbe

08018224 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018224:	b180      	cbz	r0, 8018248 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018226:	2903      	cmp	r1, #3
 8018228:	d81c      	bhi.n	8018264 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801822a:	e8df f001 	tbb	[pc, r1]
 801822e:	021d      	.short	0x021d
 8018230:	071f      	.short	0x071f
 8018232:	4b10      	ldr	r3, [pc, #64]	; (8018274 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018234:	8818      	ldrh	r0, [r3, #0]
 8018236:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801823a:	4770      	bx	lr
 801823c:	4b0d      	ldr	r3, [pc, #52]	; (8018274 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801823e:	8818      	ldrh	r0, [r3, #0]
 8018240:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018244:	4240      	negs	r0, r0
 8018246:	4770      	bx	lr
 8018248:	2903      	cmp	r1, #3
 801824a:	d80b      	bhi.n	8018264 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801824c:	a301      	add	r3, pc, #4	; (adr r3, 8018254 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801824e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018252:	bf00      	nop
 8018254:	08018233 	.word	0x08018233
 8018258:	0801826d 	.word	0x0801826d
 801825c:	0801823d 	.word	0x0801823d
 8018260:	08018269 	.word	0x08018269
 8018264:	2000      	movs	r0, #0
 8018266:	4770      	bx	lr
 8018268:	2001      	movs	r0, #1
 801826a:	4770      	bx	lr
 801826c:	f04f 30ff 	mov.w	r0, #4294967295
 8018270:	4770      	bx	lr
 8018272:	bf00      	nop
 8018274:	20014fbe 	.word	0x20014fbe

08018278 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801827c:	b099      	sub	sp, #100	; 0x64
 801827e:	910b      	str	r1, [sp, #44]	; 0x2c
 8018280:	a914      	add	r1, sp, #80	; 0x50
 8018282:	e881 000c 	stmia.w	r1, {r2, r3}
 8018286:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801828a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801828e:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018292:	9309      	str	r3, [sp, #36]	; 0x24
 8018294:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8018298:	9310      	str	r3, [sp, #64]	; 0x40
 801829a:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801829e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80182a2:	930c      	str	r3, [sp, #48]	; 0x30
 80182a4:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80182a8:	798f      	ldrb	r7, [r1, #6]
 80182aa:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80182ae:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80182b2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80182b6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80182ba:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80182be:	431f      	orrs	r7, r3
 80182c0:	f000 8195 	beq.w	80185ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80182c4:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80182c8:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80182cc:	f891 9007 	ldrb.w	r9, [r1, #7]
 80182d0:	ea59 0903 	orrs.w	r9, r9, r3
 80182d4:	f000 818b 	beq.w	80185ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80182d8:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80182dc:	b29b      	uxth	r3, r3
 80182de:	2d00      	cmp	r5, #0
 80182e0:	f000 812e 	beq.w	8018540 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80182e4:	1aed      	subs	r5, r5, r3
 80182e6:	b2ad      	uxth	r5, r5
 80182e8:	042b      	lsls	r3, r5, #16
 80182ea:	d502      	bpl.n	80182f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80182ec:	1b64      	subs	r4, r4, r5
 80182ee:	b224      	sxth	r4, r4
 80182f0:	2500      	movs	r5, #0
 80182f2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80182f6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80182fa:	428c      	cmp	r4, r1
 80182fc:	b28b      	uxth	r3, r1
 80182fe:	bfbf      	itttt	lt
 8018300:	18ed      	addlt	r5, r5, r3
 8018302:	1b2c      	sublt	r4, r5, r4
 8018304:	b2a5      	uxthlt	r5, r4
 8018306:	460c      	movlt	r4, r1
 8018308:	8891      	ldrh	r1, [r2, #4]
 801830a:	440b      	add	r3, r1
 801830c:	b21b      	sxth	r3, r3
 801830e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018310:	88d3      	ldrh	r3, [r2, #6]
 8018312:	8852      	ldrh	r2, [r2, #2]
 8018314:	4413      	add	r3, r2
 8018316:	b21b      	sxth	r3, r3
 8018318:	930d      	str	r3, [sp, #52]	; 0x34
 801831a:	4bbe      	ldr	r3, [pc, #760]	; (8018614 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801831c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801831e:	f893 b000 	ldrb.w	fp, [r3]
 8018322:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018326:	f1dc 0300 	rsbs	r3, ip, #0
 801832a:	eb43 030c 	adc.w	r3, r3, ip
 801832e:	930e      	str	r3, [sp, #56]	; 0x38
 8018330:	4621      	mov	r1, r4
 8018332:	4653      	mov	r3, sl
 8018334:	a814      	add	r0, sp, #80	; 0x50
 8018336:	f7f7 f830 	bl	800f39a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801833a:	4621      	mov	r1, r4
 801833c:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018340:	4653      	mov	r3, sl
 8018342:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018344:	a814      	add	r0, sp, #80	; 0x50
 8018346:	f7f7 f845 	bl	800f3d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801834a:	a918      	add	r1, sp, #96	; 0x60
 801834c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018350:	a817      	add	r0, sp, #92	; 0x5c
 8018352:	f7f7 f96b 	bl	800f62c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018356:	f1ba 0f00 	cmp.w	sl, #0
 801835a:	f040 80f4 	bne.w	8018546 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801835e:	f1bb 0f01 	cmp.w	fp, #1
 8018362:	f040 80f8 	bne.w	8018556 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018366:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018368:	2b00      	cmp	r3, #0
 801836a:	f040 8145 	bne.w	80185f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801836e:	b2ba      	uxth	r2, r7
 8018370:	b905      	cbnz	r5, 8018374 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018372:	b16e      	cbz	r6, 8018390 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018374:	fb06 5302 	mla	r3, r6, r2, r5
 8018378:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801837a:	fb08 f303 	mul.w	r3, r8, r3
 801837e:	4631      	mov	r1, r6
 8018380:	f003 0607 	and.w	r6, r3, #7
 8018384:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018388:	9328      	str	r3, [sp, #160]	; 0xa0
 801838a:	eba9 0301 	sub.w	r3, r9, r1
 801838e:	930a      	str	r3, [sp, #40]	; 0x28
 8018390:	4651      	mov	r1, sl
 8018392:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018394:	f7ff ff1c 	bl	80181d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018398:	4681      	mov	r9, r0
 801839a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801839c:	f7ff ff42 	bl	8018224 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80183a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80183a2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80183a4:	eba3 0a01 	sub.w	sl, r3, r1
 80183a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80183aa:	459a      	cmp	sl, r3
 80183ac:	bfa8      	it	ge
 80183ae:	469a      	movge	sl, r3
 80183b0:	f1ba 0f00 	cmp.w	sl, #0
 80183b4:	4683      	mov	fp, r0
 80183b6:	f340 811a 	ble.w	80185ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80183ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80183bc:	1b64      	subs	r4, r4, r5
 80183be:	1b1c      	subs	r4, r3, r4
 80183c0:	42bc      	cmp	r4, r7
 80183c2:	bfd4      	ite	le
 80183c4:	ebc5 0504 	rsble	r5, r5, r4
 80183c8:	ebc5 0507 	rsbgt	r5, r5, r7
 80183cc:	2d00      	cmp	r5, #0
 80183ce:	f340 810e 	ble.w	80185ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80183d2:	1b52      	subs	r2, r2, r5
 80183d4:	fb08 f302 	mul.w	r3, r8, r2
 80183d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80183da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80183dc:	2b00      	cmp	r3, #0
 80183de:	f040 8116 	bne.w	801860e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80183e2:	4b8d      	ldr	r3, [pc, #564]	; (8018618 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80183e4:	6818      	ldr	r0, [r3, #0]
 80183e6:	6803      	ldr	r3, [r0, #0]
 80183e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80183ea:	4798      	blx	r3
 80183ec:	2301      	movs	r3, #1
 80183ee:	fa03 f308 	lsl.w	r3, r3, r8
 80183f2:	4a8a      	ldr	r2, [pc, #552]	; (801861c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80183f4:	3b01      	subs	r3, #1
 80183f6:	b2db      	uxtb	r3, r3
 80183f8:	8811      	ldrh	r1, [r2, #0]
 80183fa:	930e      	str	r3, [sp, #56]	; 0x38
 80183fc:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018400:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018404:	fb01 2303 	mla	r3, r1, r3, r2
 8018408:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801840c:	930a      	str	r3, [sp, #40]	; 0x28
 801840e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018410:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018414:	9313      	str	r3, [sp, #76]	; 0x4c
 8018416:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018418:	0a19      	lsrs	r1, r3, #8
 801841a:	b2cb      	uxtb	r3, r1
 801841c:	9312      	str	r3, [sp, #72]	; 0x48
 801841e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018420:	b2db      	uxtb	r3, r3
 8018422:	9311      	str	r3, [sp, #68]	; 0x44
 8018424:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018426:	095a      	lsrs	r2, r3, #5
 8018428:	4b7d      	ldr	r3, [pc, #500]	; (8018620 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801842a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801842e:	400b      	ands	r3, r1
 8018430:	4313      	orrs	r3, r2
 8018432:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018434:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018438:	4313      	orrs	r3, r2
 801843a:	b29b      	uxth	r3, r3
 801843c:	9310      	str	r3, [sp, #64]	; 0x40
 801843e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018440:	781a      	ldrb	r2, [r3, #0]
 8018442:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018446:	4132      	asrs	r2, r6
 8018448:	fb05 b919 	mls	r9, r5, r9, fp
 801844c:	fb03 fb05 	mul.w	fp, r3, r5
 8018450:	b2d2      	uxtb	r2, r2
 8018452:	930d      	str	r3, [sp, #52]	; 0x34
 8018454:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018458:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801845c:	f0c0 80f5 	bcc.w	801864a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018460:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018464:	46ae      	mov	lr, r5
 8018466:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801846a:	f0c0 80dd 	bcc.w	8018628 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801846e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018470:	4013      	ands	r3, r2
 8018472:	d055      	beq.n	8018520 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018474:	20ff      	movs	r0, #255	; 0xff
 8018476:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018478:	fb90 f1f1 	sdiv	r1, r0, r1
 801847c:	434b      	muls	r3, r1
 801847e:	2bfe      	cmp	r3, #254	; 0xfe
 8018480:	dd03      	ble.n	801848a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018482:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018484:	4281      	cmp	r1, r0
 8018486:	f000 80cd 	beq.w	8018624 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801848a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801848c:	f8bc 4000 	ldrh.w	r4, [ip]
 8018490:	fb11 f303 	smulbb	r3, r1, r3
 8018494:	b29b      	uxth	r3, r3
 8018496:	1c59      	adds	r1, r3, #1
 8018498:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801849c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80184a0:	b29f      	uxth	r7, r3
 80184a2:	43db      	mvns	r3, r3
 80184a4:	b2db      	uxtb	r3, r3
 80184a6:	9309      	str	r3, [sp, #36]	; 0x24
 80184a8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80184aa:	1220      	asrs	r0, r4, #8
 80184ac:	fb13 f907 	smulbb	r9, r3, r7
 80184b0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80184b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184b6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80184ba:	fb00 9003 	mla	r0, r0, r3, r9
 80184be:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80184c0:	10e1      	asrs	r1, r4, #3
 80184c2:	fb13 f907 	smulbb	r9, r3, r7
 80184c6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80184ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184cc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80184d0:	fb01 9103 	mla	r1, r1, r3, r9
 80184d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80184d6:	00e4      	lsls	r4, r4, #3
 80184d8:	fb13 f707 	smulbb	r7, r3, r7
 80184dc:	b2e4      	uxtb	r4, r4
 80184de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184e0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80184e4:	fb04 7403 	mla	r4, r4, r3, r7
 80184e8:	b280      	uxth	r0, r0
 80184ea:	b2a4      	uxth	r4, r4
 80184ec:	1c43      	adds	r3, r0, #1
 80184ee:	f104 0901 	add.w	r9, r4, #1
 80184f2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80184f6:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80184fa:	b289      	uxth	r1, r1
 80184fc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018500:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018504:	ea49 0000 	orr.w	r0, r9, r0
 8018508:	f101 0901 	add.w	r9, r1, #1
 801850c:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018510:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018514:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018518:	ea40 0009 	orr.w	r0, r0, r9
 801851c:	f8ac 0000 	strh.w	r0, [ip]
 8018520:	4446      	add	r6, r8
 8018522:	b2b6      	uxth	r6, r6
 8018524:	2e07      	cmp	r6, #7
 8018526:	bf81      	itttt	hi
 8018528:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801852a:	785a      	ldrbhi	r2, [r3, #1]
 801852c:	3301      	addhi	r3, #1
 801852e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018530:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018532:	bf9a      	itte	ls
 8018534:	fa42 f208 	asrls.w	r2, r2, r8
 8018538:	b2d2      	uxtbls	r2, r2
 801853a:	2600      	movhi	r6, #0
 801853c:	449c      	add	ip, r3
 801853e:	e792      	b.n	8018466 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018540:	441c      	add	r4, r3
 8018542:	b224      	sxth	r4, r4
 8018544:	e6d5      	b.n	80182f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018546:	f1ba 0f01 	cmp.w	sl, #1
 801854a:	f47f af0c 	bne.w	8018366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801854e:	f1bb 0f01 	cmp.w	fp, #1
 8018552:	f47f af08 	bne.w	8018366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018556:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018618 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801855a:	f8db 0000 	ldr.w	r0, [fp]
 801855e:	6803      	ldr	r3, [r0, #0]
 8018560:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018562:	4798      	blx	r3
 8018564:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018568:	465a      	mov	r2, fp
 801856a:	d006      	beq.n	801857a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801856c:	f1b8 0f04 	cmp.w	r8, #4
 8018570:	d140      	bne.n	80185f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018572:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018574:	3300      	adds	r3, #0
 8018576:	bf18      	it	ne
 8018578:	2301      	movne	r3, #1
 801857a:	0580      	lsls	r0, r0, #22
 801857c:	d56e      	bpl.n	801865c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801857e:	f1b8 0f08 	cmp.w	r8, #8
 8018582:	d16b      	bne.n	801865c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018584:	2b00      	cmp	r3, #0
 8018586:	bf0c      	ite	eq
 8018588:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801858c:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018590:	2d00      	cmp	r5, #0
 8018592:	f47f aee8 	bne.w	8018366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018596:	2e00      	cmp	r6, #0
 8018598:	f47f aee5 	bne.w	8018366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801859c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801859e:	19e3      	adds	r3, r4, r7
 80185a0:	4283      	cmp	r3, r0
 80185a2:	f73f aee0 	bgt.w	8018366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80185a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80185a8:	980d      	ldr	r0, [sp, #52]	; 0x34
 80185aa:	444b      	add	r3, r9
 80185ac:	4283      	cmp	r3, r0
 80185ae:	f73f aeda 	bgt.w	8018366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80185b2:	6810      	ldr	r0, [r2, #0]
 80185b4:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80185b8:	6804      	ldr	r4, [r0, #0]
 80185ba:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80185be:	b2bf      	uxth	r7, r7
 80185c0:	f1b8 0f08 	cmp.w	r8, #8
 80185c4:	f04f 0500 	mov.w	r5, #0
 80185c8:	bf18      	it	ne
 80185ca:	3701      	addne	r7, #1
 80185cc:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80185d0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80185d2:	9104      	str	r1, [sp, #16]
 80185d4:	bf18      	it	ne
 80185d6:	f027 0701 	bicne.w	r7, r7, #1
 80185da:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80185dc:	bf18      	it	ne
 80185de:	b2bf      	uxthne	r7, r7
 80185e0:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80185e4:	e9cd 7900 	strd	r7, r9, [sp]
 80185e8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80185ea:	6d64      	ldr	r4, [r4, #84]	; 0x54
 80185ec:	47a0      	blx	r4
 80185ee:	b019      	add	sp, #100	; 0x64
 80185f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185f4:	2300      	movs	r3, #0
 80185f6:	e7c0      	b.n	801857a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80185f8:	2208      	movs	r2, #8
 80185fa:	fb92 f3f8 	sdiv	r3, r2, r8
 80185fe:	1e5a      	subs	r2, r3, #1
 8018600:	443a      	add	r2, r7
 8018602:	fb92 f2f3 	sdiv	r2, r2, r3
 8018606:	fb12 f203 	smulbb	r2, r2, r3
 801860a:	b292      	uxth	r2, r2
 801860c:	e6b0      	b.n	8018370 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801860e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018610:	e6ec      	b.n	80183ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018612:	bf00      	nop
 8018614:	20014fbc 	.word	0x20014fbc
 8018618:	20014fc4 	.word	0x20014fc4
 801861c:	20014fbe 	.word	0x20014fbe
 8018620:	00fff800 	.word	0x00fff800
 8018624:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018626:	e779      	b.n	801851c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018628:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801862a:	b153      	cbz	r3, 8018642 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801862c:	441e      	add	r6, r3
 801862e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018630:	b2b6      	uxth	r6, r6
 8018632:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018636:	f006 0607 	and.w	r6, r6, #7
 801863a:	781a      	ldrb	r2, [r3, #0]
 801863c:	9328      	str	r3, [sp, #160]	; 0xa0
 801863e:	4132      	asrs	r2, r6
 8018640:	b2d2      	uxtb	r2, r2
 8018642:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018644:	445b      	add	r3, fp
 8018646:	930a      	str	r3, [sp, #40]	; 0x28
 8018648:	e706      	b.n	8018458 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801864a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801864c:	2b00      	cmp	r3, #0
 801864e:	d1ce      	bne.n	80185ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018650:	4b05      	ldr	r3, [pc, #20]	; (8018668 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018652:	6818      	ldr	r0, [r3, #0]
 8018654:	6803      	ldr	r3, [r0, #0]
 8018656:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018658:	4798      	blx	r3
 801865a:	e7c8      	b.n	80185ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801865c:	2b00      	cmp	r3, #0
 801865e:	f43f ae82 	beq.w	8018366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018662:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018666:	e793      	b.n	8018590 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018668:	20014fc4 	.word	0x20014fc4

0801866c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801866c:	b538      	push	{r3, r4, r5, lr}
 801866e:	4c15      	ldr	r4, [pc, #84]	; (80186c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018670:	7823      	ldrb	r3, [r4, #0]
 8018672:	f3bf 8f5b 	dmb	ish
 8018676:	07da      	lsls	r2, r3, #31
 8018678:	4605      	mov	r5, r0
 801867a:	d40b      	bmi.n	8018694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801867c:	4620      	mov	r0, r4
 801867e:	f007 fed5 	bl	802042c <__cxa_guard_acquire>
 8018682:	b138      	cbz	r0, 8018694 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018684:	4620      	mov	r0, r4
 8018686:	f007 fedd 	bl	8020444 <__cxa_guard_release>
 801868a:	4a0f      	ldr	r2, [pc, #60]	; (80186c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801868c:	490f      	ldr	r1, [pc, #60]	; (80186cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801868e:	4810      	ldr	r0, [pc, #64]	; (80186d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018690:	f007 fec5 	bl	802041e <__aeabi_atexit>
 8018694:	4c0f      	ldr	r4, [pc, #60]	; (80186d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018696:	7823      	ldrb	r3, [r4, #0]
 8018698:	f3bf 8f5b 	dmb	ish
 801869c:	07db      	lsls	r3, r3, #31
 801869e:	d40b      	bmi.n	80186b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80186a0:	4620      	mov	r0, r4
 80186a2:	f007 fec3 	bl	802042c <__cxa_guard_acquire>
 80186a6:	b138      	cbz	r0, 80186b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80186a8:	4620      	mov	r0, r4
 80186aa:	f007 fecb 	bl	8020444 <__cxa_guard_release>
 80186ae:	4a06      	ldr	r2, [pc, #24]	; (80186c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80186b0:	4909      	ldr	r1, [pc, #36]	; (80186d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80186b2:	480a      	ldr	r0, [pc, #40]	; (80186dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80186b4:	f007 feb3 	bl	802041e <__aeabi_atexit>
 80186b8:	4b05      	ldr	r3, [pc, #20]	; (80186d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80186ba:	612b      	str	r3, [r5, #16]
 80186bc:	4b07      	ldr	r3, [pc, #28]	; (80186dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80186be:	616b      	str	r3, [r5, #20]
 80186c0:	bd38      	pop	{r3, r4, r5, pc}
 80186c2:	bf00      	nop
 80186c4:	2001509c 	.word	0x2001509c
 80186c8:	20000000 	.word	0x20000000
 80186cc:	0801546f 	.word	0x0801546f
 80186d0:	200000d0 	.word	0x200000d0
 80186d4:	200150a0 	.word	0x200150a0
 80186d8:	0801546d 	.word	0x0801546d
 80186dc:	200000d4 	.word	0x200000d4

080186e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80186e0:	b538      	push	{r3, r4, r5, lr}
 80186e2:	4c15      	ldr	r4, [pc, #84]	; (8018738 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80186e4:	7823      	ldrb	r3, [r4, #0]
 80186e6:	f3bf 8f5b 	dmb	ish
 80186ea:	07da      	lsls	r2, r3, #31
 80186ec:	4605      	mov	r5, r0
 80186ee:	d40b      	bmi.n	8018708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80186f0:	4620      	mov	r0, r4
 80186f2:	f007 fe9b 	bl	802042c <__cxa_guard_acquire>
 80186f6:	b138      	cbz	r0, 8018708 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80186f8:	4620      	mov	r0, r4
 80186fa:	f007 fea3 	bl	8020444 <__cxa_guard_release>
 80186fe:	4a0f      	ldr	r2, [pc, #60]	; (801873c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018700:	490f      	ldr	r1, [pc, #60]	; (8018740 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018702:	4810      	ldr	r0, [pc, #64]	; (8018744 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018704:	f007 fe8b 	bl	802041e <__aeabi_atexit>
 8018708:	4c0f      	ldr	r4, [pc, #60]	; (8018748 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801870a:	7823      	ldrb	r3, [r4, #0]
 801870c:	f3bf 8f5b 	dmb	ish
 8018710:	07db      	lsls	r3, r3, #31
 8018712:	d40b      	bmi.n	801872c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018714:	4620      	mov	r0, r4
 8018716:	f007 fe89 	bl	802042c <__cxa_guard_acquire>
 801871a:	b138      	cbz	r0, 801872c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801871c:	4620      	mov	r0, r4
 801871e:	f007 fe91 	bl	8020444 <__cxa_guard_release>
 8018722:	4a06      	ldr	r2, [pc, #24]	; (801873c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018724:	4909      	ldr	r1, [pc, #36]	; (801874c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018726:	480a      	ldr	r0, [pc, #40]	; (8018750 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018728:	f007 fe79 	bl	802041e <__aeabi_atexit>
 801872c:	4b05      	ldr	r3, [pc, #20]	; (8018744 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801872e:	60ab      	str	r3, [r5, #8]
 8018730:	4b07      	ldr	r3, [pc, #28]	; (8018750 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018732:	60eb      	str	r3, [r5, #12]
 8018734:	bd38      	pop	{r3, r4, r5, pc}
 8018736:	bf00      	nop
 8018738:	20015074 	.word	0x20015074
 801873c:	20000000 	.word	0x20000000
 8018740:	08015473 	.word	0x08015473
 8018744:	200000a8 	.word	0x200000a8
 8018748:	20015078 	.word	0x20015078
 801874c:	08015471 	.word	0x08015471
 8018750:	200000ac 	.word	0x200000ac

08018754 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018754:	b510      	push	{r4, lr}
 8018756:	4604      	mov	r4, r0
 8018758:	f7ff ff88 	bl	801866c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801875c:	4620      	mov	r0, r4
 801875e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018762:	f7ff bfbd 	b.w	80186e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018768 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018768:	b538      	push	{r3, r4, r5, lr}
 801876a:	4c15      	ldr	r4, [pc, #84]	; (80187c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801876c:	7823      	ldrb	r3, [r4, #0]
 801876e:	f3bf 8f5b 	dmb	ish
 8018772:	07da      	lsls	r2, r3, #31
 8018774:	4605      	mov	r5, r0
 8018776:	d40b      	bmi.n	8018790 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018778:	4620      	mov	r0, r4
 801877a:	f007 fe57 	bl	802042c <__cxa_guard_acquire>
 801877e:	b138      	cbz	r0, 8018790 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018780:	4620      	mov	r0, r4
 8018782:	f007 fe5f 	bl	8020444 <__cxa_guard_release>
 8018786:	4a0f      	ldr	r2, [pc, #60]	; (80187c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018788:	490f      	ldr	r1, [pc, #60]	; (80187c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801878a:	4810      	ldr	r0, [pc, #64]	; (80187cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801878c:	f007 fe47 	bl	802041e <__aeabi_atexit>
 8018790:	4c0f      	ldr	r4, [pc, #60]	; (80187d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018792:	7823      	ldrb	r3, [r4, #0]
 8018794:	f3bf 8f5b 	dmb	ish
 8018798:	07db      	lsls	r3, r3, #31
 801879a:	d40b      	bmi.n	80187b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801879c:	4620      	mov	r0, r4
 801879e:	f007 fe45 	bl	802042c <__cxa_guard_acquire>
 80187a2:	b138      	cbz	r0, 80187b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80187a4:	4620      	mov	r0, r4
 80187a6:	f007 fe4d 	bl	8020444 <__cxa_guard_release>
 80187aa:	4a06      	ldr	r2, [pc, #24]	; (80187c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80187ac:	4909      	ldr	r1, [pc, #36]	; (80187d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80187ae:	480a      	ldr	r0, [pc, #40]	; (80187d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80187b0:	f007 fe35 	bl	802041e <__aeabi_atexit>
 80187b4:	4b05      	ldr	r3, [pc, #20]	; (80187cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80187b6:	622b      	str	r3, [r5, #32]
 80187b8:	4b07      	ldr	r3, [pc, #28]	; (80187d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80187ba:	626b      	str	r3, [r5, #36]	; 0x24
 80187bc:	bd38      	pop	{r3, r4, r5, pc}
 80187be:	bf00      	nop
 80187c0:	200150a4 	.word	0x200150a4
 80187c4:	20000000 	.word	0x20000000
 80187c8:	08015467 	.word	0x08015467
 80187cc:	200000d8 	.word	0x200000d8
 80187d0:	200150a8 	.word	0x200150a8
 80187d4:	08015465 	.word	0x08015465
 80187d8:	200000dc 	.word	0x200000dc

080187dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80187dc:	b538      	push	{r3, r4, r5, lr}
 80187de:	4c15      	ldr	r4, [pc, #84]	; (8018834 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80187e0:	7823      	ldrb	r3, [r4, #0]
 80187e2:	f3bf 8f5b 	dmb	ish
 80187e6:	07da      	lsls	r2, r3, #31
 80187e8:	4605      	mov	r5, r0
 80187ea:	d40b      	bmi.n	8018804 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80187ec:	4620      	mov	r0, r4
 80187ee:	f007 fe1d 	bl	802042c <__cxa_guard_acquire>
 80187f2:	b138      	cbz	r0, 8018804 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80187f4:	4620      	mov	r0, r4
 80187f6:	f007 fe25 	bl	8020444 <__cxa_guard_release>
 80187fa:	4a0f      	ldr	r2, [pc, #60]	; (8018838 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80187fc:	490f      	ldr	r1, [pc, #60]	; (801883c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80187fe:	4810      	ldr	r0, [pc, #64]	; (8018840 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018800:	f007 fe0d 	bl	802041e <__aeabi_atexit>
 8018804:	4c0f      	ldr	r4, [pc, #60]	; (8018844 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018806:	7823      	ldrb	r3, [r4, #0]
 8018808:	f3bf 8f5b 	dmb	ish
 801880c:	07db      	lsls	r3, r3, #31
 801880e:	d40b      	bmi.n	8018828 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018810:	4620      	mov	r0, r4
 8018812:	f007 fe0b 	bl	802042c <__cxa_guard_acquire>
 8018816:	b138      	cbz	r0, 8018828 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018818:	4620      	mov	r0, r4
 801881a:	f007 fe13 	bl	8020444 <__cxa_guard_release>
 801881e:	4a06      	ldr	r2, [pc, #24]	; (8018838 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018820:	4909      	ldr	r1, [pc, #36]	; (8018848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018822:	480a      	ldr	r0, [pc, #40]	; (801884c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018824:	f007 fdfb 	bl	802041e <__aeabi_atexit>
 8018828:	4b05      	ldr	r3, [pc, #20]	; (8018840 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801882a:	61ab      	str	r3, [r5, #24]
 801882c:	4b07      	ldr	r3, [pc, #28]	; (801884c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801882e:	61eb      	str	r3, [r5, #28]
 8018830:	bd38      	pop	{r3, r4, r5, pc}
 8018832:	bf00      	nop
 8018834:	2001507c 	.word	0x2001507c
 8018838:	20000000 	.word	0x20000000
 801883c:	0801546b 	.word	0x0801546b
 8018840:	200000b0 	.word	0x200000b0
 8018844:	20015080 	.word	0x20015080
 8018848:	08015469 	.word	0x08015469
 801884c:	200000b4 	.word	0x200000b4

08018850 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018850:	b510      	push	{r4, lr}
 8018852:	4604      	mov	r4, r0
 8018854:	f7ff ff88 	bl	8018768 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018858:	4620      	mov	r0, r4
 801885a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801885e:	f7ff bfbd 	b.w	80187dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018864 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018864:	b538      	push	{r3, r4, r5, lr}
 8018866:	4c15      	ldr	r4, [pc, #84]	; (80188bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018868:	7823      	ldrb	r3, [r4, #0]
 801886a:	f3bf 8f5b 	dmb	ish
 801886e:	07da      	lsls	r2, r3, #31
 8018870:	4605      	mov	r5, r0
 8018872:	d40b      	bmi.n	801888c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018874:	4620      	mov	r0, r4
 8018876:	f007 fdd9 	bl	802042c <__cxa_guard_acquire>
 801887a:	b138      	cbz	r0, 801888c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801887c:	4620      	mov	r0, r4
 801887e:	f007 fde1 	bl	8020444 <__cxa_guard_release>
 8018882:	4a0f      	ldr	r2, [pc, #60]	; (80188c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018884:	490f      	ldr	r1, [pc, #60]	; (80188c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018886:	4810      	ldr	r0, [pc, #64]	; (80188c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018888:	f007 fdc9 	bl	802041e <__aeabi_atexit>
 801888c:	4c0f      	ldr	r4, [pc, #60]	; (80188cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801888e:	7823      	ldrb	r3, [r4, #0]
 8018890:	f3bf 8f5b 	dmb	ish
 8018894:	07db      	lsls	r3, r3, #31
 8018896:	d40b      	bmi.n	80188b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018898:	4620      	mov	r0, r4
 801889a:	f007 fdc7 	bl	802042c <__cxa_guard_acquire>
 801889e:	b138      	cbz	r0, 80188b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80188a0:	4620      	mov	r0, r4
 80188a2:	f007 fdcf 	bl	8020444 <__cxa_guard_release>
 80188a6:	4a06      	ldr	r2, [pc, #24]	; (80188c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80188a8:	4909      	ldr	r1, [pc, #36]	; (80188d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80188aa:	480a      	ldr	r0, [pc, #40]	; (80188d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80188ac:	f007 fdb7 	bl	802041e <__aeabi_atexit>
 80188b0:	4b05      	ldr	r3, [pc, #20]	; (80188c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80188b2:	632b      	str	r3, [r5, #48]	; 0x30
 80188b4:	4b07      	ldr	r3, [pc, #28]	; (80188d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80188b6:	636b      	str	r3, [r5, #52]	; 0x34
 80188b8:	bd38      	pop	{r3, r4, r5, pc}
 80188ba:	bf00      	nop
 80188bc:	200150b4 	.word	0x200150b4
 80188c0:	20000000 	.word	0x20000000
 80188c4:	0801545f 	.word	0x0801545f
 80188c8:	200000e8 	.word	0x200000e8
 80188cc:	200150b8 	.word	0x200150b8
 80188d0:	0801545d 	.word	0x0801545d
 80188d4:	200000ec 	.word	0x200000ec

080188d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80188d8:	b538      	push	{r3, r4, r5, lr}
 80188da:	4c15      	ldr	r4, [pc, #84]	; (8018930 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80188dc:	7823      	ldrb	r3, [r4, #0]
 80188de:	f3bf 8f5b 	dmb	ish
 80188e2:	07da      	lsls	r2, r3, #31
 80188e4:	4605      	mov	r5, r0
 80188e6:	d40b      	bmi.n	8018900 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80188e8:	4620      	mov	r0, r4
 80188ea:	f007 fd9f 	bl	802042c <__cxa_guard_acquire>
 80188ee:	b138      	cbz	r0, 8018900 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80188f0:	4620      	mov	r0, r4
 80188f2:	f007 fda7 	bl	8020444 <__cxa_guard_release>
 80188f6:	4a0f      	ldr	r2, [pc, #60]	; (8018934 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80188f8:	490f      	ldr	r1, [pc, #60]	; (8018938 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80188fa:	4810      	ldr	r0, [pc, #64]	; (801893c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80188fc:	f007 fd8f 	bl	802041e <__aeabi_atexit>
 8018900:	4c0f      	ldr	r4, [pc, #60]	; (8018940 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018902:	7823      	ldrb	r3, [r4, #0]
 8018904:	f3bf 8f5b 	dmb	ish
 8018908:	07db      	lsls	r3, r3, #31
 801890a:	d40b      	bmi.n	8018924 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801890c:	4620      	mov	r0, r4
 801890e:	f007 fd8d 	bl	802042c <__cxa_guard_acquire>
 8018912:	b138      	cbz	r0, 8018924 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018914:	4620      	mov	r0, r4
 8018916:	f007 fd95 	bl	8020444 <__cxa_guard_release>
 801891a:	4a06      	ldr	r2, [pc, #24]	; (8018934 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801891c:	4909      	ldr	r1, [pc, #36]	; (8018944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801891e:	480a      	ldr	r0, [pc, #40]	; (8018948 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018920:	f007 fd7d 	bl	802041e <__aeabi_atexit>
 8018924:	4b05      	ldr	r3, [pc, #20]	; (801893c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018926:	62ab      	str	r3, [r5, #40]	; 0x28
 8018928:	4b07      	ldr	r3, [pc, #28]	; (8018948 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801892a:	62eb      	str	r3, [r5, #44]	; 0x2c
 801892c:	bd38      	pop	{r3, r4, r5, pc}
 801892e:	bf00      	nop
 8018930:	20015084 	.word	0x20015084
 8018934:	20000000 	.word	0x20000000
 8018938:	08015463 	.word	0x08015463
 801893c:	200000b8 	.word	0x200000b8
 8018940:	20015088 	.word	0x20015088
 8018944:	08015461 	.word	0x08015461
 8018948:	200000bc 	.word	0x200000bc

0801894c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801894c:	b510      	push	{r4, lr}
 801894e:	4604      	mov	r4, r0
 8018950:	f7ff ff88 	bl	8018864 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018954:	4620      	mov	r0, r4
 8018956:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801895a:	f7ff bfbd 	b.w	80188d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018960 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018960:	b538      	push	{r3, r4, r5, lr}
 8018962:	4c15      	ldr	r4, [pc, #84]	; (80189b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018964:	7823      	ldrb	r3, [r4, #0]
 8018966:	f3bf 8f5b 	dmb	ish
 801896a:	07da      	lsls	r2, r3, #31
 801896c:	4605      	mov	r5, r0
 801896e:	d40b      	bmi.n	8018988 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018970:	4620      	mov	r0, r4
 8018972:	f007 fd5b 	bl	802042c <__cxa_guard_acquire>
 8018976:	b138      	cbz	r0, 8018988 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018978:	4620      	mov	r0, r4
 801897a:	f007 fd63 	bl	8020444 <__cxa_guard_release>
 801897e:	4a0f      	ldr	r2, [pc, #60]	; (80189bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018980:	490f      	ldr	r1, [pc, #60]	; (80189c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018982:	4810      	ldr	r0, [pc, #64]	; (80189c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018984:	f007 fd4b 	bl	802041e <__aeabi_atexit>
 8018988:	4c0f      	ldr	r4, [pc, #60]	; (80189c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801898a:	7823      	ldrb	r3, [r4, #0]
 801898c:	f3bf 8f5b 	dmb	ish
 8018990:	07db      	lsls	r3, r3, #31
 8018992:	d40b      	bmi.n	80189ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018994:	4620      	mov	r0, r4
 8018996:	f007 fd49 	bl	802042c <__cxa_guard_acquire>
 801899a:	b138      	cbz	r0, 80189ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801899c:	4620      	mov	r0, r4
 801899e:	f007 fd51 	bl	8020444 <__cxa_guard_release>
 80189a2:	4a06      	ldr	r2, [pc, #24]	; (80189bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80189a4:	4909      	ldr	r1, [pc, #36]	; (80189cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80189a6:	480a      	ldr	r0, [pc, #40]	; (80189d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80189a8:	f007 fd39 	bl	802041e <__aeabi_atexit>
 80189ac:	4b05      	ldr	r3, [pc, #20]	; (80189c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80189ae:	652b      	str	r3, [r5, #80]	; 0x50
 80189b0:	4b07      	ldr	r3, [pc, #28]	; (80189d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80189b2:	656b      	str	r3, [r5, #84]	; 0x54
 80189b4:	bd38      	pop	{r3, r4, r5, pc}
 80189b6:	bf00      	nop
 80189b8:	200150bc 	.word	0x200150bc
 80189bc:	20000000 	.word	0x20000000
 80189c0:	0801544f 	.word	0x0801544f
 80189c4:	200000f0 	.word	0x200000f0
 80189c8:	200150c0 	.word	0x200150c0
 80189cc:	0801544d 	.word	0x0801544d
 80189d0:	200000f4 	.word	0x200000f4

080189d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80189d4:	b538      	push	{r3, r4, r5, lr}
 80189d6:	4c15      	ldr	r4, [pc, #84]	; (8018a2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80189d8:	7823      	ldrb	r3, [r4, #0]
 80189da:	f3bf 8f5b 	dmb	ish
 80189de:	07da      	lsls	r2, r3, #31
 80189e0:	4605      	mov	r5, r0
 80189e2:	d40b      	bmi.n	80189fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80189e4:	4620      	mov	r0, r4
 80189e6:	f007 fd21 	bl	802042c <__cxa_guard_acquire>
 80189ea:	b138      	cbz	r0, 80189fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80189ec:	4620      	mov	r0, r4
 80189ee:	f007 fd29 	bl	8020444 <__cxa_guard_release>
 80189f2:	4a0f      	ldr	r2, [pc, #60]	; (8018a30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80189f4:	490f      	ldr	r1, [pc, #60]	; (8018a34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80189f6:	4810      	ldr	r0, [pc, #64]	; (8018a38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80189f8:	f007 fd11 	bl	802041e <__aeabi_atexit>
 80189fc:	4c0f      	ldr	r4, [pc, #60]	; (8018a3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80189fe:	7823      	ldrb	r3, [r4, #0]
 8018a00:	f3bf 8f5b 	dmb	ish
 8018a04:	07db      	lsls	r3, r3, #31
 8018a06:	d40b      	bmi.n	8018a20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018a08:	4620      	mov	r0, r4
 8018a0a:	f007 fd0f 	bl	802042c <__cxa_guard_acquire>
 8018a0e:	b138      	cbz	r0, 8018a20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018a10:	4620      	mov	r0, r4
 8018a12:	f007 fd17 	bl	8020444 <__cxa_guard_release>
 8018a16:	4a06      	ldr	r2, [pc, #24]	; (8018a30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018a18:	4909      	ldr	r1, [pc, #36]	; (8018a40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018a1a:	480a      	ldr	r0, [pc, #40]	; (8018a44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018a1c:	f007 fcff 	bl	802041e <__aeabi_atexit>
 8018a20:	4b05      	ldr	r3, [pc, #20]	; (8018a38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018a22:	64ab      	str	r3, [r5, #72]	; 0x48
 8018a24:	4b07      	ldr	r3, [pc, #28]	; (8018a44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018a26:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018a28:	bd38      	pop	{r3, r4, r5, pc}
 8018a2a:	bf00      	nop
 8018a2c:	200150c4 	.word	0x200150c4
 8018a30:	20000000 	.word	0x20000000
 8018a34:	08015453 	.word	0x08015453
 8018a38:	200000f8 	.word	0x200000f8
 8018a3c:	200150c8 	.word	0x200150c8
 8018a40:	08015451 	.word	0x08015451
 8018a44:	200000fc 	.word	0x200000fc

08018a48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018a48:	b538      	push	{r3, r4, r5, lr}
 8018a4a:	4c15      	ldr	r4, [pc, #84]	; (8018aa0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018a4c:	7823      	ldrb	r3, [r4, #0]
 8018a4e:	f3bf 8f5b 	dmb	ish
 8018a52:	07da      	lsls	r2, r3, #31
 8018a54:	4605      	mov	r5, r0
 8018a56:	d40b      	bmi.n	8018a70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018a58:	4620      	mov	r0, r4
 8018a5a:	f007 fce7 	bl	802042c <__cxa_guard_acquire>
 8018a5e:	b138      	cbz	r0, 8018a70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018a60:	4620      	mov	r0, r4
 8018a62:	f007 fcef 	bl	8020444 <__cxa_guard_release>
 8018a66:	4a0f      	ldr	r2, [pc, #60]	; (8018aa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018a68:	490f      	ldr	r1, [pc, #60]	; (8018aa8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018a6a:	4810      	ldr	r0, [pc, #64]	; (8018aac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018a6c:	f007 fcd7 	bl	802041e <__aeabi_atexit>
 8018a70:	4c0f      	ldr	r4, [pc, #60]	; (8018ab0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018a72:	7823      	ldrb	r3, [r4, #0]
 8018a74:	f3bf 8f5b 	dmb	ish
 8018a78:	07db      	lsls	r3, r3, #31
 8018a7a:	d40b      	bmi.n	8018a94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018a7c:	4620      	mov	r0, r4
 8018a7e:	f007 fcd5 	bl	802042c <__cxa_guard_acquire>
 8018a82:	b138      	cbz	r0, 8018a94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018a84:	4620      	mov	r0, r4
 8018a86:	f007 fcdd 	bl	8020444 <__cxa_guard_release>
 8018a8a:	4a06      	ldr	r2, [pc, #24]	; (8018aa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018a8c:	4909      	ldr	r1, [pc, #36]	; (8018ab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018a8e:	480a      	ldr	r0, [pc, #40]	; (8018ab8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018a90:	f007 fcc5 	bl	802041e <__aeabi_atexit>
 8018a94:	4b05      	ldr	r3, [pc, #20]	; (8018aac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018a96:	642b      	str	r3, [r5, #64]	; 0x40
 8018a98:	4b07      	ldr	r3, [pc, #28]	; (8018ab8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018a9a:	646b      	str	r3, [r5, #68]	; 0x44
 8018a9c:	bd38      	pop	{r3, r4, r5, pc}
 8018a9e:	bf00      	nop
 8018aa0:	2001508c 	.word	0x2001508c
 8018aa4:	20000000 	.word	0x20000000
 8018aa8:	08015457 	.word	0x08015457
 8018aac:	200000c0 	.word	0x200000c0
 8018ab0:	20015090 	.word	0x20015090
 8018ab4:	08015455 	.word	0x08015455
 8018ab8:	200000c4 	.word	0x200000c4

08018abc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018abc:	b538      	push	{r3, r4, r5, lr}
 8018abe:	4c15      	ldr	r4, [pc, #84]	; (8018b14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018ac0:	7823      	ldrb	r3, [r4, #0]
 8018ac2:	f3bf 8f5b 	dmb	ish
 8018ac6:	07da      	lsls	r2, r3, #31
 8018ac8:	4605      	mov	r5, r0
 8018aca:	d40b      	bmi.n	8018ae4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018acc:	4620      	mov	r0, r4
 8018ace:	f007 fcad 	bl	802042c <__cxa_guard_acquire>
 8018ad2:	b138      	cbz	r0, 8018ae4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018ad4:	4620      	mov	r0, r4
 8018ad6:	f007 fcb5 	bl	8020444 <__cxa_guard_release>
 8018ada:	4a0f      	ldr	r2, [pc, #60]	; (8018b18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018adc:	490f      	ldr	r1, [pc, #60]	; (8018b1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8018ade:	4810      	ldr	r0, [pc, #64]	; (8018b20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018ae0:	f007 fc9d 	bl	802041e <__aeabi_atexit>
 8018ae4:	4c0f      	ldr	r4, [pc, #60]	; (8018b24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8018ae6:	7823      	ldrb	r3, [r4, #0]
 8018ae8:	f3bf 8f5b 	dmb	ish
 8018aec:	07db      	lsls	r3, r3, #31
 8018aee:	d40b      	bmi.n	8018b08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018af0:	4620      	mov	r0, r4
 8018af2:	f007 fc9b 	bl	802042c <__cxa_guard_acquire>
 8018af6:	b138      	cbz	r0, 8018b08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8018af8:	4620      	mov	r0, r4
 8018afa:	f007 fca3 	bl	8020444 <__cxa_guard_release>
 8018afe:	4a06      	ldr	r2, [pc, #24]	; (8018b18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8018b00:	4909      	ldr	r1, [pc, #36]	; (8018b28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8018b02:	480a      	ldr	r0, [pc, #40]	; (8018b2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018b04:	f007 fc8b 	bl	802041e <__aeabi_atexit>
 8018b08:	4b05      	ldr	r3, [pc, #20]	; (8018b20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8018b0a:	63ab      	str	r3, [r5, #56]	; 0x38
 8018b0c:	4b07      	ldr	r3, [pc, #28]	; (8018b2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8018b0e:	63eb      	str	r3, [r5, #60]	; 0x3c
 8018b10:	bd38      	pop	{r3, r4, r5, pc}
 8018b12:	bf00      	nop
 8018b14:	200150ac 	.word	0x200150ac
 8018b18:	20000000 	.word	0x20000000
 8018b1c:	0801545b 	.word	0x0801545b
 8018b20:	200000e0 	.word	0x200000e0
 8018b24:	200150b0 	.word	0x200150b0
 8018b28:	08015459 	.word	0x08015459
 8018b2c:	200000e4 	.word	0x200000e4

08018b30 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8018b30:	b510      	push	{r4, lr}
 8018b32:	4604      	mov	r4, r0
 8018b34:	f7ff ff14 	bl	8018960 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8018b38:	4620      	mov	r0, r4
 8018b3a:	f7ff ff85 	bl	8018a48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8018b3e:	4620      	mov	r0, r4
 8018b40:	f7ff ff48 	bl	80189d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018b44:	4620      	mov	r0, r4
 8018b46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018b4a:	f7ff bfb7 	b.w	8018abc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018b50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018b50:	b538      	push	{r3, r4, r5, lr}
 8018b52:	4c15      	ldr	r4, [pc, #84]	; (8018ba8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018b54:	7823      	ldrb	r3, [r4, #0]
 8018b56:	f3bf 8f5b 	dmb	ish
 8018b5a:	07da      	lsls	r2, r3, #31
 8018b5c:	4605      	mov	r5, r0
 8018b5e:	d40b      	bmi.n	8018b78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018b60:	4620      	mov	r0, r4
 8018b62:	f007 fc63 	bl	802042c <__cxa_guard_acquire>
 8018b66:	b138      	cbz	r0, 8018b78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018b68:	4620      	mov	r0, r4
 8018b6a:	f007 fc6b 	bl	8020444 <__cxa_guard_release>
 8018b6e:	4a0f      	ldr	r2, [pc, #60]	; (8018bac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018b70:	490f      	ldr	r1, [pc, #60]	; (8018bb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018b72:	4810      	ldr	r0, [pc, #64]	; (8018bb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018b74:	f007 fc53 	bl	802041e <__aeabi_atexit>
 8018b78:	4c0f      	ldr	r4, [pc, #60]	; (8018bb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8018b7a:	7823      	ldrb	r3, [r4, #0]
 8018b7c:	f3bf 8f5b 	dmb	ish
 8018b80:	07db      	lsls	r3, r3, #31
 8018b82:	d40b      	bmi.n	8018b9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018b84:	4620      	mov	r0, r4
 8018b86:	f007 fc51 	bl	802042c <__cxa_guard_acquire>
 8018b8a:	b138      	cbz	r0, 8018b9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018b8c:	4620      	mov	r0, r4
 8018b8e:	f007 fc59 	bl	8020444 <__cxa_guard_release>
 8018b92:	4a06      	ldr	r2, [pc, #24]	; (8018bac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018b94:	4909      	ldr	r1, [pc, #36]	; (8018bbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018b96:	480a      	ldr	r0, [pc, #40]	; (8018bc0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018b98:	f007 fc41 	bl	802041e <__aeabi_atexit>
 8018b9c:	4b05      	ldr	r3, [pc, #20]	; (8018bb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018b9e:	662b      	str	r3, [r5, #96]	; 0x60
 8018ba0:	4b07      	ldr	r3, [pc, #28]	; (8018bc0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018ba2:	666b      	str	r3, [r5, #100]	; 0x64
 8018ba4:	bd38      	pop	{r3, r4, r5, pc}
 8018ba6:	bf00      	nop
 8018ba8:	20015094 	.word	0x20015094
 8018bac:	20000000 	.word	0x20000000
 8018bb0:	08015447 	.word	0x08015447
 8018bb4:	200000c8 	.word	0x200000c8
 8018bb8:	20015098 	.word	0x20015098
 8018bbc:	08015445 	.word	0x08015445
 8018bc0:	200000cc 	.word	0x200000cc

08018bc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018bc4:	b538      	push	{r3, r4, r5, lr}
 8018bc6:	4c15      	ldr	r4, [pc, #84]	; (8018c1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018bc8:	7823      	ldrb	r3, [r4, #0]
 8018bca:	f3bf 8f5b 	dmb	ish
 8018bce:	07da      	lsls	r2, r3, #31
 8018bd0:	4605      	mov	r5, r0
 8018bd2:	d40b      	bmi.n	8018bec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018bd4:	4620      	mov	r0, r4
 8018bd6:	f007 fc29 	bl	802042c <__cxa_guard_acquire>
 8018bda:	b138      	cbz	r0, 8018bec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018bdc:	4620      	mov	r0, r4
 8018bde:	f007 fc31 	bl	8020444 <__cxa_guard_release>
 8018be2:	4a0f      	ldr	r2, [pc, #60]	; (8018c20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018be4:	490f      	ldr	r1, [pc, #60]	; (8018c24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8018be6:	4810      	ldr	r0, [pc, #64]	; (8018c28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018be8:	f007 fc19 	bl	802041e <__aeabi_atexit>
 8018bec:	4c0f      	ldr	r4, [pc, #60]	; (8018c2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8018bee:	7823      	ldrb	r3, [r4, #0]
 8018bf0:	f3bf 8f5b 	dmb	ish
 8018bf4:	07db      	lsls	r3, r3, #31
 8018bf6:	d40b      	bmi.n	8018c10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018bf8:	4620      	mov	r0, r4
 8018bfa:	f007 fc17 	bl	802042c <__cxa_guard_acquire>
 8018bfe:	b138      	cbz	r0, 8018c10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8018c00:	4620      	mov	r0, r4
 8018c02:	f007 fc1f 	bl	8020444 <__cxa_guard_release>
 8018c06:	4a06      	ldr	r2, [pc, #24]	; (8018c20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8018c08:	4909      	ldr	r1, [pc, #36]	; (8018c30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8018c0a:	480a      	ldr	r0, [pc, #40]	; (8018c34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018c0c:	f007 fc07 	bl	802041e <__aeabi_atexit>
 8018c10:	4b05      	ldr	r3, [pc, #20]	; (8018c28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8018c12:	65ab      	str	r3, [r5, #88]	; 0x58
 8018c14:	4b07      	ldr	r3, [pc, #28]	; (8018c34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8018c16:	65eb      	str	r3, [r5, #92]	; 0x5c
 8018c18:	bd38      	pop	{r3, r4, r5, pc}
 8018c1a:	bf00      	nop
 8018c1c:	2001506c 	.word	0x2001506c
 8018c20:	20000000 	.word	0x20000000
 8018c24:	0801544b 	.word	0x0801544b
 8018c28:	200000a0 	.word	0x200000a0
 8018c2c:	20015070 	.word	0x20015070
 8018c30:	08015449 	.word	0x08015449
 8018c34:	200000a4 	.word	0x200000a4

08018c38 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8018c38:	b510      	push	{r4, lr}
 8018c3a:	4604      	mov	r4, r0
 8018c3c:	f7ff ff88 	bl	8018b50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8018c40:	4620      	mov	r0, r4
 8018c42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018c46:	f7ff bfbd 	b.w	8018bc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08018c4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8018c4c:	b538      	push	{r3, r4, r5, lr}
 8018c4e:	4c15      	ldr	r4, [pc, #84]	; (8018ca4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8018c50:	7823      	ldrb	r3, [r4, #0]
 8018c52:	f3bf 8f5b 	dmb	ish
 8018c56:	07da      	lsls	r2, r3, #31
 8018c58:	4605      	mov	r5, r0
 8018c5a:	d40b      	bmi.n	8018c74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018c5c:	4620      	mov	r0, r4
 8018c5e:	f007 fbe5 	bl	802042c <__cxa_guard_acquire>
 8018c62:	b138      	cbz	r0, 8018c74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018c64:	4620      	mov	r0, r4
 8018c66:	f007 fbed 	bl	8020444 <__cxa_guard_release>
 8018c6a:	4a0f      	ldr	r2, [pc, #60]	; (8018ca8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018c6c:	490f      	ldr	r1, [pc, #60]	; (8018cac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8018c6e:	4810      	ldr	r0, [pc, #64]	; (8018cb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018c70:	f007 fbd5 	bl	802041e <__aeabi_atexit>
 8018c74:	4c0f      	ldr	r4, [pc, #60]	; (8018cb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8018c76:	7823      	ldrb	r3, [r4, #0]
 8018c78:	f3bf 8f5b 	dmb	ish
 8018c7c:	07db      	lsls	r3, r3, #31
 8018c7e:	d40b      	bmi.n	8018c98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018c80:	4620      	mov	r0, r4
 8018c82:	f007 fbd3 	bl	802042c <__cxa_guard_acquire>
 8018c86:	b138      	cbz	r0, 8018c98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018c88:	4620      	mov	r0, r4
 8018c8a:	f007 fbdb 	bl	8020444 <__cxa_guard_release>
 8018c8e:	4a06      	ldr	r2, [pc, #24]	; (8018ca8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018c90:	4909      	ldr	r1, [pc, #36]	; (8018cb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8018c92:	480a      	ldr	r0, [pc, #40]	; (8018cbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018c94:	f007 fbc3 	bl	802041e <__aeabi_atexit>
 8018c98:	4b05      	ldr	r3, [pc, #20]	; (8018cb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018c9a:	672b      	str	r3, [r5, #112]	; 0x70
 8018c9c:	4b07      	ldr	r3, [pc, #28]	; (8018cbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018c9e:	676b      	str	r3, [r5, #116]	; 0x74
 8018ca0:	bd38      	pop	{r3, r4, r5, pc}
 8018ca2:	bf00      	nop
 8018ca4:	20015064 	.word	0x20015064
 8018ca8:	20000000 	.word	0x20000000
 8018cac:	0801543f 	.word	0x0801543f
 8018cb0:	20000098 	.word	0x20000098
 8018cb4:	20015068 	.word	0x20015068
 8018cb8:	0801543d 	.word	0x0801543d
 8018cbc:	2000009c 	.word	0x2000009c

08018cc0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8018cc0:	b538      	push	{r3, r4, r5, lr}
 8018cc2:	4c15      	ldr	r4, [pc, #84]	; (8018d18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018cc4:	7823      	ldrb	r3, [r4, #0]
 8018cc6:	f3bf 8f5b 	dmb	ish
 8018cca:	07da      	lsls	r2, r3, #31
 8018ccc:	4605      	mov	r5, r0
 8018cce:	d40b      	bmi.n	8018ce8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018cd0:	4620      	mov	r0, r4
 8018cd2:	f007 fbab 	bl	802042c <__cxa_guard_acquire>
 8018cd6:	b138      	cbz	r0, 8018ce8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018cd8:	4620      	mov	r0, r4
 8018cda:	f007 fbb3 	bl	8020444 <__cxa_guard_release>
 8018cde:	4a0f      	ldr	r2, [pc, #60]	; (8018d1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018ce0:	490f      	ldr	r1, [pc, #60]	; (8018d20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8018ce2:	4810      	ldr	r0, [pc, #64]	; (8018d24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018ce4:	f007 fb9b 	bl	802041e <__aeabi_atexit>
 8018ce8:	4c0f      	ldr	r4, [pc, #60]	; (8018d28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8018cea:	7823      	ldrb	r3, [r4, #0]
 8018cec:	f3bf 8f5b 	dmb	ish
 8018cf0:	07db      	lsls	r3, r3, #31
 8018cf2:	d40b      	bmi.n	8018d0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018cf4:	4620      	mov	r0, r4
 8018cf6:	f007 fb99 	bl	802042c <__cxa_guard_acquire>
 8018cfa:	b138      	cbz	r0, 8018d0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8018cfc:	4620      	mov	r0, r4
 8018cfe:	f007 fba1 	bl	8020444 <__cxa_guard_release>
 8018d02:	4a06      	ldr	r2, [pc, #24]	; (8018d1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8018d04:	4909      	ldr	r1, [pc, #36]	; (8018d2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8018d06:	480a      	ldr	r0, [pc, #40]	; (8018d30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018d08:	f007 fb89 	bl	802041e <__aeabi_atexit>
 8018d0c:	4b05      	ldr	r3, [pc, #20]	; (8018d24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8018d0e:	66ab      	str	r3, [r5, #104]	; 0x68
 8018d10:	4b07      	ldr	r3, [pc, #28]	; (8018d30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8018d12:	66eb      	str	r3, [r5, #108]	; 0x6c
 8018d14:	bd38      	pop	{r3, r4, r5, pc}
 8018d16:	bf00      	nop
 8018d18:	2001505c 	.word	0x2001505c
 8018d1c:	20000000 	.word	0x20000000
 8018d20:	08015443 	.word	0x08015443
 8018d24:	20000090 	.word	0x20000090
 8018d28:	20015060 	.word	0x20015060
 8018d2c:	08015441 	.word	0x08015441
 8018d30:	20000094 	.word	0x20000094

08018d34 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8018d34:	b510      	push	{r4, lr}
 8018d36:	4604      	mov	r4, r0
 8018d38:	f7ff ff88 	bl	8018c4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8018d3c:	4620      	mov	r0, r4
 8018d3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018d42:	f7ff bfbd 	b.w	8018cc0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08018d46 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8018d46:	b510      	push	{r4, lr}
 8018d48:	4604      	mov	r4, r0
 8018d4a:	f7ff fff3 	bl	8018d34 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8018d4e:	4620      	mov	r0, r4
 8018d50:	f7ff ff72 	bl	8018c38 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8018d54:	4620      	mov	r0, r4
 8018d56:	f7ff fdf9 	bl	801894c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8018d5a:	4620      	mov	r0, r4
 8018d5c:	f7ff fcfa 	bl	8018754 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8018d60:	4620      	mov	r0, r4
 8018d62:	f7ff fd75 	bl	8018850 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8018d66:	4620      	mov	r0, r4
 8018d68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018d6c:	f7ff bee0 	b.w	8018b30 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08018d70 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8018d70:	b538      	push	{r3, r4, r5, lr}
 8018d72:	4c0b      	ldr	r4, [pc, #44]	; (8018da0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8018d74:	7823      	ldrb	r3, [r4, #0]
 8018d76:	f3bf 8f5b 	dmb	ish
 8018d7a:	07db      	lsls	r3, r3, #31
 8018d7c:	4605      	mov	r5, r0
 8018d7e:	d40b      	bmi.n	8018d98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8018d80:	4620      	mov	r0, r4
 8018d82:	f007 fb53 	bl	802042c <__cxa_guard_acquire>
 8018d86:	b138      	cbz	r0, 8018d98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8018d88:	4620      	mov	r0, r4
 8018d8a:	f007 fb5b 	bl	8020444 <__cxa_guard_release>
 8018d8e:	4a05      	ldr	r2, [pc, #20]	; (8018da4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8018d90:	4905      	ldr	r1, [pc, #20]	; (8018da8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8018d92:	4806      	ldr	r0, [pc, #24]	; (8018dac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8018d94:	f007 fb43 	bl	802041e <__aeabi_atexit>
 8018d98:	4b04      	ldr	r3, [pc, #16]	; (8018dac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8018d9a:	67ab      	str	r3, [r5, #120]	; 0x78
 8018d9c:	bd38      	pop	{r3, r4, r5, pc}
 8018d9e:	bf00      	nop
 8018da0:	20015050 	.word	0x20015050
 8018da4:	20000000 	.word	0x20000000
 8018da8:	0801543b 	.word	0x0801543b
 8018dac:	20000088 	.word	0x20000088

08018db0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8018db0:	b538      	push	{r3, r4, r5, lr}
 8018db2:	4c0b      	ldr	r4, [pc, #44]	; (8018de0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8018db4:	7823      	ldrb	r3, [r4, #0]
 8018db6:	f3bf 8f5b 	dmb	ish
 8018dba:	07db      	lsls	r3, r3, #31
 8018dbc:	4605      	mov	r5, r0
 8018dbe:	d40b      	bmi.n	8018dd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8018dc0:	4620      	mov	r0, r4
 8018dc2:	f007 fb33 	bl	802042c <__cxa_guard_acquire>
 8018dc6:	b138      	cbz	r0, 8018dd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8018dc8:	4620      	mov	r0, r4
 8018dca:	f007 fb3b 	bl	8020444 <__cxa_guard_release>
 8018dce:	4a05      	ldr	r2, [pc, #20]	; (8018de4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8018dd0:	4905      	ldr	r1, [pc, #20]	; (8018de8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8018dd2:	4806      	ldr	r0, [pc, #24]	; (8018dec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8018dd4:	f007 fb23 	bl	802041e <__aeabi_atexit>
 8018dd8:	4b04      	ldr	r3, [pc, #16]	; (8018dec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8018dda:	67eb      	str	r3, [r5, #124]	; 0x7c
 8018ddc:	bd38      	pop	{r3, r4, r5, pc}
 8018dde:	bf00      	nop
 8018de0:	20015054 	.word	0x20015054
 8018de4:	20000000 	.word	0x20000000
 8018de8:	08015439 	.word	0x08015439
 8018dec:	2000008c 	.word	0x2000008c

08018df0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8018df0:	b570      	push	{r4, r5, r6, lr}
 8018df2:	4d0d      	ldr	r5, [pc, #52]	; (8018e28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 8018df4:	4c0d      	ldr	r4, [pc, #52]	; (8018e2c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 8018df6:	782b      	ldrb	r3, [r5, #0]
 8018df8:	f3bf 8f5b 	dmb	ish
 8018dfc:	f013 0f01 	tst.w	r3, #1
 8018e00:	4606      	mov	r6, r0
 8018e02:	d10d      	bne.n	8018e20 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8018e04:	4628      	mov	r0, r5
 8018e06:	f007 fb11 	bl	802042c <__cxa_guard_acquire>
 8018e0a:	b148      	cbz	r0, 8018e20 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8018e0c:	4b08      	ldr	r3, [pc, #32]	; (8018e30 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8018e0e:	6023      	str	r3, [r4, #0]
 8018e10:	4628      	mov	r0, r5
 8018e12:	f007 fb17 	bl	8020444 <__cxa_guard_release>
 8018e16:	4a07      	ldr	r2, [pc, #28]	; (8018e34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8018e18:	4907      	ldr	r1, [pc, #28]	; (8018e38 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8018e1a:	4620      	mov	r0, r4
 8018e1c:	f007 faff 	bl	802041e <__aeabi_atexit>
 8018e20:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 8018e24:	bd70      	pop	{r4, r5, r6, pc}
 8018e26:	bf00      	nop
 8018e28:	20015058 	.word	0x20015058
 8018e2c:	200150cc 	.word	0x200150cc
 8018e30:	0802355c 	.word	0x0802355c
 8018e34:	20000000 	.word	0x20000000
 8018e38:	08015437 	.word	0x08015437

08018e3c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8018e3c:	b510      	push	{r4, lr}
 8018e3e:	4604      	mov	r4, r0
 8018e40:	f7ff ff96 	bl	8018d70 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8018e44:	4620      	mov	r0, r4
 8018e46:	f7ff ffb3 	bl	8018db0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8018e4a:	4620      	mov	r0, r4
 8018e4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e50:	f7ff bfce 	b.w	8018df0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08018e54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8018e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e58:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8018e5c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8018e60:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8018e64:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8018e68:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8018e6c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8018e70:	8808      	ldrh	r0, [r1, #0]
 8018e72:	fb05 4c0e 	mla	ip, r5, lr, r4
 8018e76:	2d00      	cmp	r5, #0
 8018e78:	eb02 0a0c 	add.w	sl, r2, ip
 8018e7c:	f2c0 80b0 	blt.w	8018fe0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8018e80:	45ab      	cmp	fp, r5
 8018e82:	f340 80ad 	ble.w	8018fe0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8018e86:	2c00      	cmp	r4, #0
 8018e88:	f2c0 80a8 	blt.w	8018fdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8018e8c:	45a6      	cmp	lr, r4
 8018e8e:	f340 80a5 	ble.w	8018fdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8018e92:	f812 200c 	ldrb.w	r2, [r2, ip]
 8018e96:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8018e9a:	1c62      	adds	r2, r4, #1
 8018e9c:	f100 80a3 	bmi.w	8018fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018ea0:	4596      	cmp	lr, r2
 8018ea2:	f340 80a0 	ble.w	8018fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018ea6:	f1b9 0f00 	cmp.w	r9, #0
 8018eaa:	f000 809c 	beq.w	8018fe6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8018eae:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018eb2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8018eb6:	3501      	adds	r5, #1
 8018eb8:	f100 8099 	bmi.w	8018fee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018ebc:	45ab      	cmp	fp, r5
 8018ebe:	f340 8096 	ble.w	8018fee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018ec2:	2f00      	cmp	r7, #0
 8018ec4:	f000 8093 	beq.w	8018fee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8018ec8:	2c00      	cmp	r4, #0
 8018eca:	f2c0 808e 	blt.w	8018fea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018ece:	45a6      	cmp	lr, r4
 8018ed0:	f340 808b 	ble.w	8018fea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8018ed4:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8018ed8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8018edc:	3401      	adds	r4, #1
 8018ede:	f100 8089 	bmi.w	8018ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018ee2:	45a6      	cmp	lr, r4
 8018ee4:	f340 8086 	ble.w	8018ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018ee8:	f1b9 0f00 	cmp.w	r9, #0
 8018eec:	f000 8082 	beq.w	8018ff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8018ef0:	44d6      	add	lr, sl
 8018ef2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018ef6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8018efa:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8018efe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018f02:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8018f06:	fb19 fe07 	smulbb	lr, r9, r7
 8018f0a:	ea44 0808 	orr.w	r8, r4, r8
 8018f0e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8018f12:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8018f16:	f1c7 0210 	rsb	r2, r7, #16
 8018f1a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018f1e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018f22:	ea44 0c0c 	orr.w	ip, r4, ip
 8018f26:	eba2 0209 	sub.w	r2, r2, r9
 8018f2a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8018f2e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8018f32:	fb04 f40c 	mul.w	r4, r4, ip
 8018f36:	fb02 4808 	mla	r8, r2, r8, r4
 8018f3a:	041a      	lsls	r2, r3, #16
 8018f3c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018f40:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018f44:	4313      	orrs	r3, r2
 8018f46:	042a      	lsls	r2, r5, #16
 8018f48:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018f4c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018f50:	fb0e 8303 	mla	r3, lr, r3, r8
 8018f54:	432a      	orrs	r2, r5
 8018f56:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8018f5a:	fb07 3202 	mla	r2, r7, r2, r3
 8018f5e:	0d53      	lsrs	r3, r2, #21
 8018f60:	0952      	lsrs	r2, r2, #5
 8018f62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018f66:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018f6a:	431a      	orrs	r2, r3
 8018f6c:	b293      	uxth	r3, r2
 8018f6e:	b2b4      	uxth	r4, r6
 8018f70:	1202      	asrs	r2, r0, #8
 8018f72:	43f6      	mvns	r6, r6
 8018f74:	b2f6      	uxtb	r6, r6
 8018f76:	121d      	asrs	r5, r3, #8
 8018f78:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018f7c:	fb12 f206 	smulbb	r2, r2, r6
 8018f80:	10c7      	asrs	r7, r0, #3
 8018f82:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018f86:	00c0      	lsls	r0, r0, #3
 8018f88:	fb05 2504 	mla	r5, r5, r4, r2
 8018f8c:	b2c0      	uxtb	r0, r0
 8018f8e:	10da      	asrs	r2, r3, #3
 8018f90:	00db      	lsls	r3, r3, #3
 8018f92:	b2db      	uxtb	r3, r3
 8018f94:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018f98:	fb10 f006 	smulbb	r0, r0, r6
 8018f9c:	b2ad      	uxth	r5, r5
 8018f9e:	fb03 0004 	mla	r0, r3, r4, r0
 8018fa2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018fa6:	fb17 f706 	smulbb	r7, r7, r6
 8018faa:	b280      	uxth	r0, r0
 8018fac:	1c6b      	adds	r3, r5, #1
 8018fae:	fb02 7204 	mla	r2, r2, r4, r7
 8018fb2:	b292      	uxth	r2, r2
 8018fb4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018fb8:	1c43      	adds	r3, r0, #1
 8018fba:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018fbe:	1c50      	adds	r0, r2, #1
 8018fc0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018fc4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018fc8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018fcc:	0952      	lsrs	r2, r2, #5
 8018fce:	432b      	orrs	r3, r5
 8018fd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018fd4:	4313      	orrs	r3, r2
 8018fd6:	800b      	strh	r3, [r1, #0]
 8018fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018fdc:	4680      	mov	r8, r0
 8018fde:	e75c      	b.n	8018e9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8018fe0:	4684      	mov	ip, r0
 8018fe2:	4680      	mov	r8, r0
 8018fe4:	e767      	b.n	8018eb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8018fe6:	4684      	mov	ip, r0
 8018fe8:	e765      	b.n	8018eb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8018fea:	4605      	mov	r5, r0
 8018fec:	e776      	b.n	8018edc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8018fee:	4603      	mov	r3, r0
 8018ff0:	4605      	mov	r5, r0
 8018ff2:	e782      	b.n	8018efa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8018ff4:	4603      	mov	r3, r0
 8018ff6:	e780      	b.n	8018efa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08018ff8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ffc:	b099      	sub	sp, #100	; 0x64
 8018ffe:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019002:	9215      	str	r2, [sp, #84]	; 0x54
 8019004:	9309      	str	r3, [sp, #36]	; 0x24
 8019006:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019008:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801900c:	930d      	str	r3, [sp, #52]	; 0x34
 801900e:	910c      	str	r1, [sp, #48]	; 0x30
 8019010:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019014:	9016      	str	r0, [sp, #88]	; 0x58
 8019016:	6850      	ldr	r0, [r2, #4]
 8019018:	6812      	ldr	r2, [r2, #0]
 801901a:	fb00 1303 	mla	r3, r0, r3, r1
 801901e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019022:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019024:	681b      	ldr	r3, [r3, #0]
 8019026:	930b      	str	r3, [sp, #44]	; 0x2c
 8019028:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801902a:	685e      	ldr	r6, [r3, #4]
 801902c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801902e:	43db      	mvns	r3, r3
 8019030:	b2db      	uxtb	r3, r3
 8019032:	3604      	adds	r6, #4
 8019034:	930a      	str	r3, [sp, #40]	; 0x28
 8019036:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019038:	2b00      	cmp	r3, #0
 801903a:	dc03      	bgt.n	8019044 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801903c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801903e:	2b00      	cmp	r3, #0
 8019040:	f340 8225 	ble.w	801948e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019044:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019046:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801904a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801904e:	1e48      	subs	r0, r1, #1
 8019050:	1e57      	subs	r7, r2, #1
 8019052:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019054:	2b00      	cmp	r3, #0
 8019056:	f340 80e3 	ble.w	8019220 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801905a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801905e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019062:	d406      	bmi.n	8019072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019064:	4584      	cmp	ip, r0
 8019066:	da04      	bge.n	8019072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019068:	2b00      	cmp	r3, #0
 801906a:	db02      	blt.n	8019072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801906c:	42bb      	cmp	r3, r7
 801906e:	f2c0 80d8 	blt.w	8019222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019072:	f11c 0c01 	adds.w	ip, ip, #1
 8019076:	f100 80c9 	bmi.w	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801907a:	4561      	cmp	r1, ip
 801907c:	f2c0 80c6 	blt.w	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019080:	3301      	adds	r3, #1
 8019082:	f100 80c3 	bmi.w	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019086:	429a      	cmp	r2, r3
 8019088:	f2c0 80c0 	blt.w	801920c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801908c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019090:	4647      	mov	r7, r8
 8019092:	f1bb 0f00 	cmp.w	fp, #0
 8019096:	f340 80e3 	ble.w	8019260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801909a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801909c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801909e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80190a2:	689b      	ldr	r3, [r3, #8]
 80190a4:	ea5f 422a 	movs.w	r2, sl, asr #16
 80190a8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80190ac:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80190b0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80190b4:	f100 8121 	bmi.w	80192fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80190b8:	f103 39ff 	add.w	r9, r3, #4294967295
 80190bc:	454a      	cmp	r2, r9
 80190be:	f280 811c 	bge.w	80192fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80190c2:	f1bc 0f00 	cmp.w	ip, #0
 80190c6:	f2c0 8118 	blt.w	80192fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80190ca:	f10e 39ff 	add.w	r9, lr, #4294967295
 80190ce:	45cc      	cmp	ip, r9
 80190d0:	f280 8113 	bge.w	80192fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80190d4:	b21b      	sxth	r3, r3
 80190d6:	fb0c 2203 	mla	r2, ip, r3, r2
 80190da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80190dc:	eb04 0902 	add.w	r9, r4, r2
 80190e0:	5ca2      	ldrb	r2, [r4, r2]
 80190e2:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80190e6:	2800      	cmp	r0, #0
 80190e8:	f000 80fe 	beq.w	80192e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80190ec:	f899 2001 	ldrb.w	r2, [r9, #1]
 80190f0:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80190f4:	9211      	str	r2, [sp, #68]	; 0x44
 80190f6:	b151      	cbz	r1, 801910e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80190f8:	eb09 0203 	add.w	r2, r9, r3
 80190fc:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019100:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019104:	930f      	str	r3, [sp, #60]	; 0x3c
 8019106:	7853      	ldrb	r3, [r2, #1]
 8019108:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801910c:	9312      	str	r3, [sp, #72]	; 0x48
 801910e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019110:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019112:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019116:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801911a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801911e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019122:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019124:	041b      	lsls	r3, r3, #16
 8019126:	fb10 f201 	smulbb	r2, r0, r1
 801912a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801912e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019132:	10d2      	asrs	r2, r2, #3
 8019134:	4323      	orrs	r3, r4
 8019136:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801913a:	4353      	muls	r3, r2
 801913c:	fb09 330c 	mla	r3, r9, ip, r3
 8019140:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019144:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019148:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801914c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019150:	f1c1 0c10 	rsb	ip, r1, #16
 8019154:	ebac 0c00 	sub.w	ip, ip, r0
 8019158:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801915c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019160:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019162:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019164:	0418      	lsls	r0, r3, #16
 8019166:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801916a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801916e:	4318      	orrs	r0, r3
 8019170:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019174:	fb02 c200 	mla	r2, r2, r0, ip
 8019178:	0d53      	lsrs	r3, r2, #21
 801917a:	0952      	lsrs	r2, r2, #5
 801917c:	8838      	ldrh	r0, [r7, #0]
 801917e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019182:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019186:	431a      	orrs	r2, r3
 8019188:	b292      	uxth	r2, r2
 801918a:	1201      	asrs	r1, r0, #8
 801918c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019190:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019194:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019198:	fb11 f104 	smulbb	r1, r1, r4
 801919c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80191a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80191a4:	00c0      	lsls	r0, r0, #3
 80191a6:	fb0c 1c03 	mla	ip, ip, r3, r1
 80191aa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80191ae:	10d1      	asrs	r1, r2, #3
 80191b0:	b2c0      	uxtb	r0, r0
 80191b2:	00d2      	lsls	r2, r2, #3
 80191b4:	b2d2      	uxtb	r2, r2
 80191b6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80191ba:	fb1e fe04 	smulbb	lr, lr, r4
 80191be:	fb10 f004 	smulbb	r0, r0, r4
 80191c2:	fa1f fc8c 	uxth.w	ip, ip
 80191c6:	fb01 e103 	mla	r1, r1, r3, lr
 80191ca:	fb02 0303 	mla	r3, r2, r3, r0
 80191ce:	b29a      	uxth	r2, r3
 80191d0:	f10c 0301 	add.w	r3, ip, #1
 80191d4:	b289      	uxth	r1, r1
 80191d6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80191da:	1c53      	adds	r3, r2, #1
 80191dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80191e0:	1c4a      	adds	r2, r1, #1
 80191e2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80191e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80191ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80191ee:	0949      	lsrs	r1, r1, #5
 80191f0:	ea43 030c 	orr.w	r3, r3, ip
 80191f4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80191f8:	430b      	orrs	r3, r1
 80191fa:	803b      	strh	r3, [r7, #0]
 80191fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80191fe:	449a      	add	sl, r3
 8019200:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019202:	3702      	adds	r7, #2
 8019204:	441d      	add	r5, r3
 8019206:	f10b 3bff 	add.w	fp, fp, #4294967295
 801920a:	e742      	b.n	8019092 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801920c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801920e:	449a      	add	sl, r3
 8019210:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019212:	441d      	add	r5, r3
 8019214:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019216:	3b01      	subs	r3, #1
 8019218:	9309      	str	r3, [sp, #36]	; 0x24
 801921a:	f108 0802 	add.w	r8, r8, #2
 801921e:	e718      	b.n	8019052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019220:	d023      	beq.n	801926a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019222:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019224:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019226:	3b01      	subs	r3, #1
 8019228:	fb00 a003 	mla	r0, r0, r3, sl
 801922c:	1400      	asrs	r0, r0, #16
 801922e:	f53f af2d 	bmi.w	801908c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019232:	3901      	subs	r1, #1
 8019234:	4288      	cmp	r0, r1
 8019236:	f6bf af29 	bge.w	801908c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801923a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801923c:	fb01 5303 	mla	r3, r1, r3, r5
 8019240:	141b      	asrs	r3, r3, #16
 8019242:	f53f af23 	bmi.w	801908c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019246:	3a01      	subs	r2, #1
 8019248:	4293      	cmp	r3, r2
 801924a:	f6bf af1f 	bge.w	801908c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801924e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019252:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8019256:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801925a:	f1be 0f00 	cmp.w	lr, #0
 801925e:	dc6c      	bgt.n	801933a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019260:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019262:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019266:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801926a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801926c:	2b00      	cmp	r3, #0
 801926e:	f340 810e 	ble.w	801948e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019272:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019276:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801927a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801927e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019280:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019284:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019288:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801928c:	eef0 6a62 	vmov.f32	s13, s5
 8019290:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019294:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019298:	ee77 2a62 	vsub.f32	s5, s14, s5
 801929c:	ee16 aa90 	vmov	sl, s13
 80192a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192a4:	eef0 6a43 	vmov.f32	s13, s6
 80192a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192ac:	ee12 2a90 	vmov	r2, s5
 80192b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80192b8:	ee13 2a10 	vmov	r2, s6
 80192bc:	9325      	str	r3, [sp, #148]	; 0x94
 80192be:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80192c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80192c4:	9326      	str	r3, [sp, #152]	; 0x98
 80192c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80192c8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80192ca:	3b01      	subs	r3, #1
 80192cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80192d0:	930c      	str	r3, [sp, #48]	; 0x30
 80192d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80192d4:	bf08      	it	eq
 80192d6:	4613      	moveq	r3, r2
 80192d8:	ee16 5a90 	vmov	r5, s13
 80192dc:	9309      	str	r3, [sp, #36]	; 0x24
 80192de:	eeb0 3a67 	vmov.f32	s6, s15
 80192e2:	eef0 2a47 	vmov.f32	s5, s14
 80192e6:	e6a6      	b.n	8019036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80192e8:	2900      	cmp	r1, #0
 80192ea:	f43f af10 	beq.w	801910e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80192ee:	f819 3003 	ldrb.w	r3, [r9, r3]
 80192f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80192f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80192f8:	e709      	b.n	801910e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80192fa:	f112 0901 	adds.w	r9, r2, #1
 80192fe:	f53f af7d 	bmi.w	80191fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019302:	454b      	cmp	r3, r9
 8019304:	f6ff af7a 	blt.w	80191fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019308:	f11c 0901 	adds.w	r9, ip, #1
 801930c:	f53f af76 	bmi.w	80191fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019310:	45ce      	cmp	lr, r9
 8019312:	f6ff af73 	blt.w	80191fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019316:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019318:	9202      	str	r2, [sp, #8]
 801931a:	b21b      	sxth	r3, r3
 801931c:	fa0f f28e 	sxth.w	r2, lr
 8019320:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019324:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019328:	9201      	str	r2, [sp, #4]
 801932a:	9300      	str	r3, [sp, #0]
 801932c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801932e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019330:	4633      	mov	r3, r6
 8019332:	4639      	mov	r1, r7
 8019334:	f7ff fd8e 	bl	8018e54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019338:	e760      	b.n	80191fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801933a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801933c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801933e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019342:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019346:	1429      	asrs	r1, r5, #16
 8019348:	fb03 2101 	mla	r1, r3, r1, r2
 801934c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801934e:	440a      	add	r2, r1
 8019350:	5c61      	ldrb	r1, [r4, r1]
 8019352:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019356:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801935a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801935e:	f1bc 0f00 	cmp.w	ip, #0
 8019362:	f000 808c 	beq.w	801947e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019366:	7857      	ldrb	r7, [r2, #1]
 8019368:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801936c:	9413      	str	r4, [sp, #76]	; 0x4c
 801936e:	b140      	cbz	r0, 8019382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019370:	18d7      	adds	r7, r2, r3
 8019372:	5cd3      	ldrb	r3, [r2, r3]
 8019374:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019378:	9310      	str	r3, [sp, #64]	; 0x40
 801937a:	787b      	ldrb	r3, [r7, #1]
 801937c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019380:	9314      	str	r3, [sp, #80]	; 0x50
 8019382:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019384:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019386:	fb1c f200 	smulbb	r2, ip, r0
 801938a:	041f      	lsls	r7, r3, #16
 801938c:	10d2      	asrs	r2, r2, #3
 801938e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019392:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019396:	431f      	orrs	r7, r3
 8019398:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801939c:	9317      	str	r3, [sp, #92]	; 0x5c
 801939e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80193a0:	041b      	lsls	r3, r3, #16
 80193a2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80193a6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80193aa:	ea43 030b 	orr.w	r3, r3, fp
 80193ae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80193b0:	4353      	muls	r3, r2
 80193b2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80193b6:	fb04 3707 	mla	r7, r4, r7, r3
 80193ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80193be:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80193c2:	ea43 0b01 	orr.w	fp, r3, r1
 80193c6:	f1c0 0110 	rsb	r1, r0, #16
 80193ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80193cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80193ce:	eba1 0c0c 	sub.w	ip, r1, ip
 80193d2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80193d6:	fb0c 770b 	mla	r7, ip, fp, r7
 80193da:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80193de:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80193e2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80193e6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80193ea:	ea4c 0c0b 	orr.w	ip, ip, fp
 80193ee:	fb02 770c 	mla	r7, r2, ip, r7
 80193f2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80193f4:	0d79      	lsrs	r1, r7, #21
 80193f6:	097f      	lsrs	r7, r7, #5
 80193f8:	8812      	ldrh	r2, [r2, #0]
 80193fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80193fe:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019402:	430f      	orrs	r7, r1
 8019404:	b2bb      	uxth	r3, r7
 8019406:	1211      	asrs	r1, r2, #8
 8019408:	1218      	asrs	r0, r3, #8
 801940a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801940e:	fb11 f104 	smulbb	r1, r1, r4
 8019412:	10d7      	asrs	r7, r2, #3
 8019414:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019418:	00d2      	lsls	r2, r2, #3
 801941a:	fb00 1009 	mla	r0, r0, r9, r1
 801941e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019422:	10d9      	asrs	r1, r3, #3
 8019424:	b2d2      	uxtb	r2, r2
 8019426:	00db      	lsls	r3, r3, #3
 8019428:	fb17 f704 	smulbb	r7, r7, r4
 801942c:	fb12 f204 	smulbb	r2, r2, r4
 8019430:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019434:	b2db      	uxtb	r3, r3
 8019436:	b280      	uxth	r0, r0
 8019438:	fb01 7109 	mla	r1, r1, r9, r7
 801943c:	fb03 2309 	mla	r3, r3, r9, r2
 8019440:	b29b      	uxth	r3, r3
 8019442:	b289      	uxth	r1, r1
 8019444:	1c42      	adds	r2, r0, #1
 8019446:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801944a:	1c4f      	adds	r7, r1, #1
 801944c:	1c5a      	adds	r2, r3, #1
 801944e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019452:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019456:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801945a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801945e:	0949      	lsrs	r1, r1, #5
 8019460:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019462:	4310      	orrs	r0, r2
 8019464:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019468:	4308      	orrs	r0, r1
 801946a:	f823 0b02 	strh.w	r0, [r3], #2
 801946e:	930e      	str	r3, [sp, #56]	; 0x38
 8019470:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019472:	449a      	add	sl, r3
 8019474:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019476:	f10e 3eff 	add.w	lr, lr, #4294967295
 801947a:	441d      	add	r5, r3
 801947c:	e6ed      	b.n	801925a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801947e:	2800      	cmp	r0, #0
 8019480:	f43f af7f 	beq.w	8019382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019484:	5cd3      	ldrb	r3, [r2, r3]
 8019486:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801948a:	9310      	str	r3, [sp, #64]	; 0x40
 801948c:	e779      	b.n	8019382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801948e:	b019      	add	sp, #100	; 0x64
 8019490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019494:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019498:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801949c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80194a0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80194a4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80194a8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80194ac:	8808      	ldrh	r0, [r1, #0]
 80194ae:	fb08 470e 	mla	r7, r8, lr, r4
 80194b2:	f1b8 0f00 	cmp.w	r8, #0
 80194b6:	eb02 0907 	add.w	r9, r2, r7
 80194ba:	db67      	blt.n	801958c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80194bc:	45c2      	cmp	sl, r8
 80194be:	dd65      	ble.n	801958c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80194c0:	2c00      	cmp	r4, #0
 80194c2:	db61      	blt.n	8019588 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80194c4:	45a6      	cmp	lr, r4
 80194c6:	dd5f      	ble.n	8019588 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80194c8:	5dd2      	ldrb	r2, [r2, r7]
 80194ca:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80194ce:	1c62      	adds	r2, r4, #1
 80194d0:	d45f      	bmi.n	8019592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80194d2:	4596      	cmp	lr, r2
 80194d4:	dd5d      	ble.n	8019592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80194d6:	2d00      	cmp	r5, #0
 80194d8:	d05b      	beq.n	8019592 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80194da:	f899 2001 	ldrb.w	r2, [r9, #1]
 80194de:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80194e2:	f118 0801 	adds.w	r8, r8, #1
 80194e6:	d458      	bmi.n	801959a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80194e8:	45c2      	cmp	sl, r8
 80194ea:	dd56      	ble.n	801959a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80194ec:	2e00      	cmp	r6, #0
 80194ee:	d054      	beq.n	801959a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80194f0:	2c00      	cmp	r4, #0
 80194f2:	db50      	blt.n	8019596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80194f4:	45a6      	cmp	lr, r4
 80194f6:	dd4e      	ble.n	8019596 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80194f8:	f819 200e 	ldrb.w	r2, [r9, lr]
 80194fc:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019500:	3401      	adds	r4, #1
 8019502:	d407      	bmi.n	8019514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019504:	45a6      	cmp	lr, r4
 8019506:	dd05      	ble.n	8019514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019508:	b125      	cbz	r5, 8019514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801950a:	44ce      	add	lr, r9
 801950c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019510:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019514:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019518:	fb15 f406 	smulbb	r4, r5, r6
 801951c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019520:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019524:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019528:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801952c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019530:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019534:	f1c6 0310 	rsb	r3, r6, #16
 8019538:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801953c:	1b5b      	subs	r3, r3, r5
 801953e:	ea4e 0707 	orr.w	r7, lr, r7
 8019542:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019546:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801954a:	437d      	muls	r5, r7
 801954c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019550:	0403      	lsls	r3, r0, #16
 8019552:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019556:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801955a:	4318      	orrs	r0, r3
 801955c:	0413      	lsls	r3, r2, #16
 801955e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019562:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019566:	4313      	orrs	r3, r2
 8019568:	fb04 c000 	mla	r0, r4, r0, ip
 801956c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019570:	fb06 0003 	mla	r0, r6, r3, r0
 8019574:	0d43      	lsrs	r3, r0, #21
 8019576:	0940      	lsrs	r0, r0, #5
 8019578:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801957c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019580:	4318      	orrs	r0, r3
 8019582:	8008      	strh	r0, [r1, #0]
 8019584:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019588:	4684      	mov	ip, r0
 801958a:	e7a0      	b.n	80194ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801958c:	4607      	mov	r7, r0
 801958e:	4684      	mov	ip, r0
 8019590:	e7a7      	b.n	80194e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019592:	4607      	mov	r7, r0
 8019594:	e7a5      	b.n	80194e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019596:	4602      	mov	r2, r0
 8019598:	e7b2      	b.n	8019500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801959a:	4602      	mov	r2, r0
 801959c:	e7ba      	b.n	8019514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801959e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801959e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195a2:	b093      	sub	sp, #76	; 0x4c
 80195a4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80195a8:	920f      	str	r2, [sp, #60]	; 0x3c
 80195aa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80195ac:	9108      	str	r1, [sp, #32]
 80195ae:	9306      	str	r3, [sp, #24]
 80195b0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80195b4:	9010      	str	r0, [sp, #64]	; 0x40
 80195b6:	6850      	ldr	r0, [r2, #4]
 80195b8:	6812      	ldr	r2, [r2, #0]
 80195ba:	fb00 1303 	mla	r3, r0, r3, r1
 80195be:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80195c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80195c4:	681b      	ldr	r3, [r3, #0]
 80195c6:	9307      	str	r3, [sp, #28]
 80195c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80195ca:	685f      	ldr	r7, [r3, #4]
 80195cc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80195d0:	3704      	adds	r7, #4
 80195d2:	9b08      	ldr	r3, [sp, #32]
 80195d4:	2b00      	cmp	r3, #0
 80195d6:	dc03      	bgt.n	80195e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80195d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80195da:	2b00      	cmp	r3, #0
 80195dc:	f340 81b2 	ble.w	8019944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80195e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80195e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80195e6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80195ea:	1e48      	subs	r0, r1, #1
 80195ec:	f102 3cff 	add.w	ip, r2, #4294967295
 80195f0:	9b06      	ldr	r3, [sp, #24]
 80195f2:	2b00      	cmp	r3, #0
 80195f4:	f340 80a9 	ble.w	801974a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80195f8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80195fc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019600:	d406      	bmi.n	8019610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019602:	4586      	cmp	lr, r0
 8019604:	da04      	bge.n	8019610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019606:	2b00      	cmp	r3, #0
 8019608:	db02      	blt.n	8019610 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801960a:	4563      	cmp	r3, ip
 801960c:	f2c0 809e 	blt.w	801974c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019610:	f11e 0e01 	adds.w	lr, lr, #1
 8019614:	f100 808f 	bmi.w	8019736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019618:	4571      	cmp	r1, lr
 801961a:	f2c0 808c 	blt.w	8019736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801961e:	3301      	adds	r3, #1
 8019620:	f100 8089 	bmi.w	8019736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019624:	429a      	cmp	r2, r3
 8019626:	f2c0 8086 	blt.w	8019736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801962a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801962e:	46c8      	mov	r8, r9
 8019630:	f1bb 0f00 	cmp.w	fp, #0
 8019634:	f340 80a6 	ble.w	8019784 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019638:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801963a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801963c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019640:	689b      	ldr	r3, [r3, #8]
 8019642:	1422      	asrs	r2, r4, #16
 8019644:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019648:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801964c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019650:	f100 80e3 	bmi.w	801981a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019654:	f103 3aff 	add.w	sl, r3, #4294967295
 8019658:	4552      	cmp	r2, sl
 801965a:	f280 80de 	bge.w	801981a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801965e:	f1bc 0f00 	cmp.w	ip, #0
 8019662:	f2c0 80da 	blt.w	801981a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019666:	f10e 3aff 	add.w	sl, lr, #4294967295
 801966a:	45d4      	cmp	ip, sl
 801966c:	f280 80d5 	bge.w	801981a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019670:	b21b      	sxth	r3, r3
 8019672:	fb0c 2203 	mla	r2, ip, r3, r2
 8019676:	9d07      	ldr	r5, [sp, #28]
 8019678:	eb05 0a02 	add.w	sl, r5, r2
 801967c:	5caa      	ldrb	r2, [r5, r2]
 801967e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019682:	2800      	cmp	r0, #0
 8019684:	f000 80c0 	beq.w	8019808 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019688:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801968c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019690:	920b      	str	r2, [sp, #44]	; 0x2c
 8019692:	b151      	cbz	r1, 80196aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019694:	eb0a 0203 	add.w	r2, sl, r3
 8019698:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801969c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80196a0:	9309      	str	r3, [sp, #36]	; 0x24
 80196a2:	7853      	ldrb	r3, [r2, #1]
 80196a4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80196a8:	930c      	str	r3, [sp, #48]	; 0x30
 80196aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80196ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80196ae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80196b2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80196b6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80196ba:	ea4c 0c03 	orr.w	ip, ip, r3
 80196be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196c0:	041b      	lsls	r3, r3, #16
 80196c2:	fb10 f201 	smulbb	r2, r0, r1
 80196c6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80196ca:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80196ce:	10d2      	asrs	r2, r2, #3
 80196d0:	432b      	orrs	r3, r5
 80196d2:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80196d6:	4353      	muls	r3, r2
 80196d8:	fb0a 330c 	mla	r3, sl, ip, r3
 80196dc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80196e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80196e4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80196e8:	ea4c 0e0e 	orr.w	lr, ip, lr
 80196ec:	f1c1 0c10 	rsb	ip, r1, #16
 80196f0:	ebac 0c00 	sub.w	ip, ip, r0
 80196f4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80196f8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80196fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196fe:	0418      	lsls	r0, r3, #16
 8019700:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019704:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019708:	4318      	orrs	r0, r3
 801970a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801970e:	fb02 c200 	mla	r2, r2, r0, ip
 8019712:	0d53      	lsrs	r3, r2, #21
 8019714:	0952      	lsrs	r2, r2, #5
 8019716:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801971a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801971e:	431a      	orrs	r2, r3
 8019720:	f8a8 2000 	strh.w	r2, [r8]
 8019724:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019726:	441c      	add	r4, r3
 8019728:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801972a:	f108 0802 	add.w	r8, r8, #2
 801972e:	441e      	add	r6, r3
 8019730:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019734:	e77c      	b.n	8019630 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019736:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019738:	441c      	add	r4, r3
 801973a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801973c:	441e      	add	r6, r3
 801973e:	9b06      	ldr	r3, [sp, #24]
 8019740:	3b01      	subs	r3, #1
 8019742:	9306      	str	r3, [sp, #24]
 8019744:	f109 0902 	add.w	r9, r9, #2
 8019748:	e752      	b.n	80195f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801974a:	d020      	beq.n	801978e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801974c:	9b06      	ldr	r3, [sp, #24]
 801974e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019750:	3b01      	subs	r3, #1
 8019752:	fb00 4003 	mla	r0, r0, r3, r4
 8019756:	1400      	asrs	r0, r0, #16
 8019758:	f53f af67 	bmi.w	801962a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801975c:	3901      	subs	r1, #1
 801975e:	4288      	cmp	r0, r1
 8019760:	f6bf af63 	bge.w	801962a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019764:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019766:	fb01 6303 	mla	r3, r1, r3, r6
 801976a:	141b      	asrs	r3, r3, #16
 801976c:	f53f af5d 	bmi.w	801962a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019770:	3a01      	subs	r2, #1
 8019772:	4293      	cmp	r3, r2
 8019774:	f6bf af59 	bge.w	801962a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019778:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801977c:	46ca      	mov	sl, r9
 801977e:	f1b8 0f00 	cmp.w	r8, #0
 8019782:	dc67      	bgt.n	8019854 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019784:	9b06      	ldr	r3, [sp, #24]
 8019786:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801978a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801978e:	9b08      	ldr	r3, [sp, #32]
 8019790:	2b00      	cmp	r3, #0
 8019792:	f340 80d7 	ble.w	8019944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019796:	ee30 0a04 	vadd.f32	s0, s0, s8
 801979a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801979e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80197a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80197a4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80197a8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80197ac:	eeb0 6a62 	vmov.f32	s12, s5
 80197b0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80197bc:	ee16 4a10 	vmov	r4, s12
 80197c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80197c4:	eeb0 6a43 	vmov.f32	s12, s6
 80197c8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80197cc:	ee12 2a90 	vmov	r2, s5
 80197d0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80197d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80197d8:	ee13 2a10 	vmov	r2, s6
 80197dc:	931f      	str	r3, [sp, #124]	; 0x7c
 80197de:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80197e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80197e4:	9320      	str	r3, [sp, #128]	; 0x80
 80197e6:	9b08      	ldr	r3, [sp, #32]
 80197e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80197ea:	3b01      	subs	r3, #1
 80197ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197f0:	9308      	str	r3, [sp, #32]
 80197f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80197f4:	bf08      	it	eq
 80197f6:	4613      	moveq	r3, r2
 80197f8:	ee16 6a10 	vmov	r6, s12
 80197fc:	9306      	str	r3, [sp, #24]
 80197fe:	eeb0 3a67 	vmov.f32	s6, s15
 8019802:	eef0 2a47 	vmov.f32	s5, s14
 8019806:	e6e4      	b.n	80195d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019808:	2900      	cmp	r1, #0
 801980a:	f43f af4e 	beq.w	80196aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801980e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019812:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019816:	9309      	str	r3, [sp, #36]	; 0x24
 8019818:	e747      	b.n	80196aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801981a:	f112 0a01 	adds.w	sl, r2, #1
 801981e:	d481      	bmi.n	8019724 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019820:	4553      	cmp	r3, sl
 8019822:	f6ff af7f 	blt.w	8019724 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019826:	f11c 0a01 	adds.w	sl, ip, #1
 801982a:	f53f af7b 	bmi.w	8019724 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801982e:	45d6      	cmp	lr, sl
 8019830:	f6ff af78 	blt.w	8019724 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019834:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019838:	b21b      	sxth	r3, r3
 801983a:	fa0f f28e 	sxth.w	r2, lr
 801983e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019842:	9201      	str	r2, [sp, #4]
 8019844:	9300      	str	r3, [sp, #0]
 8019846:	9a07      	ldr	r2, [sp, #28]
 8019848:	9810      	ldr	r0, [sp, #64]	; 0x40
 801984a:	463b      	mov	r3, r7
 801984c:	4641      	mov	r1, r8
 801984e:	f7ff fe21 	bl	8019494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019852:	e767      	b.n	8019724 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019854:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019856:	9d07      	ldr	r5, [sp, #28]
 8019858:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801985c:	1422      	asrs	r2, r4, #16
 801985e:	1431      	asrs	r1, r6, #16
 8019860:	fb03 2101 	mla	r1, r3, r1, r2
 8019864:	9a07      	ldr	r2, [sp, #28]
 8019866:	440a      	add	r2, r1
 8019868:	5c69      	ldrb	r1, [r5, r1]
 801986a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801986e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019872:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019876:	f1be 0f00 	cmp.w	lr, #0
 801987a:	d05c      	beq.n	8019936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801987c:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019880:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019884:	950d      	str	r5, [sp, #52]	; 0x34
 8019886:	b150      	cbz	r0, 801989e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019888:	eb02 0c03 	add.w	ip, r2, r3
 801988c:	5cd3      	ldrb	r3, [r2, r3]
 801988e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019892:	930a      	str	r3, [sp, #40]	; 0x28
 8019894:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019898:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801989c:	930e      	str	r3, [sp, #56]	; 0x38
 801989e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80198a0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80198a2:	fb1e f200 	smulbb	r2, lr, r0
 80198a6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80198aa:	10d2      	asrs	r2, r2, #3
 80198ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80198b0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80198b4:	ea4c 0c03 	orr.w	ip, ip, r3
 80198b8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80198bc:	9311      	str	r3, [sp, #68]	; 0x44
 80198be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198c0:	041b      	lsls	r3, r3, #16
 80198c2:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80198c6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80198ca:	ea43 030b 	orr.w	r3, r3, fp
 80198ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80198d0:	4353      	muls	r3, r2
 80198d2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80198d6:	fb05 3c0c 	mla	ip, r5, ip, r3
 80198da:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80198de:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80198e2:	ea43 0b01 	orr.w	fp, r3, r1
 80198e6:	f1c0 0110 	rsb	r1, r0, #16
 80198ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80198ec:	eba1 0e0e 	sub.w	lr, r1, lr
 80198f0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80198f4:	fb0e cc0b 	mla	ip, lr, fp, ip
 80198f8:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80198fc:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019900:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019904:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019908:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801990c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019910:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019914:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019918:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801991c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019920:	ea43 0c0c 	orr.w	ip, r3, ip
 8019924:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019926:	f82a cb02 	strh.w	ip, [sl], #2
 801992a:	441c      	add	r4, r3
 801992c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801992e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019932:	441e      	add	r6, r3
 8019934:	e723      	b.n	801977e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019936:	2800      	cmp	r0, #0
 8019938:	d0b1      	beq.n	801989e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801993a:	5cd3      	ldrb	r3, [r2, r3]
 801993c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019940:	930a      	str	r3, [sp, #40]	; 0x28
 8019942:	e7ac      	b.n	801989e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019944:	b013      	add	sp, #76	; 0x4c
 8019946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801994a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801994a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801994e:	880d      	ldrh	r5, [r1, #0]
 8019950:	b087      	sub	sp, #28
 8019952:	10ef      	asrs	r7, r5, #3
 8019954:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019958:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801995c:	00ed      	lsls	r5, r5, #3
 801995e:	9701      	str	r7, [sp, #4]
 8019960:	b2ed      	uxtb	r5, r5
 8019962:	9502      	str	r5, [sp, #8]
 8019964:	9d01      	ldr	r5, [sp, #4]
 8019966:	9103      	str	r1, [sp, #12]
 8019968:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801996c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019970:	9902      	ldr	r1, [sp, #8]
 8019972:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019976:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801997a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801997e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019982:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019986:	022d      	lsls	r5, r5, #8
 8019988:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801998c:	fb06 0709 	mla	r7, r6, r9, r0
 8019990:	430d      	orrs	r5, r1
 8019992:	2e00      	cmp	r6, #0
 8019994:	eb02 0c07 	add.w	ip, r2, r7
 8019998:	9505      	str	r5, [sp, #20]
 801999a:	f2c0 80b6 	blt.w	8019b0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801999e:	45b3      	cmp	fp, r6
 80199a0:	f340 80b3 	ble.w	8019b0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80199a4:	2800      	cmp	r0, #0
 80199a6:	f2c0 80ae 	blt.w	8019b06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80199aa:	4581      	cmp	r9, r0
 80199ac:	f340 80ab 	ble.w	8019b06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80199b0:	5dd7      	ldrb	r7, [r2, r7]
 80199b2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80199b6:	441f      	add	r7, r3
 80199b8:	1c42      	adds	r2, r0, #1
 80199ba:	f100 80a9 	bmi.w	8019b10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80199be:	4591      	cmp	r9, r2
 80199c0:	f340 80a6 	ble.w	8019b10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80199c4:	2c00      	cmp	r4, #0
 80199c6:	f000 80a3 	beq.w	8019b10 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80199ca:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80199ce:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80199d2:	441d      	add	r5, r3
 80199d4:	3601      	adds	r6, #1
 80199d6:	f100 809f 	bmi.w	8019b18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80199da:	45b3      	cmp	fp, r6
 80199dc:	f340 809c 	ble.w	8019b18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80199e0:	f1be 0f00 	cmp.w	lr, #0
 80199e4:	f000 8098 	beq.w	8019b18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80199e8:	2800      	cmp	r0, #0
 80199ea:	f2c0 8093 	blt.w	8019b14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80199ee:	4581      	cmp	r9, r0
 80199f0:	f340 8090 	ble.w	8019b14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80199f4:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80199f8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80199fc:	441e      	add	r6, r3
 80199fe:	3001      	adds	r0, #1
 8019a00:	f100 808d 	bmi.w	8019b1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019a04:	4581      	cmp	r9, r0
 8019a06:	f340 808a 	ble.w	8019b1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019a0a:	2c00      	cmp	r4, #0
 8019a0c:	f000 8087 	beq.w	8019b1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019a10:	44e1      	add	r9, ip
 8019a12:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019a16:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019a1a:	4413      	add	r3, r2
 8019a1c:	b2a4      	uxth	r4, r4
 8019a1e:	fa1f fe8e 	uxth.w	lr, lr
 8019a22:	fb04 fb0e 	mul.w	fp, r4, lr
 8019a26:	0124      	lsls	r4, r4, #4
 8019a28:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019a2c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019a30:	eba4 040b 	sub.w	r4, r4, fp
 8019a34:	fa1f f08e 	uxth.w	r0, lr
 8019a38:	b2a2      	uxth	r2, r4
 8019a3a:	78ac      	ldrb	r4, [r5, #2]
 8019a3c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019a40:	9901      	ldr	r1, [sp, #4]
 8019a42:	eba9 0900 	sub.w	r9, r9, r0
 8019a46:	fa1f f989 	uxth.w	r9, r9
 8019a4a:	4354      	muls	r4, r2
 8019a4c:	fb09 440c 	mla	r4, r9, ip, r4
 8019a50:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019a54:	fb00 440c 	mla	r4, r0, ip, r4
 8019a58:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019a5c:	fa1f fe88 	uxth.w	lr, r8
 8019a60:	ea6f 0808 	mvn.w	r8, r8
 8019a64:	fa5f f888 	uxtb.w	r8, r8
 8019a68:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019a6c:	fb1a fa08 	smulbb	sl, sl, r8
 8019a70:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019a74:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019a78:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019a7c:	787c      	ldrb	r4, [r7, #1]
 8019a7e:	782d      	ldrb	r5, [r5, #0]
 8019a80:	783f      	ldrb	r7, [r7, #0]
 8019a82:	fb02 fa0a 	mul.w	sl, r2, sl
 8019a86:	fb09 aa04 	mla	sl, r9, r4, sl
 8019a8a:	7874      	ldrb	r4, [r6, #1]
 8019a8c:	436a      	muls	r2, r5
 8019a8e:	7835      	ldrb	r5, [r6, #0]
 8019a90:	fb00 aa04 	mla	sl, r0, r4, sl
 8019a94:	fb09 2207 	mla	r2, r9, r7, r2
 8019a98:	785c      	ldrb	r4, [r3, #1]
 8019a9a:	781b      	ldrb	r3, [r3, #0]
 8019a9c:	fb00 2005 	mla	r0, r0, r5, r2
 8019aa0:	fb0b a404 	mla	r4, fp, r4, sl
 8019aa4:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019aa8:	9b02      	ldr	r3, [sp, #8]
 8019aaa:	fb11 fa08 	smulbb	sl, r1, r8
 8019aae:	fa1f fc8c 	uxth.w	ip, ip
 8019ab2:	fb13 f808 	smulbb	r8, r3, r8
 8019ab6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019aba:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019abe:	fb04 a40e 	mla	r4, r4, lr, sl
 8019ac2:	f10c 0301 	add.w	r3, ip, #1
 8019ac6:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019aca:	fa1f fe8e 	uxth.w	lr, lr
 8019ace:	b2a4      	uxth	r4, r4
 8019ad0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019ad4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019ad8:	f104 0a01 	add.w	sl, r4, #1
 8019adc:	f10e 0c01 	add.w	ip, lr, #1
 8019ae0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019ae4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019ae8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019aec:	0964      	lsrs	r4, r4, #5
 8019aee:	ea4c 0c03 	orr.w	ip, ip, r3
 8019af2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019af6:	9b03      	ldr	r3, [sp, #12]
 8019af8:	ea4c 0c04 	orr.w	ip, ip, r4
 8019afc:	f8a3 c000 	strh.w	ip, [r3]
 8019b00:	b007      	add	sp, #28
 8019b02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b06:	af05      	add	r7, sp, #20
 8019b08:	e756      	b.n	80199b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019b0a:	ad05      	add	r5, sp, #20
 8019b0c:	462f      	mov	r7, r5
 8019b0e:	e761      	b.n	80199d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019b10:	ad05      	add	r5, sp, #20
 8019b12:	e75f      	b.n	80199d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019b14:	ae05      	add	r6, sp, #20
 8019b16:	e772      	b.n	80199fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019b18:	ab05      	add	r3, sp, #20
 8019b1a:	461e      	mov	r6, r3
 8019b1c:	e77e      	b.n	8019a1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019b1e:	ab05      	add	r3, sp, #20
 8019b20:	e77c      	b.n	8019a1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019b22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b26:	b095      	sub	sp, #84	; 0x54
 8019b28:	9212      	str	r2, [sp, #72]	; 0x48
 8019b2a:	9309      	str	r3, [sp, #36]	; 0x24
 8019b2c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019b2e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019b32:	930f      	str	r3, [sp, #60]	; 0x3c
 8019b34:	910e      	str	r1, [sp, #56]	; 0x38
 8019b36:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019b3a:	9013      	str	r0, [sp, #76]	; 0x4c
 8019b3c:	6850      	ldr	r0, [r2, #4]
 8019b3e:	6812      	ldr	r2, [r2, #0]
 8019b40:	fb00 1303 	mla	r3, r0, r3, r1
 8019b44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019b48:	930a      	str	r3, [sp, #40]	; 0x28
 8019b4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b4c:	681b      	ldr	r3, [r3, #0]
 8019b4e:	930d      	str	r3, [sp, #52]	; 0x34
 8019b50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b52:	685c      	ldr	r4, [r3, #4]
 8019b54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019b56:	43db      	mvns	r3, r3
 8019b58:	b2db      	uxtb	r3, r3
 8019b5a:	3404      	adds	r4, #4
 8019b5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8019b5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b60:	2b00      	cmp	r3, #0
 8019b62:	dc03      	bgt.n	8019b6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019b64:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019b66:	2b00      	cmp	r3, #0
 8019b68:	f340 8255 	ble.w	801a016 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019b6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b6e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019b72:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019b76:	1e48      	subs	r0, r1, #1
 8019b78:	1e55      	subs	r5, r2, #1
 8019b7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b7c:	2b00      	cmp	r3, #0
 8019b7e:	f340 80f9 	ble.w	8019d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019b82:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019b84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b86:	1436      	asrs	r6, r6, #16
 8019b88:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019b8c:	d406      	bmi.n	8019b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019b8e:	4286      	cmp	r6, r0
 8019b90:	da04      	bge.n	8019b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019b92:	2b00      	cmp	r3, #0
 8019b94:	db02      	blt.n	8019b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019b96:	42ab      	cmp	r3, r5
 8019b98:	f2c0 80ed 	blt.w	8019d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019b9c:	3601      	adds	r6, #1
 8019b9e:	f100 80da 	bmi.w	8019d56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ba2:	42b1      	cmp	r1, r6
 8019ba4:	f2c0 80d7 	blt.w	8019d56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ba8:	3301      	adds	r3, #1
 8019baa:	f100 80d4 	bmi.w	8019d56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019bae:	429a      	cmp	r2, r3
 8019bb0:	f2c0 80d1 	blt.w	8019d56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019bb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019bb6:	9311      	str	r3, [sp, #68]	; 0x44
 8019bb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019bba:	930c      	str	r3, [sp, #48]	; 0x30
 8019bbc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019bbe:	2b00      	cmp	r3, #0
 8019bc0:	f340 80fa 	ble.w	8019db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8019bc4:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019bc6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019bc8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019bca:	68c6      	ldr	r6, [r0, #12]
 8019bcc:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019bce:	141d      	asrs	r5, r3, #16
 8019bd0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019bd4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019bd6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019bd8:	1400      	asrs	r0, r0, #16
 8019bda:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019bde:	6892      	ldr	r2, [r2, #8]
 8019be0:	f100 813e 	bmi.w	8019e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019be4:	1e57      	subs	r7, r2, #1
 8019be6:	42b8      	cmp	r0, r7
 8019be8:	f280 813a 	bge.w	8019e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019bec:	2d00      	cmp	r5, #0
 8019bee:	f2c0 8137 	blt.w	8019e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019bf2:	1e77      	subs	r7, r6, #1
 8019bf4:	42bd      	cmp	r5, r7
 8019bf6:	f280 8133 	bge.w	8019e60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019bfa:	b212      	sxth	r2, r2
 8019bfc:	fb05 0002 	mla	r0, r5, r2, r0
 8019c00:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019c02:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019c06:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019c0a:	182e      	adds	r6, r5, r0
 8019c0c:	eb04 050a 	add.w	r5, r4, sl
 8019c10:	2b00      	cmp	r3, #0
 8019c12:	f000 8117 	beq.w	8019e44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019c16:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019c1a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8019c1e:	44a4      	add	ip, r4
 8019c20:	2900      	cmp	r1, #0
 8019c22:	f000 8117 	beq.w	8019e54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019c26:	18b0      	adds	r0, r6, r2
 8019c28:	5cb2      	ldrb	r2, [r6, r2]
 8019c2a:	7840      	ldrb	r0, [r0, #1]
 8019c2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019c30:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019c34:	4422      	add	r2, r4
 8019c36:	4420      	add	r0, r4
 8019c38:	b29b      	uxth	r3, r3
 8019c3a:	b289      	uxth	r1, r1
 8019c3c:	fb03 f901 	mul.w	r9, r3, r1
 8019c40:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019c44:	011b      	lsls	r3, r3, #4
 8019c46:	b289      	uxth	r1, r1
 8019c48:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8019c4c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019c50:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019c52:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8019c56:	f8b6 e000 	ldrh.w	lr, [r6]
 8019c5a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8019c5e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8019c62:	eba3 0309 	sub.w	r3, r3, r9
 8019c66:	b29b      	uxth	r3, r3
 8019c68:	eba8 0801 	sub.w	r8, r8, r1
 8019c6c:	fa1f f888 	uxth.w	r8, r8
 8019c70:	435f      	muls	r7, r3
 8019c72:	fb08 770b 	mla	r7, r8, fp, r7
 8019c76:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019c7a:	9310      	str	r3, [sp, #64]	; 0x40
 8019c7c:	fb01 770b 	mla	r7, r1, fp, r7
 8019c80:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019c84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019c86:	fb09 770b 	mla	r7, r9, fp, r7
 8019c8a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8019c8e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019c92:	fb1b fb03 	smulbb	fp, fp, r3
 8019c96:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019c9a:	fb07 b706 	mla	r7, r7, r6, fp
 8019c9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ca0:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019ca4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019ca8:	f89c c000 	ldrb.w	ip, [ip]
 8019cac:	435d      	muls	r5, r3
 8019cae:	fb08 550b 	mla	r5, r8, fp, r5
 8019cb2:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019cb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019cb8:	fb01 550b 	mla	r5, r1, fp, r5
 8019cbc:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019cc0:	fb09 550b 	mla	r5, r9, fp, r5
 8019cc4:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8019cc8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019ccc:	fb1b fb03 	smulbb	fp, fp, r3
 8019cd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019cd2:	fb03 f30c 	mul.w	r3, r3, ip
 8019cd6:	f892 c000 	ldrb.w	ip, [r2]
 8019cda:	fb08 330a 	mla	r3, r8, sl, r3
 8019cde:	fb01 330c 	mla	r3, r1, ip, r3
 8019ce2:	f890 c000 	ldrb.w	ip, [r0]
 8019ce6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019cea:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019cee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019cf0:	fa5f fe8e 	uxtb.w	lr, lr
 8019cf4:	b2bf      	uxth	r7, r7
 8019cf6:	fb1e fe03 	smulbb	lr, lr, r3
 8019cfa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019cfe:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019d02:	fb05 b506 	mla	r5, r5, r6, fp
 8019d06:	1c7b      	adds	r3, r7, #1
 8019d08:	fb0c e606 	mla	r6, ip, r6, lr
 8019d0c:	b2ad      	uxth	r5, r5
 8019d0e:	b2b6      	uxth	r6, r6
 8019d10:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019d14:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8019d18:	f105 0b01 	add.w	fp, r5, #1
 8019d1c:	1c77      	adds	r7, r6, #1
 8019d1e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8019d22:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019d26:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019d2a:	096d      	lsrs	r5, r5, #5
 8019d2c:	431f      	orrs	r7, r3
 8019d2e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019d32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019d34:	433d      	orrs	r5, r7
 8019d36:	801d      	strh	r5, [r3, #0]
 8019d38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019d3a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019d3c:	3302      	adds	r3, #2
 8019d3e:	930c      	str	r3, [sp, #48]	; 0x30
 8019d40:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019d42:	4413      	add	r3, r2
 8019d44:	931f      	str	r3, [sp, #124]	; 0x7c
 8019d46:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019d48:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019d4a:	4413      	add	r3, r2
 8019d4c:	9320      	str	r3, [sp, #128]	; 0x80
 8019d4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019d50:	3b01      	subs	r3, #1
 8019d52:	9311      	str	r3, [sp, #68]	; 0x44
 8019d54:	e732      	b.n	8019bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019d56:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019d58:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8019d5a:	4433      	add	r3, r6
 8019d5c:	931f      	str	r3, [sp, #124]	; 0x7c
 8019d5e:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8019d60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019d62:	4433      	add	r3, r6
 8019d64:	9320      	str	r3, [sp, #128]	; 0x80
 8019d66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d68:	3b01      	subs	r3, #1
 8019d6a:	9309      	str	r3, [sp, #36]	; 0x24
 8019d6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019d6e:	3302      	adds	r3, #2
 8019d70:	930a      	str	r3, [sp, #40]	; 0x28
 8019d72:	e702      	b.n	8019b7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019d74:	d027      	beq.n	8019dc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8019d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d78:	9821      	ldr	r0, [sp, #132]	; 0x84
 8019d7a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8019d7c:	3b01      	subs	r3, #1
 8019d7e:	fb00 5003 	mla	r0, r0, r3, r5
 8019d82:	1400      	asrs	r0, r0, #16
 8019d84:	f53f af16 	bmi.w	8019bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019d88:	3901      	subs	r1, #1
 8019d8a:	4288      	cmp	r0, r1
 8019d8c:	f6bf af12 	bge.w	8019bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019d90:	9922      	ldr	r1, [sp, #136]	; 0x88
 8019d92:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019d94:	fb01 0303 	mla	r3, r1, r3, r0
 8019d98:	141b      	asrs	r3, r3, #16
 8019d9a:	f53f af0b 	bmi.w	8019bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019d9e:	3a01      	subs	r2, #1
 8019da0:	4293      	cmp	r3, r2
 8019da2:	f6bf af07 	bge.w	8019bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019da6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019da8:	9311      	str	r3, [sp, #68]	; 0x44
 8019daa:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8019dae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019db0:	930c      	str	r3, [sp, #48]	; 0x30
 8019db2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019db4:	2b00      	cmp	r3, #0
 8019db6:	dc70      	bgt.n	8019e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8019db8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019dba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019dbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019dc0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019dc4:	930a      	str	r3, [sp, #40]	; 0x28
 8019dc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019dc8:	2b00      	cmp	r3, #0
 8019dca:	f340 8124 	ble.w	801a016 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019dce:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019dd2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019dd6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019dda:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019ddc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019de0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019de4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019de8:	eef0 6a62 	vmov.f32	s13, s5
 8019dec:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019df0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019df4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019df8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8019dfc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e00:	eef0 6a43 	vmov.f32	s13, s6
 8019e04:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e08:	ee12 2a90 	vmov	r2, s5
 8019e0c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e10:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e14:	ee13 2a10 	vmov	r2, s6
 8019e18:	9321      	str	r3, [sp, #132]	; 0x84
 8019e1a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019e1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e20:	9322      	str	r3, [sp, #136]	; 0x88
 8019e22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e24:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019e26:	3b01      	subs	r3, #1
 8019e28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e2c:	930e      	str	r3, [sp, #56]	; 0x38
 8019e2e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019e30:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8019e34:	bf08      	it	eq
 8019e36:	4613      	moveq	r3, r2
 8019e38:	9309      	str	r3, [sp, #36]	; 0x24
 8019e3a:	eeb0 3a67 	vmov.f32	s6, s15
 8019e3e:	eef0 2a47 	vmov.f32	s5, s14
 8019e42:	e68c      	b.n	8019b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019e44:	b149      	cbz	r1, 8019e5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8019e46:	5cb2      	ldrb	r2, [r6, r2]
 8019e48:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019e4c:	4422      	add	r2, r4
 8019e4e:	4628      	mov	r0, r5
 8019e50:	46ac      	mov	ip, r5
 8019e52:	e6f1      	b.n	8019c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019e54:	4628      	mov	r0, r5
 8019e56:	462a      	mov	r2, r5
 8019e58:	e6ee      	b.n	8019c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019e5a:	4628      	mov	r0, r5
 8019e5c:	462a      	mov	r2, r5
 8019e5e:	e7f7      	b.n	8019e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8019e60:	1c47      	adds	r7, r0, #1
 8019e62:	f53f af69 	bmi.w	8019d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019e66:	42ba      	cmp	r2, r7
 8019e68:	f6ff af66 	blt.w	8019d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019e6c:	1c6f      	adds	r7, r5, #1
 8019e6e:	f53f af63 	bmi.w	8019d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019e72:	42be      	cmp	r6, r7
 8019e74:	f6ff af60 	blt.w	8019d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019e78:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019e7a:	9002      	str	r0, [sp, #8]
 8019e7c:	b236      	sxth	r6, r6
 8019e7e:	b212      	sxth	r2, r2
 8019e80:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8019e84:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8019e88:	9200      	str	r2, [sp, #0]
 8019e8a:	9601      	str	r6, [sp, #4]
 8019e8c:	4623      	mov	r3, r4
 8019e8e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8019e92:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019e94:	f7ff fd59 	bl	801994a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8019e98:	e74e      	b.n	8019d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019e9a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019e9c:	9820      	ldr	r0, [sp, #128]	; 0x80
 8019e9e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8019ea0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019ea2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8019ea6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8019ea8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019eac:	142d      	asrs	r5, r5, #16
 8019eae:	1400      	asrs	r0, r0, #16
 8019eb0:	fb02 5000 	mla	r0, r2, r0, r5
 8019eb4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019eb6:	f815 9000 	ldrb.w	r9, [r5, r0]
 8019eba:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8019ebe:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8019ec2:	182e      	adds	r6, r5, r0
 8019ec4:	eb04 0509 	add.w	r5, r4, r9
 8019ec8:	2b00      	cmp	r3, #0
 8019eca:	f000 8096 	beq.w	8019ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8019ece:	7877      	ldrb	r7, [r6, #1]
 8019ed0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019ed4:	4427      	add	r7, r4
 8019ed6:	2900      	cmp	r1, #0
 8019ed8:	f000 8097 	beq.w	801a00a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8019edc:	18b0      	adds	r0, r6, r2
 8019ede:	5cb2      	ldrb	r2, [r6, r2]
 8019ee0:	7840      	ldrb	r0, [r0, #1]
 8019ee2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019ee6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019eea:	4422      	add	r2, r4
 8019eec:	4420      	add	r0, r4
 8019eee:	b29b      	uxth	r3, r3
 8019ef0:	b289      	uxth	r1, r1
 8019ef2:	fb03 f801 	mul.w	r8, r3, r1
 8019ef6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8019ef8:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019efc:	f8b6 c000 	ldrh.w	ip, [r6]
 8019f00:	78be      	ldrb	r6, [r7, #2]
 8019f02:	f814 9009 	ldrb.w	r9, [r4, r9]
 8019f06:	011b      	lsls	r3, r3, #4
 8019f08:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8019f0c:	b289      	uxth	r1, r1
 8019f0e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8019f12:	eba3 0308 	sub.w	r3, r3, r8
 8019f16:	b29b      	uxth	r3, r3
 8019f18:	ebae 0e01 	sub.w	lr, lr, r1
 8019f1c:	fa1f fe8e 	uxth.w	lr, lr
 8019f20:	435e      	muls	r6, r3
 8019f22:	fb0e 660b 	mla	r6, lr, fp, r6
 8019f26:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019f2a:	9310      	str	r3, [sp, #64]	; 0x40
 8019f2c:	fb01 660b 	mla	r6, r1, fp, r6
 8019f30:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019f34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f36:	fb08 660b 	mla	r6, r8, fp, r6
 8019f3a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8019f3e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8019f42:	fb1b fb03 	smulbb	fp, fp, r3
 8019f46:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8019f4a:	fb06 b60a 	mla	r6, r6, sl, fp
 8019f4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f50:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019f54:	787d      	ldrb	r5, [r7, #1]
 8019f56:	783f      	ldrb	r7, [r7, #0]
 8019f58:	435d      	muls	r5, r3
 8019f5a:	fb0e 550b 	mla	r5, lr, fp, r5
 8019f5e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8019f62:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f64:	fb01 550b 	mla	r5, r1, fp, r5
 8019f68:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019f6c:	fb08 550b 	mla	r5, r8, fp, r5
 8019f70:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8019f74:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019f78:	fb1b fb03 	smulbb	fp, fp, r3
 8019f7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f7e:	437b      	muls	r3, r7
 8019f80:	7817      	ldrb	r7, [r2, #0]
 8019f82:	fb0e 3309 	mla	r3, lr, r9, r3
 8019f86:	fb01 3307 	mla	r3, r1, r7, r3
 8019f8a:	7807      	ldrb	r7, [r0, #0]
 8019f8c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019f90:	fb08 3707 	mla	r7, r8, r7, r3
 8019f94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f96:	fa5f fc8c 	uxtb.w	ip, ip
 8019f9a:	fb1c fc03 	smulbb	ip, ip, r3
 8019f9e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8019fa2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8019fa6:	fb05 b50a 	mla	r5, r5, sl, fp
 8019faa:	fb07 c70a 	mla	r7, r7, sl, ip
 8019fae:	b2b6      	uxth	r6, r6
 8019fb0:	b2ad      	uxth	r5, r5
 8019fb2:	b2bf      	uxth	r7, r7
 8019fb4:	1c73      	adds	r3, r6, #1
 8019fb6:	1c7a      	adds	r2, r7, #1
 8019fb8:	f105 0b01 	add.w	fp, r5, #1
 8019fbc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8019fc0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8019fc4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019fc8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019fcc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8019fd0:	096d      	lsrs	r5, r5, #5
 8019fd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019fd4:	4316      	orrs	r6, r2
 8019fd6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019fda:	432e      	orrs	r6, r5
 8019fdc:	f823 6b02 	strh.w	r6, [r3], #2
 8019fe0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019fe2:	930c      	str	r3, [sp, #48]	; 0x30
 8019fe4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019fe6:	4413      	add	r3, r2
 8019fe8:	931f      	str	r3, [sp, #124]	; 0x7c
 8019fea:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019fec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019fee:	4413      	add	r3, r2
 8019ff0:	9320      	str	r3, [sp, #128]	; 0x80
 8019ff2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019ff4:	3b01      	subs	r3, #1
 8019ff6:	9311      	str	r3, [sp, #68]	; 0x44
 8019ff8:	e6db      	b.n	8019db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019ffa:	b149      	cbz	r1, 801a010 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8019ffc:	5cb2      	ldrb	r2, [r6, r2]
 8019ffe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a002:	4422      	add	r2, r4
 801a004:	4628      	mov	r0, r5
 801a006:	462f      	mov	r7, r5
 801a008:	e771      	b.n	8019eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a00a:	4628      	mov	r0, r5
 801a00c:	462a      	mov	r2, r5
 801a00e:	e76e      	b.n	8019eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a010:	4628      	mov	r0, r5
 801a012:	462a      	mov	r2, r5
 801a014:	e7f7      	b.n	801a006 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a016:	b015      	add	sp, #84	; 0x54
 801a018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a01c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a01c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a020:	880f      	ldrh	r7, [r1, #0]
 801a022:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a026:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a02a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a02e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a032:	023c      	lsls	r4, r7, #8
 801a034:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a038:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a03c:	017c      	lsls	r4, r7, #5
 801a03e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a042:	00ff      	lsls	r7, r7, #3
 801a044:	ea4b 0404 	orr.w	r4, fp, r4
 801a048:	b2ff      	uxtb	r7, r7
 801a04a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a04e:	4327      	orrs	r7, r4
 801a050:	2d00      	cmp	r5, #0
 801a052:	eb02 080a 	add.w	r8, r2, sl
 801a056:	9701      	str	r7, [sp, #4]
 801a058:	db7e      	blt.n	801a158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a05a:	45a9      	cmp	r9, r5
 801a05c:	dd7c      	ble.n	801a158 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a05e:	f1bc 0f00 	cmp.w	ip, #0
 801a062:	db77      	blt.n	801a154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a064:	45e6      	cmp	lr, ip
 801a066:	dd75      	ble.n	801a154 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a068:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a06c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a070:	441f      	add	r7, r3
 801a072:	f11c 0201 	adds.w	r2, ip, #1
 801a076:	d472      	bmi.n	801a15e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a078:	4596      	cmp	lr, r2
 801a07a:	dd70      	ble.n	801a15e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a07c:	2800      	cmp	r0, #0
 801a07e:	d06e      	beq.n	801a15e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a080:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a084:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a088:	441c      	add	r4, r3
 801a08a:	3501      	adds	r5, #1
 801a08c:	d46b      	bmi.n	801a166 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a08e:	45a9      	cmp	r9, r5
 801a090:	dd69      	ble.n	801a166 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a092:	2e00      	cmp	r6, #0
 801a094:	d067      	beq.n	801a166 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a096:	f1bc 0f00 	cmp.w	ip, #0
 801a09a:	db62      	blt.n	801a162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a09c:	45e6      	cmp	lr, ip
 801a09e:	dd60      	ble.n	801a162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a0a0:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a0a4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a0a8:	441d      	add	r5, r3
 801a0aa:	f11c 0201 	adds.w	r2, ip, #1
 801a0ae:	d45d      	bmi.n	801a16c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a0b0:	4596      	cmp	lr, r2
 801a0b2:	dd5b      	ble.n	801a16c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a0b4:	2800      	cmp	r0, #0
 801a0b6:	d059      	beq.n	801a16c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a0b8:	44c6      	add	lr, r8
 801a0ba:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a0be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a0c2:	4413      	add	r3, r2
 801a0c4:	b280      	uxth	r0, r0
 801a0c6:	b2b2      	uxth	r2, r6
 801a0c8:	fb00 f602 	mul.w	r6, r0, r2
 801a0cc:	0100      	lsls	r0, r0, #4
 801a0ce:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a0d2:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a0d6:	1b80      	subs	r0, r0, r6
 801a0d8:	fa1f fc82 	uxth.w	ip, r2
 801a0dc:	b282      	uxth	r2, r0
 801a0de:	78a0      	ldrb	r0, [r4, #2]
 801a0e0:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a0e4:	f897 9000 	ldrb.w	r9, [r7]
 801a0e8:	787f      	ldrb	r7, [r7, #1]
 801a0ea:	eba8 080c 	sub.w	r8, r8, ip
 801a0ee:	fa1f f888 	uxth.w	r8, r8
 801a0f2:	4350      	muls	r0, r2
 801a0f4:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a0f8:	78a8      	ldrb	r0, [r5, #2]
 801a0fa:	fb0c e000 	mla	r0, ip, r0, lr
 801a0fe:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a102:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a106:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a10a:	f894 e000 	ldrb.w	lr, [r4]
 801a10e:	fb02 fe0e 	mul.w	lr, r2, lr
 801a112:	fb08 e909 	mla	r9, r8, r9, lr
 801a116:	f895 e000 	ldrb.w	lr, [r5]
 801a11a:	fb0c 990e 	mla	r9, ip, lr, r9
 801a11e:	f893 e000 	ldrb.w	lr, [r3]
 801a122:	785b      	ldrb	r3, [r3, #1]
 801a124:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a128:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a12c:	ea4e 0e00 	orr.w	lr, lr, r0
 801a130:	7860      	ldrb	r0, [r4, #1]
 801a132:	4350      	muls	r0, r2
 801a134:	786a      	ldrb	r2, [r5, #1]
 801a136:	fb08 0007 	mla	r0, r8, r7, r0
 801a13a:	fb0c 0202 	mla	r2, ip, r2, r0
 801a13e:	fb06 2303 	mla	r3, r6, r3, r2
 801a142:	095b      	lsrs	r3, r3, #5
 801a144:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a148:	ea4e 0303 	orr.w	r3, lr, r3
 801a14c:	800b      	strh	r3, [r1, #0]
 801a14e:	b003      	add	sp, #12
 801a150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a154:	af01      	add	r7, sp, #4
 801a156:	e78c      	b.n	801a072 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a158:	ac01      	add	r4, sp, #4
 801a15a:	4627      	mov	r7, r4
 801a15c:	e795      	b.n	801a08a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a15e:	ac01      	add	r4, sp, #4
 801a160:	e793      	b.n	801a08a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a162:	ad01      	add	r5, sp, #4
 801a164:	e7a1      	b.n	801a0aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a166:	ab01      	add	r3, sp, #4
 801a168:	461d      	mov	r5, r3
 801a16a:	e7ab      	b.n	801a0c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a16c:	ab01      	add	r3, sp, #4
 801a16e:	e7a9      	b.n	801a0c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a174:	b08f      	sub	sp, #60	; 0x3c
 801a176:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a17a:	920c      	str	r2, [sp, #48]	; 0x30
 801a17c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a17e:	910a      	str	r1, [sp, #40]	; 0x28
 801a180:	9306      	str	r3, [sp, #24]
 801a182:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a186:	900d      	str	r0, [sp, #52]	; 0x34
 801a188:	6850      	ldr	r0, [r2, #4]
 801a18a:	6812      	ldr	r2, [r2, #0]
 801a18c:	fb00 1303 	mla	r3, r0, r3, r1
 801a190:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a194:	9307      	str	r3, [sp, #28]
 801a196:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a198:	681b      	ldr	r3, [r3, #0]
 801a19a:	9308      	str	r3, [sp, #32]
 801a19c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a19e:	685c      	ldr	r4, [r3, #4]
 801a1a0:	3404      	adds	r4, #4
 801a1a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a1a4:	2b00      	cmp	r3, #0
 801a1a6:	dc03      	bgt.n	801a1b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a1a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a1aa:	2b00      	cmp	r3, #0
 801a1ac:	f340 81d6 	ble.w	801a55c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a1b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a1b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a1b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a1ba:	1e48      	subs	r0, r1, #1
 801a1bc:	1e56      	subs	r6, r2, #1
 801a1be:	9b06      	ldr	r3, [sp, #24]
 801a1c0:	2b00      	cmp	r3, #0
 801a1c2:	f340 80b7 	ble.w	801a334 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a1c6:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a1ca:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a1ce:	d406      	bmi.n	801a1de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a1d0:	4287      	cmp	r7, r0
 801a1d2:	da04      	bge.n	801a1de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a1d4:	2b00      	cmp	r3, #0
 801a1d6:	db02      	blt.n	801a1de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a1d8:	42b3      	cmp	r3, r6
 801a1da:	f2c0 80ac 	blt.w	801a336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a1de:	3701      	adds	r7, #1
 801a1e0:	f100 809d 	bmi.w	801a31e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a1e4:	42b9      	cmp	r1, r7
 801a1e6:	f2c0 809a 	blt.w	801a31e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a1ea:	3301      	adds	r3, #1
 801a1ec:	f100 8097 	bmi.w	801a31e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a1f0:	429a      	cmp	r2, r3
 801a1f2:	f2c0 8094 	blt.w	801a31e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a1f6:	9b06      	ldr	r3, [sp, #24]
 801a1f8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a1fa:	9b07      	ldr	r3, [sp, #28]
 801a1fc:	9309      	str	r3, [sp, #36]	; 0x24
 801a1fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a200:	2b00      	cmp	r3, #0
 801a202:	f340 80b5 	ble.w	801a370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a206:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a208:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a20a:	68c7      	ldr	r7, [r0, #12]
 801a20c:	6892      	ldr	r2, [r2, #8]
 801a20e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a212:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a216:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a21a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a21e:	f100 80fb 	bmi.w	801a418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a222:	f102 3cff 	add.w	ip, r2, #4294967295
 801a226:	4560      	cmp	r0, ip
 801a228:	f280 80f6 	bge.w	801a418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a22c:	2e00      	cmp	r6, #0
 801a22e:	f2c0 80f3 	blt.w	801a418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a232:	f107 3cff 	add.w	ip, r7, #4294967295
 801a236:	4566      	cmp	r6, ip
 801a238:	f280 80ee 	bge.w	801a418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a23c:	b212      	sxth	r2, r2
 801a23e:	fb06 0002 	mla	r0, r6, r2, r0
 801a242:	9e08      	ldr	r6, [sp, #32]
 801a244:	1837      	adds	r7, r6, r0
 801a246:	5c30      	ldrb	r0, [r6, r0]
 801a248:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a24c:	eb04 0c08 	add.w	ip, r4, r8
 801a250:	2b00      	cmp	r3, #0
 801a252:	f000 80d3 	beq.w	801a3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a256:	787e      	ldrb	r6, [r7, #1]
 801a258:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a25c:	4426      	add	r6, r4
 801a25e:	2900      	cmp	r1, #0
 801a260:	f000 80d4 	beq.w	801a40c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a264:	18b8      	adds	r0, r7, r2
 801a266:	5cba      	ldrb	r2, [r7, r2]
 801a268:	7840      	ldrb	r0, [r0, #1]
 801a26a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a26e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a272:	4422      	add	r2, r4
 801a274:	4420      	add	r0, r4
 801a276:	b29b      	uxth	r3, r3
 801a278:	b289      	uxth	r1, r1
 801a27a:	fb03 f901 	mul.w	r9, r3, r1
 801a27e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a282:	011b      	lsls	r3, r3, #4
 801a284:	b289      	uxth	r1, r1
 801a286:	78b7      	ldrb	r7, [r6, #2]
 801a288:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a28c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a290:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a294:	eba3 0309 	sub.w	r3, r3, r9
 801a298:	b29b      	uxth	r3, r3
 801a29a:	ebae 0e01 	sub.w	lr, lr, r1
 801a29e:	fa1f fe8e 	uxth.w	lr, lr
 801a2a2:	435f      	muls	r7, r3
 801a2a4:	fb0e 770a 	mla	r7, lr, sl, r7
 801a2a8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a2ac:	fb01 770a 	mla	r7, r1, sl, r7
 801a2b0:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a2b4:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a2b8:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a2bc:	f896 8000 	ldrb.w	r8, [r6]
 801a2c0:	7876      	ldrb	r6, [r6, #1]
 801a2c2:	fb03 f808 	mul.w	r8, r3, r8
 801a2c6:	fb0e 8807 	mla	r8, lr, r7, r8
 801a2ca:	7817      	ldrb	r7, [r2, #0]
 801a2cc:	fb01 8807 	mla	r8, r1, r7, r8
 801a2d0:	7807      	ldrb	r7, [r0, #0]
 801a2d2:	fb09 8707 	mla	r7, r9, r7, r8
 801a2d6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a2da:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a2de:	ea47 070a 	orr.w	r7, r7, sl
 801a2e2:	4373      	muls	r3, r6
 801a2e4:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a2e8:	fb0e 330c 	mla	r3, lr, ip, r3
 801a2ec:	fb01 310a 	mla	r1, r1, sl, r3
 801a2f0:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a2f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2f6:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a2fa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a2fe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a302:	ea47 070a 	orr.w	r7, r7, sl
 801a306:	801f      	strh	r7, [r3, #0]
 801a308:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a30a:	3302      	adds	r3, #2
 801a30c:	9309      	str	r3, [sp, #36]	; 0x24
 801a30e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a310:	449b      	add	fp, r3
 801a312:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a314:	441d      	add	r5, r3
 801a316:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a318:	3b01      	subs	r3, #1
 801a31a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a31c:	e76f      	b.n	801a1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a31e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a320:	449b      	add	fp, r3
 801a322:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a324:	441d      	add	r5, r3
 801a326:	9b06      	ldr	r3, [sp, #24]
 801a328:	3b01      	subs	r3, #1
 801a32a:	9306      	str	r3, [sp, #24]
 801a32c:	9b07      	ldr	r3, [sp, #28]
 801a32e:	3302      	adds	r3, #2
 801a330:	9307      	str	r3, [sp, #28]
 801a332:	e744      	b.n	801a1be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a334:	d023      	beq.n	801a37e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a336:	9b06      	ldr	r3, [sp, #24]
 801a338:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a33a:	3b01      	subs	r3, #1
 801a33c:	fb00 b003 	mla	r0, r0, r3, fp
 801a340:	1400      	asrs	r0, r0, #16
 801a342:	f53f af58 	bmi.w	801a1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a346:	3901      	subs	r1, #1
 801a348:	4288      	cmp	r0, r1
 801a34a:	f6bf af54 	bge.w	801a1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a34e:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a350:	fb01 5303 	mla	r3, r1, r3, r5
 801a354:	141b      	asrs	r3, r3, #16
 801a356:	f53f af4e 	bmi.w	801a1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a35a:	3a01      	subs	r2, #1
 801a35c:	4293      	cmp	r3, r2
 801a35e:	f6bf af4a 	bge.w	801a1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a362:	9b06      	ldr	r3, [sp, #24]
 801a364:	9309      	str	r3, [sp, #36]	; 0x24
 801a366:	9b07      	ldr	r3, [sp, #28]
 801a368:	930b      	str	r3, [sp, #44]	; 0x2c
 801a36a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a36c:	2b00      	cmp	r3, #0
 801a36e:	dc70      	bgt.n	801a452 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a370:	9b06      	ldr	r3, [sp, #24]
 801a372:	9a07      	ldr	r2, [sp, #28]
 801a374:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a378:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a37c:	9307      	str	r3, [sp, #28]
 801a37e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a380:	2b00      	cmp	r3, #0
 801a382:	f340 80eb 	ble.w	801a55c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a386:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a38a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a38e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a392:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a394:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a398:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a39c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a3a0:	eef0 6a62 	vmov.f32	s13, s5
 801a3a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a3a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a3b0:	ee16 ba90 	vmov	fp, s13
 801a3b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a3b8:	eef0 6a43 	vmov.f32	s13, s6
 801a3bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a3c0:	ee12 2a90 	vmov	r2, s5
 801a3c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a3c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3cc:	ee13 2a10 	vmov	r2, s6
 801a3d0:	931b      	str	r3, [sp, #108]	; 0x6c
 801a3d2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a3d4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3d8:	931c      	str	r3, [sp, #112]	; 0x70
 801a3da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a3dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a3de:	3b01      	subs	r3, #1
 801a3e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3e4:	930a      	str	r3, [sp, #40]	; 0x28
 801a3e6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a3e8:	bf08      	it	eq
 801a3ea:	4613      	moveq	r3, r2
 801a3ec:	ee16 5a90 	vmov	r5, s13
 801a3f0:	9306      	str	r3, [sp, #24]
 801a3f2:	eeb0 3a67 	vmov.f32	s6, s15
 801a3f6:	eef0 2a47 	vmov.f32	s5, s14
 801a3fa:	e6d2      	b.n	801a1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a3fc:	b149      	cbz	r1, 801a412 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a3fe:	5cba      	ldrb	r2, [r7, r2]
 801a400:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a404:	4422      	add	r2, r4
 801a406:	4660      	mov	r0, ip
 801a408:	4666      	mov	r6, ip
 801a40a:	e734      	b.n	801a276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a40c:	4660      	mov	r0, ip
 801a40e:	4662      	mov	r2, ip
 801a410:	e731      	b.n	801a276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a412:	4660      	mov	r0, ip
 801a414:	4662      	mov	r2, ip
 801a416:	e7f7      	b.n	801a408 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a418:	f110 0c01 	adds.w	ip, r0, #1
 801a41c:	f53f af74 	bmi.w	801a308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a420:	4562      	cmp	r2, ip
 801a422:	f6ff af71 	blt.w	801a308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a426:	f116 0c01 	adds.w	ip, r6, #1
 801a42a:	f53f af6d 	bmi.w	801a308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a42e:	4567      	cmp	r7, ip
 801a430:	f6ff af6a 	blt.w	801a308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a434:	b23f      	sxth	r7, r7
 801a436:	b212      	sxth	r2, r2
 801a438:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a43c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a440:	9200      	str	r2, [sp, #0]
 801a442:	9701      	str	r7, [sp, #4]
 801a444:	4623      	mov	r3, r4
 801a446:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a44a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a44c:	f7ff fde6 	bl	801a01c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a450:	e75a      	b.n	801a308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a452:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a454:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a458:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a45c:	1428      	asrs	r0, r5, #16
 801a45e:	fb02 6000 	mla	r0, r2, r0, r6
 801a462:	9e08      	ldr	r6, [sp, #32]
 801a464:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a468:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a46c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a470:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a474:	1837      	adds	r7, r6, r0
 801a476:	eb04 0c08 	add.w	ip, r4, r8
 801a47a:	2b00      	cmp	r3, #0
 801a47c:	d060      	beq.n	801a540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a47e:	787e      	ldrb	r6, [r7, #1]
 801a480:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a484:	4426      	add	r6, r4
 801a486:	2900      	cmp	r1, #0
 801a488:	d062      	beq.n	801a550 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a48a:	18b8      	adds	r0, r7, r2
 801a48c:	5cba      	ldrb	r2, [r7, r2]
 801a48e:	7840      	ldrb	r0, [r0, #1]
 801a490:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a494:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a498:	4422      	add	r2, r4
 801a49a:	4420      	add	r0, r4
 801a49c:	b29b      	uxth	r3, r3
 801a49e:	b289      	uxth	r1, r1
 801a4a0:	fb03 f901 	mul.w	r9, r3, r1
 801a4a4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a4a8:	011b      	lsls	r3, r3, #4
 801a4aa:	b289      	uxth	r1, r1
 801a4ac:	78b7      	ldrb	r7, [r6, #2]
 801a4ae:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a4b2:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a4b6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a4ba:	eba3 0309 	sub.w	r3, r3, r9
 801a4be:	b29b      	uxth	r3, r3
 801a4c0:	ebae 0e01 	sub.w	lr, lr, r1
 801a4c4:	fa1f fe8e 	uxth.w	lr, lr
 801a4c8:	435f      	muls	r7, r3
 801a4ca:	fb0e 770a 	mla	r7, lr, sl, r7
 801a4ce:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a4d2:	fb01 770a 	mla	r7, r1, sl, r7
 801a4d6:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a4da:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a4de:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a4e2:	f896 8000 	ldrb.w	r8, [r6]
 801a4e6:	7876      	ldrb	r6, [r6, #1]
 801a4e8:	fb03 f808 	mul.w	r8, r3, r8
 801a4ec:	fb0e 8807 	mla	r8, lr, r7, r8
 801a4f0:	7817      	ldrb	r7, [r2, #0]
 801a4f2:	fb01 8807 	mla	r8, r1, r7, r8
 801a4f6:	7807      	ldrb	r7, [r0, #0]
 801a4f8:	fb09 8707 	mla	r7, r9, r7, r8
 801a4fc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a500:	4373      	muls	r3, r6
 801a502:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a506:	7856      	ldrb	r6, [r2, #1]
 801a508:	ea47 070a 	orr.w	r7, r7, sl
 801a50c:	fb0e 330c 	mla	r3, lr, ip, r3
 801a510:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a514:	fb01 3306 	mla	r3, r1, r6, r3
 801a518:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a51c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a520:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a522:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a526:	ea47 070a 	orr.w	r7, r7, sl
 801a52a:	f823 7b02 	strh.w	r7, [r3], #2
 801a52e:	930b      	str	r3, [sp, #44]	; 0x2c
 801a530:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a532:	449b      	add	fp, r3
 801a534:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a536:	441d      	add	r5, r3
 801a538:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a53a:	3b01      	subs	r3, #1
 801a53c:	9309      	str	r3, [sp, #36]	; 0x24
 801a53e:	e714      	b.n	801a36a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a540:	b149      	cbz	r1, 801a556 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a542:	5cba      	ldrb	r2, [r7, r2]
 801a544:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a548:	4422      	add	r2, r4
 801a54a:	4660      	mov	r0, ip
 801a54c:	4666      	mov	r6, ip
 801a54e:	e7a5      	b.n	801a49c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a550:	4660      	mov	r0, ip
 801a552:	4662      	mov	r2, ip
 801a554:	e7a2      	b.n	801a49c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a556:	4660      	mov	r0, ip
 801a558:	4662      	mov	r2, ip
 801a55a:	e7f7      	b.n	801a54c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a55c:	b00f      	add	sp, #60	; 0x3c
 801a55e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a562 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a562:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a566:	b085      	sub	sp, #20
 801a568:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a56c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a570:	9102      	str	r1, [sp, #8]
 801a572:	2c00      	cmp	r4, #0
 801a574:	fb04 710c 	mla	r1, r4, ip, r7
 801a578:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a57c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801a580:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a584:	eb02 0e01 	add.w	lr, r2, r1
 801a588:	f2c0 8122 	blt.w	801a7d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a58c:	45a0      	cmp	r8, r4
 801a58e:	f340 811f 	ble.w	801a7d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a592:	2f00      	cmp	r7, #0
 801a594:	f2c0 811a 	blt.w	801a7cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a598:	45bc      	cmp	ip, r7
 801a59a:	f340 8117 	ble.w	801a7cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a59e:	5c52      	ldrb	r2, [r2, r1]
 801a5a0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a5a4:	1c7a      	adds	r2, r7, #1
 801a5a6:	f100 8116 	bmi.w	801a7d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a5aa:	4594      	cmp	ip, r2
 801a5ac:	f340 8113 	ble.w	801a7d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a5b0:	2e00      	cmp	r6, #0
 801a5b2:	f000 8112 	beq.w	801a7da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801a5b6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a5ba:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801a5be:	3401      	adds	r4, #1
 801a5c0:	f100 810f 	bmi.w	801a7e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a5c4:	45a0      	cmp	r8, r4
 801a5c6:	f340 810c 	ble.w	801a7e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801a5ca:	2800      	cmp	r0, #0
 801a5cc:	f000 810c 	beq.w	801a7e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801a5d0:	2f00      	cmp	r7, #0
 801a5d2:	f2c0 8104 	blt.w	801a7de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a5d6:	45bc      	cmp	ip, r7
 801a5d8:	f340 8101 	ble.w	801a7de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801a5dc:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801a5e0:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801a5e4:	3701      	adds	r7, #1
 801a5e6:	f100 8102 	bmi.w	801a7ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a5ea:	45bc      	cmp	ip, r7
 801a5ec:	f340 80ff 	ble.w	801a7ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801a5f0:	2e00      	cmp	r6, #0
 801a5f2:	f000 80fe 	beq.w	801a7f2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a5f6:	44f4      	add	ip, lr
 801a5f8:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a5fc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a600:	b2b6      	uxth	r6, r6
 801a602:	b280      	uxth	r0, r0
 801a604:	fb00 fe06 	mul.w	lr, r0, r6
 801a608:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a60c:	0136      	lsls	r6, r6, #4
 801a60e:	eba6 070e 	sub.w	r7, r6, lr
 801a612:	b280      	uxth	r0, r0
 801a614:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a618:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a61c:	b2bf      	uxth	r7, r7
 801a61e:	1a1b      	subs	r3, r3, r0
 801a620:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a624:	b29b      	uxth	r3, r3
 801a626:	fb0a f607 	mul.w	r6, sl, r7
 801a62a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a62e:	fb0b 6603 	mla	r6, fp, r3, r6
 801a632:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a636:	fb00 6609 	mla	r6, r0, r9, r6
 801a63a:	fb0e 6608 	mla	r6, lr, r8, r6
 801a63e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a642:	9600      	str	r6, [sp, #0]
 801a644:	2e00      	cmp	r6, #0
 801a646:	f000 80be 	beq.w	801a7c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801a64a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a64e:	fb0b fc0c 	mul.w	ip, fp, ip
 801a652:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a656:	fb0b f505 	mul.w	r5, fp, r5
 801a65a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a65e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801a662:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a666:	44dc      	add	ip, fp
 801a668:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a66c:	9501      	str	r5, [sp, #4]
 801a66e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801a672:	9503      	str	r5, [sp, #12]
 801a674:	9d01      	ldr	r5, [sp, #4]
 801a676:	9e02      	ldr	r6, [sp, #8]
 801a678:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a67c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a680:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801a684:	fb0a fc0c 	mul.w	ip, sl, ip
 801a688:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a68c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a690:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a694:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a698:	4465      	add	r5, ip
 801a69a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a69e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a6a2:	fb09 fc0c 	mul.w	ip, r9, ip
 801a6a6:	fb09 f904 	mul.w	r9, r9, r4
 801a6aa:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801a6ae:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a6b2:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801a6b6:	fb08 f404 	mul.w	r4, r8, r4
 801a6ba:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a6be:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a6c2:	fb08 f802 	mul.w	r8, r8, r2
 801a6c6:	fb0a fa01 	mul.w	sl, sl, r1
 801a6ca:	0a22      	lsrs	r2, r4, #8
 801a6cc:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801a6d0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a6d4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801a6d8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a6dc:	4414      	add	r4, r2
 801a6de:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a6e2:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801a6e6:	0a2d      	lsrs	r5, r5, #8
 801a6e8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a6ec:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a6f0:	9a03      	ldr	r2, [sp, #12]
 801a6f2:	8836      	ldrh	r6, [r6, #0]
 801a6f4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a6f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a6fc:	437d      	muls	r5, r7
 801a6fe:	4461      	add	r1, ip
 801a700:	0a24      	lsrs	r4, r4, #8
 801a702:	fb02 5503 	mla	r5, r2, r3, r5
 801a706:	0a09      	lsrs	r1, r1, #8
 801a708:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a70c:	fb04 540e 	mla	r4, r4, lr, r5
 801a710:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a714:	fb01 4100 	mla	r1, r1, r0, r4
 801a718:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a71c:	0a09      	lsrs	r1, r1, #8
 801a71e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a722:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801a726:	fb07 f70a 	mul.w	r7, r7, sl
 801a72a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a72e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801a732:	fb03 7101 	mla	r1, r3, r1, r7
 801a736:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a73a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a73e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a742:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801a746:	fb00 e101 	mla	r1, r0, r1, lr
 801a74a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801a74e:	9a00      	ldr	r2, [sp, #0]
 801a750:	b287      	uxth	r7, r0
 801a752:	437a      	muls	r2, r7
 801a754:	0a09      	lsrs	r1, r1, #8
 801a756:	1c53      	adds	r3, r2, #1
 801a758:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a75c:	4321      	orrs	r1, r4
 801a75e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a762:	1235      	asrs	r5, r6, #8
 801a764:	0c0a      	lsrs	r2, r1, #16
 801a766:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a76a:	b2db      	uxtb	r3, r3
 801a76c:	fb12 f207 	smulbb	r2, r2, r7
 801a770:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a774:	fb05 2503 	mla	r5, r5, r3, r2
 801a778:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801a77c:	10f2      	asrs	r2, r6, #3
 801a77e:	b2c8      	uxtb	r0, r1
 801a780:	00f6      	lsls	r6, r6, #3
 801a782:	fb14 f407 	smulbb	r4, r4, r7
 801a786:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a78a:	b2f6      	uxtb	r6, r6
 801a78c:	fb10 f007 	smulbb	r0, r0, r7
 801a790:	fb02 4203 	mla	r2, r2, r3, r4
 801a794:	b2ad      	uxth	r5, r5
 801a796:	fb06 0303 	mla	r3, r6, r3, r0
 801a79a:	b299      	uxth	r1, r3
 801a79c:	b294      	uxth	r4, r2
 801a79e:	1c6b      	adds	r3, r5, #1
 801a7a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a7a4:	1c62      	adds	r2, r4, #1
 801a7a6:	1c4b      	adds	r3, r1, #1
 801a7a8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a7ac:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a7b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a7b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a7b8:	0952      	lsrs	r2, r2, #5
 801a7ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a7be:	432b      	orrs	r3, r5
 801a7c0:	4313      	orrs	r3, r2
 801a7c2:	9a02      	ldr	r2, [sp, #8]
 801a7c4:	8013      	strh	r3, [r2, #0]
 801a7c6:	b005      	add	sp, #20
 801a7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a7cc:	2500      	movs	r5, #0
 801a7ce:	e6e9      	b.n	801a5a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801a7d0:	2100      	movs	r1, #0
 801a7d2:	460d      	mov	r5, r1
 801a7d4:	e6f3      	b.n	801a5be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a7d6:	2100      	movs	r1, #0
 801a7d8:	e6f1      	b.n	801a5be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a7da:	4631      	mov	r1, r6
 801a7dc:	e6ef      	b.n	801a5be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a7de:	2400      	movs	r4, #0
 801a7e0:	e700      	b.n	801a5e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801a7e2:	2200      	movs	r2, #0
 801a7e4:	4614      	mov	r4, r2
 801a7e6:	e70b      	b.n	801a600 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a7e8:	4602      	mov	r2, r0
 801a7ea:	4604      	mov	r4, r0
 801a7ec:	e708      	b.n	801a600 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a7ee:	2200      	movs	r2, #0
 801a7f0:	e706      	b.n	801a600 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a7f2:	4632      	mov	r2, r6
 801a7f4:	e704      	b.n	801a600 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801a7f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7fa:	b09f      	sub	sp, #124	; 0x7c
 801a7fc:	921b      	str	r2, [sp, #108]	; 0x6c
 801a7fe:	9309      	str	r3, [sp, #36]	; 0x24
 801a800:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a802:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801a806:	931c      	str	r3, [sp, #112]	; 0x70
 801a808:	9119      	str	r1, [sp, #100]	; 0x64
 801a80a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801a80e:	901d      	str	r0, [sp, #116]	; 0x74
 801a810:	6850      	ldr	r0, [r2, #4]
 801a812:	6812      	ldr	r2, [r2, #0]
 801a814:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801a816:	fb00 1303 	mla	r3, r0, r3, r1
 801a81a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a81e:	930c      	str	r3, [sp, #48]	; 0x30
 801a820:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a822:	681b      	ldr	r3, [r3, #0]
 801a824:	9312      	str	r3, [sp, #72]	; 0x48
 801a826:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a828:	685e      	ldr	r6, [r3, #4]
 801a82a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801a82e:	930d      	str	r3, [sp, #52]	; 0x34
 801a830:	3604      	adds	r6, #4
 801a832:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a834:	2b00      	cmp	r3, #0
 801a836:	dc03      	bgt.n	801a840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a838:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a83a:	2b00      	cmp	r3, #0
 801a83c:	f340 8388 	ble.w	801af50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801a840:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a842:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a846:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a84a:	1e48      	subs	r0, r1, #1
 801a84c:	1e57      	subs	r7, r2, #1
 801a84e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a850:	2b00      	cmp	r3, #0
 801a852:	f340 8195 	ble.w	801ab80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a856:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801a858:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a85c:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a860:	d406      	bmi.n	801a870 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a862:	4584      	cmp	ip, r0
 801a864:	da04      	bge.n	801a870 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a866:	2b00      	cmp	r3, #0
 801a868:	db02      	blt.n	801a870 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a86a:	42bb      	cmp	r3, r7
 801a86c:	f2c0 8189 	blt.w	801ab82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a870:	f11c 0c01 	adds.w	ip, ip, #1
 801a874:	f100 8177 	bmi.w	801ab66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a878:	4561      	cmp	r1, ip
 801a87a:	f2c0 8174 	blt.w	801ab66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a87e:	3301      	adds	r3, #1
 801a880:	f100 8171 	bmi.w	801ab66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a884:	429a      	cmp	r2, r3
 801a886:	f2c0 816e 	blt.w	801ab66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a88a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a88c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801a88e:	931a      	str	r3, [sp, #104]	; 0x68
 801a890:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801a892:	2b00      	cmp	r3, #0
 801a894:	f340 8193 	ble.w	801abbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801a898:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a89a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a89e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a8a0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801a8a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a8a6:	141b      	asrs	r3, r3, #16
 801a8a8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a8ac:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a8b0:	f100 81d6 	bmi.w	801ac60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a8b4:	f100 38ff 	add.w	r8, r0, #4294967295
 801a8b8:	4543      	cmp	r3, r8
 801a8ba:	f280 81d1 	bge.w	801ac60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a8be:	f1bc 0f00 	cmp.w	ip, #0
 801a8c2:	f2c0 81cd 	blt.w	801ac60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a8c6:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a8ca:	45c4      	cmp	ip, r8
 801a8cc:	f280 81c8 	bge.w	801ac60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a8d0:	b200      	sxth	r0, r0
 801a8d2:	fb0c 3300 	mla	r3, ip, r0, r3
 801a8d6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a8d8:	eb04 0803 	add.w	r8, r4, r3
 801a8dc:	5ce3      	ldrb	r3, [r4, r3]
 801a8de:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a8e2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a8e6:	2a00      	cmp	r2, #0
 801a8e8:	f000 81af 	beq.w	801ac4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a8ec:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a8f0:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a8f4:	940e      	str	r4, [sp, #56]	; 0x38
 801a8f6:	0e24      	lsrs	r4, r4, #24
 801a8f8:	9415      	str	r4, [sp, #84]	; 0x54
 801a8fa:	b179      	cbz	r1, 801a91c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a8fc:	eb08 0c00 	add.w	ip, r8, r0
 801a900:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a904:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a908:	900a      	str	r0, [sp, #40]	; 0x28
 801a90a:	0e00      	lsrs	r0, r0, #24
 801a90c:	9013      	str	r0, [sp, #76]	; 0x4c
 801a90e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801a912:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a916:	900f      	str	r0, [sp, #60]	; 0x3c
 801a918:	0e00      	lsrs	r0, r0, #24
 801a91a:	9016      	str	r0, [sp, #88]	; 0x58
 801a91c:	b292      	uxth	r2, r2
 801a91e:	b289      	uxth	r1, r1
 801a920:	fb02 f901 	mul.w	r9, r2, r1
 801a924:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a928:	0112      	lsls	r2, r2, #4
 801a92a:	eba2 0809 	sub.w	r8, r2, r9
 801a92e:	b289      	uxth	r1, r1
 801a930:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801a934:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a936:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a938:	fa1f f888 	uxth.w	r8, r8
 801a93c:	1a52      	subs	r2, r2, r1
 801a93e:	b292      	uxth	r2, r2
 801a940:	fb08 f000 	mul.w	r0, r8, r0
 801a944:	fb02 000e 	mla	r0, r2, lr, r0
 801a948:	fb01 0004 	mla	r0, r1, r4, r0
 801a94c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801a94e:	fb09 0004 	mla	r0, r9, r4, r0
 801a952:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a956:	2800      	cmp	r0, #0
 801a958:	f000 80fa 	beq.w	801ab50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a95c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a960:	d01b      	beq.n	801a99a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a962:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a966:	fb0e fa0a 	mul.w	sl, lr, sl
 801a96a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a96e:	fb0e fe03 	mul.w	lr, lr, r3
 801a972:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a976:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a97a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a97e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a982:	4453      	add	r3, sl
 801a984:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a988:	0a1b      	lsrs	r3, r3, #8
 801a98a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a98e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a992:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a996:	ea43 030c 	orr.w	r3, r3, ip
 801a99a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a99c:	2cff      	cmp	r4, #255	; 0xff
 801a99e:	d021      	beq.n	801a9e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a9a0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a9a2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a9a6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a9a8:	fb04 fb0b 	mul.w	fp, r4, fp
 801a9ac:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801a9ae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a9b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a9b4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a9b8:	fb04 fa0a 	mul.w	sl, r4, sl
 801a9bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a9c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a9c4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a9c8:	44de      	add	lr, fp
 801a9ca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a9ce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a9d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a9d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a9da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a9de:	ea4e 040a 	orr.w	r4, lr, sl
 801a9e2:	940e      	str	r4, [sp, #56]	; 0x38
 801a9e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a9e6:	2cff      	cmp	r4, #255	; 0xff
 801a9e8:	d021      	beq.n	801aa2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801a9ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a9ec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801a9f0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a9f2:	fb04 fb0b 	mul.w	fp, r4, fp
 801a9f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a9f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801a9fc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a9fe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aa02:	fb04 fa0a 	mul.w	sl, r4, sl
 801aa06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aa0e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aa12:	44de      	add	lr, fp
 801aa14:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aa18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aa1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa28:	ea4e 040a 	orr.w	r4, lr, sl
 801aa2c:	940a      	str	r4, [sp, #40]	; 0x28
 801aa2e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aa30:	2cff      	cmp	r4, #255	; 0xff
 801aa32:	d021      	beq.n	801aa78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801aa34:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aa36:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801aa3a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aa3c:	fb04 fb0b 	mul.w	fp, r4, fp
 801aa40:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aa42:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801aa46:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aa48:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aa4c:	fb04 fa0a 	mul.w	sl, r4, sl
 801aa50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa54:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aa58:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aa5c:	44de      	add	lr, fp
 801aa5e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aa62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aa66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aa6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aa6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aa72:	ea4e 040a 	orr.w	r4, lr, sl
 801aa76:	940f      	str	r4, [sp, #60]	; 0x3c
 801aa78:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aa7a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aa7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801aa80:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801aa84:	fb08 fc0c 	mul.w	ip, r8, ip
 801aa88:	fb02 cc0e 	mla	ip, r2, lr, ip
 801aa8c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aa90:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aa92:	fb01 cc0e 	mla	ip, r1, lr, ip
 801aa96:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aa9a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aa9c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801aaa0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801aaa4:	fb08 f80e 	mul.w	r8, r8, lr
 801aaa8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aaac:	fb02 8303 	mla	r3, r2, r3, r8
 801aab0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801aab2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aab4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801aab8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aaba:	fb01 330a 	mla	r3, r1, sl, r3
 801aabe:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801aac2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801aac4:	fb09 3901 	mla	r9, r9, r1, r3
 801aac8:	4342      	muls	r2, r0
 801aaca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aace:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aad2:	883b      	ldrh	r3, [r7, #0]
 801aad4:	1c50      	adds	r0, r2, #1
 801aad6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aada:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801aade:	ea4c 0c09 	orr.w	ip, ip, r9
 801aae2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801aae6:	1219      	asrs	r1, r3, #8
 801aae8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801aaec:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801aaf0:	b2c0      	uxtb	r0, r0
 801aaf2:	fb12 f204 	smulbb	r2, r2, r4
 801aaf6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801aafa:	fb01 2100 	mla	r1, r1, r0, r2
 801aafe:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ab02:	10da      	asrs	r2, r3, #3
 801ab04:	fa5f fc8c 	uxtb.w	ip, ip
 801ab08:	00db      	lsls	r3, r3, #3
 801ab0a:	fb1c fc04 	smulbb	ip, ip, r4
 801ab0e:	b2db      	uxtb	r3, r3
 801ab10:	b289      	uxth	r1, r1
 801ab12:	fb03 c300 	mla	r3, r3, r0, ip
 801ab16:	fa1f fc83 	uxth.w	ip, r3
 801ab1a:	1c4b      	adds	r3, r1, #1
 801ab1c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ab20:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ab24:	fb1e fe04 	smulbb	lr, lr, r4
 801ab28:	f10c 0301 	add.w	r3, ip, #1
 801ab2c:	fb02 e200 	mla	r2, r2, r0, lr
 801ab30:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ab34:	b292      	uxth	r2, r2
 801ab36:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ab3a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ab3e:	430b      	orrs	r3, r1
 801ab40:	1c51      	adds	r1, r2, #1
 801ab42:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ab46:	0952      	lsrs	r2, r2, #5
 801ab48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ab4c:	4313      	orrs	r3, r2
 801ab4e:	803b      	strh	r3, [r7, #0]
 801ab50:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ab52:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ab54:	441a      	add	r2, r3
 801ab56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ab58:	9229      	str	r2, [sp, #164]	; 0xa4
 801ab5a:	441d      	add	r5, r3
 801ab5c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ab5e:	3b01      	subs	r3, #1
 801ab60:	3702      	adds	r7, #2
 801ab62:	931a      	str	r3, [sp, #104]	; 0x68
 801ab64:	e694      	b.n	801a890 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ab66:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801ab68:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ab6a:	441c      	add	r4, r3
 801ab6c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ab6e:	9429      	str	r4, [sp, #164]	; 0xa4
 801ab70:	441d      	add	r5, r3
 801ab72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab74:	3b01      	subs	r3, #1
 801ab76:	9309      	str	r3, [sp, #36]	; 0x24
 801ab78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ab7a:	3302      	adds	r3, #2
 801ab7c:	930c      	str	r3, [sp, #48]	; 0x30
 801ab7e:	e666      	b.n	801a84e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ab80:	d024      	beq.n	801abcc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801ab82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab84:	982b      	ldr	r0, [sp, #172]	; 0xac
 801ab86:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801ab88:	3b01      	subs	r3, #1
 801ab8a:	fb00 4003 	mla	r0, r0, r3, r4
 801ab8e:	1400      	asrs	r0, r0, #16
 801ab90:	f53f ae7b 	bmi.w	801a88a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ab94:	3901      	subs	r1, #1
 801ab96:	4288      	cmp	r0, r1
 801ab98:	f6bf ae77 	bge.w	801a88a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ab9c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801ab9e:	fb01 5303 	mla	r3, r1, r3, r5
 801aba2:	141b      	asrs	r3, r3, #16
 801aba4:	f53f ae71 	bmi.w	801a88a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801aba8:	3a01      	subs	r2, #1
 801abaa:	4293      	cmp	r3, r2
 801abac:	f6bf ae6d 	bge.w	801a88a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801abb0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801abb4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801abb8:	f1bb 0f00 	cmp.w	fp, #0
 801abbc:	dc70      	bgt.n	801aca0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801abbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801abc0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801abc4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801abc6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801abca:	930c      	str	r3, [sp, #48]	; 0x30
 801abcc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801abce:	2b00      	cmp	r3, #0
 801abd0:	f340 81be 	ble.w	801af50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801abd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801abd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801abdc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801abe0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801abe2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801abe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801abea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abee:	eef0 6a62 	vmov.f32	s13, s5
 801abf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abfa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abfe:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801ac02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac06:	eef0 6a43 	vmov.f32	s13, s6
 801ac0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac0e:	ee12 2a90 	vmov	r2, s5
 801ac12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac16:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac1a:	ee13 2a10 	vmov	r2, s6
 801ac1e:	932b      	str	r3, [sp, #172]	; 0xac
 801ac20:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ac22:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac26:	932c      	str	r3, [sp, #176]	; 0xb0
 801ac28:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ac2a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801ac2c:	3b01      	subs	r3, #1
 801ac2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac32:	9319      	str	r3, [sp, #100]	; 0x64
 801ac34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ac36:	bf08      	it	eq
 801ac38:	4613      	moveq	r3, r2
 801ac3a:	ee16 5a90 	vmov	r5, s13
 801ac3e:	9309      	str	r3, [sp, #36]	; 0x24
 801ac40:	eeb0 3a67 	vmov.f32	s6, s15
 801ac44:	eef0 2a47 	vmov.f32	s5, s14
 801ac48:	e5f3      	b.n	801a832 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ac4a:	2900      	cmp	r1, #0
 801ac4c:	f43f ae66 	beq.w	801a91c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ac50:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ac54:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ac58:	900a      	str	r0, [sp, #40]	; 0x28
 801ac5a:	0e00      	lsrs	r0, r0, #24
 801ac5c:	9013      	str	r0, [sp, #76]	; 0x4c
 801ac5e:	e65d      	b.n	801a91c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ac60:	f113 0801 	adds.w	r8, r3, #1
 801ac64:	f53f af74 	bmi.w	801ab50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ac68:	4540      	cmp	r0, r8
 801ac6a:	f6ff af71 	blt.w	801ab50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ac6e:	f11c 0801 	adds.w	r8, ip, #1
 801ac72:	f53f af6d 	bmi.w	801ab50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ac76:	45c6      	cmp	lr, r8
 801ac78:	f6ff af6a 	blt.w	801ab50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ac7c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801ac7e:	9302      	str	r3, [sp, #8]
 801ac80:	b200      	sxth	r0, r0
 801ac82:	fa0f f38e 	sxth.w	r3, lr
 801ac86:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ac8a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801ac8e:	9301      	str	r3, [sp, #4]
 801ac90:	9000      	str	r0, [sp, #0]
 801ac92:	4633      	mov	r3, r6
 801ac94:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ac96:	981d      	ldr	r0, [sp, #116]	; 0x74
 801ac98:	4639      	mov	r1, r7
 801ac9a:	f7ff fc62 	bl	801a562 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801ac9e:	e757      	b.n	801ab50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aca0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801aca2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aca4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801aca8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801acae:	1427      	asrs	r7, r4, #16
 801acb0:	142b      	asrs	r3, r5, #16
 801acb2:	fb01 7303 	mla	r3, r1, r3, r7
 801acb6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801acb8:	18e7      	adds	r7, r4, r3
 801acba:	5ce3      	ldrb	r3, [r4, r3]
 801acbc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801acc0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801acc4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801acc8:	2a00      	cmp	r2, #0
 801acca:	f000 8137 	beq.w	801af3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801acce:	f897 e001 	ldrb.w	lr, [r7, #1]
 801acd2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801acd6:	9410      	str	r4, [sp, #64]	; 0x40
 801acd8:	0e24      	lsrs	r4, r4, #24
 801acda:	9417      	str	r4, [sp, #92]	; 0x5c
 801acdc:	b170      	cbz	r0, 801acfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801acde:	eb07 0e01 	add.w	lr, r7, r1
 801ace2:	5c79      	ldrb	r1, [r7, r1]
 801ace4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ace8:	910b      	str	r1, [sp, #44]	; 0x2c
 801acea:	0e09      	lsrs	r1, r1, #24
 801acec:	9114      	str	r1, [sp, #80]	; 0x50
 801acee:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801acf2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801acf6:	9111      	str	r1, [sp, #68]	; 0x44
 801acf8:	0e09      	lsrs	r1, r1, #24
 801acfa:	9118      	str	r1, [sp, #96]	; 0x60
 801acfc:	b292      	uxth	r2, r2
 801acfe:	b280      	uxth	r0, r0
 801ad00:	fb02 f800 	mul.w	r8, r2, r0
 801ad04:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ad08:	0112      	lsls	r2, r2, #4
 801ad0a:	eba2 0e08 	sub.w	lr, r2, r8
 801ad0e:	b280      	uxth	r0, r0
 801ad10:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ad14:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801ad16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ad18:	fa1f fe8e 	uxth.w	lr, lr
 801ad1c:	1a12      	subs	r2, r2, r0
 801ad1e:	b292      	uxth	r2, r2
 801ad20:	fb0e f101 	mul.w	r1, lr, r1
 801ad24:	fb02 110c 	mla	r1, r2, ip, r1
 801ad28:	fb00 1104 	mla	r1, r0, r4, r1
 801ad2c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801ad2e:	fb08 1104 	mla	r1, r8, r4, r1
 801ad32:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ad36:	2900      	cmp	r1, #0
 801ad38:	f000 80f5 	beq.w	801af26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ad3c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ad40:	d019      	beq.n	801ad76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801ad42:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ad46:	fb0c fa0a 	mul.w	sl, ip, sl
 801ad4a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ad4e:	fb0c fc03 	mul.w	ip, ip, r3
 801ad52:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ad56:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad5a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ad5e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ad62:	4453      	add	r3, sl
 801ad64:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ad68:	0a1b      	lsrs	r3, r3, #8
 801ad6a:	0a3f      	lsrs	r7, r7, #8
 801ad6c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ad70:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ad74:	433b      	orrs	r3, r7
 801ad76:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ad78:	2cff      	cmp	r4, #255	; 0xff
 801ad7a:	d020      	beq.n	801adbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801ad7c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ad7e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ad82:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ad84:	4367      	muls	r7, r4
 801ad86:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ad88:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ad8c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ad8e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ad92:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad96:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ad9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ad9e:	44bc      	add	ip, r7
 801ada0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ada4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ada8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801adac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adb0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801adb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801adb8:	ea4c 040a 	orr.w	r4, ip, sl
 801adbc:	9410      	str	r4, [sp, #64]	; 0x40
 801adbe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801adc0:	2cff      	cmp	r4, #255	; 0xff
 801adc2:	d020      	beq.n	801ae06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801adc4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801adc6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801adca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801adcc:	4367      	muls	r7, r4
 801adce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801add0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801add4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801add6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801adda:	fb04 fa0a 	mul.w	sl, r4, sl
 801adde:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ade2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ade6:	44bc      	add	ip, r7
 801ade8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801adec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801adf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801adf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adf8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801adfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae00:	ea4c 040a 	orr.w	r4, ip, sl
 801ae04:	940b      	str	r4, [sp, #44]	; 0x2c
 801ae06:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801ae08:	2cff      	cmp	r4, #255	; 0xff
 801ae0a:	d020      	beq.n	801ae4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801ae0c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ae0e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ae12:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801ae14:	4367      	muls	r7, r4
 801ae16:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ae18:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae1c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801ae1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ae22:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ae2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae2e:	44bc      	add	ip, r7
 801ae30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ae34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ae38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ae44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae48:	ea4c 040a 	orr.w	r4, ip, sl
 801ae4c:	9411      	str	r4, [sp, #68]	; 0x44
 801ae4e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ae50:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ae54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ae56:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ae5a:	fb0e f707 	mul.w	r7, lr, r7
 801ae5e:	fb02 770c 	mla	r7, r2, ip, r7
 801ae62:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ae66:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ae68:	fb00 770c 	mla	r7, r0, ip, r7
 801ae6c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ae70:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ae72:	fb08 770c 	mla	r7, r8, ip, r7
 801ae76:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801ae7a:	fb0e fe0c 	mul.w	lr, lr, ip
 801ae7e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ae82:	fb02 e303 	mla	r3, r2, r3, lr
 801ae86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ae88:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ae8a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ae8e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ae90:	fb00 330a 	mla	r3, r0, sl, r3
 801ae94:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801ae98:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ae9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ae9e:	f8b9 0000 	ldrh.w	r0, [r9]
 801aea2:	434b      	muls	r3, r1
 801aea4:	0a3f      	lsrs	r7, r7, #8
 801aea6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aeaa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801aeae:	1c59      	adds	r1, r3, #1
 801aeb0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801aeb4:	ea47 070c 	orr.w	r7, r7, ip
 801aeb8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801aebc:	1202      	asrs	r2, r0, #8
 801aebe:	0c3b      	lsrs	r3, r7, #16
 801aec0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801aec4:	b2c9      	uxtb	r1, r1
 801aec6:	fb13 f304 	smulbb	r3, r3, r4
 801aeca:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801aece:	fb02 3201 	mla	r2, r2, r1, r3
 801aed2:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801aed6:	10c3      	asrs	r3, r0, #3
 801aed8:	b2ff      	uxtb	r7, r7
 801aeda:	00c0      	lsls	r0, r0, #3
 801aedc:	b292      	uxth	r2, r2
 801aede:	fb1c fc04 	smulbb	ip, ip, r4
 801aee2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801aee6:	b2c0      	uxtb	r0, r0
 801aee8:	fb17 f704 	smulbb	r7, r7, r4
 801aeec:	fb03 c301 	mla	r3, r3, r1, ip
 801aef0:	fb00 7001 	mla	r0, r0, r1, r7
 801aef4:	f102 0c01 	add.w	ip, r2, #1
 801aef8:	b280      	uxth	r0, r0
 801aefa:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801aefe:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801af02:	1c42      	adds	r2, r0, #1
 801af04:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801af08:	b29b      	uxth	r3, r3
 801af0a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801af0e:	ea42 020c 	orr.w	r2, r2, ip
 801af12:	f103 0c01 	add.w	ip, r3, #1
 801af16:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801af1a:	095b      	lsrs	r3, r3, #5
 801af1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801af20:	431a      	orrs	r2, r3
 801af22:	f8a9 2000 	strh.w	r2, [r9]
 801af26:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801af28:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801af2a:	441a      	add	r2, r3
 801af2c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801af2e:	9229      	str	r2, [sp, #164]	; 0xa4
 801af30:	f109 0902 	add.w	r9, r9, #2
 801af34:	441d      	add	r5, r3
 801af36:	f10b 3bff 	add.w	fp, fp, #4294967295
 801af3a:	e63d      	b.n	801abb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801af3c:	2800      	cmp	r0, #0
 801af3e:	f43f aedd 	beq.w	801acfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801af42:	5c79      	ldrb	r1, [r7, r1]
 801af44:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801af48:	910b      	str	r1, [sp, #44]	; 0x2c
 801af4a:	0e09      	lsrs	r1, r1, #24
 801af4c:	9114      	str	r1, [sp, #80]	; 0x50
 801af4e:	e6d5      	b.n	801acfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801af50:	b01f      	add	sp, #124	; 0x7c
 801af52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801af56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af5a:	b089      	sub	sp, #36	; 0x24
 801af5c:	9101      	str	r1, [sp, #4]
 801af5e:	9801      	ldr	r0, [sp, #4]
 801af60:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801af64:	8800      	ldrh	r0, [r0, #0]
 801af66:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801af6a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801af6e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801af72:	1206      	asrs	r6, r0, #8
 801af74:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801af78:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801af7c:	9602      	str	r6, [sp, #8]
 801af7e:	10c6      	asrs	r6, r0, #3
 801af80:	00c0      	lsls	r0, r0, #3
 801af82:	b2c0      	uxtb	r0, r0
 801af84:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af88:	9004      	str	r0, [sp, #16]
 801af8a:	2f00      	cmp	r7, #0
 801af8c:	fb07 100c 	mla	r0, r7, ip, r1
 801af90:	9603      	str	r6, [sp, #12]
 801af92:	eb02 0e00 	add.w	lr, r2, r0
 801af96:	f2c0 810a 	blt.w	801b1ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801af9a:	45b8      	cmp	r8, r7
 801af9c:	f340 8107 	ble.w	801b1ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801afa0:	2900      	cmp	r1, #0
 801afa2:	f2c0 8102 	blt.w	801b1aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801afa6:	458c      	cmp	ip, r1
 801afa8:	f340 80ff 	ble.w	801b1aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801afac:	5c12      	ldrb	r2, [r2, r0]
 801afae:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801afb2:	1c4a      	adds	r2, r1, #1
 801afb4:	f100 80fe 	bmi.w	801b1b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801afb8:	4594      	cmp	ip, r2
 801afba:	f340 80fb 	ble.w	801b1b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801afbe:	2d00      	cmp	r5, #0
 801afc0:	f000 80fa 	beq.w	801b1b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801afc4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801afc8:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801afcc:	3701      	adds	r7, #1
 801afce:	f100 80f7 	bmi.w	801b1c0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801afd2:	45b8      	cmp	r8, r7
 801afd4:	f340 80f4 	ble.w	801b1c0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801afd8:	2c00      	cmp	r4, #0
 801afda:	f000 80f4 	beq.w	801b1c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801afde:	2900      	cmp	r1, #0
 801afe0:	eb0e 020c 	add.w	r2, lr, ip
 801afe4:	f2c0 80ea 	blt.w	801b1bc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801afe8:	458c      	cmp	ip, r1
 801afea:	f340 80e7 	ble.w	801b1bc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801afee:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801aff2:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801aff6:	3101      	adds	r1, #1
 801aff8:	f100 80e8 	bmi.w	801b1cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801affc:	458c      	cmp	ip, r1
 801affe:	f340 80e5 	ble.w	801b1cc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b002:	2d00      	cmp	r5, #0
 801b004:	f000 80e4 	beq.w	801b1d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b008:	7852      	ldrb	r2, [r2, #1]
 801b00a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b00e:	0e0b      	lsrs	r3, r1, #24
 801b010:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b014:	9300      	str	r3, [sp, #0]
 801b016:	b2a4      	uxth	r4, r4
 801b018:	b2ab      	uxth	r3, r5
 801b01a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b01e:	fb03 f904 	mul.w	r9, r3, r4
 801b022:	fb0a f505 	mul.w	r5, sl, r5
 801b026:	011b      	lsls	r3, r3, #4
 801b028:	eba3 0e09 	sub.w	lr, r3, r9
 801b02c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b030:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b034:	0a28      	lsrs	r0, r5, #8
 801b036:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b03a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b03e:	4405      	add	r5, r0
 801b040:	0a2d      	lsrs	r5, r5, #8
 801b042:	fb0a f303 	mul.w	r3, sl, r3
 801b046:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b04a:	9005      	str	r0, [sp, #20]
 801b04c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b050:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b054:	0a1b      	lsrs	r3, r3, #8
 801b056:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b05a:	9306      	str	r3, [sp, #24]
 801b05c:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b060:	fb0b f303 	mul.w	r3, fp, r3
 801b064:	0a1d      	lsrs	r5, r3, #8
 801b066:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b06a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b06e:	fb0b f606 	mul.w	r6, fp, r6
 801b072:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b076:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b07a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b07e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b082:	fb08 f707 	mul.w	r7, r8, r7
 801b086:	441d      	add	r5, r3
 801b088:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b08c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b090:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b094:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b098:	fb08 fc0c 	mul.w	ip, r8, ip
 801b09c:	0a1b      	lsrs	r3, r3, #8
 801b09e:	9307      	str	r3, [sp, #28]
 801b0a0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b0a4:	0e0b      	lsrs	r3, r1, #24
 801b0a6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b0aa:	435f      	muls	r7, r3
 801b0ac:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b0b0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b0b4:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b0b8:	4460      	add	r0, ip
 801b0ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b0be:	b2a4      	uxth	r4, r4
 801b0c0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b0c4:	0a2d      	lsrs	r5, r5, #8
 801b0c6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b0ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b0ce:	fa1f fe8e 	uxth.w	lr, lr
 801b0d2:	4359      	muls	r1, r3
 801b0d4:	1b12      	subs	r2, r2, r4
 801b0d6:	9b05      	ldr	r3, [sp, #20]
 801b0d8:	44bc      	add	ip, r7
 801b0da:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b0de:	b292      	uxth	r2, r2
 801b0e0:	fb05 f50e 	mul.w	r5, r5, lr
 801b0e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0e8:	fb03 5502 	mla	r5, r3, r2, r5
 801b0ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b0f0:	9b06      	ldr	r3, [sp, #24]
 801b0f2:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b0f6:	0a36      	lsrs	r6, r6, #8
 801b0f8:	0a00      	lsrs	r0, r0, #8
 801b0fa:	fb0c 5509 	mla	r5, ip, r9, r5
 801b0fe:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b102:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b106:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b10a:	fb00 5504 	mla	r5, r0, r4, r5
 801b10e:	fb0e f606 	mul.w	r6, lr, r6
 801b112:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b116:	0a09      	lsrs	r1, r1, #8
 801b118:	9b07      	ldr	r3, [sp, #28]
 801b11a:	fb02 6000 	mla	r0, r2, r0, r6
 801b11e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b122:	fb09 0001 	mla	r0, r9, r1, r0
 801b126:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b12a:	fb0e fe0b 	mul.w	lr, lr, fp
 801b12e:	fb04 0003 	mla	r0, r4, r3, r0
 801b132:	fb02 e20a 	mla	r2, r2, sl, lr
 801b136:	9b00      	ldr	r3, [sp, #0]
 801b138:	fb04 2408 	mla	r4, r4, r8, r2
 801b13c:	fb09 4903 	mla	r9, r9, r3, r4
 801b140:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b144:	9b02      	ldr	r3, [sp, #8]
 801b146:	9a04      	ldr	r2, [sp, #16]
 801b148:	fa5f f989 	uxtb.w	r9, r9
 801b14c:	fb03 f109 	mul.w	r1, r3, r9
 801b150:	9b03      	ldr	r3, [sp, #12]
 801b152:	0a2d      	lsrs	r5, r5, #8
 801b154:	0a00      	lsrs	r0, r0, #8
 801b156:	fb03 f309 	mul.w	r3, r3, r9
 801b15a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b15e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b162:	4305      	orrs	r5, r0
 801b164:	fb02 f909 	mul.w	r9, r2, r9
 801b168:	1c58      	adds	r0, r3, #1
 801b16a:	1c4a      	adds	r2, r1, #1
 801b16c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b170:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b174:	0a2b      	lsrs	r3, r5, #8
 801b176:	0c2a      	lsrs	r2, r5, #16
 801b178:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b17c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b180:	00db      	lsls	r3, r3, #3
 801b182:	0212      	lsls	r2, r2, #8
 801b184:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b188:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b18c:	4313      	orrs	r3, r2
 801b18e:	f109 0201 	add.w	r2, r9, #1
 801b192:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b196:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b19a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b19e:	431d      	orrs	r5, r3
 801b1a0:	9b01      	ldr	r3, [sp, #4]
 801b1a2:	801d      	strh	r5, [r3, #0]
 801b1a4:	b009      	add	sp, #36	; 0x24
 801b1a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b1aa:	2000      	movs	r0, #0
 801b1ac:	e701      	b.n	801afb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b1ae:	2600      	movs	r6, #0
 801b1b0:	4630      	mov	r0, r6
 801b1b2:	e70b      	b.n	801afcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b1b4:	2600      	movs	r6, #0
 801b1b6:	e709      	b.n	801afcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b1b8:	462e      	mov	r6, r5
 801b1ba:	e707      	b.n	801afcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b1bc:	2700      	movs	r7, #0
 801b1be:	e71a      	b.n	801aff6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b1c0:	2100      	movs	r1, #0
 801b1c2:	460f      	mov	r7, r1
 801b1c4:	e723      	b.n	801b00e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b1c6:	4621      	mov	r1, r4
 801b1c8:	4627      	mov	r7, r4
 801b1ca:	e720      	b.n	801b00e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b1cc:	2100      	movs	r1, #0
 801b1ce:	e71e      	b.n	801b00e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b1d0:	4629      	mov	r1, r5
 801b1d2:	e71c      	b.n	801b00e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b1d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1d8:	b09b      	sub	sp, #108	; 0x6c
 801b1da:	9218      	str	r2, [sp, #96]	; 0x60
 801b1dc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b1de:	9116      	str	r1, [sp, #88]	; 0x58
 801b1e0:	9307      	str	r3, [sp, #28]
 801b1e2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b1e6:	9019      	str	r0, [sp, #100]	; 0x64
 801b1e8:	6850      	ldr	r0, [r2, #4]
 801b1ea:	6812      	ldr	r2, [r2, #0]
 801b1ec:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b1ee:	fb00 1303 	mla	r3, r0, r3, r1
 801b1f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b1f6:	930a      	str	r3, [sp, #40]	; 0x28
 801b1f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b1fa:	681b      	ldr	r3, [r3, #0]
 801b1fc:	930f      	str	r3, [sp, #60]	; 0x3c
 801b1fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b200:	685e      	ldr	r6, [r3, #4]
 801b202:	3604      	adds	r6, #4
 801b204:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b206:	2b00      	cmp	r3, #0
 801b208:	dc03      	bgt.n	801b212 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b20a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b20c:	2b00      	cmp	r3, #0
 801b20e:	f340 8373 	ble.w	801b8f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b212:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b214:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b218:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b21c:	1e48      	subs	r0, r1, #1
 801b21e:	1e57      	subs	r7, r2, #1
 801b220:	9b07      	ldr	r3, [sp, #28]
 801b222:	2b00      	cmp	r3, #0
 801b224:	f340 8190 	ble.w	801b548 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b228:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b22a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b22e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b232:	d406      	bmi.n	801b242 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b234:	4584      	cmp	ip, r0
 801b236:	da04      	bge.n	801b242 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b238:	2b00      	cmp	r3, #0
 801b23a:	db02      	blt.n	801b242 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b23c:	42bb      	cmp	r3, r7
 801b23e:	f2c0 8184 	blt.w	801b54a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b242:	f11c 0c01 	adds.w	ip, ip, #1
 801b246:	f100 8172 	bmi.w	801b52e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b24a:	4561      	cmp	r1, ip
 801b24c:	f2c0 816f 	blt.w	801b52e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b250:	3301      	adds	r3, #1
 801b252:	f100 816c 	bmi.w	801b52e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b256:	429a      	cmp	r2, r3
 801b258:	f2c0 8169 	blt.w	801b52e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b25c:	9b07      	ldr	r3, [sp, #28]
 801b25e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b260:	9317      	str	r3, [sp, #92]	; 0x5c
 801b262:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b264:	2b00      	cmp	r3, #0
 801b266:	f340 818e 	ble.w	801b586 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b26a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b26c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b270:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b272:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b276:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b278:	141b      	asrs	r3, r3, #16
 801b27a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b27e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b282:	f100 81d1 	bmi.w	801b628 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b286:	f101 38ff 	add.w	r8, r1, #4294967295
 801b28a:	4543      	cmp	r3, r8
 801b28c:	f280 81cc 	bge.w	801b628 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b290:	f1bc 0f00 	cmp.w	ip, #0
 801b294:	f2c0 81c8 	blt.w	801b628 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b298:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b29c:	45c4      	cmp	ip, r8
 801b29e:	f280 81c3 	bge.w	801b628 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b2a2:	b209      	sxth	r1, r1
 801b2a4:	fb0c 3301 	mla	r3, ip, r1, r3
 801b2a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b2aa:	eb04 0803 	add.w	r8, r4, r3
 801b2ae:	5ce3      	ldrb	r3, [r4, r3]
 801b2b0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b2b4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b2b8:	2a00      	cmp	r2, #0
 801b2ba:	f000 81aa 	beq.w	801b612 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b2be:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b2c2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b2c6:	940b      	str	r4, [sp, #44]	; 0x2c
 801b2c8:	0e24      	lsrs	r4, r4, #24
 801b2ca:	9412      	str	r4, [sp, #72]	; 0x48
 801b2cc:	b178      	cbz	r0, 801b2ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b2ce:	eb08 0c01 	add.w	ip, r8, r1
 801b2d2:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b2d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b2da:	9108      	str	r1, [sp, #32]
 801b2dc:	0e09      	lsrs	r1, r1, #24
 801b2de:	9110      	str	r1, [sp, #64]	; 0x40
 801b2e0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b2e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b2e8:	910c      	str	r1, [sp, #48]	; 0x30
 801b2ea:	0e09      	lsrs	r1, r1, #24
 801b2ec:	9113      	str	r1, [sp, #76]	; 0x4c
 801b2ee:	b292      	uxth	r2, r2
 801b2f0:	b280      	uxth	r0, r0
 801b2f2:	fb02 f900 	mul.w	r9, r2, r0
 801b2f6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b2fa:	0112      	lsls	r2, r2, #4
 801b2fc:	eba2 0809 	sub.w	r8, r2, r9
 801b300:	b280      	uxth	r0, r0
 801b302:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b306:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b308:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b30a:	fa1f f888 	uxth.w	r8, r8
 801b30e:	1a12      	subs	r2, r2, r0
 801b310:	b292      	uxth	r2, r2
 801b312:	fb08 f101 	mul.w	r1, r8, r1
 801b316:	fb02 110e 	mla	r1, r2, lr, r1
 801b31a:	fb00 1104 	mla	r1, r0, r4, r1
 801b31e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b320:	fb09 1104 	mla	r1, r9, r4, r1
 801b324:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b328:	2900      	cmp	r1, #0
 801b32a:	f000 80f5 	beq.w	801b518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b32e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b332:	d01b      	beq.n	801b36c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b334:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b338:	fb0e fa0a 	mul.w	sl, lr, sl
 801b33c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b340:	fb0e fe03 	mul.w	lr, lr, r3
 801b344:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b348:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b34c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b350:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b354:	4453      	add	r3, sl
 801b356:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b35a:	0a1b      	lsrs	r3, r3, #8
 801b35c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b360:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b364:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b368:	ea43 030c 	orr.w	r3, r3, ip
 801b36c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b36e:	2cff      	cmp	r4, #255	; 0xff
 801b370:	d021      	beq.n	801b3b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b372:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b374:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b378:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b37a:	fb04 fb0b 	mul.w	fp, r4, fp
 801b37e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b380:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b384:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b386:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b38a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b38e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b392:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b396:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b39a:	44de      	add	lr, fp
 801b39c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b3a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b3a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b3a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b3b0:	ea4e 040a 	orr.w	r4, lr, sl
 801b3b4:	940b      	str	r4, [sp, #44]	; 0x2c
 801b3b6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b3b8:	2cff      	cmp	r4, #255	; 0xff
 801b3ba:	d021      	beq.n	801b400 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b3bc:	9c08      	ldr	r4, [sp, #32]
 801b3be:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b3c2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b3c4:	fb04 fb0b 	mul.w	fp, r4, fp
 801b3c8:	9c08      	ldr	r4, [sp, #32]
 801b3ca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b3ce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b3d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b3d4:	fb04 fa0a 	mul.w	sl, r4, sl
 801b3d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b3e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b3e4:	44de      	add	lr, fp
 801b3e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b3ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b3ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b3f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b3f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b3fa:	ea4e 040a 	orr.w	r4, lr, sl
 801b3fe:	9408      	str	r4, [sp, #32]
 801b400:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b402:	2cff      	cmp	r4, #255	; 0xff
 801b404:	d021      	beq.n	801b44a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b406:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b408:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b40c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b40e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b412:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b414:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b418:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b41a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b41e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b422:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b426:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b42a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b42e:	44de      	add	lr, fp
 801b430:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b434:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b438:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b43c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b440:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b444:	ea4e 040a 	orr.w	r4, lr, sl
 801b448:	940c      	str	r4, [sp, #48]	; 0x30
 801b44a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b44c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b450:	9c08      	ldr	r4, [sp, #32]
 801b452:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b456:	fb08 fc0c 	mul.w	ip, r8, ip
 801b45a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b45e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b462:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b464:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b468:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b46c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b46e:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b472:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b476:	fb08 f80e 	mul.w	r8, r8, lr
 801b47a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b47e:	fb02 8303 	mla	r3, r2, r3, r8
 801b482:	9a08      	ldr	r2, [sp, #32]
 801b484:	f8b7 8000 	ldrh.w	r8, [r7]
 801b488:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b48c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b48e:	fb00 330a 	mla	r3, r0, sl, r3
 801b492:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b496:	fb09 3900 	mla	r9, r9, r0, r3
 801b49a:	43c9      	mvns	r1, r1
 801b49c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b4a0:	fa5f fe81 	uxtb.w	lr, r1
 801b4a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b4a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b4ac:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b4b0:	fb02 f20e 	mul.w	r2, r2, lr
 801b4b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b4b8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b4bc:	ea4c 0c09 	orr.w	ip, ip, r9
 801b4c0:	1c53      	adds	r3, r2, #1
 801b4c2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b4c6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b4ca:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b4ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b4d2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b4d6:	4a63      	ldr	r2, [pc, #396]	; (801b664 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b4d8:	fb00 f00e 	mul.w	r0, r0, lr
 801b4dc:	b2db      	uxtb	r3, r3
 801b4de:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b4e2:	1c43      	adds	r3, r0, #1
 801b4e4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b4e8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b4ec:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b4f0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b4f4:	b2c9      	uxtb	r1, r1
 801b4f6:	00db      	lsls	r3, r3, #3
 801b4f8:	fb01 f10e 	mul.w	r1, r1, lr
 801b4fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b500:	4313      	orrs	r3, r2
 801b502:	1c4a      	adds	r2, r1, #1
 801b504:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b508:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b50c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b510:	ea4c 0c03 	orr.w	ip, ip, r3
 801b514:	f8a7 c000 	strh.w	ip, [r7]
 801b518:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b51a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b51c:	441a      	add	r2, r3
 801b51e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b520:	9225      	str	r2, [sp, #148]	; 0x94
 801b522:	441d      	add	r5, r3
 801b524:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b526:	3b01      	subs	r3, #1
 801b528:	3702      	adds	r7, #2
 801b52a:	9317      	str	r3, [sp, #92]	; 0x5c
 801b52c:	e699      	b.n	801b262 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b52e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b530:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b532:	441c      	add	r4, r3
 801b534:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b536:	9425      	str	r4, [sp, #148]	; 0x94
 801b538:	441d      	add	r5, r3
 801b53a:	9b07      	ldr	r3, [sp, #28]
 801b53c:	3b01      	subs	r3, #1
 801b53e:	9307      	str	r3, [sp, #28]
 801b540:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b542:	3302      	adds	r3, #2
 801b544:	930a      	str	r3, [sp, #40]	; 0x28
 801b546:	e66b      	b.n	801b220 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b548:	d024      	beq.n	801b594 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b54a:	9b07      	ldr	r3, [sp, #28]
 801b54c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b54e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b550:	3b01      	subs	r3, #1
 801b552:	fb00 4003 	mla	r0, r0, r3, r4
 801b556:	1400      	asrs	r0, r0, #16
 801b558:	f53f ae80 	bmi.w	801b25c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b55c:	3901      	subs	r1, #1
 801b55e:	4288      	cmp	r0, r1
 801b560:	f6bf ae7c 	bge.w	801b25c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b564:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b566:	fb01 5303 	mla	r3, r1, r3, r5
 801b56a:	141b      	asrs	r3, r3, #16
 801b56c:	f53f ae76 	bmi.w	801b25c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b570:	3a01      	subs	r2, #1
 801b572:	4293      	cmp	r3, r2
 801b574:	f6bf ae72 	bge.w	801b25c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b578:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b57c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b580:	f1bb 0f00 	cmp.w	fp, #0
 801b584:	dc70      	bgt.n	801b668 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b586:	9b07      	ldr	r3, [sp, #28]
 801b588:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b58c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b58e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b592:	930a      	str	r3, [sp, #40]	; 0x28
 801b594:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b596:	2b00      	cmp	r3, #0
 801b598:	f340 81ae 	ble.w	801b8f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b59c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b5a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b5a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b5a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b5aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b5ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b5b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b5b6:	eef0 6a62 	vmov.f32	s13, s5
 801b5ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b5be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b5c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b5c6:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801b5ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b5ce:	eef0 6a43 	vmov.f32	s13, s6
 801b5d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b5d6:	ee12 2a90 	vmov	r2, s5
 801b5da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b5de:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5e2:	ee13 2a10 	vmov	r2, s6
 801b5e6:	9327      	str	r3, [sp, #156]	; 0x9c
 801b5e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b5ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5ee:	9328      	str	r3, [sp, #160]	; 0xa0
 801b5f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b5f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b5f4:	3b01      	subs	r3, #1
 801b5f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b5fa:	9316      	str	r3, [sp, #88]	; 0x58
 801b5fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b5fe:	bf08      	it	eq
 801b600:	4613      	moveq	r3, r2
 801b602:	ee16 5a90 	vmov	r5, s13
 801b606:	9307      	str	r3, [sp, #28]
 801b608:	eeb0 3a67 	vmov.f32	s6, s15
 801b60c:	eef0 2a47 	vmov.f32	s5, s14
 801b610:	e5f8      	b.n	801b204 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b612:	2800      	cmp	r0, #0
 801b614:	f43f ae6b 	beq.w	801b2ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b618:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b61c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b620:	9108      	str	r1, [sp, #32]
 801b622:	0e09      	lsrs	r1, r1, #24
 801b624:	9110      	str	r1, [sp, #64]	; 0x40
 801b626:	e662      	b.n	801b2ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b628:	f113 0801 	adds.w	r8, r3, #1
 801b62c:	f53f af74 	bmi.w	801b518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b630:	4541      	cmp	r1, r8
 801b632:	f6ff af71 	blt.w	801b518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b636:	f11c 0801 	adds.w	r8, ip, #1
 801b63a:	f53f af6d 	bmi.w	801b518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b63e:	45c6      	cmp	lr, r8
 801b640:	f6ff af6a 	blt.w	801b518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b644:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801b648:	b209      	sxth	r1, r1
 801b64a:	fa0f f38e 	sxth.w	r3, lr
 801b64e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801b652:	9301      	str	r3, [sp, #4]
 801b654:	9100      	str	r1, [sp, #0]
 801b656:	4633      	mov	r3, r6
 801b658:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b65a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b65c:	4639      	mov	r1, r7
 801b65e:	f7ff fc7a 	bl	801af56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801b662:	e759      	b.n	801b518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b664:	fffff800 	.word	0xfffff800
 801b668:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b66a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b66c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b670:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b672:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b676:	1427      	asrs	r7, r4, #16
 801b678:	142b      	asrs	r3, r5, #16
 801b67a:	fb01 7303 	mla	r3, r1, r3, r7
 801b67e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b680:	18e7      	adds	r7, r4, r3
 801b682:	5ce3      	ldrb	r3, [r4, r3]
 801b684:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b688:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b68c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b690:	2a00      	cmp	r2, #0
 801b692:	f000 8127 	beq.w	801b8e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b696:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b69a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b69e:	940d      	str	r4, [sp, #52]	; 0x34
 801b6a0:	0e24      	lsrs	r4, r4, #24
 801b6a2:	9414      	str	r4, [sp, #80]	; 0x50
 801b6a4:	b170      	cbz	r0, 801b6c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b6a6:	eb07 0e01 	add.w	lr, r7, r1
 801b6aa:	5c79      	ldrb	r1, [r7, r1]
 801b6ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b6b0:	9109      	str	r1, [sp, #36]	; 0x24
 801b6b2:	0e09      	lsrs	r1, r1, #24
 801b6b4:	9111      	str	r1, [sp, #68]	; 0x44
 801b6b6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b6ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b6be:	910e      	str	r1, [sp, #56]	; 0x38
 801b6c0:	0e09      	lsrs	r1, r1, #24
 801b6c2:	9115      	str	r1, [sp, #84]	; 0x54
 801b6c4:	b292      	uxth	r2, r2
 801b6c6:	b280      	uxth	r0, r0
 801b6c8:	fb02 f800 	mul.w	r8, r2, r0
 801b6cc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b6d0:	0112      	lsls	r2, r2, #4
 801b6d2:	eba2 0e08 	sub.w	lr, r2, r8
 801b6d6:	b280      	uxth	r0, r0
 801b6d8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b6dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b6de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b6e0:	fa1f fe8e 	uxth.w	lr, lr
 801b6e4:	1a09      	subs	r1, r1, r0
 801b6e6:	b289      	uxth	r1, r1
 801b6e8:	fb0e f202 	mul.w	r2, lr, r2
 801b6ec:	fb01 220c 	mla	r2, r1, ip, r2
 801b6f0:	fb00 2204 	mla	r2, r0, r4, r2
 801b6f4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b6f6:	fb08 2204 	mla	r2, r8, r4, r2
 801b6fa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b6fe:	2a00      	cmp	r2, #0
 801b700:	f000 80e5 	beq.w	801b8ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801b704:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b708:	d019      	beq.n	801b73e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801b70a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b70e:	fb0c fa0a 	mul.w	sl, ip, sl
 801b712:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b716:	fb0c fc03 	mul.w	ip, ip, r3
 801b71a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b71e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b722:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b726:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b72a:	4453      	add	r3, sl
 801b72c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b730:	0a1b      	lsrs	r3, r3, #8
 801b732:	0a3f      	lsrs	r7, r7, #8
 801b734:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b738:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b73c:	433b      	orrs	r3, r7
 801b73e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b740:	2cff      	cmp	r4, #255	; 0xff
 801b742:	d020      	beq.n	801b786 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801b744:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b746:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b74a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b74c:	4367      	muls	r7, r4
 801b74e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b750:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b754:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b756:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b75a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b75e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b762:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b766:	44bc      	add	ip, r7
 801b768:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b76c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b770:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b774:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b778:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b77c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b780:	ea4c 040a 	orr.w	r4, ip, sl
 801b784:	940d      	str	r4, [sp, #52]	; 0x34
 801b786:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b788:	2cff      	cmp	r4, #255	; 0xff
 801b78a:	d020      	beq.n	801b7ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801b78c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b78e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b792:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b794:	4367      	muls	r7, r4
 801b796:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b798:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b79c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b79e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b7a2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b7aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7ae:	44bc      	add	ip, r7
 801b7b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b7b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b7b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b7c8:	ea4c 040a 	orr.w	r4, ip, sl
 801b7cc:	9409      	str	r4, [sp, #36]	; 0x24
 801b7ce:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b7d0:	2cff      	cmp	r4, #255	; 0xff
 801b7d2:	d020      	beq.n	801b816 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801b7d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b7d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b7da:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b7dc:	4367      	muls	r7, r4
 801b7de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b7e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b7e4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b7e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b7ea:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b7f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7f6:	44bc      	add	ip, r7
 801b7f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b7fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b800:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b804:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b80c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b810:	ea4c 040a 	orr.w	r4, ip, sl
 801b814:	940e      	str	r4, [sp, #56]	; 0x38
 801b816:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b818:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b81c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801b81e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b822:	fb0e f707 	mul.w	r7, lr, r7
 801b826:	fb01 770c 	mla	r7, r1, ip, r7
 801b82a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b82e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b830:	fb00 770c 	mla	r7, r0, ip, r7
 801b834:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b838:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b83a:	fb08 770c 	mla	r7, r8, ip, r7
 801b83e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b842:	fb0e fe0c 	mul.w	lr, lr, ip
 801b846:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b84a:	fb01 e303 	mla	r3, r1, r3, lr
 801b84e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b850:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b854:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b856:	fb00 330a 	mla	r3, r0, sl, r3
 801b85a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801b85e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b862:	f8b9 3000 	ldrh.w	r3, [r9]
 801b866:	43d2      	mvns	r2, r2
 801b868:	1218      	asrs	r0, r3, #8
 801b86a:	b2d2      	uxtb	r2, r2
 801b86c:	10d9      	asrs	r1, r3, #3
 801b86e:	0a3f      	lsrs	r7, r7, #8
 801b870:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b874:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b878:	00db      	lsls	r3, r3, #3
 801b87a:	4350      	muls	r0, r2
 801b87c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b880:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b884:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b888:	b2db      	uxtb	r3, r3
 801b88a:	ea47 070c 	orr.w	r7, r7, ip
 801b88e:	4351      	muls	r1, r2
 801b890:	4353      	muls	r3, r2
 801b892:	1c42      	adds	r2, r0, #1
 801b894:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b898:	0c3a      	lsrs	r2, r7, #16
 801b89a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b89e:	4a18      	ldr	r2, [pc, #96]	; (801b900 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801b8a0:	b2c0      	uxtb	r0, r0
 801b8a2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801b8a6:	1c4a      	adds	r2, r1, #1
 801b8a8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b8ac:	0a3a      	lsrs	r2, r7, #8
 801b8ae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b8b2:	00c9      	lsls	r1, r1, #3
 801b8b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b8b8:	4301      	orrs	r1, r0
 801b8ba:	1c58      	adds	r0, r3, #1
 801b8bc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b8c0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b8c4:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801b8c8:	4308      	orrs	r0, r1
 801b8ca:	f8a9 0000 	strh.w	r0, [r9]
 801b8ce:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b8d0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b8d2:	441a      	add	r2, r3
 801b8d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b8d6:	9225      	str	r2, [sp, #148]	; 0x94
 801b8d8:	f109 0902 	add.w	r9, r9, #2
 801b8dc:	441d      	add	r5, r3
 801b8de:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b8e2:	e64d      	b.n	801b580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801b8e4:	2800      	cmp	r0, #0
 801b8e6:	f43f aeed 	beq.w	801b6c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b8ea:	5c79      	ldrb	r1, [r7, r1]
 801b8ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b8f0:	9109      	str	r1, [sp, #36]	; 0x24
 801b8f2:	0e09      	lsrs	r1, r1, #24
 801b8f4:	9111      	str	r1, [sp, #68]	; 0x44
 801b8f6:	e6e5      	b.n	801b6c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b8f8:	b01b      	add	sp, #108	; 0x6c
 801b8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8fe:	bf00      	nop
 801b900:	fffff800 	.word	0xfffff800

0801b904 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801b904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b908:	b085      	sub	sp, #20
 801b90a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801b90e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801b912:	9103      	str	r1, [sp, #12]
 801b914:	fb00 7406 	mla	r4, r0, r6, r7
 801b918:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801b91c:	2800      	cmp	r0, #0
 801b91e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801b922:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801b926:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801b92a:	9501      	str	r5, [sp, #4]
 801b92c:	eb03 0904 	add.w	r9, r3, r4
 801b930:	f2c0 8150 	blt.w	801bbd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801b934:	4583      	cmp	fp, r0
 801b936:	f340 814d 	ble.w	801bbd4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801b93a:	2f00      	cmp	r7, #0
 801b93c:	f2c0 8146 	blt.w	801bbcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801b940:	42be      	cmp	r6, r7
 801b942:	f340 8143 	ble.w	801bbcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801b946:	f813 c004 	ldrb.w	ip, [r3, r4]
 801b94a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801b94e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b952:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801b956:	4355      	muls	r5, r2
 801b958:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b95c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801b960:	fb0c f203 	mul.w	r2, ip, r3
 801b964:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801b968:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801b96c:	441d      	add	r5, r3
 801b96e:	f102 0320 	add.w	r3, r2, #32
 801b972:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b976:	0a1b      	lsrs	r3, r3, #8
 801b978:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801b97c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b980:	431c      	orrs	r4, r3
 801b982:	1c7b      	adds	r3, r7, #1
 801b984:	f100 812b 	bmi.w	801bbde <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801b988:	429e      	cmp	r6, r3
 801b98a:	f340 8128 	ble.w	801bbde <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801b98e:	2900      	cmp	r1, #0
 801b990:	f000 8128 	beq.w	801bbe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801b994:	9a01      	ldr	r2, [sp, #4]
 801b996:	f899 3001 	ldrb.w	r3, [r9, #1]
 801b99a:	8855      	ldrh	r5, [r2, #2]
 801b99c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801b9a0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801b9a4:	fb08 f802 	mul.w	r8, r8, r2
 801b9a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b9ac:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801b9b0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801b9b4:	435d      	muls	r5, r3
 801b9b6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801b9ba:	44d0      	add	r8, sl
 801b9bc:	f105 0a20 	add.w	sl, r5, #32
 801b9c0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801b9c4:	0a2d      	lsrs	r5, r5, #8
 801b9c6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b9ca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b9ce:	432a      	orrs	r2, r5
 801b9d0:	3001      	adds	r0, #1
 801b9d2:	f100 810d 	bmi.w	801bbf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801b9d6:	4583      	cmp	fp, r0
 801b9d8:	f340 810a 	ble.w	801bbf0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801b9dc:	f1be 0f00 	cmp.w	lr, #0
 801b9e0:	f000 810b 	beq.w	801bbfa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801b9e4:	2f00      	cmp	r7, #0
 801b9e6:	f2c0 8100 	blt.w	801bbea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801b9ea:	42be      	cmp	r6, r7
 801b9ec:	f340 80fd 	ble.w	801bbea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801b9f0:	9801      	ldr	r0, [sp, #4]
 801b9f2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801b9f6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801b9fa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b9fe:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801ba02:	fb0a fa00 	mul.w	sl, sl, r0
 801ba06:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801ba0a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ba0e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ba12:	fb05 f808 	mul.w	r8, r5, r8
 801ba16:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801ba1a:	4482      	add	sl, r0
 801ba1c:	f108 0020 	add.w	r0, r8, #32
 801ba20:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ba24:	0a00      	lsrs	r0, r0, #8
 801ba26:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ba2a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ba2e:	ea4b 0b00 	orr.w	fp, fp, r0
 801ba32:	3701      	adds	r7, #1
 801ba34:	f100 80e6 	bmi.w	801bc04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ba38:	42be      	cmp	r6, r7
 801ba3a:	f340 80e3 	ble.w	801bc04 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ba3e:	2900      	cmp	r1, #0
 801ba40:	f000 80e3 	beq.w	801bc0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801ba44:	3601      	adds	r6, #1
 801ba46:	9801      	ldr	r0, [sp, #4]
 801ba48:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ba4c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ba50:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ba54:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801ba58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ba5c:	fb09 f906 	mul.w	r9, r9, r6
 801ba60:	fb07 f800 	mul.w	r8, r7, r0
 801ba64:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801ba68:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ba6c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801ba70:	44d1      	add	r9, sl
 801ba72:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ba76:	f108 0020 	add.w	r0, r8, #32
 801ba7a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ba7e:	0a00      	lsrs	r0, r0, #8
 801ba80:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ba84:	4330      	orrs	r0, r6
 801ba86:	b28e      	uxth	r6, r1
 801ba88:	fa1f f98e 	uxth.w	r9, lr
 801ba8c:	fb06 f809 	mul.w	r8, r6, r9
 801ba90:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801ba94:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801ba98:	0136      	lsls	r6, r6, #4
 801ba9a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ba9e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801baa2:	9601      	str	r6, [sp, #4]
 801baa4:	ea4a 0404 	orr.w	r4, sl, r4
 801baa8:	fa1f f689 	uxth.w	r6, r9
 801baac:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bab0:	fb11 f90e 	smulbb	r9, r1, lr
 801bab4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bab8:	9602      	str	r6, [sp, #8]
 801baba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801babe:	4626      	mov	r6, r4
 801bac0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bac4:	f1ce 0410 	rsb	r4, lr, #16
 801bac8:	1a64      	subs	r4, r4, r1
 801baca:	ea4a 0202 	orr.w	r2, sl, r2
 801bace:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bad2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bad6:	434a      	muls	r2, r1
 801bad8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801badc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bae0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bae4:	fb04 2406 	mla	r4, r4, r6, r2
 801bae8:	ea4a 0000 	orr.w	r0, sl, r0
 801baec:	fb09 4200 	mla	r2, r9, r0, r4
 801baf0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801baf4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801baf8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bafc:	ea44 0b0b 	orr.w	fp, r4, fp
 801bb00:	9c01      	ldr	r4, [sp, #4]
 801bb02:	9e02      	ldr	r6, [sp, #8]
 801bb04:	9903      	ldr	r1, [sp, #12]
 801bb06:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bb0a:	1ba4      	subs	r4, r4, r6
 801bb0c:	9e01      	ldr	r6, [sp, #4]
 801bb0e:	8808      	ldrh	r0, [r1, #0]
 801bb10:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bb14:	eba6 0608 	sub.w	r6, r6, r8
 801bb18:	b2b6      	uxth	r6, r6
 801bb1a:	b2a4      	uxth	r4, r4
 801bb1c:	4373      	muls	r3, r6
 801bb1e:	fb0c 3304 	mla	r3, ip, r4, r3
 801bb22:	9c02      	ldr	r4, [sp, #8]
 801bb24:	fb04 3505 	mla	r5, r4, r5, r3
 801bb28:	fb08 5707 	mla	r7, r8, r7, r5
 801bb2c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bb30:	b289      	uxth	r1, r1
 801bb32:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bb36:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bb3a:	434f      	muls	r7, r1
 801bb3c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bb40:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bb44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb48:	1c7b      	adds	r3, r7, #1
 801bb4a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bb4e:	ea42 0e0e 	orr.w	lr, r2, lr
 801bb52:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bb56:	fa1f f28e 	uxth.w	r2, lr
 801bb5a:	1203      	asrs	r3, r0, #8
 801bb5c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bb60:	b2ff      	uxtb	r7, r7
 801bb62:	1215      	asrs	r5, r2, #8
 801bb64:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bb68:	fb13 f307 	smulbb	r3, r3, r7
 801bb6c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bb70:	fb05 3501 	mla	r5, r5, r1, r3
 801bb74:	10c3      	asrs	r3, r0, #3
 801bb76:	10d4      	asrs	r4, r2, #3
 801bb78:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bb7c:	fb13 f307 	smulbb	r3, r3, r7
 801bb80:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bb84:	fb04 3401 	mla	r4, r4, r1, r3
 801bb88:	00c3      	lsls	r3, r0, #3
 801bb8a:	00d2      	lsls	r2, r2, #3
 801bb8c:	b2db      	uxtb	r3, r3
 801bb8e:	fb13 f307 	smulbb	r3, r3, r7
 801bb92:	b2d2      	uxtb	r2, r2
 801bb94:	fb02 3101 	mla	r1, r2, r1, r3
 801bb98:	b2ad      	uxth	r5, r5
 801bb9a:	b289      	uxth	r1, r1
 801bb9c:	b2a4      	uxth	r4, r4
 801bb9e:	1c6b      	adds	r3, r5, #1
 801bba0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bba4:	1c62      	adds	r2, r4, #1
 801bba6:	1c4b      	adds	r3, r1, #1
 801bba8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bbac:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bbb0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bbb4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bbb8:	0964      	lsrs	r4, r4, #5
 801bbba:	432b      	orrs	r3, r5
 801bbbc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801bbc0:	9a03      	ldr	r2, [sp, #12]
 801bbc2:	4323      	orrs	r3, r4
 801bbc4:	8013      	strh	r3, [r2, #0]
 801bbc6:	b005      	add	sp, #20
 801bbc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbcc:	f04f 0c00 	mov.w	ip, #0
 801bbd0:	4664      	mov	r4, ip
 801bbd2:	e6d6      	b.n	801b982 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801bbd4:	2300      	movs	r3, #0
 801bbd6:	469c      	mov	ip, r3
 801bbd8:	461a      	mov	r2, r3
 801bbda:	461c      	mov	r4, r3
 801bbdc:	e6f8      	b.n	801b9d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bbde:	2300      	movs	r3, #0
 801bbe0:	461a      	mov	r2, r3
 801bbe2:	e6f5      	b.n	801b9d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bbe4:	460b      	mov	r3, r1
 801bbe6:	460a      	mov	r2, r1
 801bbe8:	e6f2      	b.n	801b9d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801bbea:	2500      	movs	r5, #0
 801bbec:	46ab      	mov	fp, r5
 801bbee:	e720      	b.n	801ba32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801bbf0:	2700      	movs	r7, #0
 801bbf2:	463d      	mov	r5, r7
 801bbf4:	4638      	mov	r0, r7
 801bbf6:	46bb      	mov	fp, r7
 801bbf8:	e745      	b.n	801ba86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bbfa:	4677      	mov	r7, lr
 801bbfc:	4675      	mov	r5, lr
 801bbfe:	4670      	mov	r0, lr
 801bc00:	46f3      	mov	fp, lr
 801bc02:	e740      	b.n	801ba86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bc04:	2700      	movs	r7, #0
 801bc06:	4638      	mov	r0, r7
 801bc08:	e73d      	b.n	801ba86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801bc0a:	460f      	mov	r7, r1
 801bc0c:	4608      	mov	r0, r1
 801bc0e:	e73a      	b.n	801ba86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801bc10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc14:	b097      	sub	sp, #92	; 0x5c
 801bc16:	9214      	str	r2, [sp, #80]	; 0x50
 801bc18:	9308      	str	r3, [sp, #32]
 801bc1a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bc1c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801bc20:	9312      	str	r3, [sp, #72]	; 0x48
 801bc22:	9111      	str	r1, [sp, #68]	; 0x44
 801bc24:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801bc28:	9015      	str	r0, [sp, #84]	; 0x54
 801bc2a:	6850      	ldr	r0, [r2, #4]
 801bc2c:	6812      	ldr	r2, [r2, #0]
 801bc2e:	fb00 1303 	mla	r3, r0, r3, r1
 801bc32:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bc36:	9309      	str	r3, [sp, #36]	; 0x24
 801bc38:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc3a:	681b      	ldr	r3, [r3, #0]
 801bc3c:	930b      	str	r3, [sp, #44]	; 0x2c
 801bc3e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc40:	685b      	ldr	r3, [r3, #4]
 801bc42:	930c      	str	r3, [sp, #48]	; 0x30
 801bc44:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801bc48:	930a      	str	r3, [sp, #40]	; 0x28
 801bc4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801bc4c:	2b00      	cmp	r3, #0
 801bc4e:	dc03      	bgt.n	801bc58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bc50:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801bc52:	2b00      	cmp	r3, #0
 801bc54:	f340 83cb 	ble.w	801c3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801bc58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bc5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bc5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bc62:	1e48      	subs	r0, r1, #1
 801bc64:	1e55      	subs	r5, r2, #1
 801bc66:	9b08      	ldr	r3, [sp, #32]
 801bc68:	2b00      	cmp	r3, #0
 801bc6a:	f340 81a3 	ble.w	801bfb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801bc6e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801bc70:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bc72:	1436      	asrs	r6, r6, #16
 801bc74:	ea4f 4323 	mov.w	r3, r3, asr #16
 801bc78:	d406      	bmi.n	801bc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bc7a:	4286      	cmp	r6, r0
 801bc7c:	da04      	bge.n	801bc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bc7e:	2b00      	cmp	r3, #0
 801bc80:	db02      	blt.n	801bc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bc82:	42ab      	cmp	r3, r5
 801bc84:	f2c0 8197 	blt.w	801bfb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801bc88:	3601      	adds	r6, #1
 801bc8a:	f100 8184 	bmi.w	801bf96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bc8e:	42b1      	cmp	r1, r6
 801bc90:	f2c0 8181 	blt.w	801bf96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bc94:	3301      	adds	r3, #1
 801bc96:	f100 817e 	bmi.w	801bf96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bc9a:	429a      	cmp	r2, r3
 801bc9c:	f2c0 817b 	blt.w	801bf96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801bca0:	9b08      	ldr	r3, [sp, #32]
 801bca2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801bca4:	9313      	str	r3, [sp, #76]	; 0x4c
 801bca6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bcaa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801bcac:	2b00      	cmp	r3, #0
 801bcae:	f340 81a4 	ble.w	801bffa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801bcb2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bcb4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801bcb6:	1418      	asrs	r0, r3, #16
 801bcb8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801bcba:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801bcbe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801bcc0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801bcc4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bcc6:	142d      	asrs	r5, r5, #16
 801bcc8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801bccc:	f100 81f8 	bmi.w	801c0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bcd0:	f102 3eff 	add.w	lr, r2, #4294967295
 801bcd4:	4575      	cmp	r5, lr
 801bcd6:	f280 81f3 	bge.w	801c0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bcda:	2800      	cmp	r0, #0
 801bcdc:	f2c0 81f0 	blt.w	801c0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bce0:	f103 3eff 	add.w	lr, r3, #4294967295
 801bce4:	4570      	cmp	r0, lr
 801bce6:	f280 81eb 	bge.w	801c0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801bcea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bcec:	b212      	sxth	r2, r2
 801bcee:	fb00 5002 	mla	r0, r0, r2, r5
 801bcf2:	fa1f fe81 	uxth.w	lr, r1
 801bcf6:	eb03 0a00 	add.w	sl, r3, r0
 801bcfa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801bcfe:	f813 9000 	ldrb.w	r9, [r3, r0]
 801bd02:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bd06:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801bd0a:	b29b      	uxth	r3, r3
 801bd0c:	f1bc 0f00 	cmp.w	ip, #0
 801bd10:	f000 81b9 	beq.w	801c086 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801bd14:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801bd18:	940d      	str	r4, [sp, #52]	; 0x34
 801bd1a:	eb0a 0b02 	add.w	fp, sl, r2
 801bd1e:	fa1f fa8c 	uxth.w	sl, ip
 801bd22:	fb0a fe0e 	mul.w	lr, sl, lr
 801bd26:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801bd2a:	fa1f fa8a 	uxth.w	sl, sl
 801bd2e:	eba5 050e 	sub.w	r5, r5, lr
 801bd32:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bd36:	940e      	str	r4, [sp, #56]	; 0x38
 801bd38:	eba3 030a 	sub.w	r3, r3, sl
 801bd3c:	b2ad      	uxth	r5, r5
 801bd3e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bd40:	b29b      	uxth	r3, r3
 801bd42:	fb08 f505 	mul.w	r5, r8, r5
 801bd46:	fb09 5303 	mla	r3, r9, r3, r5
 801bd4a:	fb0a 3304 	mla	r3, sl, r4, r3
 801bd4e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bd50:	fb0e 3304 	mla	r3, lr, r4, r3
 801bd54:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bd58:	2b00      	cmp	r3, #0
 801bd5a:	f000 810f 	beq.w	801bf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bd5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bd60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801bd64:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801bd68:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801bd6c:	f000 8190 	beq.w	801c090 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801bd70:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bd74:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bd78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bd7c:	fb09 f000 	mul.w	r0, r9, r0
 801bd80:	fb0a fe0e 	mul.w	lr, sl, lr
 801bd84:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801bd88:	f100 0b20 	add.w	fp, r0, #32
 801bd8c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bd90:	44ce      	add	lr, r9
 801bd92:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801bd96:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bd9a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bd9e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bda2:	ea4e 0909 	orr.w	r9, lr, r9
 801bda6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801bdaa:	8868      	ldrh	r0, [r5, #2]
 801bdac:	d019      	beq.n	801bde2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801bdae:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801bdb2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bdb6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bdba:	fb08 f800 	mul.w	r8, r8, r0
 801bdbe:	fb0a fe0e 	mul.w	lr, sl, lr
 801bdc2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801bdc6:	f108 0b20 	add.w	fp, r8, #32
 801bdca:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801bdce:	4486      	add	lr, r0
 801bdd0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801bdd4:	0a00      	lsrs	r0, r0, #8
 801bdd6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801bdda:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bdde:	ea4e 0000 	orr.w	r0, lr, r0
 801bde2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801bde6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bdea:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801bdee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801bdf2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bdf6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bdfa:	ea4e 0909 	orr.w	r9, lr, r9
 801bdfe:	ea4a 0000 	orr.w	r0, sl, r0
 801be02:	f1bc 0f00 	cmp.w	ip, #0
 801be06:	f000 8145 	beq.w	801c094 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801be0a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801be0e:	3a01      	subs	r2, #1
 801be10:	0052      	lsls	r2, r2, #1
 801be12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801be14:	3202      	adds	r2, #2
 801be16:	2cff      	cmp	r4, #255	; 0xff
 801be18:	eb05 0e02 	add.w	lr, r5, r2
 801be1c:	5aaa      	ldrh	r2, [r5, r2]
 801be1e:	d018      	beq.n	801be52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801be20:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801be24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801be28:	fb04 fa02 	mul.w	sl, r4, r2
 801be2c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801be30:	fb08 f805 	mul.w	r8, r8, r5
 801be34:	f10a 0520 	add.w	r5, sl, #32
 801be38:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801be3c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801be40:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801be44:	4442      	add	r2, r8
 801be46:	0a2d      	lsrs	r5, r5, #8
 801be48:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801be4c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801be50:	432a      	orrs	r2, r5
 801be52:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801be54:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801be58:	2cff      	cmp	r4, #255	; 0xff
 801be5a:	d01a      	beq.n	801be92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801be5c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801be60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801be64:	fb04 fa05 	mul.w	sl, r4, r5
 801be68:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801be6c:	fb08 f80e 	mul.w	r8, r8, lr
 801be70:	f10a 0e20 	add.w	lr, sl, #32
 801be74:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801be78:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801be7c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801be80:	4445      	add	r5, r8
 801be82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801be86:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801be8a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801be8e:	ea45 050e 	orr.w	r5, r5, lr
 801be92:	fb1c fe01 	smulbb	lr, ip, r1
 801be96:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801be9a:	f1cc 0810 	rsb	r8, ip, #16
 801be9e:	eba8 0801 	sub.w	r8, r8, r1
 801bea2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bea6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801beaa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801beae:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801beb2:	4341      	muls	r1, r0
 801beb4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801beb8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bebc:	ea4a 0202 	orr.w	r2, sl, r2
 801bec0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801bec4:	fb09 1108 	mla	r1, r9, r8, r1
 801bec8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801becc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801bed0:	fb0c 1102 	mla	r1, ip, r2, r1
 801bed4:	ea4b 0505 	orr.w	r5, fp, r5
 801bed8:	fb0e 1e05 	mla	lr, lr, r5, r1
 801bedc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bee0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bee4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bee8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801beec:	ea42 0e0e 	orr.w	lr, r2, lr
 801bef0:	fa1f f28e 	uxth.w	r2, lr
 801bef4:	2bff      	cmp	r3, #255	; 0xff
 801bef6:	d103      	bne.n	801bf00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801bef8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801befa:	29ff      	cmp	r1, #255	; 0xff
 801befc:	f000 80de 	beq.w	801c0bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801bf00:	990a      	ldr	r1, [sp, #40]	; 0x28
 801bf02:	8838      	ldrh	r0, [r7, #0]
 801bf04:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bf06:	434b      	muls	r3, r1
 801bf08:	f103 0c01 	add.w	ip, r3, #1
 801bf0c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801bf10:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801bf14:	fa5f fc83 	uxtb.w	ip, r3
 801bf18:	1203      	asrs	r3, r0, #8
 801bf1a:	1215      	asrs	r5, r2, #8
 801bf1c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bf20:	fb13 f30c 	smulbb	r3, r3, ip
 801bf24:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bf28:	fb05 3501 	mla	r5, r5, r1, r3
 801bf2c:	10c3      	asrs	r3, r0, #3
 801bf2e:	10d1      	asrs	r1, r2, #3
 801bf30:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bf34:	fb13 f30c 	smulbb	r3, r3, ip
 801bf38:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bf3c:	fb01 3104 	mla	r1, r1, r4, r3
 801bf40:	00c3      	lsls	r3, r0, #3
 801bf42:	00d2      	lsls	r2, r2, #3
 801bf44:	b2db      	uxtb	r3, r3
 801bf46:	b2d2      	uxtb	r2, r2
 801bf48:	fb13 f30c 	smulbb	r3, r3, ip
 801bf4c:	b2ad      	uxth	r5, r5
 801bf4e:	fb02 3304 	mla	r3, r2, r4, r3
 801bf52:	b29a      	uxth	r2, r3
 801bf54:	1c6b      	adds	r3, r5, #1
 801bf56:	b289      	uxth	r1, r1
 801bf58:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bf5c:	1c53      	adds	r3, r2, #1
 801bf5e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bf62:	1c4a      	adds	r2, r1, #1
 801bf64:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bf68:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bf6c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bf70:	0949      	lsrs	r1, r1, #5
 801bf72:	432b      	orrs	r3, r5
 801bf74:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bf78:	430b      	orrs	r3, r1
 801bf7a:	803b      	strh	r3, [r7, #0]
 801bf7c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801bf7e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801bf80:	4413      	add	r3, r2
 801bf82:	9321      	str	r3, [sp, #132]	; 0x84
 801bf84:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801bf86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bf88:	441a      	add	r2, r3
 801bf8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801bf8c:	9222      	str	r2, [sp, #136]	; 0x88
 801bf8e:	3b01      	subs	r3, #1
 801bf90:	3702      	adds	r7, #2
 801bf92:	9313      	str	r3, [sp, #76]	; 0x4c
 801bf94:	e689      	b.n	801bcaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801bf96:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801bf98:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801bf9a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801bf9c:	4433      	add	r3, r6
 801bf9e:	9321      	str	r3, [sp, #132]	; 0x84
 801bfa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bfa2:	441c      	add	r4, r3
 801bfa4:	9b08      	ldr	r3, [sp, #32]
 801bfa6:	9422      	str	r4, [sp, #136]	; 0x88
 801bfa8:	3b01      	subs	r3, #1
 801bfaa:	9308      	str	r3, [sp, #32]
 801bfac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bfae:	3302      	adds	r3, #2
 801bfb0:	9309      	str	r3, [sp, #36]	; 0x24
 801bfb2:	e658      	b.n	801bc66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801bfb4:	d028      	beq.n	801c008 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801bfb6:	9b08      	ldr	r3, [sp, #32]
 801bfb8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801bfba:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801bfbc:	3b01      	subs	r3, #1
 801bfbe:	fb00 5003 	mla	r0, r0, r3, r5
 801bfc2:	1400      	asrs	r0, r0, #16
 801bfc4:	f53f ae6c 	bmi.w	801bca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bfc8:	3901      	subs	r1, #1
 801bfca:	4288      	cmp	r0, r1
 801bfcc:	f6bf ae68 	bge.w	801bca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bfd0:	9924      	ldr	r1, [sp, #144]	; 0x90
 801bfd2:	9822      	ldr	r0, [sp, #136]	; 0x88
 801bfd4:	fb01 0303 	mla	r3, r1, r3, r0
 801bfd8:	141b      	asrs	r3, r3, #16
 801bfda:	f53f ae61 	bmi.w	801bca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bfde:	3a01      	subs	r2, #1
 801bfe0:	4293      	cmp	r3, r2
 801bfe2:	f6bf ae5d 	bge.w	801bca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801bfe6:	9b08      	ldr	r3, [sp, #32]
 801bfe8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801bfec:	9313      	str	r3, [sp, #76]	; 0x4c
 801bfee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801bff2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801bff4:	2b00      	cmp	r3, #0
 801bff6:	f300 8082 	bgt.w	801c0fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801bffa:	9b08      	ldr	r3, [sp, #32]
 801bffc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c000:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c002:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c006:	9309      	str	r3, [sp, #36]	; 0x24
 801c008:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c00a:	2b00      	cmp	r3, #0
 801c00c:	f340 81ef 	ble.w	801c3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c010:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c014:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c018:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c01c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c01e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c022:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c026:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c02a:	eef0 6a62 	vmov.f32	s13, s5
 801c02e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c032:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c036:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c03a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c03e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c042:	eef0 6a43 	vmov.f32	s13, s6
 801c046:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c04a:	ee12 2a90 	vmov	r2, s5
 801c04e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c052:	fb92 f3f3 	sdiv	r3, r2, r3
 801c056:	ee13 2a10 	vmov	r2, s6
 801c05a:	9323      	str	r3, [sp, #140]	; 0x8c
 801c05c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c05e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c062:	9324      	str	r3, [sp, #144]	; 0x90
 801c064:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c066:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c068:	3b01      	subs	r3, #1
 801c06a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c06e:	9311      	str	r3, [sp, #68]	; 0x44
 801c070:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c072:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c076:	bf08      	it	eq
 801c078:	4613      	moveq	r3, r2
 801c07a:	9308      	str	r3, [sp, #32]
 801c07c:	eeb0 3a67 	vmov.f32	s6, s15
 801c080:	eef0 2a47 	vmov.f32	s5, s14
 801c084:	e5e1      	b.n	801bc4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c086:	fb08 f505 	mul.w	r5, r8, r5
 801c08a:	fb09 5303 	mla	r3, r9, r3, r5
 801c08e:	e661      	b.n	801bd54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c090:	4681      	mov	r9, r0
 801c092:	e688      	b.n	801bda6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c094:	f1c1 0210 	rsb	r2, r1, #16
 801c098:	4341      	muls	r1, r0
 801c09a:	fb09 1902 	mla	r9, r9, r2, r1
 801c09e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c0a2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c0a6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c0aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c0ae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c0b2:	ea42 0909 	orr.w	r9, r2, r9
 801c0b6:	fa1f f289 	uxth.w	r2, r9
 801c0ba:	e71b      	b.n	801bef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c0bc:	803a      	strh	r2, [r7, #0]
 801c0be:	e75d      	b.n	801bf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c0c0:	f115 0e01 	adds.w	lr, r5, #1
 801c0c4:	f53f af5a 	bmi.w	801bf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c0c8:	4572      	cmp	r2, lr
 801c0ca:	f6ff af57 	blt.w	801bf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c0ce:	f110 0e01 	adds.w	lr, r0, #1
 801c0d2:	f53f af53 	bmi.w	801bf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c0d6:	4573      	cmp	r3, lr
 801c0d8:	f6ff af50 	blt.w	801bf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c0dc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c0de:	9502      	str	r5, [sp, #8]
 801c0e0:	b21b      	sxth	r3, r3
 801c0e2:	b212      	sxth	r2, r2
 801c0e4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c0e8:	9301      	str	r3, [sp, #4]
 801c0ea:	9200      	str	r2, [sp, #0]
 801c0ec:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c0f0:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c0f4:	4639      	mov	r1, r7
 801c0f6:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c0f8:	f7ff fc04 	bl	801b904 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c0fc:	e73e      	b.n	801bf7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c0fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c100:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c104:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c106:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c10a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c10c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c110:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c112:	141f      	asrs	r7, r3, #16
 801c114:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c116:	141b      	asrs	r3, r3, #16
 801c118:	fb01 3707 	mla	r7, r1, r7, r3
 801c11c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c11e:	fa1f fc82 	uxth.w	ip, r2
 801c122:	eb03 0a07 	add.w	sl, r3, r7
 801c126:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c12a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c12e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c132:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c136:	b29b      	uxth	r3, r3
 801c138:	2d00      	cmp	r5, #0
 801c13a:	f000 813d 	beq.w	801c3b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c13e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c142:	940f      	str	r4, [sp, #60]	; 0x3c
 801c144:	eb0a 0b01 	add.w	fp, sl, r1
 801c148:	fa1f fa85 	uxth.w	sl, r5
 801c14c:	fb0a fc0c 	mul.w	ip, sl, ip
 801c150:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c154:	fa1f fa8a 	uxth.w	sl, sl
 801c158:	eba0 000c 	sub.w	r0, r0, ip
 801c15c:	eba3 030a 	sub.w	r3, r3, sl
 801c160:	b280      	uxth	r0, r0
 801c162:	fb08 f000 	mul.w	r0, r8, r0
 801c166:	b29b      	uxth	r3, r3
 801c168:	fb09 0303 	mla	r3, r9, r3, r0
 801c16c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c16e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c172:	9410      	str	r4, [sp, #64]	; 0x40
 801c174:	fb0a 3300 	mla	r3, sl, r0, r3
 801c178:	fb0c 3304 	mla	r3, ip, r4, r3
 801c17c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c180:	2b00      	cmp	r3, #0
 801c182:	f000 810b 	beq.w	801c39c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c186:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c188:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c18a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c18e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c192:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c196:	f000 8114 	beq.w	801c3c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c19a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c19e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c1a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c1a6:	fb09 f707 	mul.w	r7, r9, r7
 801c1aa:	fb0a fc0c 	mul.w	ip, sl, ip
 801c1ae:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c1b2:	f107 0b20 	add.w	fp, r7, #32
 801c1b6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c1ba:	44cc      	add	ip, r9
 801c1bc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c1c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c1c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c1c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c1cc:	ea4c 0909 	orr.w	r9, ip, r9
 801c1d0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c1d4:	8847      	ldrh	r7, [r0, #2]
 801c1d6:	d019      	beq.n	801c20c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c1d8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c1dc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c1e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c1e4:	fb08 f807 	mul.w	r8, r8, r7
 801c1e8:	fb0a fc0c 	mul.w	ip, sl, ip
 801c1ec:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c1f0:	f108 0b20 	add.w	fp, r8, #32
 801c1f4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c1f8:	44bc      	add	ip, r7
 801c1fa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c1fe:	0a3f      	lsrs	r7, r7, #8
 801c200:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c204:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c208:	ea4c 0707 	orr.w	r7, ip, r7
 801c20c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c210:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c214:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c218:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c21c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c220:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c224:	ea4c 0909 	orr.w	r9, ip, r9
 801c228:	ea4a 0707 	orr.w	r7, sl, r7
 801c22c:	2d00      	cmp	r5, #0
 801c22e:	f000 80ca 	beq.w	801c3c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c232:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c236:	3901      	subs	r1, #1
 801c238:	0049      	lsls	r1, r1, #1
 801c23a:	3102      	adds	r1, #2
 801c23c:	eb00 0c01 	add.w	ip, r0, r1
 801c240:	5a41      	ldrh	r1, [r0, r1]
 801c242:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c244:	28ff      	cmp	r0, #255	; 0xff
 801c246:	d019      	beq.n	801c27c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c248:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c24a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c24e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c252:	fb04 fa01 	mul.w	sl, r4, r1
 801c256:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c25a:	fb08 f800 	mul.w	r8, r8, r0
 801c25e:	f10a 0020 	add.w	r0, sl, #32
 801c262:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c266:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c26a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c26e:	4441      	add	r1, r8
 801c270:	0a00      	lsrs	r0, r0, #8
 801c272:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c276:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c27a:	4301      	orrs	r1, r0
 801c27c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c27e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c282:	2cff      	cmp	r4, #255	; 0xff
 801c284:	d01a      	beq.n	801c2bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c286:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c28a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c28e:	fb04 fa00 	mul.w	sl, r4, r0
 801c292:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c296:	fb08 f80c 	mul.w	r8, r8, ip
 801c29a:	f10a 0c20 	add.w	ip, sl, #32
 801c29e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c2a2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c2a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c2aa:	4440      	add	r0, r8
 801c2ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c2b0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c2b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c2b8:	ea40 000c 	orr.w	r0, r0, ip
 801c2bc:	fb15 fc02 	smulbb	ip, r5, r2
 801c2c0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c2c4:	f1c5 0810 	rsb	r8, r5, #16
 801c2c8:	eba8 0802 	sub.w	r8, r8, r2
 801c2cc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c2d0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c2d4:	437a      	muls	r2, r7
 801c2d6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c2da:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c2de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c2e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c2e6:	fb09 2208 	mla	r2, r9, r8, r2
 801c2ea:	ea4a 0101 	orr.w	r1, sl, r1
 801c2ee:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c2f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c2f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c2fa:	fb05 2201 	mla	r2, r5, r1, r2
 801c2fe:	ea4b 0000 	orr.w	r0, fp, r0
 801c302:	fb0c 2200 	mla	r2, ip, r0, r2
 801c306:	0d57      	lsrs	r7, r2, #21
 801c308:	0952      	lsrs	r2, r2, #5
 801c30a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c30e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c312:	433a      	orrs	r2, r7
 801c314:	2bff      	cmp	r3, #255	; 0xff
 801c316:	b292      	uxth	r2, r2
 801c318:	d102      	bne.n	801c320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c31a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c31c:	29ff      	cmp	r1, #255	; 0xff
 801c31e:	d063      	beq.n	801c3e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c320:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c322:	f8be 1000 	ldrh.w	r1, [lr]
 801c326:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c328:	4343      	muls	r3, r0
 801c32a:	1c58      	adds	r0, r3, #1
 801c32c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c330:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c334:	1208      	asrs	r0, r1, #8
 801c336:	b2db      	uxtb	r3, r3
 801c338:	1215      	asrs	r5, r2, #8
 801c33a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c33e:	fb10 f003 	smulbb	r0, r0, r3
 801c342:	10cf      	asrs	r7, r1, #3
 801c344:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c348:	00c9      	lsls	r1, r1, #3
 801c34a:	fb05 0504 	mla	r5, r5, r4, r0
 801c34e:	b2c9      	uxtb	r1, r1
 801c350:	10d0      	asrs	r0, r2, #3
 801c352:	00d2      	lsls	r2, r2, #3
 801c354:	fb11 f103 	smulbb	r1, r1, r3
 801c358:	b2d2      	uxtb	r2, r2
 801c35a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c35e:	fb02 1204 	mla	r2, r2, r4, r1
 801c362:	fb17 f703 	smulbb	r7, r7, r3
 801c366:	b2ad      	uxth	r5, r5
 801c368:	b292      	uxth	r2, r2
 801c36a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c36e:	fb00 7004 	mla	r0, r0, r4, r7
 801c372:	1c6b      	adds	r3, r5, #1
 801c374:	1c57      	adds	r7, r2, #1
 801c376:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c37a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c37e:	b280      	uxth	r0, r0
 801c380:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c384:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c388:	433d      	orrs	r5, r7
 801c38a:	1c47      	adds	r7, r0, #1
 801c38c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c390:	097f      	lsrs	r7, r7, #5
 801c392:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c396:	433d      	orrs	r5, r7
 801c398:	f8ae 5000 	strh.w	r5, [lr]
 801c39c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c39e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c3a0:	4413      	add	r3, r2
 801c3a2:	9321      	str	r3, [sp, #132]	; 0x84
 801c3a4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c3a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c3a8:	441a      	add	r2, r3
 801c3aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c3ac:	9222      	str	r2, [sp, #136]	; 0x88
 801c3ae:	3b01      	subs	r3, #1
 801c3b0:	f10e 0e02 	add.w	lr, lr, #2
 801c3b4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c3b6:	e61c      	b.n	801bff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c3b8:	fb08 f000 	mul.w	r0, r8, r0
 801c3bc:	fb09 0303 	mla	r3, r9, r3, r0
 801c3c0:	e6dc      	b.n	801c17c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c3c2:	46b9      	mov	r9, r7
 801c3c4:	e704      	b.n	801c1d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c3c6:	f1c2 0110 	rsb	r1, r2, #16
 801c3ca:	437a      	muls	r2, r7
 801c3cc:	fb09 2901 	mla	r9, r9, r1, r2
 801c3d0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c3d4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c3d8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c3dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c3e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c3e4:	4302      	orrs	r2, r0
 801c3e6:	e795      	b.n	801c314 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c3e8:	f8ae 2000 	strh.w	r2, [lr]
 801c3ec:	e7d6      	b.n	801c39c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c3ee:	b017      	add	sp, #92	; 0x5c
 801c3f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c3f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c3f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3f8:	b085      	sub	sp, #20
 801c3fa:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c3fe:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c402:	9103      	str	r1, [sp, #12]
 801c404:	fb00 7406 	mla	r4, r0, r6, r7
 801c408:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c40c:	2800      	cmp	r0, #0
 801c40e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c412:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c416:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c41a:	9501      	str	r5, [sp, #4]
 801c41c:	eb02 0904 	add.w	r9, r2, r4
 801c420:	f2c0 8141 	blt.w	801c6a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c424:	4583      	cmp	fp, r0
 801c426:	f340 813e 	ble.w	801c6a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c42a:	2f00      	cmp	r7, #0
 801c42c:	f2c0 8137 	blt.w	801c69e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c430:	42be      	cmp	r6, r7
 801c432:	f340 8134 	ble.w	801c69e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c436:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c43a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c43e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c442:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c446:	4355      	muls	r5, r2
 801c448:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c44c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c450:	fb0c f203 	mul.w	r2, ip, r3
 801c454:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c458:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c45c:	441d      	add	r5, r3
 801c45e:	f102 0320 	add.w	r3, r2, #32
 801c462:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c466:	0a1b      	lsrs	r3, r3, #8
 801c468:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c46c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c470:	431c      	orrs	r4, r3
 801c472:	1c7b      	adds	r3, r7, #1
 801c474:	f100 811c 	bmi.w	801c6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c478:	429e      	cmp	r6, r3
 801c47a:	f340 8119 	ble.w	801c6b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c47e:	2900      	cmp	r1, #0
 801c480:	f000 8119 	beq.w	801c6b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c484:	9a01      	ldr	r2, [sp, #4]
 801c486:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c48a:	8855      	ldrh	r5, [r2, #2]
 801c48c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c490:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c494:	fb08 f802 	mul.w	r8, r8, r2
 801c498:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c49c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c4a0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c4a4:	435d      	muls	r5, r3
 801c4a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c4aa:	44d0      	add	r8, sl
 801c4ac:	f105 0a20 	add.w	sl, r5, #32
 801c4b0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c4b4:	0a2d      	lsrs	r5, r5, #8
 801c4b6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c4ba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c4be:	432a      	orrs	r2, r5
 801c4c0:	3001      	adds	r0, #1
 801c4c2:	f100 80fe 	bmi.w	801c6c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c4c6:	4583      	cmp	fp, r0
 801c4c8:	f340 80fb 	ble.w	801c6c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c4cc:	f1be 0f00 	cmp.w	lr, #0
 801c4d0:	f000 80fc 	beq.w	801c6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c4d4:	2f00      	cmp	r7, #0
 801c4d6:	f2c0 80f1 	blt.w	801c6bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c4da:	42be      	cmp	r6, r7
 801c4dc:	f340 80ee 	ble.w	801c6bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c4e0:	9801      	ldr	r0, [sp, #4]
 801c4e2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c4e6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c4ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c4ee:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c4f2:	fb0a fa00 	mul.w	sl, sl, r0
 801c4f6:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c4fa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c4fe:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c502:	fb05 f808 	mul.w	r8, r5, r8
 801c506:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c50a:	4482      	add	sl, r0
 801c50c:	f108 0020 	add.w	r0, r8, #32
 801c510:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c514:	0a00      	lsrs	r0, r0, #8
 801c516:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c51a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c51e:	ea4b 0b00 	orr.w	fp, fp, r0
 801c522:	3701      	adds	r7, #1
 801c524:	f100 80d7 	bmi.w	801c6d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c528:	42be      	cmp	r6, r7
 801c52a:	f340 80d4 	ble.w	801c6d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c52e:	2900      	cmp	r1, #0
 801c530:	f000 80d4 	beq.w	801c6dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c534:	3601      	adds	r6, #1
 801c536:	9801      	ldr	r0, [sp, #4]
 801c538:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c53c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c540:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c544:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c548:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c54c:	fb09 f906 	mul.w	r9, r9, r6
 801c550:	fb07 f800 	mul.w	r8, r7, r0
 801c554:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c558:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c55c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c560:	44d1      	add	r9, sl
 801c562:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c566:	f108 0020 	add.w	r0, r8, #32
 801c56a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c56e:	0a00      	lsrs	r0, r0, #8
 801c570:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c574:	4330      	orrs	r0, r6
 801c576:	b28e      	uxth	r6, r1
 801c578:	fa1f f98e 	uxth.w	r9, lr
 801c57c:	fb06 f809 	mul.w	r8, r6, r9
 801c580:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c584:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c588:	0136      	lsls	r6, r6, #4
 801c58a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c58e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c592:	9601      	str	r6, [sp, #4]
 801c594:	ea4a 0404 	orr.w	r4, sl, r4
 801c598:	fa1f f689 	uxth.w	r6, r9
 801c59c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c5a0:	fb11 f90e 	smulbb	r9, r1, lr
 801c5a4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c5a8:	9602      	str	r6, [sp, #8]
 801c5aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c5ae:	4626      	mov	r6, r4
 801c5b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c5b4:	f1ce 0410 	rsb	r4, lr, #16
 801c5b8:	1a64      	subs	r4, r4, r1
 801c5ba:	ea4a 0202 	orr.w	r2, sl, r2
 801c5be:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c5c2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c5c6:	434a      	muls	r2, r1
 801c5c8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c5cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c5d0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c5d4:	fb04 2406 	mla	r4, r4, r6, r2
 801c5d8:	ea4a 0000 	orr.w	r0, sl, r0
 801c5dc:	fb09 4200 	mla	r2, r9, r0, r4
 801c5e0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c5e4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c5e8:	9801      	ldr	r0, [sp, #4]
 801c5ea:	9903      	ldr	r1, [sp, #12]
 801c5ec:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c5f0:	ea44 0b0b 	orr.w	fp, r4, fp
 801c5f4:	9c02      	ldr	r4, [sp, #8]
 801c5f6:	8809      	ldrh	r1, [r1, #0]
 801c5f8:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c5fc:	1b00      	subs	r0, r0, r4
 801c5fe:	9c01      	ldr	r4, [sp, #4]
 801c600:	eba4 0608 	sub.w	r6, r4, r8
 801c604:	b2b6      	uxth	r6, r6
 801c606:	b280      	uxth	r0, r0
 801c608:	4373      	muls	r3, r6
 801c60a:	fb0c 3300 	mla	r3, ip, r0, r3
 801c60e:	9802      	ldr	r0, [sp, #8]
 801c610:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c614:	fb00 3505 	mla	r5, r0, r5, r3
 801c618:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c61c:	fb08 5707 	mla	r7, r8, r7, r5
 801c620:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c624:	120b      	asrs	r3, r1, #8
 801c626:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c62a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801c62e:	b2ff      	uxtb	r7, r7
 801c630:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c634:	10c8      	asrs	r0, r1, #3
 801c636:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c63a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c63e:	00c9      	lsls	r1, r1, #3
 801c640:	437b      	muls	r3, r7
 801c642:	ea42 0e0e 	orr.w	lr, r2, lr
 801c646:	b2c9      	uxtb	r1, r1
 801c648:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c64c:	fa1f f28e 	uxth.w	r2, lr
 801c650:	4378      	muls	r0, r7
 801c652:	434f      	muls	r7, r1
 801c654:	1c59      	adds	r1, r3, #1
 801c656:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c65a:	1213      	asrs	r3, r2, #8
 801c65c:	f023 0307 	bic.w	r3, r3, #7
 801c660:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c664:	1c41      	adds	r1, r0, #1
 801c666:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c66a:	10d1      	asrs	r1, r2, #3
 801c66c:	f021 0103 	bic.w	r1, r1, #3
 801c670:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c674:	021b      	lsls	r3, r3, #8
 801c676:	00c9      	lsls	r1, r1, #3
 801c678:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c67c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801c680:	430b      	orrs	r3, r1
 801c682:	1c79      	adds	r1, r7, #1
 801c684:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801c688:	00d2      	lsls	r2, r2, #3
 801c68a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c68e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c692:	431a      	orrs	r2, r3
 801c694:	9b03      	ldr	r3, [sp, #12]
 801c696:	801a      	strh	r2, [r3, #0]
 801c698:	b005      	add	sp, #20
 801c69a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c69e:	f04f 0c00 	mov.w	ip, #0
 801c6a2:	4664      	mov	r4, ip
 801c6a4:	e6e5      	b.n	801c472 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801c6a6:	2300      	movs	r3, #0
 801c6a8:	469c      	mov	ip, r3
 801c6aa:	461a      	mov	r2, r3
 801c6ac:	461c      	mov	r4, r3
 801c6ae:	e707      	b.n	801c4c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c6b0:	2300      	movs	r3, #0
 801c6b2:	461a      	mov	r2, r3
 801c6b4:	e704      	b.n	801c4c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c6b6:	460b      	mov	r3, r1
 801c6b8:	460a      	mov	r2, r1
 801c6ba:	e701      	b.n	801c4c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c6bc:	2500      	movs	r5, #0
 801c6be:	46ab      	mov	fp, r5
 801c6c0:	e72f      	b.n	801c522 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801c6c2:	2700      	movs	r7, #0
 801c6c4:	463d      	mov	r5, r7
 801c6c6:	4638      	mov	r0, r7
 801c6c8:	46bb      	mov	fp, r7
 801c6ca:	e754      	b.n	801c576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c6cc:	4677      	mov	r7, lr
 801c6ce:	4675      	mov	r5, lr
 801c6d0:	4670      	mov	r0, lr
 801c6d2:	46f3      	mov	fp, lr
 801c6d4:	e74f      	b.n	801c576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c6d6:	2700      	movs	r7, #0
 801c6d8:	4638      	mov	r0, r7
 801c6da:	e74c      	b.n	801c576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c6dc:	460f      	mov	r7, r1
 801c6de:	4608      	mov	r0, r1
 801c6e0:	e749      	b.n	801c576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801c6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c6e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6e8:	b093      	sub	sp, #76	; 0x4c
 801c6ea:	9210      	str	r2, [sp, #64]	; 0x40
 801c6ec:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c6ee:	910e      	str	r1, [sp, #56]	; 0x38
 801c6f0:	9306      	str	r3, [sp, #24]
 801c6f2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801c6f6:	9011      	str	r0, [sp, #68]	; 0x44
 801c6f8:	6850      	ldr	r0, [r2, #4]
 801c6fa:	6812      	ldr	r2, [r2, #0]
 801c6fc:	fb00 1303 	mla	r3, r0, r3, r1
 801c700:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c704:	9307      	str	r3, [sp, #28]
 801c706:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c708:	681b      	ldr	r3, [r3, #0]
 801c70a:	9308      	str	r3, [sp, #32]
 801c70c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c70e:	685b      	ldr	r3, [r3, #4]
 801c710:	9309      	str	r3, [sp, #36]	; 0x24
 801c712:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c714:	2b00      	cmp	r3, #0
 801c716:	dc03      	bgt.n	801c720 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c718:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c71a:	2b00      	cmp	r3, #0
 801c71c:	f340 83b4 	ble.w	801ce88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c720:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c722:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c726:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c72a:	1e48      	subs	r0, r1, #1
 801c72c:	1e55      	subs	r5, r2, #1
 801c72e:	9b06      	ldr	r3, [sp, #24]
 801c730:	2b00      	cmp	r3, #0
 801c732:	f340 8163 	ble.w	801c9fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c736:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801c738:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c73a:	1436      	asrs	r6, r6, #16
 801c73c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c740:	d406      	bmi.n	801c750 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c742:	4286      	cmp	r6, r0
 801c744:	da04      	bge.n	801c750 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c746:	2b00      	cmp	r3, #0
 801c748:	db02      	blt.n	801c750 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c74a:	42ab      	cmp	r3, r5
 801c74c:	f2c0 8157 	blt.w	801c9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801c750:	3601      	adds	r6, #1
 801c752:	f100 8144 	bmi.w	801c9de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c756:	42b1      	cmp	r1, r6
 801c758:	f2c0 8141 	blt.w	801c9de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c75c:	3301      	adds	r3, #1
 801c75e:	f100 813e 	bmi.w	801c9de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c762:	429a      	cmp	r2, r3
 801c764:	f2c0 813b 	blt.w	801c9de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c768:	9b06      	ldr	r3, [sp, #24]
 801c76a:	9f07      	ldr	r7, [sp, #28]
 801c76c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c76e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c772:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c774:	2b00      	cmp	r3, #0
 801c776:	f340 8164 	ble.w	801ca42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c77a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c77c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801c77e:	1418      	asrs	r0, r3, #16
 801c780:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c782:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c786:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801c788:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c78c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c78e:	142d      	asrs	r5, r5, #16
 801c790:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c794:	f100 81ee 	bmi.w	801cb74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c798:	f102 3eff 	add.w	lr, r2, #4294967295
 801c79c:	4575      	cmp	r5, lr
 801c79e:	f280 81e9 	bge.w	801cb74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c7a2:	2800      	cmp	r0, #0
 801c7a4:	f2c0 81e6 	blt.w	801cb74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c7a8:	f103 3eff 	add.w	lr, r3, #4294967295
 801c7ac:	4570      	cmp	r0, lr
 801c7ae:	f280 81e1 	bge.w	801cb74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c7b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c7b4:	b212      	sxth	r2, r2
 801c7b6:	fb00 5002 	mla	r0, r0, r2, r5
 801c7ba:	fa1f fe81 	uxth.w	lr, r1
 801c7be:	eb03 0a00 	add.w	sl, r3, r0
 801c7c2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c7c6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c7ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c7ce:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c7d2:	b29b      	uxth	r3, r3
 801c7d4:	f1bc 0f00 	cmp.w	ip, #0
 801c7d8:	f000 8179 	beq.w	801cace <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c7dc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c7e0:	940a      	str	r4, [sp, #40]	; 0x28
 801c7e2:	eb0a 0b02 	add.w	fp, sl, r2
 801c7e6:	fa1f fa8c 	uxth.w	sl, ip
 801c7ea:	fb0a fe0e 	mul.w	lr, sl, lr
 801c7ee:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c7f2:	fa1f fa8a 	uxth.w	sl, sl
 801c7f6:	eba5 050e 	sub.w	r5, r5, lr
 801c7fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c7fe:	940b      	str	r4, [sp, #44]	; 0x2c
 801c800:	eba3 030a 	sub.w	r3, r3, sl
 801c804:	b2ad      	uxth	r5, r5
 801c806:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c808:	b29b      	uxth	r3, r3
 801c80a:	fb08 f505 	mul.w	r5, r8, r5
 801c80e:	fb09 5303 	mla	r3, r9, r3, r5
 801c812:	fb0a 3304 	mla	r3, sl, r4, r3
 801c816:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c818:	fb0e 3304 	mla	r3, lr, r4, r3
 801c81c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c820:	2b00      	cmp	r3, #0
 801c822:	f000 80cf 	beq.w	801c9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c826:	9c08      	ldr	r4, [sp, #32]
 801c828:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c82c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c830:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c834:	f000 8150 	beq.w	801cad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801c838:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c83c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c840:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c844:	fb09 f000 	mul.w	r0, r9, r0
 801c848:	fb0a fe0e 	mul.w	lr, sl, lr
 801c84c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c850:	f100 0b20 	add.w	fp, r0, #32
 801c854:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c858:	44ce      	add	lr, r9
 801c85a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c85e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c862:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c866:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c86a:	ea4e 0909 	orr.w	r9, lr, r9
 801c86e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c872:	8868      	ldrh	r0, [r5, #2]
 801c874:	d019      	beq.n	801c8aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801c876:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c87a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c87e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c882:	fb08 f800 	mul.w	r8, r8, r0
 801c886:	fb0a fe0e 	mul.w	lr, sl, lr
 801c88a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c88e:	f108 0b20 	add.w	fp, r8, #32
 801c892:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c896:	4486      	add	lr, r0
 801c898:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c89c:	0a00      	lsrs	r0, r0, #8
 801c89e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c8a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c8a6:	ea4e 0000 	orr.w	r0, lr, r0
 801c8aa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c8ae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c8b2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c8b6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c8ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c8be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c8c2:	ea4e 0909 	orr.w	r9, lr, r9
 801c8c6:	ea4a 0000 	orr.w	r0, sl, r0
 801c8ca:	f1bc 0f00 	cmp.w	ip, #0
 801c8ce:	f000 8105 	beq.w	801cadc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c8d2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c8d6:	3a01      	subs	r2, #1
 801c8d8:	0052      	lsls	r2, r2, #1
 801c8da:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c8dc:	3202      	adds	r2, #2
 801c8de:	2cff      	cmp	r4, #255	; 0xff
 801c8e0:	eb05 0e02 	add.w	lr, r5, r2
 801c8e4:	5aaa      	ldrh	r2, [r5, r2]
 801c8e6:	d018      	beq.n	801c91a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c8e8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c8ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c8f0:	fb04 fa02 	mul.w	sl, r4, r2
 801c8f4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c8f8:	fb08 f805 	mul.w	r8, r8, r5
 801c8fc:	f10a 0520 	add.w	r5, sl, #32
 801c900:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c904:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c908:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c90c:	4442      	add	r2, r8
 801c90e:	0a2d      	lsrs	r5, r5, #8
 801c910:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c914:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c918:	432a      	orrs	r2, r5
 801c91a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c91c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c920:	2cff      	cmp	r4, #255	; 0xff
 801c922:	d01a      	beq.n	801c95a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c924:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c928:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c92c:	fb04 fa05 	mul.w	sl, r4, r5
 801c930:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c934:	fb08 f80e 	mul.w	r8, r8, lr
 801c938:	f10a 0e20 	add.w	lr, sl, #32
 801c93c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c940:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c944:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c948:	4445      	add	r5, r8
 801c94a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c94e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c952:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c956:	ea45 050e 	orr.w	r5, r5, lr
 801c95a:	fb1c fe01 	smulbb	lr, ip, r1
 801c95e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c962:	f1cc 0810 	rsb	r8, ip, #16
 801c966:	eba8 0801 	sub.w	r8, r8, r1
 801c96a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c96e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c972:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c976:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c97a:	4341      	muls	r1, r0
 801c97c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c980:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c984:	ea4a 0202 	orr.w	r2, sl, r2
 801c988:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c98c:	fb09 1108 	mla	r1, r9, r8, r1
 801c990:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c994:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c998:	fb0c 1102 	mla	r1, ip, r2, r1
 801c99c:	ea4b 0505 	orr.w	r5, fp, r5
 801c9a0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c9a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c9a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c9ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c9b0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c9b4:	ea42 0e0e 	orr.w	lr, r2, lr
 801c9b8:	fa1f f28e 	uxth.w	r2, lr
 801c9bc:	2bff      	cmp	r3, #255	; 0xff
 801c9be:	f040 80a1 	bne.w	801cb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801c9c2:	803a      	strh	r2, [r7, #0]
 801c9c4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c9c6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801c9c8:	4413      	add	r3, r2
 801c9ca:	931d      	str	r3, [sp, #116]	; 0x74
 801c9cc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801c9ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c9d0:	441a      	add	r2, r3
 801c9d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c9d4:	921e      	str	r2, [sp, #120]	; 0x78
 801c9d6:	3b01      	subs	r3, #1
 801c9d8:	3702      	adds	r7, #2
 801c9da:	930f      	str	r3, [sp, #60]	; 0x3c
 801c9dc:	e6c9      	b.n	801c772 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c9de:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801c9e0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801c9e2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801c9e4:	4433      	add	r3, r6
 801c9e6:	931d      	str	r3, [sp, #116]	; 0x74
 801c9e8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c9ea:	441c      	add	r4, r3
 801c9ec:	9b06      	ldr	r3, [sp, #24]
 801c9ee:	941e      	str	r4, [sp, #120]	; 0x78
 801c9f0:	3b01      	subs	r3, #1
 801c9f2:	9306      	str	r3, [sp, #24]
 801c9f4:	9b07      	ldr	r3, [sp, #28]
 801c9f6:	3302      	adds	r3, #2
 801c9f8:	9307      	str	r3, [sp, #28]
 801c9fa:	e698      	b.n	801c72e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c9fc:	d028      	beq.n	801ca50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c9fe:	9b06      	ldr	r3, [sp, #24]
 801ca00:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ca02:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ca04:	3b01      	subs	r3, #1
 801ca06:	fb00 5003 	mla	r0, r0, r3, r5
 801ca0a:	1400      	asrs	r0, r0, #16
 801ca0c:	f53f aeac 	bmi.w	801c768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ca10:	3901      	subs	r1, #1
 801ca12:	4288      	cmp	r0, r1
 801ca14:	f6bf aea8 	bge.w	801c768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ca18:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ca1a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801ca1c:	fb01 0303 	mla	r3, r1, r3, r0
 801ca20:	141b      	asrs	r3, r3, #16
 801ca22:	f53f aea1 	bmi.w	801c768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ca26:	3a01      	subs	r2, #1
 801ca28:	4293      	cmp	r3, r2
 801ca2a:	f6bf ae9d 	bge.w	801c768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ca2e:	9b06      	ldr	r3, [sp, #24]
 801ca30:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801ca34:	930f      	str	r3, [sp, #60]	; 0x3c
 801ca36:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ca3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ca3c:	2b00      	cmp	r3, #0
 801ca3e:	f300 80b6 	bgt.w	801cbae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801ca42:	9b06      	ldr	r3, [sp, #24]
 801ca44:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ca48:	9b07      	ldr	r3, [sp, #28]
 801ca4a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ca4e:	9307      	str	r3, [sp, #28]
 801ca50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca52:	2b00      	cmp	r3, #0
 801ca54:	f340 8218 	ble.w	801ce88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801ca58:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca5c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ca60:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ca64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ca66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca72:	eef0 6a62 	vmov.f32	s13, s5
 801ca76:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca82:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801ca86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca8a:	eef0 6a43 	vmov.f32	s13, s6
 801ca8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca92:	ee12 2a90 	vmov	r2, s5
 801ca96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca9e:	ee13 2a10 	vmov	r2, s6
 801caa2:	931f      	str	r3, [sp, #124]	; 0x7c
 801caa4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801caa6:	fb92 f3f3 	sdiv	r3, r2, r3
 801caaa:	9320      	str	r3, [sp, #128]	; 0x80
 801caac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801caae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cab0:	3b01      	subs	r3, #1
 801cab2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cab6:	930e      	str	r3, [sp, #56]	; 0x38
 801cab8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801caba:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801cabe:	bf08      	it	eq
 801cac0:	4613      	moveq	r3, r2
 801cac2:	9306      	str	r3, [sp, #24]
 801cac4:	eeb0 3a67 	vmov.f32	s6, s15
 801cac8:	eef0 2a47 	vmov.f32	s5, s14
 801cacc:	e621      	b.n	801c712 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cace:	fb08 f505 	mul.w	r5, r8, r5
 801cad2:	fb09 5303 	mla	r3, r9, r3, r5
 801cad6:	e6a1      	b.n	801c81c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cad8:	4681      	mov	r9, r0
 801cada:	e6c8      	b.n	801c86e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cadc:	f1c1 0210 	rsb	r2, r1, #16
 801cae0:	4341      	muls	r1, r0
 801cae2:	fb09 1902 	mla	r9, r9, r2, r1
 801cae6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801caea:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801caee:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801caf2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801caf6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cafa:	ea42 0909 	orr.w	r9, r2, r9
 801cafe:	fa1f f289 	uxth.w	r2, r9
 801cb02:	e75b      	b.n	801c9bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cb04:	f8b7 c000 	ldrh.w	ip, [r7]
 801cb08:	43db      	mvns	r3, r3
 801cb0a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cb0e:	fa5f fe83 	uxtb.w	lr, r3
 801cb12:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cb16:	fb00 f00e 	mul.w	r0, r0, lr
 801cb1a:	1c41      	adds	r1, r0, #1
 801cb1c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cb20:	1211      	asrs	r1, r2, #8
 801cb22:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cb26:	f021 0107 	bic.w	r1, r1, #7
 801cb2a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cb2e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cb32:	48d7      	ldr	r0, [pc, #860]	; (801ce90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cb34:	fb05 f50e 	mul.w	r5, r5, lr
 801cb38:	b2c9      	uxtb	r1, r1
 801cb3a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cb3e:	1c69      	adds	r1, r5, #1
 801cb40:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cb44:	10d1      	asrs	r1, r2, #3
 801cb46:	f021 0103 	bic.w	r1, r1, #3
 801cb4a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cb4e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cb52:	b2db      	uxtb	r3, r3
 801cb54:	00c9      	lsls	r1, r1, #3
 801cb56:	fb03 f30e 	mul.w	r3, r3, lr
 801cb5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cb5e:	4301      	orrs	r1, r0
 801cb60:	1c58      	adds	r0, r3, #1
 801cb62:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cb66:	00d2      	lsls	r2, r2, #3
 801cb68:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cb6c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cb70:	430a      	orrs	r2, r1
 801cb72:	e726      	b.n	801c9c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801cb74:	f115 0e01 	adds.w	lr, r5, #1
 801cb78:	f53f af24 	bmi.w	801c9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cb7c:	4572      	cmp	r2, lr
 801cb7e:	f6ff af21 	blt.w	801c9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cb82:	f110 0e01 	adds.w	lr, r0, #1
 801cb86:	f53f af1d 	bmi.w	801c9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cb8a:	4573      	cmp	r3, lr
 801cb8c:	f6ff af1a 	blt.w	801c9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cb90:	b21b      	sxth	r3, r3
 801cb92:	b212      	sxth	r2, r2
 801cb94:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801cb98:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801cb9c:	9301      	str	r3, [sp, #4]
 801cb9e:	9200      	str	r2, [sp, #0]
 801cba0:	4639      	mov	r1, r7
 801cba2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801cba6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cba8:	f7ff fc24 	bl	801c3f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cbac:	e70a      	b.n	801c9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cbae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cbb0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cbb4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cbb6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cbba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cbbc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cbc0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cbc2:	141f      	asrs	r7, r3, #16
 801cbc4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cbc6:	141b      	asrs	r3, r3, #16
 801cbc8:	fb01 3707 	mla	r7, r1, r7, r3
 801cbcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cbce:	fa1f fc82 	uxth.w	ip, r2
 801cbd2:	eb03 0a07 	add.w	sl, r3, r7
 801cbd6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cbda:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cbde:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cbe2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801cbe6:	b29b      	uxth	r3, r3
 801cbe8:	2d00      	cmp	r5, #0
 801cbea:	f000 80fe 	beq.w	801cdea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801cbee:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cbf2:	940c      	str	r4, [sp, #48]	; 0x30
 801cbf4:	eb0a 0b01 	add.w	fp, sl, r1
 801cbf8:	fa1f fa85 	uxth.w	sl, r5
 801cbfc:	fb0a fc0c 	mul.w	ip, sl, ip
 801cc00:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cc04:	fa1f fa8a 	uxth.w	sl, sl
 801cc08:	eba0 000c 	sub.w	r0, r0, ip
 801cc0c:	eba3 030a 	sub.w	r3, r3, sl
 801cc10:	b280      	uxth	r0, r0
 801cc12:	fb08 f000 	mul.w	r0, r8, r0
 801cc16:	b29b      	uxth	r3, r3
 801cc18:	fb09 0303 	mla	r3, r9, r3, r0
 801cc1c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cc1e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cc22:	940d      	str	r4, [sp, #52]	; 0x34
 801cc24:	fb0a 3300 	mla	r3, sl, r0, r3
 801cc28:	fb0c 3304 	mla	r3, ip, r4, r3
 801cc2c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cc30:	2b00      	cmp	r3, #0
 801cc32:	f000 80cc 	beq.w	801cdce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801cc36:	9808      	ldr	r0, [sp, #32]
 801cc38:	9c08      	ldr	r4, [sp, #32]
 801cc3a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cc3e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cc42:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cc46:	f000 80d5 	beq.w	801cdf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cc4a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cc4e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cc52:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cc56:	fb09 f707 	mul.w	r7, r9, r7
 801cc5a:	fb0a fc0c 	mul.w	ip, sl, ip
 801cc5e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cc62:	f107 0b20 	add.w	fp, r7, #32
 801cc66:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cc6a:	44cc      	add	ip, r9
 801cc6c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cc70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cc74:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cc78:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cc7c:	ea4c 0909 	orr.w	r9, ip, r9
 801cc80:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cc84:	8847      	ldrh	r7, [r0, #2]
 801cc86:	d019      	beq.n	801ccbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801cc88:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cc8c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cc90:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cc94:	fb08 f807 	mul.w	r8, r8, r7
 801cc98:	fb0a fc0c 	mul.w	ip, sl, ip
 801cc9c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cca0:	f108 0b20 	add.w	fp, r8, #32
 801cca4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cca8:	44bc      	add	ip, r7
 801ccaa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801ccae:	0a3f      	lsrs	r7, r7, #8
 801ccb0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801ccb4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ccb8:	ea4c 0707 	orr.w	r7, ip, r7
 801ccbc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801ccc0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801ccc4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ccc8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cccc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ccd0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ccd4:	ea4c 0909 	orr.w	r9, ip, r9
 801ccd8:	ea4a 0707 	orr.w	r7, sl, r7
 801ccdc:	2d00      	cmp	r5, #0
 801ccde:	f000 808b 	beq.w	801cdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801cce2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801cce6:	3901      	subs	r1, #1
 801cce8:	0049      	lsls	r1, r1, #1
 801ccea:	3102      	adds	r1, #2
 801ccec:	eb00 0c01 	add.w	ip, r0, r1
 801ccf0:	5a41      	ldrh	r1, [r0, r1]
 801ccf2:	980c      	ldr	r0, [sp, #48]	; 0x30
 801ccf4:	28ff      	cmp	r0, #255	; 0xff
 801ccf6:	d019      	beq.n	801cd2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801ccf8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801ccfa:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801ccfe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cd02:	fb04 fa01 	mul.w	sl, r4, r1
 801cd06:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd0a:	fb08 f800 	mul.w	r8, r8, r0
 801cd0e:	f10a 0020 	add.w	r0, sl, #32
 801cd12:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801cd16:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801cd1a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd1e:	4441      	add	r1, r8
 801cd20:	0a00      	lsrs	r0, r0, #8
 801cd22:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801cd26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd2a:	4301      	orrs	r1, r0
 801cd2c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cd2e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801cd32:	2cff      	cmp	r4, #255	; 0xff
 801cd34:	d01a      	beq.n	801cd6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801cd36:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801cd3a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd3e:	fb04 fa00 	mul.w	sl, r4, r0
 801cd42:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd46:	fb08 f80c 	mul.w	r8, r8, ip
 801cd4a:	f10a 0c20 	add.w	ip, sl, #32
 801cd4e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801cd52:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801cd56:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd5a:	4440      	add	r0, r8
 801cd5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd60:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801cd64:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cd68:	ea40 000c 	orr.w	r0, r0, ip
 801cd6c:	fb15 fc02 	smulbb	ip, r5, r2
 801cd70:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801cd74:	f1c5 0810 	rsb	r8, r5, #16
 801cd78:	eba8 0802 	sub.w	r8, r8, r2
 801cd7c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cd80:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cd84:	437a      	muls	r2, r7
 801cd86:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cd8a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cd8e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cd96:	fb09 2208 	mla	r2, r9, r8, r2
 801cd9a:	ea4a 0101 	orr.w	r1, sl, r1
 801cd9e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801cda2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cda6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cdaa:	fb05 2201 	mla	r2, r5, r1, r2
 801cdae:	ea4b 0000 	orr.w	r0, fp, r0
 801cdb2:	fb0c 2200 	mla	r2, ip, r0, r2
 801cdb6:	0d57      	lsrs	r7, r2, #21
 801cdb8:	0952      	lsrs	r2, r2, #5
 801cdba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cdbe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cdc2:	433a      	orrs	r2, r7
 801cdc4:	2bff      	cmp	r3, #255	; 0xff
 801cdc6:	b292      	uxth	r2, r2
 801cdc8:	d127      	bne.n	801ce1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801cdca:	f8ae 2000 	strh.w	r2, [lr]
 801cdce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cdd0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cdd2:	4413      	add	r3, r2
 801cdd4:	931d      	str	r3, [sp, #116]	; 0x74
 801cdd6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801cdd8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cdda:	441a      	add	r2, r3
 801cddc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cdde:	921e      	str	r2, [sp, #120]	; 0x78
 801cde0:	3b01      	subs	r3, #1
 801cde2:	f10e 0e02 	add.w	lr, lr, #2
 801cde6:	930f      	str	r3, [sp, #60]	; 0x3c
 801cde8:	e627      	b.n	801ca3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801cdea:	fb08 f000 	mul.w	r0, r8, r0
 801cdee:	fb09 0303 	mla	r3, r9, r3, r0
 801cdf2:	e71b      	b.n	801cc2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801cdf4:	46b9      	mov	r9, r7
 801cdf6:	e743      	b.n	801cc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801cdf8:	f1c2 0110 	rsb	r1, r2, #16
 801cdfc:	437a      	muls	r2, r7
 801cdfe:	fb09 2901 	mla	r9, r9, r1, r2
 801ce02:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ce06:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ce0a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ce0e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ce16:	4302      	orrs	r2, r0
 801ce18:	e7d4      	b.n	801cdc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801ce1a:	f8be 7000 	ldrh.w	r7, [lr]
 801ce1e:	4c1c      	ldr	r4, [pc, #112]	; (801ce90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801ce20:	43db      	mvns	r3, r3
 801ce22:	1238      	asrs	r0, r7, #8
 801ce24:	fa5f fc83 	uxtb.w	ip, r3
 801ce28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ce2c:	10fd      	asrs	r5, r7, #3
 801ce2e:	fb00 f00c 	mul.w	r0, r0, ip
 801ce32:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ce36:	fb05 f10c 	mul.w	r1, r5, ip
 801ce3a:	1c45      	adds	r5, r0, #1
 801ce3c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ce40:	1215      	asrs	r5, r2, #8
 801ce42:	f025 0507 	bic.w	r5, r5, #7
 801ce46:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ce4a:	1c4d      	adds	r5, r1, #1
 801ce4c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801ce50:	10d1      	asrs	r1, r2, #3
 801ce52:	f021 0103 	bic.w	r1, r1, #3
 801ce56:	00fb      	lsls	r3, r7, #3
 801ce58:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ce5c:	b2db      	uxtb	r3, r3
 801ce5e:	b2c0      	uxtb	r0, r0
 801ce60:	00c9      	lsls	r1, r1, #3
 801ce62:	fb03 f30c 	mul.w	r3, r3, ip
 801ce66:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ce6a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801ce6e:	4308      	orrs	r0, r1
 801ce70:	1c59      	adds	r1, r3, #1
 801ce72:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ce76:	00d2      	lsls	r2, r2, #3
 801ce78:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ce7c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801ce80:	4318      	orrs	r0, r3
 801ce82:	f8ae 0000 	strh.w	r0, [lr]
 801ce86:	e7a2      	b.n	801cdce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801ce88:	b013      	add	sp, #76	; 0x4c
 801ce8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce8e:	bf00      	nop
 801ce90:	fffff800 	.word	0xfffff800

0801ce94 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801ce94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ce98:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801ce9c:	fb05 4c03 	mla	ip, r5, r3, r4
 801cea0:	2d00      	cmp	r5, #0
 801cea2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801cea6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801ceaa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801ceae:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ceb2:	8808      	ldrh	r0, [r1, #0]
 801ceb4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801ceb8:	f2c0 80a7 	blt.w	801d00a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801cebc:	45aa      	cmp	sl, r5
 801cebe:	f340 80a4 	ble.w	801d00a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801cec2:	2c00      	cmp	r4, #0
 801cec4:	f2c0 809f 	blt.w	801d006 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801cec8:	42a3      	cmp	r3, r4
 801ceca:	f340 809c 	ble.w	801d006 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801cece:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801ced2:	1c62      	adds	r2, r4, #1
 801ced4:	f100 809c 	bmi.w	801d010 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801ced8:	4293      	cmp	r3, r2
 801ceda:	f340 8099 	ble.w	801d010 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801cede:	f1b9 0f00 	cmp.w	r9, #0
 801cee2:	f000 8095 	beq.w	801d010 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801cee6:	f8be c002 	ldrh.w	ip, [lr, #2]
 801ceea:	3501      	adds	r5, #1
 801ceec:	f100 8094 	bmi.w	801d018 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801cef0:	45aa      	cmp	sl, r5
 801cef2:	f340 8091 	ble.w	801d018 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801cef6:	2f00      	cmp	r7, #0
 801cef8:	f000 808e 	beq.w	801d018 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801cefc:	2c00      	cmp	r4, #0
 801cefe:	f2c0 8089 	blt.w	801d014 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801cf02:	42a3      	cmp	r3, r4
 801cf04:	f340 8086 	ble.w	801d014 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801cf08:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801cf0c:	3401      	adds	r4, #1
 801cf0e:	f100 8086 	bmi.w	801d01e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801cf12:	42a3      	cmp	r3, r4
 801cf14:	f340 8083 	ble.w	801d01e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801cf18:	f1b9 0f00 	cmp.w	r9, #0
 801cf1c:	d07f      	beq.n	801d01e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801cf1e:	3301      	adds	r3, #1
 801cf20:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801cf24:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801cf28:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cf2c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801cf30:	fb19 fe07 	smulbb	lr, r9, r7
 801cf34:	ea44 0808 	orr.w	r8, r4, r8
 801cf38:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801cf3c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801cf40:	f1c7 0210 	rsb	r2, r7, #16
 801cf44:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cf48:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801cf4c:	ea44 0c0c 	orr.w	ip, r4, ip
 801cf50:	eba2 0209 	sub.w	r2, r2, r9
 801cf54:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801cf58:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801cf5c:	fb04 f40c 	mul.w	r4, r4, ip
 801cf60:	fb02 4808 	mla	r8, r2, r8, r4
 801cf64:	041a      	lsls	r2, r3, #16
 801cf66:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801cf6a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801cf6e:	4313      	orrs	r3, r2
 801cf70:	042a      	lsls	r2, r5, #16
 801cf72:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801cf76:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cf7a:	fb0e 8303 	mla	r3, lr, r3, r8
 801cf7e:	432a      	orrs	r2, r5
 801cf80:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801cf84:	fb07 3202 	mla	r2, r7, r2, r3
 801cf88:	0d53      	lsrs	r3, r2, #21
 801cf8a:	0952      	lsrs	r2, r2, #5
 801cf8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cf90:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cf94:	431a      	orrs	r2, r3
 801cf96:	b293      	uxth	r3, r2
 801cf98:	b2b4      	uxth	r4, r6
 801cf9a:	1202      	asrs	r2, r0, #8
 801cf9c:	43f6      	mvns	r6, r6
 801cf9e:	b2f6      	uxtb	r6, r6
 801cfa0:	121d      	asrs	r5, r3, #8
 801cfa2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801cfa6:	fb12 f206 	smulbb	r2, r2, r6
 801cfaa:	10c7      	asrs	r7, r0, #3
 801cfac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cfb0:	00c0      	lsls	r0, r0, #3
 801cfb2:	fb05 2504 	mla	r5, r5, r4, r2
 801cfb6:	b2c0      	uxtb	r0, r0
 801cfb8:	10da      	asrs	r2, r3, #3
 801cfba:	00db      	lsls	r3, r3, #3
 801cfbc:	b2db      	uxtb	r3, r3
 801cfbe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cfc2:	fb10 f006 	smulbb	r0, r0, r6
 801cfc6:	b2ad      	uxth	r5, r5
 801cfc8:	fb03 0004 	mla	r0, r3, r4, r0
 801cfcc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801cfd0:	fb17 f706 	smulbb	r7, r7, r6
 801cfd4:	b280      	uxth	r0, r0
 801cfd6:	1c6b      	adds	r3, r5, #1
 801cfd8:	fb02 7204 	mla	r2, r2, r4, r7
 801cfdc:	b292      	uxth	r2, r2
 801cfde:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cfe2:	1c43      	adds	r3, r0, #1
 801cfe4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801cfe8:	1c50      	adds	r0, r2, #1
 801cfea:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801cfee:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cff2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cff6:	0952      	lsrs	r2, r2, #5
 801cff8:	432b      	orrs	r3, r5
 801cffa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cffe:	4313      	orrs	r3, r2
 801d000:	800b      	strh	r3, [r1, #0]
 801d002:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d006:	4680      	mov	r8, r0
 801d008:	e763      	b.n	801ced2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d00a:	4684      	mov	ip, r0
 801d00c:	4680      	mov	r8, r0
 801d00e:	e76c      	b.n	801ceea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d010:	4684      	mov	ip, r0
 801d012:	e76a      	b.n	801ceea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d014:	4605      	mov	r5, r0
 801d016:	e779      	b.n	801cf0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d018:	4603      	mov	r3, r0
 801d01a:	4605      	mov	r5, r0
 801d01c:	e782      	b.n	801cf24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d01e:	4603      	mov	r3, r0
 801d020:	e780      	b.n	801cf24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d022 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d022:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d026:	b093      	sub	sp, #76	; 0x4c
 801d028:	461d      	mov	r5, r3
 801d02a:	9210      	str	r2, [sp, #64]	; 0x40
 801d02c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d02e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d032:	920b      	str	r2, [sp, #44]	; 0x2c
 801d034:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d038:	910a      	str	r1, [sp, #40]	; 0x28
 801d03a:	6859      	ldr	r1, [r3, #4]
 801d03c:	681b      	ldr	r3, [r3, #0]
 801d03e:	9011      	str	r0, [sp, #68]	; 0x44
 801d040:	fb01 2707 	mla	r7, r1, r7, r2
 801d044:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d048:	9307      	str	r3, [sp, #28]
 801d04a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d04c:	681b      	ldr	r3, [r3, #0]
 801d04e:	9309      	str	r3, [sp, #36]	; 0x24
 801d050:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d052:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d056:	43db      	mvns	r3, r3
 801d058:	b2db      	uxtb	r3, r3
 801d05a:	9308      	str	r3, [sp, #32]
 801d05c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d05e:	2b00      	cmp	r3, #0
 801d060:	dc03      	bgt.n	801d06a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d062:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d064:	2b00      	cmp	r3, #0
 801d066:	f340 8203 	ble.w	801d470 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d06a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d06c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d070:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d074:	1e48      	subs	r0, r1, #1
 801d076:	f102 3cff 	add.w	ip, r2, #4294967295
 801d07a:	2d00      	cmp	r5, #0
 801d07c:	f340 80da 	ble.w	801d234 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d080:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d084:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d088:	d406      	bmi.n	801d098 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d08a:	4586      	cmp	lr, r0
 801d08c:	da04      	bge.n	801d098 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d08e:	2b00      	cmp	r3, #0
 801d090:	db02      	blt.n	801d098 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d092:	4563      	cmp	r3, ip
 801d094:	f2c0 80cf 	blt.w	801d236 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d098:	f11e 0e01 	adds.w	lr, lr, #1
 801d09c:	f100 80c1 	bmi.w	801d222 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d0a0:	4571      	cmp	r1, lr
 801d0a2:	f2c0 80be 	blt.w	801d222 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d0a6:	3301      	adds	r3, #1
 801d0a8:	f100 80bb 	bmi.w	801d222 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d0ac:	429a      	cmp	r2, r3
 801d0ae:	f2c0 80b8 	blt.w	801d222 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d0b2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d0b6:	46a9      	mov	r9, r5
 801d0b8:	f1b9 0f00 	cmp.w	r9, #0
 801d0bc:	f340 80d8 	ble.w	801d270 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d0c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d0c2:	1421      	asrs	r1, r4, #16
 801d0c4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d0c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d0cc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d0d0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d0d4:	f100 8111 	bmi.w	801d2fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d0d8:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d0dc:	4551      	cmp	r1, sl
 801d0de:	f280 810c 	bge.w	801d2fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d0e2:	2800      	cmp	r0, #0
 801d0e4:	f2c0 8109 	blt.w	801d2fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d0e8:	f103 3aff 	add.w	sl, r3, #4294967295
 801d0ec:	4550      	cmp	r0, sl
 801d0ee:	f280 8104 	bge.w	801d2fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d0f2:	fa0f f38e 	sxth.w	r3, lr
 801d0f6:	fb00 1103 	mla	r1, r0, r3, r1
 801d0fa:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d0fc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d100:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d104:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d108:	f1bc 0f00 	cmp.w	ip, #0
 801d10c:	d007      	beq.n	801d11e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d10e:	005b      	lsls	r3, r3, #1
 801d110:	eb0a 0003 	add.w	r0, sl, r3
 801d114:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d118:	930c      	str	r3, [sp, #48]	; 0x30
 801d11a:	8843      	ldrh	r3, [r0, #2]
 801d11c:	930d      	str	r3, [sp, #52]	; 0x34
 801d11e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d122:	fb12 f30c 	smulbb	r3, r2, ip
 801d126:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d12a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d12e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d132:	10db      	asrs	r3, r3, #3
 801d134:	ea40 000e 	orr.w	r0, r0, lr
 801d138:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d13c:	f1cc 0e10 	rsb	lr, ip, #16
 801d140:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d144:	ebae 0e02 	sub.w	lr, lr, r2
 801d148:	ea4a 0101 	orr.w	r1, sl, r1
 801d14c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d150:	4351      	muls	r1, r2
 801d152:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d154:	9f08      	ldr	r7, [sp, #32]
 801d156:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d15a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d15e:	0410      	lsls	r0, r2, #16
 801d160:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d164:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d168:	4310      	orrs	r0, r2
 801d16a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d16c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d16e:	0412      	lsls	r2, r2, #16
 801d170:	fb03 e000 	mla	r0, r3, r0, lr
 801d174:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d178:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d17c:	ea42 020e 	orr.w	r2, r2, lr
 801d180:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d184:	fb03 0302 	mla	r3, r3, r2, r0
 801d188:	0d5a      	lsrs	r2, r3, #21
 801d18a:	095b      	lsrs	r3, r3, #5
 801d18c:	f8b8 0000 	ldrh.w	r0, [r8]
 801d190:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d194:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d198:	4313      	orrs	r3, r2
 801d19a:	b29b      	uxth	r3, r3
 801d19c:	1201      	asrs	r1, r0, #8
 801d19e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d1a2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d1a6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d1aa:	fb11 f107 	smulbb	r1, r1, r7
 801d1ae:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d1b2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d1b6:	00c0      	lsls	r0, r0, #3
 801d1b8:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d1bc:	b2c0      	uxtb	r0, r0
 801d1be:	10d9      	asrs	r1, r3, #3
 801d1c0:	00db      	lsls	r3, r3, #3
 801d1c2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d1c6:	b2db      	uxtb	r3, r3
 801d1c8:	fb10 f007 	smulbb	r0, r0, r7
 801d1cc:	fa1f fc8c 	uxth.w	ip, ip
 801d1d0:	fb03 0302 	mla	r3, r3, r2, r0
 801d1d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d1d8:	fb1e fe07 	smulbb	lr, lr, r7
 801d1dc:	fb01 e102 	mla	r1, r1, r2, lr
 801d1e0:	b29a      	uxth	r2, r3
 801d1e2:	f10c 0301 	add.w	r3, ip, #1
 801d1e6:	b289      	uxth	r1, r1
 801d1e8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d1ec:	1c53      	adds	r3, r2, #1
 801d1ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d1f2:	1c4a      	adds	r2, r1, #1
 801d1f4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d1f8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d1fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d200:	0949      	lsrs	r1, r1, #5
 801d202:	ea43 030c 	orr.w	r3, r3, ip
 801d206:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d20a:	430b      	orrs	r3, r1
 801d20c:	f8a8 3000 	strh.w	r3, [r8]
 801d210:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d212:	441c      	add	r4, r3
 801d214:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d216:	f108 0802 	add.w	r8, r8, #2
 801d21a:	441e      	add	r6, r3
 801d21c:	f109 39ff 	add.w	r9, r9, #4294967295
 801d220:	e74a      	b.n	801d0b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d222:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d224:	441c      	add	r4, r3
 801d226:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d228:	441e      	add	r6, r3
 801d22a:	9b07      	ldr	r3, [sp, #28]
 801d22c:	3302      	adds	r3, #2
 801d22e:	3d01      	subs	r5, #1
 801d230:	9307      	str	r3, [sp, #28]
 801d232:	e722      	b.n	801d07a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d234:	d022      	beq.n	801d27c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d236:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d238:	1e6b      	subs	r3, r5, #1
 801d23a:	fb00 4003 	mla	r0, r0, r3, r4
 801d23e:	1400      	asrs	r0, r0, #16
 801d240:	f53f af37 	bmi.w	801d0b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d244:	3901      	subs	r1, #1
 801d246:	4288      	cmp	r0, r1
 801d248:	f6bf af33 	bge.w	801d0b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d24c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d24e:	fb01 6303 	mla	r3, r1, r3, r6
 801d252:	141b      	asrs	r3, r3, #16
 801d254:	f53f af2d 	bmi.w	801d0b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d258:	3a01      	subs	r2, #1
 801d25a:	4293      	cmp	r3, r2
 801d25c:	f6bf af29 	bge.w	801d0b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d260:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d264:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d268:	46a8      	mov	r8, r5
 801d26a:	f1b8 0f00 	cmp.w	r8, #0
 801d26e:	dc5e      	bgt.n	801d32e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d270:	9b07      	ldr	r3, [sp, #28]
 801d272:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d276:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d27a:	9307      	str	r3, [sp, #28]
 801d27c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d27e:	2b00      	cmp	r3, #0
 801d280:	f340 80f6 	ble.w	801d470 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d284:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d288:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d28c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d290:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d292:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d296:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d29a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d29e:	eef0 6a62 	vmov.f32	s13, s5
 801d2a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d2a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d2aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d2ae:	ee16 4a90 	vmov	r4, s13
 801d2b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d2b6:	eef0 6a43 	vmov.f32	s13, s6
 801d2ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d2be:	ee12 2a90 	vmov	r2, s5
 801d2c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d2c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2ca:	ee13 2a10 	vmov	r2, s6
 801d2ce:	931f      	str	r3, [sp, #124]	; 0x7c
 801d2d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d2d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2d6:	9320      	str	r3, [sp, #128]	; 0x80
 801d2d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d2da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d2dc:	3b01      	subs	r3, #1
 801d2de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d2e2:	930a      	str	r3, [sp, #40]	; 0x28
 801d2e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d2e6:	ee16 6a90 	vmov	r6, s13
 801d2ea:	bf14      	ite	ne
 801d2ec:	461d      	movne	r5, r3
 801d2ee:	4615      	moveq	r5, r2
 801d2f0:	eeb0 3a67 	vmov.f32	s6, s15
 801d2f4:	eef0 2a47 	vmov.f32	s5, s14
 801d2f8:	e6b0      	b.n	801d05c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d2fa:	f111 0a01 	adds.w	sl, r1, #1
 801d2fe:	d487      	bmi.n	801d210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d300:	45d6      	cmp	lr, sl
 801d302:	db85      	blt.n	801d210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d304:	f110 0a01 	adds.w	sl, r0, #1
 801d308:	d482      	bmi.n	801d210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d30a:	4553      	cmp	r3, sl
 801d30c:	db80      	blt.n	801d210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d30e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d310:	9101      	str	r1, [sp, #4]
 801d312:	b21b      	sxth	r3, r3
 801d314:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d318:	9300      	str	r3, [sp, #0]
 801d31a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d31e:	fa0f f38e 	sxth.w	r3, lr
 801d322:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d324:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d326:	4641      	mov	r1, r8
 801d328:	f7ff fdb4 	bl	801ce94 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d32c:	e770      	b.n	801d210 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d32e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d330:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d332:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d336:	1430      	asrs	r0, r6, #16
 801d338:	1423      	asrs	r3, r4, #16
 801d33a:	fb01 3000 	mla	r0, r1, r0, r3
 801d33e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d340:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d344:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d348:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d34c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d350:	8858      	ldrh	r0, [r3, #2]
 801d352:	f1be 0f00 	cmp.w	lr, #0
 801d356:	d00b      	beq.n	801d370 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d358:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d35c:	3901      	subs	r1, #1
 801d35e:	0049      	lsls	r1, r1, #1
 801d360:	3102      	adds	r1, #2
 801d362:	eb03 0b01 	add.w	fp, r3, r1
 801d366:	5a5b      	ldrh	r3, [r3, r1]
 801d368:	930e      	str	r3, [sp, #56]	; 0x38
 801d36a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d36e:	930f      	str	r3, [sp, #60]	; 0x3c
 801d370:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d374:	fb12 f30e 	smulbb	r3, r2, lr
 801d378:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d37c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d380:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d384:	10db      	asrs	r3, r3, #3
 801d386:	ea41 010c 	orr.w	r1, r1, ip
 801d38a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d38e:	f1ce 0c10 	rsb	ip, lr, #16
 801d392:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d396:	ebac 0c02 	sub.w	ip, ip, r2
 801d39a:	ea4b 0000 	orr.w	r0, fp, r0
 801d39e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d3a2:	4350      	muls	r0, r2
 801d3a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d3a6:	9f08      	ldr	r7, [sp, #32]
 801d3a8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d3ac:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d3b0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d3b4:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d3b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d3ba:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d3bc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d3c0:	0412      	lsls	r2, r2, #16
 801d3c2:	ea4b 0101 	orr.w	r1, fp, r1
 801d3c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d3ca:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d3ce:	fb03 c101 	mla	r1, r3, r1, ip
 801d3d2:	4302      	orrs	r2, r0
 801d3d4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d3d8:	fb03 1202 	mla	r2, r3, r2, r1
 801d3dc:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d3e0:	0952      	lsrs	r2, r2, #5
 801d3e2:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d3e6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d3ea:	f8b9 2000 	ldrh.w	r2, [r9]
 801d3ee:	ea4b 0303 	orr.w	r3, fp, r3
 801d3f2:	b29b      	uxth	r3, r3
 801d3f4:	1211      	asrs	r1, r2, #8
 801d3f6:	1218      	asrs	r0, r3, #8
 801d3f8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d3fc:	fb11 f107 	smulbb	r1, r1, r7
 801d400:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d404:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d408:	00d2      	lsls	r2, r2, #3
 801d40a:	fb00 100a 	mla	r0, r0, sl, r1
 801d40e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d412:	10d9      	asrs	r1, r3, #3
 801d414:	b2d2      	uxtb	r2, r2
 801d416:	00db      	lsls	r3, r3, #3
 801d418:	fb1c fc07 	smulbb	ip, ip, r7
 801d41c:	fb12 f207 	smulbb	r2, r2, r7
 801d420:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d424:	b2db      	uxtb	r3, r3
 801d426:	b280      	uxth	r0, r0
 801d428:	fb01 c10a 	mla	r1, r1, sl, ip
 801d42c:	fb03 230a 	mla	r3, r3, sl, r2
 801d430:	b29b      	uxth	r3, r3
 801d432:	b289      	uxth	r1, r1
 801d434:	1c42      	adds	r2, r0, #1
 801d436:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d43a:	f101 0c01 	add.w	ip, r1, #1
 801d43e:	1c5a      	adds	r2, r3, #1
 801d440:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d444:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d448:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d44a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d44e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d452:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d456:	4310      	orrs	r0, r2
 801d458:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d45c:	441c      	add	r4, r3
 801d45e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d460:	ea40 000c 	orr.w	r0, r0, ip
 801d464:	f829 0b02 	strh.w	r0, [r9], #2
 801d468:	441e      	add	r6, r3
 801d46a:	f108 38ff 	add.w	r8, r8, #4294967295
 801d46e:	e6fc      	b.n	801d26a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d470:	b013      	add	sp, #76	; 0x4c
 801d472:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d476 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d476:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d47a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d47e:	fb0e 4703 	mla	r7, lr, r3, r4
 801d482:	f1be 0f00 	cmp.w	lr, #0
 801d486:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d48a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d48e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d492:	8808      	ldrh	r0, [r1, #0]
 801d494:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d498:	db60      	blt.n	801d55c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d49a:	45f1      	cmp	r9, lr
 801d49c:	dd5e      	ble.n	801d55c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d49e:	2c00      	cmp	r4, #0
 801d4a0:	db5a      	blt.n	801d558 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d4a2:	42a3      	cmp	r3, r4
 801d4a4:	dd58      	ble.n	801d558 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d4a6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d4aa:	1c62      	adds	r2, r4, #1
 801d4ac:	d459      	bmi.n	801d562 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d4ae:	4293      	cmp	r3, r2
 801d4b0:	dd57      	ble.n	801d562 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d4b2:	2d00      	cmp	r5, #0
 801d4b4:	d055      	beq.n	801d562 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d4b6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d4ba:	f11e 0e01 	adds.w	lr, lr, #1
 801d4be:	d454      	bmi.n	801d56a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d4c0:	45f1      	cmp	r9, lr
 801d4c2:	dd52      	ble.n	801d56a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d4c4:	2e00      	cmp	r6, #0
 801d4c6:	d050      	beq.n	801d56a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d4c8:	2c00      	cmp	r4, #0
 801d4ca:	db4c      	blt.n	801d566 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d4cc:	42a3      	cmp	r3, r4
 801d4ce:	dd4a      	ble.n	801d566 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d4d0:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d4d4:	3401      	adds	r4, #1
 801d4d6:	d405      	bmi.n	801d4e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d4d8:	42a3      	cmp	r3, r4
 801d4da:	dd03      	ble.n	801d4e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d4dc:	b115      	cbz	r5, 801d4e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d4de:	3301      	adds	r3, #1
 801d4e0:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d4e4:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d4e8:	fb15 f406 	smulbb	r4, r5, r6
 801d4ec:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d4f0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d4f4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d4f8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d4fc:	ea43 0c0c 	orr.w	ip, r3, ip
 801d500:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d504:	f1c6 0310 	rsb	r3, r6, #16
 801d508:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d50c:	1b5b      	subs	r3, r3, r5
 801d50e:	ea4e 0707 	orr.w	r7, lr, r7
 801d512:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d516:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d51a:	437d      	muls	r5, r7
 801d51c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d520:	0403      	lsls	r3, r0, #16
 801d522:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d526:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d52a:	4318      	orrs	r0, r3
 801d52c:	0413      	lsls	r3, r2, #16
 801d52e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d532:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d536:	4313      	orrs	r3, r2
 801d538:	fb04 c000 	mla	r0, r4, r0, ip
 801d53c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d540:	fb06 0003 	mla	r0, r6, r3, r0
 801d544:	0d43      	lsrs	r3, r0, #21
 801d546:	0940      	lsrs	r0, r0, #5
 801d548:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d54c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d550:	4318      	orrs	r0, r3
 801d552:	8008      	strh	r0, [r1, #0]
 801d554:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d558:	4684      	mov	ip, r0
 801d55a:	e7a6      	b.n	801d4aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d55c:	4607      	mov	r7, r0
 801d55e:	4684      	mov	ip, r0
 801d560:	e7ab      	b.n	801d4ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d562:	4607      	mov	r7, r0
 801d564:	e7a9      	b.n	801d4ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d566:	4602      	mov	r2, r0
 801d568:	e7b4      	b.n	801d4d4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d56a:	4602      	mov	r2, r0
 801d56c:	e7ba      	b.n	801d4e4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d56e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d56e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d572:	b08f      	sub	sp, #60	; 0x3c
 801d574:	461d      	mov	r5, r3
 801d576:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d578:	920c      	str	r2, [sp, #48]	; 0x30
 801d57a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801d57e:	9107      	str	r1, [sp, #28]
 801d580:	6859      	ldr	r1, [r3, #4]
 801d582:	681b      	ldr	r3, [r3, #0]
 801d584:	900d      	str	r0, [sp, #52]	; 0x34
 801d586:	fb01 2707 	mla	r7, r1, r7, r2
 801d58a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d58e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d590:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d594:	f8d3 8000 	ldr.w	r8, [r3]
 801d598:	9b07      	ldr	r3, [sp, #28]
 801d59a:	2b00      	cmp	r3, #0
 801d59c:	dc03      	bgt.n	801d5a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d59e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d5a0:	2b00      	cmp	r3, #0
 801d5a2:	f340 8181 	ble.w	801d8a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d5a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d5a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d5ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d5b0:	1e48      	subs	r0, r1, #1
 801d5b2:	f102 3cff 	add.w	ip, r2, #4294967295
 801d5b6:	2d00      	cmp	r5, #0
 801d5b8:	f340 809b 	ble.w	801d6f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801d5bc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d5c0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d5c4:	d406      	bmi.n	801d5d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d5c6:	4586      	cmp	lr, r0
 801d5c8:	da04      	bge.n	801d5d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d5ca:	2b00      	cmp	r3, #0
 801d5cc:	db02      	blt.n	801d5d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d5ce:	4563      	cmp	r3, ip
 801d5d0:	f2c0 8090 	blt.w	801d6f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d5d4:	f11e 0e01 	adds.w	lr, lr, #1
 801d5d8:	f100 8084 	bmi.w	801d6e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d5dc:	4571      	cmp	r1, lr
 801d5de:	f2c0 8081 	blt.w	801d6e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d5e2:	3301      	adds	r3, #1
 801d5e4:	d47e      	bmi.n	801d6e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d5e6:	429a      	cmp	r2, r3
 801d5e8:	db7c      	blt.n	801d6e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801d5ea:	46aa      	mov	sl, r5
 801d5ec:	46b9      	mov	r9, r7
 801d5ee:	f1ba 0f00 	cmp.w	sl, #0
 801d5f2:	f340 8099 	ble.w	801d728 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d5f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d5f8:	1421      	asrs	r1, r4, #16
 801d5fa:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d5fe:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d602:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d606:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d60a:	f100 80d0 	bmi.w	801d7ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d60e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d612:	4559      	cmp	r1, fp
 801d614:	f280 80cb 	bge.w	801d7ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d618:	2800      	cmp	r0, #0
 801d61a:	f2c0 80c8 	blt.w	801d7ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d61e:	f103 3bff 	add.w	fp, r3, #4294967295
 801d622:	4558      	cmp	r0, fp
 801d624:	f280 80c3 	bge.w	801d7ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d628:	fa0f fe8e 	sxth.w	lr, lr
 801d62c:	fb00 110e 	mla	r1, r0, lr, r1
 801d630:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d634:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801d638:	8841      	ldrh	r1, [r0, #2]
 801d63a:	f1bc 0f00 	cmp.w	ip, #0
 801d63e:	d00b      	beq.n	801d658 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801d640:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801d644:	3b01      	subs	r3, #1
 801d646:	005b      	lsls	r3, r3, #1
 801d648:	3302      	adds	r3, #2
 801d64a:	eb00 0e03 	add.w	lr, r0, r3
 801d64e:	5ac3      	ldrh	r3, [r0, r3]
 801d650:	9308      	str	r3, [sp, #32]
 801d652:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801d656:	9309      	str	r3, [sp, #36]	; 0x24
 801d658:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801d65c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d660:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d664:	ea40 000b 	orr.w	r0, r0, fp
 801d668:	fb12 f30c 	smulbb	r3, r2, ip
 801d66c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d670:	10db      	asrs	r3, r3, #3
 801d672:	f1cc 0e10 	rsb	lr, ip, #16
 801d676:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d67a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d67e:	ebae 0e02 	sub.w	lr, lr, r2
 801d682:	ea4b 0101 	orr.w	r1, fp, r1
 801d686:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d68a:	4351      	muls	r1, r2
 801d68c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d68e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d692:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d696:	0410      	lsls	r0, r2, #16
 801d698:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d69c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d6a0:	4310      	orrs	r0, r2
 801d6a2:	9a08      	ldr	r2, [sp, #32]
 801d6a4:	9908      	ldr	r1, [sp, #32]
 801d6a6:	0412      	lsls	r2, r2, #16
 801d6a8:	fb03 e000 	mla	r0, r3, r0, lr
 801d6ac:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d6b0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d6b4:	ea42 020e 	orr.w	r2, r2, lr
 801d6b8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d6bc:	fb03 0302 	mla	r3, r3, r2, r0
 801d6c0:	0d5a      	lsrs	r2, r3, #21
 801d6c2:	095b      	lsrs	r3, r3, #5
 801d6c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d6c8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d6cc:	4313      	orrs	r3, r2
 801d6ce:	f8a9 3000 	strh.w	r3, [r9]
 801d6d2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d6d4:	441c      	add	r4, r3
 801d6d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d6d8:	f109 0902 	add.w	r9, r9, #2
 801d6dc:	441e      	add	r6, r3
 801d6de:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d6e2:	e784      	b.n	801d5ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d6e4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d6e6:	441c      	add	r4, r3
 801d6e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d6ea:	3d01      	subs	r5, #1
 801d6ec:	441e      	add	r6, r3
 801d6ee:	3702      	adds	r7, #2
 801d6f0:	e761      	b.n	801d5b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d6f2:	d01d      	beq.n	801d730 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d6f4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801d6f6:	1e6b      	subs	r3, r5, #1
 801d6f8:	fb00 4003 	mla	r0, r0, r3, r4
 801d6fc:	1400      	asrs	r0, r0, #16
 801d6fe:	f53f af74 	bmi.w	801d5ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d702:	3901      	subs	r1, #1
 801d704:	4288      	cmp	r0, r1
 801d706:	f6bf af70 	bge.w	801d5ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d70a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801d70c:	fb01 6303 	mla	r3, r1, r3, r6
 801d710:	141b      	asrs	r3, r3, #16
 801d712:	f53f af6a 	bmi.w	801d5ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d716:	3a01      	subs	r2, #1
 801d718:	4293      	cmp	r3, r2
 801d71a:	f6bf af66 	bge.w	801d5ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d71e:	46a9      	mov	r9, r5
 801d720:	46ba      	mov	sl, r7
 801d722:	f1b9 0f00 	cmp.w	r9, #0
 801d726:	dc5a      	bgt.n	801d7de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801d728:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d72c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801d730:	9b07      	ldr	r3, [sp, #28]
 801d732:	2b00      	cmp	r3, #0
 801d734:	f340 80b8 	ble.w	801d8a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d738:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d73c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d740:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d744:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d746:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d74a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d74e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d752:	eef0 6a62 	vmov.f32	s13, s5
 801d756:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d75a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d75e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d762:	ee16 4a90 	vmov	r4, s13
 801d766:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d76a:	eef0 6a43 	vmov.f32	s13, s6
 801d76e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d772:	ee12 2a90 	vmov	r2, s5
 801d776:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d77a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d77e:	ee13 2a10 	vmov	r2, s6
 801d782:	931b      	str	r3, [sp, #108]	; 0x6c
 801d784:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d786:	fb92 f3f3 	sdiv	r3, r2, r3
 801d78a:	931c      	str	r3, [sp, #112]	; 0x70
 801d78c:	9b07      	ldr	r3, [sp, #28]
 801d78e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d790:	3b01      	subs	r3, #1
 801d792:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d796:	9307      	str	r3, [sp, #28]
 801d798:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d79a:	ee16 6a90 	vmov	r6, s13
 801d79e:	bf14      	ite	ne
 801d7a0:	461d      	movne	r5, r3
 801d7a2:	4615      	moveq	r5, r2
 801d7a4:	eeb0 3a67 	vmov.f32	s6, s15
 801d7a8:	eef0 2a47 	vmov.f32	s5, s14
 801d7ac:	e6f4      	b.n	801d598 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801d7ae:	f111 0b01 	adds.w	fp, r1, #1
 801d7b2:	d48e      	bmi.n	801d6d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d7b4:	45de      	cmp	lr, fp
 801d7b6:	db8c      	blt.n	801d6d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d7b8:	f110 0b01 	adds.w	fp, r0, #1
 801d7bc:	d489      	bmi.n	801d6d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d7be:	455b      	cmp	r3, fp
 801d7c0:	db87      	blt.n	801d6d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d7c2:	b21b      	sxth	r3, r3
 801d7c4:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801d7c8:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801d7cc:	9300      	str	r3, [sp, #0]
 801d7ce:	4642      	mov	r2, r8
 801d7d0:	fa0f f38e 	sxth.w	r3, lr
 801d7d4:	4649      	mov	r1, r9
 801d7d6:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d7d8:	f7ff fe4d 	bl	801d476 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801d7dc:	e779      	b.n	801d6d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d7de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d7e0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d7e4:	1420      	asrs	r0, r4, #16
 801d7e6:	1431      	asrs	r1, r6, #16
 801d7e8:	fb03 0101 	mla	r1, r3, r1, r0
 801d7ec:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d7f0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d7f4:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801d7f8:	8841      	ldrh	r1, [r0, #2]
 801d7fa:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d7fe:	f1be 0f00 	cmp.w	lr, #0
 801d802:	d00b      	beq.n	801d81c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801d804:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801d808:	3b01      	subs	r3, #1
 801d80a:	005b      	lsls	r3, r3, #1
 801d80c:	3302      	adds	r3, #2
 801d80e:	eb00 0b03 	add.w	fp, r0, r3
 801d812:	5ac3      	ldrh	r3, [r0, r3]
 801d814:	930a      	str	r3, [sp, #40]	; 0x28
 801d816:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d81a:	930b      	str	r3, [sp, #44]	; 0x2c
 801d81c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801d820:	fb12 f30e 	smulbb	r3, r2, lr
 801d824:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d828:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d82c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d830:	10db      	asrs	r3, r3, #3
 801d832:	ea40 000c 	orr.w	r0, r0, ip
 801d836:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d83a:	f1ce 0c10 	rsb	ip, lr, #16
 801d83e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d842:	ebac 0c02 	sub.w	ip, ip, r2
 801d846:	ea4b 0101 	orr.w	r1, fp, r1
 801d84a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d84e:	4351      	muls	r1, r2
 801d850:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d852:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d856:	fb0c 1c00 	mla	ip, ip, r0, r1
 801d85a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d85e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801d862:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d864:	990a      	ldr	r1, [sp, #40]	; 0x28
 801d866:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d86a:	0412      	lsls	r2, r2, #16
 801d86c:	ea4b 0000 	orr.w	r0, fp, r0
 801d870:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d874:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801d878:	fb03 c000 	mla	r0, r3, r0, ip
 801d87c:	ea42 0b0b 	orr.w	fp, r2, fp
 801d880:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d884:	fb03 000b 	mla	r0, r3, fp, r0
 801d888:	0d43      	lsrs	r3, r0, #21
 801d88a:	0940      	lsrs	r0, r0, #5
 801d88c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d890:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d894:	4318      	orrs	r0, r3
 801d896:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801d898:	f82a 0b02 	strh.w	r0, [sl], #2
 801d89c:	441c      	add	r4, r3
 801d89e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d8a0:	f109 39ff 	add.w	r9, r9, #4294967295
 801d8a4:	441e      	add	r6, r3
 801d8a6:	e73c      	b.n	801d722 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801d8a8:	b00f      	add	sp, #60	; 0x3c
 801d8aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d8ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801d8ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d8b2:	b085      	sub	sp, #20
 801d8b4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801d8b8:	9102      	str	r1, [sp, #8]
 801d8ba:	2c00      	cmp	r4, #0
 801d8bc:	fb04 7103 	mla	r1, r4, r3, r7
 801d8c0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801d8c4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801d8c8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801d8cc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801d8d0:	f2c0 811b 	blt.w	801db0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d8d4:	45a6      	cmp	lr, r4
 801d8d6:	f340 8118 	ble.w	801db0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d8da:	2f00      	cmp	r7, #0
 801d8dc:	f2c0 8113 	blt.w	801db06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d8e0:	42bb      	cmp	r3, r7
 801d8e2:	f340 8110 	ble.w	801db06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d8e6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801d8ea:	1c7a      	adds	r2, r7, #1
 801d8ec:	f100 8110 	bmi.w	801db10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801d8f0:	4293      	cmp	r3, r2
 801d8f2:	f340 810d 	ble.w	801db10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801d8f6:	2e00      	cmp	r6, #0
 801d8f8:	f000 810c 	beq.w	801db14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801d8fc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801d900:	3401      	adds	r4, #1
 801d902:	f100 810b 	bmi.w	801db1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801d906:	45a6      	cmp	lr, r4
 801d908:	f340 8108 	ble.w	801db1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801d90c:	2800      	cmp	r0, #0
 801d90e:	f000 8108 	beq.w	801db22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801d912:	2f00      	cmp	r7, #0
 801d914:	f2c0 8100 	blt.w	801db18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801d918:	42bb      	cmp	r3, r7
 801d91a:	f340 80fd 	ble.w	801db18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801d91e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d922:	3701      	adds	r7, #1
 801d924:	f100 8100 	bmi.w	801db28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801d928:	42bb      	cmp	r3, r7
 801d92a:	f340 80fd 	ble.w	801db28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801d92e:	2e00      	cmp	r6, #0
 801d930:	f000 80fc 	beq.w	801db2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801d934:	3301      	adds	r3, #1
 801d936:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801d93a:	b2b6      	uxth	r6, r6
 801d93c:	b280      	uxth	r0, r0
 801d93e:	fb00 fe06 	mul.w	lr, r0, r6
 801d942:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801d946:	0136      	lsls	r6, r6, #4
 801d948:	eba6 070e 	sub.w	r7, r6, lr
 801d94c:	b280      	uxth	r0, r0
 801d94e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801d952:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801d956:	b2bf      	uxth	r7, r7
 801d958:	1a1b      	subs	r3, r3, r0
 801d95a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801d95e:	b29b      	uxth	r3, r3
 801d960:	fb0a f607 	mul.w	r6, sl, r7
 801d964:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d968:	fb0b 6603 	mla	r6, fp, r3, r6
 801d96c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801d970:	fb00 6609 	mla	r6, r0, r9, r6
 801d974:	fb0e 6608 	mla	r6, lr, r8, r6
 801d978:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d97c:	9600      	str	r6, [sp, #0]
 801d97e:	2e00      	cmp	r6, #0
 801d980:	f000 80be 	beq.w	801db00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801d984:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801d988:	fb0b fc0c 	mul.w	ip, fp, ip
 801d98c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801d990:	fb0b f505 	mul.w	r5, fp, r5
 801d994:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801d998:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801d99c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d9a0:	44dc      	add	ip, fp
 801d9a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d9a6:	9501      	str	r5, [sp, #4]
 801d9a8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801d9ac:	9503      	str	r5, [sp, #12]
 801d9ae:	9d01      	ldr	r5, [sp, #4]
 801d9b0:	9e02      	ldr	r6, [sp, #8]
 801d9b2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801d9b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d9ba:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801d9be:	fb0a fc0c 	mul.w	ip, sl, ip
 801d9c2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801d9c6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801d9ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801d9ce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801d9d2:	4465      	add	r5, ip
 801d9d4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801d9d8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801d9dc:	fb09 fc0c 	mul.w	ip, r9, ip
 801d9e0:	fb09 f904 	mul.w	r9, r9, r4
 801d9e4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801d9e8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801d9ec:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801d9f0:	fb08 f404 	mul.w	r4, r8, r4
 801d9f4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801d9f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801d9fc:	fb08 f802 	mul.w	r8, r8, r2
 801da00:	fb0a fa01 	mul.w	sl, sl, r1
 801da04:	0a22      	lsrs	r2, r4, #8
 801da06:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801da0a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801da0e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801da12:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801da16:	4414      	add	r4, r2
 801da18:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801da1c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801da20:	0a2d      	lsrs	r5, r5, #8
 801da22:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801da26:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801da2a:	9a03      	ldr	r2, [sp, #12]
 801da2c:	8836      	ldrh	r6, [r6, #0]
 801da2e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801da32:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801da36:	437d      	muls	r5, r7
 801da38:	4461      	add	r1, ip
 801da3a:	0a24      	lsrs	r4, r4, #8
 801da3c:	fb02 5503 	mla	r5, r2, r3, r5
 801da40:	0a09      	lsrs	r1, r1, #8
 801da42:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801da46:	fb04 540e 	mla	r4, r4, lr, r5
 801da4a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801da4e:	fb01 4100 	mla	r1, r1, r0, r4
 801da52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801da56:	0a09      	lsrs	r1, r1, #8
 801da58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801da5c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801da60:	fb07 f70a 	mul.w	r7, r7, sl
 801da64:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801da68:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801da6c:	fb03 7101 	mla	r1, r3, r1, r7
 801da70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801da74:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801da78:	fb0e 1e08 	mla	lr, lr, r8, r1
 801da7c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801da80:	fb00 e101 	mla	r1, r0, r1, lr
 801da84:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801da88:	9a00      	ldr	r2, [sp, #0]
 801da8a:	b287      	uxth	r7, r0
 801da8c:	437a      	muls	r2, r7
 801da8e:	0a09      	lsrs	r1, r1, #8
 801da90:	1c53      	adds	r3, r2, #1
 801da92:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801da96:	4321      	orrs	r1, r4
 801da98:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801da9c:	1235      	asrs	r5, r6, #8
 801da9e:	0c0a      	lsrs	r2, r1, #16
 801daa0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801daa4:	b2db      	uxtb	r3, r3
 801daa6:	fb12 f207 	smulbb	r2, r2, r7
 801daaa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801daae:	fb05 2503 	mla	r5, r5, r3, r2
 801dab2:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801dab6:	10f2      	asrs	r2, r6, #3
 801dab8:	b2c8      	uxtb	r0, r1
 801daba:	00f6      	lsls	r6, r6, #3
 801dabc:	fb14 f407 	smulbb	r4, r4, r7
 801dac0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801dac4:	b2f6      	uxtb	r6, r6
 801dac6:	fb10 f007 	smulbb	r0, r0, r7
 801daca:	fb02 4203 	mla	r2, r2, r3, r4
 801dace:	b2ad      	uxth	r5, r5
 801dad0:	fb06 0303 	mla	r3, r6, r3, r0
 801dad4:	b299      	uxth	r1, r3
 801dad6:	b294      	uxth	r4, r2
 801dad8:	1c6b      	adds	r3, r5, #1
 801dada:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dade:	1c62      	adds	r2, r4, #1
 801dae0:	1c4b      	adds	r3, r1, #1
 801dae2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801dae6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801daea:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801daee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801daf2:	0952      	lsrs	r2, r2, #5
 801daf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801daf8:	432b      	orrs	r3, r5
 801dafa:	4313      	orrs	r3, r2
 801dafc:	9a02      	ldr	r2, [sp, #8]
 801dafe:	8013      	strh	r3, [r2, #0]
 801db00:	b005      	add	sp, #20
 801db02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db06:	2500      	movs	r5, #0
 801db08:	e6ef      	b.n	801d8ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801db0a:	2100      	movs	r1, #0
 801db0c:	460d      	mov	r5, r1
 801db0e:	e6f7      	b.n	801d900 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801db10:	2100      	movs	r1, #0
 801db12:	e6f5      	b.n	801d900 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801db14:	4631      	mov	r1, r6
 801db16:	e6f3      	b.n	801d900 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801db18:	2400      	movs	r4, #0
 801db1a:	e702      	b.n	801d922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801db1c:	2200      	movs	r2, #0
 801db1e:	4614      	mov	r4, r2
 801db20:	e70b      	b.n	801d93a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801db22:	4602      	mov	r2, r0
 801db24:	4604      	mov	r4, r0
 801db26:	e708      	b.n	801d93a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801db28:	2200      	movs	r2, #0
 801db2a:	e706      	b.n	801d93a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801db2c:	4632      	mov	r2, r6
 801db2e:	e704      	b.n	801d93a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801db30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801db30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db34:	b09d      	sub	sp, #116	; 0x74
 801db36:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801db3a:	9219      	str	r2, [sp, #100]	; 0x64
 801db3c:	9307      	str	r3, [sp, #28]
 801db3e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801db40:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801db44:	931a      	str	r3, [sp, #104]	; 0x68
 801db46:	9117      	str	r1, [sp, #92]	; 0x5c
 801db48:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801db4c:	901b      	str	r0, [sp, #108]	; 0x6c
 801db4e:	6850      	ldr	r0, [r2, #4]
 801db50:	6812      	ldr	r2, [r2, #0]
 801db52:	fb00 1303 	mla	r3, r0, r3, r1
 801db56:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801db5a:	930a      	str	r3, [sp, #40]	; 0x28
 801db5c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801db5e:	681b      	ldr	r3, [r3, #0]
 801db60:	9310      	str	r3, [sp, #64]	; 0x40
 801db62:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801db66:	930b      	str	r3, [sp, #44]	; 0x2c
 801db68:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801db6a:	2b00      	cmp	r3, #0
 801db6c:	dc03      	bgt.n	801db76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801db6e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801db70:	2b00      	cmp	r3, #0
 801db72:	f340 8375 	ble.w	801e260 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801db76:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801db78:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801db7c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801db80:	1e48      	subs	r0, r1, #1
 801db82:	1e57      	subs	r7, r2, #1
 801db84:	9b07      	ldr	r3, [sp, #28]
 801db86:	2b00      	cmp	r3, #0
 801db88:	f340 818e 	ble.w	801dea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801db8c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801db90:	ea4f 4326 	mov.w	r3, r6, asr #16
 801db94:	d406      	bmi.n	801dba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801db96:	4584      	cmp	ip, r0
 801db98:	da04      	bge.n	801dba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801db9a:	2b00      	cmp	r3, #0
 801db9c:	db02      	blt.n	801dba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801db9e:	42bb      	cmp	r3, r7
 801dba0:	f2c0 8183 	blt.w	801deaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801dba4:	f11c 0c01 	adds.w	ip, ip, #1
 801dba8:	f100 8173 	bmi.w	801de92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbac:	4561      	cmp	r1, ip
 801dbae:	f2c0 8170 	blt.w	801de92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbb2:	3301      	adds	r3, #1
 801dbb4:	f100 816d 	bmi.w	801de92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbb8:	429a      	cmp	r2, r3
 801dbba:	f2c0 816a 	blt.w	801de92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dbbe:	9b07      	ldr	r3, [sp, #28]
 801dbc0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801dbc2:	9318      	str	r3, [sp, #96]	; 0x60
 801dbc4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dbc6:	2b00      	cmp	r3, #0
 801dbc8:	f340 818c 	ble.w	801dee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801dbcc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801dbce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dbd0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801dbd4:	689b      	ldr	r3, [r3, #8]
 801dbd6:	1422      	asrs	r2, r4, #16
 801dbd8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801dbdc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801dbe0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801dbe4:	f100 81cd 	bmi.w	801df82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dbe8:	f103 38ff 	add.w	r8, r3, #4294967295
 801dbec:	4542      	cmp	r2, r8
 801dbee:	f280 81c8 	bge.w	801df82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dbf2:	f1bc 0f00 	cmp.w	ip, #0
 801dbf6:	f2c0 81c4 	blt.w	801df82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dbfa:	f10e 38ff 	add.w	r8, lr, #4294967295
 801dbfe:	45c4      	cmp	ip, r8
 801dc00:	f280 81bf 	bge.w	801df82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801dc04:	b21b      	sxth	r3, r3
 801dc06:	fb0c 2203 	mla	r2, ip, r3, r2
 801dc0a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dc0c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801dc10:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801dc14:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801dc18:	2800      	cmp	r0, #0
 801dc1a:	f000 81a9 	beq.w	801df70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801dc1e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801dc22:	950c      	str	r5, [sp, #48]	; 0x30
 801dc24:	0e2d      	lsrs	r5, r5, #24
 801dc26:	9513      	str	r5, [sp, #76]	; 0x4c
 801dc28:	b181      	cbz	r1, 801dc4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801dc2a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801dc2e:	3b01      	subs	r3, #1
 801dc30:	009b      	lsls	r3, r3, #2
 801dc32:	3304      	adds	r3, #4
 801dc34:	eb08 0c03 	add.w	ip, r8, r3
 801dc38:	f858 3003 	ldr.w	r3, [r8, r3]
 801dc3c:	9308      	str	r3, [sp, #32]
 801dc3e:	0e1b      	lsrs	r3, r3, #24
 801dc40:	9311      	str	r3, [sp, #68]	; 0x44
 801dc42:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801dc46:	930d      	str	r3, [sp, #52]	; 0x34
 801dc48:	0e1b      	lsrs	r3, r3, #24
 801dc4a:	9314      	str	r3, [sp, #80]	; 0x50
 801dc4c:	b280      	uxth	r0, r0
 801dc4e:	b289      	uxth	r1, r1
 801dc50:	fb00 f901 	mul.w	r9, r0, r1
 801dc54:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dc58:	0100      	lsls	r0, r0, #4
 801dc5a:	eba0 0809 	sub.w	r8, r0, r9
 801dc5e:	b289      	uxth	r1, r1
 801dc60:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801dc64:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dc66:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dc68:	fa1f f888 	uxth.w	r8, r8
 801dc6c:	1a5b      	subs	r3, r3, r1
 801dc6e:	b29b      	uxth	r3, r3
 801dc70:	fb08 f000 	mul.w	r0, r8, r0
 801dc74:	fb03 000e 	mla	r0, r3, lr, r0
 801dc78:	fb01 0005 	mla	r0, r1, r5, r0
 801dc7c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dc7e:	fb09 0005 	mla	r0, r9, r5, r0
 801dc82:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801dc86:	2800      	cmp	r0, #0
 801dc88:	f000 80fa 	beq.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801dc8c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801dc90:	d01b      	beq.n	801dcca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801dc92:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801dc96:	fb0e fa0a 	mul.w	sl, lr, sl
 801dc9a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dc9e:	fb0e fe02 	mul.w	lr, lr, r2
 801dca2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801dca6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dcaa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801dcae:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801dcb2:	4452      	add	r2, sl
 801dcb4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801dcb8:	0a12      	lsrs	r2, r2, #8
 801dcba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dcbe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801dcc2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801dcc6:	ea42 020c 	orr.w	r2, r2, ip
 801dcca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801dccc:	2dff      	cmp	r5, #255	; 0xff
 801dcce:	d021      	beq.n	801dd14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801dcd0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dcd2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801dcd6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801dcd8:	fb05 fb0b 	mul.w	fp, r5, fp
 801dcdc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801dcde:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dce2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801dce4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dce8:	fb05 fa0a 	mul.w	sl, r5, sl
 801dcec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dcf0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dcf4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dcf8:	44de      	add	lr, fp
 801dcfa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dcfe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dd02:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dd0a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd0e:	ea4e 050a 	orr.w	r5, lr, sl
 801dd12:	950c      	str	r5, [sp, #48]	; 0x30
 801dd14:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd16:	2dff      	cmp	r5, #255	; 0xff
 801dd18:	d021      	beq.n	801dd5e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801dd1a:	9d08      	ldr	r5, [sp, #32]
 801dd1c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801dd20:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd22:	fb05 fb0b 	mul.w	fp, r5, fp
 801dd26:	9d08      	ldr	r5, [sp, #32]
 801dd28:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dd2c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801dd2e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dd32:	fb05 fa0a 	mul.w	sl, r5, sl
 801dd36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dd3a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dd3e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dd42:	44de      	add	lr, fp
 801dd44:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dd48:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dd4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd50:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dd54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dd58:	ea4e 050a 	orr.w	r5, lr, sl
 801dd5c:	9508      	str	r5, [sp, #32]
 801dd5e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dd60:	2dff      	cmp	r5, #255	; 0xff
 801dd62:	d021      	beq.n	801dda8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801dd64:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dd66:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801dd6a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dd6c:	fb05 fb0b 	mul.w	fp, r5, fp
 801dd70:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801dd72:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801dd76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801dd78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801dd7c:	fb05 fa0a 	mul.w	sl, r5, sl
 801dd80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dd84:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801dd88:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801dd8c:	44de      	add	lr, fp
 801dd8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801dd92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dd96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dd9a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801dd9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dda2:	ea4e 050a 	orr.w	r5, lr, sl
 801dda6:	950d      	str	r5, [sp, #52]	; 0x34
 801dda8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ddaa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ddae:	9d08      	ldr	r5, [sp, #32]
 801ddb0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ddb4:	fb08 fc0c 	mul.w	ip, r8, ip
 801ddb8:	fb03 cc0e 	mla	ip, r3, lr, ip
 801ddbc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ddc0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ddc2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ddc6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ddca:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ddcc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ddd0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ddd4:	fb08 f80e 	mul.w	r8, r8, lr
 801ddd8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801dddc:	fb03 8202 	mla	r2, r3, r2, r8
 801dde0:	9b08      	ldr	r3, [sp, #32]
 801dde2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801dde4:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801dde8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ddea:	fb01 220a 	mla	r2, r1, sl, r2
 801ddee:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801ddf2:	fb09 2901 	mla	r9, r9, r1, r2
 801ddf6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ddf8:	883b      	ldrh	r3, [r7, #0]
 801ddfa:	4342      	muls	r2, r0
 801ddfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de00:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801de04:	1c50      	adds	r0, r2, #1
 801de06:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801de0a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801de0e:	ea4c 0c09 	orr.w	ip, ip, r9
 801de12:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801de16:	1219      	asrs	r1, r3, #8
 801de18:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801de1c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801de20:	b2c0      	uxtb	r0, r0
 801de22:	fb12 f205 	smulbb	r2, r2, r5
 801de26:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801de2a:	fb01 2100 	mla	r1, r1, r0, r2
 801de2e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801de32:	10da      	asrs	r2, r3, #3
 801de34:	fa5f fc8c 	uxtb.w	ip, ip
 801de38:	00db      	lsls	r3, r3, #3
 801de3a:	fb1c fc05 	smulbb	ip, ip, r5
 801de3e:	b2db      	uxtb	r3, r3
 801de40:	b289      	uxth	r1, r1
 801de42:	fb03 c300 	mla	r3, r3, r0, ip
 801de46:	fa1f fc83 	uxth.w	ip, r3
 801de4a:	1c4b      	adds	r3, r1, #1
 801de4c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801de50:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801de54:	fb1e fe05 	smulbb	lr, lr, r5
 801de58:	f10c 0301 	add.w	r3, ip, #1
 801de5c:	fb02 e200 	mla	r2, r2, r0, lr
 801de60:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801de64:	b292      	uxth	r2, r2
 801de66:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801de6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801de6e:	430b      	orrs	r3, r1
 801de70:	1c51      	adds	r1, r2, #1
 801de72:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801de76:	0952      	lsrs	r2, r2, #5
 801de78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de7c:	4313      	orrs	r3, r2
 801de7e:	803b      	strh	r3, [r7, #0]
 801de80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801de82:	441c      	add	r4, r3
 801de84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de86:	441e      	add	r6, r3
 801de88:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801de8a:	3b01      	subs	r3, #1
 801de8c:	3702      	adds	r7, #2
 801de8e:	9318      	str	r3, [sp, #96]	; 0x60
 801de90:	e698      	b.n	801dbc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801de92:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801de94:	441c      	add	r4, r3
 801de96:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801de98:	441e      	add	r6, r3
 801de9a:	9b07      	ldr	r3, [sp, #28]
 801de9c:	3b01      	subs	r3, #1
 801de9e:	9307      	str	r3, [sp, #28]
 801dea0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dea2:	3302      	adds	r3, #2
 801dea4:	930a      	str	r3, [sp, #40]	; 0x28
 801dea6:	e66d      	b.n	801db84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801dea8:	d023      	beq.n	801def2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801deaa:	9b07      	ldr	r3, [sp, #28]
 801deac:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801deae:	3b01      	subs	r3, #1
 801deb0:	fb00 4003 	mla	r0, r0, r3, r4
 801deb4:	1400      	asrs	r0, r0, #16
 801deb6:	f53f ae82 	bmi.w	801dbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801deba:	3901      	subs	r1, #1
 801debc:	4288      	cmp	r0, r1
 801debe:	f6bf ae7e 	bge.w	801dbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dec2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801dec4:	fb01 6303 	mla	r3, r1, r3, r6
 801dec8:	141b      	asrs	r3, r3, #16
 801deca:	f53f ae78 	bmi.w	801dbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dece:	3a01      	subs	r2, #1
 801ded0:	4293      	cmp	r3, r2
 801ded2:	f6bf ae74 	bge.w	801dbbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ded6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801deda:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801dede:	f1bb 0f00 	cmp.w	fp, #0
 801dee2:	dc6c      	bgt.n	801dfbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801dee4:	9b07      	ldr	r3, [sp, #28]
 801dee6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801deea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801deec:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801def0:	930a      	str	r3, [sp, #40]	; 0x28
 801def2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801def4:	2b00      	cmp	r3, #0
 801def6:	f340 81b3 	ble.w	801e260 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801defa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801defe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801df02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801df06:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801df08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801df10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801df14:	eef0 6a62 	vmov.f32	s13, s5
 801df18:	ee61 7a27 	vmul.f32	s15, s2, s15
 801df1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801df20:	ee77 2a62 	vsub.f32	s5, s14, s5
 801df24:	ee16 4a90 	vmov	r4, s13
 801df28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801df2c:	eef0 6a43 	vmov.f32	s13, s6
 801df30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801df34:	ee12 2a90 	vmov	r2, s5
 801df38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801df3c:	fb92 f3f3 	sdiv	r3, r2, r3
 801df40:	ee13 2a10 	vmov	r2, s6
 801df44:	9329      	str	r3, [sp, #164]	; 0xa4
 801df46:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801df48:	fb92 f3f3 	sdiv	r3, r2, r3
 801df4c:	932a      	str	r3, [sp, #168]	; 0xa8
 801df4e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801df50:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801df52:	3b01      	subs	r3, #1
 801df54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801df58:	9317      	str	r3, [sp, #92]	; 0x5c
 801df5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801df5c:	bf08      	it	eq
 801df5e:	4613      	moveq	r3, r2
 801df60:	ee16 6a90 	vmov	r6, s13
 801df64:	9307      	str	r3, [sp, #28]
 801df66:	eeb0 3a67 	vmov.f32	s6, s15
 801df6a:	eef0 2a47 	vmov.f32	s5, s14
 801df6e:	e5fb      	b.n	801db68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801df70:	2900      	cmp	r1, #0
 801df72:	f43f ae6b 	beq.w	801dc4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801df76:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801df7a:	9308      	str	r3, [sp, #32]
 801df7c:	0e1b      	lsrs	r3, r3, #24
 801df7e:	9311      	str	r3, [sp, #68]	; 0x44
 801df80:	e664      	b.n	801dc4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801df82:	f112 0801 	adds.w	r8, r2, #1
 801df86:	f53f af7b 	bmi.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801df8a:	4543      	cmp	r3, r8
 801df8c:	f6ff af78 	blt.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801df90:	f11c 0801 	adds.w	r8, ip, #1
 801df94:	f53f af74 	bmi.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801df98:	45c6      	cmp	lr, r8
 801df9a:	f6ff af71 	blt.w	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801df9e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801dfa0:	9201      	str	r2, [sp, #4]
 801dfa2:	fa0f f28e 	sxth.w	r2, lr
 801dfa6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801dfaa:	e9cd c002 	strd	ip, r0, [sp, #8]
 801dfae:	9200      	str	r2, [sp, #0]
 801dfb0:	b21b      	sxth	r3, r3
 801dfb2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dfb4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801dfb6:	4639      	mov	r1, r7
 801dfb8:	f7ff fc79 	bl	801d8ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801dfbc:	e760      	b.n	801de80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801dfbe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dfc0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801dfc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dfc6:	1427      	asrs	r7, r4, #16
 801dfc8:	1433      	asrs	r3, r6, #16
 801dfca:	fb01 7303 	mla	r3, r1, r3, r7
 801dfce:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801dfd2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801dfd6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dfda:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801dfde:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801dfe2:	2a00      	cmp	r2, #0
 801dfe4:	f000 8133 	beq.w	801e24e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801dfe8:	687d      	ldr	r5, [r7, #4]
 801dfea:	950e      	str	r5, [sp, #56]	; 0x38
 801dfec:	0e2d      	lsrs	r5, r5, #24
 801dfee:	9515      	str	r5, [sp, #84]	; 0x54
 801dff0:	b178      	cbz	r0, 801e012 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801dff2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801dff6:	3901      	subs	r1, #1
 801dff8:	0089      	lsls	r1, r1, #2
 801dffa:	3104      	adds	r1, #4
 801dffc:	eb07 0e01 	add.w	lr, r7, r1
 801e000:	5879      	ldr	r1, [r7, r1]
 801e002:	9109      	str	r1, [sp, #36]	; 0x24
 801e004:	0e09      	lsrs	r1, r1, #24
 801e006:	9112      	str	r1, [sp, #72]	; 0x48
 801e008:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e00c:	910f      	str	r1, [sp, #60]	; 0x3c
 801e00e:	0e09      	lsrs	r1, r1, #24
 801e010:	9116      	str	r1, [sp, #88]	; 0x58
 801e012:	b292      	uxth	r2, r2
 801e014:	b280      	uxth	r0, r0
 801e016:	fb02 f800 	mul.w	r8, r2, r0
 801e01a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e01e:	0112      	lsls	r2, r2, #4
 801e020:	eba2 0e08 	sub.w	lr, r2, r8
 801e024:	b280      	uxth	r0, r0
 801e026:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e02a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e02c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e02e:	fa1f fe8e 	uxth.w	lr, lr
 801e032:	1a12      	subs	r2, r2, r0
 801e034:	b292      	uxth	r2, r2
 801e036:	fb0e f101 	mul.w	r1, lr, r1
 801e03a:	fb02 110c 	mla	r1, r2, ip, r1
 801e03e:	fb00 1105 	mla	r1, r0, r5, r1
 801e042:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e044:	fb08 1105 	mla	r1, r8, r5, r1
 801e048:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e04c:	2900      	cmp	r1, #0
 801e04e:	f000 80f5 	beq.w	801e23c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e052:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e056:	d019      	beq.n	801e08c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e058:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e05c:	fb0c fa0a 	mul.w	sl, ip, sl
 801e060:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e064:	fb0c fc03 	mul.w	ip, ip, r3
 801e068:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e06c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e070:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e074:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e078:	4453      	add	r3, sl
 801e07a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e07e:	0a1b      	lsrs	r3, r3, #8
 801e080:	0a3f      	lsrs	r7, r7, #8
 801e082:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e086:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e08a:	433b      	orrs	r3, r7
 801e08c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e08e:	2dff      	cmp	r5, #255	; 0xff
 801e090:	d020      	beq.n	801e0d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e092:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e094:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e098:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e09a:	436f      	muls	r7, r5
 801e09c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e09e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e0a2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e0a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e0a8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e0ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e0b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e0b4:	44bc      	add	ip, r7
 801e0b6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e0ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e0be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e0c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e0c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e0ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e0ce:	ea4c 050a 	orr.w	r5, ip, sl
 801e0d2:	950e      	str	r5, [sp, #56]	; 0x38
 801e0d4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e0d6:	2dff      	cmp	r5, #255	; 0xff
 801e0d8:	d020      	beq.n	801e11c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e0da:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e0dc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e0e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e0e2:	436f      	muls	r7, r5
 801e0e4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e0e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e0ea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e0ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e0f0:	fb05 fa0a 	mul.w	sl, r5, sl
 801e0f4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e0f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e0fc:	44bc      	add	ip, r7
 801e0fe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e102:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e106:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e10a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e10e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e112:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e116:	ea4c 050a 	orr.w	r5, ip, sl
 801e11a:	9509      	str	r5, [sp, #36]	; 0x24
 801e11c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e11e:	2dff      	cmp	r5, #255	; 0xff
 801e120:	d020      	beq.n	801e164 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e122:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e124:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e128:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e12a:	436f      	muls	r7, r5
 801e12c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e12e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e132:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e134:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e138:	fb05 fa0a 	mul.w	sl, r5, sl
 801e13c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e140:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e144:	44bc      	add	ip, r7
 801e146:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e14a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e14e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e152:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e156:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e15a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e15e:	ea4c 050a 	orr.w	r5, ip, sl
 801e162:	950f      	str	r5, [sp, #60]	; 0x3c
 801e164:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e166:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e16a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e16c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e170:	fb0e f707 	mul.w	r7, lr, r7
 801e174:	fb02 770c 	mla	r7, r2, ip, r7
 801e178:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e17c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e17e:	fb00 770c 	mla	r7, r0, ip, r7
 801e182:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e186:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e188:	fb08 770c 	mla	r7, r8, ip, r7
 801e18c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e190:	fb0e fe0c 	mul.w	lr, lr, ip
 801e194:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e198:	fb02 e303 	mla	r3, r2, r3, lr
 801e19c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e19e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e1a0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e1a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e1a6:	fb00 330a 	mla	r3, r0, sl, r3
 801e1aa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e1ae:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e1b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e1b4:	f8b9 0000 	ldrh.w	r0, [r9]
 801e1b8:	4359      	muls	r1, r3
 801e1ba:	0a3f      	lsrs	r7, r7, #8
 801e1bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e1c0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e1c4:	1c4b      	adds	r3, r1, #1
 801e1c6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e1ca:	ea47 070c 	orr.w	r7, r7, ip
 801e1ce:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e1d2:	1202      	asrs	r2, r0, #8
 801e1d4:	0c3b      	lsrs	r3, r7, #16
 801e1d6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e1da:	b2c9      	uxtb	r1, r1
 801e1dc:	fb13 f305 	smulbb	r3, r3, r5
 801e1e0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e1e4:	fb02 3201 	mla	r2, r2, r1, r3
 801e1e8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e1ec:	10c3      	asrs	r3, r0, #3
 801e1ee:	b2ff      	uxtb	r7, r7
 801e1f0:	00c0      	lsls	r0, r0, #3
 801e1f2:	b2c0      	uxtb	r0, r0
 801e1f4:	fb17 f705 	smulbb	r7, r7, r5
 801e1f8:	fb00 7001 	mla	r0, r0, r1, r7
 801e1fc:	b292      	uxth	r2, r2
 801e1fe:	fb1c fc05 	smulbb	ip, ip, r5
 801e202:	b280      	uxth	r0, r0
 801e204:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e208:	fb03 c301 	mla	r3, r3, r1, ip
 801e20c:	1c51      	adds	r1, r2, #1
 801e20e:	f100 0c01 	add.w	ip, r0, #1
 801e212:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e216:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e21a:	b29b      	uxth	r3, r3
 801e21c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e220:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e224:	ea4c 0202 	orr.w	r2, ip, r2
 801e228:	f103 0c01 	add.w	ip, r3, #1
 801e22c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e230:	095b      	lsrs	r3, r3, #5
 801e232:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e236:	431a      	orrs	r2, r3
 801e238:	f8a9 2000 	strh.w	r2, [r9]
 801e23c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e23e:	441c      	add	r4, r3
 801e240:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e242:	f109 0902 	add.w	r9, r9, #2
 801e246:	441e      	add	r6, r3
 801e248:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e24c:	e647      	b.n	801dede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e24e:	2800      	cmp	r0, #0
 801e250:	f43f aedf 	beq.w	801e012 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e254:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e258:	9109      	str	r1, [sp, #36]	; 0x24
 801e25a:	0e09      	lsrs	r1, r1, #24
 801e25c:	9112      	str	r1, [sp, #72]	; 0x48
 801e25e:	e6d8      	b.n	801e012 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e260:	b01d      	add	sp, #116	; 0x74
 801e262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e266 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e26a:	b085      	sub	sp, #20
 801e26c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e270:	9102      	str	r1, [sp, #8]
 801e272:	2c00      	cmp	r4, #0
 801e274:	fb04 7103 	mla	r1, r4, r3, r7
 801e278:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e27c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e280:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e284:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e288:	f2c0 810c 	blt.w	801e4a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e28c:	45a6      	cmp	lr, r4
 801e28e:	f340 8109 	ble.w	801e4a4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e292:	2f00      	cmp	r7, #0
 801e294:	f2c0 8104 	blt.w	801e4a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e298:	42bb      	cmp	r3, r7
 801e29a:	f340 8101 	ble.w	801e4a0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e29e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e2a2:	1c7a      	adds	r2, r7, #1
 801e2a4:	f100 8101 	bmi.w	801e4aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e2a8:	4293      	cmp	r3, r2
 801e2aa:	f340 80fe 	ble.w	801e4aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e2ae:	2e00      	cmp	r6, #0
 801e2b0:	f000 80fd 	beq.w	801e4ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e2b4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e2b8:	3401      	adds	r4, #1
 801e2ba:	f100 80fc 	bmi.w	801e4b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e2be:	45a6      	cmp	lr, r4
 801e2c0:	f340 80f9 	ble.w	801e4b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e2c4:	2800      	cmp	r0, #0
 801e2c6:	f000 80f9 	beq.w	801e4bc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e2ca:	2f00      	cmp	r7, #0
 801e2cc:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e2d0:	f2c0 80ef 	blt.w	801e4b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e2d4:	42bb      	cmp	r3, r7
 801e2d6:	f340 80ec 	ble.w	801e4b2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e2da:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e2de:	3701      	adds	r7, #1
 801e2e0:	f100 80ef 	bmi.w	801e4c2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e2e4:	42bb      	cmp	r3, r7
 801e2e6:	f340 80ec 	ble.w	801e4c2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e2ea:	2e00      	cmp	r6, #0
 801e2ec:	f000 80eb 	beq.w	801e4c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e2f0:	6852      	ldr	r2, [r2, #4]
 801e2f2:	b2b6      	uxth	r6, r6
 801e2f4:	b280      	uxth	r0, r0
 801e2f6:	fb00 fe06 	mul.w	lr, r0, r6
 801e2fa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e2fe:	0136      	lsls	r6, r6, #4
 801e300:	eba6 070e 	sub.w	r7, r6, lr
 801e304:	b280      	uxth	r0, r0
 801e306:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e30a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e30e:	b2bf      	uxth	r7, r7
 801e310:	1a1b      	subs	r3, r3, r0
 801e312:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e316:	b29b      	uxth	r3, r3
 801e318:	fb07 f60a 	mul.w	r6, r7, sl
 801e31c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e320:	fb0b 6603 	mla	r6, fp, r3, r6
 801e324:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e328:	fb00 6609 	mla	r6, r0, r9, r6
 801e32c:	fb0e 6608 	mla	r6, lr, r8, r6
 801e330:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e334:	9600      	str	r6, [sp, #0]
 801e336:	2e00      	cmp	r6, #0
 801e338:	f000 80af 	beq.w	801e49a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e33c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e340:	fb0b fc0c 	mul.w	ip, fp, ip
 801e344:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e348:	fb0b f505 	mul.w	r5, fp, r5
 801e34c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e350:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e354:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e358:	44dc      	add	ip, fp
 801e35a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e35e:	9501      	str	r5, [sp, #4]
 801e360:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e364:	9503      	str	r5, [sp, #12]
 801e366:	9d01      	ldr	r5, [sp, #4]
 801e368:	9e02      	ldr	r6, [sp, #8]
 801e36a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e36e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e372:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e376:	fb0a fc0c 	mul.w	ip, sl, ip
 801e37a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e37e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e382:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e386:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e38a:	4465      	add	r5, ip
 801e38c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e390:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e394:	fb09 fc0c 	mul.w	ip, r9, ip
 801e398:	fb09 f904 	mul.w	r9, r9, r4
 801e39c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e3a0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e3a4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e3a8:	fb08 f404 	mul.w	r4, r8, r4
 801e3ac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e3b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e3b4:	fb08 f802 	mul.w	r8, r8, r2
 801e3b8:	fb0a fa01 	mul.w	sl, sl, r1
 801e3bc:	0a22      	lsrs	r2, r4, #8
 801e3be:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e3c2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e3c6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e3ca:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e3ce:	4414      	add	r4, r2
 801e3d0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e3d4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e3d8:	0a2d      	lsrs	r5, r5, #8
 801e3da:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e3de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e3e2:	9a03      	ldr	r2, [sp, #12]
 801e3e4:	8836      	ldrh	r6, [r6, #0]
 801e3e6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e3ea:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e3ee:	437d      	muls	r5, r7
 801e3f0:	4461      	add	r1, ip
 801e3f2:	0a24      	lsrs	r4, r4, #8
 801e3f4:	fb02 5503 	mla	r5, r2, r3, r5
 801e3f8:	0a09      	lsrs	r1, r1, #8
 801e3fa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e3fe:	fb04 540e 	mla	r4, r4, lr, r5
 801e402:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e406:	fb01 4100 	mla	r1, r1, r0, r4
 801e40a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e40e:	0a09      	lsrs	r1, r1, #8
 801e410:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e414:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e418:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e41c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e420:	fb07 f70a 	mul.w	r7, r7, sl
 801e424:	fb03 7101 	mla	r1, r3, r1, r7
 801e428:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e42c:	9b00      	ldr	r3, [sp, #0]
 801e42e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e432:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e436:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e43a:	fb00 e101 	mla	r1, r0, r1, lr
 801e43e:	43da      	mvns	r2, r3
 801e440:	1233      	asrs	r3, r6, #8
 801e442:	b2d2      	uxtb	r2, r2
 801e444:	10f0      	asrs	r0, r6, #3
 801e446:	0a09      	lsrs	r1, r1, #8
 801e448:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e44c:	00f6      	lsls	r6, r6, #3
 801e44e:	4353      	muls	r3, r2
 801e450:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e454:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e458:	b2f6      	uxtb	r6, r6
 801e45a:	4321      	orrs	r1, r4
 801e45c:	4350      	muls	r0, r2
 801e45e:	4356      	muls	r6, r2
 801e460:	1c5a      	adds	r2, r3, #1
 801e462:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e466:	0c0b      	lsrs	r3, r1, #16
 801e468:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e46c:	1c42      	adds	r2, r0, #1
 801e46e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e472:	0a0a      	lsrs	r2, r1, #8
 801e474:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e478:	021b      	lsls	r3, r3, #8
 801e47a:	00d2      	lsls	r2, r2, #3
 801e47c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e480:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e484:	4313      	orrs	r3, r2
 801e486:	1c72      	adds	r2, r6, #1
 801e488:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e48c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e490:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e494:	4319      	orrs	r1, r3
 801e496:	9b02      	ldr	r3, [sp, #8]
 801e498:	8019      	strh	r1, [r3, #0]
 801e49a:	b005      	add	sp, #20
 801e49c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4a0:	2500      	movs	r5, #0
 801e4a2:	e6fe      	b.n	801e2a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e4a4:	2100      	movs	r1, #0
 801e4a6:	460d      	mov	r5, r1
 801e4a8:	e706      	b.n	801e2b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e4aa:	2100      	movs	r1, #0
 801e4ac:	e704      	b.n	801e2b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e4ae:	4631      	mov	r1, r6
 801e4b0:	e702      	b.n	801e2b8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e4b2:	2400      	movs	r4, #0
 801e4b4:	e713      	b.n	801e2de <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e4b6:	2200      	movs	r2, #0
 801e4b8:	4614      	mov	r4, r2
 801e4ba:	e71a      	b.n	801e2f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e4bc:	4602      	mov	r2, r0
 801e4be:	4604      	mov	r4, r0
 801e4c0:	e717      	b.n	801e2f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e4c2:	2200      	movs	r2, #0
 801e4c4:	e715      	b.n	801e2f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e4c6:	4632      	mov	r2, r6
 801e4c8:	e713      	b.n	801e2f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e4cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4d0:	b09b      	sub	sp, #108	; 0x6c
 801e4d2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e4d6:	9218      	str	r2, [sp, #96]	; 0x60
 801e4d8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e4da:	9116      	str	r1, [sp, #88]	; 0x58
 801e4dc:	9307      	str	r3, [sp, #28]
 801e4de:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e4e2:	9019      	str	r0, [sp, #100]	; 0x64
 801e4e4:	6850      	ldr	r0, [r2, #4]
 801e4e6:	6812      	ldr	r2, [r2, #0]
 801e4e8:	fb00 1303 	mla	r3, r0, r3, r1
 801e4ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e4f0:	930a      	str	r3, [sp, #40]	; 0x28
 801e4f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e4f4:	681b      	ldr	r3, [r3, #0]
 801e4f6:	930f      	str	r3, [sp, #60]	; 0x3c
 801e4f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e4fa:	2b00      	cmp	r3, #0
 801e4fc:	dc03      	bgt.n	801e506 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e4fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e500:	2b00      	cmp	r3, #0
 801e502:	f340 8386 	ble.w	801ec12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e506:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e508:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e50c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e510:	1e48      	subs	r0, r1, #1
 801e512:	1e57      	subs	r7, r2, #1
 801e514:	9b07      	ldr	r3, [sp, #28]
 801e516:	2b00      	cmp	r3, #0
 801e518:	f340 8166 	ble.w	801e7e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e51c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e520:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e524:	d406      	bmi.n	801e534 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e526:	4584      	cmp	ip, r0
 801e528:	da04      	bge.n	801e534 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e52a:	2b00      	cmp	r3, #0
 801e52c:	db02      	blt.n	801e534 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e52e:	42bb      	cmp	r3, r7
 801e530:	f2c0 815b 	blt.w	801e7ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e534:	f11c 0c01 	adds.w	ip, ip, #1
 801e538:	f100 814b 	bmi.w	801e7d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e53c:	4561      	cmp	r1, ip
 801e53e:	f2c0 8148 	blt.w	801e7d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e542:	3301      	adds	r3, #1
 801e544:	f100 8145 	bmi.w	801e7d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e548:	429a      	cmp	r2, r3
 801e54a:	f2c0 8142 	blt.w	801e7d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e54e:	9b07      	ldr	r3, [sp, #28]
 801e550:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e552:	9317      	str	r3, [sp, #92]	; 0x5c
 801e554:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e556:	2b00      	cmp	r3, #0
 801e558:	f340 8165 	ble.w	801e826 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e55c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e55e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e560:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e564:	689b      	ldr	r3, [r3, #8]
 801e566:	1422      	asrs	r2, r4, #16
 801e568:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e56c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e570:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e574:	f100 81d5 	bmi.w	801e922 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e578:	f103 38ff 	add.w	r8, r3, #4294967295
 801e57c:	4542      	cmp	r2, r8
 801e57e:	f280 81d0 	bge.w	801e922 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e582:	f1bc 0f00 	cmp.w	ip, #0
 801e586:	f2c0 81cc 	blt.w	801e922 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e58a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e58e:	45c4      	cmp	ip, r8
 801e590:	f280 81c7 	bge.w	801e922 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e594:	b21b      	sxth	r3, r3
 801e596:	fb0c 2203 	mla	r2, ip, r3, r2
 801e59a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e59c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e5a0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e5a4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e5a8:	2900      	cmp	r1, #0
 801e5aa:	f000 8182 	beq.w	801e8b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e5ae:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e5b2:	950b      	str	r5, [sp, #44]	; 0x2c
 801e5b4:	0e2d      	lsrs	r5, r5, #24
 801e5b6:	9512      	str	r5, [sp, #72]	; 0x48
 801e5b8:	b180      	cbz	r0, 801e5dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e5ba:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e5be:	3b01      	subs	r3, #1
 801e5c0:	009b      	lsls	r3, r3, #2
 801e5c2:	3304      	adds	r3, #4
 801e5c4:	eb08 0c03 	add.w	ip, r8, r3
 801e5c8:	f858 3003 	ldr.w	r3, [r8, r3]
 801e5cc:	9308      	str	r3, [sp, #32]
 801e5ce:	0e1b      	lsrs	r3, r3, #24
 801e5d0:	9310      	str	r3, [sp, #64]	; 0x40
 801e5d2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e5d6:	930c      	str	r3, [sp, #48]	; 0x30
 801e5d8:	0e1b      	lsrs	r3, r3, #24
 801e5da:	9313      	str	r3, [sp, #76]	; 0x4c
 801e5dc:	b289      	uxth	r1, r1
 801e5de:	b280      	uxth	r0, r0
 801e5e0:	fb01 f900 	mul.w	r9, r1, r0
 801e5e4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e5e8:	0109      	lsls	r1, r1, #4
 801e5ea:	eba1 0809 	sub.w	r8, r1, r9
 801e5ee:	b280      	uxth	r0, r0
 801e5f0:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801e5f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e5f6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e5f8:	fa1f f888 	uxth.w	r8, r8
 801e5fc:	1a09      	subs	r1, r1, r0
 801e5fe:	b289      	uxth	r1, r1
 801e600:	fb08 f303 	mul.w	r3, r8, r3
 801e604:	fb01 330e 	mla	r3, r1, lr, r3
 801e608:	fb00 3305 	mla	r3, r0, r5, r3
 801e60c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e60e:	fb09 3305 	mla	r3, r9, r5, r3
 801e612:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e616:	2b00      	cmp	r3, #0
 801e618:	f000 80d2 	beq.w	801e7c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e61c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e620:	d01b      	beq.n	801e65a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e622:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e626:	fb0e fa0a 	mul.w	sl, lr, sl
 801e62a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e62e:	fb0e fe02 	mul.w	lr, lr, r2
 801e632:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e636:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e63a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e63e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e642:	4452      	add	r2, sl
 801e644:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e648:	0a12      	lsrs	r2, r2, #8
 801e64a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e64e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e652:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e656:	ea42 020c 	orr.w	r2, r2, ip
 801e65a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e65c:	2dff      	cmp	r5, #255	; 0xff
 801e65e:	d021      	beq.n	801e6a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801e660:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e662:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e666:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e668:	fb05 fb0b 	mul.w	fp, r5, fp
 801e66c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e66e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e672:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e674:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e678:	fb05 fa0a 	mul.w	sl, r5, sl
 801e67c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e680:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e684:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e688:	44de      	add	lr, fp
 801e68a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e68e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e692:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e696:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e69a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e69e:	ea4e 050a 	orr.w	r5, lr, sl
 801e6a2:	950b      	str	r5, [sp, #44]	; 0x2c
 801e6a4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e6a6:	2dff      	cmp	r5, #255	; 0xff
 801e6a8:	d021      	beq.n	801e6ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801e6aa:	9d08      	ldr	r5, [sp, #32]
 801e6ac:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e6b0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e6b2:	fb05 fb0b 	mul.w	fp, r5, fp
 801e6b6:	9d08      	ldr	r5, [sp, #32]
 801e6b8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e6bc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e6be:	fb05 fa0e 	mul.w	sl, r5, lr
 801e6c2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e6c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e6ca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e6ce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e6d2:	44de      	add	lr, fp
 801e6d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e6d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e6dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e6e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e6e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e6e8:	ea4e 050a 	orr.w	r5, lr, sl
 801e6ec:	9508      	str	r5, [sp, #32]
 801e6ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e6f0:	2dff      	cmp	r5, #255	; 0xff
 801e6f2:	d021      	beq.n	801e738 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801e6f4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e6f6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e6fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e6fc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e700:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e702:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e706:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e708:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e70c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e710:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e714:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e718:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e71c:	44de      	add	lr, fp
 801e71e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e722:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e726:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e72a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e72e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e732:	ea4e 050a 	orr.w	r5, lr, sl
 801e736:	950c      	str	r5, [sp, #48]	; 0x30
 801e738:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e73a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e73e:	9d08      	ldr	r5, [sp, #32]
 801e740:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e744:	fb08 fc0c 	mul.w	ip, r8, ip
 801e748:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e74c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e750:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e752:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e756:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e75a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e75c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e760:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e764:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e768:	fb08 f80e 	mul.w	r8, r8, lr
 801e76c:	fb01 8202 	mla	r2, r1, r2, r8
 801e770:	9908      	ldr	r1, [sp, #32]
 801e772:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801e776:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e778:	fb00 220a 	mla	r2, r0, sl, r2
 801e77c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801e780:	fb09 2900 	mla	r9, r9, r0, r2
 801e784:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e788:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e78c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e790:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e794:	ea4c 0c09 	orr.w	ip, ip, r9
 801e798:	2bff      	cmp	r3, #255	; 0xff
 801e79a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801e79e:	f040 8091 	bne.w	801e8c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e7a2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801e7a6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801e7aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e7ae:	f022 0207 	bic.w	r2, r2, #7
 801e7b2:	431a      	orrs	r2, r3
 801e7b4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e7b8:	ea4c 0c02 	orr.w	ip, ip, r2
 801e7bc:	f8a7 c000 	strh.w	ip, [r7]
 801e7c0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e7c2:	441c      	add	r4, r3
 801e7c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e7c6:	441e      	add	r6, r3
 801e7c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e7ca:	3b01      	subs	r3, #1
 801e7cc:	3702      	adds	r7, #2
 801e7ce:	9317      	str	r3, [sp, #92]	; 0x5c
 801e7d0:	e6c0      	b.n	801e554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801e7d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801e7d4:	441c      	add	r4, r3
 801e7d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e7d8:	441e      	add	r6, r3
 801e7da:	9b07      	ldr	r3, [sp, #28]
 801e7dc:	3b01      	subs	r3, #1
 801e7de:	9307      	str	r3, [sp, #28]
 801e7e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e7e2:	3302      	adds	r3, #2
 801e7e4:	930a      	str	r3, [sp, #40]	; 0x28
 801e7e6:	e695      	b.n	801e514 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e7e8:	d024      	beq.n	801e834 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e7ea:	9b07      	ldr	r3, [sp, #28]
 801e7ec:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801e7ee:	3b01      	subs	r3, #1
 801e7f0:	fb00 4003 	mla	r0, r0, r3, r4
 801e7f4:	1400      	asrs	r0, r0, #16
 801e7f6:	f53f aeaa 	bmi.w	801e54e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e7fa:	3901      	subs	r1, #1
 801e7fc:	4288      	cmp	r0, r1
 801e7fe:	f6bf aea6 	bge.w	801e54e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e802:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e804:	fb01 6303 	mla	r3, r1, r3, r6
 801e808:	141b      	asrs	r3, r3, #16
 801e80a:	f53f aea0 	bmi.w	801e54e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e80e:	3a01      	subs	r2, #1
 801e810:	4293      	cmp	r3, r2
 801e812:	f6bf ae9c 	bge.w	801e54e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e816:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e81a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801e81e:	f1bb 0f00 	cmp.w	fp, #0
 801e822:	f300 809a 	bgt.w	801e95a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e826:	9b07      	ldr	r3, [sp, #28]
 801e828:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e82c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e82e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e832:	930a      	str	r3, [sp, #40]	; 0x28
 801e834:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e836:	2b00      	cmp	r3, #0
 801e838:	f340 81eb 	ble.w	801ec12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e83c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e840:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e844:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e848:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e84a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e84e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e852:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e856:	eef0 6a62 	vmov.f32	s13, s5
 801e85a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e85e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e862:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e866:	ee16 4a90 	vmov	r4, s13
 801e86a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e86e:	eef0 6a43 	vmov.f32	s13, s6
 801e872:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e876:	ee12 2a90 	vmov	r2, s5
 801e87a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e87e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e882:	ee13 2a10 	vmov	r2, s6
 801e886:	9327      	str	r3, [sp, #156]	; 0x9c
 801e888:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e88a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e88e:	9328      	str	r3, [sp, #160]	; 0xa0
 801e890:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e892:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e894:	3b01      	subs	r3, #1
 801e896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e89a:	9316      	str	r3, [sp, #88]	; 0x58
 801e89c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e89e:	bf08      	it	eq
 801e8a0:	4613      	moveq	r3, r2
 801e8a2:	ee16 6a90 	vmov	r6, s13
 801e8a6:	9307      	str	r3, [sp, #28]
 801e8a8:	eeb0 3a67 	vmov.f32	s6, s15
 801e8ac:	eef0 2a47 	vmov.f32	s5, s14
 801e8b0:	e622      	b.n	801e4f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801e8b2:	2800      	cmp	r0, #0
 801e8b4:	f43f ae92 	beq.w	801e5dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e8b8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e8bc:	9308      	str	r3, [sp, #32]
 801e8be:	0e1b      	lsrs	r3, r3, #24
 801e8c0:	9310      	str	r3, [sp, #64]	; 0x40
 801e8c2:	e68b      	b.n	801e5dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e8c4:	8839      	ldrh	r1, [r7, #0]
 801e8c6:	4dd4      	ldr	r5, [pc, #848]	; (801ec18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801e8c8:	43db      	mvns	r3, r3
 801e8ca:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801e8ce:	fa5f f883 	uxtb.w	r8, r3
 801e8d2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e8d6:	fb0e fe08 	mul.w	lr, lr, r8
 801e8da:	10c8      	asrs	r0, r1, #3
 801e8dc:	00cb      	lsls	r3, r1, #3
 801e8de:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e8e2:	f10e 0101 	add.w	r1, lr, #1
 801e8e6:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801e8ea:	fb00 f008 	mul.w	r0, r0, r8
 801e8ee:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801e8f2:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801e8f6:	f100 0e01 	add.w	lr, r0, #1
 801e8fa:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801e8fe:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e902:	b2db      	uxtb	r3, r3
 801e904:	b2c9      	uxtb	r1, r1
 801e906:	00d2      	lsls	r2, r2, #3
 801e908:	fb03 f308 	mul.w	r3, r3, r8
 801e90c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801e910:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e914:	430a      	orrs	r2, r1
 801e916:	1c59      	adds	r1, r3, #1
 801e918:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e91c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e920:	e748      	b.n	801e7b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801e922:	f112 0801 	adds.w	r8, r2, #1
 801e926:	f53f af4b 	bmi.w	801e7c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e92a:	4543      	cmp	r3, r8
 801e92c:	f6ff af48 	blt.w	801e7c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e930:	f11c 0801 	adds.w	r8, ip, #1
 801e934:	f53f af44 	bmi.w	801e7c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e938:	45c6      	cmp	lr, r8
 801e93a:	f6ff af41 	blt.w	801e7c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e93e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801e942:	fa0f f28e 	sxth.w	r2, lr
 801e946:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801e94a:	9200      	str	r2, [sp, #0]
 801e94c:	b21b      	sxth	r3, r3
 801e94e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e950:	9819      	ldr	r0, [sp, #100]	; 0x64
 801e952:	4639      	mov	r1, r7
 801e954:	f7ff fc87 	bl	801e266 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801e958:	e732      	b.n	801e7c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e95a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e95c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e95e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801e962:	1421      	asrs	r1, r4, #16
 801e964:	1433      	asrs	r3, r6, #16
 801e966:	fb07 1303 	mla	r3, r7, r3, r1
 801e96a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801e96c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801e970:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e974:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e978:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e97c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e980:	2a00      	cmp	r2, #0
 801e982:	f000 8107 	beq.w	801eb94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801e986:	684d      	ldr	r5, [r1, #4]
 801e988:	950d      	str	r5, [sp, #52]	; 0x34
 801e98a:	0e2d      	lsrs	r5, r5, #24
 801e98c:	9514      	str	r5, [sp, #80]	; 0x50
 801e98e:	b178      	cbz	r0, 801e9b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e990:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801e994:	3f01      	subs	r7, #1
 801e996:	00bf      	lsls	r7, r7, #2
 801e998:	3704      	adds	r7, #4
 801e99a:	eb01 0e07 	add.w	lr, r1, r7
 801e99e:	59c9      	ldr	r1, [r1, r7]
 801e9a0:	9109      	str	r1, [sp, #36]	; 0x24
 801e9a2:	0e09      	lsrs	r1, r1, #24
 801e9a4:	9111      	str	r1, [sp, #68]	; 0x44
 801e9a6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e9aa:	910e      	str	r1, [sp, #56]	; 0x38
 801e9ac:	0e09      	lsrs	r1, r1, #24
 801e9ae:	9115      	str	r1, [sp, #84]	; 0x54
 801e9b0:	b292      	uxth	r2, r2
 801e9b2:	b280      	uxth	r0, r0
 801e9b4:	fb02 f900 	mul.w	r9, r2, r0
 801e9b8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e9bc:	0112      	lsls	r2, r2, #4
 801e9be:	eba2 0e09 	sub.w	lr, r2, r9
 801e9c2:	b280      	uxth	r0, r0
 801e9c4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801e9c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e9ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e9cc:	fa1f fe8e 	uxth.w	lr, lr
 801e9d0:	1a09      	subs	r1, r1, r0
 801e9d2:	b289      	uxth	r1, r1
 801e9d4:	fb0e f202 	mul.w	r2, lr, r2
 801e9d8:	fb01 220c 	mla	r2, r1, ip, r2
 801e9dc:	fb00 2205 	mla	r2, r0, r5, r2
 801e9e0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e9e2:	fb09 2205 	mla	r2, r9, r5, r2
 801e9e6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e9ea:	2a00      	cmp	r2, #0
 801e9ec:	f000 80c9 	beq.w	801eb82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801e9f0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e9f4:	d019      	beq.n	801ea2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801e9f6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e9fa:	fb0c fa0a 	mul.w	sl, ip, sl
 801e9fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ea02:	fb0c fc03 	mul.w	ip, ip, r3
 801ea06:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ea0a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ea0e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ea12:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ea16:	4453      	add	r3, sl
 801ea18:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ea1c:	0a1b      	lsrs	r3, r3, #8
 801ea1e:	0a3f      	lsrs	r7, r7, #8
 801ea20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ea24:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ea28:	433b      	orrs	r3, r7
 801ea2a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ea2c:	2dff      	cmp	r5, #255	; 0xff
 801ea2e:	d020      	beq.n	801ea72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ea30:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ea32:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ea36:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ea38:	436f      	muls	r7, r5
 801ea3a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ea3c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ea40:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ea42:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ea46:	fb05 fa0a 	mul.w	sl, r5, sl
 801ea4a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ea4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea52:	44bc      	add	ip, r7
 801ea54:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ea58:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ea5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ea64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ea6c:	ea4c 050a 	orr.w	r5, ip, sl
 801ea70:	950d      	str	r5, [sp, #52]	; 0x34
 801ea72:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ea74:	2dff      	cmp	r5, #255	; 0xff
 801ea76:	d020      	beq.n	801eaba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801ea78:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ea7a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ea7e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ea80:	436f      	muls	r7, r5
 801ea82:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ea84:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ea88:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ea8a:	fb05 fa0c 	mul.w	sl, r5, ip
 801ea8e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ea92:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ea96:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ea9a:	44bc      	add	ip, r7
 801ea9c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eaa0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eaa4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eaa8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eaac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eab0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eab4:	ea4c 050a 	orr.w	r5, ip, sl
 801eab8:	9509      	str	r5, [sp, #36]	; 0x24
 801eaba:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eabc:	2dff      	cmp	r5, #255	; 0xff
 801eabe:	d020      	beq.n	801eb02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801eac0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eac2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eac6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eac8:	436f      	muls	r7, r5
 801eaca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eacc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ead0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ead2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ead6:	fb05 fa0a 	mul.w	sl, r5, sl
 801eada:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eade:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eae2:	44bc      	add	ip, r7
 801eae4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eae8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eaec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eaf0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eaf4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eaf8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eafc:	ea4c 050a 	orr.w	r5, ip, sl
 801eb00:	950e      	str	r5, [sp, #56]	; 0x38
 801eb02:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eb04:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eb08:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eb0a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801eb0e:	fb0e f707 	mul.w	r7, lr, r7
 801eb12:	fb01 770c 	mla	r7, r1, ip, r7
 801eb16:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eb1a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eb1c:	fb00 770c 	mla	r7, r0, ip, r7
 801eb20:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eb24:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eb26:	fb09 770c 	mla	r7, r9, ip, r7
 801eb2a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801eb2e:	fb0e fe0c 	mul.w	lr, lr, ip
 801eb32:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801eb36:	fb01 e303 	mla	r3, r1, r3, lr
 801eb3a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801eb3c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801eb40:	990e      	ldr	r1, [sp, #56]	; 0x38
 801eb42:	fb00 330a 	mla	r3, r0, sl, r3
 801eb46:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801eb4a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801eb4e:	0a3f      	lsrs	r7, r7, #8
 801eb50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb54:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801eb58:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801eb5c:	ea47 070c 	orr.w	r7, r7, ip
 801eb60:	2aff      	cmp	r2, #255	; 0xff
 801eb62:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801eb66:	d11e      	bne.n	801eba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801eb68:	097a      	lsrs	r2, r7, #5
 801eb6a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801eb6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb72:	f023 0307 	bic.w	r3, r3, #7
 801eb76:	4313      	orrs	r3, r2
 801eb78:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801eb7c:	431f      	orrs	r7, r3
 801eb7e:	f8a8 7000 	strh.w	r7, [r8]
 801eb82:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801eb84:	441c      	add	r4, r3
 801eb86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801eb88:	f108 0802 	add.w	r8, r8, #2
 801eb8c:	441e      	add	r6, r3
 801eb8e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eb92:	e644      	b.n	801e81e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801eb94:	2800      	cmp	r0, #0
 801eb96:	f43f af0b 	beq.w	801e9b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801eb9a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801eb9e:	9109      	str	r1, [sp, #36]	; 0x24
 801eba0:	0e09      	lsrs	r1, r1, #24
 801eba2:	9111      	str	r1, [sp, #68]	; 0x44
 801eba4:	e704      	b.n	801e9b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801eba6:	f8b8 1000 	ldrh.w	r1, [r8]
 801ebaa:	43d2      	mvns	r2, r2
 801ebac:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ebb0:	fa5f fe82 	uxtb.w	lr, r2
 801ebb4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ebb8:	fb0c fc0e 	mul.w	ip, ip, lr
 801ebbc:	10c8      	asrs	r0, r1, #3
 801ebbe:	00ca      	lsls	r2, r1, #3
 801ebc0:	f10c 0101 	add.w	r1, ip, #1
 801ebc4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ebc8:	0c39      	lsrs	r1, r7, #16
 801ebca:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ebce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ebd2:	4911      	ldr	r1, [pc, #68]	; (801ec18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ebd4:	fb00 f00e 	mul.w	r0, r0, lr
 801ebd8:	fa5f fc8c 	uxtb.w	ip, ip
 801ebdc:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ebe0:	b2d2      	uxtb	r2, r2
 801ebe2:	1c41      	adds	r1, r0, #1
 801ebe4:	fb02 f20e 	mul.w	r2, r2, lr
 801ebe8:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ebec:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ebf0:	1c51      	adds	r1, r2, #1
 801ebf2:	00c0      	lsls	r0, r0, #3
 801ebf4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ebf8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ebfc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801ec00:	ea4c 0c00 	orr.w	ip, ip, r0
 801ec04:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ec08:	ea47 0c0c 	orr.w	ip, r7, ip
 801ec0c:	f8a8 c000 	strh.w	ip, [r8]
 801ec10:	e7b7      	b.n	801eb82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ec12:	b01b      	add	sp, #108	; 0x6c
 801ec14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec18:	fffff800 	.word	0xfffff800

0801ec1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801ec1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ec20:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801ec24:	2d00      	cmp	r5, #0
 801ec26:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ec2a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801ec2e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801ec32:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801ec36:	fb05 0e03 	mla	lr, r5, r3, r0
 801ec3a:	f2c0 808c 	blt.w	801ed56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801ec3e:	45a9      	cmp	r9, r5
 801ec40:	f340 8089 	ble.w	801ed56 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801ec44:	2800      	cmp	r0, #0
 801ec46:	f2c0 8084 	blt.w	801ed52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801ec4a:	4580      	cmp	r8, r0
 801ec4c:	f340 8081 	ble.w	801ed52 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801ec50:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801ec54:	f01e 0f01 	tst.w	lr, #1
 801ec58:	5d16      	ldrb	r6, [r2, r4]
 801ec5a:	bf0c      	ite	eq
 801ec5c:	f006 060f 	andeq.w	r6, r6, #15
 801ec60:	1136      	asrne	r6, r6, #4
 801ec62:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ec66:	b2f6      	uxtb	r6, r6
 801ec68:	1c44      	adds	r4, r0, #1
 801ec6a:	d477      	bmi.n	801ed5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801ec6c:	45a0      	cmp	r8, r4
 801ec6e:	dd75      	ble.n	801ed5c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801ec70:	2f00      	cmp	r7, #0
 801ec72:	d075      	beq.n	801ed60 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801ec74:	f10e 0a01 	add.w	sl, lr, #1
 801ec78:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801ec7c:	f01a 0f01 	tst.w	sl, #1
 801ec80:	5d14      	ldrb	r4, [r2, r4]
 801ec82:	bf0c      	ite	eq
 801ec84:	f004 040f 	andeq.w	r4, r4, #15
 801ec88:	1124      	asrne	r4, r4, #4
 801ec8a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ec8e:	b2e4      	uxtb	r4, r4
 801ec90:	3501      	adds	r5, #1
 801ec92:	d469      	bmi.n	801ed68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801ec94:	45a9      	cmp	r9, r5
 801ec96:	dd67      	ble.n	801ed68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801ec98:	f1bc 0f00 	cmp.w	ip, #0
 801ec9c:	d067      	beq.n	801ed6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801ec9e:	2800      	cmp	r0, #0
 801eca0:	db60      	blt.n	801ed64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801eca2:	4580      	cmp	r8, r0
 801eca4:	dd5e      	ble.n	801ed64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801eca6:	eb03 090e 	add.w	r9, r3, lr
 801ecaa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801ecae:	f019 0f01 	tst.w	r9, #1
 801ecb2:	5d55      	ldrb	r5, [r2, r5]
 801ecb4:	bf0c      	ite	eq
 801ecb6:	f005 050f 	andeq.w	r5, r5, #15
 801ecba:	112d      	asrne	r5, r5, #4
 801ecbc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801ecc0:	b2ed      	uxtb	r5, r5
 801ecc2:	3001      	adds	r0, #1
 801ecc4:	d456      	bmi.n	801ed74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801ecc6:	4580      	cmp	r8, r0
 801ecc8:	dd54      	ble.n	801ed74 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801ecca:	2f00      	cmp	r7, #0
 801eccc:	d054      	beq.n	801ed78 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801ecce:	3301      	adds	r3, #1
 801ecd0:	449e      	add	lr, r3
 801ecd2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ecd6:	f01e 0f01 	tst.w	lr, #1
 801ecda:	5cd0      	ldrb	r0, [r2, r3]
 801ecdc:	bf0c      	ite	eq
 801ecde:	f000 000f 	andeq.w	r0, r0, #15
 801ece2:	1100      	asrne	r0, r0, #4
 801ece4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ece8:	b2c3      	uxtb	r3, r0
 801ecea:	b2ba      	uxth	r2, r7
 801ecec:	fa1f fc8c 	uxth.w	ip, ip
 801ecf0:	fb02 f00c 	mul.w	r0, r2, ip
 801ecf4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ecf8:	0112      	lsls	r2, r2, #4
 801ecfa:	fa1f fc8c 	uxth.w	ip, ip
 801ecfe:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801ed02:	1a12      	subs	r2, r2, r0
 801ed04:	eba7 070c 	sub.w	r7, r7, ip
 801ed08:	b292      	uxth	r2, r2
 801ed0a:	b2bf      	uxth	r7, r7
 801ed0c:	4362      	muls	r2, r4
 801ed0e:	fb06 2207 	mla	r2, r6, r7, r2
 801ed12:	fb0c 2505 	mla	r5, ip, r5, r2
 801ed16:	fb00 5303 	mla	r3, r0, r3, r5
 801ed1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ed1e:	b1b3      	cbz	r3, 801ed4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801ed20:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ed24:	435a      	muls	r2, r3
 801ed26:	1c53      	adds	r3, r2, #1
 801ed28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ed2c:	4a2d      	ldr	r2, [pc, #180]	; (801ede4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801ed2e:	121b      	asrs	r3, r3, #8
 801ed30:	6812      	ldr	r2, [r2, #0]
 801ed32:	2bff      	cmp	r3, #255	; 0xff
 801ed34:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ed38:	d120      	bne.n	801ed7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801ed3a:	4b2b      	ldr	r3, [pc, #172]	; (801ede8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801ed3c:	0950      	lsrs	r0, r2, #5
 801ed3e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ed42:	4033      	ands	r3, r6
 801ed44:	4318      	orrs	r0, r3
 801ed46:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ed4a:	4302      	orrs	r2, r0
 801ed4c:	800a      	strh	r2, [r1, #0]
 801ed4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ed52:	2600      	movs	r6, #0
 801ed54:	e788      	b.n	801ec68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801ed56:	2400      	movs	r4, #0
 801ed58:	4626      	mov	r6, r4
 801ed5a:	e799      	b.n	801ec90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ed5c:	2400      	movs	r4, #0
 801ed5e:	e797      	b.n	801ec90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ed60:	463c      	mov	r4, r7
 801ed62:	e795      	b.n	801ec90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ed64:	2500      	movs	r5, #0
 801ed66:	e7ac      	b.n	801ecc2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801ed68:	2300      	movs	r3, #0
 801ed6a:	461d      	mov	r5, r3
 801ed6c:	e7bd      	b.n	801ecea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ed6e:	4663      	mov	r3, ip
 801ed70:	4665      	mov	r5, ip
 801ed72:	e7ba      	b.n	801ecea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ed74:	2300      	movs	r3, #0
 801ed76:	e7b8      	b.n	801ecea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ed78:	463b      	mov	r3, r7
 801ed7a:	e7b6      	b.n	801ecea <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801ed7c:	880d      	ldrh	r5, [r1, #0]
 801ed7e:	b29f      	uxth	r7, r3
 801ed80:	122c      	asrs	r4, r5, #8
 801ed82:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801ed86:	43db      	mvns	r3, r3
 801ed88:	b2db      	uxtb	r3, r3
 801ed8a:	fb10 f007 	smulbb	r0, r0, r7
 801ed8e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801ed92:	fb04 0403 	mla	r4, r4, r3, r0
 801ed96:	b2f6      	uxtb	r6, r6
 801ed98:	10e8      	asrs	r0, r5, #3
 801ed9a:	b2d2      	uxtb	r2, r2
 801ed9c:	00ed      	lsls	r5, r5, #3
 801ed9e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eda2:	fb12 f207 	smulbb	r2, r2, r7
 801eda6:	fb16 f607 	smulbb	r6, r6, r7
 801edaa:	b2ed      	uxtb	r5, r5
 801edac:	b2a4      	uxth	r4, r4
 801edae:	fb00 6603 	mla	r6, r0, r3, r6
 801edb2:	fb05 2303 	mla	r3, r5, r3, r2
 801edb6:	b29a      	uxth	r2, r3
 801edb8:	1c63      	adds	r3, r4, #1
 801edba:	b2b0      	uxth	r0, r6
 801edbc:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801edc0:	1c53      	adds	r3, r2, #1
 801edc2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801edc6:	1c42      	adds	r2, r0, #1
 801edc8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801edcc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801edd0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801edd4:	0940      	lsrs	r0, r0, #5
 801edd6:	4323      	orrs	r3, r4
 801edd8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801eddc:	4303      	orrs	r3, r0
 801edde:	800b      	strh	r3, [r1, #0]
 801ede0:	e7b5      	b.n	801ed4e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801ede2:	bf00      	nop
 801ede4:	20014fcc 	.word	0x20014fcc
 801ede8:	00fff800 	.word	0x00fff800

0801edec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801edec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edf0:	b097      	sub	sp, #92	; 0x5c
 801edf2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801edf6:	9214      	str	r2, [sp, #80]	; 0x50
 801edf8:	9309      	str	r3, [sp, #36]	; 0x24
 801edfa:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801edfc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ee00:	910d      	str	r1, [sp, #52]	; 0x34
 801ee02:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee04:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801ee08:	9015      	str	r0, [sp, #84]	; 0x54
 801ee0a:	6850      	ldr	r0, [r2, #4]
 801ee0c:	6812      	ldr	r2, [r2, #0]
 801ee0e:	fb00 1303 	mla	r3, r0, r3, r1
 801ee12:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ee16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee18:	689b      	ldr	r3, [r3, #8]
 801ee1a:	3301      	adds	r3, #1
 801ee1c:	f023 0301 	bic.w	r3, r3, #1
 801ee20:	930a      	str	r3, [sp, #40]	; 0x28
 801ee22:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee24:	681f      	ldr	r7, [r3, #0]
 801ee26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ee28:	2b00      	cmp	r3, #0
 801ee2a:	dc03      	bgt.n	801ee34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ee2c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ee2e:	2b00      	cmp	r3, #0
 801ee30:	f340 8287 	ble.w	801f342 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801ee34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee3a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee3e:	1e48      	subs	r0, r1, #1
 801ee40:	f102 3cff 	add.w	ip, r2, #4294967295
 801ee44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee46:	2b00      	cmp	r3, #0
 801ee48:	f340 80c4 	ble.w	801efd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801ee4c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ee50:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ee54:	d406      	bmi.n	801ee64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ee56:	4586      	cmp	lr, r0
 801ee58:	da04      	bge.n	801ee64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ee5a:	2b00      	cmp	r3, #0
 801ee5c:	db02      	blt.n	801ee64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801ee5e:	4563      	cmp	r3, ip
 801ee60:	f2c0 80b9 	blt.w	801efd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801ee64:	f11e 0e01 	adds.w	lr, lr, #1
 801ee68:	f100 80aa 	bmi.w	801efc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ee6c:	4571      	cmp	r1, lr
 801ee6e:	f2c0 80a7 	blt.w	801efc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ee72:	3301      	adds	r3, #1
 801ee74:	f100 80a4 	bmi.w	801efc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ee78:	429a      	cmp	r2, r3
 801ee7a:	f2c0 80a1 	blt.w	801efc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ee7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ee80:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801ee84:	930e      	str	r3, [sp, #56]	; 0x38
 801ee86:	46c8      	mov	r8, r9
 801ee88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ee8a:	2b00      	cmp	r3, #0
 801ee8c:	f340 80c3 	ble.w	801f016 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ee90:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee92:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ee96:	1423      	asrs	r3, r4, #16
 801ee98:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ee9c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eea0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801eea4:	f100 814d 	bmi.w	801f142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801eea8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801eeac:	455b      	cmp	r3, fp
 801eeae:	f280 8148 	bge.w	801f142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801eeb2:	2800      	cmp	r0, #0
 801eeb4:	f2c0 8145 	blt.w	801f142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801eeb8:	f10e 3bff 	add.w	fp, lr, #4294967295
 801eebc:	4558      	cmp	r0, fp
 801eebe:	f280 8140 	bge.w	801f142 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801eec2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801eec4:	fb00 3305 	mla	r3, r0, r5, r3
 801eec8:	0858      	lsrs	r0, r3, #1
 801eeca:	07dd      	lsls	r5, r3, #31
 801eecc:	f817 c000 	ldrb.w	ip, [r7, r0]
 801eed0:	bf54      	ite	pl
 801eed2:	f00c 0c0f 	andpl.w	ip, ip, #15
 801eed6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801eeda:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801eede:	fa5f fc8c 	uxtb.w	ip, ip
 801eee2:	2a00      	cmp	r2, #0
 801eee4:	f000 80db 	beq.w	801f09e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801eee8:	1c58      	adds	r0, r3, #1
 801eeea:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801eeee:	07c0      	lsls	r0, r0, #31
 801eef0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801eef4:	bf54      	ite	pl
 801eef6:	f00e 0e0f 	andpl.w	lr, lr, #15
 801eefa:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801eefe:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ef02:	fa5f f08e 	uxtb.w	r0, lr
 801ef06:	9010      	str	r0, [sp, #64]	; 0x40
 801ef08:	b1c9      	cbz	r1, 801ef3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ef0a:	4453      	add	r3, sl
 801ef0c:	0858      	lsrs	r0, r3, #1
 801ef0e:	07dd      	lsls	r5, r3, #31
 801ef10:	5c38      	ldrb	r0, [r7, r0]
 801ef12:	bf54      	ite	pl
 801ef14:	f000 000f 	andpl.w	r0, r0, #15
 801ef18:	1100      	asrmi	r0, r0, #4
 801ef1a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ef1e:	3301      	adds	r3, #1
 801ef20:	b2c0      	uxtb	r0, r0
 801ef22:	900b      	str	r0, [sp, #44]	; 0x2c
 801ef24:	0858      	lsrs	r0, r3, #1
 801ef26:	07dd      	lsls	r5, r3, #31
 801ef28:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ef2c:	bf54      	ite	pl
 801ef2e:	f00e 030f 	andpl.w	r3, lr, #15
 801ef32:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ef36:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ef3a:	b2db      	uxtb	r3, r3
 801ef3c:	9311      	str	r3, [sp, #68]	; 0x44
 801ef3e:	b292      	uxth	r2, r2
 801ef40:	b289      	uxth	r1, r1
 801ef42:	fb02 f301 	mul.w	r3, r2, r1
 801ef46:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ef4a:	0112      	lsls	r2, r2, #4
 801ef4c:	b289      	uxth	r1, r1
 801ef4e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ef52:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ef54:	1ad2      	subs	r2, r2, r3
 801ef56:	1a40      	subs	r0, r0, r1
 801ef58:	b292      	uxth	r2, r2
 801ef5a:	436a      	muls	r2, r5
 801ef5c:	b280      	uxth	r0, r0
 801ef5e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801ef62:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ef64:	fb01 c102 	mla	r1, r1, r2, ip
 801ef68:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ef6a:	fb03 1302 	mla	r3, r3, r2, r1
 801ef6e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ef72:	b1db      	cbz	r3, 801efac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ef74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ef76:	4353      	muls	r3, r2
 801ef78:	1c5a      	adds	r2, r3, #1
 801ef7a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ef7e:	4ac6      	ldr	r2, [pc, #792]	; (801f298 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801ef80:	121b      	asrs	r3, r3, #8
 801ef82:	6812      	ldr	r2, [r2, #0]
 801ef84:	2bff      	cmp	r3, #255	; 0xff
 801ef86:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ef8a:	f040 8099 	bne.w	801f0c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801ef8e:	0953      	lsrs	r3, r2, #5
 801ef90:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ef94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef98:	f02c 0c07 	bic.w	ip, ip, #7
 801ef9c:	ea43 0c0c 	orr.w	ip, r3, ip
 801efa0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801efa4:	ea4c 0202 	orr.w	r2, ip, r2
 801efa8:	f8a8 2000 	strh.w	r2, [r8]
 801efac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801efae:	441c      	add	r4, r3
 801efb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801efb2:	441e      	add	r6, r3
 801efb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801efb6:	3b01      	subs	r3, #1
 801efb8:	f108 0802 	add.w	r8, r8, #2
 801efbc:	930e      	str	r3, [sp, #56]	; 0x38
 801efbe:	e763      	b.n	801ee88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801efc0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801efc2:	441c      	add	r4, r3
 801efc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801efc6:	441e      	add	r6, r3
 801efc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801efca:	3b01      	subs	r3, #1
 801efcc:	9309      	str	r3, [sp, #36]	; 0x24
 801efce:	f109 0902 	add.w	r9, r9, #2
 801efd2:	e737      	b.n	801ee44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801efd4:	d024      	beq.n	801f020 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801efd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801efd8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801efda:	3b01      	subs	r3, #1
 801efdc:	fb00 4003 	mla	r0, r0, r3, r4
 801efe0:	1400      	asrs	r0, r0, #16
 801efe2:	f53f af4c 	bmi.w	801ee7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801efe6:	3901      	subs	r1, #1
 801efe8:	4288      	cmp	r0, r1
 801efea:	f6bf af48 	bge.w	801ee7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801efee:	9924      	ldr	r1, [sp, #144]	; 0x90
 801eff0:	fb01 6303 	mla	r3, r1, r3, r6
 801eff4:	141b      	asrs	r3, r3, #16
 801eff6:	f53f af42 	bmi.w	801ee7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801effa:	3a01      	subs	r2, #1
 801effc:	4293      	cmp	r3, r2
 801effe:	f6bf af3e 	bge.w	801ee7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f002:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f006:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f00a:	930e      	str	r3, [sp, #56]	; 0x38
 801f00c:	46c8      	mov	r8, r9
 801f00e:	f1bb 0f00 	cmp.w	fp, #0
 801f012:	f300 80b7 	bgt.w	801f184 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f016:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f018:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f01c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f020:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f022:	2b00      	cmp	r3, #0
 801f024:	f340 818d 	ble.w	801f342 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f028:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f02c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f030:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f034:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f036:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f03a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f03e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f042:	eef0 6a62 	vmov.f32	s13, s5
 801f046:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f04a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f04e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f052:	ee16 4a90 	vmov	r4, s13
 801f056:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f05a:	eef0 6a43 	vmov.f32	s13, s6
 801f05e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f062:	ee12 2a90 	vmov	r2, s5
 801f066:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f06a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f06e:	ee13 2a10 	vmov	r2, s6
 801f072:	9323      	str	r3, [sp, #140]	; 0x8c
 801f074:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f076:	fb92 f3f3 	sdiv	r3, r2, r3
 801f07a:	9324      	str	r3, [sp, #144]	; 0x90
 801f07c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f07e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f080:	3b01      	subs	r3, #1
 801f082:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f086:	930d      	str	r3, [sp, #52]	; 0x34
 801f088:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f08a:	bf08      	it	eq
 801f08c:	4613      	moveq	r3, r2
 801f08e:	ee16 6a90 	vmov	r6, s13
 801f092:	9309      	str	r3, [sp, #36]	; 0x24
 801f094:	eeb0 3a67 	vmov.f32	s6, s15
 801f098:	eef0 2a47 	vmov.f32	s5, s14
 801f09c:	e6c3      	b.n	801ee26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f09e:	2900      	cmp	r1, #0
 801f0a0:	f43f af4d 	beq.w	801ef3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f0a4:	eb0a 0003 	add.w	r0, sl, r3
 801f0a8:	0843      	lsrs	r3, r0, #1
 801f0aa:	07c0      	lsls	r0, r0, #31
 801f0ac:	5cfb      	ldrb	r3, [r7, r3]
 801f0ae:	bf54      	ite	pl
 801f0b0:	f003 030f 	andpl.w	r3, r3, #15
 801f0b4:	111b      	asrmi	r3, r3, #4
 801f0b6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f0ba:	b2db      	uxtb	r3, r3
 801f0bc:	930b      	str	r3, [sp, #44]	; 0x2c
 801f0be:	e73e      	b.n	801ef3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f0c0:	f8b8 e000 	ldrh.w	lr, [r8]
 801f0c4:	fa1f fb83 	uxth.w	fp, r3
 801f0c8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f0cc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f0d0:	43db      	mvns	r3, r3
 801f0d2:	b2db      	uxtb	r3, r3
 801f0d4:	fb11 f10b 	smulbb	r1, r1, fp
 801f0d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f0dc:	fb00 1003 	mla	r0, r0, r3, r1
 801f0e0:	fa5f fc8c 	uxtb.w	ip, ip
 801f0e4:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f0e8:	b2d2      	uxtb	r2, r2
 801f0ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f0ee:	b280      	uxth	r0, r0
 801f0f0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f0f4:	fb1c fc0b 	smulbb	ip, ip, fp
 801f0f8:	fa5f fe8e 	uxtb.w	lr, lr
 801f0fc:	fb12 fb0b 	smulbb	fp, r2, fp
 801f100:	fb01 cc03 	mla	ip, r1, r3, ip
 801f104:	fb0e bb03 	mla	fp, lr, r3, fp
 801f108:	1c43      	adds	r3, r0, #1
 801f10a:	fa1f fc8c 	uxth.w	ip, ip
 801f10e:	fa1f fb8b 	uxth.w	fp, fp
 801f112:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f116:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f11a:	f10c 0101 	add.w	r1, ip, #1
 801f11e:	f10b 0001 	add.w	r0, fp, #1
 801f122:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f126:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f12a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f12e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f132:	4318      	orrs	r0, r3
 801f134:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f138:	ea40 000c 	orr.w	r0, r0, ip
 801f13c:	f8a8 0000 	strh.w	r0, [r8]
 801f140:	e734      	b.n	801efac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f142:	f113 0b01 	adds.w	fp, r3, #1
 801f146:	f53f af31 	bmi.w	801efac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f14a:	45dc      	cmp	ip, fp
 801f14c:	f6ff af2e 	blt.w	801efac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f150:	f110 0b01 	adds.w	fp, r0, #1
 801f154:	f53f af2a 	bmi.w	801efac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f158:	45de      	cmp	lr, fp
 801f15a:	f6ff af27 	blt.w	801efac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f15e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f160:	9302      	str	r3, [sp, #8]
 801f162:	fa0f f38e 	sxth.w	r3, lr
 801f166:	9301      	str	r3, [sp, #4]
 801f168:	fa0f f38c 	sxth.w	r3, ip
 801f16c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f170:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f174:	9300      	str	r3, [sp, #0]
 801f176:	463a      	mov	r2, r7
 801f178:	4653      	mov	r3, sl
 801f17a:	4641      	mov	r1, r8
 801f17c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f17e:	f7ff fd4d 	bl	801ec1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f182:	e713      	b.n	801efac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f184:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f186:	1422      	asrs	r2, r4, #16
 801f188:	1433      	asrs	r3, r6, #16
 801f18a:	fb05 2303 	mla	r3, r5, r3, r2
 801f18e:	085a      	lsrs	r2, r3, #1
 801f190:	07dd      	lsls	r5, r3, #31
 801f192:	5cba      	ldrb	r2, [r7, r2]
 801f194:	bf54      	ite	pl
 801f196:	f002 020f 	andpl.w	r2, r2, #15
 801f19a:	1112      	asrmi	r2, r2, #4
 801f19c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f1a0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f1a4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f1a8:	b2d2      	uxtb	r2, r2
 801f1aa:	2900      	cmp	r1, #0
 801f1ac:	d076      	beq.n	801f29c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f1ae:	f103 0e01 	add.w	lr, r3, #1
 801f1b2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f1b6:	f01e 0f01 	tst.w	lr, #1
 801f1ba:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f1be:	bf0c      	ite	eq
 801f1c0:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f1c4:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f1c8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f1cc:	fa5f f58c 	uxtb.w	r5, ip
 801f1d0:	9512      	str	r5, [sp, #72]	; 0x48
 801f1d2:	b300      	cbz	r0, 801f216 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f1d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f1d6:	442b      	add	r3, r5
 801f1d8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f1dc:	07dd      	lsls	r5, r3, #31
 801f1de:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f1e2:	bf54      	ite	pl
 801f1e4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f1e8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f1ec:	3301      	adds	r3, #1
 801f1ee:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f1f2:	fa5f f58c 	uxtb.w	r5, ip
 801f1f6:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f1fa:	950c      	str	r5, [sp, #48]	; 0x30
 801f1fc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f200:	07dd      	lsls	r5, r3, #31
 801f202:	bf54      	ite	pl
 801f204:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f208:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f20c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f210:	fa5f f38c 	uxtb.w	r3, ip
 801f214:	9313      	str	r3, [sp, #76]	; 0x4c
 801f216:	b289      	uxth	r1, r1
 801f218:	b280      	uxth	r0, r0
 801f21a:	fb01 f300 	mul.w	r3, r1, r0
 801f21e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f222:	0109      	lsls	r1, r1, #4
 801f224:	b280      	uxth	r0, r0
 801f226:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f22a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f22c:	1ac9      	subs	r1, r1, r3
 801f22e:	ebac 0c00 	sub.w	ip, ip, r0
 801f232:	b289      	uxth	r1, r1
 801f234:	4369      	muls	r1, r5
 801f236:	fa1f fc8c 	uxth.w	ip, ip
 801f23a:	fb02 120c 	mla	r2, r2, ip, r1
 801f23e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f240:	fb00 2001 	mla	r0, r0, r1, r2
 801f244:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f246:	fb03 0302 	mla	r3, r3, r2, r0
 801f24a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f24e:	b1d3      	cbz	r3, 801f286 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f250:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f252:	4353      	muls	r3, r2
 801f254:	1c5a      	adds	r2, r3, #1
 801f256:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f25a:	4a0f      	ldr	r2, [pc, #60]	; (801f298 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f25c:	121b      	asrs	r3, r3, #8
 801f25e:	6812      	ldr	r2, [r2, #0]
 801f260:	2bff      	cmp	r3, #255	; 0xff
 801f262:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f266:	d12d      	bne.n	801f2c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f268:	0953      	lsrs	r3, r2, #5
 801f26a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f26e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f272:	f02c 0c07 	bic.w	ip, ip, #7
 801f276:	ea43 0c0c 	orr.w	ip, r3, ip
 801f27a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f27e:	ea4c 0202 	orr.w	r2, ip, r2
 801f282:	f8a8 2000 	strh.w	r2, [r8]
 801f286:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f288:	441c      	add	r4, r3
 801f28a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f28c:	f108 0802 	add.w	r8, r8, #2
 801f290:	441e      	add	r6, r3
 801f292:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f296:	e6ba      	b.n	801f00e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f298:	20014fcc 	.word	0x20014fcc
 801f29c:	2800      	cmp	r0, #0
 801f29e:	d0ba      	beq.n	801f216 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f2a0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f2a2:	442b      	add	r3, r5
 801f2a4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f2a8:	07db      	lsls	r3, r3, #31
 801f2aa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f2ae:	bf54      	ite	pl
 801f2b0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f2b4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f2b8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f2bc:	fa5f f38c 	uxtb.w	r3, ip
 801f2c0:	930c      	str	r3, [sp, #48]	; 0x30
 801f2c2:	e7a8      	b.n	801f216 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f2c4:	f8b8 e000 	ldrh.w	lr, [r8]
 801f2c8:	fa1f fa83 	uxth.w	sl, r3
 801f2cc:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f2d0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f2d4:	43db      	mvns	r3, r3
 801f2d6:	b2db      	uxtb	r3, r3
 801f2d8:	fb11 f10a 	smulbb	r1, r1, sl
 801f2dc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f2e0:	fb00 1003 	mla	r0, r0, r3, r1
 801f2e4:	b2d2      	uxtb	r2, r2
 801f2e6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f2ea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f2ee:	fa5f fe8e 	uxtb.w	lr, lr
 801f2f2:	fb12 f20a 	smulbb	r2, r2, sl
 801f2f6:	fb0e 2203 	mla	r2, lr, r3, r2
 801f2fa:	fa5f fc8c 	uxtb.w	ip, ip
 801f2fe:	b280      	uxth	r0, r0
 801f300:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f304:	b292      	uxth	r2, r2
 801f306:	fb1c fc0a 	smulbb	ip, ip, sl
 801f30a:	fb01 cc03 	mla	ip, r1, r3, ip
 801f30e:	1c43      	adds	r3, r0, #1
 801f310:	1c51      	adds	r1, r2, #1
 801f312:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f316:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f31a:	fa1f fc8c 	uxth.w	ip, ip
 801f31e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f322:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f326:	4308      	orrs	r0, r1
 801f328:	f10c 0101 	add.w	r1, ip, #1
 801f32c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f330:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f334:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f338:	ea40 000c 	orr.w	r0, r0, ip
 801f33c:	f8a8 0000 	strh.w	r0, [r8]
 801f340:	e7a1      	b.n	801f286 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f342:	b017      	add	sp, #92	; 0x5c
 801f344:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f348 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f348:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f34c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f350:	2d00      	cmp	r5, #0
 801f352:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f356:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f35a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f35e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f362:	fb05 0e03 	mla	lr, r5, r3, r0
 801f366:	f2c0 80b0 	blt.w	801f4ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f36a:	45a9      	cmp	r9, r5
 801f36c:	f340 80ad 	ble.w	801f4ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f370:	2800      	cmp	r0, #0
 801f372:	f2c0 80a8 	blt.w	801f4c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f376:	4580      	cmp	r8, r0
 801f378:	f340 80a5 	ble.w	801f4c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f37c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f380:	f01e 0f01 	tst.w	lr, #1
 801f384:	5d16      	ldrb	r6, [r2, r4]
 801f386:	bf0c      	ite	eq
 801f388:	f006 060f 	andeq.w	r6, r6, #15
 801f38c:	1136      	asrne	r6, r6, #4
 801f38e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f392:	b2f6      	uxtb	r6, r6
 801f394:	1c44      	adds	r4, r0, #1
 801f396:	f100 809b 	bmi.w	801f4d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f39a:	45a0      	cmp	r8, r4
 801f39c:	f340 8098 	ble.w	801f4d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f3a0:	2f00      	cmp	r7, #0
 801f3a2:	f000 8097 	beq.w	801f4d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f3a6:	f10e 0a01 	add.w	sl, lr, #1
 801f3aa:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f3ae:	f01a 0f01 	tst.w	sl, #1
 801f3b2:	5d14      	ldrb	r4, [r2, r4]
 801f3b4:	bf0c      	ite	eq
 801f3b6:	f004 040f 	andeq.w	r4, r4, #15
 801f3ba:	1124      	asrne	r4, r4, #4
 801f3bc:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f3c0:	b2e4      	uxtb	r4, r4
 801f3c2:	3501      	adds	r5, #1
 801f3c4:	f100 808a 	bmi.w	801f4dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f3c8:	45a9      	cmp	r9, r5
 801f3ca:	f340 8087 	ble.w	801f4dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f3ce:	f1bc 0f00 	cmp.w	ip, #0
 801f3d2:	f000 8086 	beq.w	801f4e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f3d6:	2800      	cmp	r0, #0
 801f3d8:	db7e      	blt.n	801f4d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f3da:	4580      	cmp	r8, r0
 801f3dc:	dd7c      	ble.n	801f4d8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f3de:	eb03 090e 	add.w	r9, r3, lr
 801f3e2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f3e6:	f019 0f01 	tst.w	r9, #1
 801f3ea:	5d55      	ldrb	r5, [r2, r5]
 801f3ec:	bf0c      	ite	eq
 801f3ee:	f005 050f 	andeq.w	r5, r5, #15
 801f3f2:	112d      	asrne	r5, r5, #4
 801f3f4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f3f8:	b2ed      	uxtb	r5, r5
 801f3fa:	3001      	adds	r0, #1
 801f3fc:	d474      	bmi.n	801f4e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f3fe:	4580      	cmp	r8, r0
 801f400:	dd72      	ble.n	801f4e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f402:	2f00      	cmp	r7, #0
 801f404:	d072      	beq.n	801f4ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f406:	3301      	adds	r3, #1
 801f408:	449e      	add	lr, r3
 801f40a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f40e:	f01e 0f01 	tst.w	lr, #1
 801f412:	5cd0      	ldrb	r0, [r2, r3]
 801f414:	bf0c      	ite	eq
 801f416:	f000 000f 	andeq.w	r0, r0, #15
 801f41a:	1100      	asrne	r0, r0, #4
 801f41c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f420:	b2c3      	uxtb	r3, r0
 801f422:	b2ba      	uxth	r2, r7
 801f424:	fa1f fc8c 	uxth.w	ip, ip
 801f428:	fb02 f00c 	mul.w	r0, r2, ip
 801f42c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f430:	0112      	lsls	r2, r2, #4
 801f432:	fa1f fc8c 	uxth.w	ip, ip
 801f436:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f43a:	1a12      	subs	r2, r2, r0
 801f43c:	eba7 070c 	sub.w	r7, r7, ip
 801f440:	b292      	uxth	r2, r2
 801f442:	b2bf      	uxth	r7, r7
 801f444:	4362      	muls	r2, r4
 801f446:	fb06 2207 	mla	r2, r6, r7, r2
 801f44a:	fb0c 2505 	mla	r5, ip, r5, r2
 801f44e:	fb00 5303 	mla	r3, r0, r3, r5
 801f452:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f456:	b3a3      	cbz	r3, 801f4c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f458:	4a25      	ldr	r2, [pc, #148]	; (801f4f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f45a:	880e      	ldrh	r6, [r1, #0]
 801f45c:	6815      	ldr	r5, [r2, #0]
 801f45e:	1234      	asrs	r4, r6, #8
 801f460:	b29a      	uxth	r2, r3
 801f462:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f466:	43db      	mvns	r3, r3
 801f468:	b2db      	uxtb	r3, r3
 801f46a:	fb10 f002 	smulbb	r0, r0, r2
 801f46e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f472:	fb04 0403 	mla	r4, r4, r3, r0
 801f476:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f47a:	10f0      	asrs	r0, r6, #3
 801f47c:	b2ed      	uxtb	r5, r5
 801f47e:	00f6      	lsls	r6, r6, #3
 801f480:	fb17 f702 	smulbb	r7, r7, r2
 801f484:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f488:	fb15 f202 	smulbb	r2, r5, r2
 801f48c:	b2f6      	uxtb	r6, r6
 801f48e:	b2a4      	uxth	r4, r4
 801f490:	fb00 7003 	mla	r0, r0, r3, r7
 801f494:	fb06 2303 	mla	r3, r6, r3, r2
 801f498:	b29a      	uxth	r2, r3
 801f49a:	1c63      	adds	r3, r4, #1
 801f49c:	b280      	uxth	r0, r0
 801f49e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f4a2:	1c53      	adds	r3, r2, #1
 801f4a4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f4a8:	1c42      	adds	r2, r0, #1
 801f4aa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f4ae:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f4b2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f4b6:	0940      	lsrs	r0, r0, #5
 801f4b8:	4323      	orrs	r3, r4
 801f4ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f4be:	4303      	orrs	r3, r0
 801f4c0:	800b      	strh	r3, [r1, #0]
 801f4c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f4c6:	2600      	movs	r6, #0
 801f4c8:	e764      	b.n	801f394 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f4ca:	2400      	movs	r4, #0
 801f4cc:	4626      	mov	r6, r4
 801f4ce:	e778      	b.n	801f3c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f4d0:	2400      	movs	r4, #0
 801f4d2:	e776      	b.n	801f3c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f4d4:	463c      	mov	r4, r7
 801f4d6:	e774      	b.n	801f3c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f4d8:	2500      	movs	r5, #0
 801f4da:	e78e      	b.n	801f3fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f4dc:	2300      	movs	r3, #0
 801f4de:	461d      	mov	r5, r3
 801f4e0:	e79f      	b.n	801f422 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f4e2:	4663      	mov	r3, ip
 801f4e4:	4665      	mov	r5, ip
 801f4e6:	e79c      	b.n	801f422 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f4e8:	2300      	movs	r3, #0
 801f4ea:	e79a      	b.n	801f422 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f4ec:	463b      	mov	r3, r7
 801f4ee:	e798      	b.n	801f422 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f4f0:	20014fcc 	.word	0x20014fcc

0801f4f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4f8:	b093      	sub	sp, #76	; 0x4c
 801f4fa:	461d      	mov	r5, r3
 801f4fc:	920c      	str	r2, [sp, #48]	; 0x30
 801f4fe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f500:	9107      	str	r1, [sp, #28]
 801f502:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f506:	9011      	str	r0, [sp, #68]	; 0x44
 801f508:	6850      	ldr	r0, [r2, #4]
 801f50a:	6812      	ldr	r2, [r2, #0]
 801f50c:	fb00 1303 	mla	r3, r0, r3, r1
 801f510:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f514:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f516:	689b      	ldr	r3, [r3, #8]
 801f518:	3301      	adds	r3, #1
 801f51a:	f023 0301 	bic.w	r3, r3, #1
 801f51e:	9306      	str	r3, [sp, #24]
 801f520:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f522:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f526:	681f      	ldr	r7, [r3, #0]
 801f528:	9b07      	ldr	r3, [sp, #28]
 801f52a:	2b00      	cmp	r3, #0
 801f52c:	dc03      	bgt.n	801f536 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f52e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f530:	2b00      	cmp	r3, #0
 801f532:	f340 8267 	ble.w	801fa04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f536:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f538:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f53c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f540:	1e48      	subs	r0, r1, #1
 801f542:	f102 3cff 	add.w	ip, r2, #4294967295
 801f546:	2d00      	cmp	r5, #0
 801f548:	f340 80b8 	ble.w	801f6bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f54c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f550:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f554:	d406      	bmi.n	801f564 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f556:	4586      	cmp	lr, r0
 801f558:	da04      	bge.n	801f564 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f55a:	2b00      	cmp	r3, #0
 801f55c:	db02      	blt.n	801f564 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f55e:	4563      	cmp	r3, ip
 801f560:	f2c0 80ad 	blt.w	801f6be <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801f564:	f11e 0e01 	adds.w	lr, lr, #1
 801f568:	f100 80a0 	bmi.w	801f6ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f56c:	4571      	cmp	r1, lr
 801f56e:	f2c0 809d 	blt.w	801f6ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f572:	3301      	adds	r3, #1
 801f574:	f100 809a 	bmi.w	801f6ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f578:	429a      	cmp	r2, r3
 801f57a:	f2c0 8097 	blt.w	801f6ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f57e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f582:	9509      	str	r5, [sp, #36]	; 0x24
 801f584:	46c8      	mov	r8, r9
 801f586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f588:	2b00      	cmp	r3, #0
 801f58a:	f340 80b6 	ble.w	801f6fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f58e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f592:	9308      	str	r3, [sp, #32]
 801f594:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f596:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f59a:	1423      	asrs	r3, r4, #16
 801f59c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f5a0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f5a4:	f100 813e 	bmi.w	801f824 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f5a8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f5ac:	455b      	cmp	r3, fp
 801f5ae:	f280 8139 	bge.w	801f824 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f5b2:	2800      	cmp	r0, #0
 801f5b4:	f2c0 8136 	blt.w	801f824 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f5b8:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f5bc:	4558      	cmp	r0, fp
 801f5be:	f280 8131 	bge.w	801f824 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f5c2:	9a06      	ldr	r2, [sp, #24]
 801f5c4:	fb00 3302 	mla	r3, r0, r2, r3
 801f5c8:	0858      	lsrs	r0, r3, #1
 801f5ca:	07da      	lsls	r2, r3, #31
 801f5cc:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f5d0:	9a08      	ldr	r2, [sp, #32]
 801f5d2:	bf54      	ite	pl
 801f5d4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f5d8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f5dc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f5e0:	fa5f fc8c 	uxtb.w	ip, ip
 801f5e4:	2a00      	cmp	r2, #0
 801f5e6:	f000 80cb 	beq.w	801f780 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f5ea:	1c58      	adds	r0, r3, #1
 801f5ec:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f5f0:	07c0      	lsls	r0, r0, #31
 801f5f2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f5f6:	bf54      	ite	pl
 801f5f8:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f5fc:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f600:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f604:	fa5f fe8e 	uxtb.w	lr, lr
 801f608:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801f60c:	b1b9      	cbz	r1, 801f63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f60e:	4453      	add	r3, sl
 801f610:	0858      	lsrs	r0, r3, #1
 801f612:	07da      	lsls	r2, r3, #31
 801f614:	5c38      	ldrb	r0, [r7, r0]
 801f616:	bf54      	ite	pl
 801f618:	f000 000f 	andpl.w	r0, r0, #15
 801f61c:	1100      	asrmi	r0, r0, #4
 801f61e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f622:	b2c0      	uxtb	r0, r0
 801f624:	900a      	str	r0, [sp, #40]	; 0x28
 801f626:	1c58      	adds	r0, r3, #1
 801f628:	0843      	lsrs	r3, r0, #1
 801f62a:	07c2      	lsls	r2, r0, #31
 801f62c:	5cfb      	ldrb	r3, [r7, r3]
 801f62e:	bf54      	ite	pl
 801f630:	f003 030f 	andpl.w	r3, r3, #15
 801f634:	111b      	asrmi	r3, r3, #4
 801f636:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f63a:	b2db      	uxtb	r3, r3
 801f63c:	930e      	str	r3, [sp, #56]	; 0x38
 801f63e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f642:	b289      	uxth	r1, r1
 801f644:	fb02 f301 	mul.w	r3, r2, r1
 801f648:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f64c:	0112      	lsls	r2, r2, #4
 801f64e:	b289      	uxth	r1, r1
 801f650:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f654:	1a40      	subs	r0, r0, r1
 801f656:	fa1f fe80 	uxth.w	lr, r0
 801f65a:	1ad2      	subs	r2, r2, r3
 801f65c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801f65e:	b292      	uxth	r2, r2
 801f660:	4342      	muls	r2, r0
 801f662:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801f666:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f668:	fb01 c102 	mla	r1, r1, r2, ip
 801f66c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801f66e:	fb03 1302 	mla	r3, r3, r2, r1
 801f672:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f676:	2bff      	cmp	r3, #255	; 0xff
 801f678:	f040 8093 	bne.w	801f7a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f67c:	4bbe      	ldr	r3, [pc, #760]	; (801f978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f67e:	681a      	ldr	r2, [r3, #0]
 801f680:	4bbe      	ldr	r3, [pc, #760]	; (801f97c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f682:	0951      	lsrs	r1, r2, #5
 801f684:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f688:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f68c:	430b      	orrs	r3, r1
 801f68e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f692:	4313      	orrs	r3, r2
 801f694:	f8a8 3000 	strh.w	r3, [r8]
 801f698:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f69a:	441c      	add	r4, r3
 801f69c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f69e:	441e      	add	r6, r3
 801f6a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6a2:	3b01      	subs	r3, #1
 801f6a4:	f108 0802 	add.w	r8, r8, #2
 801f6a8:	9309      	str	r3, [sp, #36]	; 0x24
 801f6aa:	e76c      	b.n	801f586 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f6ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f6ae:	441c      	add	r4, r3
 801f6b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f6b2:	3d01      	subs	r5, #1
 801f6b4:	441e      	add	r6, r3
 801f6b6:	f109 0902 	add.w	r9, r9, #2
 801f6ba:	e744      	b.n	801f546 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f6bc:	d021      	beq.n	801f702 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f6be:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f6c0:	1e6b      	subs	r3, r5, #1
 801f6c2:	fb00 4003 	mla	r0, r0, r3, r4
 801f6c6:	1400      	asrs	r0, r0, #16
 801f6c8:	f53f af59 	bmi.w	801f57e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f6cc:	3901      	subs	r1, #1
 801f6ce:	4288      	cmp	r0, r1
 801f6d0:	f6bf af55 	bge.w	801f57e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f6d4:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f6d6:	fb01 6303 	mla	r3, r1, r3, r6
 801f6da:	141b      	asrs	r3, r3, #16
 801f6dc:	f53f af4f 	bmi.w	801f57e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f6e0:	3a01      	subs	r2, #1
 801f6e2:	4293      	cmp	r3, r2
 801f6e4:	f6bf af4b 	bge.w	801f57e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f6e8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801f6ec:	9308      	str	r3, [sp, #32]
 801f6ee:	46a8      	mov	r8, r5
 801f6f0:	46ce      	mov	lr, r9
 801f6f2:	f1b8 0f00 	cmp.w	r8, #0
 801f6f6:	f300 80b5 	bgt.w	801f864 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f6fa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f6fe:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f702:	9b07      	ldr	r3, [sp, #28]
 801f704:	2b00      	cmp	r3, #0
 801f706:	f340 817d 	ble.w	801fa04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f70a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f70e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f712:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f716:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f718:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f71c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f720:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f724:	eef0 6a62 	vmov.f32	s13, s5
 801f728:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f72c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f730:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f734:	ee16 4a90 	vmov	r4, s13
 801f738:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f73c:	eef0 6a43 	vmov.f32	s13, s6
 801f740:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f744:	ee12 2a90 	vmov	r2, s5
 801f748:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f74c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f750:	ee13 2a10 	vmov	r2, s6
 801f754:	931f      	str	r3, [sp, #124]	; 0x7c
 801f756:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f758:	fb92 f3f3 	sdiv	r3, r2, r3
 801f75c:	9320      	str	r3, [sp, #128]	; 0x80
 801f75e:	9b07      	ldr	r3, [sp, #28]
 801f760:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f762:	3b01      	subs	r3, #1
 801f764:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f768:	9307      	str	r3, [sp, #28]
 801f76a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f76c:	ee16 6a90 	vmov	r6, s13
 801f770:	bf14      	ite	ne
 801f772:	461d      	movne	r5, r3
 801f774:	4615      	moveq	r5, r2
 801f776:	eeb0 3a67 	vmov.f32	s6, s15
 801f77a:	eef0 2a47 	vmov.f32	s5, s14
 801f77e:	e6d3      	b.n	801f528 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f780:	2900      	cmp	r1, #0
 801f782:	f43f af5c 	beq.w	801f63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f786:	eb0a 0003 	add.w	r0, sl, r3
 801f78a:	0843      	lsrs	r3, r0, #1
 801f78c:	07c0      	lsls	r0, r0, #31
 801f78e:	5cfb      	ldrb	r3, [r7, r3]
 801f790:	bf54      	ite	pl
 801f792:	f003 030f 	andpl.w	r3, r3, #15
 801f796:	111b      	asrmi	r3, r3, #4
 801f798:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f79c:	b2db      	uxtb	r3, r3
 801f79e:	930a      	str	r3, [sp, #40]	; 0x28
 801f7a0:	e74d      	b.n	801f63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f7a2:	2b00      	cmp	r3, #0
 801f7a4:	f43f af78 	beq.w	801f698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f7a8:	4a73      	ldr	r2, [pc, #460]	; (801f978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f7aa:	f8b8 c000 	ldrh.w	ip, [r8]
 801f7ae:	6810      	ldr	r0, [r2, #0]
 801f7b0:	fa1f fe83 	uxth.w	lr, r3
 801f7b4:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f7b8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f7bc:	43db      	mvns	r3, r3
 801f7be:	b2db      	uxtb	r3, r3
 801f7c0:	fb12 f20e 	smulbb	r2, r2, lr
 801f7c4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f7c8:	fb01 2103 	mla	r1, r1, r3, r2
 801f7cc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f7d0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f7d4:	b2c0      	uxtb	r0, r0
 801f7d6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f7da:	fb1b fb0e 	smulbb	fp, fp, lr
 801f7de:	b289      	uxth	r1, r1
 801f7e0:	fb10 fe0e 	smulbb	lr, r0, lr
 801f7e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f7e8:	fa5f fc8c 	uxtb.w	ip, ip
 801f7ec:	fb02 b203 	mla	r2, r2, r3, fp
 801f7f0:	1c48      	adds	r0, r1, #1
 801f7f2:	fb0c e303 	mla	r3, ip, r3, lr
 801f7f6:	b292      	uxth	r2, r2
 801f7f8:	b29b      	uxth	r3, r3
 801f7fa:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801f7fe:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801f802:	f102 0b01 	add.w	fp, r2, #1
 801f806:	1c59      	adds	r1, r3, #1
 801f808:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f80c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801f810:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f814:	0952      	lsrs	r2, r2, #5
 801f816:	4301      	orrs	r1, r0
 801f818:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f81c:	4311      	orrs	r1, r2
 801f81e:	f8a8 1000 	strh.w	r1, [r8]
 801f822:	e739      	b.n	801f698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f824:	f113 0b01 	adds.w	fp, r3, #1
 801f828:	f53f af36 	bmi.w	801f698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f82c:	45dc      	cmp	ip, fp
 801f82e:	f6ff af33 	blt.w	801f698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f832:	f110 0b01 	adds.w	fp, r0, #1
 801f836:	f53f af2f 	bmi.w	801f698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f83a:	45de      	cmp	lr, fp
 801f83c:	f6ff af2c 	blt.w	801f698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f840:	9a08      	ldr	r2, [sp, #32]
 801f842:	9302      	str	r3, [sp, #8]
 801f844:	fa0f f38e 	sxth.w	r3, lr
 801f848:	9301      	str	r3, [sp, #4]
 801f84a:	fa0f f38c 	sxth.w	r3, ip
 801f84e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f852:	9105      	str	r1, [sp, #20]
 801f854:	9300      	str	r3, [sp, #0]
 801f856:	463a      	mov	r2, r7
 801f858:	4653      	mov	r3, sl
 801f85a:	4641      	mov	r1, r8
 801f85c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f85e:	f7ff fd73 	bl	801f348 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801f862:	e719      	b.n	801f698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f864:	9906      	ldr	r1, [sp, #24]
 801f866:	1422      	asrs	r2, r4, #16
 801f868:	1433      	asrs	r3, r6, #16
 801f86a:	fb01 2303 	mla	r3, r1, r3, r2
 801f86e:	085a      	lsrs	r2, r3, #1
 801f870:	07d9      	lsls	r1, r3, #31
 801f872:	5cba      	ldrb	r2, [r7, r2]
 801f874:	bf54      	ite	pl
 801f876:	f002 020f 	andpl.w	r2, r2, #15
 801f87a:	1112      	asrmi	r2, r2, #4
 801f87c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f880:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f884:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f888:	b2d2      	uxtb	r2, r2
 801f88a:	2800      	cmp	r0, #0
 801f88c:	d062      	beq.n	801f954 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801f88e:	f103 0a01 	add.w	sl, r3, #1
 801f892:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801f896:	f01a 0f01 	tst.w	sl, #1
 801f89a:	5c79      	ldrb	r1, [r7, r1]
 801f89c:	bf0c      	ite	eq
 801f89e:	f001 010f 	andeq.w	r1, r1, #15
 801f8a2:	1109      	asrne	r1, r1, #4
 801f8a4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f8a8:	b2c9      	uxtb	r1, r1
 801f8aa:	910f      	str	r1, [sp, #60]	; 0x3c
 801f8ac:	f1bc 0f00 	cmp.w	ip, #0
 801f8b0:	d019      	beq.n	801f8e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f8b2:	9908      	ldr	r1, [sp, #32]
 801f8b4:	440b      	add	r3, r1
 801f8b6:	0859      	lsrs	r1, r3, #1
 801f8b8:	f013 0f01 	tst.w	r3, #1
 801f8bc:	5c79      	ldrb	r1, [r7, r1]
 801f8be:	bf0c      	ite	eq
 801f8c0:	f001 010f 	andeq.w	r1, r1, #15
 801f8c4:	1109      	asrne	r1, r1, #4
 801f8c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f8ca:	b2c9      	uxtb	r1, r1
 801f8cc:	3301      	adds	r3, #1
 801f8ce:	910b      	str	r1, [sp, #44]	; 0x2c
 801f8d0:	0859      	lsrs	r1, r3, #1
 801f8d2:	07db      	lsls	r3, r3, #31
 801f8d4:	5c79      	ldrb	r1, [r7, r1]
 801f8d6:	bf54      	ite	pl
 801f8d8:	f001 010f 	andpl.w	r1, r1, #15
 801f8dc:	1109      	asrmi	r1, r1, #4
 801f8de:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f8e2:	b2c9      	uxtb	r1, r1
 801f8e4:	9110      	str	r1, [sp, #64]	; 0x40
 801f8e6:	b280      	uxth	r0, r0
 801f8e8:	fa1f fc8c 	uxth.w	ip, ip
 801f8ec:	fb00 f30c 	mul.w	r3, r0, ip
 801f8f0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801f8f4:	0100      	lsls	r0, r0, #4
 801f8f6:	fa1f fc8c 	uxth.w	ip, ip
 801f8fa:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801f8fe:	eba1 010c 	sub.w	r1, r1, ip
 801f902:	fa1f fa81 	uxth.w	sl, r1
 801f906:	1ac0      	subs	r0, r0, r3
 801f908:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f90a:	b280      	uxth	r0, r0
 801f90c:	4348      	muls	r0, r1
 801f90e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f910:	fb02 020a 	mla	r2, r2, sl, r0
 801f914:	fb0c 2c01 	mla	ip, ip, r1, r2
 801f918:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f91a:	fb03 c302 	mla	r3, r3, r2, ip
 801f91e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f922:	2bff      	cmp	r3, #255	; 0xff
 801f924:	d12c      	bne.n	801f980 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801f926:	4b14      	ldr	r3, [pc, #80]	; (801f978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f928:	681a      	ldr	r2, [r3, #0]
 801f92a:	4b14      	ldr	r3, [pc, #80]	; (801f97c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f92c:	0951      	lsrs	r1, r2, #5
 801f92e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f932:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f936:	430b      	orrs	r3, r1
 801f938:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f93c:	4313      	orrs	r3, r2
 801f93e:	f8ae 3000 	strh.w	r3, [lr]
 801f942:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f944:	441c      	add	r4, r3
 801f946:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f948:	f10e 0e02 	add.w	lr, lr, #2
 801f94c:	441e      	add	r6, r3
 801f94e:	f108 38ff 	add.w	r8, r8, #4294967295
 801f952:	e6ce      	b.n	801f6f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801f954:	f1bc 0f00 	cmp.w	ip, #0
 801f958:	d0c5      	beq.n	801f8e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f95a:	9908      	ldr	r1, [sp, #32]
 801f95c:	440b      	add	r3, r1
 801f95e:	0859      	lsrs	r1, r3, #1
 801f960:	07db      	lsls	r3, r3, #31
 801f962:	5c79      	ldrb	r1, [r7, r1]
 801f964:	bf54      	ite	pl
 801f966:	f001 010f 	andpl.w	r1, r1, #15
 801f96a:	1109      	asrmi	r1, r1, #4
 801f96c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f970:	b2c9      	uxtb	r1, r1
 801f972:	910b      	str	r1, [sp, #44]	; 0x2c
 801f974:	e7b7      	b.n	801f8e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f976:	bf00      	nop
 801f978:	20014fcc 	.word	0x20014fcc
 801f97c:	fffff800 	.word	0xfffff800
 801f980:	2b00      	cmp	r3, #0
 801f982:	d0de      	beq.n	801f942 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f984:	4a21      	ldr	r2, [pc, #132]	; (801fa0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801f986:	f8be c000 	ldrh.w	ip, [lr]
 801f98a:	6810      	ldr	r0, [r2, #0]
 801f98c:	fa1f fa83 	uxth.w	sl, r3
 801f990:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f994:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f998:	43db      	mvns	r3, r3
 801f99a:	b2db      	uxtb	r3, r3
 801f99c:	fb12 f20a 	smulbb	r2, r2, sl
 801f9a0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f9a4:	fb01 2103 	mla	r1, r1, r3, r2
 801f9a8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f9ac:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f9b0:	b2c0      	uxtb	r0, r0
 801f9b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f9b6:	fa5f fc8c 	uxtb.w	ip, ip
 801f9ba:	fb10 f00a 	smulbb	r0, r0, sl
 801f9be:	fb0c 0003 	mla	r0, ip, r3, r0
 801f9c2:	b289      	uxth	r1, r1
 801f9c4:	fb1b fb0a 	smulbb	fp, fp, sl
 801f9c8:	b280      	uxth	r0, r0
 801f9ca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f9ce:	fb02 b203 	mla	r2, r2, r3, fp
 801f9d2:	1c4b      	adds	r3, r1, #1
 801f9d4:	f100 0b01 	add.w	fp, r0, #1
 801f9d8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f9dc:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801f9e0:	b292      	uxth	r2, r2
 801f9e2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801f9e6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f9ea:	ea4b 0101 	orr.w	r1, fp, r1
 801f9ee:	f102 0b01 	add.w	fp, r2, #1
 801f9f2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801f9f6:	0952      	lsrs	r2, r2, #5
 801f9f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f9fc:	4311      	orrs	r1, r2
 801f9fe:	f8ae 1000 	strh.w	r1, [lr]
 801fa02:	e79e      	b.n	801f942 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fa04:	b013      	add	sp, #76	; 0x4c
 801fa06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa0a:	bf00      	nop
 801fa0c:	20014fcc 	.word	0x20014fcc

0801fa10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801fa10:	b570      	push	{r4, r5, r6, lr}
 801fa12:	1208      	asrs	r0, r1, #8
 801fa14:	b29e      	uxth	r6, r3
 801fa16:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801fa1a:	1213      	asrs	r3, r2, #8
 801fa1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fa20:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801fa24:	fb13 f305 	smulbb	r3, r3, r5
 801fa28:	fb10 f006 	smulbb	r0, r0, r6
 801fa2c:	4418      	add	r0, r3
 801fa2e:	10cc      	asrs	r4, r1, #3
 801fa30:	10d3      	asrs	r3, r2, #3
 801fa32:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801fa36:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801fa3a:	fb13 f305 	smulbb	r3, r3, r5
 801fa3e:	fb14 f406 	smulbb	r4, r4, r6
 801fa42:	00c9      	lsls	r1, r1, #3
 801fa44:	00d2      	lsls	r2, r2, #3
 801fa46:	441c      	add	r4, r3
 801fa48:	b2d2      	uxtb	r2, r2
 801fa4a:	b2cb      	uxtb	r3, r1
 801fa4c:	fb12 f205 	smulbb	r2, r2, r5
 801fa50:	b280      	uxth	r0, r0
 801fa52:	fb13 f306 	smulbb	r3, r3, r6
 801fa56:	4413      	add	r3, r2
 801fa58:	1c42      	adds	r2, r0, #1
 801fa5a:	b29b      	uxth	r3, r3
 801fa5c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fa60:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 801fa64:	1c58      	adds	r0, r3, #1
 801fa66:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801fa6a:	b2a4      	uxth	r4, r4
 801fa6c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fa70:	4310      	orrs	r0, r2
 801fa72:	1c62      	adds	r2, r4, #1
 801fa74:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801fa78:	0964      	lsrs	r4, r4, #5
 801fa7a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801fa7e:	4320      	orrs	r0, r4
 801fa80:	bd70      	pop	{r4, r5, r6, pc}
	...

0801fa84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801fa84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa88:	b08f      	sub	sp, #60	; 0x3c
 801fa8a:	461c      	mov	r4, r3
 801fa8c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 801fa90:	9004      	str	r0, [sp, #16]
 801fa92:	460d      	mov	r5, r1
 801fa94:	4616      	mov	r6, r2
 801fa96:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fa98:	2f00      	cmp	r7, #0
 801fa9a:	f000 80f6 	beq.w	801fc8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801fa9e:	6820      	ldr	r0, [r4, #0]
 801faa0:	6861      	ldr	r1, [r4, #4]
 801faa2:	aa0a      	add	r2, sp, #40	; 0x28
 801faa4:	c203      	stmia	r2!, {r0, r1}
 801faa6:	6818      	ldr	r0, [r3, #0]
 801faa8:	6859      	ldr	r1, [r3, #4]
 801faaa:	aa0c      	add	r2, sp, #48	; 0x30
 801faac:	c203      	stmia	r2!, {r0, r1}
 801faae:	a80a      	add	r0, sp, #40	; 0x28
 801fab0:	f7ef fdfe 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fab4:	4621      	mov	r1, r4
 801fab6:	a80c      	add	r0, sp, #48	; 0x30
 801fab8:	f7ef fe3e 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fabc:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801fac0:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 801fac4:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fac8:	f002 0301 	and.w	r3, r2, #1
 801facc:	9306      	str	r3, [sp, #24]
 801face:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801fad2:	f003 0101 	and.w	r1, r3, #1
 801fad6:	9105      	str	r1, [sp, #20]
 801fad8:	9805      	ldr	r0, [sp, #20]
 801fada:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801fade:	4403      	add	r3, r0
 801fae0:	fb01 2303 	mla	r3, r1, r3, r2
 801fae4:	f04f 0802 	mov.w	r8, #2
 801fae8:	fb93 f3f8 	sdiv	r3, r3, r8
 801faec:	441d      	add	r5, r3
 801faee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801faf2:	441a      	add	r2, r3
 801faf4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801faf8:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801fafc:	4419      	add	r1, r3
 801fafe:	4b64      	ldr	r3, [pc, #400]	; (801fc90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801fb00:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 801fb04:	6818      	ldr	r0, [r3, #0]
 801fb06:	6803      	ldr	r3, [r0, #0]
 801fb08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fb0a:	4798      	blx	r3
 801fb0c:	4a61      	ldr	r2, [pc, #388]	; (801fc94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801fb0e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 801fb12:	8813      	ldrh	r3, [r2, #0]
 801fb14:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 801fb18:	2fff      	cmp	r7, #255	; 0xff
 801fb1a:	fb03 a404 	mla	r4, r3, r4, sl
 801fb1e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801fb22:	f106 0604 	add.w	r6, r6, #4
 801fb26:	4611      	mov	r1, r2
 801fb28:	fb03 fb0b 	mul.w	fp, r3, fp
 801fb2c:	d06b      	beq.n	801fc06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 801fb2e:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 801fb32:	9303      	str	r3, [sp, #12]
 801fb34:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801fb38:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801fb3c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801fb40:	9b07      	ldr	r3, [sp, #28]
 801fb42:	42a3      	cmp	r3, r4
 801fb44:	f240 809c 	bls.w	801fc80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801fb48:	9b06      	ldr	r3, [sp, #24]
 801fb4a:	2b00      	cmp	r3, #0
 801fb4c:	d039      	beq.n	801fbc2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801fb4e:	782b      	ldrb	r3, [r5, #0]
 801fb50:	8822      	ldrh	r2, [r4, #0]
 801fb52:	9804      	ldr	r0, [sp, #16]
 801fb54:	f003 030f 	and.w	r3, r3, #15
 801fb58:	f105 0801 	add.w	r8, r5, #1
 801fb5c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801fb60:	9b03      	ldr	r3, [sp, #12]
 801fb62:	9300      	str	r3, [sp, #0]
 801fb64:	463b      	mov	r3, r7
 801fb66:	f7ff ff53 	bl	801fa10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801fb6a:	f824 0b02 	strh.w	r0, [r4], #2
 801fb6e:	f109 3bff 	add.w	fp, r9, #4294967295
 801fb72:	f1bb 0f01 	cmp.w	fp, #1
 801fb76:	46a2      	mov	sl, r4
 801fb78:	f104 0404 	add.w	r4, r4, #4
 801fb7c:	dd24      	ble.n	801fbc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 801fb7e:	f898 3000 	ldrb.w	r3, [r8]
 801fb82:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801fb86:	9804      	ldr	r0, [sp, #16]
 801fb88:	091b      	lsrs	r3, r3, #4
 801fb8a:	f1ab 0b02 	sub.w	fp, fp, #2
 801fb8e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801fb92:	9b03      	ldr	r3, [sp, #12]
 801fb94:	9300      	str	r3, [sp, #0]
 801fb96:	463b      	mov	r3, r7
 801fb98:	f7ff ff3a 	bl	801fa10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801fb9c:	f824 0c04 	strh.w	r0, [r4, #-4]
 801fba0:	f818 3b01 	ldrb.w	r3, [r8], #1
 801fba4:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801fba8:	9804      	ldr	r0, [sp, #16]
 801fbaa:	f003 030f 	and.w	r3, r3, #15
 801fbae:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801fbb2:	9b03      	ldr	r3, [sp, #12]
 801fbb4:	9300      	str	r3, [sp, #0]
 801fbb6:	463b      	mov	r3, r7
 801fbb8:	f7ff ff2a 	bl	801fa10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801fbbc:	f824 0c02 	strh.w	r0, [r4, #-2]
 801fbc0:	e7d7      	b.n	801fb72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801fbc2:	46a8      	mov	r8, r5
 801fbc4:	46cb      	mov	fp, r9
 801fbc6:	e7d4      	b.n	801fb72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801fbc8:	d10e      	bne.n	801fbe8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 801fbca:	f898 3000 	ldrb.w	r3, [r8]
 801fbce:	f8ba 2000 	ldrh.w	r2, [sl]
 801fbd2:	9804      	ldr	r0, [sp, #16]
 801fbd4:	091b      	lsrs	r3, r3, #4
 801fbd6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801fbda:	9b03      	ldr	r3, [sp, #12]
 801fbdc:	9300      	str	r3, [sp, #0]
 801fbde:	463b      	mov	r3, r7
 801fbe0:	f7ff ff16 	bl	801fa10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801fbe4:	f82a 0b02 	strh.w	r0, [sl], #2
 801fbe8:	9b08      	ldr	r3, [sp, #32]
 801fbea:	9a05      	ldr	r2, [sp, #20]
 801fbec:	881c      	ldrh	r4, [r3, #0]
 801fbee:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801fbf2:	eba4 0409 	sub.w	r4, r4, r9
 801fbf6:	4413      	add	r3, r2
 801fbf8:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801fbfc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fbfe:	fb93 f3f2 	sdiv	r3, r3, r2
 801fc02:	441d      	add	r5, r3
 801fc04:	e79c      	b.n	801fb40 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 801fc06:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801fc0a:	45a3      	cmp	fp, r4
 801fc0c:	d938      	bls.n	801fc80 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801fc0e:	9b06      	ldr	r3, [sp, #24]
 801fc10:	b1f3      	cbz	r3, 801fc50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801fc12:	782b      	ldrb	r3, [r5, #0]
 801fc14:	f003 030f 	and.w	r3, r3, #15
 801fc18:	1c6a      	adds	r2, r5, #1
 801fc1a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc1e:	8023      	strh	r3, [r4, #0]
 801fc20:	f109 30ff 	add.w	r0, r9, #4294967295
 801fc24:	3402      	adds	r4, #2
 801fc26:	2801      	cmp	r0, #1
 801fc28:	4623      	mov	r3, r4
 801fc2a:	f104 0404 	add.w	r4, r4, #4
 801fc2e:	dd12      	ble.n	801fc56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fc30:	7813      	ldrb	r3, [r2, #0]
 801fc32:	091b      	lsrs	r3, r3, #4
 801fc34:	3802      	subs	r0, #2
 801fc36:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc3a:	f824 3c04 	strh.w	r3, [r4, #-4]
 801fc3e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801fc42:	f003 030f 	and.w	r3, r3, #15
 801fc46:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fc4a:	f824 3c02 	strh.w	r3, [r4, #-2]
 801fc4e:	e7ea      	b.n	801fc26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801fc50:	462a      	mov	r2, r5
 801fc52:	4648      	mov	r0, r9
 801fc54:	e7e7      	b.n	801fc26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801fc56:	d106      	bne.n	801fc66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801fc58:	7812      	ldrb	r2, [r2, #0]
 801fc5a:	0912      	lsrs	r2, r2, #4
 801fc5c:	3302      	adds	r3, #2
 801fc5e:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801fc62:	f823 2c02 	strh.w	r2, [r3, #-2]
 801fc66:	880c      	ldrh	r4, [r1, #0]
 801fc68:	9a05      	ldr	r2, [sp, #20]
 801fc6a:	eba4 0409 	sub.w	r4, r4, r9
 801fc6e:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801fc72:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801fc76:	4413      	add	r3, r2
 801fc78:	fb93 f3f8 	sdiv	r3, r3, r8
 801fc7c:	441d      	add	r5, r3
 801fc7e:	e7c4      	b.n	801fc0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801fc80:	4b03      	ldr	r3, [pc, #12]	; (801fc90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801fc82:	6818      	ldr	r0, [r3, #0]
 801fc84:	6803      	ldr	r3, [r0, #0]
 801fc86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fc88:	4798      	blx	r3
 801fc8a:	b00f      	add	sp, #60	; 0x3c
 801fc8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc90:	20014fc4 	.word	0x20014fc4
 801fc94:	20014fbe 	.word	0x20014fbe

0801fc98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801fc98:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fc9a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801fc9e:	2dff      	cmp	r5, #255	; 0xff
 801fca0:	ea4f 2711 	mov.w	r7, r1, lsr #8
 801fca4:	d10c      	bne.n	801fcc0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801fca6:	2bff      	cmp	r3, #255	; 0xff
 801fca8:	d10a      	bne.n	801fcc0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801fcaa:	4b25      	ldr	r3, [pc, #148]	; (801fd40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801fcac:	0948      	lsrs	r0, r1, #5
 801fcae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fcb2:	403b      	ands	r3, r7
 801fcb4:	4318      	orrs	r0, r3
 801fcb6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801fcba:	4308      	orrs	r0, r1
 801fcbc:	b280      	uxth	r0, r0
 801fcbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fcc0:	fb15 f503 	smulbb	r5, r5, r3
 801fcc4:	b2ab      	uxth	r3, r5
 801fcc6:	1c5d      	adds	r5, r3, #1
 801fcc8:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801fccc:	1214      	asrs	r4, r2, #8
 801fcce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fcd2:	fa1f fc85 	uxth.w	ip, r5
 801fcd6:	10d6      	asrs	r6, r2, #3
 801fcd8:	00d0      	lsls	r0, r2, #3
 801fcda:	43ed      	mvns	r5, r5
 801fcdc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801fce0:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801fce4:	b2eb      	uxtb	r3, r5
 801fce6:	b2c0      	uxtb	r0, r0
 801fce8:	fb12 f20c 	smulbb	r2, r2, ip
 801fcec:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801fcf0:	fb04 2403 	mla	r4, r4, r3, r2
 801fcf4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801fcf8:	b2c8      	uxtb	r0, r1
 801fcfa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801fcfe:	b2fd      	uxtb	r5, r7
 801fd00:	fb10 f00c 	smulbb	r0, r0, ip
 801fd04:	b2a4      	uxth	r4, r4
 801fd06:	fb02 0003 	mla	r0, r2, r3, r0
 801fd0a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801fd0e:	fb15 f50c 	smulbb	r5, r5, ip
 801fd12:	fb06 5503 	mla	r5, r6, r3, r5
 801fd16:	b283      	uxth	r3, r0
 801fd18:	1c60      	adds	r0, r4, #1
 801fd1a:	b2ad      	uxth	r5, r5
 801fd1c:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801fd20:	1c58      	adds	r0, r3, #1
 801fd22:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801fd26:	1c6b      	adds	r3, r5, #1
 801fd28:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fd2c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801fd30:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fd34:	096d      	lsrs	r5, r5, #5
 801fd36:	4320      	orrs	r0, r4
 801fd38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fd3c:	4328      	orrs	r0, r5
 801fd3e:	e7be      	b.n	801fcbe <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801fd40:	00fff800 	.word	0x00fff800

0801fd44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fd44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd48:	461c      	mov	r4, r3
 801fd4a:	b08d      	sub	sp, #52	; 0x34
 801fd4c:	460d      	mov	r5, r1
 801fd4e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fd50:	6861      	ldr	r1, [r4, #4]
 801fd52:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 801fd56:	4680      	mov	r8, r0
 801fd58:	6820      	ldr	r0, [r4, #0]
 801fd5a:	4616      	mov	r6, r2
 801fd5c:	aa08      	add	r2, sp, #32
 801fd5e:	c203      	stmia	r2!, {r0, r1}
 801fd60:	6818      	ldr	r0, [r3, #0]
 801fd62:	6859      	ldr	r1, [r3, #4]
 801fd64:	aa0a      	add	r2, sp, #40	; 0x28
 801fd66:	c203      	stmia	r2!, {r0, r1}
 801fd68:	a808      	add	r0, sp, #32
 801fd6a:	f7ef fca1 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fd6e:	4621      	mov	r1, r4
 801fd70:	a80a      	add	r0, sp, #40	; 0x28
 801fd72:	f7ef fce1 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fd76:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801fd7a:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 801fd7e:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801fd82:	f002 0301 	and.w	r3, r2, #1
 801fd86:	9303      	str	r3, [sp, #12]
 801fd88:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801fd8c:	f003 0101 	and.w	r1, r3, #1
 801fd90:	9102      	str	r1, [sp, #8]
 801fd92:	9802      	ldr	r0, [sp, #8]
 801fd94:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801fd98:	4403      	add	r3, r0
 801fd9a:	fb01 2303 	mla	r3, r1, r3, r2
 801fd9e:	f04f 0a02 	mov.w	sl, #2
 801fda2:	fb93 f3fa 	sdiv	r3, r3, sl
 801fda6:	441d      	add	r5, r3
 801fda8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801fdac:	441a      	add	r2, r3
 801fdae:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801fdb2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801fdb6:	4a3f      	ldr	r2, [pc, #252]	; (801feb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801fdb8:	9205      	str	r2, [sp, #20]
 801fdba:	4419      	add	r1, r3
 801fdbc:	6810      	ldr	r0, [r2, #0]
 801fdbe:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 801fdc2:	6803      	ldr	r3, [r0, #0]
 801fdc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fdc6:	4798      	blx	r3
 801fdc8:	4b3b      	ldr	r3, [pc, #236]	; (801feb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801fdca:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 801fdce:	8819      	ldrh	r1, [r3, #0]
 801fdd0:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 801fdd4:	fb01 c404 	mla	r4, r1, r4, ip
 801fdd8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801fddc:	434f      	muls	r7, r1
 801fdde:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801fde2:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801fde6:	3604      	adds	r6, #4
 801fde8:	9204      	str	r2, [sp, #16]
 801fdea:	9b04      	ldr	r3, [sp, #16]
 801fdec:	429c      	cmp	r4, r3
 801fdee:	d258      	bcs.n	801fea2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801fdf0:	9b03      	ldr	r3, [sp, #12]
 801fdf2:	2b00      	cmp	r3, #0
 801fdf4:	d034      	beq.n	801fe60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801fdf6:	782b      	ldrb	r3, [r5, #0]
 801fdf8:	f003 030f 	and.w	r3, r3, #15
 801fdfc:	1c6f      	adds	r7, r5, #1
 801fdfe:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801fe02:	0e0b      	lsrs	r3, r1, #24
 801fe04:	d006      	beq.n	801fe14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801fe06:	8822      	ldrh	r2, [r4, #0]
 801fe08:	9300      	str	r3, [sp, #0]
 801fe0a:	4640      	mov	r0, r8
 801fe0c:	464b      	mov	r3, r9
 801fe0e:	f7ff ff43 	bl	801fc98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801fe12:	8020      	strh	r0, [r4, #0]
 801fe14:	3402      	adds	r4, #2
 801fe16:	f10b 3aff 	add.w	sl, fp, #4294967295
 801fe1a:	f1ba 0f01 	cmp.w	sl, #1
 801fe1e:	dd22      	ble.n	801fe66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801fe20:	783b      	ldrb	r3, [r7, #0]
 801fe22:	091b      	lsrs	r3, r3, #4
 801fe24:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801fe28:	0e0b      	lsrs	r3, r1, #24
 801fe2a:	d006      	beq.n	801fe3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fe2c:	8822      	ldrh	r2, [r4, #0]
 801fe2e:	9300      	str	r3, [sp, #0]
 801fe30:	4640      	mov	r0, r8
 801fe32:	464b      	mov	r3, r9
 801fe34:	f7ff ff30 	bl	801fc98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801fe38:	8020      	strh	r0, [r4, #0]
 801fe3a:	f817 3b01 	ldrb.w	r3, [r7], #1
 801fe3e:	f003 030f 	and.w	r3, r3, #15
 801fe42:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801fe46:	0e0b      	lsrs	r3, r1, #24
 801fe48:	d006      	beq.n	801fe58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801fe4a:	8862      	ldrh	r2, [r4, #2]
 801fe4c:	9300      	str	r3, [sp, #0]
 801fe4e:	4640      	mov	r0, r8
 801fe50:	464b      	mov	r3, r9
 801fe52:	f7ff ff21 	bl	801fc98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801fe56:	8060      	strh	r0, [r4, #2]
 801fe58:	3404      	adds	r4, #4
 801fe5a:	f1aa 0a02 	sub.w	sl, sl, #2
 801fe5e:	e7dc      	b.n	801fe1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801fe60:	462f      	mov	r7, r5
 801fe62:	46da      	mov	sl, fp
 801fe64:	e7d9      	b.n	801fe1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801fe66:	d10d      	bne.n	801fe84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801fe68:	783b      	ldrb	r3, [r7, #0]
 801fe6a:	091b      	lsrs	r3, r3, #4
 801fe6c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801fe70:	0e0b      	lsrs	r3, r1, #24
 801fe72:	d006      	beq.n	801fe82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801fe74:	8822      	ldrh	r2, [r4, #0]
 801fe76:	9300      	str	r3, [sp, #0]
 801fe78:	4640      	mov	r0, r8
 801fe7a:	464b      	mov	r3, r9
 801fe7c:	f7ff ff0c 	bl	801fc98 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801fe80:	8020      	strh	r0, [r4, #0]
 801fe82:	3402      	adds	r4, #2
 801fe84:	9b06      	ldr	r3, [sp, #24]
 801fe86:	9a02      	ldr	r2, [sp, #8]
 801fe88:	881b      	ldrh	r3, [r3, #0]
 801fe8a:	eba3 030b 	sub.w	r3, r3, fp
 801fe8e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801fe92:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801fe96:	4413      	add	r3, r2
 801fe98:	9a07      	ldr	r2, [sp, #28]
 801fe9a:	fb93 f3f2 	sdiv	r3, r3, r2
 801fe9e:	441d      	add	r5, r3
 801fea0:	e7a3      	b.n	801fdea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801fea2:	9b05      	ldr	r3, [sp, #20]
 801fea4:	6818      	ldr	r0, [r3, #0]
 801fea6:	6803      	ldr	r3, [r0, #0]
 801fea8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801feaa:	4798      	blx	r3
 801feac:	b00d      	add	sp, #52	; 0x34
 801feae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801feb2:	bf00      	nop
 801feb4:	20014fc4 	.word	0x20014fc4
 801feb8:	20014fbe 	.word	0x20014fbe

0801febc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801febc:	b570      	push	{r4, r5, r6, lr}
 801febe:	1214      	asrs	r4, r2, #8
 801fec0:	788d      	ldrb	r5, [r1, #2]
 801fec2:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801fec6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801feca:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801fece:	fb15 f503 	smulbb	r5, r5, r3
 801fed2:	fb04 5506 	mla	r5, r4, r6, r5
 801fed6:	10d0      	asrs	r0, r2, #3
 801fed8:	784c      	ldrb	r4, [r1, #1]
 801feda:	7809      	ldrb	r1, [r1, #0]
 801fedc:	00d2      	lsls	r2, r2, #3
 801fede:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fee2:	b2d2      	uxtb	r2, r2
 801fee4:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801fee8:	fb14 f403 	smulbb	r4, r4, r3
 801feec:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fef0:	fb11 f303 	smulbb	r3, r1, r3
 801fef4:	fb00 4406 	mla	r4, r0, r6, r4
 801fef8:	fb02 3306 	mla	r3, r2, r6, r3
 801fefc:	b2ad      	uxth	r5, r5
 801fefe:	b29b      	uxth	r3, r3
 801ff00:	b2a4      	uxth	r4, r4
 801ff02:	1c68      	adds	r0, r5, #1
 801ff04:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801ff08:	1c62      	adds	r2, r4, #1
 801ff0a:	1c58      	adds	r0, r3, #1
 801ff0c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ff10:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ff14:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ff18:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ff1c:	0964      	lsrs	r4, r4, #5
 801ff1e:	4328      	orrs	r0, r5
 801ff20:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ff24:	4320      	orrs	r0, r4
 801ff26:	bd70      	pop	{r4, r5, r6, pc}

0801ff28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ff28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff2c:	b08f      	sub	sp, #60	; 0x3c
 801ff2e:	461c      	mov	r4, r3
 801ff30:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 801ff34:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff36:	4682      	mov	sl, r0
 801ff38:	460e      	mov	r6, r1
 801ff3a:	4615      	mov	r5, r2
 801ff3c:	2f00      	cmp	r7, #0
 801ff3e:	f000 8142 	beq.w	80201c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 801ff42:	6820      	ldr	r0, [r4, #0]
 801ff44:	6861      	ldr	r1, [r4, #4]
 801ff46:	aa0a      	add	r2, sp, #40	; 0x28
 801ff48:	c203      	stmia	r2!, {r0, r1}
 801ff4a:	6818      	ldr	r0, [r3, #0]
 801ff4c:	6859      	ldr	r1, [r3, #4]
 801ff4e:	aa0c      	add	r2, sp, #48	; 0x30
 801ff50:	c203      	stmia	r2!, {r0, r1}
 801ff52:	a80a      	add	r0, sp, #40	; 0x28
 801ff54:	f7ef fbac 	bl	800f6b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ff58:	4621      	mov	r1, r4
 801ff5a:	a80c      	add	r0, sp, #48	; 0x30
 801ff5c:	f7ef fbec 	bl	800f738 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ff60:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ff64:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 801ff68:	f002 0301 	and.w	r3, r2, #1
 801ff6c:	9306      	str	r3, [sp, #24]
 801ff6e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 801ff72:	f003 0101 	and.w	r1, r3, #1
 801ff76:	9105      	str	r1, [sp, #20]
 801ff78:	9805      	ldr	r0, [sp, #20]
 801ff7a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801ff7e:	4403      	add	r3, r0
 801ff80:	fb01 2303 	mla	r3, r1, r3, r2
 801ff84:	f04f 0802 	mov.w	r8, #2
 801ff88:	fb93 f3f8 	sdiv	r3, r3, r8
 801ff8c:	441e      	add	r6, r3
 801ff8e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ff92:	441a      	add	r2, r3
 801ff94:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ff98:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ff9c:	4419      	add	r1, r3
 801ff9e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ffa2:	9303      	str	r3, [sp, #12]
 801ffa4:	4b89      	ldr	r3, [pc, #548]	; (80201cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801ffa6:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 801ffaa:	6818      	ldr	r0, [r3, #0]
 801ffac:	6803      	ldr	r3, [r0, #0]
 801ffae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ffb0:	4798      	blx	r3
 801ffb2:	4a87      	ldr	r2, [pc, #540]	; (80201d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801ffb4:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 801ffb8:	8813      	ldrh	r3, [r2, #0]
 801ffba:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 801ffbe:	2fff      	cmp	r7, #255	; 0xff
 801ffc0:	fb03 9404 	mla	r4, r3, r4, r9
 801ffc4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ffc8:	f105 0504 	add.w	r5, r5, #4
 801ffcc:	4694      	mov	ip, r2
 801ffce:	fb03 f30b 	mul.w	r3, r3, fp
 801ffd2:	d071      	beq.n	80200b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801ffd4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ffd8:	43f9      	mvns	r1, r7
 801ffda:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801ffde:	b2c9      	uxtb	r1, r1
 801ffe0:	9104      	str	r1, [sp, #16]
 801ffe2:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801ffe6:	9b07      	ldr	r3, [sp, #28]
 801ffe8:	42a3      	cmp	r3, r4
 801ffea:	f240 80e7 	bls.w	80201bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801ffee:	9b06      	ldr	r3, [sp, #24]
 801fff0:	2b00      	cmp	r3, #0
 801fff2:	d03d      	beq.n	8020070 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 801fff4:	7831      	ldrb	r1, [r6, #0]
 801fff6:	9b04      	ldr	r3, [sp, #16]
 801fff8:	8822      	ldrh	r2, [r4, #0]
 801fffa:	9300      	str	r3, [sp, #0]
 801fffc:	f001 010f 	and.w	r1, r1, #15
 8020000:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020004:	463b      	mov	r3, r7
 8020006:	4429      	add	r1, r5
 8020008:	4650      	mov	r0, sl
 802000a:	f7ff ff57 	bl	801febc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802000e:	9b03      	ldr	r3, [sp, #12]
 8020010:	f824 0b02 	strh.w	r0, [r4], #2
 8020014:	f106 0801 	add.w	r8, r6, #1
 8020018:	f103 3bff 	add.w	fp, r3, #4294967295
 802001c:	f1bb 0f01 	cmp.w	fp, #1
 8020020:	46a1      	mov	r9, r4
 8020022:	f104 0404 	add.w	r4, r4, #4
 8020026:	dd27      	ble.n	8020078 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8020028:	f898 1000 	ldrb.w	r1, [r8]
 802002c:	9b04      	ldr	r3, [sp, #16]
 802002e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020032:	9300      	str	r3, [sp, #0]
 8020034:	0909      	lsrs	r1, r1, #4
 8020036:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802003a:	463b      	mov	r3, r7
 802003c:	4429      	add	r1, r5
 802003e:	4650      	mov	r0, sl
 8020040:	f7ff ff3c 	bl	801febc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020044:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020048:	f818 1b01 	ldrb.w	r1, [r8], #1
 802004c:	9b04      	ldr	r3, [sp, #16]
 802004e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020052:	9300      	str	r3, [sp, #0]
 8020054:	f001 010f 	and.w	r1, r1, #15
 8020058:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802005c:	463b      	mov	r3, r7
 802005e:	4429      	add	r1, r5
 8020060:	4650      	mov	r0, sl
 8020062:	f7ff ff2b 	bl	801febc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020066:	f1ab 0b02 	sub.w	fp, fp, #2
 802006a:	f824 0c02 	strh.w	r0, [r4, #-2]
 802006e:	e7d5      	b.n	802001c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020070:	46b0      	mov	r8, r6
 8020072:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020076:	e7d1      	b.n	802001c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020078:	d10f      	bne.n	802009a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802007a:	f898 1000 	ldrb.w	r1, [r8]
 802007e:	9b04      	ldr	r3, [sp, #16]
 8020080:	f8b9 2000 	ldrh.w	r2, [r9]
 8020084:	9300      	str	r3, [sp, #0]
 8020086:	0909      	lsrs	r1, r1, #4
 8020088:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802008c:	463b      	mov	r3, r7
 802008e:	4429      	add	r1, r5
 8020090:	4650      	mov	r0, sl
 8020092:	f7ff ff13 	bl	801febc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020096:	f829 0b02 	strh.w	r0, [r9], #2
 802009a:	9b08      	ldr	r3, [sp, #32]
 802009c:	9a05      	ldr	r2, [sp, #20]
 802009e:	881c      	ldrh	r4, [r3, #0]
 80200a0:	9b03      	ldr	r3, [sp, #12]
 80200a2:	1ae4      	subs	r4, r4, r3
 80200a4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80200a8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80200ac:	4413      	add	r3, r2
 80200ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80200b0:	fb93 f3f2 	sdiv	r3, r3, r2
 80200b4:	441e      	add	r6, r3
 80200b6:	e796      	b.n	801ffe6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80200b8:	4f46      	ldr	r7, [pc, #280]	; (80201d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80200ba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80200be:	42a3      	cmp	r3, r4
 80200c0:	d97c      	bls.n	80201bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80200c2:	9a06      	ldr	r2, [sp, #24]
 80200c4:	2a00      	cmp	r2, #0
 80200c6:	d054      	beq.n	8020172 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80200c8:	7830      	ldrb	r0, [r6, #0]
 80200ca:	f000 000f 	and.w	r0, r0, #15
 80200ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80200d2:	eb05 0e00 	add.w	lr, r5, r0
 80200d6:	5c28      	ldrb	r0, [r5, r0]
 80200d8:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80200dc:	f89e e001 	ldrb.w	lr, [lr, #1]
 80200e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80200e4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80200e8:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80200ec:	ea42 020e 	orr.w	r2, r2, lr
 80200f0:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80200f4:	f824 2b02 	strh.w	r2, [r4], #2
 80200f8:	9a03      	ldr	r2, [sp, #12]
 80200fa:	1c71      	adds	r1, r6, #1
 80200fc:	f102 3eff 	add.w	lr, r2, #4294967295
 8020100:	f1be 0f01 	cmp.w	lr, #1
 8020104:	4620      	mov	r0, r4
 8020106:	f104 0404 	add.w	r4, r4, #4
 802010a:	dd36      	ble.n	802017a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 802010c:	7808      	ldrb	r0, [r1, #0]
 802010e:	0900      	lsrs	r0, r0, #4
 8020110:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020114:	eb05 0a00 	add.w	sl, r5, r0
 8020118:	f1ae 0e02 	sub.w	lr, lr, #2
 802011c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020120:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020124:	00d2      	lsls	r2, r2, #3
 8020126:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802012a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802012e:	ea49 0202 	orr.w	r2, r9, r2
 8020132:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020136:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802013a:	f824 2c04 	strh.w	r2, [r4, #-4]
 802013e:	f811 0b01 	ldrb.w	r0, [r1], #1
 8020142:	f000 000f 	and.w	r0, r0, #15
 8020146:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802014a:	eb05 0a00 	add.w	sl, r5, r0
 802014e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020152:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020156:	00d2      	lsls	r2, r2, #3
 8020158:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802015c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020160:	ea49 0202 	orr.w	r2, r9, r2
 8020164:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020168:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802016c:	f824 2c02 	strh.w	r2, [r4, #-2]
 8020170:	e7c6      	b.n	8020100 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8020172:	4631      	mov	r1, r6
 8020174:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020178:	e7c2      	b.n	8020100 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802017a:	d111      	bne.n	80201a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 802017c:	7809      	ldrb	r1, [r1, #0]
 802017e:	0909      	lsrs	r1, r1, #4
 8020180:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020184:	186c      	adds	r4, r5, r1
 8020186:	5c69      	ldrb	r1, [r5, r1]
 8020188:	78a2      	ldrb	r2, [r4, #2]
 802018a:	7864      	ldrb	r4, [r4, #1]
 802018c:	00e4      	lsls	r4, r4, #3
 802018e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8020192:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020196:	4322      	orrs	r2, r4
 8020198:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802019c:	f820 2b02 	strh.w	r2, [r0], #2
 80201a0:	9a03      	ldr	r2, [sp, #12]
 80201a2:	f8bc 4000 	ldrh.w	r4, [ip]
 80201a6:	9905      	ldr	r1, [sp, #20]
 80201a8:	1aa4      	subs	r4, r4, r2
 80201aa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80201ae:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80201b2:	440a      	add	r2, r1
 80201b4:	fb92 f2f8 	sdiv	r2, r2, r8
 80201b8:	4416      	add	r6, r2
 80201ba:	e780      	b.n	80200be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80201bc:	4b03      	ldr	r3, [pc, #12]	; (80201cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80201be:	6818      	ldr	r0, [r3, #0]
 80201c0:	6803      	ldr	r3, [r0, #0]
 80201c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80201c4:	4798      	blx	r3
 80201c6:	b00f      	add	sp, #60	; 0x3c
 80201c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201cc:	20014fc4 	.word	0x20014fc4
 80201d0:	20014fbe 	.word	0x20014fbe
 80201d4:	fffff800 	.word	0xfffff800

080201d8 <CRC_Lock>:
 80201d8:	b530      	push	{r4, r5, lr}
 80201da:	4a20      	ldr	r2, [pc, #128]	; (802025c <CRC_Lock+0x84>)
 80201dc:	6813      	ldr	r3, [r2, #0]
 80201de:	f023 0301 	bic.w	r3, r3, #1
 80201e2:	6013      	str	r3, [r2, #0]
 80201e4:	4b1e      	ldr	r3, [pc, #120]	; (8020260 <CRC_Lock+0x88>)
 80201e6:	681a      	ldr	r2, [r3, #0]
 80201e8:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80201ec:	4022      	ands	r2, r4
 80201ee:	f24c 2540 	movw	r5, #49728	; 0xc240
 80201f2:	42aa      	cmp	r2, r5
 80201f4:	d005      	beq.n	8020202 <CRC_Lock+0x2a>
 80201f6:	681b      	ldr	r3, [r3, #0]
 80201f8:	f24c 2270 	movw	r2, #49776	; 0xc270
 80201fc:	4023      	ands	r3, r4
 80201fe:	4293      	cmp	r3, r2
 8020200:	d124      	bne.n	802024c <CRC_Lock+0x74>
 8020202:	4b18      	ldr	r3, [pc, #96]	; (8020264 <CRC_Lock+0x8c>)
 8020204:	681b      	ldr	r3, [r3, #0]
 8020206:	bb0b      	cbnz	r3, 802024c <CRC_Lock+0x74>
 8020208:	4b17      	ldr	r3, [pc, #92]	; (8020268 <CRC_Lock+0x90>)
 802020a:	681a      	ldr	r2, [r3, #0]
 802020c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020210:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8020214:	d00d      	beq.n	8020232 <CRC_Lock+0x5a>
 8020216:	681a      	ldr	r2, [r3, #0]
 8020218:	f240 4483 	movw	r4, #1155	; 0x483
 802021c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020220:	42a2      	cmp	r2, r4
 8020222:	d006      	beq.n	8020232 <CRC_Lock+0x5a>
 8020224:	681b      	ldr	r3, [r3, #0]
 8020226:	f240 4285 	movw	r2, #1157	; 0x485
 802022a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802022e:	4293      	cmp	r3, r2
 8020230:	d10c      	bne.n	802024c <CRC_Lock+0x74>
 8020232:	4b0e      	ldr	r3, [pc, #56]	; (802026c <CRC_Lock+0x94>)
 8020234:	2201      	movs	r2, #1
 8020236:	601a      	str	r2, [r3, #0]
 8020238:	681a      	ldr	r2, [r3, #0]
 802023a:	2a00      	cmp	r2, #0
 802023c:	d1fc      	bne.n	8020238 <CRC_Lock+0x60>
 802023e:	4b0c      	ldr	r3, [pc, #48]	; (8020270 <CRC_Lock+0x98>)
 8020240:	6018      	str	r0, [r3, #0]
 8020242:	6818      	ldr	r0, [r3, #0]
 8020244:	1a43      	subs	r3, r0, r1
 8020246:	4258      	negs	r0, r3
 8020248:	4158      	adcs	r0, r3
 802024a:	bd30      	pop	{r4, r5, pc}
 802024c:	4b09      	ldr	r3, [pc, #36]	; (8020274 <CRC_Lock+0x9c>)
 802024e:	2201      	movs	r2, #1
 8020250:	601a      	str	r2, [r3, #0]
 8020252:	681a      	ldr	r2, [r3, #0]
 8020254:	2a00      	cmp	r2, #0
 8020256:	d1fc      	bne.n	8020252 <CRC_Lock+0x7a>
 8020258:	4b07      	ldr	r3, [pc, #28]	; (8020278 <CRC_Lock+0xa0>)
 802025a:	e7f1      	b.n	8020240 <CRC_Lock+0x68>
 802025c:	e0002000 	.word	0xe0002000
 8020260:	e000ed00 	.word	0xe000ed00
 8020264:	e0042000 	.word	0xe0042000
 8020268:	5c001000 	.word	0x5c001000
 802026c:	58024c08 	.word	0x58024c08
 8020270:	58024c00 	.word	0x58024c00
 8020274:	40023008 	.word	0x40023008
 8020278:	40023000 	.word	0x40023000

0802027c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802027c:	6101      	str	r1, [r0, #16]
 802027e:	4770      	bx	lr

08020280 <_ZN8touchgfx8Gestures4tickEv>:
 8020280:	7b83      	ldrb	r3, [r0, #14]
 8020282:	b14b      	cbz	r3, 8020298 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020284:	8903      	ldrh	r3, [r0, #8]
 8020286:	3301      	adds	r3, #1
 8020288:	b29b      	uxth	r3, r3
 802028a:	2b07      	cmp	r3, #7
 802028c:	8103      	strh	r3, [r0, #8]
 802028e:	bf81      	itttt	hi
 8020290:	2300      	movhi	r3, #0
 8020292:	8143      	strhhi	r3, [r0, #10]
 8020294:	8183      	strhhi	r3, [r0, #12]
 8020296:	7383      	strbhi	r3, [r0, #14]
 8020298:	4770      	bx	lr
	...

0802029c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802029c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80202a0:	4698      	mov	r8, r3
 80202a2:	8883      	ldrh	r3, [r0, #4]
 80202a4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80202a8:	eba8 0303 	sub.w	r3, r8, r3
 80202ac:	b21b      	sxth	r3, r3
 80202ae:	4604      	mov	r4, r0
 80202b0:	2b00      	cmp	r3, #0
 80202b2:	4617      	mov	r7, r2
 80202b4:	4a18      	ldr	r2, [pc, #96]	; (8020318 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80202b6:	9200      	str	r2, [sp, #0]
 80202b8:	bfb8      	it	lt
 80202ba:	425b      	neglt	r3, r3
 80202bc:	8aa2      	ldrh	r2, [r4, #20]
 80202be:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80202c2:	f8ad 800a 	strh.w	r8, [sp, #10]
 80202c6:	b21b      	sxth	r3, r3
 80202c8:	460e      	mov	r6, r1
 80202ca:	4293      	cmp	r3, r2
 80202cc:	88c1      	ldrh	r1, [r0, #6]
 80202ce:	f8ad 1008 	strh.w	r1, [sp, #8]
 80202d2:	f04f 0000 	mov.w	r0, #0
 80202d6:	f88d 0004 	strb.w	r0, [sp, #4]
 80202da:	f8ad 500c 	strh.w	r5, [sp, #12]
 80202de:	dc07      	bgt.n	80202f0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80202e0:	1a69      	subs	r1, r5, r1
 80202e2:	b209      	sxth	r1, r1
 80202e4:	2900      	cmp	r1, #0
 80202e6:	bfb8      	it	lt
 80202e8:	4249      	neglt	r1, r1
 80202ea:	b209      	sxth	r1, r1
 80202ec:	428a      	cmp	r2, r1
 80202ee:	da10      	bge.n	8020312 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80202f0:	6920      	ldr	r0, [r4, #16]
 80202f2:	6803      	ldr	r3, [r0, #0]
 80202f4:	4669      	mov	r1, sp
 80202f6:	685b      	ldr	r3, [r3, #4]
 80202f8:	4798      	blx	r3
 80202fa:	eba8 0606 	sub.w	r6, r8, r6
 80202fe:	2300      	movs	r3, #0
 8020300:	1bef      	subs	r7, r5, r7
 8020302:	2001      	movs	r0, #1
 8020304:	8123      	strh	r3, [r4, #8]
 8020306:	8166      	strh	r6, [r4, #10]
 8020308:	81a7      	strh	r7, [r4, #12]
 802030a:	f8a4 8004 	strh.w	r8, [r4, #4]
 802030e:	80e5      	strh	r5, [r4, #6]
 8020310:	73a0      	strb	r0, [r4, #14]
 8020312:	b004      	add	sp, #16
 8020314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020318:	080234c8 	.word	0x080234c8

0802031c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802031c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802031e:	461e      	mov	r6, r3
 8020320:	1e4b      	subs	r3, r1, #1
 8020322:	2b01      	cmp	r3, #1
 8020324:	b085      	sub	sp, #20
 8020326:	4604      	mov	r4, r0
 8020328:	460d      	mov	r5, r1
 802032a:	4617      	mov	r7, r2
 802032c:	d84b      	bhi.n	80203c6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802032e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020332:	1cd3      	adds	r3, r2, #3
 8020334:	b29b      	uxth	r3, r3
 8020336:	2b06      	cmp	r3, #6
 8020338:	d916      	bls.n	8020368 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802033a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80203dc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802033e:	f8cd c004 	str.w	ip, [sp, #4]
 8020342:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020346:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802034a:	6900      	ldr	r0, [r0, #16]
 802034c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020350:	f04f 0c00 	mov.w	ip, #0
 8020354:	f88d c008 	strb.w	ip, [sp, #8]
 8020358:	f8ad 200a 	strh.w	r2, [sp, #10]
 802035c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020360:	6803      	ldr	r3, [r0, #0]
 8020362:	a901      	add	r1, sp, #4
 8020364:	689b      	ldr	r3, [r3, #8]
 8020366:	4798      	blx	r3
 8020368:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802036c:	1cd3      	adds	r3, r2, #3
 802036e:	b29b      	uxth	r3, r3
 8020370:	2b06      	cmp	r3, #6
 8020372:	d916      	bls.n	80203a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020374:	f8df c064 	ldr.w	ip, [pc, #100]	; 80203dc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020378:	f8cd c004 	str.w	ip, [sp, #4]
 802037c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020380:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020384:	6920      	ldr	r0, [r4, #16]
 8020386:	f8ad 100c 	strh.w	r1, [sp, #12]
 802038a:	f04f 0c01 	mov.w	ip, #1
 802038e:	f88d c008 	strb.w	ip, [sp, #8]
 8020392:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020396:	f8ad 300e 	strh.w	r3, [sp, #14]
 802039a:	6803      	ldr	r3, [r0, #0]
 802039c:	a901      	add	r1, sp, #4
 802039e:	689b      	ldr	r3, [r3, #8]
 80203a0:	4798      	blx	r3
 80203a2:	4b0d      	ldr	r3, [pc, #52]	; (80203d8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80203a4:	9301      	str	r3, [sp, #4]
 80203a6:	6920      	ldr	r0, [r4, #16]
 80203a8:	f88d 5008 	strb.w	r5, [sp, #8]
 80203ac:	2300      	movs	r3, #0
 80203ae:	f8ad 700a 	strh.w	r7, [sp, #10]
 80203b2:	f8ad 600c 	strh.w	r6, [sp, #12]
 80203b6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80203ba:	6803      	ldr	r3, [r0, #0]
 80203bc:	a901      	add	r1, sp, #4
 80203be:	681b      	ldr	r3, [r3, #0]
 80203c0:	4798      	blx	r3
 80203c2:	b005      	add	sp, #20
 80203c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80203c6:	2900      	cmp	r1, #0
 80203c8:	d1eb      	bne.n	80203a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80203ca:	80a2      	strh	r2, [r4, #4]
 80203cc:	80c6      	strh	r6, [r0, #6]
 80203ce:	60a1      	str	r1, [r4, #8]
 80203d0:	81a1      	strh	r1, [r4, #12]
 80203d2:	73a1      	strb	r1, [r4, #14]
 80203d4:	e7e5      	b.n	80203a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80203d6:	bf00      	nop
 80203d8:	080234b4 	.word	0x080234b4
 80203dc:	080234dc 	.word	0x080234dc

080203e0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80203e0:	b570      	push	{r4, r5, r6, lr}
 80203e2:	790b      	ldrb	r3, [r1, #4]
 80203e4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80203e8:	2b00      	cmp	r3, #0
 80203ea:	bf0c      	ite	eq
 80203ec:	2301      	moveq	r3, #1
 80203ee:	2300      	movne	r3, #0
 80203f0:	4604      	mov	r4, r0
 80203f2:	460e      	mov	r6, r1
 80203f4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80203f8:	d109      	bne.n	802040e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80203fa:	b14d      	cbz	r5, 8020410 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80203fc:	7933      	ldrb	r3, [r6, #4]
 80203fe:	2b01      	cmp	r3, #1
 8020400:	d10c      	bne.n	802041c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8020402:	6823      	ldr	r3, [r4, #0]
 8020404:	4620      	mov	r0, r4
 8020406:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8020408:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802040c:	4718      	bx	r3
 802040e:	b12d      	cbz	r5, 802041c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8020410:	6823      	ldr	r3, [r4, #0]
 8020412:	4620      	mov	r0, r4
 8020414:	695b      	ldr	r3, [r3, #20]
 8020416:	4798      	blx	r3
 8020418:	2d00      	cmp	r5, #0
 802041a:	d1ef      	bne.n	80203fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802041c:	bd70      	pop	{r4, r5, r6, pc}

0802041e <__aeabi_atexit>:
 802041e:	460b      	mov	r3, r1
 8020420:	4601      	mov	r1, r0
 8020422:	4618      	mov	r0, r3
 8020424:	f000 b8d4 	b.w	80205d0 <__cxa_atexit>

08020428 <_ZdlPvj>:
 8020428:	f000 b890 	b.w	802054c <_ZdlPv>

0802042c <__cxa_guard_acquire>:
 802042c:	6803      	ldr	r3, [r0, #0]
 802042e:	07db      	lsls	r3, r3, #31
 8020430:	d406      	bmi.n	8020440 <__cxa_guard_acquire+0x14>
 8020432:	7843      	ldrb	r3, [r0, #1]
 8020434:	b103      	cbz	r3, 8020438 <__cxa_guard_acquire+0xc>
 8020436:	deff      	udf	#255	; 0xff
 8020438:	2301      	movs	r3, #1
 802043a:	7043      	strb	r3, [r0, #1]
 802043c:	4618      	mov	r0, r3
 802043e:	4770      	bx	lr
 8020440:	2000      	movs	r0, #0
 8020442:	4770      	bx	lr

08020444 <__cxa_guard_release>:
 8020444:	2301      	movs	r3, #1
 8020446:	6003      	str	r3, [r0, #0]
 8020448:	4770      	bx	lr

0802044a <__cxa_pure_virtual>:
 802044a:	b508      	push	{r3, lr}
 802044c:	f000 f88c 	bl	8020568 <_ZSt9terminatev>

08020450 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj>:
 8020450:	b510      	push	{r4, lr}
 8020452:	4c09      	ldr	r4, [pc, #36]	; (8020478 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj+0x28>)
 8020454:	6001      	str	r1, [r0, #0]
 8020456:	2201      	movs	r2, #1
 8020458:	4601      	mov	r1, r0
 802045a:	680b      	ldr	r3, [r1, #0]
 802045c:	ea83 7393 	eor.w	r3, r3, r3, lsr #30
 8020460:	fb04 2303 	mla	r3, r4, r3, r2
 8020464:	3201      	adds	r2, #1
 8020466:	f5b2 7f1c 	cmp.w	r2, #624	; 0x270
 802046a:	f841 3f04 	str.w	r3, [r1, #4]!
 802046e:	d1f4      	bne.n	802045a <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj+0xa>
 8020470:	f8c0 29c0 	str.w	r2, [r0, #2496]	; 0x9c0
 8020474:	bd10      	pop	{r4, pc}
 8020476:	bf00      	nop
 8020478:	6c078965 	.word	0x6c078965

0802047c <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 802047c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802047e:	460c      	mov	r4, r1
 8020480:	4605      	mov	r5, r0
 8020482:	4911      	ldr	r1, [pc, #68]	; (80204c8 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4c>)
 8020484:	4620      	mov	r0, r4
 8020486:	f000 f84d 	bl	8020524 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 802048a:	b930      	cbnz	r0, 802049a <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e>
 802048c:	f241 5171 	movw	r1, #5489	; 0x1571
 8020490:	4628      	mov	r0, r5
 8020492:	f7ff ffdd 	bl	8020450 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj>
 8020496:	b003      	add	sp, #12
 8020498:	bd30      	pop	{r4, r5, pc}
 802049a:	490c      	ldr	r1, [pc, #48]	; (80204cc <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x50>)
 802049c:	4620      	mov	r0, r4
 802049e:	f000 f841 	bl	8020524 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 80204a2:	2800      	cmp	r0, #0
 80204a4:	d0f2      	beq.n	802048c <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10>
 80204a6:	6824      	ldr	r4, [r4, #0]
 80204a8:	a901      	add	r1, sp, #4
 80204aa:	2200      	movs	r2, #0
 80204ac:	4620      	mov	r0, r4
 80204ae:	f000 fda3 	bl	8020ff8 <strtoul>
 80204b2:	7823      	ldrb	r3, [r4, #0]
 80204b4:	4601      	mov	r1, r0
 80204b6:	b11b      	cbz	r3, 80204c0 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44>
 80204b8:	9b01      	ldr	r3, [sp, #4]
 80204ba:	781b      	ldrb	r3, [r3, #0]
 80204bc:	2b00      	cmp	r3, #0
 80204be:	d0e7      	beq.n	8020490 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x14>
 80204c0:	4803      	ldr	r0, [pc, #12]	; (80204d0 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x54>)
 80204c2:	f000 f856 	bl	8020572 <_ZSt21__throw_runtime_errorPKc>
 80204c6:	bf00      	nop
 80204c8:	08022ec0 	.word	0x08022ec0
 80204cc:	080237f8 	.word	0x080237f8
 80204d0:	08023800 	.word	0x08023800

080204d4 <_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 80204d4:	f7ff bfd2 	b.w	802047c <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>

080204d8 <_ZNSt13random_device9_M_getvalEv>:
 80204d8:	b508      	push	{r3, lr}
 80204da:	f7e4 ff7f 	bl	80053dc <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
 80204de:	bd08      	pop	{r3, pc}

080204e0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>:
 80204e0:	b10a      	cbz	r2, 80204e6 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0+0x6>
 80204e2:	f000 b8df 	b.w	80206a4 <memcpy>
 80204e6:	4770      	bx	lr

080204e8 <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 80204e8:	b10a      	cbz	r2, 80204ee <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 80204ea:	f000 b8cb 	b.w	8020684 <memcmp>
 80204ee:	4610      	mov	r0, r2
 80204f0:	4770      	bx	lr

080204f2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 80204f2:	f850 3b08 	ldr.w	r3, [r0], #8
 80204f6:	4283      	cmp	r3, r0
 80204f8:	d002      	beq.n	8020500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 80204fa:	4618      	mov	r0, r3
 80204fc:	f000 b826 	b.w	802054c <_ZdlPv>
 8020500:	4770      	bx	lr

08020502 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8020502:	2a01      	cmp	r2, #1
 8020504:	b410      	push	{r4}
 8020506:	d104      	bne.n	8020512 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
 8020508:	780a      	ldrb	r2, [r1, #0]
 802050a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802050e:	7002      	strb	r2, [r0, #0]
 8020510:	4770      	bx	lr
 8020512:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020516:	f7ff bfe3 	b.w	80204e0 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>

0802051a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 802051a:	b508      	push	{r3, lr}
 802051c:	1a52      	subs	r2, r2, r1
 802051e:	f7ff fff0 	bl	8020502 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 8020522:	bd08      	pop	{r3, pc}

08020524 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 8020524:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020526:	6846      	ldr	r6, [r0, #4]
 8020528:	9101      	str	r1, [sp, #4]
 802052a:	4605      	mov	r5, r0
 802052c:	4608      	mov	r0, r1
 802052e:	f7df feaf 	bl	8000290 <strlen>
 8020532:	4286      	cmp	r6, r0
 8020534:	4604      	mov	r4, r0
 8020536:	4632      	mov	r2, r6
 8020538:	9901      	ldr	r1, [sp, #4]
 802053a:	bf28      	it	cs
 802053c:	4602      	movcs	r2, r0
 802053e:	6828      	ldr	r0, [r5, #0]
 8020540:	f7ff ffd2 	bl	80204e8 <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 8020544:	b900      	cbnz	r0, 8020548 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 8020546:	1b30      	subs	r0, r6, r4
 8020548:	b002      	add	sp, #8
 802054a:	bd70      	pop	{r4, r5, r6, pc}

0802054c <_ZdlPv>:
 802054c:	f000 b892 	b.w	8020674 <free>

08020550 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020550:	b508      	push	{r3, lr}
 8020552:	4780      	blx	r0
 8020554:	f000 f810 	bl	8020578 <abort>

08020558 <_ZSt13get_terminatev>:
 8020558:	4b02      	ldr	r3, [pc, #8]	; (8020564 <_ZSt13get_terminatev+0xc>)
 802055a:	6818      	ldr	r0, [r3, #0]
 802055c:	f3bf 8f5b 	dmb	ish
 8020560:	4770      	bx	lr
 8020562:	bf00      	nop
 8020564:	20000100 	.word	0x20000100

08020568 <_ZSt9terminatev>:
 8020568:	b508      	push	{r3, lr}
 802056a:	f7ff fff5 	bl	8020558 <_ZSt13get_terminatev>
 802056e:	f7ff ffef 	bl	8020550 <_ZN10__cxxabiv111__terminateEPFvvE>

08020572 <_ZSt21__throw_runtime_errorPKc>:
 8020572:	b508      	push	{r3, lr}
 8020574:	f000 f800 	bl	8020578 <abort>

08020578 <abort>:
 8020578:	b508      	push	{r3, lr}
 802057a:	2006      	movs	r0, #6
 802057c:	f000 fcae 	bl	8020edc <raise>
 8020580:	2001      	movs	r0, #1
 8020582:	f7e1 fdb9 	bl	80020f8 <_exit>
	...

08020588 <__assert_func>:
 8020588:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802058a:	4614      	mov	r4, r2
 802058c:	461a      	mov	r2, r3
 802058e:	4b09      	ldr	r3, [pc, #36]	; (80205b4 <__assert_func+0x2c>)
 8020590:	681b      	ldr	r3, [r3, #0]
 8020592:	4605      	mov	r5, r0
 8020594:	68d8      	ldr	r0, [r3, #12]
 8020596:	b14c      	cbz	r4, 80205ac <__assert_func+0x24>
 8020598:	4b07      	ldr	r3, [pc, #28]	; (80205b8 <__assert_func+0x30>)
 802059a:	9100      	str	r1, [sp, #0]
 802059c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80205a0:	4906      	ldr	r1, [pc, #24]	; (80205bc <__assert_func+0x34>)
 80205a2:	462b      	mov	r3, r5
 80205a4:	f000 f828 	bl	80205f8 <fiprintf>
 80205a8:	f7ff ffe6 	bl	8020578 <abort>
 80205ac:	4b04      	ldr	r3, [pc, #16]	; (80205c0 <__assert_func+0x38>)
 80205ae:	461c      	mov	r4, r3
 80205b0:	e7f3      	b.n	802059a <__assert_func+0x12>
 80205b2:	bf00      	nop
 80205b4:	20000104 	.word	0x20000104
 80205b8:	08023832 	.word	0x08023832
 80205bc:	0802383f 	.word	0x0802383f
 80205c0:	0802386d 	.word	0x0802386d

080205c4 <atexit>:
 80205c4:	2300      	movs	r3, #0
 80205c6:	4601      	mov	r1, r0
 80205c8:	461a      	mov	r2, r3
 80205ca:	4618      	mov	r0, r3
 80205cc:	f000 bdde 	b.w	802118c <__register_exitproc>

080205d0 <__cxa_atexit>:
 80205d0:	b510      	push	{r4, lr}
 80205d2:	4c05      	ldr	r4, [pc, #20]	; (80205e8 <__cxa_atexit+0x18>)
 80205d4:	4613      	mov	r3, r2
 80205d6:	b12c      	cbz	r4, 80205e4 <__cxa_atexit+0x14>
 80205d8:	460a      	mov	r2, r1
 80205da:	4601      	mov	r1, r0
 80205dc:	2002      	movs	r0, #2
 80205de:	f000 fdd5 	bl	802118c <__register_exitproc>
 80205e2:	bd10      	pop	{r4, pc}
 80205e4:	4620      	mov	r0, r4
 80205e6:	e7fc      	b.n	80205e2 <__cxa_atexit+0x12>
 80205e8:	0802118d 	.word	0x0802118d

080205ec <__errno>:
 80205ec:	4b01      	ldr	r3, [pc, #4]	; (80205f4 <__errno+0x8>)
 80205ee:	6818      	ldr	r0, [r3, #0]
 80205f0:	4770      	bx	lr
 80205f2:	bf00      	nop
 80205f4:	20000104 	.word	0x20000104

080205f8 <fiprintf>:
 80205f8:	b40e      	push	{r1, r2, r3}
 80205fa:	b503      	push	{r0, r1, lr}
 80205fc:	4601      	mov	r1, r0
 80205fe:	ab03      	add	r3, sp, #12
 8020600:	4805      	ldr	r0, [pc, #20]	; (8020618 <fiprintf+0x20>)
 8020602:	f853 2b04 	ldr.w	r2, [r3], #4
 8020606:	6800      	ldr	r0, [r0, #0]
 8020608:	9301      	str	r3, [sp, #4]
 802060a:	f000 f96b 	bl	80208e4 <_vfiprintf_r>
 802060e:	b002      	add	sp, #8
 8020610:	f85d eb04 	ldr.w	lr, [sp], #4
 8020614:	b003      	add	sp, #12
 8020616:	4770      	bx	lr
 8020618:	20000104 	.word	0x20000104

0802061c <__libc_init_array>:
 802061c:	b570      	push	{r4, r5, r6, lr}
 802061e:	4d0d      	ldr	r5, [pc, #52]	; (8020654 <__libc_init_array+0x38>)
 8020620:	4c0d      	ldr	r4, [pc, #52]	; (8020658 <__libc_init_array+0x3c>)
 8020622:	1b64      	subs	r4, r4, r5
 8020624:	10a4      	asrs	r4, r4, #2
 8020626:	2600      	movs	r6, #0
 8020628:	42a6      	cmp	r6, r4
 802062a:	d109      	bne.n	8020640 <__libc_init_array+0x24>
 802062c:	4d0b      	ldr	r5, [pc, #44]	; (802065c <__libc_init_array+0x40>)
 802062e:	4c0c      	ldr	r4, [pc, #48]	; (8020660 <__libc_init_array+0x44>)
 8020630:	f001 f8e6 	bl	8021800 <_init>
 8020634:	1b64      	subs	r4, r4, r5
 8020636:	10a4      	asrs	r4, r4, #2
 8020638:	2600      	movs	r6, #0
 802063a:	42a6      	cmp	r6, r4
 802063c:	d105      	bne.n	802064a <__libc_init_array+0x2e>
 802063e:	bd70      	pop	{r4, r5, r6, pc}
 8020640:	f855 3b04 	ldr.w	r3, [r5], #4
 8020644:	4798      	blx	r3
 8020646:	3601      	adds	r6, #1
 8020648:	e7ee      	b.n	8020628 <__libc_init_array+0xc>
 802064a:	f855 3b04 	ldr.w	r3, [r5], #4
 802064e:	4798      	blx	r3
 8020650:	3601      	adds	r6, #1
 8020652:	e7f2      	b.n	802063a <__libc_init_array+0x1e>
 8020654:	081254a4 	.word	0x081254a4
 8020658:	081254a4 	.word	0x081254a4
 802065c:	081254a4 	.word	0x081254a4
 8020660:	081254b8 	.word	0x081254b8

08020664 <malloc>:
 8020664:	4b02      	ldr	r3, [pc, #8]	; (8020670 <malloc+0xc>)
 8020666:	4601      	mov	r1, r0
 8020668:	6818      	ldr	r0, [r3, #0]
 802066a:	f000 b89d 	b.w	80207a8 <_malloc_r>
 802066e:	bf00      	nop
 8020670:	20000104 	.word	0x20000104

08020674 <free>:
 8020674:	4b02      	ldr	r3, [pc, #8]	; (8020680 <free+0xc>)
 8020676:	4601      	mov	r1, r0
 8020678:	6818      	ldr	r0, [r3, #0]
 802067a:	f000 b829 	b.w	80206d0 <_free_r>
 802067e:	bf00      	nop
 8020680:	20000104 	.word	0x20000104

08020684 <memcmp>:
 8020684:	b510      	push	{r4, lr}
 8020686:	3901      	subs	r1, #1
 8020688:	4402      	add	r2, r0
 802068a:	4290      	cmp	r0, r2
 802068c:	d101      	bne.n	8020692 <memcmp+0xe>
 802068e:	2000      	movs	r0, #0
 8020690:	e005      	b.n	802069e <memcmp+0x1a>
 8020692:	7803      	ldrb	r3, [r0, #0]
 8020694:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8020698:	42a3      	cmp	r3, r4
 802069a:	d001      	beq.n	80206a0 <memcmp+0x1c>
 802069c:	1b18      	subs	r0, r3, r4
 802069e:	bd10      	pop	{r4, pc}
 80206a0:	3001      	adds	r0, #1
 80206a2:	e7f2      	b.n	802068a <memcmp+0x6>

080206a4 <memcpy>:
 80206a4:	440a      	add	r2, r1
 80206a6:	4291      	cmp	r1, r2
 80206a8:	f100 33ff 	add.w	r3, r0, #4294967295
 80206ac:	d100      	bne.n	80206b0 <memcpy+0xc>
 80206ae:	4770      	bx	lr
 80206b0:	b510      	push	{r4, lr}
 80206b2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80206b6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80206ba:	4291      	cmp	r1, r2
 80206bc:	d1f9      	bne.n	80206b2 <memcpy+0xe>
 80206be:	bd10      	pop	{r4, pc}

080206c0 <memset>:
 80206c0:	4402      	add	r2, r0
 80206c2:	4603      	mov	r3, r0
 80206c4:	4293      	cmp	r3, r2
 80206c6:	d100      	bne.n	80206ca <memset+0xa>
 80206c8:	4770      	bx	lr
 80206ca:	f803 1b01 	strb.w	r1, [r3], #1
 80206ce:	e7f9      	b.n	80206c4 <memset+0x4>

080206d0 <_free_r>:
 80206d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80206d2:	2900      	cmp	r1, #0
 80206d4:	d044      	beq.n	8020760 <_free_r+0x90>
 80206d6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80206da:	9001      	str	r0, [sp, #4]
 80206dc:	2b00      	cmp	r3, #0
 80206de:	f1a1 0404 	sub.w	r4, r1, #4
 80206e2:	bfb8      	it	lt
 80206e4:	18e4      	addlt	r4, r4, r3
 80206e6:	f000 ffe3 	bl	80216b0 <__malloc_lock>
 80206ea:	4a1e      	ldr	r2, [pc, #120]	; (8020764 <_free_r+0x94>)
 80206ec:	9801      	ldr	r0, [sp, #4]
 80206ee:	6813      	ldr	r3, [r2, #0]
 80206f0:	b933      	cbnz	r3, 8020700 <_free_r+0x30>
 80206f2:	6063      	str	r3, [r4, #4]
 80206f4:	6014      	str	r4, [r2, #0]
 80206f6:	b003      	add	sp, #12
 80206f8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80206fc:	f000 bfde 	b.w	80216bc <__malloc_unlock>
 8020700:	42a3      	cmp	r3, r4
 8020702:	d908      	bls.n	8020716 <_free_r+0x46>
 8020704:	6825      	ldr	r5, [r4, #0]
 8020706:	1961      	adds	r1, r4, r5
 8020708:	428b      	cmp	r3, r1
 802070a:	bf01      	itttt	eq
 802070c:	6819      	ldreq	r1, [r3, #0]
 802070e:	685b      	ldreq	r3, [r3, #4]
 8020710:	1949      	addeq	r1, r1, r5
 8020712:	6021      	streq	r1, [r4, #0]
 8020714:	e7ed      	b.n	80206f2 <_free_r+0x22>
 8020716:	461a      	mov	r2, r3
 8020718:	685b      	ldr	r3, [r3, #4]
 802071a:	b10b      	cbz	r3, 8020720 <_free_r+0x50>
 802071c:	42a3      	cmp	r3, r4
 802071e:	d9fa      	bls.n	8020716 <_free_r+0x46>
 8020720:	6811      	ldr	r1, [r2, #0]
 8020722:	1855      	adds	r5, r2, r1
 8020724:	42a5      	cmp	r5, r4
 8020726:	d10b      	bne.n	8020740 <_free_r+0x70>
 8020728:	6824      	ldr	r4, [r4, #0]
 802072a:	4421      	add	r1, r4
 802072c:	1854      	adds	r4, r2, r1
 802072e:	42a3      	cmp	r3, r4
 8020730:	6011      	str	r1, [r2, #0]
 8020732:	d1e0      	bne.n	80206f6 <_free_r+0x26>
 8020734:	681c      	ldr	r4, [r3, #0]
 8020736:	685b      	ldr	r3, [r3, #4]
 8020738:	6053      	str	r3, [r2, #4]
 802073a:	4421      	add	r1, r4
 802073c:	6011      	str	r1, [r2, #0]
 802073e:	e7da      	b.n	80206f6 <_free_r+0x26>
 8020740:	d902      	bls.n	8020748 <_free_r+0x78>
 8020742:	230c      	movs	r3, #12
 8020744:	6003      	str	r3, [r0, #0]
 8020746:	e7d6      	b.n	80206f6 <_free_r+0x26>
 8020748:	6825      	ldr	r5, [r4, #0]
 802074a:	1961      	adds	r1, r4, r5
 802074c:	428b      	cmp	r3, r1
 802074e:	bf04      	itt	eq
 8020750:	6819      	ldreq	r1, [r3, #0]
 8020752:	685b      	ldreq	r3, [r3, #4]
 8020754:	6063      	str	r3, [r4, #4]
 8020756:	bf04      	itt	eq
 8020758:	1949      	addeq	r1, r1, r5
 802075a:	6021      	streq	r1, [r4, #0]
 802075c:	6054      	str	r4, [r2, #4]
 802075e:	e7ca      	b.n	80206f6 <_free_r+0x26>
 8020760:	b003      	add	sp, #12
 8020762:	bd30      	pop	{r4, r5, pc}
 8020764:	20015910 	.word	0x20015910

08020768 <sbrk_aligned>:
 8020768:	b570      	push	{r4, r5, r6, lr}
 802076a:	4e0e      	ldr	r6, [pc, #56]	; (80207a4 <sbrk_aligned+0x3c>)
 802076c:	460c      	mov	r4, r1
 802076e:	6831      	ldr	r1, [r6, #0]
 8020770:	4605      	mov	r5, r0
 8020772:	b911      	cbnz	r1, 802077a <sbrk_aligned+0x12>
 8020774:	f000 fb7a 	bl	8020e6c <_sbrk_r>
 8020778:	6030      	str	r0, [r6, #0]
 802077a:	4621      	mov	r1, r4
 802077c:	4628      	mov	r0, r5
 802077e:	f000 fb75 	bl	8020e6c <_sbrk_r>
 8020782:	1c43      	adds	r3, r0, #1
 8020784:	d00a      	beq.n	802079c <sbrk_aligned+0x34>
 8020786:	1cc4      	adds	r4, r0, #3
 8020788:	f024 0403 	bic.w	r4, r4, #3
 802078c:	42a0      	cmp	r0, r4
 802078e:	d007      	beq.n	80207a0 <sbrk_aligned+0x38>
 8020790:	1a21      	subs	r1, r4, r0
 8020792:	4628      	mov	r0, r5
 8020794:	f000 fb6a 	bl	8020e6c <_sbrk_r>
 8020798:	3001      	adds	r0, #1
 802079a:	d101      	bne.n	80207a0 <sbrk_aligned+0x38>
 802079c:	f04f 34ff 	mov.w	r4, #4294967295
 80207a0:	4620      	mov	r0, r4
 80207a2:	bd70      	pop	{r4, r5, r6, pc}
 80207a4:	20015914 	.word	0x20015914

080207a8 <_malloc_r>:
 80207a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80207ac:	1ccd      	adds	r5, r1, #3
 80207ae:	f025 0503 	bic.w	r5, r5, #3
 80207b2:	3508      	adds	r5, #8
 80207b4:	2d0c      	cmp	r5, #12
 80207b6:	bf38      	it	cc
 80207b8:	250c      	movcc	r5, #12
 80207ba:	2d00      	cmp	r5, #0
 80207bc:	4607      	mov	r7, r0
 80207be:	db01      	blt.n	80207c4 <_malloc_r+0x1c>
 80207c0:	42a9      	cmp	r1, r5
 80207c2:	d905      	bls.n	80207d0 <_malloc_r+0x28>
 80207c4:	230c      	movs	r3, #12
 80207c6:	603b      	str	r3, [r7, #0]
 80207c8:	2600      	movs	r6, #0
 80207ca:	4630      	mov	r0, r6
 80207cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80207d0:	4e2e      	ldr	r6, [pc, #184]	; (802088c <_malloc_r+0xe4>)
 80207d2:	f000 ff6d 	bl	80216b0 <__malloc_lock>
 80207d6:	6833      	ldr	r3, [r6, #0]
 80207d8:	461c      	mov	r4, r3
 80207da:	bb34      	cbnz	r4, 802082a <_malloc_r+0x82>
 80207dc:	4629      	mov	r1, r5
 80207de:	4638      	mov	r0, r7
 80207e0:	f7ff ffc2 	bl	8020768 <sbrk_aligned>
 80207e4:	1c43      	adds	r3, r0, #1
 80207e6:	4604      	mov	r4, r0
 80207e8:	d14d      	bne.n	8020886 <_malloc_r+0xde>
 80207ea:	6834      	ldr	r4, [r6, #0]
 80207ec:	4626      	mov	r6, r4
 80207ee:	2e00      	cmp	r6, #0
 80207f0:	d140      	bne.n	8020874 <_malloc_r+0xcc>
 80207f2:	6823      	ldr	r3, [r4, #0]
 80207f4:	4631      	mov	r1, r6
 80207f6:	4638      	mov	r0, r7
 80207f8:	eb04 0803 	add.w	r8, r4, r3
 80207fc:	f000 fb36 	bl	8020e6c <_sbrk_r>
 8020800:	4580      	cmp	r8, r0
 8020802:	d13a      	bne.n	802087a <_malloc_r+0xd2>
 8020804:	6821      	ldr	r1, [r4, #0]
 8020806:	3503      	adds	r5, #3
 8020808:	1a6d      	subs	r5, r5, r1
 802080a:	f025 0503 	bic.w	r5, r5, #3
 802080e:	3508      	adds	r5, #8
 8020810:	2d0c      	cmp	r5, #12
 8020812:	bf38      	it	cc
 8020814:	250c      	movcc	r5, #12
 8020816:	4629      	mov	r1, r5
 8020818:	4638      	mov	r0, r7
 802081a:	f7ff ffa5 	bl	8020768 <sbrk_aligned>
 802081e:	3001      	adds	r0, #1
 8020820:	d02b      	beq.n	802087a <_malloc_r+0xd2>
 8020822:	6823      	ldr	r3, [r4, #0]
 8020824:	442b      	add	r3, r5
 8020826:	6023      	str	r3, [r4, #0]
 8020828:	e00e      	b.n	8020848 <_malloc_r+0xa0>
 802082a:	6822      	ldr	r2, [r4, #0]
 802082c:	1b52      	subs	r2, r2, r5
 802082e:	d41e      	bmi.n	802086e <_malloc_r+0xc6>
 8020830:	2a0b      	cmp	r2, #11
 8020832:	d916      	bls.n	8020862 <_malloc_r+0xba>
 8020834:	1961      	adds	r1, r4, r5
 8020836:	42a3      	cmp	r3, r4
 8020838:	6025      	str	r5, [r4, #0]
 802083a:	bf18      	it	ne
 802083c:	6059      	strne	r1, [r3, #4]
 802083e:	6863      	ldr	r3, [r4, #4]
 8020840:	bf08      	it	eq
 8020842:	6031      	streq	r1, [r6, #0]
 8020844:	5162      	str	r2, [r4, r5]
 8020846:	604b      	str	r3, [r1, #4]
 8020848:	4638      	mov	r0, r7
 802084a:	f104 060b 	add.w	r6, r4, #11
 802084e:	f000 ff35 	bl	80216bc <__malloc_unlock>
 8020852:	f026 0607 	bic.w	r6, r6, #7
 8020856:	1d23      	adds	r3, r4, #4
 8020858:	1af2      	subs	r2, r6, r3
 802085a:	d0b6      	beq.n	80207ca <_malloc_r+0x22>
 802085c:	1b9b      	subs	r3, r3, r6
 802085e:	50a3      	str	r3, [r4, r2]
 8020860:	e7b3      	b.n	80207ca <_malloc_r+0x22>
 8020862:	6862      	ldr	r2, [r4, #4]
 8020864:	42a3      	cmp	r3, r4
 8020866:	bf0c      	ite	eq
 8020868:	6032      	streq	r2, [r6, #0]
 802086a:	605a      	strne	r2, [r3, #4]
 802086c:	e7ec      	b.n	8020848 <_malloc_r+0xa0>
 802086e:	4623      	mov	r3, r4
 8020870:	6864      	ldr	r4, [r4, #4]
 8020872:	e7b2      	b.n	80207da <_malloc_r+0x32>
 8020874:	4634      	mov	r4, r6
 8020876:	6876      	ldr	r6, [r6, #4]
 8020878:	e7b9      	b.n	80207ee <_malloc_r+0x46>
 802087a:	230c      	movs	r3, #12
 802087c:	603b      	str	r3, [r7, #0]
 802087e:	4638      	mov	r0, r7
 8020880:	f000 ff1c 	bl	80216bc <__malloc_unlock>
 8020884:	e7a1      	b.n	80207ca <_malloc_r+0x22>
 8020886:	6025      	str	r5, [r4, #0]
 8020888:	e7de      	b.n	8020848 <_malloc_r+0xa0>
 802088a:	bf00      	nop
 802088c:	20015910 	.word	0x20015910

08020890 <__sfputc_r>:
 8020890:	6893      	ldr	r3, [r2, #8]
 8020892:	3b01      	subs	r3, #1
 8020894:	2b00      	cmp	r3, #0
 8020896:	b410      	push	{r4}
 8020898:	6093      	str	r3, [r2, #8]
 802089a:	da08      	bge.n	80208ae <__sfputc_r+0x1e>
 802089c:	6994      	ldr	r4, [r2, #24]
 802089e:	42a3      	cmp	r3, r4
 80208a0:	db01      	blt.n	80208a6 <__sfputc_r+0x16>
 80208a2:	290a      	cmp	r1, #10
 80208a4:	d103      	bne.n	80208ae <__sfputc_r+0x1e>
 80208a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80208aa:	f000 bbaf 	b.w	802100c <__swbuf_r>
 80208ae:	6813      	ldr	r3, [r2, #0]
 80208b0:	1c58      	adds	r0, r3, #1
 80208b2:	6010      	str	r0, [r2, #0]
 80208b4:	7019      	strb	r1, [r3, #0]
 80208b6:	4608      	mov	r0, r1
 80208b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80208bc:	4770      	bx	lr

080208be <__sfputs_r>:
 80208be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80208c0:	4606      	mov	r6, r0
 80208c2:	460f      	mov	r7, r1
 80208c4:	4614      	mov	r4, r2
 80208c6:	18d5      	adds	r5, r2, r3
 80208c8:	42ac      	cmp	r4, r5
 80208ca:	d101      	bne.n	80208d0 <__sfputs_r+0x12>
 80208cc:	2000      	movs	r0, #0
 80208ce:	e007      	b.n	80208e0 <__sfputs_r+0x22>
 80208d0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80208d4:	463a      	mov	r2, r7
 80208d6:	4630      	mov	r0, r6
 80208d8:	f7ff ffda 	bl	8020890 <__sfputc_r>
 80208dc:	1c43      	adds	r3, r0, #1
 80208de:	d1f3      	bne.n	80208c8 <__sfputs_r+0xa>
 80208e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080208e4 <_vfiprintf_r>:
 80208e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208e8:	460d      	mov	r5, r1
 80208ea:	b09d      	sub	sp, #116	; 0x74
 80208ec:	4614      	mov	r4, r2
 80208ee:	4698      	mov	r8, r3
 80208f0:	4606      	mov	r6, r0
 80208f2:	b118      	cbz	r0, 80208fc <_vfiprintf_r+0x18>
 80208f4:	6983      	ldr	r3, [r0, #24]
 80208f6:	b90b      	cbnz	r3, 80208fc <_vfiprintf_r+0x18>
 80208f8:	f000 fdd4 	bl	80214a4 <__sinit>
 80208fc:	4b89      	ldr	r3, [pc, #548]	; (8020b24 <_vfiprintf_r+0x240>)
 80208fe:	429d      	cmp	r5, r3
 8020900:	d11b      	bne.n	802093a <_vfiprintf_r+0x56>
 8020902:	6875      	ldr	r5, [r6, #4]
 8020904:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020906:	07d9      	lsls	r1, r3, #31
 8020908:	d405      	bmi.n	8020916 <_vfiprintf_r+0x32>
 802090a:	89ab      	ldrh	r3, [r5, #12]
 802090c:	059a      	lsls	r2, r3, #22
 802090e:	d402      	bmi.n	8020916 <_vfiprintf_r+0x32>
 8020910:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020912:	f000 fe65 	bl	80215e0 <__retarget_lock_acquire_recursive>
 8020916:	89ab      	ldrh	r3, [r5, #12]
 8020918:	071b      	lsls	r3, r3, #28
 802091a:	d501      	bpl.n	8020920 <_vfiprintf_r+0x3c>
 802091c:	692b      	ldr	r3, [r5, #16]
 802091e:	b9eb      	cbnz	r3, 802095c <_vfiprintf_r+0x78>
 8020920:	4629      	mov	r1, r5
 8020922:	4630      	mov	r0, r6
 8020924:	f000 fbc4 	bl	80210b0 <__swsetup_r>
 8020928:	b1c0      	cbz	r0, 802095c <_vfiprintf_r+0x78>
 802092a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802092c:	07dc      	lsls	r4, r3, #31
 802092e:	d50e      	bpl.n	802094e <_vfiprintf_r+0x6a>
 8020930:	f04f 30ff 	mov.w	r0, #4294967295
 8020934:	b01d      	add	sp, #116	; 0x74
 8020936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802093a:	4b7b      	ldr	r3, [pc, #492]	; (8020b28 <_vfiprintf_r+0x244>)
 802093c:	429d      	cmp	r5, r3
 802093e:	d101      	bne.n	8020944 <_vfiprintf_r+0x60>
 8020940:	68b5      	ldr	r5, [r6, #8]
 8020942:	e7df      	b.n	8020904 <_vfiprintf_r+0x20>
 8020944:	4b79      	ldr	r3, [pc, #484]	; (8020b2c <_vfiprintf_r+0x248>)
 8020946:	429d      	cmp	r5, r3
 8020948:	bf08      	it	eq
 802094a:	68f5      	ldreq	r5, [r6, #12]
 802094c:	e7da      	b.n	8020904 <_vfiprintf_r+0x20>
 802094e:	89ab      	ldrh	r3, [r5, #12]
 8020950:	0598      	lsls	r0, r3, #22
 8020952:	d4ed      	bmi.n	8020930 <_vfiprintf_r+0x4c>
 8020954:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020956:	f000 fe45 	bl	80215e4 <__retarget_lock_release_recursive>
 802095a:	e7e9      	b.n	8020930 <_vfiprintf_r+0x4c>
 802095c:	2300      	movs	r3, #0
 802095e:	9309      	str	r3, [sp, #36]	; 0x24
 8020960:	2320      	movs	r3, #32
 8020962:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020966:	f8cd 800c 	str.w	r8, [sp, #12]
 802096a:	2330      	movs	r3, #48	; 0x30
 802096c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020b30 <_vfiprintf_r+0x24c>
 8020970:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020974:	f04f 0901 	mov.w	r9, #1
 8020978:	4623      	mov	r3, r4
 802097a:	469a      	mov	sl, r3
 802097c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020980:	b10a      	cbz	r2, 8020986 <_vfiprintf_r+0xa2>
 8020982:	2a25      	cmp	r2, #37	; 0x25
 8020984:	d1f9      	bne.n	802097a <_vfiprintf_r+0x96>
 8020986:	ebba 0b04 	subs.w	fp, sl, r4
 802098a:	d00b      	beq.n	80209a4 <_vfiprintf_r+0xc0>
 802098c:	465b      	mov	r3, fp
 802098e:	4622      	mov	r2, r4
 8020990:	4629      	mov	r1, r5
 8020992:	4630      	mov	r0, r6
 8020994:	f7ff ff93 	bl	80208be <__sfputs_r>
 8020998:	3001      	adds	r0, #1
 802099a:	f000 80aa 	beq.w	8020af2 <_vfiprintf_r+0x20e>
 802099e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80209a0:	445a      	add	r2, fp
 80209a2:	9209      	str	r2, [sp, #36]	; 0x24
 80209a4:	f89a 3000 	ldrb.w	r3, [sl]
 80209a8:	2b00      	cmp	r3, #0
 80209aa:	f000 80a2 	beq.w	8020af2 <_vfiprintf_r+0x20e>
 80209ae:	2300      	movs	r3, #0
 80209b0:	f04f 32ff 	mov.w	r2, #4294967295
 80209b4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80209b8:	f10a 0a01 	add.w	sl, sl, #1
 80209bc:	9304      	str	r3, [sp, #16]
 80209be:	9307      	str	r3, [sp, #28]
 80209c0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80209c4:	931a      	str	r3, [sp, #104]	; 0x68
 80209c6:	4654      	mov	r4, sl
 80209c8:	2205      	movs	r2, #5
 80209ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80209ce:	4858      	ldr	r0, [pc, #352]	; (8020b30 <_vfiprintf_r+0x24c>)
 80209d0:	f7df fc0e 	bl	80001f0 <memchr>
 80209d4:	9a04      	ldr	r2, [sp, #16]
 80209d6:	b9d8      	cbnz	r0, 8020a10 <_vfiprintf_r+0x12c>
 80209d8:	06d1      	lsls	r1, r2, #27
 80209da:	bf44      	itt	mi
 80209dc:	2320      	movmi	r3, #32
 80209de:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80209e2:	0713      	lsls	r3, r2, #28
 80209e4:	bf44      	itt	mi
 80209e6:	232b      	movmi	r3, #43	; 0x2b
 80209e8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80209ec:	f89a 3000 	ldrb.w	r3, [sl]
 80209f0:	2b2a      	cmp	r3, #42	; 0x2a
 80209f2:	d015      	beq.n	8020a20 <_vfiprintf_r+0x13c>
 80209f4:	9a07      	ldr	r2, [sp, #28]
 80209f6:	4654      	mov	r4, sl
 80209f8:	2000      	movs	r0, #0
 80209fa:	f04f 0c0a 	mov.w	ip, #10
 80209fe:	4621      	mov	r1, r4
 8020a00:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020a04:	3b30      	subs	r3, #48	; 0x30
 8020a06:	2b09      	cmp	r3, #9
 8020a08:	d94e      	bls.n	8020aa8 <_vfiprintf_r+0x1c4>
 8020a0a:	b1b0      	cbz	r0, 8020a3a <_vfiprintf_r+0x156>
 8020a0c:	9207      	str	r2, [sp, #28]
 8020a0e:	e014      	b.n	8020a3a <_vfiprintf_r+0x156>
 8020a10:	eba0 0308 	sub.w	r3, r0, r8
 8020a14:	fa09 f303 	lsl.w	r3, r9, r3
 8020a18:	4313      	orrs	r3, r2
 8020a1a:	9304      	str	r3, [sp, #16]
 8020a1c:	46a2      	mov	sl, r4
 8020a1e:	e7d2      	b.n	80209c6 <_vfiprintf_r+0xe2>
 8020a20:	9b03      	ldr	r3, [sp, #12]
 8020a22:	1d19      	adds	r1, r3, #4
 8020a24:	681b      	ldr	r3, [r3, #0]
 8020a26:	9103      	str	r1, [sp, #12]
 8020a28:	2b00      	cmp	r3, #0
 8020a2a:	bfbb      	ittet	lt
 8020a2c:	425b      	neglt	r3, r3
 8020a2e:	f042 0202 	orrlt.w	r2, r2, #2
 8020a32:	9307      	strge	r3, [sp, #28]
 8020a34:	9307      	strlt	r3, [sp, #28]
 8020a36:	bfb8      	it	lt
 8020a38:	9204      	strlt	r2, [sp, #16]
 8020a3a:	7823      	ldrb	r3, [r4, #0]
 8020a3c:	2b2e      	cmp	r3, #46	; 0x2e
 8020a3e:	d10c      	bne.n	8020a5a <_vfiprintf_r+0x176>
 8020a40:	7863      	ldrb	r3, [r4, #1]
 8020a42:	2b2a      	cmp	r3, #42	; 0x2a
 8020a44:	d135      	bne.n	8020ab2 <_vfiprintf_r+0x1ce>
 8020a46:	9b03      	ldr	r3, [sp, #12]
 8020a48:	1d1a      	adds	r2, r3, #4
 8020a4a:	681b      	ldr	r3, [r3, #0]
 8020a4c:	9203      	str	r2, [sp, #12]
 8020a4e:	2b00      	cmp	r3, #0
 8020a50:	bfb8      	it	lt
 8020a52:	f04f 33ff 	movlt.w	r3, #4294967295
 8020a56:	3402      	adds	r4, #2
 8020a58:	9305      	str	r3, [sp, #20]
 8020a5a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020b40 <_vfiprintf_r+0x25c>
 8020a5e:	7821      	ldrb	r1, [r4, #0]
 8020a60:	2203      	movs	r2, #3
 8020a62:	4650      	mov	r0, sl
 8020a64:	f7df fbc4 	bl	80001f0 <memchr>
 8020a68:	b140      	cbz	r0, 8020a7c <_vfiprintf_r+0x198>
 8020a6a:	2340      	movs	r3, #64	; 0x40
 8020a6c:	eba0 000a 	sub.w	r0, r0, sl
 8020a70:	fa03 f000 	lsl.w	r0, r3, r0
 8020a74:	9b04      	ldr	r3, [sp, #16]
 8020a76:	4303      	orrs	r3, r0
 8020a78:	3401      	adds	r4, #1
 8020a7a:	9304      	str	r3, [sp, #16]
 8020a7c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020a80:	482c      	ldr	r0, [pc, #176]	; (8020b34 <_vfiprintf_r+0x250>)
 8020a82:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020a86:	2206      	movs	r2, #6
 8020a88:	f7df fbb2 	bl	80001f0 <memchr>
 8020a8c:	2800      	cmp	r0, #0
 8020a8e:	d03f      	beq.n	8020b10 <_vfiprintf_r+0x22c>
 8020a90:	4b29      	ldr	r3, [pc, #164]	; (8020b38 <_vfiprintf_r+0x254>)
 8020a92:	bb1b      	cbnz	r3, 8020adc <_vfiprintf_r+0x1f8>
 8020a94:	9b03      	ldr	r3, [sp, #12]
 8020a96:	3307      	adds	r3, #7
 8020a98:	f023 0307 	bic.w	r3, r3, #7
 8020a9c:	3308      	adds	r3, #8
 8020a9e:	9303      	str	r3, [sp, #12]
 8020aa0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020aa2:	443b      	add	r3, r7
 8020aa4:	9309      	str	r3, [sp, #36]	; 0x24
 8020aa6:	e767      	b.n	8020978 <_vfiprintf_r+0x94>
 8020aa8:	fb0c 3202 	mla	r2, ip, r2, r3
 8020aac:	460c      	mov	r4, r1
 8020aae:	2001      	movs	r0, #1
 8020ab0:	e7a5      	b.n	80209fe <_vfiprintf_r+0x11a>
 8020ab2:	2300      	movs	r3, #0
 8020ab4:	3401      	adds	r4, #1
 8020ab6:	9305      	str	r3, [sp, #20]
 8020ab8:	4619      	mov	r1, r3
 8020aba:	f04f 0c0a 	mov.w	ip, #10
 8020abe:	4620      	mov	r0, r4
 8020ac0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020ac4:	3a30      	subs	r2, #48	; 0x30
 8020ac6:	2a09      	cmp	r2, #9
 8020ac8:	d903      	bls.n	8020ad2 <_vfiprintf_r+0x1ee>
 8020aca:	2b00      	cmp	r3, #0
 8020acc:	d0c5      	beq.n	8020a5a <_vfiprintf_r+0x176>
 8020ace:	9105      	str	r1, [sp, #20]
 8020ad0:	e7c3      	b.n	8020a5a <_vfiprintf_r+0x176>
 8020ad2:	fb0c 2101 	mla	r1, ip, r1, r2
 8020ad6:	4604      	mov	r4, r0
 8020ad8:	2301      	movs	r3, #1
 8020ada:	e7f0      	b.n	8020abe <_vfiprintf_r+0x1da>
 8020adc:	ab03      	add	r3, sp, #12
 8020ade:	9300      	str	r3, [sp, #0]
 8020ae0:	462a      	mov	r2, r5
 8020ae2:	4b16      	ldr	r3, [pc, #88]	; (8020b3c <_vfiprintf_r+0x258>)
 8020ae4:	a904      	add	r1, sp, #16
 8020ae6:	4630      	mov	r0, r6
 8020ae8:	f3af 8000 	nop.w
 8020aec:	4607      	mov	r7, r0
 8020aee:	1c78      	adds	r0, r7, #1
 8020af0:	d1d6      	bne.n	8020aa0 <_vfiprintf_r+0x1bc>
 8020af2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020af4:	07d9      	lsls	r1, r3, #31
 8020af6:	d405      	bmi.n	8020b04 <_vfiprintf_r+0x220>
 8020af8:	89ab      	ldrh	r3, [r5, #12]
 8020afa:	059a      	lsls	r2, r3, #22
 8020afc:	d402      	bmi.n	8020b04 <_vfiprintf_r+0x220>
 8020afe:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020b00:	f000 fd70 	bl	80215e4 <__retarget_lock_release_recursive>
 8020b04:	89ab      	ldrh	r3, [r5, #12]
 8020b06:	065b      	lsls	r3, r3, #25
 8020b08:	f53f af12 	bmi.w	8020930 <_vfiprintf_r+0x4c>
 8020b0c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020b0e:	e711      	b.n	8020934 <_vfiprintf_r+0x50>
 8020b10:	ab03      	add	r3, sp, #12
 8020b12:	9300      	str	r3, [sp, #0]
 8020b14:	462a      	mov	r2, r5
 8020b16:	4b09      	ldr	r3, [pc, #36]	; (8020b3c <_vfiprintf_r+0x258>)
 8020b18:	a904      	add	r1, sp, #16
 8020b1a:	4630      	mov	r0, r6
 8020b1c:	f000 f880 	bl	8020c20 <_printf_i>
 8020b20:	e7e4      	b.n	8020aec <_vfiprintf_r+0x208>
 8020b22:	bf00      	nop
 8020b24:	080239d0 	.word	0x080239d0
 8020b28:	080239f0 	.word	0x080239f0
 8020b2c:	080239b0 	.word	0x080239b0
 8020b30:	08023874 	.word	0x08023874
 8020b34:	0802387e 	.word	0x0802387e
 8020b38:	00000000 	.word	0x00000000
 8020b3c:	080208bf 	.word	0x080208bf
 8020b40:	0802387a 	.word	0x0802387a

08020b44 <_printf_common>:
 8020b44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020b48:	4616      	mov	r6, r2
 8020b4a:	4699      	mov	r9, r3
 8020b4c:	688a      	ldr	r2, [r1, #8]
 8020b4e:	690b      	ldr	r3, [r1, #16]
 8020b50:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020b54:	4293      	cmp	r3, r2
 8020b56:	bfb8      	it	lt
 8020b58:	4613      	movlt	r3, r2
 8020b5a:	6033      	str	r3, [r6, #0]
 8020b5c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020b60:	4607      	mov	r7, r0
 8020b62:	460c      	mov	r4, r1
 8020b64:	b10a      	cbz	r2, 8020b6a <_printf_common+0x26>
 8020b66:	3301      	adds	r3, #1
 8020b68:	6033      	str	r3, [r6, #0]
 8020b6a:	6823      	ldr	r3, [r4, #0]
 8020b6c:	0699      	lsls	r1, r3, #26
 8020b6e:	bf42      	ittt	mi
 8020b70:	6833      	ldrmi	r3, [r6, #0]
 8020b72:	3302      	addmi	r3, #2
 8020b74:	6033      	strmi	r3, [r6, #0]
 8020b76:	6825      	ldr	r5, [r4, #0]
 8020b78:	f015 0506 	ands.w	r5, r5, #6
 8020b7c:	d106      	bne.n	8020b8c <_printf_common+0x48>
 8020b7e:	f104 0a19 	add.w	sl, r4, #25
 8020b82:	68e3      	ldr	r3, [r4, #12]
 8020b84:	6832      	ldr	r2, [r6, #0]
 8020b86:	1a9b      	subs	r3, r3, r2
 8020b88:	42ab      	cmp	r3, r5
 8020b8a:	dc26      	bgt.n	8020bda <_printf_common+0x96>
 8020b8c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8020b90:	1e13      	subs	r3, r2, #0
 8020b92:	6822      	ldr	r2, [r4, #0]
 8020b94:	bf18      	it	ne
 8020b96:	2301      	movne	r3, #1
 8020b98:	0692      	lsls	r2, r2, #26
 8020b9a:	d42b      	bmi.n	8020bf4 <_printf_common+0xb0>
 8020b9c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8020ba0:	4649      	mov	r1, r9
 8020ba2:	4638      	mov	r0, r7
 8020ba4:	47c0      	blx	r8
 8020ba6:	3001      	adds	r0, #1
 8020ba8:	d01e      	beq.n	8020be8 <_printf_common+0xa4>
 8020baa:	6823      	ldr	r3, [r4, #0]
 8020bac:	68e5      	ldr	r5, [r4, #12]
 8020bae:	6832      	ldr	r2, [r6, #0]
 8020bb0:	f003 0306 	and.w	r3, r3, #6
 8020bb4:	2b04      	cmp	r3, #4
 8020bb6:	bf08      	it	eq
 8020bb8:	1aad      	subeq	r5, r5, r2
 8020bba:	68a3      	ldr	r3, [r4, #8]
 8020bbc:	6922      	ldr	r2, [r4, #16]
 8020bbe:	bf0c      	ite	eq
 8020bc0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8020bc4:	2500      	movne	r5, #0
 8020bc6:	4293      	cmp	r3, r2
 8020bc8:	bfc4      	itt	gt
 8020bca:	1a9b      	subgt	r3, r3, r2
 8020bcc:	18ed      	addgt	r5, r5, r3
 8020bce:	2600      	movs	r6, #0
 8020bd0:	341a      	adds	r4, #26
 8020bd2:	42b5      	cmp	r5, r6
 8020bd4:	d11a      	bne.n	8020c0c <_printf_common+0xc8>
 8020bd6:	2000      	movs	r0, #0
 8020bd8:	e008      	b.n	8020bec <_printf_common+0xa8>
 8020bda:	2301      	movs	r3, #1
 8020bdc:	4652      	mov	r2, sl
 8020bde:	4649      	mov	r1, r9
 8020be0:	4638      	mov	r0, r7
 8020be2:	47c0      	blx	r8
 8020be4:	3001      	adds	r0, #1
 8020be6:	d103      	bne.n	8020bf0 <_printf_common+0xac>
 8020be8:	f04f 30ff 	mov.w	r0, #4294967295
 8020bec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020bf0:	3501      	adds	r5, #1
 8020bf2:	e7c6      	b.n	8020b82 <_printf_common+0x3e>
 8020bf4:	18e1      	adds	r1, r4, r3
 8020bf6:	1c5a      	adds	r2, r3, #1
 8020bf8:	2030      	movs	r0, #48	; 0x30
 8020bfa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8020bfe:	4422      	add	r2, r4
 8020c00:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8020c04:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8020c08:	3302      	adds	r3, #2
 8020c0a:	e7c7      	b.n	8020b9c <_printf_common+0x58>
 8020c0c:	2301      	movs	r3, #1
 8020c0e:	4622      	mov	r2, r4
 8020c10:	4649      	mov	r1, r9
 8020c12:	4638      	mov	r0, r7
 8020c14:	47c0      	blx	r8
 8020c16:	3001      	adds	r0, #1
 8020c18:	d0e6      	beq.n	8020be8 <_printf_common+0xa4>
 8020c1a:	3601      	adds	r6, #1
 8020c1c:	e7d9      	b.n	8020bd2 <_printf_common+0x8e>
	...

08020c20 <_printf_i>:
 8020c20:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020c24:	7e0f      	ldrb	r7, [r1, #24]
 8020c26:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020c28:	2f78      	cmp	r7, #120	; 0x78
 8020c2a:	4691      	mov	r9, r2
 8020c2c:	4680      	mov	r8, r0
 8020c2e:	460c      	mov	r4, r1
 8020c30:	469a      	mov	sl, r3
 8020c32:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8020c36:	d807      	bhi.n	8020c48 <_printf_i+0x28>
 8020c38:	2f62      	cmp	r7, #98	; 0x62
 8020c3a:	d80a      	bhi.n	8020c52 <_printf_i+0x32>
 8020c3c:	2f00      	cmp	r7, #0
 8020c3e:	f000 80d8 	beq.w	8020df2 <_printf_i+0x1d2>
 8020c42:	2f58      	cmp	r7, #88	; 0x58
 8020c44:	f000 80a3 	beq.w	8020d8e <_printf_i+0x16e>
 8020c48:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020c4c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8020c50:	e03a      	b.n	8020cc8 <_printf_i+0xa8>
 8020c52:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8020c56:	2b15      	cmp	r3, #21
 8020c58:	d8f6      	bhi.n	8020c48 <_printf_i+0x28>
 8020c5a:	a101      	add	r1, pc, #4	; (adr r1, 8020c60 <_printf_i+0x40>)
 8020c5c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8020c60:	08020cb9 	.word	0x08020cb9
 8020c64:	08020ccd 	.word	0x08020ccd
 8020c68:	08020c49 	.word	0x08020c49
 8020c6c:	08020c49 	.word	0x08020c49
 8020c70:	08020c49 	.word	0x08020c49
 8020c74:	08020c49 	.word	0x08020c49
 8020c78:	08020ccd 	.word	0x08020ccd
 8020c7c:	08020c49 	.word	0x08020c49
 8020c80:	08020c49 	.word	0x08020c49
 8020c84:	08020c49 	.word	0x08020c49
 8020c88:	08020c49 	.word	0x08020c49
 8020c8c:	08020dd9 	.word	0x08020dd9
 8020c90:	08020cfd 	.word	0x08020cfd
 8020c94:	08020dbb 	.word	0x08020dbb
 8020c98:	08020c49 	.word	0x08020c49
 8020c9c:	08020c49 	.word	0x08020c49
 8020ca0:	08020dfb 	.word	0x08020dfb
 8020ca4:	08020c49 	.word	0x08020c49
 8020ca8:	08020cfd 	.word	0x08020cfd
 8020cac:	08020c49 	.word	0x08020c49
 8020cb0:	08020c49 	.word	0x08020c49
 8020cb4:	08020dc3 	.word	0x08020dc3
 8020cb8:	682b      	ldr	r3, [r5, #0]
 8020cba:	1d1a      	adds	r2, r3, #4
 8020cbc:	681b      	ldr	r3, [r3, #0]
 8020cbe:	602a      	str	r2, [r5, #0]
 8020cc0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020cc4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8020cc8:	2301      	movs	r3, #1
 8020cca:	e0a3      	b.n	8020e14 <_printf_i+0x1f4>
 8020ccc:	6820      	ldr	r0, [r4, #0]
 8020cce:	6829      	ldr	r1, [r5, #0]
 8020cd0:	0606      	lsls	r6, r0, #24
 8020cd2:	f101 0304 	add.w	r3, r1, #4
 8020cd6:	d50a      	bpl.n	8020cee <_printf_i+0xce>
 8020cd8:	680e      	ldr	r6, [r1, #0]
 8020cda:	602b      	str	r3, [r5, #0]
 8020cdc:	2e00      	cmp	r6, #0
 8020cde:	da03      	bge.n	8020ce8 <_printf_i+0xc8>
 8020ce0:	232d      	movs	r3, #45	; 0x2d
 8020ce2:	4276      	negs	r6, r6
 8020ce4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020ce8:	485e      	ldr	r0, [pc, #376]	; (8020e64 <_printf_i+0x244>)
 8020cea:	230a      	movs	r3, #10
 8020cec:	e019      	b.n	8020d22 <_printf_i+0x102>
 8020cee:	680e      	ldr	r6, [r1, #0]
 8020cf0:	602b      	str	r3, [r5, #0]
 8020cf2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020cf6:	bf18      	it	ne
 8020cf8:	b236      	sxthne	r6, r6
 8020cfa:	e7ef      	b.n	8020cdc <_printf_i+0xbc>
 8020cfc:	682b      	ldr	r3, [r5, #0]
 8020cfe:	6820      	ldr	r0, [r4, #0]
 8020d00:	1d19      	adds	r1, r3, #4
 8020d02:	6029      	str	r1, [r5, #0]
 8020d04:	0601      	lsls	r1, r0, #24
 8020d06:	d501      	bpl.n	8020d0c <_printf_i+0xec>
 8020d08:	681e      	ldr	r6, [r3, #0]
 8020d0a:	e002      	b.n	8020d12 <_printf_i+0xf2>
 8020d0c:	0646      	lsls	r6, r0, #25
 8020d0e:	d5fb      	bpl.n	8020d08 <_printf_i+0xe8>
 8020d10:	881e      	ldrh	r6, [r3, #0]
 8020d12:	4854      	ldr	r0, [pc, #336]	; (8020e64 <_printf_i+0x244>)
 8020d14:	2f6f      	cmp	r7, #111	; 0x6f
 8020d16:	bf0c      	ite	eq
 8020d18:	2308      	moveq	r3, #8
 8020d1a:	230a      	movne	r3, #10
 8020d1c:	2100      	movs	r1, #0
 8020d1e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8020d22:	6865      	ldr	r5, [r4, #4]
 8020d24:	60a5      	str	r5, [r4, #8]
 8020d26:	2d00      	cmp	r5, #0
 8020d28:	bfa2      	ittt	ge
 8020d2a:	6821      	ldrge	r1, [r4, #0]
 8020d2c:	f021 0104 	bicge.w	r1, r1, #4
 8020d30:	6021      	strge	r1, [r4, #0]
 8020d32:	b90e      	cbnz	r6, 8020d38 <_printf_i+0x118>
 8020d34:	2d00      	cmp	r5, #0
 8020d36:	d04d      	beq.n	8020dd4 <_printf_i+0x1b4>
 8020d38:	4615      	mov	r5, r2
 8020d3a:	fbb6 f1f3 	udiv	r1, r6, r3
 8020d3e:	fb03 6711 	mls	r7, r3, r1, r6
 8020d42:	5dc7      	ldrb	r7, [r0, r7]
 8020d44:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8020d48:	4637      	mov	r7, r6
 8020d4a:	42bb      	cmp	r3, r7
 8020d4c:	460e      	mov	r6, r1
 8020d4e:	d9f4      	bls.n	8020d3a <_printf_i+0x11a>
 8020d50:	2b08      	cmp	r3, #8
 8020d52:	d10b      	bne.n	8020d6c <_printf_i+0x14c>
 8020d54:	6823      	ldr	r3, [r4, #0]
 8020d56:	07de      	lsls	r6, r3, #31
 8020d58:	d508      	bpl.n	8020d6c <_printf_i+0x14c>
 8020d5a:	6923      	ldr	r3, [r4, #16]
 8020d5c:	6861      	ldr	r1, [r4, #4]
 8020d5e:	4299      	cmp	r1, r3
 8020d60:	bfde      	ittt	le
 8020d62:	2330      	movle	r3, #48	; 0x30
 8020d64:	f805 3c01 	strble.w	r3, [r5, #-1]
 8020d68:	f105 35ff 	addle.w	r5, r5, #4294967295
 8020d6c:	1b52      	subs	r2, r2, r5
 8020d6e:	6122      	str	r2, [r4, #16]
 8020d70:	f8cd a000 	str.w	sl, [sp]
 8020d74:	464b      	mov	r3, r9
 8020d76:	aa03      	add	r2, sp, #12
 8020d78:	4621      	mov	r1, r4
 8020d7a:	4640      	mov	r0, r8
 8020d7c:	f7ff fee2 	bl	8020b44 <_printf_common>
 8020d80:	3001      	adds	r0, #1
 8020d82:	d14c      	bne.n	8020e1e <_printf_i+0x1fe>
 8020d84:	f04f 30ff 	mov.w	r0, #4294967295
 8020d88:	b004      	add	sp, #16
 8020d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020d8e:	4835      	ldr	r0, [pc, #212]	; (8020e64 <_printf_i+0x244>)
 8020d90:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8020d94:	6829      	ldr	r1, [r5, #0]
 8020d96:	6823      	ldr	r3, [r4, #0]
 8020d98:	f851 6b04 	ldr.w	r6, [r1], #4
 8020d9c:	6029      	str	r1, [r5, #0]
 8020d9e:	061d      	lsls	r5, r3, #24
 8020da0:	d514      	bpl.n	8020dcc <_printf_i+0x1ac>
 8020da2:	07df      	lsls	r7, r3, #31
 8020da4:	bf44      	itt	mi
 8020da6:	f043 0320 	orrmi.w	r3, r3, #32
 8020daa:	6023      	strmi	r3, [r4, #0]
 8020dac:	b91e      	cbnz	r6, 8020db6 <_printf_i+0x196>
 8020dae:	6823      	ldr	r3, [r4, #0]
 8020db0:	f023 0320 	bic.w	r3, r3, #32
 8020db4:	6023      	str	r3, [r4, #0]
 8020db6:	2310      	movs	r3, #16
 8020db8:	e7b0      	b.n	8020d1c <_printf_i+0xfc>
 8020dba:	6823      	ldr	r3, [r4, #0]
 8020dbc:	f043 0320 	orr.w	r3, r3, #32
 8020dc0:	6023      	str	r3, [r4, #0]
 8020dc2:	2378      	movs	r3, #120	; 0x78
 8020dc4:	4828      	ldr	r0, [pc, #160]	; (8020e68 <_printf_i+0x248>)
 8020dc6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8020dca:	e7e3      	b.n	8020d94 <_printf_i+0x174>
 8020dcc:	0659      	lsls	r1, r3, #25
 8020dce:	bf48      	it	mi
 8020dd0:	b2b6      	uxthmi	r6, r6
 8020dd2:	e7e6      	b.n	8020da2 <_printf_i+0x182>
 8020dd4:	4615      	mov	r5, r2
 8020dd6:	e7bb      	b.n	8020d50 <_printf_i+0x130>
 8020dd8:	682b      	ldr	r3, [r5, #0]
 8020dda:	6826      	ldr	r6, [r4, #0]
 8020ddc:	6961      	ldr	r1, [r4, #20]
 8020dde:	1d18      	adds	r0, r3, #4
 8020de0:	6028      	str	r0, [r5, #0]
 8020de2:	0635      	lsls	r5, r6, #24
 8020de4:	681b      	ldr	r3, [r3, #0]
 8020de6:	d501      	bpl.n	8020dec <_printf_i+0x1cc>
 8020de8:	6019      	str	r1, [r3, #0]
 8020dea:	e002      	b.n	8020df2 <_printf_i+0x1d2>
 8020dec:	0670      	lsls	r0, r6, #25
 8020dee:	d5fb      	bpl.n	8020de8 <_printf_i+0x1c8>
 8020df0:	8019      	strh	r1, [r3, #0]
 8020df2:	2300      	movs	r3, #0
 8020df4:	6123      	str	r3, [r4, #16]
 8020df6:	4615      	mov	r5, r2
 8020df8:	e7ba      	b.n	8020d70 <_printf_i+0x150>
 8020dfa:	682b      	ldr	r3, [r5, #0]
 8020dfc:	1d1a      	adds	r2, r3, #4
 8020dfe:	602a      	str	r2, [r5, #0]
 8020e00:	681d      	ldr	r5, [r3, #0]
 8020e02:	6862      	ldr	r2, [r4, #4]
 8020e04:	2100      	movs	r1, #0
 8020e06:	4628      	mov	r0, r5
 8020e08:	f7df f9f2 	bl	80001f0 <memchr>
 8020e0c:	b108      	cbz	r0, 8020e12 <_printf_i+0x1f2>
 8020e0e:	1b40      	subs	r0, r0, r5
 8020e10:	6060      	str	r0, [r4, #4]
 8020e12:	6863      	ldr	r3, [r4, #4]
 8020e14:	6123      	str	r3, [r4, #16]
 8020e16:	2300      	movs	r3, #0
 8020e18:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020e1c:	e7a8      	b.n	8020d70 <_printf_i+0x150>
 8020e1e:	6923      	ldr	r3, [r4, #16]
 8020e20:	462a      	mov	r2, r5
 8020e22:	4649      	mov	r1, r9
 8020e24:	4640      	mov	r0, r8
 8020e26:	47d0      	blx	sl
 8020e28:	3001      	adds	r0, #1
 8020e2a:	d0ab      	beq.n	8020d84 <_printf_i+0x164>
 8020e2c:	6823      	ldr	r3, [r4, #0]
 8020e2e:	079b      	lsls	r3, r3, #30
 8020e30:	d413      	bmi.n	8020e5a <_printf_i+0x23a>
 8020e32:	68e0      	ldr	r0, [r4, #12]
 8020e34:	9b03      	ldr	r3, [sp, #12]
 8020e36:	4298      	cmp	r0, r3
 8020e38:	bfb8      	it	lt
 8020e3a:	4618      	movlt	r0, r3
 8020e3c:	e7a4      	b.n	8020d88 <_printf_i+0x168>
 8020e3e:	2301      	movs	r3, #1
 8020e40:	4632      	mov	r2, r6
 8020e42:	4649      	mov	r1, r9
 8020e44:	4640      	mov	r0, r8
 8020e46:	47d0      	blx	sl
 8020e48:	3001      	adds	r0, #1
 8020e4a:	d09b      	beq.n	8020d84 <_printf_i+0x164>
 8020e4c:	3501      	adds	r5, #1
 8020e4e:	68e3      	ldr	r3, [r4, #12]
 8020e50:	9903      	ldr	r1, [sp, #12]
 8020e52:	1a5b      	subs	r3, r3, r1
 8020e54:	42ab      	cmp	r3, r5
 8020e56:	dcf2      	bgt.n	8020e3e <_printf_i+0x21e>
 8020e58:	e7eb      	b.n	8020e32 <_printf_i+0x212>
 8020e5a:	2500      	movs	r5, #0
 8020e5c:	f104 0619 	add.w	r6, r4, #25
 8020e60:	e7f5      	b.n	8020e4e <_printf_i+0x22e>
 8020e62:	bf00      	nop
 8020e64:	08023885 	.word	0x08023885
 8020e68:	08023896 	.word	0x08023896

08020e6c <_sbrk_r>:
 8020e6c:	b538      	push	{r3, r4, r5, lr}
 8020e6e:	4d06      	ldr	r5, [pc, #24]	; (8020e88 <_sbrk_r+0x1c>)
 8020e70:	2300      	movs	r3, #0
 8020e72:	4604      	mov	r4, r0
 8020e74:	4608      	mov	r0, r1
 8020e76:	602b      	str	r3, [r5, #0]
 8020e78:	f7e1 f96c 	bl	8002154 <_sbrk>
 8020e7c:	1c43      	adds	r3, r0, #1
 8020e7e:	d102      	bne.n	8020e86 <_sbrk_r+0x1a>
 8020e80:	682b      	ldr	r3, [r5, #0]
 8020e82:	b103      	cbz	r3, 8020e86 <_sbrk_r+0x1a>
 8020e84:	6023      	str	r3, [r4, #0]
 8020e86:	bd38      	pop	{r3, r4, r5, pc}
 8020e88:	20015ab4 	.word	0x20015ab4

08020e8c <_raise_r>:
 8020e8c:	291f      	cmp	r1, #31
 8020e8e:	b538      	push	{r3, r4, r5, lr}
 8020e90:	4604      	mov	r4, r0
 8020e92:	460d      	mov	r5, r1
 8020e94:	d904      	bls.n	8020ea0 <_raise_r+0x14>
 8020e96:	2316      	movs	r3, #22
 8020e98:	6003      	str	r3, [r0, #0]
 8020e9a:	f04f 30ff 	mov.w	r0, #4294967295
 8020e9e:	bd38      	pop	{r3, r4, r5, pc}
 8020ea0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8020ea2:	b112      	cbz	r2, 8020eaa <_raise_r+0x1e>
 8020ea4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8020ea8:	b94b      	cbnz	r3, 8020ebe <_raise_r+0x32>
 8020eaa:	4620      	mov	r0, r4
 8020eac:	f000 f830 	bl	8020f10 <_getpid_r>
 8020eb0:	462a      	mov	r2, r5
 8020eb2:	4601      	mov	r1, r0
 8020eb4:	4620      	mov	r0, r4
 8020eb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8020eba:	f000 b817 	b.w	8020eec <_kill_r>
 8020ebe:	2b01      	cmp	r3, #1
 8020ec0:	d00a      	beq.n	8020ed8 <_raise_r+0x4c>
 8020ec2:	1c59      	adds	r1, r3, #1
 8020ec4:	d103      	bne.n	8020ece <_raise_r+0x42>
 8020ec6:	2316      	movs	r3, #22
 8020ec8:	6003      	str	r3, [r0, #0]
 8020eca:	2001      	movs	r0, #1
 8020ecc:	e7e7      	b.n	8020e9e <_raise_r+0x12>
 8020ece:	2400      	movs	r4, #0
 8020ed0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8020ed4:	4628      	mov	r0, r5
 8020ed6:	4798      	blx	r3
 8020ed8:	2000      	movs	r0, #0
 8020eda:	e7e0      	b.n	8020e9e <_raise_r+0x12>

08020edc <raise>:
 8020edc:	4b02      	ldr	r3, [pc, #8]	; (8020ee8 <raise+0xc>)
 8020ede:	4601      	mov	r1, r0
 8020ee0:	6818      	ldr	r0, [r3, #0]
 8020ee2:	f7ff bfd3 	b.w	8020e8c <_raise_r>
 8020ee6:	bf00      	nop
 8020ee8:	20000104 	.word	0x20000104

08020eec <_kill_r>:
 8020eec:	b538      	push	{r3, r4, r5, lr}
 8020eee:	4d07      	ldr	r5, [pc, #28]	; (8020f0c <_kill_r+0x20>)
 8020ef0:	2300      	movs	r3, #0
 8020ef2:	4604      	mov	r4, r0
 8020ef4:	4608      	mov	r0, r1
 8020ef6:	4611      	mov	r1, r2
 8020ef8:	602b      	str	r3, [r5, #0]
 8020efa:	f7e1 f8f5 	bl	80020e8 <_kill>
 8020efe:	1c43      	adds	r3, r0, #1
 8020f00:	d102      	bne.n	8020f08 <_kill_r+0x1c>
 8020f02:	682b      	ldr	r3, [r5, #0]
 8020f04:	b103      	cbz	r3, 8020f08 <_kill_r+0x1c>
 8020f06:	6023      	str	r3, [r4, #0]
 8020f08:	bd38      	pop	{r3, r4, r5, pc}
 8020f0a:	bf00      	nop
 8020f0c:	20015ab4 	.word	0x20015ab4

08020f10 <_getpid_r>:
 8020f10:	f7e1 b8e8 	b.w	80020e4 <_getpid>

08020f14 <_strtoul_l.constprop.0>:
 8020f14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020f18:	4f36      	ldr	r7, [pc, #216]	; (8020ff4 <_strtoul_l.constprop.0+0xe0>)
 8020f1a:	4686      	mov	lr, r0
 8020f1c:	460d      	mov	r5, r1
 8020f1e:	4628      	mov	r0, r5
 8020f20:	f815 4b01 	ldrb.w	r4, [r5], #1
 8020f24:	5de6      	ldrb	r6, [r4, r7]
 8020f26:	f016 0608 	ands.w	r6, r6, #8
 8020f2a:	d1f8      	bne.n	8020f1e <_strtoul_l.constprop.0+0xa>
 8020f2c:	2c2d      	cmp	r4, #45	; 0x2d
 8020f2e:	d12f      	bne.n	8020f90 <_strtoul_l.constprop.0+0x7c>
 8020f30:	782c      	ldrb	r4, [r5, #0]
 8020f32:	2601      	movs	r6, #1
 8020f34:	1c85      	adds	r5, r0, #2
 8020f36:	2b00      	cmp	r3, #0
 8020f38:	d057      	beq.n	8020fea <_strtoul_l.constprop.0+0xd6>
 8020f3a:	2b10      	cmp	r3, #16
 8020f3c:	d109      	bne.n	8020f52 <_strtoul_l.constprop.0+0x3e>
 8020f3e:	2c30      	cmp	r4, #48	; 0x30
 8020f40:	d107      	bne.n	8020f52 <_strtoul_l.constprop.0+0x3e>
 8020f42:	7828      	ldrb	r0, [r5, #0]
 8020f44:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8020f48:	2858      	cmp	r0, #88	; 0x58
 8020f4a:	d149      	bne.n	8020fe0 <_strtoul_l.constprop.0+0xcc>
 8020f4c:	786c      	ldrb	r4, [r5, #1]
 8020f4e:	2310      	movs	r3, #16
 8020f50:	3502      	adds	r5, #2
 8020f52:	f04f 38ff 	mov.w	r8, #4294967295
 8020f56:	2700      	movs	r7, #0
 8020f58:	fbb8 f8f3 	udiv	r8, r8, r3
 8020f5c:	fb03 f908 	mul.w	r9, r3, r8
 8020f60:	ea6f 0909 	mvn.w	r9, r9
 8020f64:	4638      	mov	r0, r7
 8020f66:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8020f6a:	f1bc 0f09 	cmp.w	ip, #9
 8020f6e:	d814      	bhi.n	8020f9a <_strtoul_l.constprop.0+0x86>
 8020f70:	4664      	mov	r4, ip
 8020f72:	42a3      	cmp	r3, r4
 8020f74:	dd22      	ble.n	8020fbc <_strtoul_l.constprop.0+0xa8>
 8020f76:	2f00      	cmp	r7, #0
 8020f78:	db1d      	blt.n	8020fb6 <_strtoul_l.constprop.0+0xa2>
 8020f7a:	4580      	cmp	r8, r0
 8020f7c:	d31b      	bcc.n	8020fb6 <_strtoul_l.constprop.0+0xa2>
 8020f7e:	d101      	bne.n	8020f84 <_strtoul_l.constprop.0+0x70>
 8020f80:	45a1      	cmp	r9, r4
 8020f82:	db18      	blt.n	8020fb6 <_strtoul_l.constprop.0+0xa2>
 8020f84:	fb00 4003 	mla	r0, r0, r3, r4
 8020f88:	2701      	movs	r7, #1
 8020f8a:	f815 4b01 	ldrb.w	r4, [r5], #1
 8020f8e:	e7ea      	b.n	8020f66 <_strtoul_l.constprop.0+0x52>
 8020f90:	2c2b      	cmp	r4, #43	; 0x2b
 8020f92:	bf04      	itt	eq
 8020f94:	782c      	ldrbeq	r4, [r5, #0]
 8020f96:	1c85      	addeq	r5, r0, #2
 8020f98:	e7cd      	b.n	8020f36 <_strtoul_l.constprop.0+0x22>
 8020f9a:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8020f9e:	f1bc 0f19 	cmp.w	ip, #25
 8020fa2:	d801      	bhi.n	8020fa8 <_strtoul_l.constprop.0+0x94>
 8020fa4:	3c37      	subs	r4, #55	; 0x37
 8020fa6:	e7e4      	b.n	8020f72 <_strtoul_l.constprop.0+0x5e>
 8020fa8:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8020fac:	f1bc 0f19 	cmp.w	ip, #25
 8020fb0:	d804      	bhi.n	8020fbc <_strtoul_l.constprop.0+0xa8>
 8020fb2:	3c57      	subs	r4, #87	; 0x57
 8020fb4:	e7dd      	b.n	8020f72 <_strtoul_l.constprop.0+0x5e>
 8020fb6:	f04f 37ff 	mov.w	r7, #4294967295
 8020fba:	e7e6      	b.n	8020f8a <_strtoul_l.constprop.0+0x76>
 8020fbc:	2f00      	cmp	r7, #0
 8020fbe:	da07      	bge.n	8020fd0 <_strtoul_l.constprop.0+0xbc>
 8020fc0:	2322      	movs	r3, #34	; 0x22
 8020fc2:	f8ce 3000 	str.w	r3, [lr]
 8020fc6:	f04f 30ff 	mov.w	r0, #4294967295
 8020fca:	b932      	cbnz	r2, 8020fda <_strtoul_l.constprop.0+0xc6>
 8020fcc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020fd0:	b106      	cbz	r6, 8020fd4 <_strtoul_l.constprop.0+0xc0>
 8020fd2:	4240      	negs	r0, r0
 8020fd4:	2a00      	cmp	r2, #0
 8020fd6:	d0f9      	beq.n	8020fcc <_strtoul_l.constprop.0+0xb8>
 8020fd8:	b107      	cbz	r7, 8020fdc <_strtoul_l.constprop.0+0xc8>
 8020fda:	1e69      	subs	r1, r5, #1
 8020fdc:	6011      	str	r1, [r2, #0]
 8020fde:	e7f5      	b.n	8020fcc <_strtoul_l.constprop.0+0xb8>
 8020fe0:	2430      	movs	r4, #48	; 0x30
 8020fe2:	2b00      	cmp	r3, #0
 8020fe4:	d1b5      	bne.n	8020f52 <_strtoul_l.constprop.0+0x3e>
 8020fe6:	2308      	movs	r3, #8
 8020fe8:	e7b3      	b.n	8020f52 <_strtoul_l.constprop.0+0x3e>
 8020fea:	2c30      	cmp	r4, #48	; 0x30
 8020fec:	d0a9      	beq.n	8020f42 <_strtoul_l.constprop.0+0x2e>
 8020fee:	230a      	movs	r3, #10
 8020ff0:	e7af      	b.n	8020f52 <_strtoul_l.constprop.0+0x3e>
 8020ff2:	bf00      	nop
 8020ff4:	080238ad 	.word	0x080238ad

08020ff8 <strtoul>:
 8020ff8:	4613      	mov	r3, r2
 8020ffa:	460a      	mov	r2, r1
 8020ffc:	4601      	mov	r1, r0
 8020ffe:	4802      	ldr	r0, [pc, #8]	; (8021008 <strtoul+0x10>)
 8021000:	6800      	ldr	r0, [r0, #0]
 8021002:	f7ff bf87 	b.w	8020f14 <_strtoul_l.constprop.0>
 8021006:	bf00      	nop
 8021008:	20000104 	.word	0x20000104

0802100c <__swbuf_r>:
 802100c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802100e:	460e      	mov	r6, r1
 8021010:	4614      	mov	r4, r2
 8021012:	4605      	mov	r5, r0
 8021014:	b118      	cbz	r0, 802101e <__swbuf_r+0x12>
 8021016:	6983      	ldr	r3, [r0, #24]
 8021018:	b90b      	cbnz	r3, 802101e <__swbuf_r+0x12>
 802101a:	f000 fa43 	bl	80214a4 <__sinit>
 802101e:	4b21      	ldr	r3, [pc, #132]	; (80210a4 <__swbuf_r+0x98>)
 8021020:	429c      	cmp	r4, r3
 8021022:	d12b      	bne.n	802107c <__swbuf_r+0x70>
 8021024:	686c      	ldr	r4, [r5, #4]
 8021026:	69a3      	ldr	r3, [r4, #24]
 8021028:	60a3      	str	r3, [r4, #8]
 802102a:	89a3      	ldrh	r3, [r4, #12]
 802102c:	071a      	lsls	r2, r3, #28
 802102e:	d52f      	bpl.n	8021090 <__swbuf_r+0x84>
 8021030:	6923      	ldr	r3, [r4, #16]
 8021032:	b36b      	cbz	r3, 8021090 <__swbuf_r+0x84>
 8021034:	6923      	ldr	r3, [r4, #16]
 8021036:	6820      	ldr	r0, [r4, #0]
 8021038:	1ac0      	subs	r0, r0, r3
 802103a:	6963      	ldr	r3, [r4, #20]
 802103c:	b2f6      	uxtb	r6, r6
 802103e:	4283      	cmp	r3, r0
 8021040:	4637      	mov	r7, r6
 8021042:	dc04      	bgt.n	802104e <__swbuf_r+0x42>
 8021044:	4621      	mov	r1, r4
 8021046:	4628      	mov	r0, r5
 8021048:	f000 f998 	bl	802137c <_fflush_r>
 802104c:	bb30      	cbnz	r0, 802109c <__swbuf_r+0x90>
 802104e:	68a3      	ldr	r3, [r4, #8]
 8021050:	3b01      	subs	r3, #1
 8021052:	60a3      	str	r3, [r4, #8]
 8021054:	6823      	ldr	r3, [r4, #0]
 8021056:	1c5a      	adds	r2, r3, #1
 8021058:	6022      	str	r2, [r4, #0]
 802105a:	701e      	strb	r6, [r3, #0]
 802105c:	6963      	ldr	r3, [r4, #20]
 802105e:	3001      	adds	r0, #1
 8021060:	4283      	cmp	r3, r0
 8021062:	d004      	beq.n	802106e <__swbuf_r+0x62>
 8021064:	89a3      	ldrh	r3, [r4, #12]
 8021066:	07db      	lsls	r3, r3, #31
 8021068:	d506      	bpl.n	8021078 <__swbuf_r+0x6c>
 802106a:	2e0a      	cmp	r6, #10
 802106c:	d104      	bne.n	8021078 <__swbuf_r+0x6c>
 802106e:	4621      	mov	r1, r4
 8021070:	4628      	mov	r0, r5
 8021072:	f000 f983 	bl	802137c <_fflush_r>
 8021076:	b988      	cbnz	r0, 802109c <__swbuf_r+0x90>
 8021078:	4638      	mov	r0, r7
 802107a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802107c:	4b0a      	ldr	r3, [pc, #40]	; (80210a8 <__swbuf_r+0x9c>)
 802107e:	429c      	cmp	r4, r3
 8021080:	d101      	bne.n	8021086 <__swbuf_r+0x7a>
 8021082:	68ac      	ldr	r4, [r5, #8]
 8021084:	e7cf      	b.n	8021026 <__swbuf_r+0x1a>
 8021086:	4b09      	ldr	r3, [pc, #36]	; (80210ac <__swbuf_r+0xa0>)
 8021088:	429c      	cmp	r4, r3
 802108a:	bf08      	it	eq
 802108c:	68ec      	ldreq	r4, [r5, #12]
 802108e:	e7ca      	b.n	8021026 <__swbuf_r+0x1a>
 8021090:	4621      	mov	r1, r4
 8021092:	4628      	mov	r0, r5
 8021094:	f000 f80c 	bl	80210b0 <__swsetup_r>
 8021098:	2800      	cmp	r0, #0
 802109a:	d0cb      	beq.n	8021034 <__swbuf_r+0x28>
 802109c:	f04f 37ff 	mov.w	r7, #4294967295
 80210a0:	e7ea      	b.n	8021078 <__swbuf_r+0x6c>
 80210a2:	bf00      	nop
 80210a4:	080239d0 	.word	0x080239d0
 80210a8:	080239f0 	.word	0x080239f0
 80210ac:	080239b0 	.word	0x080239b0

080210b0 <__swsetup_r>:
 80210b0:	4b32      	ldr	r3, [pc, #200]	; (802117c <__swsetup_r+0xcc>)
 80210b2:	b570      	push	{r4, r5, r6, lr}
 80210b4:	681d      	ldr	r5, [r3, #0]
 80210b6:	4606      	mov	r6, r0
 80210b8:	460c      	mov	r4, r1
 80210ba:	b125      	cbz	r5, 80210c6 <__swsetup_r+0x16>
 80210bc:	69ab      	ldr	r3, [r5, #24]
 80210be:	b913      	cbnz	r3, 80210c6 <__swsetup_r+0x16>
 80210c0:	4628      	mov	r0, r5
 80210c2:	f000 f9ef 	bl	80214a4 <__sinit>
 80210c6:	4b2e      	ldr	r3, [pc, #184]	; (8021180 <__swsetup_r+0xd0>)
 80210c8:	429c      	cmp	r4, r3
 80210ca:	d10f      	bne.n	80210ec <__swsetup_r+0x3c>
 80210cc:	686c      	ldr	r4, [r5, #4]
 80210ce:	89a3      	ldrh	r3, [r4, #12]
 80210d0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80210d4:	0719      	lsls	r1, r3, #28
 80210d6:	d42c      	bmi.n	8021132 <__swsetup_r+0x82>
 80210d8:	06dd      	lsls	r5, r3, #27
 80210da:	d411      	bmi.n	8021100 <__swsetup_r+0x50>
 80210dc:	2309      	movs	r3, #9
 80210de:	6033      	str	r3, [r6, #0]
 80210e0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80210e4:	81a3      	strh	r3, [r4, #12]
 80210e6:	f04f 30ff 	mov.w	r0, #4294967295
 80210ea:	e03e      	b.n	802116a <__swsetup_r+0xba>
 80210ec:	4b25      	ldr	r3, [pc, #148]	; (8021184 <__swsetup_r+0xd4>)
 80210ee:	429c      	cmp	r4, r3
 80210f0:	d101      	bne.n	80210f6 <__swsetup_r+0x46>
 80210f2:	68ac      	ldr	r4, [r5, #8]
 80210f4:	e7eb      	b.n	80210ce <__swsetup_r+0x1e>
 80210f6:	4b24      	ldr	r3, [pc, #144]	; (8021188 <__swsetup_r+0xd8>)
 80210f8:	429c      	cmp	r4, r3
 80210fa:	bf08      	it	eq
 80210fc:	68ec      	ldreq	r4, [r5, #12]
 80210fe:	e7e6      	b.n	80210ce <__swsetup_r+0x1e>
 8021100:	0758      	lsls	r0, r3, #29
 8021102:	d512      	bpl.n	802112a <__swsetup_r+0x7a>
 8021104:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021106:	b141      	cbz	r1, 802111a <__swsetup_r+0x6a>
 8021108:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802110c:	4299      	cmp	r1, r3
 802110e:	d002      	beq.n	8021116 <__swsetup_r+0x66>
 8021110:	4630      	mov	r0, r6
 8021112:	f7ff fadd 	bl	80206d0 <_free_r>
 8021116:	2300      	movs	r3, #0
 8021118:	6363      	str	r3, [r4, #52]	; 0x34
 802111a:	89a3      	ldrh	r3, [r4, #12]
 802111c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021120:	81a3      	strh	r3, [r4, #12]
 8021122:	2300      	movs	r3, #0
 8021124:	6063      	str	r3, [r4, #4]
 8021126:	6923      	ldr	r3, [r4, #16]
 8021128:	6023      	str	r3, [r4, #0]
 802112a:	89a3      	ldrh	r3, [r4, #12]
 802112c:	f043 0308 	orr.w	r3, r3, #8
 8021130:	81a3      	strh	r3, [r4, #12]
 8021132:	6923      	ldr	r3, [r4, #16]
 8021134:	b94b      	cbnz	r3, 802114a <__swsetup_r+0x9a>
 8021136:	89a3      	ldrh	r3, [r4, #12]
 8021138:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802113c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021140:	d003      	beq.n	802114a <__swsetup_r+0x9a>
 8021142:	4621      	mov	r1, r4
 8021144:	4630      	mov	r0, r6
 8021146:	f000 fa73 	bl	8021630 <__smakebuf_r>
 802114a:	89a0      	ldrh	r0, [r4, #12]
 802114c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021150:	f010 0301 	ands.w	r3, r0, #1
 8021154:	d00a      	beq.n	802116c <__swsetup_r+0xbc>
 8021156:	2300      	movs	r3, #0
 8021158:	60a3      	str	r3, [r4, #8]
 802115a:	6963      	ldr	r3, [r4, #20]
 802115c:	425b      	negs	r3, r3
 802115e:	61a3      	str	r3, [r4, #24]
 8021160:	6923      	ldr	r3, [r4, #16]
 8021162:	b943      	cbnz	r3, 8021176 <__swsetup_r+0xc6>
 8021164:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8021168:	d1ba      	bne.n	80210e0 <__swsetup_r+0x30>
 802116a:	bd70      	pop	{r4, r5, r6, pc}
 802116c:	0781      	lsls	r1, r0, #30
 802116e:	bf58      	it	pl
 8021170:	6963      	ldrpl	r3, [r4, #20]
 8021172:	60a3      	str	r3, [r4, #8]
 8021174:	e7f4      	b.n	8021160 <__swsetup_r+0xb0>
 8021176:	2000      	movs	r0, #0
 8021178:	e7f7      	b.n	802116a <__swsetup_r+0xba>
 802117a:	bf00      	nop
 802117c:	20000104 	.word	0x20000104
 8021180:	080239d0 	.word	0x080239d0
 8021184:	080239f0 	.word	0x080239f0
 8021188:	080239b0 	.word	0x080239b0

0802118c <__register_exitproc>:
 802118c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021190:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 802124c <__register_exitproc+0xc0>
 8021194:	4606      	mov	r6, r0
 8021196:	f8d8 0000 	ldr.w	r0, [r8]
 802119a:	461f      	mov	r7, r3
 802119c:	460d      	mov	r5, r1
 802119e:	4691      	mov	r9, r2
 80211a0:	f000 fa1e 	bl	80215e0 <__retarget_lock_acquire_recursive>
 80211a4:	4b25      	ldr	r3, [pc, #148]	; (802123c <__register_exitproc+0xb0>)
 80211a6:	681c      	ldr	r4, [r3, #0]
 80211a8:	b934      	cbnz	r4, 80211b8 <__register_exitproc+0x2c>
 80211aa:	4c25      	ldr	r4, [pc, #148]	; (8021240 <__register_exitproc+0xb4>)
 80211ac:	601c      	str	r4, [r3, #0]
 80211ae:	4b25      	ldr	r3, [pc, #148]	; (8021244 <__register_exitproc+0xb8>)
 80211b0:	b113      	cbz	r3, 80211b8 <__register_exitproc+0x2c>
 80211b2:	681b      	ldr	r3, [r3, #0]
 80211b4:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80211b8:	6863      	ldr	r3, [r4, #4]
 80211ba:	2b1f      	cmp	r3, #31
 80211bc:	dd07      	ble.n	80211ce <__register_exitproc+0x42>
 80211be:	f8d8 0000 	ldr.w	r0, [r8]
 80211c2:	f000 fa0f 	bl	80215e4 <__retarget_lock_release_recursive>
 80211c6:	f04f 30ff 	mov.w	r0, #4294967295
 80211ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80211ce:	b34e      	cbz	r6, 8021224 <__register_exitproc+0x98>
 80211d0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80211d4:	b988      	cbnz	r0, 80211fa <__register_exitproc+0x6e>
 80211d6:	4b1c      	ldr	r3, [pc, #112]	; (8021248 <__register_exitproc+0xbc>)
 80211d8:	b923      	cbnz	r3, 80211e4 <__register_exitproc+0x58>
 80211da:	f8d8 0000 	ldr.w	r0, [r8]
 80211de:	f000 fa00 	bl	80215e2 <__retarget_lock_release>
 80211e2:	e7f0      	b.n	80211c6 <__register_exitproc+0x3a>
 80211e4:	f44f 7084 	mov.w	r0, #264	; 0x108
 80211e8:	f7ff fa3c 	bl	8020664 <malloc>
 80211ec:	2800      	cmp	r0, #0
 80211ee:	d0f4      	beq.n	80211da <__register_exitproc+0x4e>
 80211f0:	2300      	movs	r3, #0
 80211f2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80211f6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80211fa:	6863      	ldr	r3, [r4, #4]
 80211fc:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021200:	2201      	movs	r2, #1
 8021202:	409a      	lsls	r2, r3
 8021204:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021208:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802120c:	4313      	orrs	r3, r2
 802120e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021212:	2e02      	cmp	r6, #2
 8021214:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8021218:	bf02      	ittt	eq
 802121a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802121e:	4313      	orreq	r3, r2
 8021220:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021224:	6863      	ldr	r3, [r4, #4]
 8021226:	f8d8 0000 	ldr.w	r0, [r8]
 802122a:	1c5a      	adds	r2, r3, #1
 802122c:	3302      	adds	r3, #2
 802122e:	6062      	str	r2, [r4, #4]
 8021230:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021234:	f000 f9d6 	bl	80215e4 <__retarget_lock_release_recursive>
 8021238:	2000      	movs	r0, #0
 802123a:	e7c6      	b.n	80211ca <__register_exitproc+0x3e>
 802123c:	20015aac 	.word	0x20015aac
 8021240:	20015a20 	.word	0x20015a20
 8021244:	080238a8 	.word	0x080238a8
 8021248:	08020665 	.word	0x08020665
 802124c:	20000168 	.word	0x20000168

08021250 <_close_r>:
 8021250:	b538      	push	{r3, r4, r5, lr}
 8021252:	4d06      	ldr	r5, [pc, #24]	; (802126c <_close_r+0x1c>)
 8021254:	2300      	movs	r3, #0
 8021256:	4604      	mov	r4, r0
 8021258:	4608      	mov	r0, r1
 802125a:	602b      	str	r3, [r5, #0]
 802125c:	f7e0 ff6e 	bl	800213c <_close>
 8021260:	1c43      	adds	r3, r0, #1
 8021262:	d102      	bne.n	802126a <_close_r+0x1a>
 8021264:	682b      	ldr	r3, [r5, #0]
 8021266:	b103      	cbz	r3, 802126a <_close_r+0x1a>
 8021268:	6023      	str	r3, [r4, #0]
 802126a:	bd38      	pop	{r3, r4, r5, pc}
 802126c:	20015ab4 	.word	0x20015ab4

08021270 <__sflush_r>:
 8021270:	898a      	ldrh	r2, [r1, #12]
 8021272:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021276:	4605      	mov	r5, r0
 8021278:	0710      	lsls	r0, r2, #28
 802127a:	460c      	mov	r4, r1
 802127c:	d458      	bmi.n	8021330 <__sflush_r+0xc0>
 802127e:	684b      	ldr	r3, [r1, #4]
 8021280:	2b00      	cmp	r3, #0
 8021282:	dc05      	bgt.n	8021290 <__sflush_r+0x20>
 8021284:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8021286:	2b00      	cmp	r3, #0
 8021288:	dc02      	bgt.n	8021290 <__sflush_r+0x20>
 802128a:	2000      	movs	r0, #0
 802128c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021290:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021292:	2e00      	cmp	r6, #0
 8021294:	d0f9      	beq.n	802128a <__sflush_r+0x1a>
 8021296:	2300      	movs	r3, #0
 8021298:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802129c:	682f      	ldr	r7, [r5, #0]
 802129e:	602b      	str	r3, [r5, #0]
 80212a0:	d032      	beq.n	8021308 <__sflush_r+0x98>
 80212a2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80212a4:	89a3      	ldrh	r3, [r4, #12]
 80212a6:	075a      	lsls	r2, r3, #29
 80212a8:	d505      	bpl.n	80212b6 <__sflush_r+0x46>
 80212aa:	6863      	ldr	r3, [r4, #4]
 80212ac:	1ac0      	subs	r0, r0, r3
 80212ae:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80212b0:	b10b      	cbz	r3, 80212b6 <__sflush_r+0x46>
 80212b2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80212b4:	1ac0      	subs	r0, r0, r3
 80212b6:	2300      	movs	r3, #0
 80212b8:	4602      	mov	r2, r0
 80212ba:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80212bc:	6a21      	ldr	r1, [r4, #32]
 80212be:	4628      	mov	r0, r5
 80212c0:	47b0      	blx	r6
 80212c2:	1c43      	adds	r3, r0, #1
 80212c4:	89a3      	ldrh	r3, [r4, #12]
 80212c6:	d106      	bne.n	80212d6 <__sflush_r+0x66>
 80212c8:	6829      	ldr	r1, [r5, #0]
 80212ca:	291d      	cmp	r1, #29
 80212cc:	d82c      	bhi.n	8021328 <__sflush_r+0xb8>
 80212ce:	4a2a      	ldr	r2, [pc, #168]	; (8021378 <__sflush_r+0x108>)
 80212d0:	40ca      	lsrs	r2, r1
 80212d2:	07d6      	lsls	r6, r2, #31
 80212d4:	d528      	bpl.n	8021328 <__sflush_r+0xb8>
 80212d6:	2200      	movs	r2, #0
 80212d8:	6062      	str	r2, [r4, #4]
 80212da:	04d9      	lsls	r1, r3, #19
 80212dc:	6922      	ldr	r2, [r4, #16]
 80212de:	6022      	str	r2, [r4, #0]
 80212e0:	d504      	bpl.n	80212ec <__sflush_r+0x7c>
 80212e2:	1c42      	adds	r2, r0, #1
 80212e4:	d101      	bne.n	80212ea <__sflush_r+0x7a>
 80212e6:	682b      	ldr	r3, [r5, #0]
 80212e8:	b903      	cbnz	r3, 80212ec <__sflush_r+0x7c>
 80212ea:	6560      	str	r0, [r4, #84]	; 0x54
 80212ec:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80212ee:	602f      	str	r7, [r5, #0]
 80212f0:	2900      	cmp	r1, #0
 80212f2:	d0ca      	beq.n	802128a <__sflush_r+0x1a>
 80212f4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80212f8:	4299      	cmp	r1, r3
 80212fa:	d002      	beq.n	8021302 <__sflush_r+0x92>
 80212fc:	4628      	mov	r0, r5
 80212fe:	f7ff f9e7 	bl	80206d0 <_free_r>
 8021302:	2000      	movs	r0, #0
 8021304:	6360      	str	r0, [r4, #52]	; 0x34
 8021306:	e7c1      	b.n	802128c <__sflush_r+0x1c>
 8021308:	6a21      	ldr	r1, [r4, #32]
 802130a:	2301      	movs	r3, #1
 802130c:	4628      	mov	r0, r5
 802130e:	47b0      	blx	r6
 8021310:	1c41      	adds	r1, r0, #1
 8021312:	d1c7      	bne.n	80212a4 <__sflush_r+0x34>
 8021314:	682b      	ldr	r3, [r5, #0]
 8021316:	2b00      	cmp	r3, #0
 8021318:	d0c4      	beq.n	80212a4 <__sflush_r+0x34>
 802131a:	2b1d      	cmp	r3, #29
 802131c:	d001      	beq.n	8021322 <__sflush_r+0xb2>
 802131e:	2b16      	cmp	r3, #22
 8021320:	d101      	bne.n	8021326 <__sflush_r+0xb6>
 8021322:	602f      	str	r7, [r5, #0]
 8021324:	e7b1      	b.n	802128a <__sflush_r+0x1a>
 8021326:	89a3      	ldrh	r3, [r4, #12]
 8021328:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802132c:	81a3      	strh	r3, [r4, #12]
 802132e:	e7ad      	b.n	802128c <__sflush_r+0x1c>
 8021330:	690f      	ldr	r7, [r1, #16]
 8021332:	2f00      	cmp	r7, #0
 8021334:	d0a9      	beq.n	802128a <__sflush_r+0x1a>
 8021336:	0793      	lsls	r3, r2, #30
 8021338:	680e      	ldr	r6, [r1, #0]
 802133a:	bf08      	it	eq
 802133c:	694b      	ldreq	r3, [r1, #20]
 802133e:	600f      	str	r7, [r1, #0]
 8021340:	bf18      	it	ne
 8021342:	2300      	movne	r3, #0
 8021344:	eba6 0807 	sub.w	r8, r6, r7
 8021348:	608b      	str	r3, [r1, #8]
 802134a:	f1b8 0f00 	cmp.w	r8, #0
 802134e:	dd9c      	ble.n	802128a <__sflush_r+0x1a>
 8021350:	6a21      	ldr	r1, [r4, #32]
 8021352:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021354:	4643      	mov	r3, r8
 8021356:	463a      	mov	r2, r7
 8021358:	4628      	mov	r0, r5
 802135a:	47b0      	blx	r6
 802135c:	2800      	cmp	r0, #0
 802135e:	dc06      	bgt.n	802136e <__sflush_r+0xfe>
 8021360:	89a3      	ldrh	r3, [r4, #12]
 8021362:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021366:	81a3      	strh	r3, [r4, #12]
 8021368:	f04f 30ff 	mov.w	r0, #4294967295
 802136c:	e78e      	b.n	802128c <__sflush_r+0x1c>
 802136e:	4407      	add	r7, r0
 8021370:	eba8 0800 	sub.w	r8, r8, r0
 8021374:	e7e9      	b.n	802134a <__sflush_r+0xda>
 8021376:	bf00      	nop
 8021378:	20400001 	.word	0x20400001

0802137c <_fflush_r>:
 802137c:	b538      	push	{r3, r4, r5, lr}
 802137e:	690b      	ldr	r3, [r1, #16]
 8021380:	4605      	mov	r5, r0
 8021382:	460c      	mov	r4, r1
 8021384:	b913      	cbnz	r3, 802138c <_fflush_r+0x10>
 8021386:	2500      	movs	r5, #0
 8021388:	4628      	mov	r0, r5
 802138a:	bd38      	pop	{r3, r4, r5, pc}
 802138c:	b118      	cbz	r0, 8021396 <_fflush_r+0x1a>
 802138e:	6983      	ldr	r3, [r0, #24]
 8021390:	b90b      	cbnz	r3, 8021396 <_fflush_r+0x1a>
 8021392:	f000 f887 	bl	80214a4 <__sinit>
 8021396:	4b14      	ldr	r3, [pc, #80]	; (80213e8 <_fflush_r+0x6c>)
 8021398:	429c      	cmp	r4, r3
 802139a:	d11b      	bne.n	80213d4 <_fflush_r+0x58>
 802139c:	686c      	ldr	r4, [r5, #4]
 802139e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80213a2:	2b00      	cmp	r3, #0
 80213a4:	d0ef      	beq.n	8021386 <_fflush_r+0xa>
 80213a6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80213a8:	07d0      	lsls	r0, r2, #31
 80213aa:	d404      	bmi.n	80213b6 <_fflush_r+0x3a>
 80213ac:	0599      	lsls	r1, r3, #22
 80213ae:	d402      	bmi.n	80213b6 <_fflush_r+0x3a>
 80213b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80213b2:	f000 f915 	bl	80215e0 <__retarget_lock_acquire_recursive>
 80213b6:	4628      	mov	r0, r5
 80213b8:	4621      	mov	r1, r4
 80213ba:	f7ff ff59 	bl	8021270 <__sflush_r>
 80213be:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80213c0:	07da      	lsls	r2, r3, #31
 80213c2:	4605      	mov	r5, r0
 80213c4:	d4e0      	bmi.n	8021388 <_fflush_r+0xc>
 80213c6:	89a3      	ldrh	r3, [r4, #12]
 80213c8:	059b      	lsls	r3, r3, #22
 80213ca:	d4dd      	bmi.n	8021388 <_fflush_r+0xc>
 80213cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80213ce:	f000 f909 	bl	80215e4 <__retarget_lock_release_recursive>
 80213d2:	e7d9      	b.n	8021388 <_fflush_r+0xc>
 80213d4:	4b05      	ldr	r3, [pc, #20]	; (80213ec <_fflush_r+0x70>)
 80213d6:	429c      	cmp	r4, r3
 80213d8:	d101      	bne.n	80213de <_fflush_r+0x62>
 80213da:	68ac      	ldr	r4, [r5, #8]
 80213dc:	e7df      	b.n	802139e <_fflush_r+0x22>
 80213de:	4b04      	ldr	r3, [pc, #16]	; (80213f0 <_fflush_r+0x74>)
 80213e0:	429c      	cmp	r4, r3
 80213e2:	bf08      	it	eq
 80213e4:	68ec      	ldreq	r4, [r5, #12]
 80213e6:	e7da      	b.n	802139e <_fflush_r+0x22>
 80213e8:	080239d0 	.word	0x080239d0
 80213ec:	080239f0 	.word	0x080239f0
 80213f0:	080239b0 	.word	0x080239b0

080213f4 <std>:
 80213f4:	2300      	movs	r3, #0
 80213f6:	b510      	push	{r4, lr}
 80213f8:	4604      	mov	r4, r0
 80213fa:	e9c0 3300 	strd	r3, r3, [r0]
 80213fe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8021402:	6083      	str	r3, [r0, #8]
 8021404:	8181      	strh	r1, [r0, #12]
 8021406:	6643      	str	r3, [r0, #100]	; 0x64
 8021408:	81c2      	strh	r2, [r0, #14]
 802140a:	6183      	str	r3, [r0, #24]
 802140c:	4619      	mov	r1, r3
 802140e:	2208      	movs	r2, #8
 8021410:	305c      	adds	r0, #92	; 0x5c
 8021412:	f7ff f955 	bl	80206c0 <memset>
 8021416:	4b05      	ldr	r3, [pc, #20]	; (802142c <std+0x38>)
 8021418:	6263      	str	r3, [r4, #36]	; 0x24
 802141a:	4b05      	ldr	r3, [pc, #20]	; (8021430 <std+0x3c>)
 802141c:	62a3      	str	r3, [r4, #40]	; 0x28
 802141e:	4b05      	ldr	r3, [pc, #20]	; (8021434 <std+0x40>)
 8021420:	62e3      	str	r3, [r4, #44]	; 0x2c
 8021422:	4b05      	ldr	r3, [pc, #20]	; (8021438 <std+0x44>)
 8021424:	6224      	str	r4, [r4, #32]
 8021426:	6323      	str	r3, [r4, #48]	; 0x30
 8021428:	bd10      	pop	{r4, pc}
 802142a:	bf00      	nop
 802142c:	080216c9 	.word	0x080216c9
 8021430:	080216eb 	.word	0x080216eb
 8021434:	08021723 	.word	0x08021723
 8021438:	08021747 	.word	0x08021747

0802143c <_cleanup_r>:
 802143c:	4901      	ldr	r1, [pc, #4]	; (8021444 <_cleanup_r+0x8>)
 802143e:	f000 b8af 	b.w	80215a0 <_fwalk_reent>
 8021442:	bf00      	nop
 8021444:	0802137d 	.word	0x0802137d

08021448 <__sfmoreglue>:
 8021448:	b570      	push	{r4, r5, r6, lr}
 802144a:	2268      	movs	r2, #104	; 0x68
 802144c:	1e4d      	subs	r5, r1, #1
 802144e:	4355      	muls	r5, r2
 8021450:	460e      	mov	r6, r1
 8021452:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8021456:	f7ff f9a7 	bl	80207a8 <_malloc_r>
 802145a:	4604      	mov	r4, r0
 802145c:	b140      	cbz	r0, 8021470 <__sfmoreglue+0x28>
 802145e:	2100      	movs	r1, #0
 8021460:	e9c0 1600 	strd	r1, r6, [r0]
 8021464:	300c      	adds	r0, #12
 8021466:	60a0      	str	r0, [r4, #8]
 8021468:	f105 0268 	add.w	r2, r5, #104	; 0x68
 802146c:	f7ff f928 	bl	80206c0 <memset>
 8021470:	4620      	mov	r0, r4
 8021472:	bd70      	pop	{r4, r5, r6, pc}

08021474 <__sfp_lock_acquire>:
 8021474:	4801      	ldr	r0, [pc, #4]	; (802147c <__sfp_lock_acquire+0x8>)
 8021476:	f000 b8b3 	b.w	80215e0 <__retarget_lock_acquire_recursive>
 802147a:	bf00      	nop
 802147c:	20015ab2 	.word	0x20015ab2

08021480 <__sfp_lock_release>:
 8021480:	4801      	ldr	r0, [pc, #4]	; (8021488 <__sfp_lock_release+0x8>)
 8021482:	f000 b8af 	b.w	80215e4 <__retarget_lock_release_recursive>
 8021486:	bf00      	nop
 8021488:	20015ab2 	.word	0x20015ab2

0802148c <__sinit_lock_acquire>:
 802148c:	4801      	ldr	r0, [pc, #4]	; (8021494 <__sinit_lock_acquire+0x8>)
 802148e:	f000 b8a7 	b.w	80215e0 <__retarget_lock_acquire_recursive>
 8021492:	bf00      	nop
 8021494:	20015ab3 	.word	0x20015ab3

08021498 <__sinit_lock_release>:
 8021498:	4801      	ldr	r0, [pc, #4]	; (80214a0 <__sinit_lock_release+0x8>)
 802149a:	f000 b8a3 	b.w	80215e4 <__retarget_lock_release_recursive>
 802149e:	bf00      	nop
 80214a0:	20015ab3 	.word	0x20015ab3

080214a4 <__sinit>:
 80214a4:	b510      	push	{r4, lr}
 80214a6:	4604      	mov	r4, r0
 80214a8:	f7ff fff0 	bl	802148c <__sinit_lock_acquire>
 80214ac:	69a3      	ldr	r3, [r4, #24]
 80214ae:	b11b      	cbz	r3, 80214b8 <__sinit+0x14>
 80214b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80214b4:	f7ff bff0 	b.w	8021498 <__sinit_lock_release>
 80214b8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80214bc:	6523      	str	r3, [r4, #80]	; 0x50
 80214be:	4b13      	ldr	r3, [pc, #76]	; (802150c <__sinit+0x68>)
 80214c0:	4a13      	ldr	r2, [pc, #76]	; (8021510 <__sinit+0x6c>)
 80214c2:	681b      	ldr	r3, [r3, #0]
 80214c4:	62a2      	str	r2, [r4, #40]	; 0x28
 80214c6:	42a3      	cmp	r3, r4
 80214c8:	bf04      	itt	eq
 80214ca:	2301      	moveq	r3, #1
 80214cc:	61a3      	streq	r3, [r4, #24]
 80214ce:	4620      	mov	r0, r4
 80214d0:	f000 f820 	bl	8021514 <__sfp>
 80214d4:	6060      	str	r0, [r4, #4]
 80214d6:	4620      	mov	r0, r4
 80214d8:	f000 f81c 	bl	8021514 <__sfp>
 80214dc:	60a0      	str	r0, [r4, #8]
 80214de:	4620      	mov	r0, r4
 80214e0:	f000 f818 	bl	8021514 <__sfp>
 80214e4:	2200      	movs	r2, #0
 80214e6:	60e0      	str	r0, [r4, #12]
 80214e8:	2104      	movs	r1, #4
 80214ea:	6860      	ldr	r0, [r4, #4]
 80214ec:	f7ff ff82 	bl	80213f4 <std>
 80214f0:	68a0      	ldr	r0, [r4, #8]
 80214f2:	2201      	movs	r2, #1
 80214f4:	2109      	movs	r1, #9
 80214f6:	f7ff ff7d 	bl	80213f4 <std>
 80214fa:	68e0      	ldr	r0, [r4, #12]
 80214fc:	2202      	movs	r2, #2
 80214fe:	2112      	movs	r1, #18
 8021500:	f7ff ff78 	bl	80213f4 <std>
 8021504:	2301      	movs	r3, #1
 8021506:	61a3      	str	r3, [r4, #24]
 8021508:	e7d2      	b.n	80214b0 <__sinit+0xc>
 802150a:	bf00      	nop
 802150c:	08023870 	.word	0x08023870
 8021510:	0802143d 	.word	0x0802143d

08021514 <__sfp>:
 8021514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021516:	4607      	mov	r7, r0
 8021518:	f7ff ffac 	bl	8021474 <__sfp_lock_acquire>
 802151c:	4b1e      	ldr	r3, [pc, #120]	; (8021598 <__sfp+0x84>)
 802151e:	681e      	ldr	r6, [r3, #0]
 8021520:	69b3      	ldr	r3, [r6, #24]
 8021522:	b913      	cbnz	r3, 802152a <__sfp+0x16>
 8021524:	4630      	mov	r0, r6
 8021526:	f7ff ffbd 	bl	80214a4 <__sinit>
 802152a:	3648      	adds	r6, #72	; 0x48
 802152c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8021530:	3b01      	subs	r3, #1
 8021532:	d503      	bpl.n	802153c <__sfp+0x28>
 8021534:	6833      	ldr	r3, [r6, #0]
 8021536:	b30b      	cbz	r3, 802157c <__sfp+0x68>
 8021538:	6836      	ldr	r6, [r6, #0]
 802153a:	e7f7      	b.n	802152c <__sfp+0x18>
 802153c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8021540:	b9d5      	cbnz	r5, 8021578 <__sfp+0x64>
 8021542:	4b16      	ldr	r3, [pc, #88]	; (802159c <__sfp+0x88>)
 8021544:	60e3      	str	r3, [r4, #12]
 8021546:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802154a:	6665      	str	r5, [r4, #100]	; 0x64
 802154c:	f000 f847 	bl	80215de <__retarget_lock_init_recursive>
 8021550:	f7ff ff96 	bl	8021480 <__sfp_lock_release>
 8021554:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8021558:	e9c4 5504 	strd	r5, r5, [r4, #16]
 802155c:	6025      	str	r5, [r4, #0]
 802155e:	61a5      	str	r5, [r4, #24]
 8021560:	2208      	movs	r2, #8
 8021562:	4629      	mov	r1, r5
 8021564:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8021568:	f7ff f8aa 	bl	80206c0 <memset>
 802156c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8021570:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8021574:	4620      	mov	r0, r4
 8021576:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021578:	3468      	adds	r4, #104	; 0x68
 802157a:	e7d9      	b.n	8021530 <__sfp+0x1c>
 802157c:	2104      	movs	r1, #4
 802157e:	4638      	mov	r0, r7
 8021580:	f7ff ff62 	bl	8021448 <__sfmoreglue>
 8021584:	4604      	mov	r4, r0
 8021586:	6030      	str	r0, [r6, #0]
 8021588:	2800      	cmp	r0, #0
 802158a:	d1d5      	bne.n	8021538 <__sfp+0x24>
 802158c:	f7ff ff78 	bl	8021480 <__sfp_lock_release>
 8021590:	230c      	movs	r3, #12
 8021592:	603b      	str	r3, [r7, #0]
 8021594:	e7ee      	b.n	8021574 <__sfp+0x60>
 8021596:	bf00      	nop
 8021598:	08023870 	.word	0x08023870
 802159c:	ffff0001 	.word	0xffff0001

080215a0 <_fwalk_reent>:
 80215a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80215a4:	4606      	mov	r6, r0
 80215a6:	4688      	mov	r8, r1
 80215a8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80215ac:	2700      	movs	r7, #0
 80215ae:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80215b2:	f1b9 0901 	subs.w	r9, r9, #1
 80215b6:	d505      	bpl.n	80215c4 <_fwalk_reent+0x24>
 80215b8:	6824      	ldr	r4, [r4, #0]
 80215ba:	2c00      	cmp	r4, #0
 80215bc:	d1f7      	bne.n	80215ae <_fwalk_reent+0xe>
 80215be:	4638      	mov	r0, r7
 80215c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80215c4:	89ab      	ldrh	r3, [r5, #12]
 80215c6:	2b01      	cmp	r3, #1
 80215c8:	d907      	bls.n	80215da <_fwalk_reent+0x3a>
 80215ca:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80215ce:	3301      	adds	r3, #1
 80215d0:	d003      	beq.n	80215da <_fwalk_reent+0x3a>
 80215d2:	4629      	mov	r1, r5
 80215d4:	4630      	mov	r0, r6
 80215d6:	47c0      	blx	r8
 80215d8:	4307      	orrs	r7, r0
 80215da:	3568      	adds	r5, #104	; 0x68
 80215dc:	e7e9      	b.n	80215b2 <_fwalk_reent+0x12>

080215de <__retarget_lock_init_recursive>:
 80215de:	4770      	bx	lr

080215e0 <__retarget_lock_acquire_recursive>:
 80215e0:	4770      	bx	lr

080215e2 <__retarget_lock_release>:
 80215e2:	4770      	bx	lr

080215e4 <__retarget_lock_release_recursive>:
 80215e4:	4770      	bx	lr

080215e6 <__swhatbuf_r>:
 80215e6:	b570      	push	{r4, r5, r6, lr}
 80215e8:	460e      	mov	r6, r1
 80215ea:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80215ee:	2900      	cmp	r1, #0
 80215f0:	b096      	sub	sp, #88	; 0x58
 80215f2:	4614      	mov	r4, r2
 80215f4:	461d      	mov	r5, r3
 80215f6:	da08      	bge.n	802160a <__swhatbuf_r+0x24>
 80215f8:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80215fc:	2200      	movs	r2, #0
 80215fe:	602a      	str	r2, [r5, #0]
 8021600:	061a      	lsls	r2, r3, #24
 8021602:	d410      	bmi.n	8021626 <__swhatbuf_r+0x40>
 8021604:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021608:	e00e      	b.n	8021628 <__swhatbuf_r+0x42>
 802160a:	466a      	mov	r2, sp
 802160c:	f000 f8b2 	bl	8021774 <_fstat_r>
 8021610:	2800      	cmp	r0, #0
 8021612:	dbf1      	blt.n	80215f8 <__swhatbuf_r+0x12>
 8021614:	9a01      	ldr	r2, [sp, #4]
 8021616:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802161a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 802161e:	425a      	negs	r2, r3
 8021620:	415a      	adcs	r2, r3
 8021622:	602a      	str	r2, [r5, #0]
 8021624:	e7ee      	b.n	8021604 <__swhatbuf_r+0x1e>
 8021626:	2340      	movs	r3, #64	; 0x40
 8021628:	2000      	movs	r0, #0
 802162a:	6023      	str	r3, [r4, #0]
 802162c:	b016      	add	sp, #88	; 0x58
 802162e:	bd70      	pop	{r4, r5, r6, pc}

08021630 <__smakebuf_r>:
 8021630:	898b      	ldrh	r3, [r1, #12]
 8021632:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021634:	079d      	lsls	r5, r3, #30
 8021636:	4606      	mov	r6, r0
 8021638:	460c      	mov	r4, r1
 802163a:	d507      	bpl.n	802164c <__smakebuf_r+0x1c>
 802163c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021640:	6023      	str	r3, [r4, #0]
 8021642:	6123      	str	r3, [r4, #16]
 8021644:	2301      	movs	r3, #1
 8021646:	6163      	str	r3, [r4, #20]
 8021648:	b002      	add	sp, #8
 802164a:	bd70      	pop	{r4, r5, r6, pc}
 802164c:	ab01      	add	r3, sp, #4
 802164e:	466a      	mov	r2, sp
 8021650:	f7ff ffc9 	bl	80215e6 <__swhatbuf_r>
 8021654:	9900      	ldr	r1, [sp, #0]
 8021656:	4605      	mov	r5, r0
 8021658:	4630      	mov	r0, r6
 802165a:	f7ff f8a5 	bl	80207a8 <_malloc_r>
 802165e:	b948      	cbnz	r0, 8021674 <__smakebuf_r+0x44>
 8021660:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021664:	059a      	lsls	r2, r3, #22
 8021666:	d4ef      	bmi.n	8021648 <__smakebuf_r+0x18>
 8021668:	f023 0303 	bic.w	r3, r3, #3
 802166c:	f043 0302 	orr.w	r3, r3, #2
 8021670:	81a3      	strh	r3, [r4, #12]
 8021672:	e7e3      	b.n	802163c <__smakebuf_r+0xc>
 8021674:	4b0d      	ldr	r3, [pc, #52]	; (80216ac <__smakebuf_r+0x7c>)
 8021676:	62b3      	str	r3, [r6, #40]	; 0x28
 8021678:	89a3      	ldrh	r3, [r4, #12]
 802167a:	6020      	str	r0, [r4, #0]
 802167c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021680:	81a3      	strh	r3, [r4, #12]
 8021682:	9b00      	ldr	r3, [sp, #0]
 8021684:	6163      	str	r3, [r4, #20]
 8021686:	9b01      	ldr	r3, [sp, #4]
 8021688:	6120      	str	r0, [r4, #16]
 802168a:	b15b      	cbz	r3, 80216a4 <__smakebuf_r+0x74>
 802168c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021690:	4630      	mov	r0, r6
 8021692:	f000 f881 	bl	8021798 <_isatty_r>
 8021696:	b128      	cbz	r0, 80216a4 <__smakebuf_r+0x74>
 8021698:	89a3      	ldrh	r3, [r4, #12]
 802169a:	f023 0303 	bic.w	r3, r3, #3
 802169e:	f043 0301 	orr.w	r3, r3, #1
 80216a2:	81a3      	strh	r3, [r4, #12]
 80216a4:	89a0      	ldrh	r0, [r4, #12]
 80216a6:	4305      	orrs	r5, r0
 80216a8:	81a5      	strh	r5, [r4, #12]
 80216aa:	e7cd      	b.n	8021648 <__smakebuf_r+0x18>
 80216ac:	0802143d 	.word	0x0802143d

080216b0 <__malloc_lock>:
 80216b0:	4801      	ldr	r0, [pc, #4]	; (80216b8 <__malloc_lock+0x8>)
 80216b2:	f7ff bf95 	b.w	80215e0 <__retarget_lock_acquire_recursive>
 80216b6:	bf00      	nop
 80216b8:	20015ab1 	.word	0x20015ab1

080216bc <__malloc_unlock>:
 80216bc:	4801      	ldr	r0, [pc, #4]	; (80216c4 <__malloc_unlock+0x8>)
 80216be:	f7ff bf91 	b.w	80215e4 <__retarget_lock_release_recursive>
 80216c2:	bf00      	nop
 80216c4:	20015ab1 	.word	0x20015ab1

080216c8 <__sread>:
 80216c8:	b510      	push	{r4, lr}
 80216ca:	460c      	mov	r4, r1
 80216cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80216d0:	f000 f884 	bl	80217dc <_read_r>
 80216d4:	2800      	cmp	r0, #0
 80216d6:	bfab      	itete	ge
 80216d8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80216da:	89a3      	ldrhlt	r3, [r4, #12]
 80216dc:	181b      	addge	r3, r3, r0
 80216de:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80216e2:	bfac      	ite	ge
 80216e4:	6563      	strge	r3, [r4, #84]	; 0x54
 80216e6:	81a3      	strhlt	r3, [r4, #12]
 80216e8:	bd10      	pop	{r4, pc}

080216ea <__swrite>:
 80216ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80216ee:	461f      	mov	r7, r3
 80216f0:	898b      	ldrh	r3, [r1, #12]
 80216f2:	05db      	lsls	r3, r3, #23
 80216f4:	4605      	mov	r5, r0
 80216f6:	460c      	mov	r4, r1
 80216f8:	4616      	mov	r6, r2
 80216fa:	d505      	bpl.n	8021708 <__swrite+0x1e>
 80216fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021700:	2302      	movs	r3, #2
 8021702:	2200      	movs	r2, #0
 8021704:	f000 f858 	bl	80217b8 <_lseek_r>
 8021708:	89a3      	ldrh	r3, [r4, #12]
 802170a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802170e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8021712:	81a3      	strh	r3, [r4, #12]
 8021714:	4632      	mov	r2, r6
 8021716:	463b      	mov	r3, r7
 8021718:	4628      	mov	r0, r5
 802171a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802171e:	f000 b817 	b.w	8021750 <_write_r>

08021722 <__sseek>:
 8021722:	b510      	push	{r4, lr}
 8021724:	460c      	mov	r4, r1
 8021726:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802172a:	f000 f845 	bl	80217b8 <_lseek_r>
 802172e:	1c43      	adds	r3, r0, #1
 8021730:	89a3      	ldrh	r3, [r4, #12]
 8021732:	bf15      	itete	ne
 8021734:	6560      	strne	r0, [r4, #84]	; 0x54
 8021736:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802173a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802173e:	81a3      	strheq	r3, [r4, #12]
 8021740:	bf18      	it	ne
 8021742:	81a3      	strhne	r3, [r4, #12]
 8021744:	bd10      	pop	{r4, pc}

08021746 <__sclose>:
 8021746:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802174a:	f7ff bd81 	b.w	8021250 <_close_r>
	...

08021750 <_write_r>:
 8021750:	b538      	push	{r3, r4, r5, lr}
 8021752:	4d07      	ldr	r5, [pc, #28]	; (8021770 <_write_r+0x20>)
 8021754:	4604      	mov	r4, r0
 8021756:	4608      	mov	r0, r1
 8021758:	4611      	mov	r1, r2
 802175a:	2200      	movs	r2, #0
 802175c:	602a      	str	r2, [r5, #0]
 802175e:	461a      	mov	r2, r3
 8021760:	f7e0 fcde 	bl	8002120 <_write>
 8021764:	1c43      	adds	r3, r0, #1
 8021766:	d102      	bne.n	802176e <_write_r+0x1e>
 8021768:	682b      	ldr	r3, [r5, #0]
 802176a:	b103      	cbz	r3, 802176e <_write_r+0x1e>
 802176c:	6023      	str	r3, [r4, #0]
 802176e:	bd38      	pop	{r3, r4, r5, pc}
 8021770:	20015ab4 	.word	0x20015ab4

08021774 <_fstat_r>:
 8021774:	b538      	push	{r3, r4, r5, lr}
 8021776:	4d07      	ldr	r5, [pc, #28]	; (8021794 <_fstat_r+0x20>)
 8021778:	2300      	movs	r3, #0
 802177a:	4604      	mov	r4, r0
 802177c:	4608      	mov	r0, r1
 802177e:	4611      	mov	r1, r2
 8021780:	602b      	str	r3, [r5, #0]
 8021782:	f7e0 fcde 	bl	8002142 <_fstat>
 8021786:	1c43      	adds	r3, r0, #1
 8021788:	d102      	bne.n	8021790 <_fstat_r+0x1c>
 802178a:	682b      	ldr	r3, [r5, #0]
 802178c:	b103      	cbz	r3, 8021790 <_fstat_r+0x1c>
 802178e:	6023      	str	r3, [r4, #0]
 8021790:	bd38      	pop	{r3, r4, r5, pc}
 8021792:	bf00      	nop
 8021794:	20015ab4 	.word	0x20015ab4

08021798 <_isatty_r>:
 8021798:	b538      	push	{r3, r4, r5, lr}
 802179a:	4d06      	ldr	r5, [pc, #24]	; (80217b4 <_isatty_r+0x1c>)
 802179c:	2300      	movs	r3, #0
 802179e:	4604      	mov	r4, r0
 80217a0:	4608      	mov	r0, r1
 80217a2:	602b      	str	r3, [r5, #0]
 80217a4:	f7e0 fcd2 	bl	800214c <_isatty>
 80217a8:	1c43      	adds	r3, r0, #1
 80217aa:	d102      	bne.n	80217b2 <_isatty_r+0x1a>
 80217ac:	682b      	ldr	r3, [r5, #0]
 80217ae:	b103      	cbz	r3, 80217b2 <_isatty_r+0x1a>
 80217b0:	6023      	str	r3, [r4, #0]
 80217b2:	bd38      	pop	{r3, r4, r5, pc}
 80217b4:	20015ab4 	.word	0x20015ab4

080217b8 <_lseek_r>:
 80217b8:	b538      	push	{r3, r4, r5, lr}
 80217ba:	4d07      	ldr	r5, [pc, #28]	; (80217d8 <_lseek_r+0x20>)
 80217bc:	4604      	mov	r4, r0
 80217be:	4608      	mov	r0, r1
 80217c0:	4611      	mov	r1, r2
 80217c2:	2200      	movs	r2, #0
 80217c4:	602a      	str	r2, [r5, #0]
 80217c6:	461a      	mov	r2, r3
 80217c8:	f7e0 fcc2 	bl	8002150 <_lseek>
 80217cc:	1c43      	adds	r3, r0, #1
 80217ce:	d102      	bne.n	80217d6 <_lseek_r+0x1e>
 80217d0:	682b      	ldr	r3, [r5, #0]
 80217d2:	b103      	cbz	r3, 80217d6 <_lseek_r+0x1e>
 80217d4:	6023      	str	r3, [r4, #0]
 80217d6:	bd38      	pop	{r3, r4, r5, pc}
 80217d8:	20015ab4 	.word	0x20015ab4

080217dc <_read_r>:
 80217dc:	b538      	push	{r3, r4, r5, lr}
 80217de:	4d07      	ldr	r5, [pc, #28]	; (80217fc <_read_r+0x20>)
 80217e0:	4604      	mov	r4, r0
 80217e2:	4608      	mov	r0, r1
 80217e4:	4611      	mov	r1, r2
 80217e6:	2200      	movs	r2, #0
 80217e8:	602a      	str	r2, [r5, #0]
 80217ea:	461a      	mov	r2, r3
 80217ec:	f7e0 fc8a 	bl	8002104 <_read>
 80217f0:	1c43      	adds	r3, r0, #1
 80217f2:	d102      	bne.n	80217fa <_read_r+0x1e>
 80217f4:	682b      	ldr	r3, [r5, #0]
 80217f6:	b103      	cbz	r3, 80217fa <_read_r+0x1e>
 80217f8:	6023      	str	r3, [r4, #0]
 80217fa:	bd38      	pop	{r3, r4, r5, pc}
 80217fc:	20015ab4 	.word	0x20015ab4

08021800 <_init>:
 8021800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021802:	bf00      	nop
 8021804:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021806:	bc08      	pop	{r3}
 8021808:	469e      	mov	lr, r3
 802180a:	4770      	bx	lr

0802180c <_fini>:
 802180c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802180e:	bf00      	nop
 8021810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021812:	bc08      	pop	{r3}
 8021814:	469e      	mov	lr, r3
 8021816:	4770      	bx	lr
