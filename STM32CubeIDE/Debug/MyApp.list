
MyApp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00022a30  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000028c0  08022be0  08022be0  00032be0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000037ce  080254a0  080254a0  000354a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002c4  08028c70  08028c70  00038c70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000001d8  08028f34  08028f34  00038f34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00111948  0802910c  0802910c  0003910c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0813aa54  0813aa54  0015016c  2**0
                  CONTENTS
  8 .ARM          00000008  0813aa54  0813aa54  0014aa54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0813aa5c  0813aa5c  0015016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0813aa5c  0813aa5c  0014aa5c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0813aa70  0813aa70  0014aa70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  0813aa78  00150000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001595c  2000016c  0813abe4  0015016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20015ac8  0813abe4  00155ac8  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  0015016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00160000  2**2
                  ALLOC
 17 .debug_line   0007137a  00000000  00000000  0015019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   00148a07  00000000  00000000  001c1516  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00020eb4  00000000  00000000  00309f1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000036d0  00000000  00000000  0032add8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    001230b0  00000000  00000000  0032e4a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007fa0  00000000  00000000  00451558  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0003a877  00000000  00000000  004594f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00038776  00000000  00000000  00493d6f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  004cc4e5  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000b2cc  00000000  00000000  004cc5b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .stab         00000024  00000000  00000000  004d7880  2**2
                  CONTENTS, READONLY, DEBUGGING
 28 .stabstr      0000004e  00000000  00000000  004d78a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08022bc8 	.word	0x08022bc8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08022bc8 	.word	0x08022bc8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f007 f8af 	bl	8007730 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f021 f965 	bl	80218a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff57 	bl	8001488 <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005dc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005e0:	0813aa78 	.word	0x0813aa78
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005ec:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005f0:	20015ac8 	.word	0x20015ac8

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005f6:	4770      	bx	lr

080005f8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005f8:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005fa:	f000 fc9b 	bl	8000f34 <touchgfx_components_init>
  touchgfx_init();
}
 80005fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000602:	f000 bc25 	b.w	8000e50 <touchgfx_init>

08000606 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000606:	f000 bc97 	b.w	8000f38 <touchgfx_taskEntry>

0800060a <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800060a:	4770      	bx	lr

0800060c <_ZN20STM32TouchControllerD0Ev>:
 800060c:	b510      	push	{r4, lr}
 800060e:	2104      	movs	r1, #4
 8000610:	4604      	mov	r4, r0
 8000612:	f021 f84b 	bl	80216ac <_ZdlPvj>
 8000616:	4620      	mov	r0, r4
 8000618:	bd10      	pop	{r4, pc}
	...

0800061c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800061c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800061e:	4b0c      	ldr	r3, [pc, #48]	; (8000650 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000620:	4c0c      	ldr	r4, [pc, #48]	; (8000654 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000622:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000624:	4b0c      	ldr	r3, [pc, #48]	; (8000658 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000626:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000628:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800062a:	6863      	ldr	r3, [r4, #4]
 800062c:	4798      	blx	r3
 800062e:	f640 0311 	movw	r3, #2065	; 0x811
 8000632:	4298      	cmp	r0, r3
 8000634:	d10a      	bne.n	800064c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000636:	4d09      	ldr	r5, [pc, #36]	; (800065c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000638:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800063a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800063c:	2082      	movs	r0, #130	; 0x82
 800063e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000640:	682b      	ldr	r3, [r5, #0]
 8000642:	2082      	movs	r0, #130	; 0x82
 8000644:	68db      	ldr	r3, [r3, #12]
 8000646:	4798      	blx	r3
 8000648:	2000      	movs	r0, #0
    }

    return ret;
}
 800064a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800064c:	2001      	movs	r0, #1
 800064e:	e7fc      	b.n	800064a <_Z11BSP_TS_Inittt+0x2e>
 8000650:	20000188 	.word	0x20000188
 8000654:	2000004c 	.word	0x2000004c
 8000658:	2000018a 	.word	0x2000018a
 800065c:	2000018c 	.word	0x2000018c

08000660 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000660:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000664:	20f0      	movs	r0, #240	; 0xf0
 8000666:	f7ff bfd9 	b.w	800061c <_Z11BSP_TS_Inittt>
	...

0800066c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800066c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800066e:	4d34      	ldr	r5, [pc, #208]	; (8000740 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000670:	682b      	ldr	r3, [r5, #0]
{
 8000672:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000674:	691b      	ldr	r3, [r3, #16]
 8000676:	2082      	movs	r0, #130	; 0x82
 8000678:	4798      	blx	r3
 800067a:	b280      	uxth	r0, r0
 800067c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800067e:	2800      	cmp	r0, #0
 8000680:	d04c      	beq.n	800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000682:	682b      	ldr	r3, [r5, #0]
 8000684:	f10d 0206 	add.w	r2, sp, #6
 8000688:	695b      	ldr	r3, [r3, #20]
 800068a:	a901      	add	r1, sp, #4
 800068c:	2082      	movs	r0, #130	; 0x82
 800068e:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8000690:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000694:	f640 6274 	movw	r2, #3700	; 0xe74
 8000698:	4293      	cmp	r3, r2
 800069a:	d941      	bls.n	8000720 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>
        {
            y = 3700;
 800069c:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 80006a0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80006a4:	f5c2 6267 	rsb	r2, r2, #3696	; 0xe70
 80006a8:	3204      	adds	r2, #4
 80006aa:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80006ac:	2a0a      	cmp	r2, #10
 80006ae:	d93d      	bls.n	800072c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        yr = y / 11;
 80006b0:	230b      	movs	r3, #11
 80006b2:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80006b6:	4b23      	ldr	r3, [pc, #140]	; (8000744 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 80006b8:	881b      	ldrh	r3, [r3, #0]
 80006ba:	429a      	cmp	r2, r3
 80006bc:	d901      	bls.n	80006c2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x56>
        {
            yr = TsYBoundary - 1;
 80006be:	3b01      	subs	r3, #1
 80006c0:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006c2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006c6:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006ca:	428b      	cmp	r3, r1
 80006cc:	d830      	bhi.n	8000730 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>
        {
            x = 3870 - x;
 80006ce:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006d2:	330e      	adds	r3, #14
 80006d4:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006d6:	210f      	movs	r1, #15
 80006d8:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006dc:	491a      	ldr	r1, [pc, #104]	; (8000748 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
 80006de:	8809      	ldrh	r1, [r1, #0]
 80006e0:	428b      	cmp	r3, r1
 80006e2:	d901      	bls.n	80006e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
        {
            xr = TsXBoundary - 1;
 80006e4:	1e4b      	subs	r3, r1, #1
 80006e6:	b29b      	uxth	r3, r3
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e8:	4e18      	ldr	r6, [pc, #96]	; (800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ea:	4d19      	ldr	r5, [pc, #100]	; (8000750 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ec:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006ee:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006f0:	4283      	cmp	r3, r0
 80006f2:	b281      	uxth	r1, r0
 80006f4:	bf8c      	ite	hi
 80006f6:	1a59      	subhi	r1, r3, r1
 80006f8:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006fa:	b2b8      	uxth	r0, r7
 80006fc:	42ba      	cmp	r2, r7
 80006fe:	bf8c      	ite	hi
 8000700:	1a10      	subhi	r0, r2, r0
 8000702:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000704:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000706:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000708:	4401      	add	r1, r0
 800070a:	2905      	cmp	r1, #5
        {
            _x = x;
 800070c:	bfc8      	it	gt
 800070e:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8000710:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8000712:	bfc8      	it	gt
 8000714:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8000716:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000718:	682b      	ldr	r3, [r5, #0]
 800071a:	80a3      	strh	r3, [r4, #4]
    }
}
 800071c:	b003      	add	sp, #12
 800071e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000720:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8000722:	bf9c      	itt	ls
 8000724:	23b4      	movls	r3, #180	; 0xb4
 8000726:	f8ad 3006 	strhls.w	r3, [sp, #6]
 800072a:	e7b9      	b.n	80006a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 800072c:	2200      	movs	r2, #0
 800072e:	e7c8      	b.n	80006c2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x56>
            x = 3800 - x;
 8000730:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8000734:	3308      	adds	r3, #8
 8000736:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000738:	2b0e      	cmp	r3, #14
 800073a:	d8cc      	bhi.n	80006d6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
            xr = 0;
 800073c:	2300      	movs	r3, #0
 800073e:	e7d3      	b.n	80006e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7c>
 8000740:	2000018c 	.word	0x2000018c
 8000744:	2000018a 	.word	0x2000018a
 8000748:	20000188 	.word	0x20000188
 800074c:	20000190 	.word	0x20000190
 8000750:	20000194 	.word	0x20000194

08000754 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000754:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000756:	4668      	mov	r0, sp
{
 8000758:	460d      	mov	r5, r1
 800075a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800075c:	f7ff ff86 	bl	800066c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000760:	f8bd 0000 	ldrh.w	r0, [sp]
 8000764:	b130      	cbz	r0, 8000774 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000766:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800076a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800076c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000770:	6023      	str	r3, [r4, #0]
        return true;
 8000772:	2001      	movs	r0, #1
}
 8000774:	b003      	add	sp, #12
 8000776:	bd30      	pop	{r4, r5, pc}

08000778 <_ZN8touchgfx4GPIO4initEv>:
            {
                GPIO_InvertedLevels[id] = 1;
            }
        }
    }
}
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    }
}
 800077a:	4770      	bx	lr

0800077c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800077c:	4770      	bx	lr

0800077e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000780:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000782:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000786:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800078a:	4770      	bx	lr

0800078c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 800078c:	2000      	movs	r0, #0
 800078e:	4770      	bx	lr

08000790 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000790:	4b03      	ldr	r3, [pc, #12]	; (80007a0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000792:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000794:	3900      	subs	r1, #0
 8000796:	bf18      	it	ne
 8000798:	2101      	movne	r1, #1
 800079a:	7019      	strb	r1, [r3, #0]
    }
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	20014fd3 	.word	0x20014fd3

080007a4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80007a4:	2000      	movs	r0, #0
 80007a6:	4770      	bx	lr

080007a8 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80007a8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80007aa:	b10b      	cbz	r3, 80007b0 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80007ac:	4608      	mov	r0, r1
 80007ae:	4718      	bx	r3
        }
    }
 80007b0:	4770      	bx	lr

080007b2 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80007b2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80007b6:	4770      	bx	lr

080007b8 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80007b8:	6840      	ldr	r0, [r0, #4]
 80007ba:	6803      	ldr	r3, [r0, #0]
 80007bc:	699b      	ldr	r3, [r3, #24]
 80007be:	4718      	bx	r3

080007c0 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80007c0:	4770      	bx	lr

080007c2 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80007c2:	4770      	bx	lr

080007c4 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80007c4:	4770      	bx	lr
	...

080007c8 <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 80007c8:	b570      	push	{r4, r5, r6, lr}
 80007ca:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80007cc:	f000 fc82 	bl	80010d4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80007d0:	6823      	ldr	r3, [r4, #0]
 80007d2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80007d6:	4b04      	ldr	r3, [pc, #16]	; (80007e8 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 80007d8:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 80007dc:	4620      	mov	r0, r4
 80007de:	46ac      	mov	ip, r5
}
 80007e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80007e4:	4760      	bx	ip
 80007e6:	bf00      	nop
 80007e8:	d0000000 	.word	0xd0000000

080007ec <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80007ec:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80007ee:	6803      	ldr	r3, [r0, #0]
{
 80007f0:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80007f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80007f6:	4798      	blx	r3
    enableInterrupts();
 80007f8:	6823      	ldr	r3, [r4, #0]
 80007fa:	4620      	mov	r0, r4
 80007fc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007fe:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000800:	f000 f8ec 	bl	80009dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000804:	6823      	ldr	r3, [r4, #0]
 8000806:	4620      	mov	r0, r4
 8000808:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800080a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800080c:	2029      	movs	r0, #41	; 0x29
 800080e:	f001 f91b 	bl	8001a48 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000812:	f000 f8e3 	bl	80009dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000816:	6823      	ldr	r3, [r4, #0]
 8000818:	4620      	mov	r0, r4
 800081a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800081c:	4798      	blx	r3
    for (;;)
 800081e:	e7f8      	b.n	8000812 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000820 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000820:	b510      	push	{r4, lr}
 8000822:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000824:	f00d f9ce 	bl	800dbc4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000828:	6823      	ldr	r3, [r4, #0]
 800082a:	4620      	mov	r0, r4
 800082c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000834:	4718      	bx	r3

08000836 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000836:	f000 bc3f 	b.w	80010b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

0800083a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800083a:	f000 bc43 	b.w	80010c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800083e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800083e:	f000 bc67 	b.w	8001110 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000842 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000842:	f000 bc15 	b.w	8001070 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000846 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000846:	f000 bc6f 	b.w	8001128 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

0800084a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800084a:	f000 bc77 	b.w	800113c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800084e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800084e:	f000 bc19 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000852 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000852:	f00c bc23 	b.w	800d09c <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000856 <_ZN11TouchGFXHALD0Ev>:
 8000856:	b510      	push	{r4, lr}
 8000858:	217c      	movs	r1, #124	; 0x7c
 800085a:	4604      	mov	r4, r0
 800085c:	f020 ff26 	bl	80216ac <_ZdlPvj>
 8000860:	4620      	mov	r0, r4
 8000862:	bd10      	pop	{r4, pc}

08000864 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000864:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000868:	b11b      	cbz	r3, 8000872 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800086a:	6840      	ldr	r0, [r0, #4]
 800086c:	6803      	ldr	r3, [r0, #0]
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	4718      	bx	r3
    }
 8000872:	4618      	mov	r0, r3
 8000874:	4770      	bx	lr
	...

08000878 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000878:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800087a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800087e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000882:	4b0c      	ldr	r3, [pc, #48]	; (80008b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000884:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000886:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000888:	d009      	beq.n	800089e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800088a:	b93a      	cbnz	r2, 800089c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800088c:	4a0a      	ldr	r2, [pc, #40]	; (80008b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800088e:	490b      	ldr	r1, [pc, #44]	; (80008bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000890:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000892:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000894:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000896:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000898:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800089a:	701a      	strb	r2, [r3, #0]
    }
 800089c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800089e:	2a00      	cmp	r2, #0
 80008a0:	d0fc      	beq.n	800089c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008a2:	4a05      	ldr	r2, [pc, #20]	; (80008b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80008a4:	4905      	ldr	r1, [pc, #20]	; (80008bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008a6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80008a8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80008aa:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80008ac:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80008ae:	2200      	movs	r2, #0
 80008b0:	e7f3      	b.n	800089a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80008b2:	bf00      	nop
 80008b4:	20014fcc 	.word	0x20014fcc
 80008b8:	20014fc8 	.word	0x20014fc8
 80008bc:	20014fca 	.word	0x20014fca

080008c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80008c0:	b570      	push	{r4, r5, r6, lr}
 80008c2:	460d      	mov	r5, r1
 80008c4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80008c6:	b935      	cbnz	r5, 80008d6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80008c8:	4b09      	ldr	r3, [pc, #36]	; (80008f0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80008ca:	4a0a      	ldr	r2, [pc, #40]	; (80008f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80008cc:	480a      	ldr	r0, [pc, #40]	; (80008f8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80008ce:	f240 21d2 	movw	r1, #722	; 0x2d2
 80008d2:	f020 ff9b 	bl	802180c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80008d6:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80008da:	4b08      	ldr	r3, [pc, #32]	; (80008fc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80008dc:	3a00      	subs	r2, #0
 80008de:	bf18      	it	ne
 80008e0:	2201      	movne	r2, #1
 80008e2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80008e4:	6803      	ldr	r3, [r0, #0]
    }
 80008e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80008ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80008ee:	4718      	bx	r3
 80008f0:	08022c38 	.word	0x08022c38
 80008f4:	08022c70 	.word	0x08022c70
 80008f8:	08022cbe 	.word	0x08022cbe
 80008fc:	20014fd2 	.word	0x20014fd2

08000900 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000900:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000902:	4b09      	ldr	r3, [pc, #36]	; (8000928 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000904:	881b      	ldrh	r3, [r3, #0]
 8000906:	428b      	cmp	r3, r1
 8000908:	d803      	bhi.n	8000912 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800090a:	4b08      	ldr	r3, [pc, #32]	; (800092c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800090c:	881b      	ldrh	r3, [r3, #0]
 800090e:	4293      	cmp	r3, r2
 8000910:	d905      	bls.n	800091e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000912:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000914:	4a07      	ldr	r2, [pc, #28]	; (8000934 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000916:	4808      	ldr	r0, [pc, #32]	; (8000938 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000918:	219e      	movs	r1, #158	; 0x9e
 800091a:	f020 ff77 	bl	802180c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800091e:	4b07      	ldr	r3, [pc, #28]	; (800093c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000920:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000922:	4b07      	ldr	r3, [pc, #28]	; (8000940 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000924:	801a      	strh	r2, [r3, #0]
    }
 8000926:	bd08      	pop	{r3, pc}
 8000928:	20014fc8 	.word	0x20014fc8
 800092c:	20014fca 	.word	0x20014fca
 8000930:	08022d03 	.word	0x08022d03
 8000934:	08022d66 	.word	0x08022d66
 8000938:	08022cbe 	.word	0x08022cbe
 800093c:	20014fce 	.word	0x20014fce
 8000940:	20014fd0 	.word	0x20014fd0

08000944 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000944:	2101      	movs	r1, #1
{
 8000946:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000948:	2200      	movs	r2, #0
 800094a:	4608      	mov	r0, r1
 800094c:	f009 fd69 	bl	800a422 <osSemaphoreNew>
 8000950:	4b0a      	ldr	r3, [pc, #40]	; (800097c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000952:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000954:	b928      	cbnz	r0, 8000962 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000956:	4b0a      	ldr	r3, [pc, #40]	; (8000980 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000958:	4a0a      	ldr	r2, [pc, #40]	; (8000984 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800095a:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800095c:	480a      	ldr	r0, [pc, #40]	; (8000988 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800095e:	f020 ff55 	bl	802180c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000962:	2200      	movs	r2, #0
 8000964:	2104      	movs	r1, #4
 8000966:	2001      	movs	r0, #1
 8000968:	f009 fe01 	bl	800a56e <osMessageQueueNew>
 800096c:	4b07      	ldr	r3, [pc, #28]	; (800098c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800096e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000970:	b918      	cbnz	r0, 800097a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000972:	4b07      	ldr	r3, [pc, #28]	; (8000990 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000974:	4a03      	ldr	r2, [pc, #12]	; (8000984 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000976:	212c      	movs	r1, #44	; 0x2c
 8000978:	e7f0      	b.n	800095c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800097a:	bd08      	pop	{r3, pc}
 800097c:	2000019c 	.word	0x2000019c
 8000980:	08022e84 	.word	0x08022e84
 8000984:	08022ecd 	.word	0x08022ecd
 8000988:	08022efc 	.word	0x08022efc
 800098c:	20000198 	.word	0x20000198
 8000990:	08022f3e 	.word	0x08022f3e

08000994 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000994:	4b02      	ldr	r3, [pc, #8]	; (80009a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000996:	f04f 31ff 	mov.w	r1, #4294967295
 800099a:	6818      	ldr	r0, [r3, #0]
 800099c:	f009 bd8b 	b.w	800a4b6 <osSemaphoreAcquire>
 80009a0:	2000019c 	.word	0x2000019c

080009a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80009a4:	4b01      	ldr	r3, [pc, #4]	; (80009ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80009a6:	6818      	ldr	r0, [r3, #0]
 80009a8:	f009 bdb0 	b.w	800a50c <osSemaphoreRelease>
 80009ac:	2000019c 	.word	0x2000019c

080009b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80009b0:	4b02      	ldr	r3, [pc, #8]	; (80009bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80009b2:	2100      	movs	r1, #0
 80009b4:	6818      	ldr	r0, [r3, #0]
 80009b6:	f009 bd7e 	b.w	800a4b6 <osSemaphoreAcquire>
 80009ba:	bf00      	nop
 80009bc:	2000019c 	.word	0x2000019c

080009c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80009c0:	f7ff bff0 	b.w	80009a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080009c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80009c4:	4803      	ldr	r0, [pc, #12]	; (80009d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80009c6:	4904      	ldr	r1, [pc, #16]	; (80009d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80009c8:	6800      	ldr	r0, [r0, #0]
 80009ca:	2300      	movs	r3, #0
 80009cc:	461a      	mov	r2, r3
 80009ce:	f009 be09 	b.w	800a5e4 <osMessageQueuePut>
 80009d2:	bf00      	nop
 80009d4:	20000198 	.word	0x20000198
 80009d8:	20000004 	.word	0x20000004

080009dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80009dc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80009de:	4c08      	ldr	r4, [pc, #32]	; (8000a00 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80009e0:	2300      	movs	r3, #0
 80009e2:	461a      	mov	r2, r3
 80009e4:	a901      	add	r1, sp, #4
 80009e6:	6820      	ldr	r0, [r4, #0]
 80009e8:	f009 fe2c 	bl	800a644 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80009ec:	6820      	ldr	r0, [r4, #0]
 80009ee:	f04f 33ff 	mov.w	r3, #4294967295
 80009f2:	2200      	movs	r2, #0
 80009f4:	a901      	add	r1, sp, #4
 80009f6:	f009 fe25 	bl	800a644 <osMessageQueueGet>
}
 80009fa:	b002      	add	sp, #8
 80009fc:	bd10      	pop	{r4, pc}
 80009fe:	bf00      	nop
 8000a00:	20000198 	.word	0x20000198

08000a04 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000a04:	6803      	ldr	r3, [r0, #0]
 8000a06:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a08:	4718      	bx	r3

08000a0a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000a0a:	2001      	movs	r0, #1
 8000a0c:	4770      	bx	lr

08000a0e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000a0e:	6803      	ldr	r3, [r0, #0]
 8000a10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000a12:	4718      	bx	r3

08000a14 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000a14:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000a16:	2300      	movs	r3, #0
 8000a18:	9301      	str	r3, [sp, #4]
 8000a1a:	4b0d      	ldr	r3, [pc, #52]	; (8000a50 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000a1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000a1e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000a22:	631a      	str	r2, [r3, #48]	; 0x30
 8000a24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000a26:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000a2a:	9201      	str	r2, [sp, #4]
 8000a2c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000a2e:	691a      	ldr	r2, [r3, #16]
 8000a30:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000a34:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000a36:	691a      	ldr	r2, [r3, #16]
 8000a38:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000a3c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000a3e:	4b05      	ldr	r3, [pc, #20]	; (8000a54 <_ZN8STM32DMA10initializeEv+0x40>)
 8000a40:	4a05      	ldr	r2, [pc, #20]	; (8000a58 <_ZN8STM32DMA10initializeEv+0x44>)
 8000a42:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a44:	4b05      	ldr	r3, [pc, #20]	; (8000a5c <_ZN8STM32DMA10initializeEv+0x48>)
 8000a46:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a4a:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000a4c:	b002      	add	sp, #8
 8000a4e:	4770      	bx	lr
 8000a50:	40023800 	.word	0x40023800
 8000a54:	20003e6c 	.word	0x20003e6c
 8000a58:	08000aa1 	.word	0x08000aa1
 8000a5c:	e000e100 	.word	0xe000e100

08000a60 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a60:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a64:	4770      	bx	lr
	...

08000a68 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a68:	4b05      	ldr	r3, [pc, #20]	; (8000a80 <_ZN8STM32DMAD1Ev+0x18>)
 8000a6a:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a6c:	4b05      	ldr	r3, [pc, #20]	; (8000a84 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a6e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a72:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a7a:	f3bf 8f6f 	isb	sy
}
 8000a7e:	4770      	bx	lr
 8000a80:	080230d0 	.word	0x080230d0
 8000a84:	e000e100 	.word	0xe000e100

08000a88 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a88:	b510      	push	{r4, lr}
 8000a8a:	4604      	mov	r4, r0
}
 8000a8c:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a90:	f7ff ffea 	bl	8000a68 <_ZN8STM32DMAD1Ev>
 8000a94:	4620      	mov	r0, r4
 8000a96:	f020 fe09 	bl	80216ac <_ZdlPvj>
 8000a9a:	4620      	mov	r0, r4
 8000a9c:	bd10      	pop	{r4, pc}
	...

08000aa0 <DMA2D_XferCpltCallback>:
        return instance;
 8000aa0:	4b02      	ldr	r3, [pc, #8]	; (8000aac <DMA2D_XferCpltCallback+0xc>)
 8000aa2:	681b      	ldr	r3, [r3, #0]
 8000aa4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000aa6:	6803      	ldr	r3, [r0, #0]
 8000aa8:	695b      	ldr	r3, [r3, #20]
 8000aaa:	4718      	bx	r3
 8000aac:	20014fd4 	.word	0x20014fd4

08000ab0 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000ab4:	4625      	mov	r5, r4
 8000ab6:	4b0a      	ldr	r3, [pc, #40]	; (8000ae0 <_ZN8STM32DMAC1Ev+0x30>)
 8000ab8:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000aba:	2600      	movs	r6, #0
 8000abc:	6060      	str	r0, [r4, #4]
 8000abe:	7226      	strb	r6, [r4, #8]
 8000ac0:	7266      	strb	r6, [r4, #9]
 8000ac2:	f845 3b20 	str.w	r3, [r5], #32
 8000ac6:	2260      	movs	r2, #96	; 0x60
 8000ac8:	4629      	mov	r1, r5
 8000aca:	f00d f9b9 	bl	800de40 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000ace:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000ad2:	60ee      	str	r6, [r5, #12]
 8000ad4:	3524      	adds	r5, #36	; 0x24
 8000ad6:	42ab      	cmp	r3, r5
 8000ad8:	d1fb      	bne.n	8000ad2 <_ZN8STM32DMAC1Ev+0x22>
}
 8000ada:	4620      	mov	r0, r4
 8000adc:	bd70      	pop	{r4, r5, r6, pc}
 8000ade:	bf00      	nop
 8000ae0:	080230d0 	.word	0x080230d0

08000ae4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ae4:	b508      	push	{r3, lr}
    switch (format)
 8000ae6:	290b      	cmp	r1, #11
 8000ae8:	d80b      	bhi.n	8000b02 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000aea:	e8df f001 	tbb	[pc, r1]
 8000aee:	0612      	.short	0x0612
 8000af0:	0a0a0a10 	.word	0x0a0a0a10
 8000af4:	0808080a 	.word	0x0808080a
 8000af8:	0808      	.short	0x0808
 8000afa:	2001      	movs	r0, #1
}
 8000afc:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000afe:	2005      	movs	r0, #5
        break;
 8000b00:	e7fc      	b.n	8000afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000b02:	4b05      	ldr	r3, [pc, #20]	; (8000b18 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000b04:	4a05      	ldr	r2, [pc, #20]	; (8000b1c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000b06:	4806      	ldr	r0, [pc, #24]	; (8000b20 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000b08:	2165      	movs	r1, #101	; 0x65
 8000b0a:	f020 fe7f 	bl	802180c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000b0e:	2000      	movs	r0, #0
 8000b10:	e7f4      	b.n	8000afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000b12:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000b14:	e7f2      	b.n	8000afc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000b16:	bf00      	nop
 8000b18:	08022f80 	.word	0x08022f80
 8000b1c:	08022f9b 	.word	0x08022f9b
 8000b20:	08022fe5 	.word	0x08022fe5

08000b24 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000b24:	b508      	push	{r3, lr}
    switch (format)
 8000b26:	290a      	cmp	r1, #10
 8000b28:	d809      	bhi.n	8000b3e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000b2a:	e8df f001 	tbb	[pc, r1]
 8000b2e:	0610      	.short	0x0610
 8000b30:	0808080e 	.word	0x0808080e
 8000b34:	06060608 	.word	0x06060608
 8000b38:	06          	.byte	0x06
 8000b39:	00          	.byte	0x00
 8000b3a:	2001      	movs	r0, #1
}
 8000b3c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000b3e:	4b05      	ldr	r3, [pc, #20]	; (8000b54 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000b40:	4a05      	ldr	r2, [pc, #20]	; (8000b58 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000b42:	4806      	ldr	r0, [pc, #24]	; (8000b5c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000b44:	2186      	movs	r1, #134	; 0x86
 8000b46:	f020 fe61 	bl	802180c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000b4a:	2000      	movs	r0, #0
 8000b4c:	e7f6      	b.n	8000b3c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000b4e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000b50:	e7f4      	b.n	8000b3c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000b52:	bf00      	nop
 8000b54:	08022f80 	.word	0x08022f80
 8000b58:	08023025 	.word	0x08023025
 8000b5c:	08022fe5 	.word	0x08022fe5

08000b60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b64:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b66:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b68:	4639      	mov	r1, r7
{
 8000b6a:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b6c:	f7ff ffba 	bl	8000ae4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b70:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b74:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b76:	4641      	mov	r1, r8
 8000b78:	4648      	mov	r0, r9
 8000b7a:	f7ff ffb3 	bl	8000ae4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b7e:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b80:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b82:	4648      	mov	r0, r9
 8000b84:	f7ff ffce 	bl	8000b24 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b88:	8aa1      	ldrh	r1, [r4, #20]
 8000b8a:	8b62      	ldrh	r2, [r4, #26]
 8000b8c:	4b42      	ldr	r3, [pc, #264]	; (8000c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b8e:	1a52      	subs	r2, r2, r1
 8000b90:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b92:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b94:	8b22      	ldrh	r2, [r4, #24]
 8000b96:	1a52      	subs	r2, r2, r1
 8000b98:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b9a:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b9c:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b9e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ba2:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba4:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000ba6:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000baa:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000bac:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000bb2:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb4:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000bb8:	d026      	beq.n	8000c08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000bba:	d810      	bhi.n	8000bde <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000bbc:	2920      	cmp	r1, #32
 8000bbe:	ea45 0402 	orr.w	r4, r5, r2
 8000bc2:	d061      	beq.n	8000c88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000bc4:	2940      	cmp	r1, #64	; 0x40
 8000bc6:	d05f      	beq.n	8000c88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000bc8:	2904      	cmp	r1, #4
 8000bca:	d05d      	beq.n	8000c88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bcc:	4b32      	ldr	r3, [pc, #200]	; (8000c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bce:	432a      	orrs	r2, r5
 8000bd0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000bd4:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bd6:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000bd8:	d05a      	beq.n	8000c90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000bda:	4a30      	ldr	r2, [pc, #192]	; (8000c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000bdc:	e040      	b.n	8000c60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000bde:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000be2:	d007      	beq.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000be4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000be8:	d1f0      	bne.n	8000bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bea:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000bee:	f042 0209 	orr.w	r2, r2, #9
 8000bf2:	e003      	b.n	8000bfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bf4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000bf8:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bfc:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000bfe:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c00:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c02:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c04:	6158      	str	r0, [r3, #20]
 8000c06:	e02a      	b.n	8000c5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000c08:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c0a:	432a      	orrs	r2, r5
 8000c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000c10:	1d21      	adds	r1, r4, #4
 8000c12:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c14:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000c16:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c18:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c1a:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000c1c:	b142      	cbz	r2, 8000c30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000c1e:	2a01      	cmp	r2, #1
 8000c20:	d021      	beq.n	8000c66 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000c22:	4b1f      	ldr	r3, [pc, #124]	; (8000ca0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000c24:	4a1f      	ldr	r2, [pc, #124]	; (8000ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000c26:	4820      	ldr	r0, [pc, #128]	; (8000ca8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000c28:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000c2c:	f020 fdee 	bl	802180c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c30:	69da      	ldr	r2, [r3, #28]
 8000c32:	8861      	ldrh	r1, [r4, #2]
 8000c34:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000c38:	3901      	subs	r1, #1
 8000c3a:	f022 0210 	bic.w	r2, r2, #16
 8000c3e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000c42:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000c44:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000c46:	4b14      	ldr	r3, [pc, #80]	; (8000c98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000c48:	69da      	ldr	r2, [r3, #28]
 8000c4a:	f042 0220 	orr.w	r2, r2, #32
 8000c4e:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000c50:	69da      	ldr	r2, [r3, #28]
 8000c52:	0692      	lsls	r2, r2, #26
 8000c54:	d4fc      	bmi.n	8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000c56:	2210      	movs	r2, #16
 8000c58:	609a      	str	r2, [r3, #8]
            if (blend)
 8000c5a:	2800      	cmp	r0, #0
 8000c5c:	d0bd      	beq.n	8000bda <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c5e:	4a13      	ldr	r2, [pc, #76]	; (8000cac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c60:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c66:	8862      	ldrh	r2, [r4, #2]
 8000c68:	69d9      	ldr	r1, [r3, #28]
 8000c6a:	1e54      	subs	r4, r2, #1
 8000c6c:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c70:	f022 0210 	bic.w	r2, r2, #16
 8000c74:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if (blitOp.alpha == 255)
 8000c78:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c7c:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000c80:	bf18      	it	ne
 8000c82:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c84:	61da      	str	r2, [r3, #28]
                break;
 8000c86:	e7de      	b.n	8000c46 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c88:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c8c:	61dc      	str	r4, [r3, #28]
 8000c8e:	e7b8      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c90:	f240 2201 	movw	r2, #513	; 0x201
 8000c94:	e7e4      	b.n	8000c60 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c96:	bf00      	nop
 8000c98:	4002b000 	.word	0x4002b000
 8000c9c:	00010201 	.word	0x00010201
 8000ca0:	08023070 	.word	0x08023070
 8000ca4:	0802308a 	.word	0x0802308a
 8000ca8:	08022fe5 	.word	0x08022fe5
 8000cac:	00020201 	.word	0x00020201

08000cb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000cb0:	b570      	push	{r4, r5, r6, lr}
 8000cb2:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cb4:	7f89      	ldrb	r1, [r1, #30]
 8000cb6:	f7ff ff35 	bl	8000b24 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cba:	8aa6      	ldrh	r6, [r4, #20]
 8000cbc:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cbe:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cc0:	4b15      	ldr	r3, [pc, #84]	; (8000d18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cc2:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cc4:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cc6:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cca:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000ccc:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cce:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cd0:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000cd2:	6826      	ldr	r6, [r4, #0]
 8000cd4:	68e1      	ldr	r1, [r4, #12]
 8000cd6:	2e08      	cmp	r6, #8
 8000cd8:	d10d      	bne.n	8000cf6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cda:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000cdc:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cde:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000ce0:	7f20      	ldrb	r0, [r4, #28]
 8000ce2:	4a0e      	ldr	r2, [pc, #56]	; (8000d1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000ce4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000ce8:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000cea:	4a0d      	ldr	r2, [pc, #52]	; (8000d20 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000cec:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cee:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf0:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cf2:	601a      	str	r2, [r3, #0]
    }
}
 8000cf4:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000cf6:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000cf8:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000cfa:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000cfc:	0948      	lsrs	r0, r1, #5
 8000cfe:	0a0a      	lsrs	r2, r1, #8
 8000d00:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000d04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000d08:	4302      	orrs	r2, r0
 8000d0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d0e:	430a      	orrs	r2, r1
 8000d10:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000d12:	4a04      	ldr	r2, [pc, #16]	; (8000d24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d14:	e7ed      	b.n	8000cf2 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d16:	bf00      	nop
 8000d18:	4002b000 	.word	0x4002b000
 8000d1c:	00010009 	.word	0x00010009
 8000d20:	00020201 	.word	0x00020201
 8000d24:	00030201 	.word	0x00030201

08000d28 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d28:	2001      	movs	r0, #1
 8000d2a:	4770      	bx	lr

08000d2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d2c:	2040      	movs	r0, #64	; 0x40
 8000d2e:	4770      	bx	lr

08000d30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d30:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000d34:	3008      	adds	r0, #8
 8000d36:	4770      	bx	lr

08000d38 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d38:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8000d3c:	3008      	adds	r0, #8
 8000d3e:	4770      	bx	lr

08000d40 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d40:	2001      	movs	r0, #1
 8000d42:	4770      	bx	lr

08000d44 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d44:	f242 50b8 	movw	r0, #9656	; 0x25b8
 8000d48:	4770      	bx	lr

08000d4a <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d4a:	f242 53b8 	movw	r3, #9656	; 0x25b8
 8000d4e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d52:	3008      	adds	r0, #8
 8000d54:	4770      	bx	lr

08000d56 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 53b8 	movw	r3, #9656	; 0x25b8
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d62:	2001      	movs	r0, #1
 8000d64:	4770      	bx	lr

08000d66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d66:	2010      	movs	r0, #16
 8000d68:	4770      	bx	lr

08000d6a <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d6a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d6e:	3008      	adds	r0, #8
 8000d70:	4770      	bx	lr

08000d72 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d72:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d76:	3008      	adds	r0, #8
 8000d78:	4770      	bx	lr

08000d7a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoHomeScreenScreenNoTransition();
 8000d7a:	4608      	mov	r0, r1
 8000d7c:	f001 bffa 	b.w	8002d74 <_ZN23FrontendApplicationBase32gotoHomeScreenScreenNoTransitionEv>

08000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d80:	b510      	push	{r4, lr}
 8000d82:	4b03      	ldr	r3, [pc, #12]	; (8000d90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d84:	6003      	str	r3, [r0, #0]
 8000d86:	4604      	mov	r4, r0
 8000d88:	f00b fc01 	bl	800c58e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d8c:	4620      	mov	r0, r4
 8000d8e:	bd10      	pop	{r4, pc}
 8000d90:	08023188 	.word	0x08023188

08000d94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000d94:	b510      	push	{r4, lr}
 8000d96:	4604      	mov	r4, r0
 8000d98:	f7ff fff2 	bl	8000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000d9c:	4620      	mov	r0, r4
 8000d9e:	2148      	movs	r1, #72	; 0x48
 8000da0:	f020 fc84 	bl	80216ac <_ZdlPvj>
 8000da4:	4620      	mov	r0, r4
 8000da6:	bd10      	pop	{r4, pc}

08000da8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000da8:	b510      	push	{r4, lr}
 8000daa:	4b03      	ldr	r3, [pc, #12]	; (8000db8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000dac:	6003      	str	r3, [r0, #0]
 8000dae:	4604      	mov	r4, r0
 8000db0:	f00b fbed 	bl	800c58e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000db4:	4620      	mov	r0, r4
 8000db6:	bd10      	pop	{r4, pc}
 8000db8:	08023154 	.word	0x08023154

08000dbc <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dbc:	b510      	push	{r4, lr}
 8000dbe:	4604      	mov	r4, r0
 8000dc0:	f7ff fff2 	bl	8000da8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dc4:	4620      	mov	r0, r4
 8000dc6:	f44f 5117 	mov.w	r1, #9664	; 0x25c0
 8000dca:	f020 fc6f 	bl	80216ac <_ZdlPvj>
 8000dce:	4620      	mov	r0, r4
 8000dd0:	bd10      	pop	{r4, pc}
	...

08000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000dd4:	b510      	push	{r4, lr}
 8000dd6:	4b03      	ldr	r3, [pc, #12]	; (8000de4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000dd8:	6003      	str	r3, [r0, #0]
 8000dda:	4604      	mov	r4, r0
 8000ddc:	f00b fbd7 	bl	800c58e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000de0:	4620      	mov	r0, r4
 8000de2:	bd10      	pop	{r4, pc}
 8000de4:	08023120 	.word	0x08023120

08000de8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000de8:	b510      	push	{r4, lr}
 8000dea:	4604      	mov	r4, r0
 8000dec:	f7ff fff2 	bl	8000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000df0:	4620      	mov	r0, r4
 8000df2:	2118      	movs	r1, #24
 8000df4:	f020 fc5a 	bl	80216ac <_ZdlPvj>
 8000df8:	4620      	mov	r0, r4
 8000dfa:	bd10      	pop	{r4, pc}

08000dfc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000dfc:	b510      	push	{r4, lr}
 8000dfe:	4b09      	ldr	r3, [pc, #36]	; (8000e24 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e00:	6003      	str	r3, [r0, #0]
 8000e02:	4604      	mov	r4, r0
 8000e04:	f500 5017 	add.w	r0, r0, #9664	; 0x25c0
 8000e08:	302c      	adds	r0, #44	; 0x2c
 8000e0a:	f7ff ffb9 	bl	8000d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e0e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e12:	f7ff ffc9 	bl	8000da8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14GameScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e16:	f104 0014 	add.w	r0, r4, #20
 8000e1a:	f7ff ffdb 	bl	8000dd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI22EndGameScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e1e:	4620      	mov	r0, r4
 8000e20:	bd10      	pop	{r4, pc}
 8000e22:	bf00      	nop
 8000e24:	080231bc 	.word	0x080231bc

08000e28 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e28:	b508      	push	{r3, lr}
 8000e2a:	4802      	ldr	r0, [pc, #8]	; (8000e34 <__tcf_0+0xc>)
 8000e2c:	f7ff ffe6 	bl	8000dfc <_ZN12FrontendHeapD1Ev>
 8000e30:	bd08      	pop	{r3, pc}
 8000e32:	bf00      	nop
 8000e34:	200001a4 	.word	0x200001a4

08000e38 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e38:	b510      	push	{r4, lr}
 8000e3a:	4604      	mov	r4, r0
 8000e3c:	f7ff ffde 	bl	8000dfc <_ZN12FrontendHeapD1Ev>
 8000e40:	4620      	mov	r0, r4
 8000e42:	f642 51e4 	movw	r1, #11748	; 0x2de4
 8000e46:	f020 fc31 	bl	80216ac <_ZdlPvj>
 8000e4a:	4620      	mov	r0, r4
 8000e4c:	bd10      	pop	{r4, pc}
	...

08000e50 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e50:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e54:	f001 fa24 	bl	80022a0 <_ZN14BitmapDatabase11getInstanceEv>
 8000e58:	4605      	mov	r5, r0
 8000e5a:	f001 fa25 	bl	80022a8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e5e:	2400      	movs	r4, #0
 8000e60:	4601      	mov	r1, r0
 8000e62:	4623      	mov	r3, r4
 8000e64:	4628      	mov	r0, r5
 8000e66:	4622      	mov	r2, r4
 8000e68:	9400      	str	r4, [sp, #0]
 8000e6a:	f012 ffb3 	bl	8013dd4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e6e:	4b26      	ldr	r3, [pc, #152]	; (8000f08 <touchgfx_init+0xb8>)
 8000e70:	4a26      	ldr	r2, [pc, #152]	; (8000f0c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e72:	4d27      	ldr	r5, [pc, #156]	; (8000f10 <touchgfx_init+0xc0>)
 8000e74:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e76:	4620      	mov	r0, r4
 8000e78:	f004 fbca 	bl	8005610 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e7c:	4825      	ldr	r0, [pc, #148]	; (8000f14 <touchgfx_init+0xc4>)
 8000e7e:	f012 ff11 	bl	8013ca4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e82:	782b      	ldrb	r3, [r5, #0]
 8000e84:	f3bf 8f5b 	dmb	ish
 8000e88:	07db      	lsls	r3, r3, #31
 8000e8a:	d437      	bmi.n	8000efc <touchgfx_init+0xac>
 8000e8c:	4628      	mov	r0, r5
 8000e8e:	f020 fc0f 	bl	80216b0 <__cxa_guard_acquire>
 8000e92:	b398      	cbz	r0, 8000efc <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000e94:	4c20      	ldr	r4, [pc, #128]	; (8000f18 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000e96:	4b21      	ldr	r3, [pc, #132]	; (8000f1c <touchgfx_init+0xcc>)
 8000e98:	6023      	str	r3, [r4, #0]
 8000e9a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000e9e:	f508 5717 	add.w	r7, r8, #9664	; 0x25c0
 8000ea2:	f207 669c 	addw	r6, r7, #1692	; 0x69c
 8000ea6:	f104 0014 	add.w	r0, r4, #20
 8000eaa:	6060      	str	r0, [r4, #4]
 8000eac:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eb0:	60e7      	str	r7, [r4, #12]
 8000eb2:	6126      	str	r6, [r4, #16]
 8000eb4:	f00b fb6c 	bl	800c590 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000eb8:	4b19      	ldr	r3, [pc, #100]	; (8000f20 <touchgfx_init+0xd0>)
 8000eba:	6163      	str	r3, [r4, #20]
 8000ebc:	4640      	mov	r0, r8
 8000ebe:	f00b fb67 	bl	800c590 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b18      	ldr	r3, [pc, #96]	; (8000f24 <touchgfx_init+0xd4>)
 8000ec4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ec6:	4638      	mov	r0, r7
 8000ec8:	f00b fb62 	bl	800c590 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000ed0:	4a15      	ldr	r2, [pc, #84]	; (8000f28 <touchgfx_init+0xd8>)
 8000ed2:	f8c3 25ec 	str.w	r2, [r3, #1516]	; 0x5ec
 8000ed6:	f203 6034 	addw	r0, r3, #1588	; 0x634
 8000eda:	f005 fc25 	bl	8006728 <_ZN5ModelC1Ev>
 8000ede:	4622      	mov	r2, r4
 8000ee0:	f107 0148 	add.w	r1, r7, #72	; 0x48
 8000ee4:	4630      	mov	r0, r6
 8000ee6:	f004 fce7 	bl	80058b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000eea:	4630      	mov	r0, r6
 8000eec:	f001 ff42 	bl	8002d74 <_ZN23FrontendApplicationBase32gotoHomeScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8000ef0:	480e      	ldr	r0, [pc, #56]	; (8000f2c <touchgfx_init+0xdc>)
 8000ef2:	f020 fca9 	bl	8021848 <atexit>
 8000ef6:	4628      	mov	r0, r5
 8000ef8:	f020 fbe6 	bl	80216c8 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000efc:	480c      	ldr	r0, [pc, #48]	; (8000f30 <touchgfx_init+0xe0>)
}
 8000efe:	b002      	add	sp, #8
 8000f00:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f04:	f7ff bc60 	b.w	80007c8 <_ZN11TouchGFXHAL10initializeEv>
 8000f08:	20015030 	.word	0x20015030
 8000f0c:	20003da8 	.word	0x20003da8
 8000f10:	200001a0 	.word	0x200001a0
 8000f14:	20000008 	.word	0x20000008
 8000f18:	200001a4 	.word	0x200001a4
 8000f1c:	080231bc 	.word	0x080231bc
 8000f20:	08023120 	.word	0x08023120
 8000f24:	08023154 	.word	0x08023154
 8000f28:	08023188 	.word	0x08023188
 8000f2c:	08000e29 	.word	0x08000e29
 8000f30:	20003d2c 	.word	0x20003d2c

08000f34 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000f34:	4770      	bx	lr
	...

08000f38 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f38:	4801      	ldr	r0, [pc, #4]	; (8000f40 <touchgfx_taskEntry+0x8>)
 8000f3a:	f7ff bc57 	b.w	80007ec <_ZN11TouchGFXHAL9taskEntryEv>
 8000f3e:	bf00      	nop
 8000f40:	20003d2c 	.word	0x20003d2c

08000f44 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f44:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000f46:	4e22      	ldr	r6, [pc, #136]	; (8000fd0 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000f48:	4c22      	ldr	r4, [pc, #136]	; (8000fd4 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000f4a:	4d23      	ldr	r5, [pc, #140]	; (8000fd8 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f4c:	4b23      	ldr	r3, [pc, #140]	; (8000fdc <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000f4e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f50:	4630      	mov	r0, r6
 8000f52:	f7ff fdad 	bl	8000ab0 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f56:	4628      	mov	r0, r5
 8000f58:	f017 fa08 	bl	801836c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f5c:	4b20      	ldr	r3, [pc, #128]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f5e:	4821      	ldr	r0, [pc, #132]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          lastRenderMethod(HARDWARE)
 8000f60:	60dc      	str	r4, [r3, #12]
 8000f62:	2200      	movs	r2, #0
 8000f64:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f68:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8000f6c:	491e      	ldr	r1, [pc, #120]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f6e:	861a      	strh	r2, [r3, #48]	; 0x30
 8000f70:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
 8000f74:	491d      	ldr	r1, [pc, #116]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000f76:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000f78:	491d      	ldr	r1, [pc, #116]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f7a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000f7e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	21f0      	movs	r1, #240	; 0xf0
 8000f82:	8001      	strh	r1, [r0, #0]
 8000f84:	481b      	ldr	r0, [pc, #108]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8000f86:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f88:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	481b      	ldr	r0, [pc, #108]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8000f8c:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f90:	f44f 71a0 	mov.w	r1, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f94:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f98:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000f9c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000fa4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fa8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fac:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
 8000fb4:	675a      	str	r2, [r3, #116]	; 0x74
 8000fb6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fba:	8001      	strh	r1, [r0, #0]
 8000fbc:	480f      	ldr	r0, [pc, #60]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000fbe:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000fc0:	490f      	ldr	r1, [pc, #60]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fc2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fc4:	2201      	movs	r2, #1
 8000fc6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fca:	4a0e      	ldr	r2, [pc, #56]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fcc:	601a      	str	r2, [r3, #0]
}
 8000fce:	bd70      	pop	{r4, r5, r6, pc}
 8000fd0:	20002f8c 	.word	0x20002f8c
 8000fd4:	20002f88 	.word	0x20002f88
 8000fd8:	20003dac 	.word	0x20003dac
 8000fdc:	08022c28 	.word	0x08022c28
 8000fe0:	20003d2c 	.word	0x20003d2c
 8000fe4:	20014fc8 	.word	0x20014fc8
 8000fe8:	01000001 	.word	0x01000001
 8000fec:	01010000 	.word	0x01010000
 8000ff0:	20014fd4 	.word	0x20014fd4
 8000ff4:	20014fce 	.word	0x20014fce
 8000ff8:	20014fca 	.word	0x20014fca
 8000ffc:	20014fd0 	.word	0x20014fd0
 8001000:	20014fcc 	.word	0x20014fcc
 8001004:	08022db4 	.word	0x08022db4

08001008 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001008:	4801      	ldr	r0, [pc, #4]	; (8001010 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800100a:	f7ff bd2d 	b.w	8000a68 <_ZN8STM32DMAD1Ev>
 800100e:	bf00      	nop
 8001010:	20002f8c 	.word	0x20002f8c

08001014 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001014:	2000      	movs	r0, #0
 8001016:	4770      	bx	lr

08001018 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001018:	8081      	strh	r1, [r0, #4]
    }
 800101a:	4770      	bx	lr

0800101c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800101c:	80c1      	strh	r1, [r0, #6]
    }
 800101e:	4770      	bx	lr

08001020 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001020:	8101      	strh	r1, [r0, #8]
    }
 8001022:	4770      	bx	lr

08001024 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001024:	8141      	strh	r1, [r0, #10]
    }
 8001026:	4770      	bx	lr

08001028 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001028:	4770      	bx	lr

0800102a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800102a:	4770      	bx	lr

0800102c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800102c:	4770      	bx	lr

0800102e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800102e:	4770      	bx	lr

08001030 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001030:	4770      	bx	lr

08001032 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001032:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001034:	88c4      	ldrh	r4, [r0, #6]
 8001036:	6803      	ldr	r3, [r0, #0]
 8001038:	1b12      	subs	r2, r2, r4
 800103a:	8884      	ldrh	r4, [r0, #4]
 800103c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800103e:	1b09      	subs	r1, r1, r4
 8001040:	b212      	sxth	r2, r2
    }
 8001042:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001046:	b209      	sxth	r1, r1
 8001048:	4718      	bx	r3

0800104a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800104a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800104e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001050:	f04f 33ff 	mov.w	r3, #4294967295
 8001054:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001056:	6813      	ldr	r3, [r2, #0]
 8001058:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800105a:	6010      	str	r0, [r2, #0]
    }
 800105c:	4770      	bx	lr

0800105e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800105e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001062:	b11a      	cbz	r2, 800106c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001064:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001068:	b102      	cbz	r2, 800106c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800106a:	6018      	str	r0, [r3, #0]
        }
    }
 800106c:	4770      	bx	lr
	...

08001070 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001070:	4b03      	ldr	r3, [pc, #12]	; (8001080 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001072:	2290      	movs	r2, #144	; 0x90
 8001074:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001078:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800107c:	4770      	bx	lr
 800107e:	bf00      	nop
 8001080:	e000e100 	.word	0xe000e100

08001084 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001084:	4a09      	ldr	r2, [pc, #36]	; (80010ac <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001086:	490a      	ldr	r1, [pc, #40]	; (80010b0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001088:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800108a:	480a      	ldr	r0, [pc, #40]	; (80010b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800108c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001090:	3b01      	subs	r3, #1
 8001092:	b29b      	uxth	r3, r3
 8001094:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001096:	6911      	ldr	r1, [r2, #16]
 8001098:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800109c:	3901      	subs	r1, #1
 800109e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80010a0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80010a2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80010a4:	f043 0301 	orr.w	r3, r3, #1
 80010a8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80010aa:	4770      	bx	lr
 80010ac:	40016800 	.word	0x40016800
 80010b0:	20003e32 	.word	0x20003e32
 80010b4:	20003e30 	.word	0x20003e30

080010b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80010b8:	4b01      	ldr	r3, [pc, #4]	; (80010c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80010ba:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80010be:	4770      	bx	lr
 80010c0:	40016800 	.word	0x40016800

080010c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010c4:	4b02      	ldr	r3, [pc, #8]	; (80010d0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010c6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80010c8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010cc:	625a      	str	r2, [r3, #36]	; 0x24
}
 80010ce:	4770      	bx	lr
 80010d0:	40016800 	.word	0x40016800

080010d4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80010d4:	b570      	push	{r4, r5, r6, lr}
 80010d6:	4604      	mov	r4, r0
    HAL::initialize();
 80010d8:	f00c f835 	bl	800d146 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80010dc:	6823      	ldr	r3, [r4, #0]
 80010de:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80010e0:	f00f fcd8 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 80010e4:	4601      	mov	r1, r0
 80010e6:	4620      	mov	r0, r4
 80010e8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ea:	6823      	ldr	r3, [r4, #0]
 80010ec:	4a05      	ldr	r2, [pc, #20]	; (8001104 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80010ee:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010f2:	4620      	mov	r0, r4
 80010f4:	46ac      	mov	ip, r5
 80010f6:	2300      	movs	r3, #0
}
 80010f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010fc:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001100:	4760      	bx	ip
 8001102:	bf00      	nop
 8001104:	d004b000 	.word	0xd004b000

08001108 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001108:	f00c b804 	b.w	800d114 <_ZN8touchgfx3HAL10beginFrameEv>

0800110c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800110c:	f00c b80e 	b.w	800d12c <_ZN8touchgfx3HAL8endFrameEv>

08001110 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001110:	f00b bfca 	b.w	800d0a8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001114 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001114:	f00c b92b 	b.w	800d36e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001118:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800111c:	b112      	cbz	r2, 8001124 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800111e:	6803      	ldr	r3, [r0, #0]
 8001120:	695b      	ldr	r3, [r3, #20]
 8001122:	4718      	bx	r3
    }
 8001124:	4770      	bx	lr
	...

08001128 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001128:	4b03      	ldr	r3, [pc, #12]	; (8001138 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800112a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800112e:	609a      	str	r2, [r3, #8]
 8001130:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001134:	609a      	str	r2, [r3, #8]
}
 8001136:	4770      	bx	lr
 8001138:	e000e100 	.word	0xe000e100

0800113c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800113c:	4b08      	ldr	r3, [pc, #32]	; (8001160 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800113e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001142:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001146:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800114a:	f3bf 8f6f 	isb	sy
 800114e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001152:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001156:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800115a:	f3bf 8f6f 	isb	sy
}
 800115e:	4770      	bx	lr
 8001160:	e000e100 	.word	0xe000e100

08001164 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001164:	b510      	push	{r4, lr}
        return instance;
 8001166:	4c14      	ldr	r4, [pc, #80]	; (80011b8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001168:	6823      	ldr	r3, [r4, #0]
 800116a:	b323      	cbz	r3, 80011b6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800116c:	4b13      	ldr	r3, [pc, #76]	; (80011bc <HAL_LTDC_LineEventCallback+0x58>)
 800116e:	4a14      	ldr	r2, [pc, #80]	; (80011c0 <HAL_LTDC_LineEventCallback+0x5c>)
 8001170:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001172:	8811      	ldrh	r1, [r2, #0]
 8001174:	428b      	cmp	r3, r1
 8001176:	d113      	bne.n	80011a0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001178:	4b12      	ldr	r3, [pc, #72]	; (80011c4 <HAL_LTDC_LineEventCallback+0x60>)
 800117a:	8819      	ldrh	r1, [r3, #0]
 800117c:	f007 fba4 	bl	80088c8 <HAL_LTDC_ProgramLineEvent>
 8001180:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001182:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001186:	3301      	adds	r3, #1
 8001188:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800118c:	f7ff fc1a 	bl	80009c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001190:	6820      	ldr	r0, [r4, #0]
 8001192:	f00c fd17 	bl	800dbc4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001196:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800119a:	2000      	movs	r0, #0
 800119c:	f7ff baed 	b.w	800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80011a0:	f007 fb92 	bl	80088c8 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80011a4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80011a6:	6803      	ldr	r3, [r0, #0]
 80011a8:	6a1b      	ldr	r3, [r3, #32]
 80011aa:	4798      	blx	r3
    }
 80011ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80011b0:	2000      	movs	r0, #0
 80011b2:	f7ff bae3 	b.w	800077c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80011b6:	bd10      	pop	{r4, pc}
 80011b8:	20014fd4 	.word	0x20014fd4
 80011bc:	40016800 	.word	0x40016800
 80011c0:	20003e32 	.word	0x20003e32
 80011c4:	20003e30 	.word	0x20003e30

080011c8 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80011c8:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011ca:	4b06      	ldr	r3, [pc, #24]	; (80011e4 <SPI5_Write+0x1c>)
{
 80011cc:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	4805      	ldr	r0, [pc, #20]	; (80011e8 <SPI5_Write+0x20>)
 80011d4:	2201      	movs	r2, #1
 80011d6:	f10d 0106 	add.w	r1, sp, #6
 80011da:	f008 f8d1 	bl	8009380 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80011de:	b003      	add	sp, #12
 80011e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80011e4:	20000010 	.word	0x20000010
 80011e8:	20003fdc 	.word	0x20003fdc

080011ec <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80011ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
//				uint32_t count = osMessageQueueGetCount(Queue6Handle);
//				if (count < 2) {
//					osMessageQueuePut(Queue6Handle, &command, 0, 200);
//				}
//			}
			Rx_data[0] = 'S';
 80011f0:	4c66      	ldr	r4, [pc, #408]	; (800138c <StartDefaultTask+0x1a0>)
				osMessageQueuePut(Queue6Handle, &command, 0, 200);
			}

		}
		HAL_UART_Transmit(&huart5, Rx_data, 2, 100);
		if (HAL_GPIO_ReadPin(LEFT_BUTTON_GPIO_Port, LEFT_BUTTON_Pin) == GPIO_PIN_SET) {
 80011f2:	4d67      	ldr	r5, [pc, #412]	; (8001390 <StartDefaultTask+0x1a4>)
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
			if (count < 2) {
				osMessageQueuePut(Queue1Handle, &command, 0, 200);
			}
		}
		if (HAL_GPIO_ReadPin(START_BUTTON_GPIO_Port, START_BUTTON_Pin) == GPIO_PIN_RESET) {
 80011f4:	4f67      	ldr	r7, [pc, #412]	; (8001394 <StartDefaultTask+0x1a8>)
		if(state == 0){
 80011f6:	4b68      	ldr	r3, [pc, #416]	; (8001398 <StartDefaultTask+0x1ac>)
 80011f8:	781b      	ldrb	r3, [r3, #0]
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	f040 80af 	bne.w	800135e <StartDefaultTask+0x172>
			Rx_data[0] = 'A';
 8001200:	2341      	movs	r3, #65	; 0x41
 8001202:	7023      	strb	r3, [r4, #0]
			Rx_data[1] = id;
 8001204:	4b65      	ldr	r3, [pc, #404]	; (800139c <StartDefaultTask+0x1b0>)
 8001206:	781b      	ldrb	r3, [r3, #0]
 8001208:	7063      	strb	r3, [r4, #1]
		HAL_UART_Transmit(&huart5, Rx_data, 2, 100);
 800120a:	2364      	movs	r3, #100	; 0x64
 800120c:	2202      	movs	r2, #2
 800120e:	4621      	mov	r1, r4
 8001210:	4863      	ldr	r0, [pc, #396]	; (80013a0 <StartDefaultTask+0x1b4>)
 8001212:	f008 fd9d 	bl	8009d50 <HAL_UART_Transmit>
		if (HAL_GPIO_ReadPin(LEFT_BUTTON_GPIO_Port, LEFT_BUTTON_Pin) == GPIO_PIN_SET) {
 8001216:	2104      	movs	r1, #4
 8001218:	4628      	mov	r0, r5
 800121a:	f006 fd71 	bl	8007d00 <HAL_GPIO_ReadPin>
 800121e:	2801      	cmp	r0, #1
 8001220:	d10f      	bne.n	8001242 <StartDefaultTask+0x56>
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8001222:	4e60      	ldr	r6, [pc, #384]	; (80013a4 <StartDefaultTask+0x1b8>)
			command = 'L';
 8001224:	234c      	movs	r3, #76	; 0x4c
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 8001226:	6830      	ldr	r0, [r6, #0]
			command = 'L';
 8001228:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 800122c:	f009 fa39 	bl	800a6a2 <osMessageQueueGetCount>
			if (count < 2) {
 8001230:	2801      	cmp	r0, #1
 8001232:	d806      	bhi.n	8001242 <StartDefaultTask+0x56>
				osMessageQueuePut(Queue1Handle, &command, 0, 200);
 8001234:	6830      	ldr	r0, [r6, #0]
 8001236:	23c8      	movs	r3, #200	; 0xc8
 8001238:	2200      	movs	r2, #0
 800123a:	f10d 0107 	add.w	r1, sp, #7
 800123e:	f009 f9d1 	bl	800a5e4 <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(RIGHT_BUTTON_GPIO_Port, RIGHT_BUTTON_Pin) == GPIO_PIN_SET) {
 8001242:	2108      	movs	r1, #8
 8001244:	4628      	mov	r0, r5
 8001246:	f006 fd5b 	bl	8007d00 <HAL_GPIO_ReadPin>
 800124a:	2801      	cmp	r0, #1
 800124c:	d10f      	bne.n	800126e <StartDefaultTask+0x82>
			uint32_t count = osMessageQueueGetCount(Queue2Handle);
 800124e:	4e56      	ldr	r6, [pc, #344]	; (80013a8 <StartDefaultTask+0x1bc>)
			command = 'R';
 8001250:	2352      	movs	r3, #82	; 0x52
			uint32_t count = osMessageQueueGetCount(Queue2Handle);
 8001252:	6830      	ldr	r0, [r6, #0]
			command = 'R';
 8001254:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue2Handle);
 8001258:	f009 fa23 	bl	800a6a2 <osMessageQueueGetCount>
			if (count < 2) {
 800125c:	2801      	cmp	r0, #1
 800125e:	d806      	bhi.n	800126e <StartDefaultTask+0x82>
				osMessageQueuePut(Queue2Handle, &command, 0, 200);
 8001260:	6830      	ldr	r0, [r6, #0]
 8001262:	23c8      	movs	r3, #200	; 0xc8
 8001264:	2200      	movs	r2, #0
 8001266:	f10d 0107 	add.w	r1, sp, #7
 800126a:	f009 f9bb 	bl	800a5e4 <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(UP_BUTTON_GPIO_Port, UP_BUTTON_Pin) == GPIO_PIN_SET) {
 800126e:	2110      	movs	r1, #16
 8001270:	4628      	mov	r0, r5
 8001272:	f006 fd45 	bl	8007d00 <HAL_GPIO_ReadPin>
 8001276:	2801      	cmp	r0, #1
 8001278:	d10f      	bne.n	800129a <StartDefaultTask+0xae>
			uint32_t count = osMessageQueueGetCount(Queue3Handle);
 800127a:	4e4c      	ldr	r6, [pc, #304]	; (80013ac <StartDefaultTask+0x1c0>)
			command = 'U';
 800127c:	2355      	movs	r3, #85	; 0x55
			uint32_t count = osMessageQueueGetCount(Queue3Handle);
 800127e:	6830      	ldr	r0, [r6, #0]
			command = 'U';
 8001280:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue3Handle);
 8001284:	f009 fa0d 	bl	800a6a2 <osMessageQueueGetCount>
			if (count < 2) {
 8001288:	2801      	cmp	r0, #1
 800128a:	d806      	bhi.n	800129a <StartDefaultTask+0xae>
				osMessageQueuePut(Queue3Handle, &command, 0, 200);
 800128c:	6830      	ldr	r0, [r6, #0]
 800128e:	23c8      	movs	r3, #200	; 0xc8
 8001290:	2200      	movs	r2, #0
 8001292:	f10d 0107 	add.w	r1, sp, #7
 8001296:	f009 f9a5 	bl	800a5e4 <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(DOWN_BUTTON_GPIO_Port, DOWN_BUTTON_Pin) == GPIO_PIN_SET) {
 800129a:	2120      	movs	r1, #32
 800129c:	4628      	mov	r0, r5
 800129e:	f006 fd2f 	bl	8007d00 <HAL_GPIO_ReadPin>
 80012a2:	2801      	cmp	r0, #1
 80012a4:	d10f      	bne.n	80012c6 <StartDefaultTask+0xda>
			uint32_t count = osMessageQueueGetCount(Queue4Handle);
 80012a6:	4e42      	ldr	r6, [pc, #264]	; (80013b0 <StartDefaultTask+0x1c4>)
			command = 'D';
 80012a8:	2344      	movs	r3, #68	; 0x44
			uint32_t count = osMessageQueueGetCount(Queue4Handle);
 80012aa:	6830      	ldr	r0, [r6, #0]
			command = 'D';
 80012ac:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue4Handle);
 80012b0:	f009 f9f7 	bl	800a6a2 <osMessageQueueGetCount>
			if (count < 2) {
 80012b4:	2801      	cmp	r0, #1
 80012b6:	d806      	bhi.n	80012c6 <StartDefaultTask+0xda>
				osMessageQueuePut(Queue4Handle, &command, 0, 200);
 80012b8:	6830      	ldr	r0, [r6, #0]
 80012ba:	23c8      	movs	r3, #200	; 0xc8
 80012bc:	2200      	movs	r2, #0
 80012be:	f10d 0107 	add.w	r1, sp, #7
 80012c2:	f009 f98f 	bl	800a5e4 <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(GPIOA, USER_BUTTON_Pin) == GPIO_PIN_SET) {
 80012c6:	483b      	ldr	r0, [pc, #236]	; (80013b4 <StartDefaultTask+0x1c8>)
 80012c8:	2101      	movs	r1, #1
 80012ca:	f006 fd19 	bl	8007d00 <HAL_GPIO_ReadPin>
 80012ce:	2801      	cmp	r0, #1
 80012d0:	d10f      	bne.n	80012f2 <StartDefaultTask+0x106>
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80012d2:	4e34      	ldr	r6, [pc, #208]	; (80013a4 <StartDefaultTask+0x1b8>)
			command = 'S';
 80012d4:	2353      	movs	r3, #83	; 0x53
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80012d6:	6830      	ldr	r0, [r6, #0]
			command = 'S';
 80012d8:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue1Handle);
 80012dc:	f009 f9e1 	bl	800a6a2 <osMessageQueueGetCount>
			if (count < 2) {
 80012e0:	2801      	cmp	r0, #1
 80012e2:	d806      	bhi.n	80012f2 <StartDefaultTask+0x106>
				osMessageQueuePut(Queue1Handle, &command, 0, 200);
 80012e4:	6830      	ldr	r0, [r6, #0]
 80012e6:	23c8      	movs	r3, #200	; 0xc8
 80012e8:	2200      	movs	r2, #0
 80012ea:	f10d 0107 	add.w	r1, sp, #7
 80012ee:	f009 f979 	bl	800a5e4 <osMessageQueuePut>
		if (HAL_GPIO_ReadPin(START_BUTTON_GPIO_Port, START_BUTTON_Pin) == GPIO_PIN_RESET) {
 80012f2:	2104      	movs	r1, #4
 80012f4:	4638      	mov	r0, r7
 80012f6:	f006 fd03 	bl	8007d00 <HAL_GPIO_ReadPin>
 80012fa:	4606      	mov	r6, r0
 80012fc:	b990      	cbnz	r0, 8001324 <StartDefaultTask+0x138>
			command = 'A';
			uint32_t count = osMessageQueueGetCount(Queue5Handle);
 80012fe:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 80013bc <StartDefaultTask+0x1d0>
			command = 'A';
 8001302:	2341      	movs	r3, #65	; 0x41
			uint32_t count = osMessageQueueGetCount(Queue5Handle);
 8001304:	f8d8 0000 	ldr.w	r0, [r8]
			command = 'A';
 8001308:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue5Handle);
 800130c:	f009 f9c9 	bl	800a6a2 <osMessageQueueGetCount>
			if (count < 2) {
 8001310:	2801      	cmp	r0, #1
 8001312:	d807      	bhi.n	8001324 <StartDefaultTask+0x138>
				osMessageQueuePut(Queue5Handle, &command, 0, 200);
 8001314:	f8d8 0000 	ldr.w	r0, [r8]
 8001318:	23c8      	movs	r3, #200	; 0xc8
 800131a:	4632      	mov	r2, r6
 800131c:	f10d 0107 	add.w	r1, sp, #7
 8001320:	f009 f960 	bl	800a5e4 <osMessageQueuePut>
			}
		}
		if (HAL_GPIO_ReadPin(RESET_BUTTON_GPIO_Port, RESET_BUTTON_Pin) == GPIO_PIN_RESET){
 8001324:	2108      	movs	r1, #8
 8001326:	4638      	mov	r0, r7
 8001328:	f006 fcea 	bl	8007d00 <HAL_GPIO_ReadPin>
 800132c:	4606      	mov	r6, r0
 800132e:	b990      	cbnz	r0, 8001356 <StartDefaultTask+0x16a>
			command = 'B';
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 8001330:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80013b8 <StartDefaultTask+0x1cc>
			command = 'B';
 8001334:	2342      	movs	r3, #66	; 0x42
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 8001336:	f8d8 0000 	ldr.w	r0, [r8]
			command = 'B';
 800133a:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 800133e:	f009 f9b0 	bl	800a6a2 <osMessageQueueGetCount>
			if (count < 2) {
 8001342:	2801      	cmp	r0, #1
 8001344:	d807      	bhi.n	8001356 <StartDefaultTask+0x16a>
				osMessageQueuePut(Queue6Handle, &command, 0, 200);
 8001346:	f8d8 0000 	ldr.w	r0, [r8]
 800134a:	23c8      	movs	r3, #200	; 0xc8
 800134c:	4632      	mov	r2, r6
 800134e:	f10d 0107 	add.w	r1, sp, #7
 8001352:	f009 f947 	bl	800a5e4 <osMessageQueuePut>
			}
		}
    osDelay(100);
 8001356:	2064      	movs	r0, #100	; 0x64
 8001358:	f009 f857 	bl	800a40a <osDelay>
	{
 800135c:	e74b      	b.n	80011f6 <StartDefaultTask+0xa>
		} else if(state == 1){
 800135e:	2b01      	cmp	r3, #1
 8001360:	f47f af53 	bne.w	800120a <StartDefaultTask+0x1e>
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 8001364:	4e14      	ldr	r6, [pc, #80]	; (80013b8 <StartDefaultTask+0x1cc>)
			Rx_data[0] = 'S';
 8001366:	2353      	movs	r3, #83	; 0x53
 8001368:	7023      	strb	r3, [r4, #0]
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 800136a:	6830      	ldr	r0, [r6, #0]
			command = '1';
 800136c:	2331      	movs	r3, #49	; 0x31
 800136e:	f88d 3007 	strb.w	r3, [sp, #7]
			uint32_t count = osMessageQueueGetCount(Queue6Handle);
 8001372:	f009 f996 	bl	800a6a2 <osMessageQueueGetCount>
			if (count < 2) {
 8001376:	2801      	cmp	r0, #1
 8001378:	f63f af47 	bhi.w	800120a <StartDefaultTask+0x1e>
				osMessageQueuePut(Queue6Handle, &command, 0, 200);
 800137c:	6830      	ldr	r0, [r6, #0]
 800137e:	23c8      	movs	r3, #200	; 0xc8
 8001380:	2200      	movs	r2, #0
 8001382:	f10d 0107 	add.w	r1, sp, #7
 8001386:	f009 f92d 	bl	800a5e4 <osMessageQueuePut>
 800138a:	e73e      	b.n	800120a <StartDefaultTask+0x1e>
 800138c:	20003e54 	.word	0x20003e54
 8001390:	40021000 	.word	0x40021000
 8001394:	40021800 	.word	0x40021800
 8001398:	20004105 	.word	0x20004105
 800139c:	20004104 	.word	0x20004104
 80013a0:	200040c0 	.word	0x200040c0
 80013a4:	20003e3c 	.word	0x20003e3c
 80013a8:	20003e40 	.word	0x20003e40
 80013ac:	20003e44 	.word	0x20003e44
 80013b0:	20003e48 	.word	0x20003e48
 80013b4:	40020000 	.word	0x40020000
 80013b8:	20003e50 	.word	0x20003e50
 80013bc:	20003e4c 	.word	0x20003e4c

080013c0 <HAL_UART_RxCpltCallback>:
	if(huart->Instance == huart5.Instance){
 80013c0:	4b08      	ldr	r3, [pc, #32]	; (80013e4 <HAL_UART_RxCpltCallback+0x24>)
 80013c2:	6802      	ldr	r2, [r0, #0]
 80013c4:	681b      	ldr	r3, [r3, #0]
 80013c6:	429a      	cmp	r2, r3
 80013c8:	d10b      	bne.n	80013e2 <HAL_UART_RxCpltCallback+0x22>
		if (Rx_data[0] == 'A') {
 80013ca:	4b07      	ldr	r3, [pc, #28]	; (80013e8 <HAL_UART_RxCpltCallback+0x28>)
		HAL_UART_Receive_IT(&huart5, Rx_data, 4);
 80013cc:	4906      	ldr	r1, [pc, #24]	; (80013e8 <HAL_UART_RxCpltCallback+0x28>)
		if (Rx_data[0] == 'A') {
 80013ce:	781b      	ldrb	r3, [r3, #0]
		HAL_UART_Receive_IT(&huart5, Rx_data, 4);
 80013d0:	4804      	ldr	r0, [pc, #16]	; (80013e4 <HAL_UART_RxCpltCallback+0x24>)
		if (Rx_data[0] == 'A') {
 80013d2:	2b41      	cmp	r3, #65	; 0x41
			state = 1;
 80013d4:	bf02      	ittt	eq
 80013d6:	4b05      	ldreq	r3, [pc, #20]	; (80013ec <HAL_UART_RxCpltCallback+0x2c>)
 80013d8:	2201      	moveq	r2, #1
 80013da:	701a      	strbeq	r2, [r3, #0]
		HAL_UART_Receive_IT(&huart5, Rx_data, 4);
 80013dc:	2204      	movs	r2, #4
 80013de:	f008 bed8 	b.w	800a192 <HAL_UART_Receive_IT>
}
 80013e2:	4770      	bx	lr
 80013e4:	200040c0 	.word	0x200040c0
 80013e8:	20003e54 	.word	0x20003e54
 80013ec:	20004105 	.word	0x20004105

080013f0 <SystemClock_Config>:
{
 80013f0:	b530      	push	{r4, r5, lr}
 80013f2:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013f4:	2210      	movs	r2, #16
 80013f6:	2100      	movs	r1, #0
 80013f8:	a80a      	add	r0, sp, #40	; 0x28
 80013fa:	f020 faa3 	bl	8021944 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013fe:	2214      	movs	r2, #20
 8001400:	2100      	movs	r1, #0
 8001402:	a803      	add	r0, sp, #12
 8001404:	f020 fa9e 	bl	8021944 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001408:	2400      	movs	r4, #0
 800140a:	4b1d      	ldr	r3, [pc, #116]	; (8001480 <SystemClock_Config+0x90>)
 800140c:	9401      	str	r4, [sp, #4]
 800140e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001410:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001414:	641a      	str	r2, [r3, #64]	; 0x40
 8001416:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001418:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800141c:	9301      	str	r3, [sp, #4]
 800141e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001420:	4b18      	ldr	r3, [pc, #96]	; (8001484 <SystemClock_Config+0x94>)
 8001422:	9402      	str	r4, [sp, #8]
 8001424:	681a      	ldr	r2, [r3, #0]
 8001426:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800142a:	601a      	str	r2, [r3, #0]
 800142c:	681b      	ldr	r3, [r3, #0]
 800142e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001432:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001434:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001436:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001438:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800143c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001440:	2502      	movs	r5, #2
 8001442:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001446:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800144a:	2108      	movs	r1, #8
 800144c:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8001450:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001454:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001456:	2304      	movs	r3, #4
 8001458:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800145a:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800145c:	f007 fa52 	bl	8008904 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001460:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001462:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001466:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 800146a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800146e:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001472:	2105      	movs	r1, #5
 8001474:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001476:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001478:	f007 fc22 	bl	8008cc0 <HAL_RCC_ClockConfig>
}
 800147c:	b015      	add	sp, #84	; 0x54
 800147e:	bd30      	pop	{r4, r5, pc}
 8001480:	40023800 	.word	0x40023800
 8001484:	40007000 	.word	0x40007000

08001488 <main>:
{
 8001488:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 800148c:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 800148e:	f006 f95d 	bl	800774c <HAL_Init>
  srand(time(0));
 8001492:	2000      	movs	r0, #0
 8001494:	f020 ff68 	bl	8022368 <time>
 8001498:	f020 fe2a 	bl	80220f0 <srand>
  SystemClock_Config();
 800149c:	f7ff ffa8 	bl	80013f0 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a0:	2214      	movs	r2, #20
 80014a2:	2100      	movs	r1, #0
 80014a4:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014a6:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a8:	f020 fa4c 	bl	8021944 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ac:	4bc4      	ldr	r3, [pc, #784]	; (80017c0 <main+0x338>)
 80014ae:	9400      	str	r4, [sp, #0]
 80014b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80014b2:	48c4      	ldr	r0, [pc, #784]	; (80017c4 <main+0x33c>)
  hi2c3.Instance = I2C3;
 80014b4:	4ec4      	ldr	r6, [pc, #784]	; (80017c8 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014b6:	f042 0210 	orr.w	r2, r2, #16
 80014ba:	631a      	str	r2, [r3, #48]	; 0x30
 80014bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014be:	f002 0210 	and.w	r2, r2, #16
 80014c2:	9200      	str	r2, [sp, #0]
 80014c4:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80014c6:	9401      	str	r4, [sp, #4]
 80014c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ca:	f042 0220 	orr.w	r2, r2, #32
 80014ce:	631a      	str	r2, [r3, #48]	; 0x30
 80014d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d2:	f002 0220 	and.w	r2, r2, #32
 80014d6:	9201      	str	r2, [sp, #4]
 80014d8:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014da:	9402      	str	r4, [sp, #8]
 80014dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014de:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80014e2:	631a      	str	r2, [r3, #48]	; 0x30
 80014e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e6:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80014ea:	9202      	str	r2, [sp, #8]
 80014ec:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014ee:	9403      	str	r4, [sp, #12]
 80014f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f2:	f042 0204 	orr.w	r2, r2, #4
 80014f6:	631a      	str	r2, [r3, #48]	; 0x30
 80014f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fa:	f002 0204 	and.w	r2, r2, #4
 80014fe:	9203      	str	r2, [sp, #12]
 8001500:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001502:	9404      	str	r4, [sp, #16]
 8001504:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001506:	f042 0201 	orr.w	r2, r2, #1
 800150a:	631a      	str	r2, [r3, #48]	; 0x30
 800150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150e:	f002 0201 	and.w	r2, r2, #1
 8001512:	9204      	str	r2, [sp, #16]
 8001514:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001516:	9405      	str	r4, [sp, #20]
 8001518:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151a:	f042 0202 	orr.w	r2, r2, #2
 800151e:	631a      	str	r2, [r3, #48]	; 0x30
 8001520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001522:	f002 0202 	and.w	r2, r2, #2
 8001526:	9205      	str	r2, [sp, #20]
 8001528:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800152a:	9406      	str	r4, [sp, #24]
 800152c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001532:	631a      	str	r2, [r3, #48]	; 0x30
 8001534:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001536:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800153a:	9206      	str	r2, [sp, #24]
 800153c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153e:	9407      	str	r4, [sp, #28]
 8001540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001542:	f042 0208 	orr.w	r2, r2, #8
 8001546:	631a      	str	r2, [r3, #48]	; 0x30
 8001548:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800154a:	f003 0308 	and.w	r3, r3, #8
 800154e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001550:	4622      	mov	r2, r4
 8001552:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001554:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001556:	f006 fbd9 	bl	8007d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800155a:	4622      	mov	r2, r4
 800155c:	489b      	ldr	r0, [pc, #620]	; (80017cc <main+0x344>)
 800155e:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001562:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001564:	f006 fbd2 	bl	8007d0c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = LEFT_BUTTON_Pin|RIGHT_BUTTON_Pin|UP_BUTTON_Pin|DOWN_BUTTON_Pin;
 8001568:	233c      	movs	r3, #60	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800156a:	4899      	ldr	r0, [pc, #612]	; (80017d0 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800156c:	950f      	str	r5, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800156e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001570:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001572:	f04f 0804 	mov.w	r8, #4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001576:	e9cd 340d 	strd	r3, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800157a:	f006 fadb 	bl	8007b34 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800157e:	4891      	ldr	r0, [pc, #580]	; (80017c4 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001580:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001582:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001584:	e9cd 850d 	strd	r8, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001588:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800158a:	f006 fad3 	bl	8007b34 <HAL_GPIO_Init>
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 800158e:	4891      	ldr	r0, [pc, #580]	; (80017d4 <main+0x34c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001590:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001592:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001594:	e9cd 540d 	strd	r5, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001598:	f006 facc 	bl	8007b34 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800159c:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015a0:	488a      	ldr	r0, [pc, #552]	; (80017cc <main+0x344>)
 80015a2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015a4:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Pin = START_BUTTON_Pin|RESET_BUTTON_Pin;
 80015a8:	f04f 090c 	mov.w	r9, #12
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015ac:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015b0:	f006 fac0 	bl	8007b34 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015b4:	a90d      	add	r1, sp, #52	; 0x34
 80015b6:	4888      	ldr	r0, [pc, #544]	; (80017d8 <main+0x350>)
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80015b8:	950f      	str	r5, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80015ba:	e9cd 940d 	strd	r9, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015be:	f006 fab9 	bl	8007b34 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80015c2:	4886      	ldr	r0, [pc, #536]	; (80017dc <main+0x354>)
 80015c4:	4b86      	ldr	r3, [pc, #536]	; (80017e0 <main+0x358>)
 80015c6:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80015c8:	f006 f952 	bl	8007870 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80015cc:	4a85      	ldr	r2, [pc, #532]	; (80017e4 <main+0x35c>)
 80015ce:	4b86      	ldr	r3, [pc, #536]	; (80017e8 <main+0x360>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80015d0:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80015d2:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015d6:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015d8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80015dc:	e9c6 3404 	strd	r3, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80015e0:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80015e4:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015e8:	f006 fd72 	bl	80080d0 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80015ec:	2110      	movs	r1, #16
 80015ee:	4630      	mov	r0, r6
 80015f0:	f006 ffae 	bl	8008550 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80015f4:	4621      	mov	r1, r4
 80015f6:	4630      	mov	r0, r6
 80015f8:	f006 ffc9 	bl	800858e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80015fc:	487b      	ldr	r0, [pc, #492]	; (80017ec <main+0x364>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015fe:	497c      	ldr	r1, [pc, #496]	; (80017f0 <main+0x368>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001600:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001602:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001606:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800160a:	f44f 7600 	mov.w	r6, #512	; 0x200
 800160e:	2318      	movs	r3, #24
 8001610:	e9c0 6306 	strd	r6, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001614:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001616:	4e77      	ldr	r6, [pc, #476]	; (80017f4 <main+0x36c>)
  hspi5.Init.CRCPolynomial = 10;
 8001618:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800161a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800161e:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001622:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001626:	f007 fe4f 	bl	80092c8 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800162a:	4b73      	ldr	r3, [pc, #460]	; (80017f8 <main+0x370>)
  SdramTiming.LoadToActiveDelay = 2;
 800162c:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800162e:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001632:	e9c6 3500 	strd	r3, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001636:	2340      	movs	r3, #64	; 0x40
 8001638:	e9c6 c304 	strd	ip, r3, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800163c:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001640:	e9c6 3406 	strd	r3, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001644:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001648:	e9c6 3408 	strd	r3, r4, [r6, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800164c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001650:	f04f 0b03 	mov.w	fp, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001654:	62b3      	str	r3, [r6, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001656:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001658:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800165a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800165c:	f04f 0a08 	mov.w	sl, #8
  SdramTiming.SelfRefreshTime = 4;
 8001660:	e9cd 380e 	strd	r3, r8, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001664:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RPDelay = 2;
 8001666:	e9cd b711 	strd	fp, r7, [sp, #68]	; 0x44
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800166a:	e9c6 4802 	strd	r4, r8, [r6, #8]
  SdramTiming.RCDDelay = 2;
 800166e:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001670:	f007 fd2a 	bl	80090c8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001674:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001678:	a909      	add	r1, sp, #36	; 0x24
 800167a:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 800167c:	e9cd a50a 	strd	sl, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001680:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001682:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001684:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001686:	f007 fd3f 	bl	8009108 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800168a:	4628      	mov	r0, r5
 800168c:	f006 f88a 	bl	80077a4 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001690:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001694:	a909      	add	r1, sp, #36	; 0x24
 8001696:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001698:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800169c:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a0:	f007 fd32 	bl	8009108 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016a8:	a909      	add	r1, sp, #36	; 0x24
 80016aa:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016ac:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016b0:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016b4:	f007 fd28 	bl	8009108 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80016b8:	f44f 730c 	mov.w	r3, #560	; 0x230
 80016bc:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80016be:	9b08      	ldr	r3, [sp, #32]
 80016c0:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016c2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016c6:	a909      	add	r1, sp, #36	; 0x24
 80016c8:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016ca:	e9cd 8a09 	strd	r8, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80016ce:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d0:	f007 fd1a 	bl	8009108 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80016d4:	f240 516a 	movw	r1, #1386	; 0x56a
 80016d8:	4630      	mov	r0, r6
 80016da:	f007 fd33 	bl	8009144 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016de:	2234      	movs	r2, #52	; 0x34
  hltdc.Instance = LTDC;
 80016e0:	4e46      	ldr	r6, [pc, #280]	; (80017fc <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016e2:	4621      	mov	r1, r4
 80016e4:	eb0d 0002 	add.w	r0, sp, r2
 80016e8:	f020 f92c 	bl	8021944 <memset>
  hltdc.Instance = LTDC;
 80016ec:	4b44      	ldr	r3, [pc, #272]	; (8001800 <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80016ee:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.AccumulatedHBP = 29;
 80016f0:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedActiveH = 323;
 80016f2:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80016f6:	e9c6 2b07 	strd	r2, fp, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80016fa:	f240 1243 	movw	r2, #323	; 0x143
 80016fe:	e9c6 e209 	strd	lr, r2, [r6, #36]	; 0x24
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001702:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.TotalHeigh = 327;
 8001706:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.HorizontalSync = 9;
 800170a:	2309      	movs	r3, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800170c:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 800170e:	f240 1b17 	movw	fp, #279	; 0x117
  hltdc.Init.VerticalSync = 1;
 8001712:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.TotalHeigh = 327;
 8001716:	e9c6 b20b 	strd	fp, r2, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800171a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800171e:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001720:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001724:	f006 ffd8 	bl	80086d8 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001728:	20ff      	movs	r0, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800172a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowX1 = 240;
 800172e:	21f0      	movs	r1, #240	; 0xf0
  pLayerCfg.WindowY1 = 320;
 8001730:	f44f 72a0 	mov.w	r2, #320	; 0x140
  pLayerCfg.Alpha0 = 0;
 8001734:	e9cd 0412 	strd	r0, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001738:	2005      	movs	r0, #5
 800173a:	e9cd 3014 	strd	r3, r0, [sp, #80]	; 0x50
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800173e:	e9cd 2710 	strd	r2, r7, [sp, #64]	; 0x40
  pLayerCfg.WindowY0 = 0;
 8001742:	e9cd 140e 	strd	r1, r4, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 8001746:	e9cd 4116 	strd	r4, r1, [sp, #88]	; 0x58
  pLayerCfg.ImageHeight = 320;
 800174a:	9218      	str	r2, [sp, #96]	; 0x60
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800174c:	a90d      	add	r1, sp, #52	; 0x34
 800174e:	4622      	mov	r2, r4
 8001750:	4630      	mov	r0, r6
  pLayerCfg.WindowX0 = 0;
 8001752:	940d      	str	r4, [sp, #52]	; 0x34
  LcdDrv = &ili9341_drv;
 8001754:	4e2b      	ldr	r6, [pc, #172]	; (8001804 <main+0x37c>)
  pLayerCfg.Backcolor.Blue = 0;
 8001756:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 800175a:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800175e:	f007 f886 	bl	800886e <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001762:	4a29      	ldr	r2, [pc, #164]	; (8001808 <main+0x380>)
 8001764:	6032      	str	r2, [r6, #0]
  LcdDrv->Init();
 8001766:	6812      	ldr	r2, [r2, #0]
 8001768:	4790      	blx	r2
  LcdDrv->DisplayOff();
 800176a:	6832      	ldr	r2, [r6, #0]
  hdma2d.Instance = DMA2D;
 800176c:	4e27      	ldr	r6, [pc, #156]	; (800180c <main+0x384>)
  LcdDrv->DisplayOff();
 800176e:	68d2      	ldr	r2, [r2, #12]
 8001770:	4790      	blx	r2
  hdma2d.Instance = DMA2D;
 8001772:	4a27      	ldr	r2, [pc, #156]	; (8001810 <main+0x388>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001774:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001778:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800177c:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800177e:	e9c6 2400 	strd	r2, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001782:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001786:	f006 f8d9 	bl	800793c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800178a:	4629      	mov	r1, r5
 800178c:	4630      	mov	r0, r6
 800178e:	f006 f98d 	bl	8007aac <HAL_DMA2D_ConfigLayer>
  huart1.Instance = USART1;
 8001792:	4820      	ldr	r0, [pc, #128]	; (8001814 <main+0x38c>)
  huart1.Init.BaudRate = 115200;
 8001794:	4a20      	ldr	r2, [pc, #128]	; (8001818 <main+0x390>)
  huart5.Instance = UART5;
 8001796:	4e21      	ldr	r6, [pc, #132]	; (800181c <main+0x394>)
  huart1.Init.BaudRate = 115200;
 8001798:	f44f 37e1 	mov.w	r7, #115200	; 0x1c200
 800179c:	e9c0 2700 	strd	r2, r7, [r0]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80017a0:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80017a4:	e9c0 4904 	strd	r4, r9, [r0, #16]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80017a8:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80017ac:	f008 faa2 	bl	8009cf4 <HAL_UART_Init>
  huart5.Instance = UART5;
 80017b0:	4a1b      	ldr	r2, [pc, #108]	; (8001820 <main+0x398>)
  if (HAL_UART_Init(&huart5) != HAL_OK)
 80017b2:	4630      	mov	r0, r6
  huart5.Init.BaudRate = 115200;
 80017b4:	e9c6 2700 	strd	r2, r7, [r6]
  huart5.Init.StopBits = UART_STOPBITS_1;
 80017b8:	e9c6 4402 	strd	r4, r4, [r6, #8]
 80017bc:	e032      	b.n	8001824 <main+0x39c>
 80017be:	bf00      	nop
 80017c0:	40023800 	.word	0x40023800
 80017c4:	40020800 	.word	0x40020800
 80017c8:	20003eac 	.word	0x20003eac
 80017cc:	40020c00 	.word	0x40020c00
 80017d0:	40021000 	.word	0x40021000
 80017d4:	40020000 	.word	0x40020000
 80017d8:	40021800 	.word	0x40021800
 80017dc:	20003e64 	.word	0x20003e64
 80017e0:	40023000 	.word	0x40023000
 80017e4:	40005c00 	.word	0x40005c00
 80017e8:	000186a0 	.word	0x000186a0
 80017ec:	20003fdc 	.word	0x20003fdc
 80017f0:	40015000 	.word	0x40015000
 80017f4:	20003fa8 	.word	0x20003fa8
 80017f8:	a0000140 	.word	0xa0000140
 80017fc:	20003f00 	.word	0x20003f00
 8001800:	40016800 	.word	0x40016800
 8001804:	20003e38 	.word	0x20003e38
 8001808:	20000014 	.word	0x20000014
 800180c:	20003e6c 	.word	0x20003e6c
 8001810:	4002b000 	.word	0x4002b000
 8001814:	2000407c 	.word	0x2000407c
 8001818:	40011000 	.word	0x40011000
 800181c:	200040c0 	.word	0x200040c0
 8001820:	40005000 	.word	0x40005000
  htim7.Instance = TIM7;
 8001824:	4f36      	ldr	r7, [pc, #216]	; (8001900 <main+0x478>)
  huart5.Init.Mode = UART_MODE_TX_RX;
 8001826:	e9c6 4904 	strd	r4, r9, [r6, #16]
  huart5.Init.OverSampling = UART_OVERSAMPLING_16;
 800182a:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_UART_Init(&huart5) != HAL_OK)
 800182e:	f008 fa61 	bl	8009cf4 <HAL_UART_Init>
  htim7.Init.Prescaler = 89;
 8001832:	4934      	ldr	r1, [pc, #208]	; (8001904 <main+0x47c>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001834:	60bc      	str	r4, [r7, #8]
  htim7.Init.Prescaler = 89;
 8001836:	2259      	movs	r2, #89	; 0x59
 8001838:	e9c7 1200 	strd	r1, r2, [r7]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800183c:	4638      	mov	r0, r7
  htim7.Init.Period = 49999;
 800183e:	f24c 324f 	movw	r2, #49999	; 0xc34f
 8001842:	60fa      	str	r2, [r7, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001844:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001848:	61bc      	str	r4, [r7, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800184a:	f008 f925 	bl	8009a98 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800184e:	a90d      	add	r1, sp, #52	; 0x34
 8001850:	4638      	mov	r0, r7
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001852:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001856:	f008 f94b 	bl	8009af0 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 800185a:	f7fe fecd 	bl	80005f8 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800185e:	f7fe feca 	bl	80005f6 <MX_TouchGFX_PreOSInit>
  Rx_data[0] = 'W';
 8001862:	4929      	ldr	r1, [pc, #164]	; (8001908 <main+0x480>)
 8001864:	2257      	movs	r2, #87	; 0x57
 8001866:	700a      	strb	r2, [r1, #0]
  HAL_UART_Receive_IT(&huart5, Rx_data, 4);
 8001868:	4630      	mov	r0, r6
 800186a:	4642      	mov	r2, r8
 800186c:	f008 fc91 	bl	800a192 <HAL_UART_Receive_IT>
  id = (rand() % 9);
 8001870:	f020 fc6c 	bl	802214c <rand>
 8001874:	4a25      	ldr	r2, [pc, #148]	; (800190c <main+0x484>)
 8001876:	2309      	movs	r3, #9
 8001878:	fb90 f3f3 	sdiv	r3, r0, r3
 800187c:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 8001880:	1ac3      	subs	r3, r0, r3
 8001882:	7013      	strb	r3, [r2, #0]
  osKernelInitialize();
 8001884:	f008 fd4c 	bl	800a320 <osKernelInitialize>
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_attributes);
 8001888:	4a21      	ldr	r2, [pc, #132]	; (8001910 <main+0x488>)
 800188a:	4629      	mov	r1, r5
 800188c:	4650      	mov	r0, sl
 800188e:	f008 fe6e 	bl	800a56e <osMessageQueueNew>
 8001892:	4b20      	ldr	r3, [pc, #128]	; (8001914 <main+0x48c>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 8001894:	4a20      	ldr	r2, [pc, #128]	; (8001918 <main+0x490>)
  Queue1Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue1_attributes);
 8001896:	6018      	str	r0, [r3, #0]
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 8001898:	4629      	mov	r1, r5
 800189a:	4650      	mov	r0, sl
 800189c:	f008 fe67 	bl	800a56e <osMessageQueueNew>
 80018a0:	4b1e      	ldr	r3, [pc, #120]	; (800191c <main+0x494>)
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 80018a2:	4a1f      	ldr	r2, [pc, #124]	; (8001920 <main+0x498>)
  Queue2Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue2_attributes);
 80018a4:	6018      	str	r0, [r3, #0]
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 80018a6:	4629      	mov	r1, r5
 80018a8:	4650      	mov	r0, sl
 80018aa:	f008 fe60 	bl	800a56e <osMessageQueueNew>
 80018ae:	4b1d      	ldr	r3, [pc, #116]	; (8001924 <main+0x49c>)
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 80018b0:	4a1d      	ldr	r2, [pc, #116]	; (8001928 <main+0x4a0>)
  Queue3Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue3_attributes);
 80018b2:	6018      	str	r0, [r3, #0]
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 80018b4:	4629      	mov	r1, r5
 80018b6:	4650      	mov	r0, sl
 80018b8:	f008 fe59 	bl	800a56e <osMessageQueueNew>
 80018bc:	4b1b      	ldr	r3, [pc, #108]	; (800192c <main+0x4a4>)
  Queue5Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue5_attributes);
 80018be:	4a1c      	ldr	r2, [pc, #112]	; (8001930 <main+0x4a8>)
  Queue4Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue4_attributes);
 80018c0:	6018      	str	r0, [r3, #0]
  Queue5Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue5_attributes);
 80018c2:	4629      	mov	r1, r5
 80018c4:	4650      	mov	r0, sl
 80018c6:	f008 fe52 	bl	800a56e <osMessageQueueNew>
 80018ca:	4b1a      	ldr	r3, [pc, #104]	; (8001934 <main+0x4ac>)
  Queue6Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue6_attributes);
 80018cc:	4a1a      	ldr	r2, [pc, #104]	; (8001938 <main+0x4b0>)
  Queue5Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue5_attributes);
 80018ce:	6018      	str	r0, [r3, #0]
  Queue6Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue6_attributes);
 80018d0:	4629      	mov	r1, r5
 80018d2:	4650      	mov	r0, sl
 80018d4:	f008 fe4b 	bl	800a56e <osMessageQueueNew>
 80018d8:	4b18      	ldr	r3, [pc, #96]	; (800193c <main+0x4b4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018da:	4a19      	ldr	r2, [pc, #100]	; (8001940 <main+0x4b8>)
  Queue6Handle = osMessageQueueNew(8, sizeof(uint8_t), &Queue6_attributes);
 80018dc:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018de:	4621      	mov	r1, r4
 80018e0:	4818      	ldr	r0, [pc, #96]	; (8001944 <main+0x4bc>)
 80018e2:	f008 fd49 	bl	800a378 <osThreadNew>
 80018e6:	4b18      	ldr	r3, [pc, #96]	; (8001948 <main+0x4c0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018e8:	4a18      	ldr	r2, [pc, #96]	; (800194c <main+0x4c4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80018ea:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018ec:	4621      	mov	r1, r4
 80018ee:	4818      	ldr	r0, [pc, #96]	; (8001950 <main+0x4c8>)
 80018f0:	f008 fd42 	bl	800a378 <osThreadNew>
 80018f4:	4b17      	ldr	r3, [pc, #92]	; (8001954 <main+0x4cc>)
 80018f6:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80018f8:	f008 fd24 	bl	800a344 <osKernelStart>
  while (1)
 80018fc:	e7fe      	b.n	80018fc <main+0x474>
 80018fe:	bf00      	nop
 8001900:	20004034 	.word	0x20004034
 8001904:	40001400 	.word	0x40001400
 8001908:	20003e54 	.word	0x20003e54
 800190c:	20004104 	.word	0x20004104
 8001910:	0802322c 	.word	0x0802322c
 8001914:	20003e3c 	.word	0x20003e3c
 8001918:	08023244 	.word	0x08023244
 800191c:	20003e40 	.word	0x20003e40
 8001920:	0802325c 	.word	0x0802325c
 8001924:	20003e44 	.word	0x20003e44
 8001928:	08023274 	.word	0x08023274
 800192c:	20003e48 	.word	0x20003e48
 8001930:	0802328c 	.word	0x0802328c
 8001934:	20003e4c 	.word	0x20003e4c
 8001938:	080232a4 	.word	0x080232a4
 800193c:	20003e50 	.word	0x20003e50
 8001940:	080232bc 	.word	0x080232bc
 8001944:	080011ed 	.word	0x080011ed
 8001948:	20003e60 	.word	0x20003e60
 800194c:	08023208 	.word	0x08023208
 8001950:	08000607 	.word	0x08000607
 8001954:	20003e34 	.word	0x20003e34

08001958 <IOE_Init>:
 8001958:	4770      	bx	lr

0800195a <IOE_ITConfig>:
 800195a:	4770      	bx	lr

0800195c <IOE_Write>:
{
 800195c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800195e:	4b09      	ldr	r3, [pc, #36]	; (8001984 <IOE_Write+0x28>)
 8001960:	f88d 2017 	strb.w	r2, [sp, #23]
 8001964:	681b      	ldr	r3, [r3, #0]
 8001966:	9302      	str	r3, [sp, #8]
 8001968:	f10d 0217 	add.w	r2, sp, #23
 800196c:	2301      	movs	r3, #1
 800196e:	9200      	str	r2, [sp, #0]
 8001970:	9301      	str	r3, [sp, #4]
 8001972:	460a      	mov	r2, r1
 8001974:	4601      	mov	r1, r0
 8001976:	4804      	ldr	r0, [pc, #16]	; (8001988 <IOE_Write+0x2c>)
 8001978:	f006 fc52 	bl	8008220 <HAL_I2C_Mem_Write>
}
 800197c:	b007      	add	sp, #28
 800197e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001982:	bf00      	nop
 8001984:	2000000c 	.word	0x2000000c
 8001988:	20003eac 	.word	0x20003eac

0800198c <IOE_Read>:
{
 800198c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800198e:	2300      	movs	r3, #0
 8001990:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001994:	4b08      	ldr	r3, [pc, #32]	; (80019b8 <IOE_Read+0x2c>)
 8001996:	681b      	ldr	r3, [r3, #0]
 8001998:	9302      	str	r3, [sp, #8]
{
 800199a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800199c:	2301      	movs	r3, #1
 800199e:	f10d 0117 	add.w	r1, sp, #23
 80019a2:	9100      	str	r1, [sp, #0]
 80019a4:	9301      	str	r3, [sp, #4]
 80019a6:	4601      	mov	r1, r0
 80019a8:	4804      	ldr	r0, [pc, #16]	; (80019bc <IOE_Read+0x30>)
 80019aa:	f006 fcc9 	bl	8008340 <HAL_I2C_Mem_Read>
}
 80019ae:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80019b2:	b007      	add	sp, #28
 80019b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80019b8:	2000000c 	.word	0x2000000c
 80019bc:	20003eac 	.word	0x20003eac

080019c0 <IOE_ReadMultiple>:
{
 80019c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80019c2:	4c08      	ldr	r4, [pc, #32]	; (80019e4 <IOE_ReadMultiple+0x24>)
 80019c4:	6824      	ldr	r4, [r4, #0]
 80019c6:	9200      	str	r2, [sp, #0]
 80019c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80019cc:	460a      	mov	r2, r1
 80019ce:	2301      	movs	r3, #1
 80019d0:	4601      	mov	r1, r0
 80019d2:	4805      	ldr	r0, [pc, #20]	; (80019e8 <IOE_ReadMultiple+0x28>)
 80019d4:	f006 fcb4 	bl	8008340 <HAL_I2C_Mem_Read>
}
 80019d8:	3800      	subs	r0, #0
 80019da:	bf18      	it	ne
 80019dc:	2001      	movne	r0, #1
 80019de:	b004      	add	sp, #16
 80019e0:	bd10      	pop	{r4, pc}
 80019e2:	bf00      	nop
 80019e4:	2000000c 	.word	0x2000000c
 80019e8:	20003eac 	.word	0x20003eac

080019ec <IOE_Delay>:
 80019ec:	f005 beda 	b.w	80077a4 <HAL_Delay>

080019f0 <LCD_IO_Init>:
{
 80019f0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019f2:	4806      	ldr	r0, [pc, #24]	; (8001a0c <LCD_IO_Init+0x1c>)
 80019f4:	2200      	movs	r2, #0
 80019f6:	2104      	movs	r1, #4
 80019f8:	f006 f988 	bl	8007d0c <HAL_GPIO_WritePin>
}
 80019fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a00:	4802      	ldr	r0, [pc, #8]	; (8001a0c <LCD_IO_Init+0x1c>)
 8001a02:	2201      	movs	r2, #1
 8001a04:	2104      	movs	r1, #4
 8001a06:	f006 b981 	b.w	8007d0c <HAL_GPIO_WritePin>
 8001a0a:	bf00      	nop
 8001a0c:	40020800 	.word	0x40020800

08001a10 <LCD_IO_WriteData>:
{
 8001a10:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a12:	4d0b      	ldr	r5, [pc, #44]	; (8001a40 <LCD_IO_WriteData+0x30>)
{
 8001a14:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a16:	2201      	movs	r2, #1
 8001a18:	480a      	ldr	r0, [pc, #40]	; (8001a44 <LCD_IO_WriteData+0x34>)
 8001a1a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a1e:	f006 f975 	bl	8007d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a22:	2200      	movs	r2, #0
 8001a24:	2104      	movs	r1, #4
 8001a26:	4628      	mov	r0, r5
 8001a28:	f006 f970 	bl	8007d0c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a2c:	4620      	mov	r0, r4
 8001a2e:	f7ff fbcb 	bl	80011c8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a32:	4628      	mov	r0, r5
 8001a34:	2201      	movs	r2, #1
}
 8001a36:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a3a:	2104      	movs	r1, #4
 8001a3c:	f006 b966 	b.w	8007d0c <HAL_GPIO_WritePin>
 8001a40:	40020800 	.word	0x40020800
 8001a44:	40020c00 	.word	0x40020c00

08001a48 <LCD_IO_WriteReg>:
{
 8001a48:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a4a:	4d0b      	ldr	r5, [pc, #44]	; (8001a78 <LCD_IO_WriteReg+0x30>)
{
 8001a4c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a4e:	2200      	movs	r2, #0
 8001a50:	480a      	ldr	r0, [pc, #40]	; (8001a7c <LCD_IO_WriteReg+0x34>)
 8001a52:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a56:	f006 f959 	bl	8007d0c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	2104      	movs	r1, #4
 8001a5e:	4628      	mov	r0, r5
 8001a60:	f006 f954 	bl	8007d0c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001a64:	4620      	mov	r0, r4
 8001a66:	f7ff fbaf 	bl	80011c8 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a6a:	4628      	mov	r0, r5
 8001a6c:	2201      	movs	r2, #1
}
 8001a6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a72:	2104      	movs	r1, #4
 8001a74:	f006 b94a 	b.w	8007d0c <HAL_GPIO_WritePin>
 8001a78:	40020800 	.word	0x40020800
 8001a7c:	40020c00 	.word	0x40020c00

08001a80 <LCD_IO_ReadData>:
{
 8001a80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a82:	4e14      	ldr	r6, [pc, #80]	; (8001ad4 <LCD_IO_ReadData+0x54>)
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a84:	4f14      	ldr	r7, [pc, #80]	; (8001ad8 <LCD_IO_ReadData+0x58>)
{
 8001a86:	4605      	mov	r5, r0
 8001a88:	460c      	mov	r4, r1
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a8a:	4630      	mov	r0, r6
 8001a8c:	2200      	movs	r2, #0
 8001a8e:	2104      	movs	r1, #4
 8001a90:	f006 f93c 	bl	8007d0c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a94:	2200      	movs	r2, #0
 8001a96:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a9a:	4638      	mov	r0, r7
 8001a9c:	f006 f936 	bl	8007d0c <HAL_GPIO_WritePin>
	SPI5_Write(RegValue);
 8001aa0:	4628      	mov	r0, r5
 8001aa2:	f7ff fb91 	bl	80011c8 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001aa6:	4b0d      	ldr	r3, [pc, #52]	; (8001adc <LCD_IO_ReadData+0x5c>)
 8001aa8:	480d      	ldr	r0, [pc, #52]	; (8001ae0 <LCD_IO_ReadData+0x60>)
 8001aaa:	681b      	ldr	r3, [r3, #0]
 8001aac:	4622      	mov	r2, r4
 8001aae:	a901      	add	r1, sp, #4
 8001ab0:	f007 fe08 	bl	80096c4 <HAL_SPI_Receive>
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ab4:	4638      	mov	r0, r7
 8001ab6:	2201      	movs	r2, #1
 8001ab8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001abc:	9c01      	ldr	r4, [sp, #4]
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001abe:	f006 f925 	bl	8007d0c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ac2:	4630      	mov	r0, r6
 8001ac4:	2201      	movs	r2, #1
 8001ac6:	2104      	movs	r1, #4
 8001ac8:	f006 f920 	bl	8007d0c <HAL_GPIO_WritePin>
}
 8001acc:	4620      	mov	r0, r4
 8001ace:	b003      	add	sp, #12
 8001ad0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ad2:	bf00      	nop
 8001ad4:	40020800 	.word	0x40020800
 8001ad8:	40020c00 	.word	0x40020c00
 8001adc:	20000010 	.word	0x20000010
 8001ae0:	20003fdc 	.word	0x20003fdc

08001ae4 <LCD_Delay>:
	HAL_Delay(Delay);
 8001ae4:	f005 be5e 	b.w	80077a4 <HAL_Delay>

08001ae8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001ae8:	6802      	ldr	r2, [r0, #0]
 8001aea:	4b03      	ldr	r3, [pc, #12]	; (8001af8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001aec:	429a      	cmp	r2, r3
 8001aee:	d101      	bne.n	8001af4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001af0:	f005 be46 	b.w	8007780 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001af4:	4770      	bx	lr
 8001af6:	bf00      	nop
 8001af8:	40001000 	.word	0x40001000

08001afc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001afc:	4770      	bx	lr
	...

08001b00 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b00:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b02:	4b0e      	ldr	r3, [pc, #56]	; (8001b3c <HAL_MspInit+0x3c>)
 8001b04:	2200      	movs	r2, #0
 8001b06:	9200      	str	r2, [sp, #0]
 8001b08:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b0a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001b0e:	6459      	str	r1, [r3, #68]	; 0x44
 8001b10:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001b12:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001b16:	9100      	str	r1, [sp, #0]
 8001b18:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001b1a:	9201      	str	r2, [sp, #4]
 8001b1c:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001b1e:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001b22:	6419      	str	r1, [r3, #64]	; 0x40
 8001b24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b26:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b2a:	9301      	str	r3, [sp, #4]
 8001b2c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b2e:	210f      	movs	r1, #15
 8001b30:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b34:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b36:	f005 be5b 	b.w	80077f0 <HAL_NVIC_SetPriority>
 8001b3a:	bf00      	nop
 8001b3c:	40023800 	.word	0x40023800

08001b40 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001b40:	6802      	ldr	r2, [r0, #0]
 8001b42:	4b09      	ldr	r3, [pc, #36]	; (8001b68 <HAL_CRC_MspInit+0x28>)
 8001b44:	429a      	cmp	r2, r3
{
 8001b46:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001b48:	d10b      	bne.n	8001b62 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001b4a:	2300      	movs	r3, #0
 8001b4c:	9301      	str	r3, [sp, #4]
 8001b4e:	4b07      	ldr	r3, [pc, #28]	; (8001b6c <HAL_CRC_MspInit+0x2c>)
 8001b50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b52:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001b56:	631a      	str	r2, [r3, #48]	; 0x30
 8001b58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b5a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001b5e:	9301      	str	r3, [sp, #4]
 8001b60:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001b62:	b002      	add	sp, #8
 8001b64:	4770      	bx	lr
 8001b66:	bf00      	nop
 8001b68:	40023000 	.word	0x40023000
 8001b6c:	40023800 	.word	0x40023800

08001b70 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001b70:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001b72:	4b0f      	ldr	r3, [pc, #60]	; (8001bb0 <HAL_DMA2D_MspInit+0x40>)
 8001b74:	6802      	ldr	r2, [r0, #0]
 8001b76:	429a      	cmp	r2, r3
 8001b78:	d116      	bne.n	8001ba8 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b7a:	2200      	movs	r2, #0
 8001b7c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001b80:	9201      	str	r2, [sp, #4]
 8001b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b84:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001b88:	6319      	str	r1, [r3, #48]	; 0x30
 8001b8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b8c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b90:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b92:	2105      	movs	r1, #5
 8001b94:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b96:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b98:	f005 fe2a 	bl	80077f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b9c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001b9e:	b003      	add	sp, #12
 8001ba0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001ba4:	f005 be56 	b.w	8007854 <HAL_NVIC_EnableIRQ>
}
 8001ba8:	b003      	add	sp, #12
 8001baa:	f85d fb04 	ldr.w	pc, [sp], #4
 8001bae:	bf00      	nop
 8001bb0:	4002b000 	.word	0x4002b000

08001bb4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001bb4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001bb8:	4604      	mov	r4, r0
 8001bba:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bbc:	2214      	movs	r2, #20
 8001bbe:	2100      	movs	r1, #0
 8001bc0:	a803      	add	r0, sp, #12
 8001bc2:	f01f febf 	bl	8021944 <memset>
  if(hi2c->Instance==I2C3)
 8001bc6:	6822      	ldr	r2, [r4, #0]
 8001bc8:	4b24      	ldr	r3, [pc, #144]	; (8001c5c <HAL_I2C_MspInit+0xa8>)
 8001bca:	429a      	cmp	r2, r3
 8001bcc:	d143      	bne.n	8001c56 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bce:	4c24      	ldr	r4, [pc, #144]	; (8001c60 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bd0:	4824      	ldr	r0, [pc, #144]	; (8001c64 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001bd2:	2500      	movs	r5, #0
 8001bd4:	9500      	str	r5, [sp, #0]
 8001bd6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001bd8:	f043 0304 	orr.w	r3, r3, #4
 8001bdc:	6323      	str	r3, [r4, #48]	; 0x30
 8001bde:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001be0:	f003 0304 	and.w	r3, r3, #4
 8001be4:	9300      	str	r3, [sp, #0]
 8001be6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001be8:	9501      	str	r5, [sp, #4]
 8001bea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001bec:	f043 0301 	orr.w	r3, r3, #1
 8001bf0:	6323      	str	r3, [r4, #48]	; 0x30
 8001bf2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001bf4:	f003 0301 	and.w	r3, r3, #1
 8001bf8:	9301      	str	r3, [sp, #4]
 8001bfa:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bfc:	f04f 0912 	mov.w	r9, #18
 8001c00:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c04:	f04f 0801 	mov.w	r8, #1
 8001c08:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c0a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c0c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c0e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c12:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c16:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c18:	f005 ff8c 	bl	8007b34 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c1c:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c20:	4811      	ldr	r0, [pc, #68]	; (8001c68 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c22:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c24:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c26:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c2a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c2e:	f005 ff81 	bl	8007b34 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001c32:	9502      	str	r5, [sp, #8]
 8001c34:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001c36:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001c3a:	6423      	str	r3, [r4, #64]	; 0x40
 8001c3c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001c3e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c42:	9302      	str	r3, [sp, #8]
 8001c44:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001c46:	6a23      	ldr	r3, [r4, #32]
 8001c48:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001c4c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001c4e:	6a23      	ldr	r3, [r4, #32]
 8001c50:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001c54:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c56:	b009      	add	sp, #36	; 0x24
 8001c58:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001c5c:	40005c00 	.word	0x40005c00
 8001c60:	40023800 	.word	0x40023800
 8001c64:	40020800 	.word	0x40020800
 8001c68:	40020000 	.word	0x40020000

08001c6c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001c6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c6e:	b099      	sub	sp, #100	; 0x64
 8001c70:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c72:	2214      	movs	r2, #20
 8001c74:	2100      	movs	r1, #0
 8001c76:	a807      	add	r0, sp, #28
 8001c78:	f01f fe64 	bl	8021944 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c7c:	2230      	movs	r2, #48	; 0x30
 8001c7e:	eb0d 0002 	add.w	r0, sp, r2
 8001c82:	2100      	movs	r1, #0
 8001c84:	f01f fe5e 	bl	8021944 <memset>
  if(hltdc->Instance==LTDC)
 8001c88:	6822      	ldr	r2, [r4, #0]
 8001c8a:	4b5e      	ldr	r3, [pc, #376]	; (8001e04 <HAL_LTDC_MspInit+0x198>)
 8001c8c:	429a      	cmp	r2, r3
 8001c8e:	f040 80b7 	bne.w	8001e00 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001c92:	2308      	movs	r3, #8
 8001c94:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001c96:	23c0      	movs	r3, #192	; 0xc0
 8001c98:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001c9a:	2304      	movs	r3, #4
 8001c9c:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c9e:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ca0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001ca4:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001ca6:	f007 f8e5 	bl	8008e74 <HAL_RCCEx_PeriphCLKConfig>
 8001caa:	b108      	cbz	r0, 8001cb0 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001cac:	f7ff ff26 	bl	8001afc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001cb0:	4b55      	ldr	r3, [pc, #340]	; (8001e08 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb2:	4856      	ldr	r0, [pc, #344]	; (8001e0c <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001cb4:	2400      	movs	r4, #0
 8001cb6:	9400      	str	r4, [sp, #0]
 8001cb8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001cba:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001cbe:	645a      	str	r2, [r3, #68]	; 0x44
 8001cc0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001cc2:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001cc6:	9200      	str	r2, [sp, #0]
 8001cc8:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cca:	9401      	str	r4, [sp, #4]
 8001ccc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cce:	f042 0220 	orr.w	r2, r2, #32
 8001cd2:	631a      	str	r2, [r3, #48]	; 0x30
 8001cd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cd6:	f002 0220 	and.w	r2, r2, #32
 8001cda:	9201      	str	r2, [sp, #4]
 8001cdc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cde:	9402      	str	r4, [sp, #8]
 8001ce0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ce2:	f042 0201 	orr.w	r2, r2, #1
 8001ce6:	631a      	str	r2, [r3, #48]	; 0x30
 8001ce8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cea:	f002 0201 	and.w	r2, r2, #1
 8001cee:	9202      	str	r2, [sp, #8]
 8001cf0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cf2:	9403      	str	r4, [sp, #12]
 8001cf4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cf6:	f042 0202 	orr.w	r2, r2, #2
 8001cfa:	631a      	str	r2, [r3, #48]	; 0x30
 8001cfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cfe:	f002 0202 	and.w	r2, r2, #2
 8001d02:	9203      	str	r2, [sp, #12]
 8001d04:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d06:	9404      	str	r4, [sp, #16]
 8001d08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d0a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d0e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d12:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001d16:	9204      	str	r2, [sp, #16]
 8001d18:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d1a:	9405      	str	r4, [sp, #20]
 8001d1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d1e:	f042 0204 	orr.w	r2, r2, #4
 8001d22:	631a      	str	r2, [r3, #48]	; 0x30
 8001d24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d26:	f002 0204 	and.w	r2, r2, #4
 8001d2a:	9205      	str	r2, [sp, #20]
 8001d2c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d2e:	9406      	str	r4, [sp, #24]
 8001d30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d32:	f042 0208 	orr.w	r2, r2, #8
 8001d36:	631a      	str	r2, [r3, #48]	; 0x30
 8001d38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d3a:	f003 0308 	and.w	r3, r3, #8
 8001d3e:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d40:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d42:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001d44:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d46:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d48:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d4c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d52:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d56:	f005 feed 	bl	8007b34 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001d5a:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d5e:	482c      	ldr	r0, [pc, #176]	; (8001e10 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d60:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d62:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d64:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d68:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d6a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d6e:	f005 fee1 	bl	8007b34 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001d72:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d74:	4827      	ldr	r0, [pc, #156]	; (8001e14 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d76:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d78:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d7a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d7e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d82:	f005 fed7 	bl	8007b34 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001d86:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d8a:	4822      	ldr	r0, [pc, #136]	; (8001e14 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d8c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d8e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d90:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d94:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d98:	f005 fecc 	bl	8007b34 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001d9c:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001da0:	481d      	ldr	r0, [pc, #116]	; (8001e18 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001da2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001da4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001da6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001daa:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dae:	f005 fec1 	bl	8007b34 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001db2:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001db4:	4819      	ldr	r0, [pc, #100]	; (8001e1c <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001db6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001db8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dba:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dbe:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dc2:	f005 feb7 	bl	8007b34 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001dc6:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dc8:	4815      	ldr	r0, [pc, #84]	; (8001e20 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dca:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dcc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dce:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dd2:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dd6:	f005 fead 	bl	8007b34 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001dda:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dde:	480e      	ldr	r0, [pc, #56]	; (8001e18 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001de0:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001de2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001de4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001de8:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001dec:	f005 fea2 	bl	8007b34 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001df0:	2058      	movs	r0, #88	; 0x58
 8001df2:	4622      	mov	r2, r4
 8001df4:	2105      	movs	r1, #5
 8001df6:	f005 fcfb 	bl	80077f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001dfa:	2058      	movs	r0, #88	; 0x58
 8001dfc:	f005 fd2a 	bl	8007854 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001e00:	b019      	add	sp, #100	; 0x64
 8001e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e04:	40016800 	.word	0x40016800
 8001e08:	40023800 	.word	0x40023800
 8001e0c:	40021400 	.word	0x40021400
 8001e10:	40020000 	.word	0x40020000
 8001e14:	40020400 	.word	0x40020400
 8001e18:	40021800 	.word	0x40021800
 8001e1c:	40020800 	.word	0x40020800
 8001e20:	40020c00 	.word	0x40020c00

08001e24 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001e24:	b510      	push	{r4, lr}
 8001e26:	4604      	mov	r4, r0
 8001e28:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e2a:	2214      	movs	r2, #20
 8001e2c:	2100      	movs	r1, #0
 8001e2e:	a803      	add	r0, sp, #12
 8001e30:	f01f fd88 	bl	8021944 <memset>
  if(hspi->Instance==SPI5)
 8001e34:	6822      	ldr	r2, [r4, #0]
 8001e36:	4b14      	ldr	r3, [pc, #80]	; (8001e88 <HAL_SPI_MspInit+0x64>)
 8001e38:	429a      	cmp	r2, r3
 8001e3a:	d123      	bne.n	8001e84 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001e3c:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001e40:	2100      	movs	r1, #0
 8001e42:	9101      	str	r1, [sp, #4]
 8001e44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e46:	4811      	ldr	r0, [pc, #68]	; (8001e8c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001e48:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001e4c:	645a      	str	r2, [r3, #68]	; 0x44
 8001e4e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001e50:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001e54:	9201      	str	r2, [sp, #4]
 8001e56:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e58:	9102      	str	r1, [sp, #8]
 8001e5a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e5c:	f042 0220 	orr.w	r2, r2, #32
 8001e60:	631a      	str	r2, [r3, #48]	; 0x30
 8001e62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e64:	f003 0320 	and.w	r3, r3, #32
 8001e68:	9302      	str	r3, [sp, #8]
 8001e6a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e6c:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001e70:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001e72:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e74:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001e78:	2305      	movs	r3, #5
 8001e7a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e7e:	a903      	add	r1, sp, #12
 8001e80:	f005 fe58 	bl	8007b34 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001e84:	b008      	add	sp, #32
 8001e86:	bd10      	pop	{r4, pc}
 8001e88:	40015000 	.word	0x40015000
 8001e8c:	40021400 	.word	0x40021400

08001e90 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001e90:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001e92:	4b0f      	ldr	r3, [pc, #60]	; (8001ed0 <HAL_TIM_Base_MspInit+0x40>)
 8001e94:	6802      	ldr	r2, [r0, #0]
 8001e96:	429a      	cmp	r2, r3
 8001e98:	d116      	bne.n	8001ec8 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001e9a:	2200      	movs	r2, #0
 8001e9c:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001ea0:	9201      	str	r2, [sp, #4]
 8001ea2:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001ea4:	f041 0120 	orr.w	r1, r1, #32
 8001ea8:	6419      	str	r1, [r3, #64]	; 0x40
 8001eaa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eac:	f003 0320 	and.w	r3, r3, #32
 8001eb0:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001eb2:	2105      	movs	r1, #5
 8001eb4:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001eb6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001eb8:	f005 fc9a 	bl	80077f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001ebc:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001ebe:	b003      	add	sp, #12
 8001ec0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001ec4:	f005 bcc6 	b.w	8007854 <HAL_NVIC_EnableIRQ>
}
 8001ec8:	b003      	add	sp, #12
 8001eca:	f85d fb04 	ldr.w	pc, [sp], #4
 8001ece:	bf00      	nop
 8001ed0:	40001400 	.word	0x40001400

08001ed4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001ed4:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ed6:	2214      	movs	r2, #20
{
 8001ed8:	b08b      	sub	sp, #44	; 0x2c
 8001eda:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001edc:	2100      	movs	r1, #0
 8001ede:	eb0d 0002 	add.w	r0, sp, r2
 8001ee2:	f01f fd2f 	bl	8021944 <memset>
  if(huart->Instance==UART5)
 8001ee6:	6823      	ldr	r3, [r4, #0]
 8001ee8:	4a38      	ldr	r2, [pc, #224]	; (8001fcc <HAL_UART_MspInit+0xf8>)
 8001eea:	4293      	cmp	r3, r2
 8001eec:	d140      	bne.n	8001f70 <HAL_UART_MspInit+0x9c>
  {
  /* USER CODE BEGIN UART5_MspInit 0 */

  /* USER CODE END UART5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART5_CLK_ENABLE();
 8001eee:	4b38      	ldr	r3, [pc, #224]	; (8001fd0 <HAL_UART_MspInit+0xfc>)
    GPIO_InitStruct.Pin = GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ef0:	4838      	ldr	r0, [pc, #224]	; (8001fd4 <HAL_UART_MspInit+0x100>)
    __HAL_RCC_UART5_CLK_ENABLE();
 8001ef2:	2400      	movs	r4, #0
 8001ef4:	9400      	str	r4, [sp, #0]
 8001ef6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ef8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001efc:	641a      	str	r2, [r3, #64]	; 0x40
 8001efe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f00:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001f04:	9200      	str	r2, [sp, #0]
 8001f06:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f08:	9401      	str	r4, [sp, #4]
 8001f0a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f0c:	f042 0204 	orr.w	r2, r2, #4
 8001f10:	631a      	str	r2, [r3, #48]	; 0x30
 8001f12:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f14:	f002 0204 	and.w	r2, r2, #4
 8001f18:	9201      	str	r2, [sp, #4]
 8001f1a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f1c:	9402      	str	r4, [sp, #8]
 8001f1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f20:	f042 0208 	orr.w	r2, r2, #8
 8001f24:	631a      	str	r2, [r3, #48]	; 0x30
 8001f26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f28:	f003 0308 	and.w	r3, r3, #8
 8001f2c:	9302      	str	r3, [sp, #8]
 8001f2e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f30:	2702      	movs	r7, #2
 8001f32:	f44f 5380 	mov.w	r3, #4096	; 0x1000
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8001f36:	2603      	movs	r6, #3
 8001f38:	2508      	movs	r5, #8
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f3a:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f3c:	e9cd 3705 	strd	r3, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8001f40:	e9cd 6508 	strd	r6, r5, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f44:	f005 fdf6 	bl	8007b34 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001f48:	2304      	movs	r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f4a:	4823      	ldr	r0, [pc, #140]	; (8001fd8 <HAL_UART_MspInit+0x104>)
    GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 8001f4c:	9509      	str	r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f4e:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f50:	e9cd 3705 	strd	r3, r7, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f54:	e9cd 4607 	strd	r4, r6, [sp, #28]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f58:	f005 fdec 	bl	8007b34 <HAL_GPIO_Init>

    /* UART5 interrupt Init */
    HAL_NVIC_SetPriority(UART5_IRQn, 5, 0);
 8001f5c:	2035      	movs	r0, #53	; 0x35
 8001f5e:	4622      	mov	r2, r4
 8001f60:	2105      	movs	r1, #5
 8001f62:	f005 fc45 	bl	80077f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART5_IRQn);
 8001f66:	2035      	movs	r0, #53	; 0x35
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001f68:	f005 fc74 	bl	8007854 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001f6c:	b00b      	add	sp, #44	; 0x2c
 8001f6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
  else if(huart->Instance==USART1)
 8001f70:	4a1a      	ldr	r2, [pc, #104]	; (8001fdc <HAL_UART_MspInit+0x108>)
 8001f72:	4293      	cmp	r3, r2
 8001f74:	d1fa      	bne.n	8001f6c <HAL_UART_MspInit+0x98>
    __HAL_RCC_USART1_CLK_ENABLE();
 8001f76:	4b16      	ldr	r3, [pc, #88]	; (8001fd0 <HAL_UART_MspInit+0xfc>)
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f78:	4819      	ldr	r0, [pc, #100]	; (8001fe0 <HAL_UART_MspInit+0x10c>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8001f7a:	2400      	movs	r4, #0
 8001f7c:	9403      	str	r4, [sp, #12]
 8001f7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f80:	f042 0210 	orr.w	r2, r2, #16
 8001f84:	645a      	str	r2, [r3, #68]	; 0x44
 8001f86:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f88:	f002 0210 	and.w	r2, r2, #16
 8001f8c:	9203      	str	r2, [sp, #12]
 8001f8e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f90:	9404      	str	r4, [sp, #16]
 8001f92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f94:	f042 0201 	orr.w	r2, r2, #1
 8001f98:	631a      	str	r2, [r3, #48]	; 0x30
 8001f9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f9c:	f003 0301 	and.w	r3, r3, #1
 8001fa0:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fa2:	f44f 62c0 	mov.w	r2, #1536	; 0x600
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fa6:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fa8:	2302      	movs	r3, #2
 8001faa:	e9cd 2305 	strd	r2, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001fae:	2103      	movs	r1, #3
 8001fb0:	2307      	movs	r3, #7
 8001fb2:	e9cd 1308 	strd	r1, r3, [sp, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fb6:	a905      	add	r1, sp, #20
 8001fb8:	f005 fdbc 	bl	8007b34 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8001fbc:	2025      	movs	r0, #37	; 0x25
 8001fbe:	4622      	mov	r2, r4
 8001fc0:	2105      	movs	r1, #5
 8001fc2:	f005 fc15 	bl	80077f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001fc6:	2025      	movs	r0, #37	; 0x25
 8001fc8:	e7ce      	b.n	8001f68 <HAL_UART_MspInit+0x94>
 8001fca:	bf00      	nop
 8001fcc:	40005000 	.word	0x40005000
 8001fd0:	40023800 	.word	0x40023800
 8001fd4:	40020800 	.word	0x40020800
 8001fd8:	40020c00 	.word	0x40020c00
 8001fdc:	40011000 	.word	0x40011000
 8001fe0:	40020000 	.word	0x40020000

08001fe4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001fe8:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fea:	2300      	movs	r3, #0
 8001fec:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001fee:	4b2b      	ldr	r3, [pc, #172]	; (800209c <HAL_SDRAM_MspInit+0xb8>)
 8001ff0:	681c      	ldr	r4, [r3, #0]
 8001ff2:	2c00      	cmp	r4, #0
 8001ff4:	d14f      	bne.n	8002096 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001ff6:	f04f 0801 	mov.w	r8, #1
 8001ffa:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ffe:	4b28      	ldr	r3, [pc, #160]	; (80020a0 <HAL_SDRAM_MspInit+0xbc>)
 8002000:	9400      	str	r4, [sp, #0]
 8002002:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002004:	4827      	ldr	r0, [pc, #156]	; (80020a4 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002006:	ea42 0208 	orr.w	r2, r2, r8
 800200a:	639a      	str	r2, [r3, #56]	; 0x38
 800200c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800200e:	ea03 0308 	and.w	r3, r3, r8
 8002012:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002014:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002016:	2603      	movs	r6, #3
 8002018:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800201a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800201c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800201e:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002022:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002026:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800202a:	f005 fd83 	bl	8007b34 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800202e:	481e      	ldr	r0, [pc, #120]	; (80020a8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002030:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002032:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002034:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002038:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800203c:	f005 fd7a 	bl	8007b34 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002040:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002044:	4819      	ldr	r0, [pc, #100]	; (80020ac <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002046:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002048:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800204a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800204e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002052:	f005 fd6f 	bl	8007b34 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002056:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800205a:	4815      	ldr	r0, [pc, #84]	; (80020b0 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800205c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800205e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002060:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002064:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002068:	f005 fd64 	bl	8007b34 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800206c:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002070:	4810      	ldr	r0, [pc, #64]	; (80020b4 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002072:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002074:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002076:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800207a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800207e:	f005 fd59 	bl	8007b34 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002082:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002084:	480c      	ldr	r0, [pc, #48]	; (80020b8 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002086:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002088:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800208a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800208e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002092:	f005 fd4f 	bl	8007b34 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002096:	b006      	add	sp, #24
 8002098:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800209c:	20004108 	.word	0x20004108
 80020a0:	40023800 	.word	0x40023800
 80020a4:	40021400 	.word	0x40021400
 80020a8:	40020800 	.word	0x40020800
 80020ac:	40021800 	.word	0x40021800
 80020b0:	40021000 	.word	0x40021000
 80020b4:	40020c00 	.word	0x40020c00
 80020b8:	40020400 	.word	0x40020400

080020bc <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80020bc:	b570      	push	{r4, r5, r6, lr}
 80020be:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020c0:	2300      	movs	r3, #0
 80020c2:	9302      	str	r3, [sp, #8]
 80020c4:	4b20      	ldr	r3, [pc, #128]	; (8002148 <HAL_InitTick+0x8c>)
 80020c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80020c8:	f042 0210 	orr.w	r2, r2, #16
 80020cc:	641a      	str	r2, [r3, #64]	; 0x40
 80020ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020d0:	f003 0310 	and.w	r3, r3, #16
 80020d4:	9302      	str	r3, [sp, #8]
{
 80020d6:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020d8:	a901      	add	r1, sp, #4
 80020da:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020dc:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020de:	f006 feab 	bl	8008e38 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80020e2:	9b06      	ldr	r3, [sp, #24]
 80020e4:	bb4b      	cbnz	r3, 800213a <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80020e6:	f006 fe87 	bl	8008df8 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020ea:	4e18      	ldr	r6, [pc, #96]	; (800214c <HAL_InitTick+0x90>)
 80020ec:	4b18      	ldr	r3, [pc, #96]	; (8002150 <HAL_InitTick+0x94>)
 80020ee:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020f0:	f240 33e7 	movw	r3, #999	; 0x3e7
 80020f4:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020f6:	4b17      	ldr	r3, [pc, #92]	; (8002154 <HAL_InitTick+0x98>)
 80020f8:	fbb0 f3f3 	udiv	r3, r0, r3
 80020fc:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 80020fe:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002100:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002102:	2300      	movs	r3, #0
 8002104:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002106:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002108:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 800210a:	f007 fcc5 	bl	8009a98 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800210e:	4604      	mov	r4, r0
 8002110:	b980      	cbnz	r0, 8002134 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002112:	4630      	mov	r0, r6
 8002114:	f007 fb7a 	bl	800980c <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002118:	4604      	mov	r4, r0
 800211a:	b958      	cbnz	r0, 8002134 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 800211c:	2036      	movs	r0, #54	; 0x36
 800211e:	f005 fb99 	bl	8007854 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002122:	2d0f      	cmp	r5, #15
 8002124:	d80d      	bhi.n	8002142 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002126:	4622      	mov	r2, r4
 8002128:	4629      	mov	r1, r5
 800212a:	2036      	movs	r0, #54	; 0x36
 800212c:	f005 fb60 	bl	80077f0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002130:	4b09      	ldr	r3, [pc, #36]	; (8002158 <HAL_InitTick+0x9c>)
 8002132:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002134:	4620      	mov	r0, r4
 8002136:	b008      	add	sp, #32
 8002138:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 800213a:	f006 fe5d 	bl	8008df8 <HAL_RCC_GetPCLK1Freq>
 800213e:	0040      	lsls	r0, r0, #1
 8002140:	e7d3      	b.n	80020ea <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002142:	2401      	movs	r4, #1
 8002144:	e7f6      	b.n	8002134 <HAL_InitTick+0x78>
 8002146:	bf00      	nop
 8002148:	40023800 	.word	0x40023800
 800214c:	2000410c 	.word	0x2000410c
 8002150:	40001000 	.word	0x40001000
 8002154:	000f4240 	.word	0x000f4240
 8002158:	2000007c 	.word	0x2000007c

0800215c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800215c:	4770      	bx	lr

0800215e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800215e:	e7fe      	b.n	800215e <HardFault_Handler>

08002160 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002160:	e7fe      	b.n	8002160 <MemManage_Handler>

08002162 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002162:	e7fe      	b.n	8002162 <BusFault_Handler>

08002164 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002164:	e7fe      	b.n	8002164 <UsageFault_Handler>

08002166 <DebugMon_Handler>:
 8002166:	4770      	bx	lr

08002168 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002168:	4801      	ldr	r0, [pc, #4]	; (8002170 <USART1_IRQHandler+0x8>)
 800216a:	f007 bea7 	b.w	8009ebc <HAL_UART_IRQHandler>
 800216e:	bf00      	nop
 8002170:	2000407c 	.word	0x2000407c

08002174 <UART5_IRQHandler>:
void UART5_IRQHandler(void)
{
  /* USER CODE BEGIN UART5_IRQn 0 */

  /* USER CODE END UART5_IRQn 0 */
  HAL_UART_IRQHandler(&huart5);
 8002174:	4801      	ldr	r0, [pc, #4]	; (800217c <UART5_IRQHandler+0x8>)
 8002176:	f007 bea1 	b.w	8009ebc <HAL_UART_IRQHandler>
 800217a:	bf00      	nop
 800217c:	200040c0 	.word	0x200040c0

08002180 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002180:	4801      	ldr	r0, [pc, #4]	; (8002188 <TIM6_DAC_IRQHandler+0x8>)
 8002182:	f007 bb81 	b.w	8009888 <HAL_TIM_IRQHandler>
 8002186:	bf00      	nop
 8002188:	2000410c 	.word	0x2000410c

0800218c <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 800218c:	4801      	ldr	r0, [pc, #4]	; (8002194 <TIM7_IRQHandler+0x8>)
 800218e:	f007 bb7b 	b.w	8009888 <HAL_TIM_IRQHandler>
 8002192:	bf00      	nop
 8002194:	20004034 	.word	0x20004034

08002198 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002198:	4801      	ldr	r0, [pc, #4]	; (80021a0 <LTDC_IRQHandler+0x8>)
 800219a:	f006 bb0b 	b.w	80087b4 <HAL_LTDC_IRQHandler>
 800219e:	bf00      	nop
 80021a0:	20003f00 	.word	0x20003f00

080021a4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80021a4:	4801      	ldr	r0, [pc, #4]	; (80021ac <DMA2D_IRQHandler+0x8>)
 80021a6:	f005 bbf7 	b.w	8007998 <HAL_DMA2D_IRQHandler>
 80021aa:	bf00      	nop
 80021ac:	20003e6c 	.word	0x20003e6c

080021b0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80021b0:	2001      	movs	r0, #1
 80021b2:	4770      	bx	lr

080021b4 <_kill>:

int _kill(int pid, int sig)
{
 80021b4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80021b6:	f01f fb5b 	bl	8021870 <__errno>
 80021ba:	2316      	movs	r3, #22
 80021bc:	6003      	str	r3, [r0, #0]
	return -1;
}
 80021be:	f04f 30ff 	mov.w	r0, #4294967295
 80021c2:	bd08      	pop	{r3, pc}

080021c4 <_exit>:

void _exit (int status)
{
 80021c4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80021c6:	f01f fb53 	bl	8021870 <__errno>
 80021ca:	2316      	movs	r3, #22
 80021cc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80021ce:	e7fe      	b.n	80021ce <_exit+0xa>

080021d0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021d0:	b570      	push	{r4, r5, r6, lr}
 80021d2:	460d      	mov	r5, r1
 80021d4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021d6:	460e      	mov	r6, r1
 80021d8:	1b73      	subs	r3, r6, r5
 80021da:	429c      	cmp	r4, r3
 80021dc:	dc01      	bgt.n	80021e2 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80021de:	4620      	mov	r0, r4
 80021e0:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80021e2:	f3af 8000 	nop.w
 80021e6:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ea:	e7f5      	b.n	80021d8 <_read+0x8>

080021ec <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021ec:	b570      	push	{r4, r5, r6, lr}
 80021ee:	460d      	mov	r5, r1
 80021f0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021f2:	460e      	mov	r6, r1
 80021f4:	1b73      	subs	r3, r6, r5
 80021f6:	429c      	cmp	r4, r3
 80021f8:	dc01      	bgt.n	80021fe <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80021fa:	4620      	mov	r0, r4
 80021fc:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80021fe:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002202:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002206:	e7f5      	b.n	80021f4 <_write+0x8>

08002208 <_close>:

int _close(int file)
{
	return -1;
}
 8002208:	f04f 30ff 	mov.w	r0, #4294967295
 800220c:	4770      	bx	lr

0800220e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800220e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002212:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002214:	2000      	movs	r0, #0
 8002216:	4770      	bx	lr

08002218 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002218:	2001      	movs	r0, #1
 800221a:	4770      	bx	lr

0800221c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 800221c:	2000      	movs	r0, #0
 800221e:	4770      	bx	lr

08002220 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002220:	4a0a      	ldr	r2, [pc, #40]	; (800224c <_sbrk+0x2c>)
 8002222:	6811      	ldr	r1, [r2, #0]
{
 8002224:	b508      	push	{r3, lr}
 8002226:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002228:	b909      	cbnz	r1, 800222e <_sbrk+0xe>
		heap_end = &end;
 800222a:	4909      	ldr	r1, [pc, #36]	; (8002250 <_sbrk+0x30>)
 800222c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 800222e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002230:	4669      	mov	r1, sp
 8002232:	4403      	add	r3, r0
 8002234:	428b      	cmp	r3, r1
 8002236:	d906      	bls.n	8002246 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002238:	f01f fb1a 	bl	8021870 <__errno>
 800223c:	230c      	movs	r3, #12
 800223e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002240:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002244:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002246:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002248:	e7fc      	b.n	8002244 <_sbrk+0x24>
 800224a:	bf00      	nop
 800224c:	20004154 	.word	0x20004154
 8002250:	20015ac8 	.word	0x20015ac8

08002254 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId MEDIUM = 3;  // rechargebd_otf_30_4bpp
    static const touchgfx::FontId BTNTEXT = 4; // rechargebd_otf_20_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002254:	4770      	bx	lr

08002256 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002256:	b508      	push	{r3, lr}
    switch (typography)
 8002258:	2904      	cmp	r1, #4
 800225a:	d818      	bhi.n	800228e <_ZN23ApplicationFontProvider7getFontEt+0x38>
 800225c:	e8df f001 	tbb	[pc, r1]
 8002260:	0f0b0703 	.word	0x0f0b0703
 8002264:	13          	.byte	0x13
 8002265:	00          	.byte	0x00
    {
    case Typography::DEFAULT:
        // rechargebd_otf_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002266:	f003 fa1f 	bl	80056a8 <_ZN17TypedTextDatabase8getFontsEv>
 800226a:	6800      	ldr	r0, [r0, #0]
        // rechargebd_otf_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    default:
        return 0;
    }
}
 800226c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800226e:	f003 fa1b 	bl	80056a8 <_ZN17TypedTextDatabase8getFontsEv>
 8002272:	6840      	ldr	r0, [r0, #4]
 8002274:	e7fa      	b.n	800226c <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002276:	f003 fa17 	bl	80056a8 <_ZN17TypedTextDatabase8getFontsEv>
 800227a:	6880      	ldr	r0, [r0, #8]
 800227c:	e7f6      	b.n	800226c <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800227e:	f003 fa13 	bl	80056a8 <_ZN17TypedTextDatabase8getFontsEv>
 8002282:	68c0      	ldr	r0, [r0, #12]
 8002284:	e7f2      	b.n	800226c <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8002286:	f003 fa0f 	bl	80056a8 <_ZN17TypedTextDatabase8getFontsEv>
 800228a:	6900      	ldr	r0, [r0, #16]
 800228c:	e7ee      	b.n	800226c <_ZN23ApplicationFontProvider7getFontEt+0x16>
    switch (typography)
 800228e:	2000      	movs	r0, #0
 8002290:	e7ec      	b.n	800226c <_ZN23ApplicationFontProvider7getFontEt+0x16>

08002292 <_ZN23ApplicationFontProviderD0Ev>:
 8002292:	b510      	push	{r4, lr}
 8002294:	2104      	movs	r1, #4
 8002296:	4604      	mov	r4, r0
 8002298:	f01f fa08 	bl	80216ac <_ZdlPvj>
 800229c:	4620      	mov	r0, r4
 800229e:	bd10      	pop	{r4, pc}

080022a0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80022a0:	4800      	ldr	r0, [pc, #0]	; (80022a4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80022a2:	4770      	bx	lr
 80022a4:	080232f4 	.word	0x080232f4

080022a8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80022a8:	2012      	movs	r0, #18
 80022aa:	4770      	bx	lr

080022ac <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80022ac:	b513      	push	{r0, r1, r4, lr}
 80022ae:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80022b0:	b151      	cbz	r1, 80022c8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80022b2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80022b4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80022b6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80022ba:	aa01      	add	r2, sp, #4
 80022bc:	689c      	ldr	r4, [r3, #8]
 80022be:	f10d 0303 	add.w	r3, sp, #3
 80022c2:	47a0      	blx	r4
        return glyph;
    }
 80022c4:	b002      	add	sp, #8
 80022c6:	bd10      	pop	{r4, pc}
            return 0;
 80022c8:	4608      	mov	r0, r1
 80022ca:	e7fb      	b.n	80022c4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080022cc <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80022cc:	89c0      	ldrh	r0, [r0, #14]
 80022ce:	4770      	bx	lr

080022d0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80022d0:	8a00      	ldrh	r0, [r0, #16]
 80022d2:	4770      	bx	lr

080022d4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80022d4:	88c0      	ldrh	r0, [r0, #6]
 80022d6:	4770      	bx	lr

080022d8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80022d8:	8880      	ldrh	r0, [r0, #4]
 80022da:	4770      	bx	lr

080022dc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80022dc:	7a80      	ldrb	r0, [r0, #10]
    }
 80022de:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80022e2:	4770      	bx	lr

080022e4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80022e4:	7a80      	ldrb	r0, [r0, #10]
    }
 80022e6:	09c0      	lsrs	r0, r0, #7
 80022e8:	4770      	bx	lr

080022ea <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022ea:	4770      	bx	lr

080022ec <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022ec:	4770      	bx	lr

080022ee <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022ee:	4770      	bx	lr

080022f0 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022f0:	4770      	bx	lr

080022f2 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80022f2:	4770      	bx	lr

080022f4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80022f4:	4770      	bx	lr

080022f6 <_ZN24ChooseTurnScreenViewBase15btnFirstClickedEv>:
     * Virtual Action Handlers
     */
    virtual void btnFirstClicked()
    {
        // Override and implement this function in ChooseTurnScreen
    }
 80022f6:	4770      	bx	lr

080022f8 <_ZN24ChooseTurnScreenViewBase16btnSecondClickedEv>:
    virtual void btnSecondClicked()
    {
        // Override and implement this function in ChooseTurnScreen
    }
 80022f8:	4770      	bx	lr

080022fa <_ZN24ChooseTurnScreenViewBaseD1Ev>:
}

ChooseTurnScreenViewBase::~ChooseTurnScreenViewBase()
{

}
 80022fa:	4770      	bx	lr

080022fc <_ZN24ChooseTurnScreenViewBase11setupScreenEv>:

void ChooseTurnScreenViewBase::setupScreen()
{

}
 80022fc:	4770      	bx	lr

080022fe <_ZN8touchgfx8CallbackI24ChooseTurnScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80022fe:	4770      	bx	lr

08002300 <_ZN8touchgfx8CallbackI24ChooseTurnScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002300:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002302:	68c2      	ldr	r2, [r0, #12]
 8002304:	6844      	ldr	r4, [r0, #4]
 8002306:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002308:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800230a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800230e:	07d2      	lsls	r2, r2, #31
 8002310:	bf48      	it	mi
 8002312:	5962      	ldrmi	r2, [r4, r5]
 8002314:	689b      	ldr	r3, [r3, #8]
    }
 8002316:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002318:	bf48      	it	mi
 800231a:	58d3      	ldrmi	r3, [r2, r3]
 800231c:	4718      	bx	r3

0800231e <_ZNK8touchgfx8CallbackI24ChooseTurnScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800231e:	6843      	ldr	r3, [r0, #4]
 8002320:	b12b      	cbz	r3, 800232e <_ZNK8touchgfx8CallbackI24ChooseTurnScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002322:	6883      	ldr	r3, [r0, #8]
 8002324:	b92b      	cbnz	r3, 8002332 <_ZNK8touchgfx8CallbackI24ChooseTurnScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002326:	68c0      	ldr	r0, [r0, #12]
 8002328:	f000 0001 	and.w	r0, r0, #1
 800232c:	4770      	bx	lr
 800232e:	4618      	mov	r0, r3
 8002330:	4770      	bx	lr
 8002332:	2001      	movs	r0, #1
    }
 8002334:	4770      	bx	lr

08002336 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002336:	b510      	push	{r4, lr}
    }
 8002338:	2108      	movs	r1, #8
    virtual ~TypedText()
 800233a:	4604      	mov	r4, r0
    }
 800233c:	f01f f9b6 	bl	80216ac <_ZdlPvj>
 8002340:	4620      	mov	r0, r4
 8002342:	bd10      	pop	{r4, pc}

08002344 <_ZN8touchgfx8CallbackI24ChooseTurnScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002344:	b510      	push	{r4, lr}
 8002346:	2110      	movs	r1, #16
 8002348:	4604      	mov	r4, r0
 800234a:	f01f f9af 	bl	80216ac <_ZdlPvj>
 800234e:	4620      	mov	r0, r4
 8002350:	bd10      	pop	{r4, pc}

08002352 <_ZN24ChooseTurnScreenViewBaseD0Ev>:
ChooseTurnScreenViewBase::~ChooseTurnScreenViewBase()
 8002352:	b510      	push	{r4, lr}
}
 8002354:	f44f 71c0 	mov.w	r1, #384	; 0x180
ChooseTurnScreenViewBase::~ChooseTurnScreenViewBase()
 8002358:	4604      	mov	r4, r0
}
 800235a:	f01f f9a7 	bl	80216ac <_ZdlPvj>
 800235e:	4620      	mov	r0, r4
 8002360:	bd10      	pop	{r4, pc}

08002362 <_ZN24ChooseTurnScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void ChooseTurnScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 8002362:	f100 03e0 	add.w	r3, r0, #224	; 0xe0
 8002366:	4299      	cmp	r1, r3
{
 8002368:	b570      	push	{r4, r5, r6, lr}
 800236a:	4604      	mov	r4, r0
 800236c:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 800236e:	d102      	bne.n	8002376 <_ZN24ChooseTurnScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    {
        //Interaction1
        //When buttonWithLabel1 clicked call virtual function
        //Call btnFirstClicked
        btnFirstClicked();
 8002370:	6803      	ldr	r3, [r0, #0]
 8002372:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002374:	4798      	blx	r3
    }
    if (&src == &buttonWithLabel1_1)
 8002376:	f504 7394 	add.w	r3, r4, #296	; 0x128
 800237a:	429d      	cmp	r5, r3
 800237c:	d105      	bne.n	800238a <_ZN24ChooseTurnScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
    {
        //Interaction2
        //When buttonWithLabel1_1 clicked call virtual function
        //Call btnSecondClicked
        btnSecondClicked();
 800237e:	6823      	ldr	r3, [r4, #0]
 8002380:	4620      	mov	r0, r4
 8002382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
}
 8002384:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        btnSecondClicked();
 8002388:	4718      	bx	r3
}
 800238a:	bd70      	pop	{r4, r5, r6, pc}

0800238c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800238c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800238e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002390:	4604      	mov	r4, r0
        setX(x);
 8002392:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002394:	4615      	mov	r5, r2
        setX(x);
 8002396:	4798      	blx	r3
        setY(y);
 8002398:	6823      	ldr	r3, [r4, #0]
 800239a:	4629      	mov	r1, r5
 800239c:	4620      	mov	r0, r4
 800239e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80023a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80023a4:	4718      	bx	r3

080023a6 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80023a6:	b570      	push	{r4, r5, r6, lr}
 80023a8:	4604      	mov	r4, r0
 80023aa:	461d      	mov	r5, r3
 80023ac:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80023b0:	f7ff ffec 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80023b4:	6823      	ldr	r3, [r4, #0]
 80023b6:	4629      	mov	r1, r5
 80023b8:	4620      	mov	r0, r4
 80023ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80023bc:	4798      	blx	r3
        setHeight(height);
 80023be:	6823      	ldr	r3, [r4, #0]
 80023c0:	4631      	mov	r1, r6
 80023c2:	4620      	mov	r0, r4
 80023c4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80023c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80023ca:	4718      	bx	r3

080023cc <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80023cc:	4a09      	ldr	r2, [pc, #36]	; (80023f4 <_ZN8touchgfx3BoxC1Ev+0x28>)
 80023ce:	6002      	str	r2, [r0, #0]
          visible(true)
 80023d0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80023d4:	2200      	movs	r2, #0
 80023d6:	8481      	strh	r1, [r0, #36]	; 0x24
 80023d8:	21ff      	movs	r1, #255	; 0xff
 80023da:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80023de:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80023e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80023e6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80023ea:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 80023ee:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 80023f0:	4770      	bx	lr
 80023f2:	bf00      	nop
 80023f4:	08024c70 	.word	0x08024c70

080023f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80023f8:	4b1a      	ldr	r3, [pc, #104]	; (8002464 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80023fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80023fc:	881b      	ldrh	r3, [r3, #0]
 80023fe:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002400:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002402:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002404:	d92a      	bls.n	800245c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002406:	4b18      	ldr	r3, [pc, #96]	; (8002468 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	b92b      	cbnz	r3, 8002418 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 800240c:	4b17      	ldr	r3, [pc, #92]	; (800246c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800240e:	4a18      	ldr	r2, [pc, #96]	; (8002470 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002410:	4818      	ldr	r0, [pc, #96]	; (8002474 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002412:	216c      	movs	r1, #108	; 0x6c
 8002414:	f01f f9fa 	bl	802180c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002418:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800241c:	4b16      	ldr	r3, [pc, #88]	; (8002478 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002424:	4b15      	ldr	r3, [pc, #84]	; (800247c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002426:	6818      	ldr	r0, [r3, #0]
 8002428:	f003 f92e 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800242c:	682b      	ldr	r3, [r5, #0]
 800242e:	9001      	str	r0, [sp, #4]
 8002430:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002432:	4628      	mov	r0, r5
 8002434:	4798      	blx	r3
 8002436:	682b      	ldr	r3, [r5, #0]
 8002438:	9901      	ldr	r1, [sp, #4]
 800243a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800243c:	4604      	mov	r4, r0
 800243e:	4628      	mov	r0, r5
 8002440:	4798      	blx	r3
 8002442:	682b      	ldr	r3, [r5, #0]
 8002444:	9901      	ldr	r1, [sp, #4]
 8002446:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002448:	fb14 f400 	smulbb	r4, r4, r0
 800244c:	4628      	mov	r0, r5
 800244e:	4798      	blx	r3
 8002450:	b2a4      	uxth	r4, r4
 8002452:	4404      	add	r4, r0
 8002454:	f8a6 4046 	strh.w	r4, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002458:	b002      	add	sp, #8
 800245a:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 800245c:	2300      	movs	r3, #0
 800245e:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
    }
 8002462:	e7f9      	b.n	8002458 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x60>
 8002464:	20015028 	.word	0x20015028
 8002468:	20015024 	.word	0x20015024
 800246c:	0802345c 	.word	0x0802345c
 8002470:	0802349e 	.word	0x0802349e
 8002474:	080234d9 	.word	0x080234d9
 8002478:	2001502c 	.word	0x2001502c
 800247c:	20015030 	.word	0x20015030

08002480 <_ZN24ChooseTurnScreenViewBaseC1Ev>:
ChooseTurnScreenViewBase::ChooseTurnScreenViewBase() :
 8002480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002484:	4604      	mov	r4, r0
 8002486:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &ChooseTurnScreenViewBase::buttonCallbackHandler)
 8002488:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800248a:	2500      	movs	r5, #0
 800248c:	f00f ff18 	bl	80122c0 <_ZN8touchgfx6ScreenC1Ev>
 8002490:	4b65      	ldr	r3, [pc, #404]	; (8002628 <_ZN24ChooseTurnScreenViewBaseC1Ev+0x1a8>)
 8002492:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002494:	f849 3b40 	str.w	r3, [r9], #64
 8002498:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 800249c:	4648      	mov	r0, r9
 800249e:	f7ff ff95 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 80024a2:	4658      	mov	r0, fp
 80024a4:	f7ff ff92 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 80024a8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80024ac:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024b0:	4b5e      	ldr	r3, [pc, #376]	; (800262c <_ZN24ChooseTurnScreenViewBaseC1Ev+0x1ac>)
 80024b2:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : typedTextId(id)
 80024b6:	4b5e      	ldr	r3, [pc, #376]	; (8002630 <_ZN24ChooseTurnScreenViewBaseC1Ev+0x1b0>)
 80024b8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80024bc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024c0:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80024c4:	f04f 32ff 	mov.w	r2, #4294967295
 80024c8:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 80024cc:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80024d0:	f504 7794 	add.w	r7, r4, #296	; 0x128
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 80024d4:	e9c4 2536 	strd	r2, r5, [r4, #216]	; 0xd8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80024d8:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        : x(0), y(0), width(0), height(0)
 80024dc:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80024e0:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80024e4:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80024e8:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
        : color(col)
 80024ec:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 80024f0:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80024f4:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 80024f8:	4640      	mov	r0, r8
 80024fa:	f00c fdb1 	bl	800f060 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80024fe:	4638      	mov	r0, r7
 8002500:	f00c fdae 	bl	800f060 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002504:	4b4b      	ldr	r3, [pc, #300]	; (8002634 <_ZN24ChooseTurnScreenViewBaseC1Ev+0x1b4>)
 8002506:	e9c4 345c 	strd	r3, r4, [r4, #368]	; 0x170
 800250a:	4b4b      	ldr	r3, [pc, #300]	; (8002638 <_ZN24ChooseTurnScreenViewBaseC1Ev+0x1b8>)
    __background.setPosition(0, 0, 240, 320);
 800250c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002510:	e9c4 355e 	strd	r3, r5, [r4, #376]	; 0x178
 8002514:	9200      	str	r2, [sp, #0]
 8002516:	23f0      	movs	r3, #240	; 0xf0
 8002518:	462a      	mov	r2, r5
 800251a:	4629      	mov	r1, r5
 800251c:	4648      	mov	r0, r9
 800251e:	f7ff ff42 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002522:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002524:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8002528:	66a2      	str	r2, [r4, #104]	; 0x68
 800252a:	4649      	mov	r1, r9
 800252c:	4630      	mov	r0, r6
 800252e:	f00a fb1f 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setPosition(0, 0, 240, 320);
 8002532:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8002536:	23f0      	movs	r3, #240	; 0xf0
 8002538:	9200      	str	r2, [sp, #0]
 800253a:	4629      	mov	r1, r5
 800253c:	462a      	mov	r2, r5
 800253e:	4658      	mov	r0, fp
 8002540:	f7ff ff31 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002544:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
    buttonCallback(this, &ChooseTurnScreenViewBase::buttonCallbackHandler)
 8002548:	f104 0a98 	add.w	sl, r4, #152	; 0x98
 800254c:	f8c4 2094 	str.w	r2, [r4, #148]	; 0x94
 8002550:	4659      	mov	r1, fp
 8002552:	4630      	mov	r0, r6
 8002554:	f00a fb0c 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(68, 50);
 8002558:	4650      	mov	r0, sl
 800255a:	2232      	movs	r2, #50	; 0x32
 800255c:	2144      	movs	r1, #68	; 0x44
 800255e:	f7ff ff15 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002562:	f10d 0908 	add.w	r9, sp, #8
        color = newColor;
 8002566:	f04f 32ff 	mov.w	r2, #4294967295
 800256a:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800256e:	4651      	mov	r1, sl
 8002570:	4648      	mov	r0, r9
        linespace = space;
 8002572:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002576:	f00c f813 	bl	800e5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800257a:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800257e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002582:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002586:	f04f 0902 	mov.w	r9, #2
 800258a:	4b29      	ldr	r3, [pc, #164]	; (8002630 <_ZN24ChooseTurnScreenViewBaseC1Ev+0x1b0>)
 800258c:	9308      	str	r3, [sp, #32]
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_53H3));
 800258e:	a908      	add	r1, sp, #32
 8002590:	4650      	mov	r0, sl
 8002592:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002596:	f00c fa9d 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800259a:	4651      	mov	r1, sl
 800259c:	4630      	mov	r0, r6
 800259e:	f00a fae7 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(13, 142);
 80025a2:	4640      	mov	r0, r8
 80025a4:	228e      	movs	r2, #142	; 0x8e
 80025a6:	210d      	movs	r1, #13
 80025a8:	f7ff fef0 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80025ac:	f04f 0a01 	mov.w	sl, #1
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_FILL_PRESSED_ID));
 80025b0:	aa08      	add	r2, sp, #32
 80025b2:	a907      	add	r1, sp, #28
 80025b4:	4640      	mov	r0, r8
 80025b6:	f8ad a01c 	strh.w	sl, [sp, #28]
 80025ba:	f8ad 9020 	strh.w	r9, [sp, #32]
 80025be:	f00c fae6 	bl	800eb8e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 80025c2:	4640      	mov	r0, r8
class TypedText
 80025c4:	f8a4 a118 	strh.w	sl, [r4, #280]	; 0x118
 80025c8:	f7ff ff16 	bl	80023f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel1.setAction(buttonCallback);
 80025cc:	f504 7bb8 	add.w	fp, r4, #368	; 0x170
        color = col;
 80025d0:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80025d4:	e9c4 3347 	strd	r3, r3, [r4, #284]	; 0x11c
 80025d8:	4641      	mov	r1, r8
 80025da:	4630      	mov	r0, r6
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80025dc:	f8c4 b108 	str.w	fp, [r4, #264]	; 0x108
 80025e0:	f00a fac6 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1_1.setXY(132, 142);
 80025e4:	4638      	mov	r0, r7
 80025e6:	228e      	movs	r2, #142	; 0x8e
 80025e8:	2184      	movs	r1, #132	; 0x84
 80025ea:	f7ff fecf 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_SMALL_FILL_PRESSED_ID));
 80025ee:	aa08      	add	r2, sp, #32
 80025f0:	a907      	add	r1, sp, #28
 80025f2:	4638      	mov	r0, r7
 80025f4:	f8ad a01c 	strh.w	sl, [sp, #28]
 80025f8:	f8ad 9020 	strh.w	r9, [sp, #32]
 80025fc:	f00c fac7 	bl	800eb8e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002600:	4638      	mov	r0, r7
 8002602:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
 8002606:	f7ff fef7 	bl	80023f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800260a:	f04f 33ff 	mov.w	r3, #4294967295
 800260e:	4630      	mov	r0, r6
        colorPressed = col;
 8002610:	e9c4 3359 	strd	r3, r3, [r4, #356]	; 0x164
 8002614:	f8c4 b150 	str.w	fp, [r4, #336]	; 0x150
 8002618:	4639      	mov	r1, r7
 800261a:	f00a faa9 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800261e:	4620      	mov	r0, r4
 8002620:	b00b      	add	sp, #44	; 0x2c
 8002622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002626:	bf00      	nop
 8002628:	08023550 	.word	0x08023550
 800262c:	08024be0 	.word	0x08024be0
 8002630:	08023528 	.word	0x08023528
 8002634:	08023538 	.word	0x08023538
 8002638:	08002363 	.word	0x08002363

0800263c <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
 800263c:	b530      	push	{r4, r5, lr}
        boundingArea = calculateBoundingArea();
 800263e:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002640:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002642:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002644:	466d      	mov	r5, sp
 8002646:	4601      	mov	r1, r0
 8002648:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800264c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800264e:	4628      	mov	r0, r5
 8002650:	4798      	blx	r3
 8002652:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002656:	343c      	adds	r4, #60	; 0x3c
 8002658:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800265c:	b005      	add	sp, #20
 800265e:	bd30      	pop	{r4, r5, pc}

08002660 <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
 8002660:	b530      	push	{r4, r5, lr}
        boundingArea = calculateBoundingArea();
 8002662:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002664:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002666:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002668:	466d      	mov	r5, sp
 800266a:	4601      	mov	r1, r0
 800266c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002670:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002672:	4628      	mov	r0, r5
 8002674:	4798      	blx	r3
 8002676:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800267a:	343c      	adds	r4, #60	; 0x3c
 800267c:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002680:	b005      	add	sp, #20
 8002682:	bd30      	pop	{r4, r5, pc}

08002684 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002684:	2200      	movs	r2, #0
 8002686:	8002      	strh	r2, [r0, #0]
 8002688:	8042      	strh	r2, [r0, #2]
 800268a:	8082      	strh	r2, [r0, #4]
 800268c:	80c2      	strh	r2, [r0, #6]
    }
 800268e:	4770      	bx	lr

08002690 <_ZN8touchgfx8TextArea8setAlphaEh>:
        alpha = newAlpha;
 8002690:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002694:	4770      	bx	lr

08002696 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002696:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002698:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800269a:	4604      	mov	r4, r0
        setX(x);
 800269c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800269e:	4615      	mov	r5, r2
        setX(x);
 80026a0:	4798      	blx	r3
        setBaselineY(baselineY);
 80026a2:	6823      	ldr	r3, [r4, #0]
 80026a4:	4629      	mov	r1, r5
 80026a6:	4620      	mov	r0, r4
 80026a8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80026aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80026ae:	4718      	bx	r3

080026b0 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    }
 80026b0:	2000      	movs	r0, #0
 80026b2:	4770      	bx	lr

080026b4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80026b4:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80026b6:	4770      	bx	lr

080026b8 <_ZN21EndGameScreenViewBaseD1Ev>:
}

EndGameScreenViewBase::~EndGameScreenViewBase()
{

}
 80026b8:	4770      	bx	lr

080026ba <_ZN21EndGameScreenViewBase11setupScreenEv>:

void EndGameScreenViewBase::setupScreen()
{

}
 80026ba:	4770      	bx	lr

080026bc <_ZN8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80026bc:	4770      	bx	lr

080026be <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80026be:	4770      	bx	lr

080026c0 <_ZN8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80026c0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80026c2:	68c2      	ldr	r2, [r0, #12]
 80026c4:	6844      	ldr	r4, [r0, #4]
 80026c6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80026c8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80026ca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80026ce:	07d2      	lsls	r2, r2, #31
 80026d0:	bf48      	it	mi
 80026d2:	5962      	ldrmi	r2, [r4, r5]
 80026d4:	689b      	ldr	r3, [r3, #8]
    }
 80026d6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80026d8:	bf48      	it	mi
 80026da:	58d3      	ldrmi	r3, [r2, r3]
 80026dc:	4718      	bx	r3

080026de <_ZNK8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80026de:	6843      	ldr	r3, [r0, #4]
 80026e0:	b12b      	cbz	r3, 80026ee <_ZNK8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80026e2:	6883      	ldr	r3, [r0, #8]
 80026e4:	b92b      	cbnz	r3, 80026f2 <_ZNK8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80026e6:	68c0      	ldr	r0, [r0, #12]
 80026e8:	f000 0001 	and.w	r0, r0, #1
 80026ec:	4770      	bx	lr
 80026ee:	4618      	mov	r0, r3
 80026f0:	4770      	bx	lr
 80026f2:	2001      	movs	r0, #1
    }
 80026f4:	4770      	bx	lr

080026f6 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80026f6:	b510      	push	{r4, lr}
 80026f8:	214c      	movs	r1, #76	; 0x4c
 80026fa:	4604      	mov	r4, r0
 80026fc:	f01e ffd6 	bl	80216ac <_ZdlPvj>
 8002700:	4620      	mov	r0, r4
 8002702:	bd10      	pop	{r4, pc}

08002704 <_ZN8touchgfx8CallbackI21EndGameScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002704:	b510      	push	{r4, lr}
 8002706:	2110      	movs	r1, #16
 8002708:	4604      	mov	r4, r0
 800270a:	f01e ffcf 	bl	80216ac <_ZdlPvj>
 800270e:	4620      	mov	r0, r4
 8002710:	bd10      	pop	{r4, pc}

08002712 <_ZN21EndGameScreenViewBaseD0Ev>:
EndGameScreenViewBase::~EndGameScreenViewBase()
 8002712:	b510      	push	{r4, lr}
}
 8002714:	f44f 71cc 	mov.w	r1, #408	; 0x198
EndGameScreenViewBase::~EndGameScreenViewBase()
 8002718:	4604      	mov	r4, r0
}
 800271a:	f01e ffc7 	bl	80216ac <_ZdlPvj>
 800271e:	4620      	mov	r0, r4
 8002720:	bd10      	pop	{r4, pc}

08002722 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002722:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002724:	f7fe fcf8 	bl	8001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002728:	bd08      	pop	{r3, pc}
	...

0800272c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800272c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800272e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002730:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002732:	4b12      	ldr	r3, [pc, #72]	; (800277c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002734:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002736:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002738:	b28d      	uxth	r5, r1
 800273a:	b92b      	cbnz	r3, 8002748 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 800273c:	4b10      	ldr	r3, [pc, #64]	; (8002780 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800273e:	4a11      	ldr	r2, [pc, #68]	; (8002784 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002740:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002742:	4811      	ldr	r0, [pc, #68]	; (8002788 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002744:	f01f f862 	bl	802180c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002748:	4910      	ldr	r1, [pc, #64]	; (800278c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800274a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800274c:	8809      	ldrh	r1, [r1, #0]
 800274e:	4291      	cmp	r1, r2
 8002750:	d803      	bhi.n	800275a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002752:	4b0f      	ldr	r3, [pc, #60]	; (8002790 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002754:	4a0b      	ldr	r2, [pc, #44]	; (8002784 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002756:	216d      	movs	r1, #109	; 0x6d
 8002758:	e7f3      	b.n	8002742 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800275a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800275e:	4b0d      	ldr	r3, [pc, #52]	; (8002794 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002760:	681b      	ldr	r3, [r3, #0]
 8002762:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002766:	6803      	ldr	r3, [r0, #0]
 8002768:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800276a:	4798      	blx	r3
 800276c:	1a28      	subs	r0, r5, r0
 800276e:	b201      	sxth	r1, r0
 8002770:	4633      	mov	r3, r6
 8002772:	4620      	mov	r0, r4
    }
 8002774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002778:	4718      	bx	r3
 800277a:	bf00      	nop
 800277c:	20015024 	.word	0x20015024
 8002780:	0802345c 	.word	0x0802345c
 8002784:	0802349e 	.word	0x0802349e
 8002788:	080234d9 	.word	0x080234d9
 800278c:	20015028 	.word	0x20015028
 8002790:	08023584 	.word	0x08023584
 8002794:	2001502c 	.word	0x2001502c

08002798 <_ZN21EndGameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void EndGameScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 8002798:	3098      	adds	r0, #152	; 0x98
 800279a:	4288      	cmp	r0, r1
{
 800279c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel1)
 800279e:	d105      	bne.n	80027ac <_ZN21EndGameScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~EndGameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80027a0:	f00e f978 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel1 clicked change screen to HomeScreen
        //Go to HomeScreen with screen transition towards East
        application().gotoHomeScreenScreenSlideTransitionEast();
    }
}
 80027a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoHomeScreenScreenSlideTransitionEast();
 80027a8:	f000 baf4 	b.w	8002d94 <_ZN23FrontendApplicationBase39gotoHomeScreenScreenSlideTransitionEastEv>
}
 80027ac:	bd08      	pop	{r3, pc}

080027ae <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80027ae:	2200      	movs	r2, #0
 80027b0:	f04f 31ff 	mov.w	r1, #4294967295
 80027b4:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80027b8:	6082      	str	r2, [r0, #8]
    }
 80027ba:	4770      	bx	lr

080027bc <_ZN8touchgfx8TextAreaC1Ev>:
          visible(true)
 80027bc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80027c0:	8481      	strh	r1, [r0, #36]	; 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027c2:	490d      	ldr	r1, [pc, #52]	; (80027f8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80027c4:	6001      	str	r1, [r0, #0]
        : typedTextId(id)
 80027c6:	490d      	ldr	r1, [pc, #52]	; (80027fc <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 80027c8:	6281      	str	r1, [r0, #40]	; 0x28
 80027ca:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80027ce:	8581      	strh	r1, [r0, #44]	; 0x2c
 80027d0:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 80027d4:	2200      	movs	r2, #0
 80027d6:	6341      	str	r1, [r0, #52]	; 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80027d8:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 80027dc:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80027e0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80027e4:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80027e8:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 80027ec:	e9c0 1210 	strd	r1, r2, [r0, #64]	; 0x40
        : color(col)
 80027f0:	6302      	str	r2, [r0, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80027f2:	8702      	strh	r2, [r0, #56]	; 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80027f4:	63c2      	str	r2, [r0, #60]	; 0x3c
    }
 80027f6:	4770      	bx	lr
 80027f8:	08024be0 	.word	0x08024be0
 80027fc:	08023528 	.word	0x08023528

08002800 <_ZN21EndGameScreenViewBaseC1Ev>:
EndGameScreenViewBase::EndGameScreenViewBase() :
 8002800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002804:	4604      	mov	r4, r0
 8002806:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &EndGameScreenViewBase::buttonCallbackHandler)
 8002808:	46a2      	mov	sl, r4
 800280a:	2500      	movs	r5, #0
 800280c:	f00f fd58 	bl	80122c0 <_ZN8touchgfx6ScreenC1Ev>
 8002810:	4b6a      	ldr	r3, [pc, #424]	; (80029bc <_ZN21EndGameScreenViewBaseC1Ev+0x1bc>)
 8002812:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002814:	f84a 3b40 	str.w	r3, [sl], #64
 8002818:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 800281c:	4650      	mov	r0, sl
 800281e:	f104 0998 	add.w	r9, r4, #152	; 0x98
 8002822:	f7ff fdd3 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 8002826:	4658      	mov	r0, fp
 8002828:	f7ff fdd0 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 800282c:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8002830:	4648      	mov	r0, r9
 8002832:	f00c fc15 	bl	800f060 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002836:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800283a:	4640      	mov	r0, r8
 800283c:	f7ff ffbe 	bl	80027bc <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8002840:	4638      	mov	r0, r7
 8002842:	f7ff ffbb 	bl	80027bc <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002846:	4b5e      	ldr	r3, [pc, #376]	; (80029c0 <_ZN21EndGameScreenViewBaseC1Ev+0x1c0>)
 8002848:	f8c4 3128 	str.w	r3, [r4, #296]	; 0x128
        : pobject(pObject), pmemfun(pmemfun_1)
 800284c:	4b5d      	ldr	r3, [pc, #372]	; (80029c4 <_ZN21EndGameScreenViewBaseC1Ev+0x1c4>)
 800284e:	f8c4 5170 	str.w	r5, [r4, #368]	; 0x170
 8002852:	e9c4 3462 	strd	r3, r4, [r4, #392]	; 0x188
 8002856:	4b5c      	ldr	r3, [pc, #368]	; (80029c8 <_ZN21EndGameScreenViewBaseC1Ev+0x1c8>)
 8002858:	e9c4 3564 	strd	r3, r5, [r4, #400]	; 0x190
    __background.setPosition(0, 0, 240, 320);
 800285c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002860:	462a      	mov	r2, r5
 8002862:	4629      	mov	r1, r5
 8002864:	4650      	mov	r0, sl
 8002866:	9300      	str	r3, [sp, #0]
 8002868:	23f0      	movs	r3, #240	; 0xf0
 800286a:	f7ff fd9c 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800286e:	1d26      	adds	r6, r4, #4
 8002870:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002874:	4651      	mov	r1, sl
 8002876:	66a3      	str	r3, [r4, #104]	; 0x68
 8002878:	4630      	mov	r0, r6
 800287a:	f00a f979 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setPosition(0, 0, 240, 320);
 800287e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002882:	462a      	mov	r2, r5
 8002884:	4629      	mov	r1, r5
 8002886:	4658      	mov	r0, fp
 8002888:	9300      	str	r3, [sp, #0]
 800288a:	23f0      	movs	r3, #240	; 0xf0
 800288c:	f7ff fd8b 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002890:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002894:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002898:	4659      	mov	r1, fp
 800289a:	4630      	mov	r0, r6
 800289c:	f00a f968 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 191);
 80028a0:	4648      	mov	r0, r9
 80028a2:	22bf      	movs	r2, #191	; 0xbf
 80028a4:	2121      	movs	r1, #33	; 0x21
 80028a6:	f7ff fd71 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 80028aa:	2303      	movs	r3, #3
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID));
 80028ac:	aa08      	add	r2, sp, #32
 80028ae:	a907      	add	r1, sp, #28
 80028b0:	4648      	mov	r0, r9
 80028b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80028b6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80028ba:	f00c f968 	bl	800eb8e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80028be:	2306      	movs	r3, #6
        updateTextPosition();
 80028c0:	4648      	mov	r0, r9
 80028c2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80028c6:	f7ff fd97 	bl	80023f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80028ca:	f04f 3aff 	mov.w	sl, #4294967295
    buttonWithLabel1.setAction(buttonCallback);
 80028ce:	f504 73c4 	add.w	r3, r4, #392	; 0x188
 80028d2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80028d6:	4649      	mov	r1, r9
 80028d8:	4630      	mov	r0, r6
        colorPressed = col;
 80028da:	e9c4 aa35 	strd	sl, sl, [r4, #212]	; 0xd4
 80028de:	f00a f947 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
 80028e2:	f10d 0908 	add.w	r9, sp, #8
    textArea1.setXY(53, 38);
 80028e6:	2226      	movs	r2, #38	; 0x26
 80028e8:	2135      	movs	r1, #53	; 0x35
 80028ea:	4640      	mov	r0, r8
 80028ec:	f7ff fd4e 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 80028f0:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80028f4:	4641      	mov	r1, r8
 80028f6:	4648      	mov	r0, r9
        color = newColor;
 80028f8:	f8c4 a110 	str.w	sl, [r4, #272]	; 0x110
        boundingArea = calculateBoundingArea();
 80028fc:	f00b fe50 	bl	800e5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002900:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002904:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002908:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800290c:	f04f 0b0a 	mov.w	fp, #10
 8002910:	4b2e      	ldr	r3, [pc, #184]	; (80029cc <_ZN21EndGameScreenViewBaseC1Ev+0x1cc>)
 8002912:	9308      	str	r3, [sp, #32]
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FLUU));
 8002914:	a908      	add	r1, sp, #32
 8002916:	4640      	mov	r0, r8
 8002918:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 800291c:	f00c f8da 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002920:	4641      	mov	r1, r8
 8002922:	4630      	mov	r0, r6
 8002924:	f00a f924 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setPosition(33, 109, 185, 37);
 8002928:	2325      	movs	r3, #37	; 0x25
 800292a:	226d      	movs	r2, #109	; 0x6d
 800292c:	9300      	str	r3, [sp, #0]
 800292e:	2121      	movs	r1, #33	; 0x21
 8002930:	23b9      	movs	r3, #185	; 0xb9
 8002932:	4638      	mov	r0, r7
 8002934:	f7ff fd37 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002938:	f8d4 3128 	ldr.w	r3, [r4, #296]	; 0x128
        linespace = space;
 800293c:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8002940:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002944:	f8c4 a158 	str.w	sl, [r4, #344]	; 0x158
        boundingArea = calculateBoundingArea();
 8002948:	4639      	mov	r1, r7
 800294a:	4648      	mov	r0, r9
 800294c:	4798      	blx	r3
 800294e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8002952:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8002956:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800295a:	4b1d      	ldr	r3, [pc, #116]	; (80029d0 <_ZN21EndGameScreenViewBaseC1Ev+0x1d0>)
 800295c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T_PLAYER1).getText());
 800295e:	f504 75ba 	add.w	r5, r4, #372	; 0x174
 8002962:	b92b      	cbnz	r3, 8002970 <_ZN21EndGameScreenViewBaseC1Ev+0x170>
 8002964:	4b1b      	ldr	r3, [pc, #108]	; (80029d4 <_ZN21EndGameScreenViewBaseC1Ev+0x1d4>)
 8002966:	4a1c      	ldr	r2, [pc, #112]	; (80029d8 <_ZN21EndGameScreenViewBaseC1Ev+0x1d8>)
 8002968:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800296a:	481c      	ldr	r0, [pc, #112]	; (80029dc <_ZN21EndGameScreenViewBaseC1Ev+0x1dc>)
 800296c:	f01e ff4e 	bl	802180c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002970:	4b1b      	ldr	r3, [pc, #108]	; (80029e0 <_ZN21EndGameScreenViewBaseC1Ev+0x1e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002972:	881b      	ldrh	r3, [r3, #0]
 8002974:	2b09      	cmp	r3, #9
 8002976:	d803      	bhi.n	8002980 <_ZN21EndGameScreenViewBaseC1Ev+0x180>
 8002978:	4b1a      	ldr	r3, [pc, #104]	; (80029e4 <_ZN21EndGameScreenViewBaseC1Ev+0x1e4>)
 800297a:	4a17      	ldr	r2, [pc, #92]	; (80029d8 <_ZN21EndGameScreenViewBaseC1Ev+0x1d8>)
 800297c:	2161      	movs	r1, #97	; 0x61
 800297e:	e7f4      	b.n	800296a <_ZN21EndGameScreenViewBaseC1Ev+0x16a>
        return texts->getText(typedTextId);
 8002980:	4b19      	ldr	r3, [pc, #100]	; (80029e8 <_ZN21EndGameScreenViewBaseC1Ev+0x1e8>)
 8002982:	2109      	movs	r1, #9
 8002984:	6818      	ldr	r0, [r3, #0]
 8002986:	f002 fe7f 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800298a:	4a18      	ldr	r2, [pc, #96]	; (80029ec <_ZN21EndGameScreenViewBaseC1Ev+0x1ec>)
 800298c:	4603      	mov	r3, r0
 800298e:	4659      	mov	r1, fp
 8002990:	4628      	mov	r0, r5
 8002992:	f011 f979 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002996:	4b0d      	ldr	r3, [pc, #52]	; (80029cc <_ZN21EndGameScreenViewBaseC1Ev+0x1cc>)
 8002998:	9308      	str	r3, [sp, #32]
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4PHE));
 800299a:	a908      	add	r1, sp, #32
 800299c:	2307      	movs	r3, #7
 800299e:	4638      	mov	r0, r7
        wc1 = value;
 80029a0:	f8c4 5170 	str.w	r5, [r4, #368]	; 0x170
 80029a4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80029a8:	f00c f894 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80029ac:	4630      	mov	r0, r6
 80029ae:	4639      	mov	r1, r7
 80029b0:	f00a f8de 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80029b4:	4620      	mov	r0, r4
 80029b6:	b00b      	add	sp, #44	; 0x2c
 80029b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029bc:	080236b0 	.word	0x080236b0
 80029c0:	08023608 	.word	0x08023608
 80029c4:	08023698 	.word	0x08023698
 80029c8:	08002799 	.word	0x08002799
 80029cc:	08023528 	.word	0x08023528
 80029d0:	20015024 	.word	0x20015024
 80029d4:	0802345c 	.word	0x0802345c
 80029d8:	080235c2 	.word	0x080235c2
 80029dc:	080234d9 	.word	0x080234d9
 80029e0:	20015028 	.word	0x20015028
 80029e4:	08023584 	.word	0x08023584
 80029e8:	20015030 	.word	0x20015030
 80029ec:	080235fa 	.word	0x080235fa

080029f0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80029f0:	4770      	bx	lr

080029f2 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80029f2:	4770      	bx	lr

080029f4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80029f4:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80029f8:	6808      	ldr	r0, [r1, #0]
 80029fa:	6849      	ldr	r1, [r1, #4]
 80029fc:	c303      	stmia	r3!, {r0, r1}
    }
 80029fe:	4770      	bx	lr

08002a00 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002a00:	4770      	bx	lr

08002a02 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002a02:	4770      	bx	lr

08002a04 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002a04:	6041      	str	r1, [r0, #4]
    }
 8002a06:	4770      	bx	lr

08002a08 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002a08:	4770      	bx	lr
	...

08002a0c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a0c:	4b06      	ldr	r3, [pc, #24]	; (8002a28 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002a0e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002a12:	2300      	movs	r3, #0
 8002a14:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// HomeScreen

void FrontendApplicationBase::gotoHomeScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHomeScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002a18:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002a1c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002a20:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoHomeScreenScreenNoTransition();
    }
 8002a24:	4770      	bx	lr
 8002a26:	bf00      	nop
 8002a28:	08002bad 	.word	0x08002bad

08002a2c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002a2c:	2301      	movs	r3, #1
 8002a2e:	7203      	strb	r3, [r0, #8]
    }
 8002a30:	4770      	bx	lr

08002a32 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8002a32:	4770      	bx	lr

08002a34 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002a34:	4770      	bx	lr

08002a36 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002a36:	4770      	bx	lr

08002a38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002a38:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002a3a:	68c2      	ldr	r2, [r0, #12]
 8002a3c:	6841      	ldr	r1, [r0, #4]
 8002a3e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002a40:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002a42:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002a46:	07d2      	lsls	r2, r2, #31
 8002a48:	bf48      	it	mi
 8002a4a:	590a      	ldrmi	r2, [r1, r4]
 8002a4c:	689b      	ldr	r3, [r3, #8]
    }
 8002a4e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002a52:	bf48      	it	mi
 8002a54:	58d3      	ldrmi	r3, [r2, r3]
 8002a56:	4718      	bx	r3

08002a58 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002a58:	6843      	ldr	r3, [r0, #4]
 8002a5a:	b12b      	cbz	r3, 8002a68 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002a5c:	6883      	ldr	r3, [r0, #8]
 8002a5e:	b92b      	cbnz	r3, 8002a6c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002a60:	68c0      	ldr	r0, [r0, #12]
 8002a62:	f000 0001 	and.w	r0, r0, #1
 8002a66:	4770      	bx	lr
 8002a68:	4618      	mov	r0, r3
 8002a6a:	4770      	bx	lr
 8002a6c:	2001      	movs	r0, #1
    }
 8002a6e:	4770      	bx	lr

08002a70 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002a70:	b510      	push	{r4, lr}
 8002a72:	210c      	movs	r1, #12
 8002a74:	4604      	mov	r4, r0
 8002a76:	f01e fe19 	bl	80216ac <_ZdlPvj>
 8002a7a:	4620      	mov	r0, r4
 8002a7c:	bd10      	pop	{r4, pc}

08002a7e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a7e:	b510      	push	{r4, lr}
 8002a80:	2110      	movs	r1, #16
 8002a82:	4604      	mov	r4, r0
 8002a84:	f01e fe12 	bl	80216ac <_ZdlPvj>
 8002a88:	4620      	mov	r0, r4
 8002a8a:	bd10      	pop	{r4, pc}

08002a8c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002a8c:	b510      	push	{r4, lr}
 8002a8e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002a92:	4604      	mov	r4, r0
 8002a94:	f01e fe0a 	bl	80216ac <_ZdlPvj>
 8002a98:	4620      	mov	r0, r4
 8002a9a:	bd10      	pop	{r4, pc}

08002a9c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8002a9c:	b510      	push	{r4, lr}
 8002a9e:	2140      	movs	r1, #64	; 0x40
 8002aa0:	4604      	mov	r4, r0
 8002aa2:	f01e fe03 	bl	80216ac <_ZdlPvj>
 8002aa6:	4620      	mov	r0, r4
 8002aa8:	bd10      	pop	{r4, pc}

08002aaa <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002aaa:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8002aac:	f00d fff2 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8002ab0:	6803      	ldr	r3, [r0, #0]
    }
 8002ab2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8002ab6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002ab8:	4718      	bx	r3
	...

08002abc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002abc:	4b05      	ldr	r3, [pc, #20]	; (8002ad4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 8002abe:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 8002ac0:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8002ac2:	b12b      	cbz	r3, 8002ad0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 8002ac4:	6840      	ldr	r0, [r0, #4]
 8002ac6:	b118      	cbz	r0, 8002ad0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 8002ac8:	6803      	ldr	r3, [r0, #0]
 8002aca:	310c      	adds	r1, #12
 8002acc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002ace:	4718      	bx	r3
        }
    }
 8002ad0:	4770      	bx	lr
 8002ad2:	bf00      	nop
 8002ad4:	20014fd3 	.word	0x20014fd3

08002ad8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 8002ad8:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 8002ada:	b570      	push	{r4, r5, r6, lr}
 8002adc:	4605      	mov	r5, r0
        if (done)
 8002ade:	b9bb      	cbnz	r3, 8002b10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 8002ae0:	6840      	ldr	r0, [r0, #4]
 8002ae2:	6803      	ldr	r3, [r0, #0]
 8002ae4:	69db      	ldr	r3, [r3, #28]
 8002ae6:	4798      	blx	r3
 8002ae8:	4604      	mov	r4, r0
        while (d)
 8002aea:	b14c      	cbz	r4, 8002b00 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x28>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 8002aec:	88a1      	ldrh	r1, [r4, #4]
 8002aee:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 8002af0:	1ac9      	subs	r1, r1, r3
 8002af2:	6823      	ldr	r3, [r4, #0]
 8002af4:	4620      	mov	r0, r4
 8002af6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002af8:	b209      	sxth	r1, r1
 8002afa:	4798      	blx	r3
        return nextSibling;
 8002afc:	69a4      	ldr	r4, [r4, #24]
        while (d)
 8002afe:	e7f4      	b.n	8002aea <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 8002b00:	6868      	ldr	r0, [r5, #4]
 8002b02:	6803      	ldr	r3, [r0, #0]
 8002b04:	f105 010c 	add.w	r1, r5, #12
 8002b08:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 8002b0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 8002b0e:	4718      	bx	r3
    }
 8002b10:	bd70      	pop	{r4, r5, r6, pc}

08002b12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002b12:	b570      	push	{r4, r5, r6, lr}
 8002b14:	4604      	mov	r4, r0
        animationCounter++;
 8002b16:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 8002b1a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 8002b1e:	3001      	adds	r0, #1
 8002b20:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8002b22:	4298      	cmp	r0, r3
        animationCounter++;
 8002b24:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 8002b28:	d905      	bls.n	8002b36 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 8002b2a:	2301      	movs	r3, #1
 8002b2c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002b2e:	2300      	movs	r3, #0
 8002b30:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8002b34:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002b36:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 8002b3a:	2100      	movs	r1, #0
 8002b3c:	f00f fd72 	bl	8012624 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8002b40:	f010 0201 	ands.w	r2, r0, #1
 8002b44:	b283      	uxth	r3, r0
 8002b46:	d006      	beq.n	8002b56 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002b48:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002b4c:	2800      	cmp	r0, #0
 8002b4e:	bfd8      	it	le
 8002b50:	460a      	movle	r2, r1
 8002b52:	1898      	adds	r0, r3, r2
 8002b54:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 8002b56:	8a23      	ldrh	r3, [r4, #16]
 8002b58:	1ac0      	subs	r0, r0, r3
 8002b5a:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8002b5c:	6860      	ldr	r0, [r4, #4]
 8002b5e:	6803      	ldr	r3, [r0, #0]
 8002b60:	69db      	ldr	r3, [r3, #28]
 8002b62:	4798      	blx	r3
 8002b64:	4605      	mov	r5, r0
        while (d)
 8002b66:	b14d      	cbz	r5, 8002b7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 8002b68:	88a9      	ldrh	r1, [r5, #4]
 8002b6a:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8002b6c:	4419      	add	r1, r3
 8002b6e:	682b      	ldr	r3, [r5, #0]
 8002b70:	4628      	mov	r0, r5
 8002b72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b74:	b209      	sxth	r1, r1
 8002b76:	4798      	blx	r3
 8002b78:	69ad      	ldr	r5, [r5, #24]
        while (d)
 8002b7a:	e7f4      	b.n	8002b66 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 8002b7c:	6860      	ldr	r0, [r4, #4]
 8002b7e:	6803      	ldr	r3, [r0, #0]
    }
 8002b80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8002b84:	695b      	ldr	r3, [r3, #20]
 8002b86:	4718      	bx	r3

08002b88 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002b88:	b510      	push	{r4, lr}
 8002b8a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002b8c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8002b90:	b158      	cbz	r0, 8002baa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002b92:	6803      	ldr	r3, [r0, #0]
 8002b94:	68db      	ldr	r3, [r3, #12]
 8002b96:	4798      	blx	r3
 8002b98:	b138      	cbz	r0, 8002baa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002b9a:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8002b9e:	6803      	ldr	r3, [r0, #0]
 8002ba0:	689b      	ldr	r3, [r3, #8]
 8002ba2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002ba4:	2300      	movs	r3, #0
 8002ba6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8002baa:	bd10      	pop	{r4, pc}

08002bac <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoHomeScreenScreenNoTransitionImpl()
{
 8002bac:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<HomeScreenView, HomeScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002bb0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8002bb4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002bb6:	68a8      	ldr	r0, [r5, #8]
 8002bb8:	6803      	ldr	r3, [r0, #0]
 8002bba:	6a1b      	ldr	r3, [r3, #32]
 8002bbc:	4798      	blx	r3
 8002bbe:	f5b0 7ff4 	cmp.w	r0, #488	; 0x1e8
 8002bc2:	d205      	bcs.n	8002bd0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x24>
 8002bc4:	4b45      	ldr	r3, [pc, #276]	; (8002cdc <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x130>)
 8002bc6:	4a46      	ldr	r2, [pc, #280]	; (8002ce0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x134>)
 8002bc8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002bca:	4846      	ldr	r0, [pc, #280]	; (8002ce4 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x138>)
 8002bcc:	f01e fe1e 	bl	802180c <__assert_func>
 8002bd0:	6868      	ldr	r0, [r5, #4]
 8002bd2:	6803      	ldr	r3, [r0, #0]
 8002bd4:	6a1b      	ldr	r3, [r3, #32]
 8002bd6:	4798      	blx	r3
 8002bd8:	280f      	cmp	r0, #15
 8002bda:	d803      	bhi.n	8002be4 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x38>
 8002bdc:	4b42      	ldr	r3, [pc, #264]	; (8002ce8 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x13c>)
 8002bde:	4a40      	ldr	r2, [pc, #256]	; (8002ce0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x134>)
 8002be0:	21a4      	movs	r1, #164	; 0xa4
 8002be2:	e7f2      	b.n	8002bca <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002be4:	68e8      	ldr	r0, [r5, #12]
 8002be6:	6803      	ldr	r3, [r0, #0]
 8002be8:	6a1b      	ldr	r3, [r3, #32]
 8002bea:	4798      	blx	r3
 8002bec:	280b      	cmp	r0, #11
 8002bee:	d803      	bhi.n	8002bf8 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x4c>
 8002bf0:	4b3e      	ldr	r3, [pc, #248]	; (8002cec <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x140>)
 8002bf2:	4a3b      	ldr	r2, [pc, #236]	; (8002ce0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x134>)
 8002bf4:	21a5      	movs	r1, #165	; 0xa5
 8002bf6:	e7e8      	b.n	8002bca <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002bf8:	f00d ff4c 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002bfc:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8002cf4 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002c00:	3004      	adds	r0, #4
 8002c02:	f00d ff85 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002c06:	f8d9 0000 	ldr.w	r0, [r9]
 8002c0a:	b110      	cbz	r0, 8002c12 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002c0c:	6803      	ldr	r3, [r0, #0]
 8002c0e:	68db      	ldr	r3, [r3, #12]
 8002c10:	4798      	blx	r3
    if (*currentTrans)
 8002c12:	f8d9 0000 	ldr.w	r0, [r9]
 8002c16:	b110      	cbz	r0, 8002c1e <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002c18:	6803      	ldr	r3, [r0, #0]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	4798      	blx	r3
    if (*currentScreen)
 8002c1e:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002cf8 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x14c>
 8002c22:	f8d8 0000 	ldr.w	r0, [r8]
 8002c26:	b110      	cbz	r0, 8002c2e <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002c28:	6803      	ldr	r3, [r0, #0]
 8002c2a:	695b      	ldr	r3, [r3, #20]
 8002c2c:	4798      	blx	r3
    if (*currentPresenter)
 8002c2e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c32:	b110      	cbz	r0, 8002c3a <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002c34:	6803      	ldr	r3, [r0, #0]
 8002c36:	685b      	ldr	r3, [r3, #4]
 8002c38:	4798      	blx	r3
    if (*currentScreen)
 8002c3a:	f8d8 0000 	ldr.w	r0, [r8]
 8002c3e:	b110      	cbz	r0, 8002c46 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002c40:	6803      	ldr	r3, [r0, #0]
 8002c42:	681b      	ldr	r3, [r3, #0]
 8002c44:	4798      	blx	r3
    if (*currentPresenter)
 8002c46:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002c4a:	b110      	cbz	r0, 8002c52 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002c4c:	6803      	ldr	r3, [r0, #0]
 8002c4e:	689b      	ldr	r3, [r3, #8]
 8002c50:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c52:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002c54:	6803      	ldr	r3, [r0, #0]
 8002c56:	2100      	movs	r1, #0
 8002c58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c5a:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002c5c:	f04f 0b00 	mov.w	fp, #0
 8002c60:	4b23      	ldr	r3, [pc, #140]	; (8002cf0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x144>)
 8002c62:	6003      	str	r3, [r0, #0]
 8002c64:	4604      	mov	r4, r0
 8002c66:	f8c0 b004 	str.w	fp, [r0, #4]
 8002c6a:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c6e:	68a8      	ldr	r0, [r5, #8]
 8002c70:	6803      	ldr	r3, [r0, #0]
 8002c72:	4659      	mov	r1, fp
 8002c74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c76:	4798      	blx	r3
 8002c78:	4606      	mov	r6, r0
 8002c7a:	f003 fcb3 	bl	80065e4 <_ZN14HomeScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c7e:	6868      	ldr	r0, [r5, #4]
 8002c80:	6803      	ldr	r3, [r0, #0]
 8002c82:	4659      	mov	r1, fp
 8002c84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c86:	4798      	blx	r3
 8002c88:	4631      	mov	r1, r6
 8002c8a:	4605      	mov	r5, r0
 8002c8c:	f003 fc78 	bl	8006580 <_ZN19HomeScreenPresenterC1ER14HomeScreenView>
    *currentTrans = newTransition;
 8002c90:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002c94:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002c98:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002c9c:	b1e5      	cbz	r5, 8002cd8 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0x12c>
 8002c9e:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002ca0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002ca4:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002ca6:	f8c5 a008 	str.w	sl, [r5, #8]
 8002caa:	4630      	mov	r0, r6
 8002cac:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002cae:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002cb0:	4798      	blx	r3
    newPresenter->activate();
 8002cb2:	682b      	ldr	r3, [r5, #0]
 8002cb4:	4628      	mov	r0, r5
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002cba:	4621      	mov	r1, r4
 8002cbc:	4630      	mov	r0, r6
 8002cbe:	f00f fcab 	bl	8012618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002cc2:	6823      	ldr	r3, [r4, #0]
 8002cc4:	4620      	mov	r0, r4
 8002cc6:	691b      	ldr	r3, [r3, #16]
 8002cc8:	4798      	blx	r3
    newTransition->invalidate();
 8002cca:	6823      	ldr	r3, [r4, #0]
 8002ccc:	695b      	ldr	r3, [r3, #20]
 8002cce:	4620      	mov	r0, r4
}
 8002cd0:	b001      	add	sp, #4
 8002cd2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002cd6:	4718      	bx	r3
    model->bind(newPresenter);
 8002cd8:	462b      	mov	r3, r5
 8002cda:	e7e1      	b.n	8002ca0 <_ZN23FrontendApplicationBase36gotoHomeScreenScreenNoTransitionImplEv+0xf4>
 8002cdc:	080236dc 	.word	0x080236dc
 8002ce0:	0802376a 	.word	0x0802376a
 8002ce4:	08023874 	.word	0x08023874
 8002ce8:	080238bb 	.word	0x080238bb
 8002cec:	0802395e 	.word	0x0802395e
 8002cf0:	08024144 	.word	0x08024144
 8002cf4:	20015014 	.word	0x20015014
 8002cf8:	20015010 	.word	0x20015010

08002cfc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002cfc:	4b04      	ldr	r3, [pc, #16]	; (8002d10 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8002d04:	b10a      	cbz	r2, 8002d0a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002d06:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002d08:	b900      	cbnz	r0, 8002d0c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8002d0a:	6898      	ldr	r0, [r3, #8]
    }
 8002d0c:	4770      	bx	lr
 8002d0e:	bf00      	nop
 8002d10:	20014fd4 	.word	0x20014fd4

08002d14 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d16:	4604      	mov	r4, r0
 8002d18:	4617      	mov	r7, r2
 8002d1a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002d1c:	f00d ffc6 	bl	8010cac <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002d20:	4b10      	ldr	r3, [pc, #64]	; (8002d64 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002d22:	601c      	str	r4, [r3, #0]
      model(m)
 8002d24:	4b10      	ldr	r3, [pc, #64]	; (8002d68 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002d26:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002d28:	4b10      	ldr	r3, [pc, #64]	; (8002d6c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
          pendingScreenTransitionCallback(0)
 8002d2a:	2500      	movs	r5, #0
 8002d2c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8002d30:	4b0f      	ldr	r3, [pc, #60]	; (8002d70 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002d32:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002d36:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002d38:	6803      	ldr	r3, [r0, #0]
 8002d3a:	2101      	movs	r1, #1
 8002d3c:	689b      	ldr	r3, [r3, #8]
 8002d3e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8002d42:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002d46:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002d48:	4628      	mov	r0, r5
 8002d4a:	f002 fc61 	bl	8005610 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002d4e:	f7ff ffd5 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 8002d52:	f017 f93a 	bl	8019fca <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002d56:	f7ff ffd1 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 8002d5a:	f017 f9b1 	bl	801a0c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8002d5e:	4620      	mov	r0, r4
 8002d60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002d62:	bf00      	nop
 8002d64:	20015020 	.word	0x20015020
 8002d68:	080240f0 	.word	0x080240f0
 8002d6c:	080240d8 	.word	0x080240d8
 8002d70:	20014fd4 	.word	0x20014fd4

08002d74 <_ZN23FrontendApplicationBase32gotoHomeScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002d74:	4b06      	ldr	r3, [pc, #24]	; (8002d90 <_ZN23FrontendApplicationBase32gotoHomeScreenScreenNoTransitionEv+0x1c>)
 8002d76:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002d7a:	2300      	movs	r3, #0
 8002d7c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8002d80:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002d84:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002d88:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002d8c:	4770      	bx	lr
 8002d8e:	bf00      	nop
 8002d90:	08002bad 	.word	0x08002bad

08002d94 <_ZN23FrontendApplicationBase39gotoHomeScreenScreenSlideTransitionEastEv>:
 8002d94:	4b06      	ldr	r3, [pc, #24]	; (8002db0 <_ZN23FrontendApplicationBase39gotoHomeScreenScreenSlideTransitionEastEv+0x1c>)
 8002d96:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002d9a:	2300      	movs	r3, #0
 8002d9c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150

void FrontendApplicationBase::gotoHomeScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoHomeScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002da0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002da4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002da8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002dac:	4770      	bx	lr
 8002dae:	bf00      	nop
 8002db0:	08003511 	.word	0x08003511

08002db4 <_ZN23FrontendApplicationBase42gotoLoadingScreenScreenSlideTransitionEastEv>:
 8002db4:	4b06      	ldr	r3, [pc, #24]	; (8002dd0 <_ZN23FrontendApplicationBase42gotoLoadingScreenScreenSlideTransitionEastEv+0x1c>)
 8002db6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002dba:	2300      	movs	r3, #0
 8002dbc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// LoadingScreen

void FrontendApplicationBase::gotoLoadingScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoLoadingScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002dc0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002dc4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002dc8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002dcc:	4770      	bx	lr
 8002dce:	bf00      	nop
 8002dd0:	080033d1 	.word	0x080033d1

08002dd4 <_ZN23FrontendApplicationBase45gotoChooseTurnScreenScreenSlideTransitionEastEv>:
 8002dd4:	4b06      	ldr	r3, [pc, #24]	; (8002df0 <_ZN23FrontendApplicationBase45gotoChooseTurnScreenScreenSlideTransitionEastEv+0x1c>)
 8002dd6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002dda:	2300      	movs	r3, #0
 8002ddc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// ChooseTurnScreen

void FrontendApplicationBase::gotoChooseTurnScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoChooseTurnScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002de0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002de4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002de8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002dec:	4770      	bx	lr
 8002dee:	bf00      	nop
 8002df0:	08003291 	.word	0x08003291

08002df4 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>:
 8002df4:	4b06      	ldr	r3, [pc, #24]	; (8002e10 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv+0x1c>)
 8002df6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002dfa:	2300      	movs	r3, #0
 8002dfc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// GameScreen

void FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGameScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002e00:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002e04:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002e08:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002e0c:	4770      	bx	lr
 8002e0e:	bf00      	nop
 8002e10:	08003151 	.word	0x08003151

08002e14 <_ZN23FrontendApplicationBase43gotoOpponentScreenScreenSlideTransitionEastEv>:
 8002e14:	4b06      	ldr	r3, [pc, #24]	; (8002e30 <_ZN23FrontendApplicationBase43gotoOpponentScreenScreenSlideTransitionEastEv+0x1c>)
 8002e16:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002e1a:	2300      	movs	r3, #0
 8002e1c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// OpponentScreen

void FrontendApplicationBase::gotoOpponentScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoOpponentScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002e20:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002e24:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002e28:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002e2c:	4770      	bx	lr
 8002e2e:	bf00      	nop
 8002e30:	08003011 	.word	0x08003011

08002e34 <_ZN23FrontendApplicationBase42gotoEndGameScreenScreenSlideTransitionEastEv>:
 8002e34:	4b06      	ldr	r3, [pc, #24]	; (8002e50 <_ZN23FrontendApplicationBase42gotoEndGameScreenScreenSlideTransitionEastEv+0x1c>)
 8002e36:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8002e3a:	2300      	movs	r3, #0
 8002e3c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// EndGameScreen

void FrontendApplicationBase::gotoEndGameScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEndGameScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002e40:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002e44:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002e48:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8002e4c:	4770      	bx	lr
 8002e4e:	bf00      	nop
 8002e50:	08002ed1 	.word	0x08002ed1

08002e54 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
 8002e54:	6803      	ldr	r3, [r0, #0]
 8002e56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e58:	4718      	bx	r3
	...

08002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8002e5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
          relativeValue(0)
 8002e60:	4605      	mov	r5, r0
 8002e62:	2600      	movs	r6, #0
 8002e64:	4b16      	ldr	r3, [pc, #88]	; (8002ec0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 8002e66:	6046      	str	r6, [r0, #4]
 8002e68:	7206      	strb	r6, [r0, #8]
 8002e6a:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8002e6e:	4604      	mov	r4, r0
          relativeValue(0)
 8002e70:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8002e72:	460f      	mov	r7, r1
          relativeValue(0)
 8002e74:	f00b f880 	bl	800df78 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8002e78:	4b12      	ldr	r3, [pc, #72]	; (8002ec4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
          relativeValue(0)
 8002e7a:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8002e7e:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8002e80:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8002e84:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8002e86:	b923      	cbnz	r3, 8002e92 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x36>
            done = true;
 8002e88:	2301      	movs	r3, #1
 8002e8a:	7223      	strb	r3, [r4, #8]
    }
 8002e8c:	4620      	mov	r0, r4
 8002e8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002e92:	4b0d      	ldr	r3, [pc, #52]	; (8002ec8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x6c>)
 8002e94:	4f0d      	ldr	r7, [pc, #52]	; (8002ecc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x70>)
 8002e96:	f9b3 8000 	ldrsh.w	r8, [r3]
        setX(x);
 8002e9a:	68e3      	ldr	r3, [r4, #12]
        setWidth(width);
 8002e9c:	f9b7 1000 	ldrsh.w	r1, [r7]
 8002ea0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
        rect.x = x;
 8002ea2:	6126      	str	r6, [r4, #16]
        setWidth(width);
 8002ea4:	4628      	mov	r0, r5
 8002ea6:	4798      	blx	r3
        setHeight(height);
 8002ea8:	68e3      	ldr	r3, [r4, #12]
 8002eaa:	4641      	mov	r1, r8
 8002eac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002eae:	4628      	mov	r0, r5
 8002eb0:	4798      	blx	r3
        snapshot.makeSnapshot();
 8002eb2:	4628      	mov	r0, r5
 8002eb4:	f00a ffdb 	bl	800de6e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 8002eb8:	883b      	ldrh	r3, [r7, #0]
 8002eba:	425b      	negs	r3, r3
 8002ebc:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8002ebe:	e7e5      	b.n	8002e8c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x30>
 8002ec0:	08024168 	.word	0x08024168
 8002ec4:	20014fd3 	.word	0x20014fd3
 8002ec8:	20014fca 	.word	0x20014fca
 8002ecc:	20014fc8 	.word	0x20014fc8

08002ed0 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoEndGameScreenScreenSlideTransitionEastImpl()
{
 8002ed0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<EndGameScreenView, EndGameScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002ed4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8002ed8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002eda:	68a0      	ldr	r0, [r4, #8]
 8002edc:	6803      	ldr	r3, [r0, #0]
 8002ede:	6a1b      	ldr	r3, [r3, #32]
 8002ee0:	4798      	blx	r3
 8002ee2:	f5b0 7fcc 	cmp.w	r0, #408	; 0x198
 8002ee6:	d205      	bcs.n	8002ef4 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x24>
 8002ee8:	4b42      	ldr	r3, [pc, #264]	; (8002ff4 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x124>)
 8002eea:	4a43      	ldr	r2, [pc, #268]	; (8002ff8 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002eec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002eee:	4843      	ldr	r0, [pc, #268]	; (8002ffc <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x12c>)
 8002ef0:	f01e fc8c 	bl	802180c <__assert_func>
 8002ef4:	6860      	ldr	r0, [r4, #4]
 8002ef6:	6803      	ldr	r3, [r0, #0]
 8002ef8:	6a1b      	ldr	r3, [r3, #32]
 8002efa:	4798      	blx	r3
 8002efc:	280f      	cmp	r0, #15
 8002efe:	d803      	bhi.n	8002f08 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x38>
 8002f00:	4b3f      	ldr	r3, [pc, #252]	; (8003000 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x130>)
 8002f02:	4a3d      	ldr	r2, [pc, #244]	; (8002ff8 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002f04:	21a4      	movs	r1, #164	; 0xa4
 8002f06:	e7f2      	b.n	8002eee <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002f08:	68e0      	ldr	r0, [r4, #12]
 8002f0a:	6803      	ldr	r3, [r0, #0]
 8002f0c:	6a1b      	ldr	r3, [r3, #32]
 8002f0e:	4798      	blx	r3
 8002f10:	283f      	cmp	r0, #63	; 0x3f
 8002f12:	d803      	bhi.n	8002f1c <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x4c>
 8002f14:	4b3b      	ldr	r3, [pc, #236]	; (8003004 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x134>)
 8002f16:	4a38      	ldr	r2, [pc, #224]	; (8002ff8 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8002f18:	21a5      	movs	r1, #165	; 0xa5
 8002f1a:	e7e8      	b.n	8002eee <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002f1c:	f00d fdba 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002f20:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003008 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x138>
 8002f24:	3004      	adds	r0, #4
 8002f26:	f00d fdf3 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002f2a:	f8d9 0000 	ldr.w	r0, [r9]
 8002f2e:	b110      	cbz	r0, 8002f36 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002f30:	6803      	ldr	r3, [r0, #0]
 8002f32:	68db      	ldr	r3, [r3, #12]
 8002f34:	4798      	blx	r3
    if (*currentTrans)
 8002f36:	f8d9 0000 	ldr.w	r0, [r9]
 8002f3a:	b110      	cbz	r0, 8002f42 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8002f3c:	6803      	ldr	r3, [r0, #0]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	4798      	blx	r3
    if (*currentScreen)
 8002f42:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800300c <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x13c>
 8002f46:	f8d8 0000 	ldr.w	r0, [r8]
 8002f4a:	b110      	cbz	r0, 8002f52 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002f4c:	6803      	ldr	r3, [r0, #0]
 8002f4e:	695b      	ldr	r3, [r3, #20]
 8002f50:	4798      	blx	r3
    if (*currentPresenter)
 8002f52:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002f56:	b110      	cbz	r0, 8002f5e <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8002f58:	6803      	ldr	r3, [r0, #0]
 8002f5a:	685b      	ldr	r3, [r3, #4]
 8002f5c:	4798      	blx	r3
    if (*currentScreen)
 8002f5e:	f8d8 0000 	ldr.w	r0, [r8]
 8002f62:	b110      	cbz	r0, 8002f6a <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002f64:	6803      	ldr	r3, [r0, #0]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	4798      	blx	r3
    if (*currentPresenter)
 8002f6a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002f6e:	b110      	cbz	r0, 8002f76 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002f70:	6803      	ldr	r3, [r0, #0]
 8002f72:	689b      	ldr	r3, [r3, #8]
 8002f74:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002f76:	68e0      	ldr	r0, [r4, #12]
 8002f78:	2100      	movs	r1, #0
 8002f7a:	f7ff ff6b 	bl	8002e54 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8002f7e:	2114      	movs	r1, #20
 8002f80:	4605      	mov	r5, r0
 8002f82:	f7ff ff6b 	bl	8002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002f86:	68a0      	ldr	r0, [r4, #8]
 8002f88:	6803      	ldr	r3, [r0, #0]
 8002f8a:	2100      	movs	r1, #0
 8002f8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f8e:	4798      	blx	r3
 8002f90:	4606      	mov	r6, r0
 8002f92:	f002 fc2d 	bl	80057f0 <_ZN17EndGameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002f96:	6860      	ldr	r0, [r4, #4]
 8002f98:	6803      	ldr	r3, [r0, #0]
 8002f9a:	2100      	movs	r1, #0
 8002f9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f9e:	4798      	blx	r3
 8002fa0:	4631      	mov	r1, r6
 8002fa2:	4604      	mov	r4, r0
 8002fa4:	f002 fbfe 	bl	80057a4 <_ZN22EndGameScreenPresenterC1ER17EndGameScreenView>
    *currentTrans = newTransition;
 8002fa8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002fac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8002fb0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002fb4:	b1dc      	cbz	r4, 8002fee <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0x11e>
 8002fb6:	1d23      	adds	r3, r4, #4
 8002fb8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002fbc:	6833      	ldr	r3, [r6, #0]
 8002fbe:	f8c4 a008 	str.w	sl, [r4, #8]
 8002fc2:	4630      	mov	r0, r6
 8002fc4:	68db      	ldr	r3, [r3, #12]
 8002fc6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002fc8:	4798      	blx	r3
    newPresenter->activate();
 8002fca:	6823      	ldr	r3, [r4, #0]
 8002fcc:	4620      	mov	r0, r4
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002fd2:	4629      	mov	r1, r5
 8002fd4:	4630      	mov	r0, r6
 8002fd6:	f00f fb1f 	bl	8012618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002fda:	682b      	ldr	r3, [r5, #0]
 8002fdc:	4628      	mov	r0, r5
 8002fde:	691b      	ldr	r3, [r3, #16]
 8002fe0:	4798      	blx	r3
    newTransition->invalidate();
 8002fe2:	682b      	ldr	r3, [r5, #0]
 8002fe4:	4628      	mov	r0, r5
 8002fe6:	695b      	ldr	r3, [r3, #20]
}
 8002fe8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002fec:	4718      	bx	r3
    model->bind(newPresenter);
 8002fee:	4623      	mov	r3, r4
 8002ff0:	e7e2      	b.n	8002fb8 <_ZN23FrontendApplicationBase46gotoEndGameScreenScreenSlideTransitionEastImplEv+0xe8>
 8002ff2:	bf00      	nop
 8002ff4:	080236dc 	.word	0x080236dc
 8002ff8:	08023a01 	.word	0x08023a01
 8002ffc:	08023874 	.word	0x08023874
 8003000:	080238bb 	.word	0x080238bb
 8003004:	0802395e 	.word	0x0802395e
 8003008:	20015014 	.word	0x20015014
 800300c:	20015010 	.word	0x20015010

08003010 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv>:
{
 8003010:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<OpponentScreenView, OpponentScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003014:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003018:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800301a:	68a0      	ldr	r0, [r4, #8]
 800301c:	6803      	ldr	r3, [r0, #0]
 800301e:	6a1b      	ldr	r3, [r3, #32]
 8003020:	4798      	blx	r3
 8003022:	f641 637b 	movw	r3, #7803	; 0x1e7b
 8003026:	4298      	cmp	r0, r3
 8003028:	d805      	bhi.n	8003036 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x26>
 800302a:	4b42      	ldr	r3, [pc, #264]	; (8003134 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x124>)
 800302c:	4a42      	ldr	r2, [pc, #264]	; (8003138 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x128>)
 800302e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003030:	4842      	ldr	r0, [pc, #264]	; (800313c <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x12c>)
 8003032:	f01e fbeb 	bl	802180c <__assert_func>
 8003036:	6860      	ldr	r0, [r4, #4]
 8003038:	6803      	ldr	r3, [r0, #0]
 800303a:	6a1b      	ldr	r3, [r3, #32]
 800303c:	4798      	blx	r3
 800303e:	280f      	cmp	r0, #15
 8003040:	d803      	bhi.n	800304a <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x3a>
 8003042:	4b3f      	ldr	r3, [pc, #252]	; (8003140 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x130>)
 8003044:	4a3c      	ldr	r2, [pc, #240]	; (8003138 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x128>)
 8003046:	21a4      	movs	r1, #164	; 0xa4
 8003048:	e7f2      	b.n	8003030 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800304a:	68e0      	ldr	r0, [r4, #12]
 800304c:	6803      	ldr	r3, [r0, #0]
 800304e:	6a1b      	ldr	r3, [r3, #32]
 8003050:	4798      	blx	r3
 8003052:	283f      	cmp	r0, #63	; 0x3f
 8003054:	d803      	bhi.n	800305e <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x4e>
 8003056:	4b3b      	ldr	r3, [pc, #236]	; (8003144 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x134>)
 8003058:	4a37      	ldr	r2, [pc, #220]	; (8003138 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x128>)
 800305a:	21a5      	movs	r1, #165	; 0xa5
 800305c:	e7e8      	b.n	8003030 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800305e:	f00d fd19 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003062:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003148 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x138>
 8003066:	3004      	adds	r0, #4
 8003068:	f00d fd52 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800306c:	f8d9 0000 	ldr.w	r0, [r9]
 8003070:	b110      	cbz	r0, 8003078 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8003072:	6803      	ldr	r3, [r0, #0]
 8003074:	68db      	ldr	r3, [r3, #12]
 8003076:	4798      	blx	r3
    if (*currentTrans)
 8003078:	f8d9 0000 	ldr.w	r0, [r9]
 800307c:	b110      	cbz	r0, 8003084 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800307e:	6803      	ldr	r3, [r0, #0]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	4798      	blx	r3
    if (*currentScreen)
 8003084:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800314c <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x13c>
 8003088:	f8d8 0000 	ldr.w	r0, [r8]
 800308c:	b110      	cbz	r0, 8003094 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800308e:	6803      	ldr	r3, [r0, #0]
 8003090:	695b      	ldr	r3, [r3, #20]
 8003092:	4798      	blx	r3
    if (*currentPresenter)
 8003094:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003098:	b110      	cbz	r0, 80030a0 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800309a:	6803      	ldr	r3, [r0, #0]
 800309c:	685b      	ldr	r3, [r3, #4]
 800309e:	4798      	blx	r3
    if (*currentScreen)
 80030a0:	f8d8 0000 	ldr.w	r0, [r8]
 80030a4:	b110      	cbz	r0, 80030ac <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80030a6:	6803      	ldr	r3, [r0, #0]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	4798      	blx	r3
    if (*currentPresenter)
 80030ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80030b0:	b110      	cbz	r0, 80030b8 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80030b2:	6803      	ldr	r3, [r0, #0]
 80030b4:	689b      	ldr	r3, [r3, #8]
 80030b6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80030b8:	68e0      	ldr	r0, [r4, #12]
 80030ba:	2100      	movs	r1, #0
 80030bc:	f7ff feca 	bl	8002e54 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 80030c0:	2114      	movs	r1, #20
 80030c2:	4605      	mov	r5, r0
 80030c4:	f7ff feca 	bl	8002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80030c8:	68a0      	ldr	r0, [r4, #8]
 80030ca:	6803      	ldr	r3, [r0, #0]
 80030cc:	2100      	movs	r1, #0
 80030ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030d0:	4798      	blx	r3
 80030d2:	4606      	mov	r6, r0
 80030d4:	f003 fd3a 	bl	8006b4c <_ZN18OpponentScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80030d8:	6860      	ldr	r0, [r4, #4]
 80030da:	6803      	ldr	r3, [r0, #0]
 80030dc:	2100      	movs	r1, #0
 80030de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030e0:	4798      	blx	r3
 80030e2:	4631      	mov	r1, r6
 80030e4:	4604      	mov	r4, r0
 80030e6:	f003 fb3b 	bl	8006760 <_ZN23OpponentScreenPresenterC1ER18OpponentScreenView>
    *currentTrans = newTransition;
 80030ea:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80030ee:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80030f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80030f6:	b1dc      	cbz	r4, 8003130 <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0x120>
 80030f8:	1d23      	adds	r3, r4, #4
 80030fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80030fe:	6833      	ldr	r3, [r6, #0]
 8003100:	f8c4 a008 	str.w	sl, [r4, #8]
 8003104:	4630      	mov	r0, r6
 8003106:	68db      	ldr	r3, [r3, #12]
 8003108:	63f4      	str	r4, [r6, #60]	; 0x3c
 800310a:	4798      	blx	r3
    newPresenter->activate();
 800310c:	6823      	ldr	r3, [r4, #0]
 800310e:	4620      	mov	r0, r4
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003114:	4629      	mov	r1, r5
 8003116:	4630      	mov	r0, r6
 8003118:	f00f fa7e 	bl	8012618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800311c:	682b      	ldr	r3, [r5, #0]
 800311e:	4628      	mov	r0, r5
 8003120:	691b      	ldr	r3, [r3, #16]
 8003122:	4798      	blx	r3
    newTransition->invalidate();
 8003124:	682b      	ldr	r3, [r5, #0]
 8003126:	4628      	mov	r0, r5
 8003128:	695b      	ldr	r3, [r3, #20]
}
 800312a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800312e:	4718      	bx	r3
    model->bind(newPresenter);
 8003130:	4623      	mov	r3, r4
 8003132:	e7e2      	b.n	80030fa <_ZN23FrontendApplicationBase47gotoOpponentScreenScreenSlideTransitionEastImplEv+0xea>
 8003134:	080236dc 	.word	0x080236dc
 8003138:	08023b24 	.word	0x08023b24
 800313c:	08023874 	.word	0x08023874
 8003140:	080238bb 	.word	0x080238bb
 8003144:	0802395e 	.word	0x0802395e
 8003148:	20015014 	.word	0x20015014
 800314c:	20015010 	.word	0x20015010

08003150 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv>:
{
 8003150:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<GameScreenView, GameScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003154:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003158:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800315a:	68a0      	ldr	r0, [r4, #8]
 800315c:	6803      	ldr	r3, [r0, #0]
 800315e:	6a1b      	ldr	r3, [r3, #32]
 8003160:	4798      	blx	r3
 8003162:	f242 53b7 	movw	r3, #9655	; 0x25b7
 8003166:	4298      	cmp	r0, r3
 8003168:	d805      	bhi.n	8003176 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x26>
 800316a:	4b42      	ldr	r3, [pc, #264]	; (8003274 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x124>)
 800316c:	4a42      	ldr	r2, [pc, #264]	; (8003278 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x128>)
 800316e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003170:	4842      	ldr	r0, [pc, #264]	; (800327c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x12c>)
 8003172:	f01e fb4b 	bl	802180c <__assert_func>
 8003176:	6860      	ldr	r0, [r4, #4]
 8003178:	6803      	ldr	r3, [r0, #0]
 800317a:	6a1b      	ldr	r3, [r3, #32]
 800317c:	4798      	blx	r3
 800317e:	280f      	cmp	r0, #15
 8003180:	d803      	bhi.n	800318a <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x3a>
 8003182:	4b3f      	ldr	r3, [pc, #252]	; (8003280 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x130>)
 8003184:	4a3c      	ldr	r2, [pc, #240]	; (8003278 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x128>)
 8003186:	21a4      	movs	r1, #164	; 0xa4
 8003188:	e7f2      	b.n	8003170 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800318a:	68e0      	ldr	r0, [r4, #12]
 800318c:	6803      	ldr	r3, [r0, #0]
 800318e:	6a1b      	ldr	r3, [r3, #32]
 8003190:	4798      	blx	r3
 8003192:	283f      	cmp	r0, #63	; 0x3f
 8003194:	d803      	bhi.n	800319e <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x4e>
 8003196:	4b3b      	ldr	r3, [pc, #236]	; (8003284 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x134>)
 8003198:	4a37      	ldr	r2, [pc, #220]	; (8003278 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x128>)
 800319a:	21a5      	movs	r1, #165	; 0xa5
 800319c:	e7e8      	b.n	8003170 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800319e:	f00d fc79 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80031a2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003288 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x138>
 80031a6:	3004      	adds	r0, #4
 80031a8:	f00d fcb2 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80031ac:	f8d9 0000 	ldr.w	r0, [r9]
 80031b0:	b110      	cbz	r0, 80031b8 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80031b2:	6803      	ldr	r3, [r0, #0]
 80031b4:	68db      	ldr	r3, [r3, #12]
 80031b6:	4798      	blx	r3
    if (*currentTrans)
 80031b8:	f8d9 0000 	ldr.w	r0, [r9]
 80031bc:	b110      	cbz	r0, 80031c4 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80031be:	6803      	ldr	r3, [r0, #0]
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	4798      	blx	r3
    if (*currentScreen)
 80031c4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800328c <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x13c>
 80031c8:	f8d8 0000 	ldr.w	r0, [r8]
 80031cc:	b110      	cbz	r0, 80031d4 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80031ce:	6803      	ldr	r3, [r0, #0]
 80031d0:	695b      	ldr	r3, [r3, #20]
 80031d2:	4798      	blx	r3
    if (*currentPresenter)
 80031d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80031d8:	b110      	cbz	r0, 80031e0 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80031da:	6803      	ldr	r3, [r0, #0]
 80031dc:	685b      	ldr	r3, [r3, #4]
 80031de:	4798      	blx	r3
    if (*currentScreen)
 80031e0:	f8d8 0000 	ldr.w	r0, [r8]
 80031e4:	b110      	cbz	r0, 80031ec <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80031e6:	6803      	ldr	r3, [r0, #0]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	4798      	blx	r3
    if (*currentPresenter)
 80031ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80031f0:	b110      	cbz	r0, 80031f8 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80031f2:	6803      	ldr	r3, [r0, #0]
 80031f4:	689b      	ldr	r3, [r3, #8]
 80031f6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80031f8:	68e0      	ldr	r0, [r4, #12]
 80031fa:	2100      	movs	r1, #0
 80031fc:	f7ff fe2a 	bl	8002e54 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8003200:	2114      	movs	r1, #20
 8003202:	4605      	mov	r5, r0
 8003204:	f7ff fe2a 	bl	8002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003208:	68a0      	ldr	r0, [r4, #8]
 800320a:	6803      	ldr	r3, [r0, #0]
 800320c:	2100      	movs	r1, #0
 800320e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003210:	4798      	blx	r3
 8003212:	4606      	mov	r6, r0
 8003214:	f002 fc04 	bl	8005a20 <_ZN14GameScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003218:	6860      	ldr	r0, [r4, #4]
 800321a:	6803      	ldr	r3, [r0, #0]
 800321c:	2100      	movs	r1, #0
 800321e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003220:	4798      	blx	r3
 8003222:	4631      	mov	r1, r6
 8003224:	4604      	mov	r4, r0
 8003226:	f002 fb5f 	bl	80058e8 <_ZN19GameScreenPresenterC1ER14GameScreenView>
    *currentTrans = newTransition;
 800322a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800322e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003232:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003236:	b1dc      	cbz	r4, 8003270 <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0x120>
 8003238:	1d23      	adds	r3, r4, #4
 800323a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800323e:	6833      	ldr	r3, [r6, #0]
 8003240:	f8c4 a008 	str.w	sl, [r4, #8]
 8003244:	4630      	mov	r0, r6
 8003246:	68db      	ldr	r3, [r3, #12]
 8003248:	63f4      	str	r4, [r6, #60]	; 0x3c
 800324a:	4798      	blx	r3
    newPresenter->activate();
 800324c:	6823      	ldr	r3, [r4, #0]
 800324e:	4620      	mov	r0, r4
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003254:	4629      	mov	r1, r5
 8003256:	4630      	mov	r0, r6
 8003258:	f00f f9de 	bl	8012618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800325c:	682b      	ldr	r3, [r5, #0]
 800325e:	4628      	mov	r0, r5
 8003260:	691b      	ldr	r3, [r3, #16]
 8003262:	4798      	blx	r3
    newTransition->invalidate();
 8003264:	682b      	ldr	r3, [r5, #0]
 8003266:	4628      	mov	r0, r5
 8003268:	695b      	ldr	r3, [r3, #20]
}
 800326a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800326e:	4718      	bx	r3
    model->bind(newPresenter);
 8003270:	4623      	mov	r3, r4
 8003272:	e7e2      	b.n	800323a <_ZN23FrontendApplicationBase43gotoGameScreenScreenSlideTransitionEastImplEv+0xea>
 8003274:	080236dc 	.word	0x080236dc
 8003278:	08023c49 	.word	0x08023c49
 800327c:	08023874 	.word	0x08023874
 8003280:	080238bb 	.word	0x080238bb
 8003284:	0802395e 	.word	0x0802395e
 8003288:	20015014 	.word	0x20015014
 800328c:	20015010 	.word	0x20015010

08003290 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv>:
{
 8003290:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ChooseTurnScreenView, ChooseTurnScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003294:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003298:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800329a:	68a0      	ldr	r0, [r4, #8]
 800329c:	6803      	ldr	r3, [r0, #0]
 800329e:	6a1b      	ldr	r3, [r3, #32]
 80032a0:	4798      	blx	r3
 80032a2:	f5b0 7fc0 	cmp.w	r0, #384	; 0x180
 80032a6:	d205      	bcs.n	80032b4 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x24>
 80032a8:	4b42      	ldr	r3, [pc, #264]	; (80033b4 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x124>)
 80032aa:	4a43      	ldr	r2, [pc, #268]	; (80033b8 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x128>)
 80032ac:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80032ae:	4843      	ldr	r0, [pc, #268]	; (80033bc <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x12c>)
 80032b0:	f01e faac 	bl	802180c <__assert_func>
 80032b4:	6860      	ldr	r0, [r4, #4]
 80032b6:	6803      	ldr	r3, [r0, #0]
 80032b8:	6a1b      	ldr	r3, [r3, #32]
 80032ba:	4798      	blx	r3
 80032bc:	280f      	cmp	r0, #15
 80032be:	d803      	bhi.n	80032c8 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x38>
 80032c0:	4b3f      	ldr	r3, [pc, #252]	; (80033c0 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x130>)
 80032c2:	4a3d      	ldr	r2, [pc, #244]	; (80033b8 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x128>)
 80032c4:	21a4      	movs	r1, #164	; 0xa4
 80032c6:	e7f2      	b.n	80032ae <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80032c8:	68e0      	ldr	r0, [r4, #12]
 80032ca:	6803      	ldr	r3, [r0, #0]
 80032cc:	6a1b      	ldr	r3, [r3, #32]
 80032ce:	4798      	blx	r3
 80032d0:	283f      	cmp	r0, #63	; 0x3f
 80032d2:	d803      	bhi.n	80032dc <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x4c>
 80032d4:	4b3b      	ldr	r3, [pc, #236]	; (80033c4 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x134>)
 80032d6:	4a38      	ldr	r2, [pc, #224]	; (80033b8 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x128>)
 80032d8:	21a5      	movs	r1, #165	; 0xa5
 80032da:	e7e8      	b.n	80032ae <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80032dc:	f00d fbda 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80032e0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80033c8 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x138>
 80032e4:	3004      	adds	r0, #4
 80032e6:	f00d fc13 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80032ea:	f8d9 0000 	ldr.w	r0, [r9]
 80032ee:	b110      	cbz	r0, 80032f6 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80032f0:	6803      	ldr	r3, [r0, #0]
 80032f2:	68db      	ldr	r3, [r3, #12]
 80032f4:	4798      	blx	r3
    if (*currentTrans)
 80032f6:	f8d9 0000 	ldr.w	r0, [r9]
 80032fa:	b110      	cbz	r0, 8003302 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80032fc:	6803      	ldr	r3, [r0, #0]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	4798      	blx	r3
    if (*currentScreen)
 8003302:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80033cc <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x13c>
 8003306:	f8d8 0000 	ldr.w	r0, [r8]
 800330a:	b110      	cbz	r0, 8003312 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800330c:	6803      	ldr	r3, [r0, #0]
 800330e:	695b      	ldr	r3, [r3, #20]
 8003310:	4798      	blx	r3
    if (*currentPresenter)
 8003312:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003316:	b110      	cbz	r0, 800331e <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003318:	6803      	ldr	r3, [r0, #0]
 800331a:	685b      	ldr	r3, [r3, #4]
 800331c:	4798      	blx	r3
    if (*currentScreen)
 800331e:	f8d8 0000 	ldr.w	r0, [r8]
 8003322:	b110      	cbz	r0, 800332a <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003324:	6803      	ldr	r3, [r0, #0]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	4798      	blx	r3
    if (*currentPresenter)
 800332a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800332e:	b110      	cbz	r0, 8003336 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003330:	6803      	ldr	r3, [r0, #0]
 8003332:	689b      	ldr	r3, [r3, #8]
 8003334:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003336:	68e0      	ldr	r0, [r4, #12]
 8003338:	2100      	movs	r1, #0
 800333a:	f7ff fd8b 	bl	8002e54 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800333e:	2114      	movs	r1, #20
 8003340:	4605      	mov	r5, r0
 8003342:	f7ff fd8b 	bl	8002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003346:	68a0      	ldr	r0, [r4, #8]
 8003348:	6803      	ldr	r3, [r0, #0]
 800334a:	2100      	movs	r1, #0
 800334c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800334e:	4798      	blx	r3
 8003350:	4606      	mov	r6, r0
 8003352:	f002 fa0d 	bl	8005770 <_ZN20ChooseTurnScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003356:	6860      	ldr	r0, [r4, #4]
 8003358:	6803      	ldr	r3, [r0, #0]
 800335a:	2100      	movs	r1, #0
 800335c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800335e:	4798      	blx	r3
 8003360:	4631      	mov	r1, r6
 8003362:	4604      	mov	r4, r0
 8003364:	f002 f9c6 	bl	80056f4 <_ZN25ChooseTurnScreenPresenterC1ER20ChooseTurnScreenView>
    *currentTrans = newTransition;
 8003368:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800336c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003370:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003374:	b1dc      	cbz	r4, 80033ae <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0x11e>
 8003376:	1d23      	adds	r3, r4, #4
 8003378:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800337c:	6833      	ldr	r3, [r6, #0]
 800337e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003382:	4630      	mov	r0, r6
 8003384:	68db      	ldr	r3, [r3, #12]
 8003386:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003388:	4798      	blx	r3
    newPresenter->activate();
 800338a:	6823      	ldr	r3, [r4, #0]
 800338c:	4620      	mov	r0, r4
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003392:	4629      	mov	r1, r5
 8003394:	4630      	mov	r0, r6
 8003396:	f00f f93f 	bl	8012618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800339a:	682b      	ldr	r3, [r5, #0]
 800339c:	4628      	mov	r0, r5
 800339e:	691b      	ldr	r3, [r3, #16]
 80033a0:	4798      	blx	r3
    newTransition->invalidate();
 80033a2:	682b      	ldr	r3, [r5, #0]
 80033a4:	4628      	mov	r0, r5
 80033a6:	695b      	ldr	r3, [r3, #20]
}
 80033a8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80033ac:	4718      	bx	r3
    model->bind(newPresenter);
 80033ae:	4623      	mov	r3, r4
 80033b0:	e7e2      	b.n	8003378 <_ZN23FrontendApplicationBase49gotoChooseTurnScreenScreenSlideTransitionEastImplEv+0xe8>
 80033b2:	bf00      	nop
 80033b4:	080236dc 	.word	0x080236dc
 80033b8:	08023d66 	.word	0x08023d66
 80033bc:	08023874 	.word	0x08023874
 80033c0:	080238bb 	.word	0x080238bb
 80033c4:	0802395e 	.word	0x0802395e
 80033c8:	20015014 	.word	0x20015014
 80033cc:	20015010 	.word	0x20015010

080033d0 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv>:
{
 80033d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<LoadingScreenView, LoadingScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80033d4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80033d8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80033da:	68a0      	ldr	r0, [r4, #8]
 80033dc:	6803      	ldr	r3, [r0, #0]
 80033de:	6a1b      	ldr	r3, [r3, #32]
 80033e0:	4798      	blx	r3
 80033e2:	f5b0 7f04 	cmp.w	r0, #528	; 0x210
 80033e6:	d205      	bcs.n	80033f4 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x24>
 80033e8:	4b42      	ldr	r3, [pc, #264]	; (80034f4 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x124>)
 80033ea:	4a43      	ldr	r2, [pc, #268]	; (80034f8 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x128>)
 80033ec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80033ee:	4843      	ldr	r0, [pc, #268]	; (80034fc <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x12c>)
 80033f0:	f01e fa0c 	bl	802180c <__assert_func>
 80033f4:	6860      	ldr	r0, [r4, #4]
 80033f6:	6803      	ldr	r3, [r0, #0]
 80033f8:	6a1b      	ldr	r3, [r3, #32]
 80033fa:	4798      	blx	r3
 80033fc:	280f      	cmp	r0, #15
 80033fe:	d803      	bhi.n	8003408 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x38>
 8003400:	4b3f      	ldr	r3, [pc, #252]	; (8003500 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x130>)
 8003402:	4a3d      	ldr	r2, [pc, #244]	; (80034f8 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x128>)
 8003404:	21a4      	movs	r1, #164	; 0xa4
 8003406:	e7f2      	b.n	80033ee <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003408:	68e0      	ldr	r0, [r4, #12]
 800340a:	6803      	ldr	r3, [r0, #0]
 800340c:	6a1b      	ldr	r3, [r3, #32]
 800340e:	4798      	blx	r3
 8003410:	283f      	cmp	r0, #63	; 0x3f
 8003412:	d803      	bhi.n	800341c <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x4c>
 8003414:	4b3b      	ldr	r3, [pc, #236]	; (8003504 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x134>)
 8003416:	4a38      	ldr	r2, [pc, #224]	; (80034f8 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x128>)
 8003418:	21a5      	movs	r1, #165	; 0xa5
 800341a:	e7e8      	b.n	80033ee <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800341c:	f00d fb3a 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003420:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003508 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x138>
 8003424:	3004      	adds	r0, #4
 8003426:	f00d fb73 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800342a:	f8d9 0000 	ldr.w	r0, [r9]
 800342e:	b110      	cbz	r0, 8003436 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003430:	6803      	ldr	r3, [r0, #0]
 8003432:	68db      	ldr	r3, [r3, #12]
 8003434:	4798      	blx	r3
    if (*currentTrans)
 8003436:	f8d9 0000 	ldr.w	r0, [r9]
 800343a:	b110      	cbz	r0, 8003442 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800343c:	6803      	ldr	r3, [r0, #0]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	4798      	blx	r3
    if (*currentScreen)
 8003442:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800350c <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x13c>
 8003446:	f8d8 0000 	ldr.w	r0, [r8]
 800344a:	b110      	cbz	r0, 8003452 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800344c:	6803      	ldr	r3, [r0, #0]
 800344e:	695b      	ldr	r3, [r3, #20]
 8003450:	4798      	blx	r3
    if (*currentPresenter)
 8003452:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003456:	b110      	cbz	r0, 800345e <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003458:	6803      	ldr	r3, [r0, #0]
 800345a:	685b      	ldr	r3, [r3, #4]
 800345c:	4798      	blx	r3
    if (*currentScreen)
 800345e:	f8d8 0000 	ldr.w	r0, [r8]
 8003462:	b110      	cbz	r0, 800346a <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003464:	6803      	ldr	r3, [r0, #0]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	4798      	blx	r3
    if (*currentPresenter)
 800346a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800346e:	b110      	cbz	r0, 8003476 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003470:	6803      	ldr	r3, [r0, #0]
 8003472:	689b      	ldr	r3, [r3, #8]
 8003474:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003476:	68e0      	ldr	r0, [r4, #12]
 8003478:	2100      	movs	r1, #0
 800347a:	f7ff fceb 	bl	8002e54 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800347e:	2114      	movs	r1, #20
 8003480:	4605      	mov	r5, r0
 8003482:	f7ff fceb 	bl	8002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003486:	68a0      	ldr	r0, [r4, #8]
 8003488:	6803      	ldr	r3, [r0, #0]
 800348a:	2100      	movs	r1, #0
 800348c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800348e:	4798      	blx	r3
 8003490:	4606      	mov	r6, r0
 8003492:	f003 f8e7 	bl	8006664 <_ZN17LoadingScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003496:	6860      	ldr	r0, [r4, #4]
 8003498:	6803      	ldr	r3, [r0, #0]
 800349a:	2100      	movs	r1, #0
 800349c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800349e:	4798      	blx	r3
 80034a0:	4631      	mov	r1, r6
 80034a2:	4604      	mov	r4, r0
 80034a4:	f003 f8b8 	bl	8006618 <_ZN22LoadingScreenPresenterC1ER17LoadingScreenView>
    *currentTrans = newTransition;
 80034a8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80034ac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80034b0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80034b4:	b1dc      	cbz	r4, 80034ee <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0x11e>
 80034b6:	1d23      	adds	r3, r4, #4
 80034b8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80034bc:	6833      	ldr	r3, [r6, #0]
 80034be:	f8c4 a008 	str.w	sl, [r4, #8]
 80034c2:	4630      	mov	r0, r6
 80034c4:	68db      	ldr	r3, [r3, #12]
 80034c6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80034c8:	4798      	blx	r3
    newPresenter->activate();
 80034ca:	6823      	ldr	r3, [r4, #0]
 80034cc:	4620      	mov	r0, r4
 80034ce:	681b      	ldr	r3, [r3, #0]
 80034d0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80034d2:	4629      	mov	r1, r5
 80034d4:	4630      	mov	r0, r6
 80034d6:	f00f f89f 	bl	8012618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80034da:	682b      	ldr	r3, [r5, #0]
 80034dc:	4628      	mov	r0, r5
 80034de:	691b      	ldr	r3, [r3, #16]
 80034e0:	4798      	blx	r3
    newTransition->invalidate();
 80034e2:	682b      	ldr	r3, [r5, #0]
 80034e4:	4628      	mov	r0, r5
 80034e6:	695b      	ldr	r3, [r3, #20]
}
 80034e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80034ec:	4718      	bx	r3
    model->bind(newPresenter);
 80034ee:	4623      	mov	r3, r4
 80034f0:	e7e2      	b.n	80034b8 <_ZN23FrontendApplicationBase46gotoLoadingScreenScreenSlideTransitionEastImplEv+0xe8>
 80034f2:	bf00      	nop
 80034f4:	080236dc 	.word	0x080236dc
 80034f8:	08023e8f 	.word	0x08023e8f
 80034fc:	08023874 	.word	0x08023874
 8003500:	080238bb 	.word	0x080238bb
 8003504:	0802395e 	.word	0x0802395e
 8003508:	20015014 	.word	0x20015014
 800350c:	20015010 	.word	0x20015010

08003510 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv>:
{
 8003510:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<HomeScreenView, HomeScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003514:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003518:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800351a:	68a0      	ldr	r0, [r4, #8]
 800351c:	6803      	ldr	r3, [r0, #0]
 800351e:	6a1b      	ldr	r3, [r3, #32]
 8003520:	4798      	blx	r3
 8003522:	f5b0 7ff4 	cmp.w	r0, #488	; 0x1e8
 8003526:	d205      	bcs.n	8003534 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x24>
 8003528:	4b42      	ldr	r3, [pc, #264]	; (8003634 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x124>)
 800352a:	4a43      	ldr	r2, [pc, #268]	; (8003638 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x128>)
 800352c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800352e:	4843      	ldr	r0, [pc, #268]	; (800363c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x12c>)
 8003530:	f01e f96c 	bl	802180c <__assert_func>
 8003534:	6860      	ldr	r0, [r4, #4]
 8003536:	6803      	ldr	r3, [r0, #0]
 8003538:	6a1b      	ldr	r3, [r3, #32]
 800353a:	4798      	blx	r3
 800353c:	280f      	cmp	r0, #15
 800353e:	d803      	bhi.n	8003548 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x38>
 8003540:	4b3f      	ldr	r3, [pc, #252]	; (8003640 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x130>)
 8003542:	4a3d      	ldr	r2, [pc, #244]	; (8003638 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x128>)
 8003544:	21a4      	movs	r1, #164	; 0xa4
 8003546:	e7f2      	b.n	800352e <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003548:	68e0      	ldr	r0, [r4, #12]
 800354a:	6803      	ldr	r3, [r0, #0]
 800354c:	6a1b      	ldr	r3, [r3, #32]
 800354e:	4798      	blx	r3
 8003550:	283f      	cmp	r0, #63	; 0x3f
 8003552:	d803      	bhi.n	800355c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x4c>
 8003554:	4b3b      	ldr	r3, [pc, #236]	; (8003644 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x134>)
 8003556:	4a38      	ldr	r2, [pc, #224]	; (8003638 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x128>)
 8003558:	21a5      	movs	r1, #165	; 0xa5
 800355a:	e7e8      	b.n	800352e <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800355c:	f00d fa9a 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003560:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003648 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x138>
 8003564:	3004      	adds	r0, #4
 8003566:	f00d fad3 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800356a:	f8d9 0000 	ldr.w	r0, [r9]
 800356e:	b110      	cbz	r0, 8003576 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003570:	6803      	ldr	r3, [r0, #0]
 8003572:	68db      	ldr	r3, [r3, #12]
 8003574:	4798      	blx	r3
    if (*currentTrans)
 8003576:	f8d9 0000 	ldr.w	r0, [r9]
 800357a:	b110      	cbz	r0, 8003582 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800357c:	6803      	ldr	r3, [r0, #0]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	4798      	blx	r3
    if (*currentScreen)
 8003582:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800364c <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x13c>
 8003586:	f8d8 0000 	ldr.w	r0, [r8]
 800358a:	b110      	cbz	r0, 8003592 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800358c:	6803      	ldr	r3, [r0, #0]
 800358e:	695b      	ldr	r3, [r3, #20]
 8003590:	4798      	blx	r3
    if (*currentPresenter)
 8003592:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003596:	b110      	cbz	r0, 800359e <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003598:	6803      	ldr	r3, [r0, #0]
 800359a:	685b      	ldr	r3, [r3, #4]
 800359c:	4798      	blx	r3
    if (*currentScreen)
 800359e:	f8d8 0000 	ldr.w	r0, [r8]
 80035a2:	b110      	cbz	r0, 80035aa <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80035a4:	6803      	ldr	r3, [r0, #0]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	4798      	blx	r3
    if (*currentPresenter)
 80035aa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80035ae:	b110      	cbz	r0, 80035b6 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80035b0:	6803      	ldr	r3, [r0, #0]
 80035b2:	689b      	ldr	r3, [r3, #8]
 80035b4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80035b6:	68e0      	ldr	r0, [r4, #12]
 80035b8:	2100      	movs	r1, #0
 80035ba:	f7ff fc4b 	bl	8002e54 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 80035be:	2114      	movs	r1, #20
 80035c0:	4605      	mov	r5, r0
 80035c2:	f7ff fc4b 	bl	8002e5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80035c6:	68a0      	ldr	r0, [r4, #8]
 80035c8:	6803      	ldr	r3, [r0, #0]
 80035ca:	2100      	movs	r1, #0
 80035cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035ce:	4798      	blx	r3
 80035d0:	4606      	mov	r6, r0
 80035d2:	f003 f807 	bl	80065e4 <_ZN14HomeScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80035d6:	6860      	ldr	r0, [r4, #4]
 80035d8:	6803      	ldr	r3, [r0, #0]
 80035da:	2100      	movs	r1, #0
 80035dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035de:	4798      	blx	r3
 80035e0:	4631      	mov	r1, r6
 80035e2:	4604      	mov	r4, r0
 80035e4:	f002 ffcc 	bl	8006580 <_ZN19HomeScreenPresenterC1ER14HomeScreenView>
    *currentTrans = newTransition;
 80035e8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80035ec:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80035f0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80035f4:	b1dc      	cbz	r4, 800362e <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0x11e>
 80035f6:	1d23      	adds	r3, r4, #4
 80035f8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80035fc:	6833      	ldr	r3, [r6, #0]
 80035fe:	f8c4 a008 	str.w	sl, [r4, #8]
 8003602:	4630      	mov	r0, r6
 8003604:	68db      	ldr	r3, [r3, #12]
 8003606:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003608:	4798      	blx	r3
    newPresenter->activate();
 800360a:	6823      	ldr	r3, [r4, #0]
 800360c:	4620      	mov	r0, r4
 800360e:	681b      	ldr	r3, [r3, #0]
 8003610:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003612:	4629      	mov	r1, r5
 8003614:	4630      	mov	r0, r6
 8003616:	f00e ffff 	bl	8012618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800361a:	682b      	ldr	r3, [r5, #0]
 800361c:	4628      	mov	r0, r5
 800361e:	691b      	ldr	r3, [r3, #16]
 8003620:	4798      	blx	r3
    newTransition->invalidate();
 8003622:	682b      	ldr	r3, [r5, #0]
 8003624:	4628      	mov	r0, r5
 8003626:	695b      	ldr	r3, [r3, #20]
}
 8003628:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800362c:	4718      	bx	r3
    model->bind(newPresenter);
 800362e:	4623      	mov	r3, r4
 8003630:	e7e2      	b.n	80035f8 <_ZN23FrontendApplicationBase43gotoHomeScreenScreenSlideTransitionEastImplEv+0xe8>
 8003632:	bf00      	nop
 8003634:	080236dc 	.word	0x080236dc
 8003638:	08023fb2 	.word	0x08023fb2
 800363c:	08023874 	.word	0x08023874
 8003640:	080238bb 	.word	0x080238bb
 8003644:	0802395e 	.word	0x0802395e
 8003648:	20015014 	.word	0x20015014
 800364c:	20015010 	.word	0x20015010

08003650 <_ZN18GameScreenViewBaseD1Ev>:
}

GameScreenViewBase::~GameScreenViewBase()
{

}
 8003650:	4770      	bx	lr

08003652 <_ZN18GameScreenViewBase11setupScreenEv>:

void GameScreenViewBase::setupScreen()
{

}
 8003652:	4770      	bx	lr

08003654 <_ZN18GameScreenViewBaseD0Ev>:
GameScreenViewBase::~GameScreenViewBase()
 8003654:	b510      	push	{r4, lr}
}
 8003656:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
GameScreenViewBase::~GameScreenViewBase()
 800365a:	4604      	mov	r4, r0
}
 800365c:	f01e f826 	bl	80216ac <_ZdlPvj>
 8003660:	4620      	mov	r0, r4
 8003662:	bd10      	pop	{r4, pc}

08003664 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8003664:	4a07      	ldr	r2, [pc, #28]	; (8003684 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8003666:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8003668:	2200      	movs	r2, #0
 800366a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800366e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8003672:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003676:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800367a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800367e:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8003680:	4770      	bx	lr
 8003682:	bf00      	nop
 8003684:	08024e0c 	.word	0x08024e0c

08003688 <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 8003688:	b510      	push	{r4, lr}
 800368a:	4604      	mov	r4, r0
        : Drawable(),
          firstChild(0)
 800368c:	f7ff ffea 	bl	8003664 <_ZN8touchgfx8DrawableC1Ev>
 8003690:	4b02      	ldr	r3, [pc, #8]	; (800369c <_ZN8touchgfx9ContainerC1Ev+0x14>)
 8003692:	6023      	str	r3, [r4, #0]
 8003694:	2300      	movs	r3, #0
 8003696:	62a3      	str	r3, [r4, #40]	; 0x28
    {
    }
 8003698:	4620      	mov	r0, r4
 800369a:	bd10      	pop	{r4, pc}
 800369c:	08024a3c 	.word	0x08024a3c

080036a0 <_ZN18GameScreenViewBaseC1Ev>:
GameScreenViewBase::GameScreenViewBase()
 80036a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036a4:	ed2d 8b10 	vpush	{d8-d15}
 80036a8:	4605      	mov	r5, r0
 80036aa:	b099      	sub	sp, #100	; 0x64
 80036ac:	46aa      	mov	sl, r5
        : presenter(0)
 80036ae:	2400      	movs	r4, #0
 80036b0:	f00e fe06 	bl	80122c0 <_ZN8touchgfx6ScreenC1Ev>
 80036b4:	4bdf      	ldr	r3, [pc, #892]	; (8003a34 <_ZN18GameScreenViewBaseC1Ev+0x394>)
 80036b6:	63ec      	str	r4, [r5, #60]	; 0x3c
 80036b8:	f84a 3b40 	str.w	r3, [sl], #64
 80036bc:	4650      	mov	r0, sl
 80036be:	f7fe fe85 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 80036c2:	f105 036c 	add.w	r3, r5, #108	; 0x6c
 80036c6:	f105 0998 	add.w	r9, r5, #152	; 0x98
 80036ca:	4618      	mov	r0, r3
 80036cc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80036d0:	f105 07c4 	add.w	r7, r5, #196	; 0xc4
 80036d4:	9315      	str	r3, [sp, #84]	; 0x54
 80036d6:	f7fe fe79 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 80036da:	a916      	add	r1, sp, #88	; 0x58
 80036dc:	4648      	mov	r0, r9
 80036de:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80036e2:	f00a fcb3 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80036e6:	4638      	mov	r0, r7
 80036e8:	f7ff ffce 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 80036ec:	f105 03f0 	add.w	r3, r5, #240	; 0xf0
 80036f0:	a916      	add	r1, sp, #88	; 0x58
 80036f2:	4618      	mov	r0, r3
 80036f4:	ee0a 3a10 	vmov	s20, r3
 80036f8:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80036fc:	f00a fca6 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003700:	f505 738e 	add.w	r3, r5, #284	; 0x11c
 8003704:	a916      	add	r1, sp, #88	; 0x58
 8003706:	4618      	mov	r0, r3
 8003708:	ee0a 3a90 	vmov	s21, r3
 800370c:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003710:	f00a fc9c 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003714:	f505 73a4 	add.w	r3, r5, #328	; 0x148
 8003718:	a916      	add	r1, sp, #88	; 0x58
 800371a:	4618      	mov	r0, r3
 800371c:	ee0b 3a10 	vmov	s22, r3
 8003720:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003724:	f00a fc92 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003728:	f505 73ba 	add.w	r3, r5, #372	; 0x174
 800372c:	4618      	mov	r0, r3
 800372e:	ee08 3a10 	vmov	s16, r3
 8003732:	f7ff ffa9 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8003736:	f505 73d0 	add.w	r3, r5, #416	; 0x1a0
 800373a:	a916      	add	r1, sp, #88	; 0x58
 800373c:	4618      	mov	r0, r3
 800373e:	ee0b 3a90 	vmov	s23, r3
 8003742:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003746:	f00a fc81 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800374a:	f505 73e6 	add.w	r3, r5, #460	; 0x1cc
 800374e:	a916      	add	r1, sp, #88	; 0x58
 8003750:	4618      	mov	r0, r3
 8003752:	ee0c 3a10 	vmov	s24, r3
 8003756:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800375a:	f00a fc77 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800375e:	f505 73fc 	add.w	r3, r5, #504	; 0x1f8
 8003762:	a916      	add	r1, sp, #88	; 0x58
 8003764:	4618      	mov	r0, r3
 8003766:	ee0c 3a90 	vmov	s25, r3
 800376a:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800376e:	f00a fc6d 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003772:	f505 7309 	add.w	r3, r5, #548	; 0x224
 8003776:	f505 7814 	add.w	r8, r5, #592	; 0x250
 800377a:	a916      	add	r1, sp, #88	; 0x58
 800377c:	4618      	mov	r0, r3
 800377e:	ee0d 3a10 	vmov	s26, r3
 8003782:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003786:	f00a fc61 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800378a:	4640      	mov	r0, r8
 800378c:	f7ff ff7c 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8003790:	f505 731f 	add.w	r3, r5, #636	; 0x27c
 8003794:	a916      	add	r1, sp, #88	; 0x58
 8003796:	4618      	mov	r0, r3
 8003798:	ee0d 3a90 	vmov	s27, r3
 800379c:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80037a0:	f00a fc54 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80037a4:	f505 732a 	add.w	r3, r5, #680	; 0x2a8
 80037a8:	a916      	add	r1, sp, #88	; 0x58
 80037aa:	4618      	mov	r0, r3
 80037ac:	ee0e 3a10 	vmov	s28, r3
 80037b0:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80037b4:	f00a fc4a 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80037b8:	f505 7335 	add.w	r3, r5, #724	; 0x2d4
 80037bc:	a916      	add	r1, sp, #88	; 0x58
 80037be:	4618      	mov	r0, r3
 80037c0:	ee0e 3a90 	vmov	s29, r3
 80037c4:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80037c8:	f00a fc40 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80037cc:	f505 7340 	add.w	r3, r5, #768	; 0x300
 80037d0:	a916      	add	r1, sp, #88	; 0x58
 80037d2:	4618      	mov	r0, r3
 80037d4:	ee0f 3a10 	vmov	s30, r3
 80037d8:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80037dc:	f00a fc36 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80037e0:	f505 734b 	add.w	r3, r5, #812	; 0x32c
 80037e4:	a916      	add	r1, sp, #88	; 0x58
 80037e6:	4618      	mov	r0, r3
 80037e8:	ee0f 3a90 	vmov	s31, r3
 80037ec:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80037f0:	f00a fc2c 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80037f4:	f505 7356 	add.w	r3, r5, #856	; 0x358
 80037f8:	4618      	mov	r0, r3
 80037fa:	9302      	str	r3, [sp, #8]
 80037fc:	f7ff ff44 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8003800:	f505 7361 	add.w	r3, r5, #900	; 0x384
 8003804:	a916      	add	r1, sp, #88	; 0x58
 8003806:	4618      	mov	r0, r3
 8003808:	9303      	str	r3, [sp, #12]
 800380a:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800380e:	f00a fc1d 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003812:	f505 736c 	add.w	r3, r5, #944	; 0x3b0
 8003816:	a916      	add	r1, sp, #88	; 0x58
 8003818:	4618      	mov	r0, r3
 800381a:	9304      	str	r3, [sp, #16]
 800381c:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003820:	f00a fc14 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003824:	f505 7377 	add.w	r3, r5, #988	; 0x3dc
 8003828:	4618      	mov	r0, r3
 800382a:	ee09 3a10 	vmov	s18, r3
 800382e:	f7ff ff2b 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8003832:	f505 6381 	add.w	r3, r5, #1032	; 0x408
 8003836:	a916      	add	r1, sp, #88	; 0x58
 8003838:	4618      	mov	r0, r3
 800383a:	9305      	str	r3, [sp, #20]
 800383c:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003840:	f00a fc04 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003844:	f205 4334 	addw	r3, r5, #1076	; 0x434
 8003848:	a916      	add	r1, sp, #88	; 0x58
 800384a:	4618      	mov	r0, r3
 800384c:	9306      	str	r3, [sp, #24]
 800384e:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003852:	f00a fbfb 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003856:	f505 638c 	add.w	r3, r5, #1120	; 0x460
 800385a:	a916      	add	r1, sp, #88	; 0x58
 800385c:	4618      	mov	r0, r3
 800385e:	9307      	str	r3, [sp, #28]
 8003860:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003864:	f00a fbf2 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003868:	f205 438c 	addw	r3, r5, #1164	; 0x48c
 800386c:	4618      	mov	r0, r3
 800386e:	ee08 3a90 	vmov	s17, r3
 8003872:	f7ff ff09 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8003876:	f505 6397 	add.w	r3, r5, #1208	; 0x4b8
 800387a:	a916      	add	r1, sp, #88	; 0x58
 800387c:	4618      	mov	r0, r3
 800387e:	9308      	str	r3, [sp, #32]
 8003880:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003884:	f00a fbe2 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003888:	f205 43e4 	addw	r3, r5, #1252	; 0x4e4
 800388c:	a916      	add	r1, sp, #88	; 0x58
 800388e:	4618      	mov	r0, r3
 8003890:	9309      	str	r3, [sp, #36]	; 0x24
 8003892:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 8003896:	f00a fbd9 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800389a:	f505 63a2 	add.w	r3, r5, #1296	; 0x510
 800389e:	a916      	add	r1, sp, #88	; 0x58
 80038a0:	4618      	mov	r0, r3
 80038a2:	930a      	str	r3, [sp, #40]	; 0x28
 80038a4:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80038a8:	f00a fbd0 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80038ac:	f205 533c 	addw	r3, r5, #1340	; 0x53c
 80038b0:	f505 6bad 	add.w	fp, r5, #1384	; 0x568
 80038b4:	a916      	add	r1, sp, #88	; 0x58
 80038b6:	4618      	mov	r0, r3
 80038b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80038ba:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80038be:	f00a fbc5 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80038c2:	4658      	mov	r0, fp
 80038c4:	f7ff fee0 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 80038c8:	f205 5394 	addw	r3, r5, #1428	; 0x594
 80038cc:	a916      	add	r1, sp, #88	; 0x58
 80038ce:	4618      	mov	r0, r3
 80038d0:	930c      	str	r3, [sp, #48]	; 0x30
 80038d2:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80038d6:	f00a fbb9 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80038da:	f505 63b8 	add.w	r3, r5, #1472	; 0x5c0
 80038de:	a916      	add	r1, sp, #88	; 0x58
 80038e0:	4618      	mov	r0, r3
 80038e2:	930d      	str	r3, [sp, #52]	; 0x34
 80038e4:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80038e8:	f00a fbb0 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80038ec:	f205 53ec 	addw	r3, r5, #1516	; 0x5ec
 80038f0:	a916      	add	r1, sp, #88	; 0x58
 80038f2:	4618      	mov	r0, r3
 80038f4:	930e      	str	r3, [sp, #56]	; 0x38
 80038f6:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 80038fa:	f00a fba7 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80038fe:	f505 63c3 	add.w	r3, r5, #1560	; 0x618
 8003902:	a916      	add	r1, sp, #88	; 0x58
 8003904:	4618      	mov	r0, r3
 8003906:	930f      	str	r3, [sp, #60]	; 0x3c
 8003908:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800390c:	f00a fb9e 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003910:	f205 6344 	addw	r3, r5, #1604	; 0x644
 8003914:	a916      	add	r1, sp, #88	; 0x58
 8003916:	4618      	mov	r0, r3
 8003918:	9310      	str	r3, [sp, #64]	; 0x40
 800391a:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800391e:	f00a fb95 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003922:	f505 63ce 	add.w	r3, r5, #1648	; 0x670
 8003926:	4618      	mov	r0, r3
 8003928:	9311      	str	r3, [sp, #68]	; 0x44
 800392a:	f7ff fead 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 800392e:	f205 639c 	addw	r3, r5, #1692	; 0x69c
 8003932:	a916      	add	r1, sp, #88	; 0x58
 8003934:	4618      	mov	r0, r3
 8003936:	9312      	str	r3, [sp, #72]	; 0x48
 8003938:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800393c:	f00a fb86 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003940:	f505 63d9 	add.w	r3, r5, #1736	; 0x6c8
 8003944:	a916      	add	r1, sp, #88	; 0x58
 8003946:	4618      	mov	r0, r3
 8003948:	9313      	str	r3, [sp, #76]	; 0x4c
 800394a:	f8ad 6058 	strh.w	r6, [sp, #88]	; 0x58
 800394e:	f00a fb7d 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003952:	f205 63f4 	addw	r3, r5, #1780	; 0x6f4
 8003956:	ee09 3a90 	vmov	s19, r3
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800395a:	2226      	movs	r2, #38	; 0x26
 800395c:	4621      	mov	r1, r4
 800395e:	4618      	mov	r0, r3
 8003960:	f01d fff0 	bl	8021944 <memset>
class Widget : public Drawable
 8003964:	ee19 0a90 	vmov	r0, s19
 8003968:	f7ff fe7c 	bl	8003664 <_ZN8touchgfx8DrawableC1Ev>
 800396c:	4b32      	ldr	r3, [pc, #200]	; (8003a38 <_ZN18GameScreenViewBaseC1Ev+0x398>)
 800396e:	f8c5 371c 	str.w	r3, [r5, #1820]	; 0x71c
 8003972:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8003976:	f8c5 3728 	str.w	r3, [r5, #1832]	; 0x728
        : TextAreaWithWildcardBase(), wc1(0)
 800397a:	4b30      	ldr	r3, [pc, #192]	; (8003a3c <_ZN18GameScreenViewBaseC1Ev+0x39c>)
 800397c:	f8c5 36f4 	str.w	r3, [r5, #1780]	; 0x6f4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003980:	f04f 33ff 	mov.w	r3, #4294967295
 8003984:	f8c5 3734 	str.w	r3, [r5, #1844]	; 0x734
 8003988:	f505 63e8 	add.w	r3, r5, #1856	; 0x740
 800398c:	9314      	str	r3, [sp, #80]	; 0x50
 800398e:	f8a5 6720 	strh.w	r6, [r5, #1824]	; 0x720
 8003992:	f04f 33ff 	mov.w	r3, #4294967295
 8003996:	a916      	add	r1, sp, #88	; 0x58
 8003998:	9814      	ldr	r0, [sp, #80]	; 0x50
        : color(col)
 800399a:	f8c5 4724 	str.w	r4, [r5, #1828]	; 0x724
 800399e:	f8a5 472c 	strh.w	r4, [r5, #1836]	; 0x72c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80039a2:	f8c5 4730 	str.w	r4, [r5, #1840]	; 0x730
              text(0)
 80039a6:	f8c5 4738 	str.w	r4, [r5, #1848]	; 0x738
 80039aa:	f8c5 473c 	str.w	r4, [r5, #1852]	; 0x73c
 80039ae:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 80039b2:	f00a fb4b 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 240, 320);
 80039b6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80039ba:	4622      	mov	r2, r4
 80039bc:	4650      	mov	r0, sl
 80039be:	9300      	str	r3, [sp, #0]
 80039c0:	4621      	mov	r1, r4
 80039c2:	23f0      	movs	r3, #240	; 0xf0
 80039c4:	1d2e      	adds	r6, r5, #4
 80039c6:	f7fe fcee 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039ca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80039ce:	4651      	mov	r1, sl
 80039d0:	66ab      	str	r3, [r5, #104]	; 0x68
 80039d2:	4630      	mov	r0, r6
 80039d4:	f009 f8cc 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 240, 320);
 80039d8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80039dc:	4622      	mov	r2, r4
 80039de:	9815      	ldr	r0, [sp, #84]	; 0x54
 80039e0:	9300      	str	r3, [sp, #0]
 80039e2:	4621      	mov	r1, r4
 80039e4:	23f0      	movs	r3, #240	; 0xf0
 80039e6:	f7fe fcde 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039ea:	f04f 33ff 	mov.w	r3, #4294967295
 80039ee:	f8c5 3094 	str.w	r3, [r5, #148]	; 0x94
 80039f2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80039f4:	4630      	mov	r0, r6
 80039f6:	f009 f8bb 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80039fa:	f04f 0a05 	mov.w	sl, #5
    board.setBitmap(touchgfx::Bitmap(BITMAP_BOARD_ID));
 80039fe:	4648      	mov	r0, r9
 8003a00:	a916      	add	r1, sp, #88	; 0x58
 8003a02:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003a06:	f00b f9f4 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    board.setPosition(5, 83, 230, 230);
 8003a0a:	23e6      	movs	r3, #230	; 0xe6
 8003a0c:	9300      	str	r3, [sp, #0]
 8003a0e:	2253      	movs	r2, #83	; 0x53
 8003a10:	4651      	mov	r1, sl
 8003a12:	4648      	mov	r0, r9
 8003a14:	f7fe fcc7 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    board.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003a18:	4648      	mov	r0, r9
 8003a1a:	4621      	mov	r1, r4
 8003a1c:	f00a fad1 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8003a20:	4649      	mov	r1, r9
 8003a22:	4630      	mov	r0, r6
 8003a24:	f009 f8a4 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat3_r.setPosition(-34, -68, 23, 68);
 8003a28:	2344      	movs	r3, #68	; 0x44
 8003a2a:	f06f 0243 	mvn.w	r2, #67	; 0x43
 8003a2e:	4638      	mov	r0, r7
 8003a30:	e006      	b.n	8003a40 <_ZN18GameScreenViewBaseC1Ev+0x3a0>
 8003a32:	bf00      	nop
 8003a34:	0802418c 	.word	0x0802418c
 8003a38:	08023528 	.word	0x08023528
 8003a3c:	08023608 	.word	0x08023608
 8003a40:	9300      	str	r3, [sp, #0]
 8003a42:	f06f 0121 	mvn.w	r1, #33	; 0x21
 8003a46:	2317      	movs	r3, #23
    scalableImage1_1_1.setPosition(0, 22, 23, 23);
 8003a48:	f04f 0917 	mov.w	r9, #23
 8003a4c:	f04f 0a07 	mov.w	sl, #7
    boat3_r.setPosition(-34, -68, 23, 68);
 8003a50:	f7fe fca9 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003a54:	ee1a 0a10 	vmov	r0, s20
 8003a58:	a916      	add	r1, sp, #88	; 0x58
 8003a5a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003a5e:	f00b f9c8 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1.setPosition(0, 22, 23, 23);
 8003a62:	464b      	mov	r3, r9
 8003a64:	2216      	movs	r2, #22
 8003a66:	ee1a 0a10 	vmov	r0, s20
 8003a6a:	4621      	mov	r1, r4
 8003a6c:	f8cd 9000 	str.w	r9, [sp]
 8003a70:	f7fe fc99 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003a74:	ee1a 0a10 	vmov	r0, s20
 8003a78:	4621      	mov	r1, r4
 8003a7a:	f00a faa2 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_1_1);
 8003a7e:	4638      	mov	r0, r7
 8003a80:	ee1a 1a10 	vmov	r1, s20
 8003a84:	f009 f874 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003a88:	ee1a 0a90 	vmov	r0, s21
 8003a8c:	a916      	add	r1, sp, #88	; 0x58
 8003a8e:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003a92:	f00b f9ae 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1.setPosition(0, 0, 23, 23);
 8003a96:	464b      	mov	r3, r9
 8003a98:	4622      	mov	r2, r4
 8003a9a:	ee1a 0a90 	vmov	r0, s21
 8003a9e:	4621      	mov	r1, r4
 8003aa0:	f8cd 9000 	str.w	r9, [sp]
 8003aa4:	f7fe fc7f 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003aa8:	ee1a 0a90 	vmov	r0, s21
 8003aac:	4621      	mov	r1, r4
 8003aae:	f00a fa88 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_1);
 8003ab2:	4638      	mov	r0, r7
 8003ab4:	ee1a 1a90 	vmov	r1, s21
 8003ab8:	f009 f85a 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003abc:	ee1b 0a10 	vmov	r0, s22
 8003ac0:	a916      	add	r1, sp, #88	; 0x58
 8003ac2:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003ac6:	f00b f994 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 44, 23, 23);
 8003aca:	464b      	mov	r3, r9
 8003acc:	222c      	movs	r2, #44	; 0x2c
 8003ace:	ee1b 0a10 	vmov	r0, s22
 8003ad2:	4621      	mov	r1, r4
 8003ad4:	f8cd 9000 	str.w	r9, [sp]
 8003ad8:	f7fe fc65 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003adc:	ee1b 0a10 	vmov	r0, s22
 8003ae0:	4621      	mov	r1, r4
 8003ae2:	f00a fa6e 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1);
 8003ae6:	4638      	mov	r0, r7
 8003ae8:	ee1b 1a10 	vmov	r1, s22
 8003aec:	f009 f840 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003af0:	4639      	mov	r1, r7
 8003af2:	4630      	mov	r0, r6
 8003af4:	f009 f83c 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat4_r.setPosition(-103, -92, 23, 90);
 8003af8:	235a      	movs	r3, #90	; 0x5a
 8003afa:	f06f 025b 	mvn.w	r2, #91	; 0x5b
 8003afe:	ee18 0a10 	vmov	r0, s16
 8003b02:	9300      	str	r3, [sp, #0]
 8003b04:	f06f 0166 	mvn.w	r1, #102	; 0x66
 8003b08:	464b      	mov	r3, r9
 8003b0a:	f7fe fc4c 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003b0e:	ee1b 0a90 	vmov	r0, s23
 8003b12:	a916      	add	r1, sp, #88	; 0x58
 8003b14:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003b18:	f00b f96b 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_2.setPosition(0, 22, 23, 23);
 8003b1c:	464b      	mov	r3, r9
 8003b1e:	2216      	movs	r2, #22
 8003b20:	ee1b 0a90 	vmov	r0, s23
 8003b24:	4621      	mov	r1, r4
 8003b26:	f8cd 9000 	str.w	r9, [sp]
 8003b2a:	f7fe fc3c 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003b2e:	ee1b 0a90 	vmov	r0, s23
 8003b32:	4621      	mov	r1, r4
 8003b34:	f00a fa45 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_1_1_2);
 8003b38:	ee1b 1a90 	vmov	r1, s23
 8003b3c:	ee18 0a10 	vmov	r0, s16
 8003b40:	f009 f816 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003b44:	ee1c 0a10 	vmov	r0, s24
 8003b48:	a916      	add	r1, sp, #88	; 0x58
 8003b4a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003b4e:	f00b f950 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_2.setPosition(0, 0, 23, 23);
 8003b52:	464b      	mov	r3, r9
 8003b54:	4622      	mov	r2, r4
 8003b56:	ee1c 0a10 	vmov	r0, s24
 8003b5a:	4621      	mov	r1, r4
 8003b5c:	f8cd 9000 	str.w	r9, [sp]
 8003b60:	f7fe fc21 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003b64:	ee1c 0a10 	vmov	r0, s24
 8003b68:	4621      	mov	r1, r4
 8003b6a:	f00a fa2a 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_1_2);
 8003b6e:	ee1c 1a10 	vmov	r1, s24
 8003b72:	ee18 0a10 	vmov	r0, s16
 8003b76:	f008 fffb 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003b7a:	ee1c 0a90 	vmov	r0, s25
 8003b7e:	a916      	add	r1, sp, #88	; 0x58
 8003b80:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003b84:	f00b f935 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3.setPosition(0, 44, 23, 23);
 8003b88:	464b      	mov	r3, r9
 8003b8a:	222c      	movs	r2, #44	; 0x2c
 8003b8c:	ee1c 0a90 	vmov	r0, s25
 8003b90:	4621      	mov	r1, r4
 8003b92:	f8cd 9000 	str.w	r9, [sp]
 8003b96:	f7fe fc06 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003b9a:	ee1c 0a90 	vmov	r0, s25
 8003b9e:	4621      	mov	r1, r4
 8003ba0:	f00a fa0f 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_3);
 8003ba4:	ee1c 1a90 	vmov	r1, s25
 8003ba8:	ee18 0a10 	vmov	r0, s16
 8003bac:	f008 ffe0 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1.setPosition(0, 67, 23, 25);
 8003bb0:	2719      	movs	r7, #25
    scalableImage1_3_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003bb2:	ee1d 0a10 	vmov	r0, s26
 8003bb6:	a916      	add	r1, sp, #88	; 0x58
 8003bb8:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003bbc:	f00b f919 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1.setPosition(0, 67, 23, 25);
 8003bc0:	464b      	mov	r3, r9
 8003bc2:	2243      	movs	r2, #67	; 0x43
 8003bc4:	ee1d 0a10 	vmov	r0, s26
 8003bc8:	9700      	str	r7, [sp, #0]
 8003bca:	4621      	mov	r1, r4
 8003bcc:	f7fe fbeb 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003bd0:	ee1d 0a10 	vmov	r0, s26
 8003bd4:	4621      	mov	r1, r4
 8003bd6:	f00a f9f4 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_3_1);
 8003bda:	ee1d 1a10 	vmov	r1, s26
 8003bde:	ee18 0a10 	vmov	r0, s16
 8003be2:	f008 ffc5 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003be6:	ee18 1a10 	vmov	r1, s16
 8003bea:	4630      	mov	r0, r6
 8003bec:	f008 ffc0 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat5_r.setPosition(-135, -115, 23, 113);
 8003bf0:	2371      	movs	r3, #113	; 0x71
 8003bf2:	f06f 0272 	mvn.w	r2, #114	; 0x72
 8003bf6:	4640      	mov	r0, r8
 8003bf8:	9300      	str	r3, [sp, #0]
 8003bfa:	f06f 0186 	mvn.w	r1, #134	; 0x86
 8003bfe:	464b      	mov	r3, r9
 8003c00:	f7fe fbd1 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003c04:	ee1d 0a90 	vmov	r0, s27
 8003c08:	a916      	add	r1, sp, #88	; 0x58
 8003c0a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003c0e:	f00b f8f0 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_2_1.setPosition(0, 22, 23, 23);
 8003c12:	464b      	mov	r3, r9
 8003c14:	2216      	movs	r2, #22
 8003c16:	ee1d 0a90 	vmov	r0, s27
 8003c1a:	4621      	mov	r1, r4
 8003c1c:	f8cd 9000 	str.w	r9, [sp]
 8003c20:	f7fe fbc1 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003c24:	ee1d 0a90 	vmov	r0, s27
 8003c28:	4621      	mov	r1, r4
 8003c2a:	f00a f9ca 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_1_1_2_1);
 8003c2e:	4640      	mov	r0, r8
 8003c30:	ee1d 1a90 	vmov	r1, s27
 8003c34:	f008 ff9c 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003c38:	ee1e 0a10 	vmov	r0, s28
 8003c3c:	a916      	add	r1, sp, #88	; 0x58
 8003c3e:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003c42:	f00b f8d6 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_2_1.setPosition(0, 0, 23, 23);
 8003c46:	464b      	mov	r3, r9
 8003c48:	4622      	mov	r2, r4
 8003c4a:	ee1e 0a10 	vmov	r0, s28
 8003c4e:	4621      	mov	r1, r4
 8003c50:	f8cd 9000 	str.w	r9, [sp]
 8003c54:	f7fe fba7 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003c58:	ee1e 0a10 	vmov	r0, s28
 8003c5c:	4621      	mov	r1, r4
 8003c5e:	f00a f9b0 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_1_2_1);
 8003c62:	4640      	mov	r0, r8
 8003c64:	ee1e 1a10 	vmov	r1, s28
 8003c68:	f008 ff82 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003c6c:	ee1e 0a90 	vmov	r0, s29
 8003c70:	a916      	add	r1, sp, #88	; 0x58
 8003c72:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003c76:	f00b f8bc 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_2.setPosition(0, 44, 23, 23);
 8003c7a:	464b      	mov	r3, r9
 8003c7c:	222c      	movs	r2, #44	; 0x2c
 8003c7e:	ee1e 0a90 	vmov	r0, s29
 8003c82:	4621      	mov	r1, r4
 8003c84:	f8cd 9000 	str.w	r9, [sp]
 8003c88:	f7fe fb8d 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003c8c:	ee1e 0a90 	vmov	r0, s29
 8003c90:	4621      	mov	r1, r4
 8003c92:	f00a f996 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_2);
 8003c96:	4640      	mov	r0, r8
 8003c98:	ee1e 1a90 	vmov	r1, s29
 8003c9c:	f008 ff68 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003ca0:	ee1f 0a10 	vmov	r0, s30
 8003ca4:	a916      	add	r1, sp, #88	; 0x58
 8003ca6:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003caa:	f00b f8a2 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1_1.setPosition(0, 67, 23, 25);
 8003cae:	464b      	mov	r3, r9
 8003cb0:	2243      	movs	r2, #67	; 0x43
 8003cb2:	ee1f 0a10 	vmov	r0, s30
 8003cb6:	9700      	str	r7, [sp, #0]
 8003cb8:	4621      	mov	r1, r4
 8003cba:	f7fe fb74 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003cbe:	ee1f 0a10 	vmov	r0, s30
 8003cc2:	4621      	mov	r1, r4
 8003cc4:	f00a f97d 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_1_1);
 8003cc8:	4640      	mov	r0, r8
 8003cca:	ee1f 1a10 	vmov	r1, s30
 8003cce:	f008 ff4f 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003cd2:	ee1f 0a90 	vmov	r0, s31
 8003cd6:	a916      	add	r1, sp, #88	; 0x58
 8003cd8:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003cdc:	f00b f889 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1_1_1.setPosition(0, 90, 23, 25);
 8003ce0:	464b      	mov	r3, r9
 8003ce2:	225a      	movs	r2, #90	; 0x5a
 8003ce4:	ee1f 0a90 	vmov	r0, s31
 8003ce8:	9700      	str	r7, [sp, #0]
 8003cea:	4621      	mov	r1, r4
 8003cec:	f7fe fb5b 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003cf0:	ee1f 0a90 	vmov	r0, s31
 8003cf4:	4621      	mov	r1, r4
 8003cf6:	f00a f964 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_1_1_1);
 8003cfa:	4640      	mov	r0, r8
 8003cfc:	ee1f 1a90 	vmov	r1, s31
 8003d00:	f008 ff36 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d04:	4641      	mov	r1, r8
 8003d06:	4630      	mov	r0, r6
    boat2_r.setPosition(-68, -46, 23, 44);
 8003d08:	f04f 082c 	mov.w	r8, #44	; 0x2c
 8003d0c:	f008 ff30 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d10:	464b      	mov	r3, r9
 8003d12:	f06f 022d 	mvn.w	r2, #45	; 0x2d
 8003d16:	9802      	ldr	r0, [sp, #8]
 8003d18:	f8cd 8000 	str.w	r8, [sp]
 8003d1c:	f06f 0143 	mvn.w	r1, #67	; 0x43
 8003d20:	f7fe fb41 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003d24:	9803      	ldr	r0, [sp, #12]
 8003d26:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003d2a:	a916      	add	r1, sp, #88	; 0x58
 8003d2c:	f00b f861 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_1.setPosition(0, 0, 23, 23);
 8003d30:	464b      	mov	r3, r9
 8003d32:	4622      	mov	r2, r4
 8003d34:	9803      	ldr	r0, [sp, #12]
 8003d36:	f8cd 9000 	str.w	r9, [sp]
 8003d3a:	4621      	mov	r1, r4
 8003d3c:	f7fe fb33 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003d40:	9803      	ldr	r0, [sp, #12]
 8003d42:	4621      	mov	r1, r4
 8003d44:	f00a f93d 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2_r.add(scalableImage1_1_1_1);
 8003d48:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003d4c:	f008 ff10 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8003d50:	9804      	ldr	r0, [sp, #16]
 8003d52:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003d56:	a916      	add	r1, sp, #88	; 0x58
 8003d58:	f00b f84b 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_2.setPosition(0, 22, 23, 23);
 8003d5c:	464b      	mov	r3, r9
 8003d5e:	2216      	movs	r2, #22
 8003d60:	9804      	ldr	r0, [sp, #16]
 8003d62:	f8cd 9000 	str.w	r9, [sp]
 8003d66:	4621      	mov	r1, r4
 8003d68:	f7fe fb1d 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003d6c:	9804      	ldr	r0, [sp, #16]
 8003d6e:	4621      	mov	r1, r4
 8003d70:	f00a f927 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2_r.add(scalableImage1_2);
 8003d74:	9904      	ldr	r1, [sp, #16]
 8003d76:	9802      	ldr	r0, [sp, #8]
 8003d78:	f008 fefa 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003d7c:	9902      	ldr	r1, [sp, #8]
 8003d7e:	4630      	mov	r0, r6
 8003d80:	f008 fef6 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat3.setPosition(-79, 72, 68, 23);
 8003d84:	2344      	movs	r3, #68	; 0x44
 8003d86:	2248      	movs	r2, #72	; 0x48
 8003d88:	ee19 0a10 	vmov	r0, s18
 8003d8c:	f06f 014e 	mvn.w	r1, #78	; 0x4e
 8003d90:	f8cd 9000 	str.w	r9, [sp]
 8003d94:	f04f 0a08 	mov.w	sl, #8
 8003d98:	f7fe fb05 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003d9c:	9805      	ldr	r0, [sp, #20]
 8003d9e:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003da2:	a916      	add	r1, sp, #88	; 0x58
 8003da4:	f00b f825 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2.setPosition(44, 0, 23, 23);
 8003da8:	464b      	mov	r3, r9
 8003daa:	4622      	mov	r2, r4
 8003dac:	9805      	ldr	r0, [sp, #20]
 8003dae:	f8cd 9000 	str.w	r9, [sp]
 8003db2:	4641      	mov	r1, r8
 8003db4:	f7fe faf7 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003db8:	9805      	ldr	r0, [sp, #20]
 8003dba:	4621      	mov	r1, r4
 8003dbc:	f00a f901 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2_2);
 8003dc0:	9905      	ldr	r1, [sp, #20]
 8003dc2:	ee19 0a10 	vmov	r0, s18
 8003dc6:	f008 fed3 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003dca:	9806      	ldr	r0, [sp, #24]
 8003dcc:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003dd0:	a916      	add	r1, sp, #88	; 0x58
 8003dd2:	f00b f80e 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1.setPosition(22, 0, 23, 23);
 8003dd6:	464b      	mov	r3, r9
 8003dd8:	4622      	mov	r2, r4
 8003dda:	9806      	ldr	r0, [sp, #24]
 8003ddc:	f8cd 9000 	str.w	r9, [sp]
 8003de0:	2116      	movs	r1, #22
 8003de2:	f7fe fae0 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003de6:	9806      	ldr	r0, [sp, #24]
 8003de8:	4621      	mov	r1, r4
 8003dea:	f00a f8ea 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2_1);
 8003dee:	9906      	ldr	r1, [sp, #24]
 8003df0:	ee19 0a10 	vmov	r0, s18
 8003df4:	f008 febc 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003df8:	9807      	ldr	r0, [sp, #28]
 8003dfa:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003dfe:	a916      	add	r1, sp, #88	; 0x58
 8003e00:	f00a fff7 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2.setPosition(0, 0, 23, 23);
 8003e04:	464b      	mov	r3, r9
 8003e06:	4622      	mov	r2, r4
 8003e08:	9807      	ldr	r0, [sp, #28]
 8003e0a:	f8cd 9000 	str.w	r9, [sp]
 8003e0e:	4621      	mov	r1, r4
 8003e10:	f7fe fac9 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003e14:	9807      	ldr	r0, [sp, #28]
 8003e16:	4621      	mov	r1, r4
 8003e18:	f00a f8d3 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2);
 8003e1c:	9907      	ldr	r1, [sp, #28]
 8003e1e:	ee19 0a10 	vmov	r0, s18
 8003e22:	f008 fea5 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e26:	ee19 1a10 	vmov	r1, s18
 8003e2a:	4630      	mov	r0, r6
 8003e2c:	f008 fea0 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat4.setPosition(-102, 111, 90, 23);
 8003e30:	235a      	movs	r3, #90	; 0x5a
 8003e32:	226f      	movs	r2, #111	; 0x6f
 8003e34:	ee18 0a90 	vmov	r0, s17
 8003e38:	f06f 0165 	mvn.w	r1, #101	; 0x65
 8003e3c:	f8cd 9000 	str.w	r9, [sp]
 8003e40:	f7fe fab1 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003e44:	9808      	ldr	r0, [sp, #32]
 8003e46:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003e4a:	a916      	add	r1, sp, #88	; 0x58
 8003e4c:	f00a ffd1 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1.setPosition(44, 0, 23, 23);
 8003e50:	464b      	mov	r3, r9
 8003e52:	4622      	mov	r2, r4
 8003e54:	9808      	ldr	r0, [sp, #32]
 8003e56:	f8cd 9000 	str.w	r9, [sp]
 8003e5a:	4641      	mov	r1, r8
 8003e5c:	f7fe faa3 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003e60:	9808      	ldr	r0, [sp, #32]
 8003e62:	4621      	mov	r1, r4
 8003e64:	f00a f8ad 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_2_1);
 8003e68:	9908      	ldr	r1, [sp, #32]
 8003e6a:	ee18 0a90 	vmov	r0, s17
 8003e6e:	f008 fe7f 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003e72:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e74:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003e78:	a916      	add	r1, sp, #88	; 0x58
 8003e7a:	f00a ffba 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1.setPosition(66, 0, 25, 23);
 8003e7e:	463b      	mov	r3, r7
 8003e80:	4622      	mov	r2, r4
 8003e82:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e84:	f8cd 9000 	str.w	r9, [sp]
 8003e88:	2142      	movs	r1, #66	; 0x42
 8003e8a:	f7fe fa8c 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003e8e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e90:	4621      	mov	r1, r4
 8003e92:	f00a f896 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_2_1_1);
 8003e96:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003e98:	ee18 0a90 	vmov	r0, s17
 8003e9c:	f008 fe68 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003ea0:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ea2:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003ea6:	a916      	add	r1, sp, #88	; 0x58
 8003ea8:	f00a ffa3 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_2.setPosition(22, 0, 23, 23);
 8003eac:	464b      	mov	r3, r9
 8003eae:	4622      	mov	r2, r4
 8003eb0:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003eb2:	f8cd 9000 	str.w	r9, [sp]
 8003eb6:	2116      	movs	r1, #22
 8003eb8:	f7fe fa75 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003ebc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ebe:	4621      	mov	r1, r4
 8003ec0:	f00a f87f 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_1_2);
 8003ec4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003ec6:	ee18 0a90 	vmov	r0, s17
 8003eca:	f008 fe51 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_4.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003ece:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003ed0:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003ed4:	a916      	add	r1, sp, #88	; 0x58
 8003ed6:	f00a ff8c 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_4.setPosition(0, 0, 23, 23);
 8003eda:	464b      	mov	r3, r9
 8003edc:	4622      	mov	r2, r4
 8003ede:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003ee0:	f8cd 9000 	str.w	r9, [sp]
 8003ee4:	4621      	mov	r1, r4
 8003ee6:	f7fe fa5e 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_4.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003eea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003eec:	4621      	mov	r1, r4
 8003eee:	f00a f868 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_4);
 8003ef2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003ef4:	ee18 0a90 	vmov	r0, s17
 8003ef8:	f008 fe3a 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003efc:	ee18 1a90 	vmov	r1, s17
 8003f00:	4630      	mov	r0, r6
 8003f02:	f008 fe35 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat5.setPosition(-123, 149, 113, 23);
 8003f06:	2371      	movs	r3, #113	; 0x71
 8003f08:	2295      	movs	r2, #149	; 0x95
 8003f0a:	f06f 017a 	mvn.w	r1, #122	; 0x7a
 8003f0e:	4658      	mov	r0, fp
 8003f10:	f8cd 9000 	str.w	r9, [sp]
 8003f14:	f7fe fa47 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003f18:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003f1a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003f1e:	a916      	add	r1, sp, #88	; 0x58
 8003f20:	f00a ff67 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_2.setPosition(44, 0, 23, 23);
 8003f24:	464b      	mov	r3, r9
 8003f26:	4622      	mov	r2, r4
 8003f28:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003f2a:	f8cd 9000 	str.w	r9, [sp]
 8003f2e:	4641      	mov	r1, r8
 8003f30:	f7fe fa39 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003f34:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003f36:	4621      	mov	r1, r4
 8003f38:	f00a f843 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_2);
 8003f3c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003f3e:	4658      	mov	r0, fp
 8003f40:	f008 fe16 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003f44:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003f46:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003f4a:	a916      	add	r1, sp, #88	; 0x58
 8003f4c:	f00a ff51 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1_1.setPosition(66, 0, 25, 23);
 8003f50:	463b      	mov	r3, r7
 8003f52:	4622      	mov	r2, r4
 8003f54:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003f56:	f8cd 9000 	str.w	r9, [sp]
 8003f5a:	2142      	movs	r1, #66	; 0x42
 8003f5c:	f7fe fa23 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003f60:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003f62:	4621      	mov	r1, r4
 8003f64:	f00a f82d 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_1_1);
 8003f68:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003f6a:	4658      	mov	r0, fp
 8003f6c:	f008 fe00 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003f70:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003f72:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003f76:	a916      	add	r1, sp, #88	; 0x58
 8003f78:	f00a ff3b 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1_1_1.setPosition(90, 0, 25, 23);
 8003f7c:	463b      	mov	r3, r7
 8003f7e:	4622      	mov	r2, r4
 8003f80:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003f82:	f8cd 9000 	str.w	r9, [sp]
 8003f86:	215a      	movs	r1, #90	; 0x5a
 8003f88:	f7fe fa0d 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003f8c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003f8e:	4621      	mov	r1, r4
 8003f90:	f00a f817 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_1_1_1);
 8003f94:	990e      	ldr	r1, [sp, #56]	; 0x38
 8003f96:	4658      	mov	r0, fp
 8003f98:	f008 fdea 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003f9c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003f9e:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003fa2:	a916      	add	r1, sp, #88	; 0x58
 8003fa4:	f00a ff25 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_2_1.setPosition(22, 0, 23, 23);
 8003fa8:	464b      	mov	r3, r9
 8003faa:	4622      	mov	r2, r4
 8003fac:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003fae:	f8cd 9000 	str.w	r9, [sp]
 8003fb2:	2116      	movs	r1, #22
 8003fb4:	f7fe f9f7 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003fb8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003fba:	4621      	mov	r1, r4
 8003fbc:	f00a f801 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_1_2_1);
 8003fc0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003fc2:	4658      	mov	r0, fp
 8003fc4:	f008 fdd4 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_4_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8003fc8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003fca:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8003fce:	a916      	add	r1, sp, #88	; 0x58
 8003fd0:	f00a ff0f 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_4_1.setPosition(0, 0, 23, 23);
 8003fd4:	464b      	mov	r3, r9
 8003fd6:	4622      	mov	r2, r4
 8003fd8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003fda:	f8cd 9000 	str.w	r9, [sp]
 8003fde:	4621      	mov	r1, r4
 8003fe0:	f7fe f9e1 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_4_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003fe4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003fe6:	4621      	mov	r1, r4
 8003fe8:	f009 ffeb 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_4_1);
 8003fec:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003fee:	4658      	mov	r0, fp
 8003ff0:	f008 fdbe 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003ff4:	4659      	mov	r1, fp
 8003ff6:	4630      	mov	r0, r6
 8003ff8:	f008 fdba 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat2.setPosition(6, 83, 44, 23);
 8003ffc:	4643      	mov	r3, r8
 8003ffe:	2253      	movs	r2, #83	; 0x53
 8004000:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004002:	f8cd 9000 	str.w	r9, [sp]
 8004006:	2106      	movs	r1, #6
 8004008:	f7fe f9cd 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 800400c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800400e:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 8004012:	a916      	add	r1, sp, #88	; 0x58
 8004014:	f00a feed 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_1.setPosition(22, 0, 23, 23);
 8004018:	464b      	mov	r3, r9
 800401a:	4622      	mov	r2, r4
 800401c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800401e:	f8cd 9000 	str.w	r9, [sp]
 8004022:	2116      	movs	r1, #22
 8004024:	f7fe f9bf 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004028:	9812      	ldr	r0, [sp, #72]	; 0x48
 800402a:	4621      	mov	r1, r4
 800402c:	f009 ffc9 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2.add(scalableImage2_1_1);
 8004030:	e9dd 0111 	ldrd	r0, r1, [sp, #68]	; 0x44
 8004034:	f008 fd9c 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_3.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004038:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800403a:	f8ad a058 	strh.w	sl, [sp, #88]	; 0x58
 800403e:	a916      	add	r1, sp, #88	; 0x58
 8004040:	f00a fed7 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_3.setPosition(0, 0, 23, 23);
 8004044:	464b      	mov	r3, r9
 8004046:	4622      	mov	r2, r4
 8004048:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800404a:	f8cd 9000 	str.w	r9, [sp]
 800404e:	4621      	mov	r1, r4
 8004050:	f7fe f9a9 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004054:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004056:	4621      	mov	r1, r4
 8004058:	f009 ffb3 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2.add(scalableImage2_3);
 800405c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800405e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004060:	f008 fd86 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004064:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004066:	4630      	mov	r0, r6
 8004068:	f008 fd82 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textShip.setXY(6, 54);
 800406c:	ee19 0a90 	vmov	r0, s19
 8004070:	2236      	movs	r2, #54	; 0x36
 8004072:	2106      	movs	r1, #6
 8004074:	f7fe f98a 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004078:	4b2e      	ldr	r3, [pc, #184]	; (8004134 <_ZN18GameScreenViewBaseC1Ev+0xa94>)
 800407a:	f8c5 3724 	str.w	r3, [r5, #1828]	; 0x724
        boundingArea = calculateBoundingArea();
 800407e:	f04f 33ff 	mov.w	r3, #4294967295
 8004082:	f8c5 3734 	str.w	r3, [r5, #1844]	; 0x734
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004086:	4b2c      	ldr	r3, [pc, #176]	; (8004138 <_ZN18GameScreenViewBaseC1Ev+0xa98>)
        linespace = space;
 8004088:	f8a5 4728 	strh.w	r4, [r5, #1832]	; 0x728
 800408c:	681b      	ldr	r3, [r3, #0]
        boundingArea = calculateBoundingArea();
 800408e:	f8c5 4730 	str.w	r4, [r5, #1840]	; 0x730
 8004092:	f8c5 4738 	str.w	r4, [r5, #1848]	; 0x738
    Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_DESTROYER).getText());
 8004096:	f205 776c 	addw	r7, r5, #1900	; 0x76c
 800409a:	b92b      	cbnz	r3, 80040a8 <_ZN18GameScreenViewBaseC1Ev+0xa08>
 800409c:	4b27      	ldr	r3, [pc, #156]	; (800413c <_ZN18GameScreenViewBaseC1Ev+0xa9c>)
 800409e:	4a28      	ldr	r2, [pc, #160]	; (8004140 <_ZN18GameScreenViewBaseC1Ev+0xaa0>)
 80040a0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040a2:	4828      	ldr	r0, [pc, #160]	; (8004144 <_ZN18GameScreenViewBaseC1Ev+0xaa4>)
 80040a4:	f01d fbb2 	bl	802180c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80040a8:	4b27      	ldr	r3, [pc, #156]	; (8004148 <_ZN18GameScreenViewBaseC1Ev+0xaa8>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040aa:	881b      	ldrh	r3, [r3, #0]
 80040ac:	2b12      	cmp	r3, #18
 80040ae:	d803      	bhi.n	80040b8 <_ZN18GameScreenViewBaseC1Ev+0xa18>
 80040b0:	4b26      	ldr	r3, [pc, #152]	; (800414c <_ZN18GameScreenViewBaseC1Ev+0xaac>)
 80040b2:	4a23      	ldr	r2, [pc, #140]	; (8004140 <_ZN18GameScreenViewBaseC1Ev+0xaa0>)
 80040b4:	2161      	movs	r1, #97	; 0x61
 80040b6:	e7f4      	b.n	80040a2 <_ZN18GameScreenViewBaseC1Ev+0xa02>
        return texts->getText(typedTextId);
 80040b8:	4b25      	ldr	r3, [pc, #148]	; (8004150 <_ZN18GameScreenViewBaseC1Ev+0xab0>)
 80040ba:	2112      	movs	r1, #18
 80040bc:	6818      	ldr	r0, [r3, #0]
 80040be:	f001 fae3 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 80040c2:	4a24      	ldr	r2, [pc, #144]	; (8004154 <_ZN18GameScreenViewBaseC1Ev+0xab4>)
 80040c4:	4603      	mov	r3, r0
 80040c6:	2132      	movs	r1, #50	; 0x32
 80040c8:	4638      	mov	r0, r7
 80040ca:	f00f fddd 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textShip.resizeToCurrentText();
 80040ce:	ee19 0a90 	vmov	r0, s19
        wc1 = value;
 80040d2:	f8c5 773c 	str.w	r7, [r5, #1852]	; 0x73c
 80040d6:	f00a fcdd 	bl	800ea94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80040da:	4b1f      	ldr	r3, [pc, #124]	; (8004158 <_ZN18GameScreenViewBaseC1Ev+0xab8>)
 80040dc:	9316      	str	r3, [sp, #88]	; 0x58
    textShip.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4OIJ));
 80040de:	ee19 0a90 	vmov	r0, s19
 80040e2:	2313      	movs	r3, #19
 80040e4:	a916      	add	r1, sp, #88	; 0x58
 80040e6:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
 80040ea:	f00a fcf3 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80040ee:	ee19 1a90 	vmov	r1, s19
 80040f2:	4630      	mov	r0, r6
 80040f4:	f008 fd3c 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_YOUR_FLEET_ID));
 80040f8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80040fa:	2311      	movs	r3, #17
 80040fc:	a916      	add	r1, sp, #88	; 0x58
 80040fe:	f8ad 3058 	strh.w	r3, [sp, #88]	; 0x58
 8004102:	f00a fe76 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage3.setPosition(6, 6, 229, 32);
 8004106:	2206      	movs	r2, #6
 8004108:	2320      	movs	r3, #32
 800410a:	4611      	mov	r1, r2
 800410c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800410e:	9300      	str	r3, [sp, #0]
 8004110:	23e5      	movs	r3, #229	; 0xe5
 8004112:	f7fe f948 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004116:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004118:	4621      	mov	r1, r4
 800411a:	f009 ff52 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800411e:	4630      	mov	r0, r6
 8004120:	9914      	ldr	r1, [sp, #80]	; 0x50
 8004122:	f008 fd25 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004126:	4628      	mov	r0, r5
 8004128:	b019      	add	sp, #100	; 0x64
 800412a:	ecbd 8b10 	vpop	{d8-d15}
 800412e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004132:	bf00      	nop
 8004134:	ff1434a8 	.word	0xff1434a8
 8004138:	20015024 	.word	0x20015024
 800413c:	0802345c 	.word	0x0802345c
 8004140:	080235c2 	.word	0x080235c2
 8004144:	080234d9 	.word	0x080234d9
 8004148:	20015028 	.word	0x20015028
 800414c:	08023584 	.word	0x08023584
 8004150:	20015030 	.word	0x20015030
 8004154:	080235fa 	.word	0x080235fa
 8004158:	08023528 	.word	0x08023528

0800415c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800415c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800415e:	4770      	bx	lr

08004160 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004160:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004162:	4770      	bx	lr

08004164 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004164:	4770      	bx	lr

08004166 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004166:	888b      	ldrh	r3, [r1, #4]
 8004168:	69c0      	ldr	r0, [r0, #28]
 800416a:	680a      	ldr	r2, [r1, #0]
 800416c:	0adb      	lsrs	r3, r3, #11
 800416e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004172:	4410      	add	r0, r2
 8004174:	4770      	bx	lr

08004176 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004176:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004178:	b1c2      	cbz	r2, 80041ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800417a:	7b13      	ldrb	r3, [r2, #12]
 800417c:	b1b3      	cbz	r3, 80041ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800417e:	7b54      	ldrb	r4, [r2, #13]
 8004180:	7ad2      	ldrb	r2, [r2, #11]
 8004182:	0224      	lsls	r4, r4, #8
 8004184:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004188:	4314      	orrs	r4, r2
 800418a:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800418c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800418e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8004192:	8813      	ldrh	r3, [r2, #0]
 8004194:	428b      	cmp	r3, r1
 8004196:	d102      	bne.n	800419e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8004198:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800419c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800419e:	d805      	bhi.n	80041ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80041a0:	3801      	subs	r0, #1
 80041a2:	b280      	uxth	r0, r0
 80041a4:	3204      	adds	r2, #4
 80041a6:	2800      	cmp	r0, #0
 80041a8:	d1f3      	bne.n	8004192 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80041aa:	e7f7      	b.n	800419c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80041ac:	2000      	movs	r0, #0
 80041ae:	e7f5      	b.n	800419c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080041b0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80041b0:	b510      	push	{r4, lr}
 80041b2:	212c      	movs	r1, #44	; 0x2c
 80041b4:	4604      	mov	r4, r0
 80041b6:	f01d fa79 	bl	80216ac <_ZdlPvj>
 80041ba:	4620      	mov	r0, r4
 80041bc:	bd10      	pop	{r4, pc}
	...

080041c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80041c0:	b530      	push	{r4, r5, lr}
 80041c2:	b08b      	sub	sp, #44	; 0x2c
 80041c4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80041c6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80041ca:	9508      	str	r5, [sp, #32]
 80041cc:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80041d0:	9507      	str	r5, [sp, #28]
 80041d2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80041d6:	9506      	str	r5, [sp, #24]
 80041d8:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80041dc:	9505      	str	r5, [sp, #20]
 80041de:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80041e2:	9504      	str	r5, [sp, #16]
 80041e4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80041e8:	9503      	str	r5, [sp, #12]
 80041ea:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80041ee:	9502      	str	r5, [sp, #8]
 80041f0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80041f4:	9501      	str	r5, [sp, #4]
 80041f6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80041fa:	9500      	str	r5, [sp, #0]
 80041fc:	f00d fdb8 	bl	8011d70 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004200:	4b06      	ldr	r3, [pc, #24]	; (800421c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004202:	6023      	str	r3, [r4, #0]
 8004204:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004206:	61e3      	str	r3, [r4, #28]
 8004208:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800420a:	6223      	str	r3, [r4, #32]
 800420c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800420e:	6263      	str	r3, [r4, #36]	; 0x24
 8004210:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004212:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8004214:	4620      	mov	r0, r4
 8004216:	b00b      	add	sp, #44	; 0x2c
 8004218:	bd30      	pop	{r4, r5, pc}
 800421a:	bf00      	nop
 800421c:	080241c0 	.word	0x080241c0

08004220 <_ZN18HomeScreenViewBase9MultiModeEv>:
     * Virtual Action Handlers
     */
    virtual void MultiMode()
    {
        // Override and implement this function in HomeScreen
    }
 8004220:	4770      	bx	lr

08004222 <_ZN18HomeScreenViewBaseD1Ev>:
}

HomeScreenViewBase::~HomeScreenViewBase()
{

}
 8004222:	4770      	bx	lr

08004224 <_ZN18HomeScreenViewBase11setupScreenEv>:

void HomeScreenViewBase::setupScreen()
{

}
 8004224:	4770      	bx	lr

08004226 <_ZN8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004226:	4770      	bx	lr

08004228 <_ZN8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004228:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800422a:	68c2      	ldr	r2, [r0, #12]
 800422c:	6844      	ldr	r4, [r0, #4]
 800422e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004230:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004232:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004236:	07d2      	lsls	r2, r2, #31
 8004238:	bf48      	it	mi
 800423a:	5962      	ldrmi	r2, [r4, r5]
 800423c:	689b      	ldr	r3, [r3, #8]
    }
 800423e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004240:	bf48      	it	mi
 8004242:	58d3      	ldrmi	r3, [r2, r3]
 8004244:	4718      	bx	r3

08004246 <_ZNK8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004246:	6843      	ldr	r3, [r0, #4]
 8004248:	b12b      	cbz	r3, 8004256 <_ZNK8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800424a:	6883      	ldr	r3, [r0, #8]
 800424c:	b92b      	cbnz	r3, 800425a <_ZNK8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800424e:	68c0      	ldr	r0, [r0, #12]
 8004250:	f000 0001 	and.w	r0, r0, #1
 8004254:	4770      	bx	lr
 8004256:	4618      	mov	r0, r3
 8004258:	4770      	bx	lr
 800425a:	2001      	movs	r0, #1
    }
 800425c:	4770      	bx	lr

0800425e <_ZN8touchgfx8CallbackI18HomeScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800425e:	b510      	push	{r4, lr}
 8004260:	2110      	movs	r1, #16
 8004262:	4604      	mov	r4, r0
 8004264:	f01d fa22 	bl	80216ac <_ZdlPvj>
 8004268:	4620      	mov	r0, r4
 800426a:	bd10      	pop	{r4, pc}

0800426c <_ZN18HomeScreenViewBaseD0Ev>:
HomeScreenViewBase::~HomeScreenViewBase()
 800426c:	b510      	push	{r4, lr}
}
 800426e:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
HomeScreenViewBase::~HomeScreenViewBase()
 8004272:	4604      	mov	r4, r0
}
 8004274:	f01d fa1a 	bl	80216ac <_ZdlPvj>
 8004278:	4620      	mov	r0, r4
 800427a:	bd10      	pop	{r4, pc}

0800427c <_ZN18HomeScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void HomeScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
 800427c:	f500 73a4 	add.w	r3, r0, #328	; 0x148
 8004280:	4299      	cmp	r1, r3
{
 8004282:	b570      	push	{r4, r5, r6, lr}
 8004284:	4604      	mov	r4, r0
 8004286:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8004288:	d103      	bne.n	8004292 <_ZN18HomeScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800428a:	f00c fc03 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to GameScreen
        //Go to GameScreen with screen transition towards East
        application().gotoGameScreenScreenSlideTransitionEast();
 800428e:	f7fe fdb1 	bl	8002df4 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>
    }
    if (&src == &buttonWithLabel1_1)
 8004292:	f504 73c8 	add.w	r3, r4, #400	; 0x190
 8004296:	429d      	cmp	r5, r3
 8004298:	d105      	bne.n	80042a6 <_ZN18HomeScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
    {
        //Interaction5
        //When buttonWithLabel1_1 clicked call virtual function
        //Call MultiMode
        MultiMode();
 800429a:	6823      	ldr	r3, [r4, #0]
 800429c:	4620      	mov	r0, r4
 800429e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    }
}
 80042a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        MultiMode();
 80042a4:	4718      	bx	r3
}
 80042a6:	bd70      	pop	{r4, r5, r6, pc}

080042a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
        : x(0), y(0), width(0), height(0)
 80042a8:	2300      	movs	r3, #0
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 80042aa:	b510      	push	{r4, lr}
 80042ac:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80042b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
          visible(true)
 80042b4:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80042b8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80042bc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80042c0:	8483      	strh	r3, [r0, #36]	; 0x24
        : Widget(), bitmap(bmp), alpha(255)
 80042c2:	4b06      	ldr	r3, [pc, #24]	; (80042dc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x34>)
 80042c4:	6003      	str	r3, [r0, #0]
 80042c6:	880b      	ldrh	r3, [r1, #0]
 80042c8:	84c3      	strh	r3, [r0, #38]	; 0x26
 80042ca:	23ff      	movs	r3, #255	; 0xff
    Image(const Bitmap& bmp = Bitmap())
 80042cc:	4604      	mov	r4, r0
        : Widget(), bitmap(bmp), alpha(255)
 80042ce:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
    {
        Image::setBitmap(bmp);
 80042d2:	f00a fd8e 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80042d6:	4620      	mov	r0, r4
 80042d8:	bd10      	pop	{r4, pc}
 80042da:	bf00      	nop
 80042dc:	08024cd8 	.word	0x08024cd8

080042e0 <_ZN18HomeScreenViewBaseC1Ev>:
HomeScreenViewBase::HomeScreenViewBase() :
 80042e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042e4:	ed2d 8b02 	vpush	{d8}
 80042e8:	4604      	mov	r4, r0
 80042ea:	b085      	sub	sp, #20
    buttonCallback(this, &HomeScreenViewBase::buttonCallbackHandler)
 80042ec:	46a0      	mov	r8, r4
 80042ee:	f00d ffe7 	bl	80122c0 <_ZN8touchgfx6ScreenC1Ev>
 80042f2:	2200      	movs	r2, #0
 80042f4:	4b77      	ldr	r3, [pc, #476]	; (80044d4 <_ZN18HomeScreenViewBaseC1Ev+0x1f4>)
 80042f6:	63e2      	str	r2, [r4, #60]	; 0x3c
 80042f8:	f848 3b40 	str.w	r3, [r8], #64
 80042fc:	4640      	mov	r0, r8
 80042fe:	f7fe f865 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 8004302:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8004306:	4618      	mov	r0, r3
 8004308:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800430c:	ee08 3a90 	vmov	s17, r3
 8004310:	f104 0ac4 	add.w	sl, r4, #196	; 0xc4
 8004314:	f7fe f85a 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 8004318:	f64f 75ff 	movw	r5, #65535	; 0xffff
 800431c:	a903      	add	r1, sp, #12
 800431e:	4658      	mov	r0, fp
 8004320:	f104 09f0 	add.w	r9, r4, #240	; 0xf0
 8004324:	f8ad 500c 	strh.w	r5, [sp, #12]
 8004328:	f7ff ffbe 	bl	80042a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800432c:	a903      	add	r1, sp, #12
 800432e:	4650      	mov	r0, sl
 8004330:	f8ad 500c 	strh.w	r5, [sp, #12]
 8004334:	f7ff ffb8 	bl	80042a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004338:	a903      	add	r1, sp, #12
 800433a:	4648      	mov	r0, r9
 800433c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8004340:	f7ff ffb2 	bl	80042a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004344:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8004348:	f504 77a4 	add.w	r7, r4, #328	; 0x148
 800434c:	a903      	add	r1, sp, #12
 800434e:	4618      	mov	r0, r3
 8004350:	ee08 3a10 	vmov	s16, r3
 8004354:	f504 76c8 	add.w	r6, r4, #400	; 0x190
 8004358:	f8ad 500c 	strh.w	r5, [sp, #12]
 800435c:	f7ff ffa4 	bl	80042a8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004360:	4638      	mov	r0, r7
 8004362:	f00a fe7d 	bl	800f060 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004366:	4630      	mov	r0, r6
 8004368:	f00a fe7a 	bl	800f060 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800436c:	4b5a      	ldr	r3, [pc, #360]	; (80044d8 <_ZN18HomeScreenViewBaseC1Ev+0x1f8>)
 800436e:	e9c4 3476 	strd	r3, r4, [r4, #472]	; 0x1d8
 8004372:	4b5a      	ldr	r3, [pc, #360]	; (80044dc <_ZN18HomeScreenViewBaseC1Ev+0x1fc>)
 8004374:	f8c4 31e0 	str.w	r3, [r4, #480]	; 0x1e0
 8004378:	2200      	movs	r2, #0
    __background.setPosition(0, 0, 240, 320);
 800437a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800437e:	f8c4 21e4 	str.w	r2, [r4, #484]	; 0x1e4
 8004382:	4611      	mov	r1, r2
 8004384:	9300      	str	r3, [sp, #0]
 8004386:	4640      	mov	r0, r8
 8004388:	23f0      	movs	r3, #240	; 0xf0
 800438a:	1d25      	adds	r5, r4, #4
 800438c:	f7fe f80b 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004390:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004394:	66a3      	str	r3, [r4, #104]	; 0x68
 8004396:	4641      	mov	r1, r8
 8004398:	4628      	mov	r0, r5
 800439a:	f008 fbe9 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 240, 320);
 800439e:	2200      	movs	r2, #0
 80043a0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043a4:	4611      	mov	r1, r2
 80043a6:	ee18 0a90 	vmov	r0, s17
 80043aa:	9300      	str	r3, [sp, #0]
 80043ac:	23f0      	movs	r3, #240	; 0xf0
 80043ae:	f7fd fffa 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80043b2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80043b6:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80043ba:	ee18 1a90 	vmov	r1, s17
 80043be:	4628      	mov	r0, r5
 80043c0:	f008 fbd6 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(10, 48);
 80043c4:	2230      	movs	r2, #48	; 0x30
 80043c6:	4658      	mov	r0, fp
 80043c8:	210a      	movs	r1, #10
 80043ca:	f7fd ffdf 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 80043ce:	2304      	movs	r3, #4
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BATTLESHIP_ID));
 80043d0:	a903      	add	r1, sp, #12
 80043d2:	4658      	mov	r0, fp
 80043d4:	f8ad 300c 	strh.w	r3, [sp, #12]
 80043d8:	f00a fd0b 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80043dc:	4659      	mov	r1, fp
 80043de:	4628      	mov	r0, r5
 80043e0:	f008 fbc6 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image2.setXY(182, 14);
 80043e4:	220e      	movs	r2, #14
 80043e6:	4650      	mov	r0, sl
 80043e8:	21b6      	movs	r1, #182	; 0xb6
 80043ea:	f7fd ffcf 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 80043ee:	230e      	movs	r3, #14
    image2.setBitmap(touchgfx::Bitmap(BITMAP_SHIP2_ID));
 80043f0:	a903      	add	r1, sp, #12
 80043f2:	4650      	mov	r0, sl
 80043f4:	f8ad 300c 	strh.w	r3, [sp, #12]
 80043f8:	f00a fcfb 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80043fc:	4651      	mov	r1, sl
 80043fe:	4628      	mov	r0, r5
 8004400:	f008 fbb6 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image3.setXY(84, 100);
 8004404:	2264      	movs	r2, #100	; 0x64
 8004406:	4648      	mov	r0, r9
 8004408:	2154      	movs	r1, #84	; 0x54
 800440a:	f7fd ffbf 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 800440e:	230f      	movs	r3, #15
    image3.setBitmap(touchgfx::Bitmap(BITMAP_SHIP31_ID));
 8004410:	a903      	add	r1, sp, #12
 8004412:	4648      	mov	r0, r9
 8004414:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004418:	f00a fceb 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800441c:	4649      	mov	r1, r9
 800441e:	4628      	mov	r0, r5
 8004420:	f008 fba6 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image4.setXY(5, 208);
 8004424:	22d0      	movs	r2, #208	; 0xd0
 8004426:	ee18 0a10 	vmov	r0, s16
 800442a:	2105      	movs	r1, #5
 800442c:	f7fd ffae 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 8004430:	2310      	movs	r3, #16
    image4.setBitmap(touchgfx::Bitmap(BITMAP_SHIP4_ID));
 8004432:	ee18 0a10 	vmov	r0, s16
 8004436:	a903      	add	r1, sp, #12
 8004438:	f8ad 300c 	strh.w	r3, [sp, #12]
 800443c:	f00a fcd9 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004440:	ee18 1a10 	vmov	r1, s16
 8004444:	4628      	mov	r0, r5
 8004446:	f008 fb93 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 160);
 800444a:	4638      	mov	r0, r7
 800444c:	22a0      	movs	r2, #160	; 0xa0
 800444e:	2121      	movs	r1, #33	; 0x21
 8004450:	f7fd ff9c 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 8004454:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID));
 8004458:	aa03      	add	r2, sp, #12
 800445a:	a902      	add	r1, sp, #8
 800445c:	4638      	mov	r0, r7
 800445e:	f8ad 9008 	strh.w	r9, [sp, #8]
 8004462:	f8ad 900c 	strh.w	r9, [sp, #12]
 8004466:	f00a fb92 	bl	800eb8e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800446a:	2314      	movs	r3, #20
 800446c:	f8a4 3180 	strh.w	r3, [r4, #384]	; 0x180
        updateTextPosition();
 8004470:	4638      	mov	r0, r7
        color = col;
 8004472:	f04f 38ff 	mov.w	r8, #4294967295
    buttonWithLabel1.setAction(buttonCallback);
 8004476:	f504 7aec 	add.w	sl, r4, #472	; 0x1d8
        updateTextPosition();
 800447a:	f7fd ffbd 	bl	80023f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800447e:	4639      	mov	r1, r7
 8004480:	4628      	mov	r0, r5
        colorPressed = col;
 8004482:	e9c4 8861 	strd	r8, r8, [r4, #388]	; 0x184
 8004486:	f8c4 a170 	str.w	sl, [r4, #368]	; 0x170
 800448a:	f008 fb71 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1_1.setXY(33, 231);
 800448e:	4630      	mov	r0, r6
 8004490:	22e7      	movs	r2, #231	; 0xe7
 8004492:	2121      	movs	r1, #33	; 0x21
 8004494:	f7fd ff7a 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID));
 8004498:	aa03      	add	r2, sp, #12
 800449a:	a902      	add	r1, sp, #8
 800449c:	4630      	mov	r0, r6
 800449e:	f8ad 9008 	strh.w	r9, [sp, #8]
 80044a2:	f8ad 900c 	strh.w	r9, [sp, #12]
 80044a6:	f00a fb72 	bl	800eb8e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80044aa:	2305      	movs	r3, #5
 80044ac:	f8a4 31c8 	strh.w	r3, [r4, #456]	; 0x1c8
        updateTextPosition();
 80044b0:	4630      	mov	r0, r6
 80044b2:	f7fd ffa1 	bl	80023f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80044b6:	4628      	mov	r0, r5
        colorPressed = col;
 80044b8:	e9c4 8873 	strd	r8, r8, [r4, #460]	; 0x1cc
 80044bc:	f8c4 a1b8 	str.w	sl, [r4, #440]	; 0x1b8
 80044c0:	4631      	mov	r1, r6
 80044c2:	f008 fb55 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80044c6:	4620      	mov	r0, r4
 80044c8:	b005      	add	sp, #20
 80044ca:	ecbd 8b02 	vpop	{d8}
 80044ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044d2:	bf00      	nop
 80044d4:	08024238 	.word	0x08024238
 80044d8:	08024220 	.word	0x08024220
 80044dc:	0800427d 	.word	0x0800427d

080044e0 <_ZN21LoadingScreenViewBaseD1Ev>:
}

LoadingScreenViewBase::~LoadingScreenViewBase()
{

}
 80044e0:	4770      	bx	lr

080044e2 <_ZN21LoadingScreenViewBase11setupScreenEv>:

void LoadingScreenViewBase::setupScreen()
{

}
 80044e2:	4770      	bx	lr

080044e4 <_ZN21LoadingScreenViewBaseD0Ev>:
LoadingScreenViewBase::~LoadingScreenViewBase()
 80044e4:	b510      	push	{r4, lr}
}
 80044e6:	f44f 7103 	mov.w	r1, #524	; 0x20c
LoadingScreenViewBase::~LoadingScreenViewBase()
 80044ea:	4604      	mov	r4, r0
}
 80044ec:	f01d f8de 	bl	80216ac <_ZdlPvj>
 80044f0:	4620      	mov	r0, r4
 80044f2:	bd10      	pop	{r4, pc}

080044f4 <_ZN21LoadingScreenViewBaseC1Ev>:
LoadingScreenViewBase::LoadingScreenViewBase()
 80044f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044f8:	4604      	mov	r4, r0
 80044fa:	b089      	sub	sp, #36	; 0x24
 80044fc:	46a2      	mov	sl, r4
 80044fe:	2500      	movs	r5, #0
 8004500:	f00d fede 	bl	80122c0 <_ZN8touchgfx6ScreenC1Ev>
 8004504:	4b57      	ldr	r3, [pc, #348]	; (8004664 <_ZN21LoadingScreenViewBaseC1Ev+0x170>)
 8004506:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004508:	f84a 3b40 	str.w	r3, [sl], #64
 800450c:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8004510:	4650      	mov	r0, sl
 8004512:	f104 0698 	add.w	r6, r4, #152	; 0x98
 8004516:	f7fd ff59 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 800451a:	4658      	mov	r0, fp
 800451c:	f7fd ff56 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 8004520:	f504 79be 	add.w	r9, r4, #380	; 0x17c
 8004524:	4630      	mov	r0, r6
 8004526:	f008 f903 	bl	800c730 <_ZN8touchgfx11BoxProgressC1Ev>
 800452a:	f504 78e2 	add.w	r8, r4, #452	; 0x1c4
 800452e:	4648      	mov	r0, r9
 8004530:	f7fe f944 	bl	80027bc <_ZN8touchgfx8TextAreaC1Ev>
 8004534:	4640      	mov	r0, r8
 8004536:	f7fe f941 	bl	80027bc <_ZN8touchgfx8TextAreaC1Ev>
    __background.setPosition(0, 0, 240, 320);
 800453a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800453e:	462a      	mov	r2, r5
 8004540:	9300      	str	r3, [sp, #0]
 8004542:	4629      	mov	r1, r5
 8004544:	4650      	mov	r0, sl
 8004546:	23f0      	movs	r3, #240	; 0xf0
 8004548:	f7fd ff2d 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800454c:	1d27      	adds	r7, r4, #4
 800454e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004552:	66a3      	str	r3, [r4, #104]	; 0x68
 8004554:	4651      	mov	r1, sl
 8004556:	4638      	mov	r0, r7
 8004558:	f008 fb0a 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setPosition(0, 0, 240, 320);
 800455c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004560:	462a      	mov	r2, r5
 8004562:	9300      	str	r3, [sp, #0]
 8004564:	4629      	mov	r1, r5
 8004566:	4658      	mov	r0, fp
 8004568:	23f0      	movs	r3, #240	; 0xf0
 800456a:	f7fd ff1c 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800456e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004572:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8004576:	4659      	mov	r1, fp
 8004578:	4638      	mov	r0, r7
 800457a:	f008 faf9 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxProgress1.setXY(20, 192);
 800457e:	4630      	mov	r0, r6
 8004580:	22c0      	movs	r2, #192	; 0xc0
 8004582:	2114      	movs	r1, #20
 8004584:	f7fd ff02 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
    boxProgress1.setProgressIndicatorPosition(0, 0, 200, 10);
 8004588:	230a      	movs	r3, #10
 800458a:	9300      	str	r3, [sp, #0]
 800458c:	462a      	mov	r2, r5
 800458e:	4629      	mov	r1, r5
 8004590:	4630      	mov	r0, r6
 8004592:	23c8      	movs	r3, #200	; 0xc8
 8004594:	f008 f827 	bl	800c5e6 <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    boxProgress1.setRange(0, 100);
 8004598:	462b      	mov	r3, r5
 800459a:	2264      	movs	r2, #100	; 0x64
 800459c:	4629      	mov	r1, r5
 800459e:	4630      	mov	r0, r6
 80045a0:	9500      	str	r5, [sp, #0]
 80045a2:	f008 f93d 	bl	800c820 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    boxProgress1.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 80045a6:	4629      	mov	r1, r5
 80045a8:	4630      	mov	r0, r6
 80045aa:	f008 f918 	bl	800c7de <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    Bitmap(const BitmapId id = BITMAP_INVALID)
 80045ae:	f04f 3aff 	mov.w	sl, #4294967295
    boxProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_NORMAL_SMALL_ID));
 80045b2:	a906      	add	r1, sp, #24
 80045b4:	4630      	mov	r0, r6
        : bitmapId(id)
 80045b6:	f8ad 5018 	strh.w	r5, [sp, #24]
 80045ba:	f008 fa6c 	bl	800ca96 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    boxProgress1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 80045be:	4651      	mov	r1, sl
 80045c0:	4630      	mov	r0, r6
 80045c2:	f007 fffa 	bl	800c5ba <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    boxProgress1.setValue(60);
 80045c6:	4630      	mov	r0, r6
 80045c8:	213c      	movs	r1, #60	; 0x3c
 80045ca:	f008 f824 	bl	800c616 <_ZN8touchgfx11BoxProgress8setValueEi>
 80045ce:	4631      	mov	r1, r6
 80045d0:	4638      	mov	r0, r7
 80045d2:	f008 facd 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80045d6:	ae02      	add	r6, sp, #8
    textArea1.setXY(25, 47);
 80045d8:	222f      	movs	r2, #47	; 0x2f
 80045da:	4648      	mov	r0, r9
 80045dc:	2119      	movs	r1, #25
 80045de:	f7fd fed5 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 80045e2:	4649      	mov	r1, r9
 80045e4:	4630      	mov	r0, r6
        color = newColor;
 80045e6:	f8c4 a1ac 	str.w	sl, [r4, #428]	; 0x1ac
        linespace = space;
 80045ea:	f8a4 51b0 	strh.w	r5, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 80045ee:	f009 ffd7 	bl	800e5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80045f2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80045f6:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 80045fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80045fe:	f8df b068 	ldr.w	fp, [pc, #104]	; 8004668 <_ZN21LoadingScreenViewBaseC1Ev+0x174>
 8004602:	f8cd b018 	str.w	fp, [sp, #24]
 8004606:	2304      	movs	r3, #4
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FBN5));
 8004608:	a906      	add	r1, sp, #24
 800460a:	4648      	mov	r0, r9
 800460c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8004610:	f00a fa60 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004614:	4649      	mov	r1, r9
 8004616:	4638      	mov	r0, r7
 8004618:	f008 faaa 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(87, 160);
 800461c:	22a0      	movs	r2, #160	; 0xa0
 800461e:	4640      	mov	r0, r8
 8004620:	2157      	movs	r1, #87	; 0x57
 8004622:	f7fd feb3 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 8004626:	4641      	mov	r1, r8
 8004628:	4630      	mov	r0, r6
        color = newColor;
 800462a:	f8c4 a1f4 	str.w	sl, [r4, #500]	; 0x1f4
        linespace = space;
 800462e:	f8a4 51f8 	strh.w	r5, [r4, #504]	; 0x1f8
        boundingArea = calculateBoundingArea();
 8004632:	f009 ffb5 	bl	800e5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004636:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800463a:	f504 7300 	add.w	r3, r4, #512	; 0x200
 800463e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004642:	2303      	movs	r3, #3
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J6N9));
 8004644:	a906      	add	r1, sp, #24
 8004646:	4640      	mov	r0, r8
 8004648:	f8ad 301c 	strh.w	r3, [sp, #28]
 800464c:	f8cd b018 	str.w	fp, [sp, #24]
 8004650:	f00a fa40 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004654:	4638      	mov	r0, r7
 8004656:	4641      	mov	r1, r8
 8004658:	f008 fa8a 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800465c:	4620      	mov	r0, r4
 800465e:	b009      	add	sp, #36	; 0x24
 8004660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004664:	08024270 	.word	0x08024270
 8004668:	08023528 	.word	0x08023528

0800466c <_ZN22OpponentScreenViewBaseD1Ev>:
}

OpponentScreenViewBase::~OpponentScreenViewBase()
{

}
 800466c:	4770      	bx	lr

0800466e <_ZN22OpponentScreenViewBase11setupScreenEv>:

void OpponentScreenViewBase::setupScreen()
{

}
 800466e:	4770      	bx	lr

08004670 <_ZN22OpponentScreenViewBaseD0Ev>:
OpponentScreenViewBase::~OpponentScreenViewBase()
 8004670:	b510      	push	{r4, lr}
}
 8004672:	f640 210c 	movw	r1, #2572	; 0xa0c
OpponentScreenViewBase::~OpponentScreenViewBase()
 8004676:	4604      	mov	r4, r0
}
 8004678:	f01d f818 	bl	80216ac <_ZdlPvj>
 800467c:	4620      	mov	r0, r4
 800467e:	bd10      	pop	{r4, pc}

08004680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8004680:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8004682:	2226      	movs	r2, #38	; 0x26
 8004684:	4604      	mov	r4, r0
 8004686:	2100      	movs	r1, #0
 8004688:	f01d f95c 	bl	8021944 <memset>
 800468c:	4620      	mov	r0, r4
 800468e:	f7fe ffe9 	bl	8003664 <_ZN8touchgfx8DrawableC1Ev>
 8004692:	4b0a      	ldr	r3, [pc, #40]	; (80046bc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x3c>)
 8004694:	62a3      	str	r3, [r4, #40]	; 0x28
 8004696:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800469a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 800469c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80046a0:	2300      	movs	r3, #0
 80046a2:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : TextAreaWithWildcardBase(), wc1(0)
 80046a6:	4a06      	ldr	r2, [pc, #24]	; (80046c0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x40>)
 80046a8:	6022      	str	r2, [r4, #0]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80046aa:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80046ae:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80046b2:	8723      	strh	r3, [r4, #56]	; 0x38
 80046b4:	63e3      	str	r3, [r4, #60]	; 0x3c
 80046b6:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80046b8:	4620      	mov	r0, r4
 80046ba:	bd10      	pop	{r4, pc}
 80046bc:	08023528 	.word	0x08023528
 80046c0:	08023608 	.word	0x08023608

080046c4 <_ZN22OpponentScreenViewBaseC1Ev>:
OpponentScreenViewBase::OpponentScreenViewBase()
 80046c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046c8:	ed2d 8b10 	vpush	{d8-d15}
 80046cc:	4605      	mov	r5, r0
 80046ce:	b09d      	sub	sp, #116	; 0x74
 80046d0:	46aa      	mov	sl, r5
 80046d2:	2400      	movs	r4, #0
 80046d4:	f00d fdf4 	bl	80122c0 <_ZN8touchgfx6ScreenC1Ev>
 80046d8:	4bdd      	ldr	r3, [pc, #884]	; (8004a50 <_ZN22OpponentScreenViewBaseC1Ev+0x38c>)
 80046da:	63ec      	str	r4, [r5, #60]	; 0x3c
 80046dc:	f84a 3b40 	str.w	r3, [sl], #64
 80046e0:	4650      	mov	r0, sl
 80046e2:	f7fd fe73 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 80046e6:	f105 036c 	add.w	r3, r5, #108	; 0x6c
 80046ea:	f105 0698 	add.w	r6, r5, #152	; 0x98
 80046ee:	4618      	mov	r0, r3
 80046f0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80046f4:	9319      	str	r3, [sp, #100]	; 0x64
 80046f6:	f7fd fe69 	bl	80023cc <_ZN8touchgfx3BoxC1Ev>
 80046fa:	a91a      	add	r1, sp, #104	; 0x68
 80046fc:	4630      	mov	r0, r6
 80046fe:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004702:	f009 fca3 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004706:	f105 03c4 	add.w	r3, r5, #196	; 0xc4
 800470a:	4618      	mov	r0, r3
 800470c:	ee09 3a90 	vmov	s19, r3
 8004710:	f7fe ffba 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8004714:	f105 03f0 	add.w	r3, r5, #240	; 0xf0
 8004718:	a91a      	add	r1, sp, #104	; 0x68
 800471a:	4618      	mov	r0, r3
 800471c:	ee0a 3a10 	vmov	s20, r3
 8004720:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004724:	f009 fc92 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004728:	f505 738e 	add.w	r3, r5, #284	; 0x11c
 800472c:	f505 78a4 	add.w	r8, r5, #328	; 0x148
 8004730:	a91a      	add	r1, sp, #104	; 0x68
 8004732:	4618      	mov	r0, r3
 8004734:	ee0a 3a90 	vmov	s21, r3
 8004738:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 800473c:	f009 fc86 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004740:	4640      	mov	r0, r8
 8004742:	f7fe ffa1 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8004746:	f505 73ba 	add.w	r3, r5, #372	; 0x174
 800474a:	a91a      	add	r1, sp, #104	; 0x68
 800474c:	4618      	mov	r0, r3
 800474e:	ee0b 3a10 	vmov	s22, r3
 8004752:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004756:	f009 fc79 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800475a:	f505 73d0 	add.w	r3, r5, #416	; 0x1a0
 800475e:	a91a      	add	r1, sp, #104	; 0x68
 8004760:	4618      	mov	r0, r3
 8004762:	ee0b 3a90 	vmov	s23, r3
 8004766:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 800476a:	f009 fc6f 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800476e:	f505 73e6 	add.w	r3, r5, #460	; 0x1cc
 8004772:	a91a      	add	r1, sp, #104	; 0x68
 8004774:	4618      	mov	r0, r3
 8004776:	ee0c 3a10 	vmov	s24, r3
 800477a:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 800477e:	f009 fc65 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004782:	f505 73fc 	add.w	r3, r5, #504	; 0x1f8
 8004786:	a91a      	add	r1, sp, #104	; 0x68
 8004788:	4618      	mov	r0, r3
 800478a:	ee0c 3a90 	vmov	s25, r3
 800478e:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004792:	f009 fc5b 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004796:	f505 7309 	add.w	r3, r5, #548	; 0x224
 800479a:	f505 7914 	add.w	r9, r5, #592	; 0x250
 800479e:	a91a      	add	r1, sp, #104	; 0x68
 80047a0:	4618      	mov	r0, r3
 80047a2:	ee0d 3a10 	vmov	s26, r3
 80047a6:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80047aa:	f009 fc4f 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80047ae:	4648      	mov	r0, r9
 80047b0:	f7fe ff6a 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 80047b4:	f505 731f 	add.w	r3, r5, #636	; 0x27c
 80047b8:	a91a      	add	r1, sp, #104	; 0x68
 80047ba:	4618      	mov	r0, r3
 80047bc:	ee0d 3a90 	vmov	s27, r3
 80047c0:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80047c4:	f009 fc42 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80047c8:	f505 732a 	add.w	r3, r5, #680	; 0x2a8
 80047cc:	a91a      	add	r1, sp, #104	; 0x68
 80047ce:	4618      	mov	r0, r3
 80047d0:	ee0e 3a10 	vmov	s28, r3
 80047d4:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80047d8:	f009 fc38 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80047dc:	f505 7335 	add.w	r3, r5, #724	; 0x2d4
 80047e0:	a91a      	add	r1, sp, #104	; 0x68
 80047e2:	4618      	mov	r0, r3
 80047e4:	ee0e 3a90 	vmov	s29, r3
 80047e8:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80047ec:	f009 fc2e 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80047f0:	f505 7340 	add.w	r3, r5, #768	; 0x300
 80047f4:	a91a      	add	r1, sp, #104	; 0x68
 80047f6:	4618      	mov	r0, r3
 80047f8:	ee0f 3a10 	vmov	s30, r3
 80047fc:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004800:	f009 fc24 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004804:	f505 734b 	add.w	r3, r5, #812	; 0x32c
 8004808:	4618      	mov	r0, r3
 800480a:	ee08 3a90 	vmov	s17, r3
 800480e:	f7fe ff3b 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8004812:	f505 7356 	add.w	r3, r5, #856	; 0x358
 8004816:	a91a      	add	r1, sp, #104	; 0x68
 8004818:	4618      	mov	r0, r3
 800481a:	ee0f 3a90 	vmov	s31, r3
 800481e:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004822:	f009 fc13 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004826:	f505 7361 	add.w	r3, r5, #900	; 0x384
 800482a:	a91a      	add	r1, sp, #104	; 0x68
 800482c:	4618      	mov	r0, r3
 800482e:	9302      	str	r3, [sp, #8]
 8004830:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004834:	f009 fc0a 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004838:	f505 736c 	add.w	r3, r5, #944	; 0x3b0
 800483c:	a91a      	add	r1, sp, #104	; 0x68
 800483e:	4618      	mov	r0, r3
 8004840:	9303      	str	r3, [sp, #12]
 8004842:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004846:	f009 fc01 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800484a:	f505 7377 	add.w	r3, r5, #988	; 0x3dc
 800484e:	4618      	mov	r0, r3
 8004850:	9304      	str	r3, [sp, #16]
 8004852:	f7fe ff19 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8004856:	f505 6381 	add.w	r3, r5, #1032	; 0x408
 800485a:	a91a      	add	r1, sp, #104	; 0x68
 800485c:	4618      	mov	r0, r3
 800485e:	9305      	str	r3, [sp, #20]
 8004860:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004864:	f009 fbf2 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004868:	f205 4334 	addw	r3, r5, #1076	; 0x434
 800486c:	f505 6b8c 	add.w	fp, r5, #1120	; 0x460
 8004870:	a91a      	add	r1, sp, #104	; 0x68
 8004872:	4618      	mov	r0, r3
 8004874:	9306      	str	r3, [sp, #24]
 8004876:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 800487a:	f009 fbe7 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800487e:	4658      	mov	r0, fp
 8004880:	f7fe ff02 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8004884:	f205 438c 	addw	r3, r5, #1164	; 0x48c
 8004888:	a91a      	add	r1, sp, #104	; 0x68
 800488a:	4618      	mov	r0, r3
 800488c:	9307      	str	r3, [sp, #28]
 800488e:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004892:	f009 fbdb 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004896:	f505 6397 	add.w	r3, r5, #1208	; 0x4b8
 800489a:	a91a      	add	r1, sp, #104	; 0x68
 800489c:	4618      	mov	r0, r3
 800489e:	9308      	str	r3, [sp, #32]
 80048a0:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80048a4:	f009 fbd2 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80048a8:	f205 43e4 	addw	r3, r5, #1252	; 0x4e4
 80048ac:	a91a      	add	r1, sp, #104	; 0x68
 80048ae:	4618      	mov	r0, r3
 80048b0:	9309      	str	r3, [sp, #36]	; 0x24
 80048b2:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80048b6:	f009 fbc9 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80048ba:	f505 63a2 	add.w	r3, r5, #1296	; 0x510
 80048be:	a91a      	add	r1, sp, #104	; 0x68
 80048c0:	4618      	mov	r0, r3
 80048c2:	930a      	str	r3, [sp, #40]	; 0x28
 80048c4:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80048c8:	f009 fbc0 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80048cc:	f205 533c 	addw	r3, r5, #1340	; 0x53c
 80048d0:	a91a      	add	r1, sp, #104	; 0x68
 80048d2:	4618      	mov	r0, r3
 80048d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80048d6:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80048da:	f009 fbb7 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80048de:	f505 63ad 	add.w	r3, r5, #1384	; 0x568
 80048e2:	4618      	mov	r0, r3
 80048e4:	ee08 3a10 	vmov	s16, r3
 80048e8:	f7fe fece 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 80048ec:	f205 5394 	addw	r3, r5, #1428	; 0x594
 80048f0:	a91a      	add	r1, sp, #104	; 0x68
 80048f2:	4618      	mov	r0, r3
 80048f4:	930c      	str	r3, [sp, #48]	; 0x30
 80048f6:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80048fa:	f009 fba7 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80048fe:	f505 63b8 	add.w	r3, r5, #1472	; 0x5c0
 8004902:	a91a      	add	r1, sp, #104	; 0x68
 8004904:	4618      	mov	r0, r3
 8004906:	930d      	str	r3, [sp, #52]	; 0x34
 8004908:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 800490c:	f009 fb9e 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004910:	f205 53ec 	addw	r3, r5, #1516	; 0x5ec
 8004914:	a91a      	add	r1, sp, #104	; 0x68
 8004916:	4618      	mov	r0, r3
 8004918:	930e      	str	r3, [sp, #56]	; 0x38
 800491a:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 800491e:	f009 fb95 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004922:	f505 63c3 	add.w	r3, r5, #1560	; 0x618
 8004926:	a91a      	add	r1, sp, #104	; 0x68
 8004928:	4618      	mov	r0, r3
 800492a:	930f      	str	r3, [sp, #60]	; 0x3c
 800492c:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004930:	f009 fb8c 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004934:	f205 6344 	addw	r3, r5, #1604	; 0x644
 8004938:	4618      	mov	r0, r3
 800493a:	ee09 3a10 	vmov	s18, r3
 800493e:	f7fe fea3 	bl	8003688 <_ZN8touchgfx9ContainerC1Ev>
 8004942:	f505 63ce 	add.w	r3, r5, #1648	; 0x670
 8004946:	a91a      	add	r1, sp, #104	; 0x68
 8004948:	4618      	mov	r0, r3
 800494a:	9310      	str	r3, [sp, #64]	; 0x40
 800494c:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004950:	f009 fb7c 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004954:	f205 639c 	addw	r3, r5, #1692	; 0x69c
 8004958:	a91a      	add	r1, sp, #104	; 0x68
 800495a:	4618      	mov	r0, r3
 800495c:	9311      	str	r3, [sp, #68]	; 0x44
 800495e:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004962:	f009 fb73 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004966:	f505 63d9 	add.w	r3, r5, #1736	; 0x6c8
 800496a:	a91a      	add	r1, sp, #104	; 0x68
 800496c:	4618      	mov	r0, r3
 800496e:	9312      	str	r3, [sp, #72]	; 0x48
 8004970:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004974:	f009 fb6a 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004978:	f205 63f4 	addw	r3, r5, #1780	; 0x6f4
 800497c:	a91a      	add	r1, sp, #104	; 0x68
 800497e:	4618      	mov	r0, r3
 8004980:	9313      	str	r3, [sp, #76]	; 0x4c
 8004982:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 8004986:	f009 fb61 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800498a:	f505 63e4 	add.w	r3, r5, #1824	; 0x720
 800498e:	4618      	mov	r0, r3
 8004990:	9314      	str	r3, [sp, #80]	; 0x50
 8004992:	f7ff fe75 	bl	8004680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004996:	f205 736c 	addw	r3, r5, #1900	; 0x76c
 800499a:	4618      	mov	r0, r3
 800499c:	9315      	str	r3, [sp, #84]	; 0x54
 800499e:	f7ff fe6f 	bl	8004680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80049a2:	f505 63f7 	add.w	r3, r5, #1976	; 0x7b8
 80049a6:	4618      	mov	r0, r3
 80049a8:	9316      	str	r3, [sp, #88]	; 0x58
 80049aa:	f7ff fe69 	bl	8004680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80049ae:	f605 0304 	addw	r3, r5, #2052	; 0x804
 80049b2:	4618      	mov	r0, r3
 80049b4:	9317      	str	r3, [sp, #92]	; 0x5c
 80049b6:	f7ff fe63 	bl	8004680 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80049ba:	f505 6305 	add.w	r3, r5, #2128	; 0x850
 80049be:	a91a      	add	r1, sp, #104	; 0x68
 80049c0:	4618      	mov	r0, r3
 80049c2:	9318      	str	r3, [sp, #96]	; 0x60
 80049c4:	f8ad 7068 	strh.w	r7, [sp, #104]	; 0x68
 80049c8:	f009 fb40 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 240, 320);
 80049cc:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80049d0:	4622      	mov	r2, r4
 80049d2:	4650      	mov	r0, sl
 80049d4:	9300      	str	r3, [sp, #0]
 80049d6:	4621      	mov	r1, r4
 80049d8:	23f0      	movs	r3, #240	; 0xf0
 80049da:	1d2f      	adds	r7, r5, #4
 80049dc:	f7fd fce3 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80049e0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80049e4:	4651      	mov	r1, sl
 80049e6:	66ab      	str	r3, [r5, #104]	; 0x68
 80049e8:	4638      	mov	r0, r7
 80049ea:	f008 f8c1 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bg.setPosition(0, -1, 240, 320);
 80049ee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80049f2:	f04f 32ff 	mov.w	r2, #4294967295
 80049f6:	9819      	ldr	r0, [sp, #100]	; 0x64
 80049f8:	9300      	str	r3, [sp, #0]
 80049fa:	4621      	mov	r1, r4
 80049fc:	23f0      	movs	r3, #240	; 0xf0
 80049fe:	f7fd fcd2 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a02:	f04f 33ff 	mov.w	r3, #4294967295
 8004a06:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004a08:	f8c5 3094 	str.w	r3, [r5, #148]	; 0x94
 8004a0c:	4638      	mov	r0, r7
 8004a0e:	f008 f8af 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a12:	f04f 0306 	mov.w	r3, #6
    board2.setBitmap(touchgfx::Bitmap(BITMAP_BOARD2_ID));
 8004a16:	4630      	mov	r0, r6
 8004a18:	a91a      	add	r1, sp, #104	; 0x68
 8004a1a:	f8ad 3068 	strh.w	r3, [sp, #104]	; 0x68
 8004a1e:	f00a f9e8 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    board2.setPosition(5, 83, 230, 230);
 8004a22:	23e6      	movs	r3, #230	; 0xe6
 8004a24:	9300      	str	r3, [sp, #0]
 8004a26:	2253      	movs	r2, #83	; 0x53
 8004a28:	4630      	mov	r0, r6
 8004a2a:	2105      	movs	r1, #5
 8004a2c:	f7fd fcbb 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    board2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004a30:	4630      	mov	r0, r6
 8004a32:	4621      	mov	r1, r4
 8004a34:	f009 fac5 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8004a38:	4631      	mov	r1, r6
 8004a3a:	4638      	mov	r0, r7
    boat2.setPosition(-56, 38, 44, 23);
 8004a3c:	2617      	movs	r6, #23
 8004a3e:	f008 f897 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a42:	232c      	movs	r3, #44	; 0x2c
 8004a44:	2226      	movs	r2, #38	; 0x26
 8004a46:	ee19 0a90 	vmov	r0, s19
 8004a4a:	f06f 0137 	mvn.w	r1, #55	; 0x37
 8004a4e:	e001      	b.n	8004a54 <_ZN22OpponentScreenViewBaseC1Ev+0x390>
 8004a50:	080242a4 	.word	0x080242a4
 8004a54:	9600      	str	r6, [sp, #0]
 8004a56:	f04f 0a08 	mov.w	sl, #8
 8004a5a:	f7fd fca4 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004a5e:	ee1a 0a10 	vmov	r0, s20
 8004a62:	a91a      	add	r1, sp, #104	; 0x68
 8004a64:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004a68:	f00a f9c3 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_1.setPosition(22, 0, 23, 23);
 8004a6c:	4633      	mov	r3, r6
 8004a6e:	4622      	mov	r2, r4
 8004a70:	ee1a 0a10 	vmov	r0, s20
 8004a74:	2116      	movs	r1, #22
 8004a76:	9600      	str	r6, [sp, #0]
 8004a78:	f7fd fc95 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004a7c:	ee1a 0a10 	vmov	r0, s20
 8004a80:	4621      	mov	r1, r4
 8004a82:	f009 fa9e 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2.add(scalableImage2_1_1);
 8004a86:	ee1a 1a10 	vmov	r1, s20
 8004a8a:	ee19 0a90 	vmov	r0, s19
 8004a8e:	f008 f86f 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_3.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004a92:	ee1a 0a90 	vmov	r0, s21
 8004a96:	a91a      	add	r1, sp, #104	; 0x68
 8004a98:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004a9c:	f00a f9a9 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_3.setPosition(0, 0, 23, 23);
 8004aa0:	4633      	mov	r3, r6
 8004aa2:	4622      	mov	r2, r4
 8004aa4:	ee1a 0a90 	vmov	r0, s21
 8004aa8:	4621      	mov	r1, r4
 8004aaa:	9600      	str	r6, [sp, #0]
 8004aac:	f7fd fc7b 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004ab0:	ee1a 0a90 	vmov	r0, s21
 8004ab4:	4621      	mov	r1, r4
 8004ab6:	f009 fa84 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2.add(scalableImage2_3);
 8004aba:	ee1a 1a90 	vmov	r1, s21
 8004abe:	ee19 0a90 	vmov	r0, s19
 8004ac2:	f008 f855 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ac6:	ee19 1a90 	vmov	r1, s19
 8004aca:	4638      	mov	r0, r7
 8004acc:	f008 f850 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat5.setPosition(-123, 149, 113, 23);
 8004ad0:	2371      	movs	r3, #113	; 0x71
 8004ad2:	2295      	movs	r2, #149	; 0x95
 8004ad4:	4640      	mov	r0, r8
 8004ad6:	f06f 017a 	mvn.w	r1, #122	; 0x7a
 8004ada:	9600      	str	r6, [sp, #0]
 8004adc:	f7fd fc63 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004ae0:	ee1b 0a10 	vmov	r0, s22
 8004ae4:	a91a      	add	r1, sp, #104	; 0x68
 8004ae6:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004aea:	f00a f982 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_2.setPosition(44, 0, 23, 23);
 8004aee:	4633      	mov	r3, r6
 8004af0:	4622      	mov	r2, r4
 8004af2:	ee1b 0a10 	vmov	r0, s22
 8004af6:	212c      	movs	r1, #44	; 0x2c
 8004af8:	9600      	str	r6, [sp, #0]
 8004afa:	f7fd fc54 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004afe:	ee1b 0a10 	vmov	r0, s22
 8004b02:	4621      	mov	r1, r4
 8004b04:	f009 fa5d 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_2);
 8004b08:	4640      	mov	r0, r8
 8004b0a:	ee1b 1a10 	vmov	r1, s22
 8004b0e:	f008 f82f 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004b12:	ee1b 0a90 	vmov	r0, s23
 8004b16:	a91a      	add	r1, sp, #104	; 0x68
 8004b18:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004b1c:	f00a f969 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1_1.setPosition(66, 0, 25, 23);
 8004b20:	2319      	movs	r3, #25
 8004b22:	4622      	mov	r2, r4
 8004b24:	ee1b 0a90 	vmov	r0, s23
 8004b28:	2142      	movs	r1, #66	; 0x42
 8004b2a:	9600      	str	r6, [sp, #0]
 8004b2c:	f7fd fc3b 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004b30:	ee1b 0a90 	vmov	r0, s23
 8004b34:	4621      	mov	r1, r4
 8004b36:	f009 fa44 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_1_1);
 8004b3a:	4640      	mov	r0, r8
 8004b3c:	ee1b 1a90 	vmov	r1, s23
 8004b40:	f008 f816 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004b44:	ee1c 0a10 	vmov	r0, s24
 8004b48:	a91a      	add	r1, sp, #104	; 0x68
 8004b4a:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004b4e:	f00a f950 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1_1_1.setPosition(90, 0, 25, 23);
 8004b52:	2319      	movs	r3, #25
 8004b54:	4622      	mov	r2, r4
 8004b56:	ee1c 0a10 	vmov	r0, s24
 8004b5a:	215a      	movs	r1, #90	; 0x5a
 8004b5c:	9600      	str	r6, [sp, #0]
 8004b5e:	f7fd fc22 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004b62:	ee1c 0a10 	vmov	r0, s24
 8004b66:	4621      	mov	r1, r4
 8004b68:	f009 fa2b 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_2_1_1_1_1);
 8004b6c:	4640      	mov	r0, r8
 8004b6e:	ee1c 1a10 	vmov	r1, s24
 8004b72:	f007 fffd 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004b76:	ee1c 0a90 	vmov	r0, s25
 8004b7a:	a91a      	add	r1, sp, #104	; 0x68
 8004b7c:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004b80:	f00a f937 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_2_1.setPosition(22, 0, 23, 23);
 8004b84:	4633      	mov	r3, r6
 8004b86:	4622      	mov	r2, r4
 8004b88:	ee1c 0a90 	vmov	r0, s25
 8004b8c:	2116      	movs	r1, #22
 8004b8e:	9600      	str	r6, [sp, #0]
 8004b90:	f7fd fc09 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004b94:	ee1c 0a90 	vmov	r0, s25
 8004b98:	4621      	mov	r1, r4
 8004b9a:	f009 fa12 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_1_2_1);
 8004b9e:	4640      	mov	r0, r8
 8004ba0:	ee1c 1a90 	vmov	r1, s25
 8004ba4:	f007 ffe4 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_4_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004ba8:	ee1d 0a10 	vmov	r0, s26
 8004bac:	a91a      	add	r1, sp, #104	; 0x68
 8004bae:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004bb2:	f00a f91e 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_4_1.setPosition(0, 0, 23, 23);
 8004bb6:	4633      	mov	r3, r6
 8004bb8:	4622      	mov	r2, r4
 8004bba:	ee1d 0a10 	vmov	r0, s26
 8004bbe:	4621      	mov	r1, r4
 8004bc0:	9600      	str	r6, [sp, #0]
 8004bc2:	f7fd fbf0 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_4_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004bc6:	ee1d 0a10 	vmov	r0, s26
 8004bca:	4621      	mov	r1, r4
 8004bcc:	f009 f9f9 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5.add(scalableImage2_4_1);
 8004bd0:	4640      	mov	r0, r8
 8004bd2:	ee1d 1a10 	vmov	r1, s26
 8004bd6:	f007 ffcb 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bda:	4641      	mov	r1, r8
 8004bdc:	4638      	mov	r0, r7
 8004bde:	f007 ffc7 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat4.setPosition(-102, 111, 90, 23);
 8004be2:	235a      	movs	r3, #90	; 0x5a
 8004be4:	226f      	movs	r2, #111	; 0x6f
 8004be6:	4648      	mov	r0, r9
 8004be8:	f06f 0165 	mvn.w	r1, #101	; 0x65
 8004bec:	9600      	str	r6, [sp, #0]
 8004bee:	f7fd fbda 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004bf2:	ee1d 0a90 	vmov	r0, s27
 8004bf6:	a91a      	add	r1, sp, #104	; 0x68
 8004bf8:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004bfc:	f00a f8f9 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1.setPosition(44, 0, 23, 23);
 8004c00:	4633      	mov	r3, r6
 8004c02:	4622      	mov	r2, r4
 8004c04:	ee1d 0a90 	vmov	r0, s27
 8004c08:	212c      	movs	r1, #44	; 0x2c
 8004c0a:	9600      	str	r6, [sp, #0]
 8004c0c:	f7fd fbcb 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004c10:	ee1d 0a90 	vmov	r0, s27
 8004c14:	4621      	mov	r1, r4
 8004c16:	f009 f9d4 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_2_1);
 8004c1a:	4648      	mov	r0, r9
 8004c1c:	ee1d 1a90 	vmov	r1, s27
 8004c20:	f007 ffa6 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_2_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004c24:	ee1e 0a10 	vmov	r0, s28
 8004c28:	a91a      	add	r1, sp, #104	; 0x68
 8004c2a:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004c2e:	f00a f8e0 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2_1_1.setPosition(66, 0, 25, 23);
 8004c32:	2319      	movs	r3, #25
 8004c34:	4622      	mov	r2, r4
 8004c36:	ee1e 0a10 	vmov	r0, s28
 8004c3a:	2142      	movs	r1, #66	; 0x42
 8004c3c:	9600      	str	r6, [sp, #0]
 8004c3e:	f7fd fbb2 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004c42:	ee1e 0a10 	vmov	r0, s28
 8004c46:	4621      	mov	r1, r4
 8004c48:	f009 f9bb 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_2_1_1);
 8004c4c:	4648      	mov	r0, r9
 8004c4e:	ee1e 1a10 	vmov	r1, s28
 8004c52:	f007 ff8d 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004c56:	ee1e 0a90 	vmov	r0, s29
 8004c5a:	a91a      	add	r1, sp, #104	; 0x68
 8004c5c:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004c60:	f00a f8c7 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1_2.setPosition(22, 0, 23, 23);
 8004c64:	4633      	mov	r3, r6
 8004c66:	4622      	mov	r2, r4
 8004c68:	ee1e 0a90 	vmov	r0, s29
 8004c6c:	2116      	movs	r1, #22
 8004c6e:	9600      	str	r6, [sp, #0]
 8004c70:	f7fd fb99 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004c74:	ee1e 0a90 	vmov	r0, s29
 8004c78:	4621      	mov	r1, r4
 8004c7a:	f009 f9a2 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_1_2);
 8004c7e:	4648      	mov	r0, r9
 8004c80:	ee1e 1a90 	vmov	r1, s29
 8004c84:	f007 ff74 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_4.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004c88:	ee1f 0a10 	vmov	r0, s30
 8004c8c:	a91a      	add	r1, sp, #104	; 0x68
 8004c8e:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004c92:	f00a f8ae 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_4.setPosition(0, 0, 23, 23);
 8004c96:	4633      	mov	r3, r6
 8004c98:	4622      	mov	r2, r4
 8004c9a:	ee1f 0a10 	vmov	r0, s30
 8004c9e:	4621      	mov	r1, r4
 8004ca0:	9600      	str	r6, [sp, #0]
 8004ca2:	f7fd fb80 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_4.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004ca6:	ee1f 0a10 	vmov	r0, s30
 8004caa:	4621      	mov	r1, r4
 8004cac:	f009 f989 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4.add(scalableImage2_4);
 8004cb0:	4648      	mov	r0, r9
 8004cb2:	ee1f 1a10 	vmov	r1, s30
 8004cb6:	f007 ff5b 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004cba:	4649      	mov	r1, r9
 8004cbc:	4638      	mov	r0, r7
 8004cbe:	f007 ff57 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat3.setPosition(-79, 72, 68, 23);
 8004cc2:	2344      	movs	r3, #68	; 0x44
 8004cc4:	2248      	movs	r2, #72	; 0x48
 8004cc6:	ee18 0a90 	vmov	r0, s17
 8004cca:	f06f 014e 	mvn.w	r1, #78	; 0x4e
 8004cce:	9600      	str	r6, [sp, #0]
 8004cd0:	f7fd fb69 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004cd4:	ee1f 0a90 	vmov	r0, s31
 8004cd8:	a91a      	add	r1, sp, #104	; 0x68
 8004cda:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004cde:	f00a f888 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_2.setPosition(44, 0, 23, 23);
 8004ce2:	4633      	mov	r3, r6
 8004ce4:	4622      	mov	r2, r4
 8004ce6:	ee1f 0a90 	vmov	r0, s31
 8004cea:	212c      	movs	r1, #44	; 0x2c
 8004cec:	9600      	str	r6, [sp, #0]
 8004cee:	f7fd fb5a 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004cf2:	ee1f 0a90 	vmov	r0, s31
 8004cf6:	4621      	mov	r1, r4
 8004cf8:	f009 f963 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2_2);
 8004cfc:	ee1f 1a90 	vmov	r1, s31
 8004d00:	ee18 0a90 	vmov	r0, s17
 8004d04:	f007 ff34 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004d08:	9802      	ldr	r0, [sp, #8]
 8004d0a:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004d0e:	a91a      	add	r1, sp, #104	; 0x68
 8004d10:	f00a f86f 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2_1.setPosition(22, 0, 23, 23);
 8004d14:	4633      	mov	r3, r6
 8004d16:	4622      	mov	r2, r4
 8004d18:	9802      	ldr	r0, [sp, #8]
 8004d1a:	9600      	str	r6, [sp, #0]
 8004d1c:	2116      	movs	r1, #22
 8004d1e:	f7fd fb42 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004d22:	9802      	ldr	r0, [sp, #8]
 8004d24:	4621      	mov	r1, r4
 8004d26:	f009 f94c 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2_1);
 8004d2a:	9902      	ldr	r1, [sp, #8]
 8004d2c:	ee18 0a90 	vmov	r0, s17
 8004d30:	f007 ff1e 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8004d34:	9803      	ldr	r0, [sp, #12]
 8004d36:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 8004d3a:	a91a      	add	r1, sp, #104	; 0x68
 8004d3c:	f00a f859 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2.setPosition(0, 0, 23, 23);
 8004d40:	4633      	mov	r3, r6
 8004d42:	4622      	mov	r2, r4
 8004d44:	9803      	ldr	r0, [sp, #12]
 8004d46:	9600      	str	r6, [sp, #0]
 8004d48:	4621      	mov	r1, r4
 8004d4a:	f7fd fb2c 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004d4e:	9803      	ldr	r0, [sp, #12]
 8004d50:	4621      	mov	r1, r4
 8004d52:	f009 f936 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3.add(scalableImage2);
 8004d56:	9903      	ldr	r1, [sp, #12]
 8004d58:	ee18 0a90 	vmov	r0, s17
 8004d5c:	f007 ff08 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat2_r.setPosition(-68, -46, 23, 44);
 8004d60:	f04f 092c 	mov.w	r9, #44	; 0x2c
 8004d64:	ee18 1a90 	vmov	r1, s17
 8004d68:	4638      	mov	r0, r7
 8004d6a:	f007 ff01 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004d6e:	4633      	mov	r3, r6
 8004d70:	f06f 022d 	mvn.w	r2, #45	; 0x2d
 8004d74:	9804      	ldr	r0, [sp, #16]
 8004d76:	f8cd 9000 	str.w	r9, [sp]
 8004d7a:	f06f 0143 	mvn.w	r1, #67	; 0x43
 8004d7e:	f04f 0807 	mov.w	r8, #7
 8004d82:	f7fd fb10 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004d86:	9805      	ldr	r0, [sp, #20]
 8004d88:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004d8c:	a91a      	add	r1, sp, #104	; 0x68
 8004d8e:	f00a f830 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_1.setPosition(0, 0, 23, 23);
 8004d92:	4633      	mov	r3, r6
 8004d94:	4622      	mov	r2, r4
 8004d96:	9805      	ldr	r0, [sp, #20]
 8004d98:	9600      	str	r6, [sp, #0]
 8004d9a:	4621      	mov	r1, r4
 8004d9c:	f7fd fb03 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004da0:	9805      	ldr	r0, [sp, #20]
 8004da2:	4621      	mov	r1, r4
 8004da4:	f009 f90d 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2_r.add(scalableImage1_1_1_1);
 8004da8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004dac:	f007 fee0 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004db0:	9806      	ldr	r0, [sp, #24]
 8004db2:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004db6:	a91a      	add	r1, sp, #104	; 0x68
 8004db8:	f00a f81b 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_2.setPosition(0, 22, 23, 23);
 8004dbc:	4633      	mov	r3, r6
 8004dbe:	2216      	movs	r2, #22
 8004dc0:	9806      	ldr	r0, [sp, #24]
 8004dc2:	9600      	str	r6, [sp, #0]
 8004dc4:	4621      	mov	r1, r4
 8004dc6:	f7fd faee 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004dca:	9806      	ldr	r0, [sp, #24]
 8004dcc:	4621      	mov	r1, r4
 8004dce:	f009 f8f8 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat2_r.add(scalableImage1_2);
 8004dd2:	9906      	ldr	r1, [sp, #24]
 8004dd4:	9804      	ldr	r0, [sp, #16]
 8004dd6:	f007 fecb 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004dda:	9904      	ldr	r1, [sp, #16]
 8004ddc:	4638      	mov	r0, r7
 8004dde:	f007 fec7 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat5_r.setPosition(-135, -115, 23, 113);
 8004de2:	2371      	movs	r3, #113	; 0x71
 8004de4:	f06f 0272 	mvn.w	r2, #114	; 0x72
 8004de8:	4658      	mov	r0, fp
 8004dea:	9300      	str	r3, [sp, #0]
 8004dec:	f06f 0186 	mvn.w	r1, #134	; 0x86
 8004df0:	4633      	mov	r3, r6
 8004df2:	f7fd fad8 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004df6:	9807      	ldr	r0, [sp, #28]
 8004df8:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004dfc:	a91a      	add	r1, sp, #104	; 0x68
 8004dfe:	f009 fff8 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_2_1.setPosition(0, 22, 23, 23);
 8004e02:	4633      	mov	r3, r6
 8004e04:	2216      	movs	r2, #22
 8004e06:	9807      	ldr	r0, [sp, #28]
 8004e08:	9600      	str	r6, [sp, #0]
 8004e0a:	4621      	mov	r1, r4
 8004e0c:	f7fd facb 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004e10:	9807      	ldr	r0, [sp, #28]
 8004e12:	4621      	mov	r1, r4
 8004e14:	f009 f8d5 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_1_1_2_1);
 8004e18:	4658      	mov	r0, fp
 8004e1a:	9907      	ldr	r1, [sp, #28]
 8004e1c:	f007 fea8 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004e20:	9808      	ldr	r0, [sp, #32]
 8004e22:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004e26:	a91a      	add	r1, sp, #104	; 0x68
 8004e28:	f009 ffe3 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_2_1.setPosition(0, 0, 23, 23);
 8004e2c:	4633      	mov	r3, r6
 8004e2e:	4622      	mov	r2, r4
 8004e30:	9808      	ldr	r0, [sp, #32]
 8004e32:	9600      	str	r6, [sp, #0]
 8004e34:	4621      	mov	r1, r4
 8004e36:	f7fd fab6 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004e3a:	9808      	ldr	r0, [sp, #32]
 8004e3c:	4621      	mov	r1, r4
 8004e3e:	f009 f8c0 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_1_2_1);
 8004e42:	4658      	mov	r0, fp
 8004e44:	9908      	ldr	r1, [sp, #32]
 8004e46:	f007 fe93 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004e4a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e4c:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004e50:	a91a      	add	r1, sp, #104	; 0x68
 8004e52:	f009 ffce 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_2.setPosition(0, 44, 23, 23);
 8004e56:	464a      	mov	r2, r9
 8004e58:	4633      	mov	r3, r6
 8004e5a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e5c:	9600      	str	r6, [sp, #0]
 8004e5e:	4621      	mov	r1, r4
 8004e60:	f7fd faa1 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004e64:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e66:	4621      	mov	r1, r4
 8004e68:	f009 f8ab 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_2);
 8004e6c:	4658      	mov	r0, fp
 8004e6e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004e70:	f007 fe7e 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1_1.setPosition(0, 67, 23, 25);
 8004e74:	f04f 0a19 	mov.w	sl, #25
    scalableImage1_3_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004e78:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004e7a:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004e7e:	a91a      	add	r1, sp, #104	; 0x68
 8004e80:	f009 ffb7 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1_1.setPosition(0, 67, 23, 25);
 8004e84:	4633      	mov	r3, r6
 8004e86:	2243      	movs	r2, #67	; 0x43
 8004e88:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004e8a:	f8cd a000 	str.w	sl, [sp]
 8004e8e:	4621      	mov	r1, r4
 8004e90:	f7fd fa89 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004e94:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004e96:	4621      	mov	r1, r4
 8004e98:	f009 f893 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_1_1);
 8004e9c:	4658      	mov	r0, fp
 8004e9e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004ea0:	f007 fe66 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004ea4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004ea6:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004eaa:	a91a      	add	r1, sp, #104	; 0x68
 8004eac:	f009 ffa1 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1_1_1.setPosition(0, 90, 23, 25);
 8004eb0:	4633      	mov	r3, r6
 8004eb2:	225a      	movs	r2, #90	; 0x5a
 8004eb4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004eb6:	f8cd a000 	str.w	sl, [sp]
 8004eba:	4621      	mov	r1, r4
 8004ebc:	f7fd fa73 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004ec0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004ec2:	4621      	mov	r1, r4
 8004ec4:	f009 f87d 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat5_r.add(scalableImage1_3_1_1_1);
 8004ec8:	4658      	mov	r0, fp
 8004eca:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004ecc:	f007 fe50 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ed0:	4659      	mov	r1, fp
 8004ed2:	4638      	mov	r0, r7
 8004ed4:	f007 fe4c 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat4_r.setPosition(-103, -92, 23, 90);
 8004ed8:	235a      	movs	r3, #90	; 0x5a
 8004eda:	f06f 025b 	mvn.w	r2, #91	; 0x5b
 8004ede:	ee18 0a10 	vmov	r0, s16
 8004ee2:	9300      	str	r3, [sp, #0]
 8004ee4:	f06f 0166 	mvn.w	r1, #102	; 0x66
 8004ee8:	4633      	mov	r3, r6
 8004eea:	f7fd fa5c 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004eee:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004ef0:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004ef4:	a91a      	add	r1, sp, #104	; 0x68
 8004ef6:	f009 ff7c 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1_2.setPosition(0, 22, 23, 23);
 8004efa:	4633      	mov	r3, r6
 8004efc:	2216      	movs	r2, #22
 8004efe:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004f00:	9600      	str	r6, [sp, #0]
 8004f02:	4621      	mov	r1, r4
 8004f04:	f7fd fa4f 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004f08:	980c      	ldr	r0, [sp, #48]	; 0x30
        color = newColor;
 8004f0a:	f8df b3ac 	ldr.w	fp, [pc, #940]	; 80052b8 <_ZN22OpponentScreenViewBaseC1Ev+0xbf4>
 8004f0e:	4621      	mov	r1, r4
 8004f10:	f009 f857 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_1_1_2);
 8004f14:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004f16:	ee18 0a10 	vmov	r0, s16
 8004f1a:	f007 fe29 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1_2.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004f1e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004f20:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004f24:	a91a      	add	r1, sp, #104	; 0x68
 8004f26:	f009 ff64 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_2.setPosition(0, 0, 23, 23);
 8004f2a:	4633      	mov	r3, r6
 8004f2c:	4622      	mov	r2, r4
 8004f2e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004f30:	9600      	str	r6, [sp, #0]
 8004f32:	4621      	mov	r1, r4
 8004f34:	f7fd fa37 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004f38:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004f3a:	4621      	mov	r1, r4
 8004f3c:	f009 f841 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_1_2);
 8004f40:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004f42:	ee18 0a10 	vmov	r0, s16
 8004f46:	f007 fe13 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004f4a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004f4c:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004f50:	a91a      	add	r1, sp, #104	; 0x68
 8004f52:	f009 ff4e 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3.setPosition(0, 44, 23, 23);
 8004f56:	464a      	mov	r2, r9
 8004f58:	4633      	mov	r3, r6
 8004f5a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004f5c:	9600      	str	r6, [sp, #0]
 8004f5e:	4621      	mov	r1, r4
 8004f60:	f7fd fa21 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004f64:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004f66:	4621      	mov	r1, r4
 8004f68:	f009 f82b 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_3);
 8004f6c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004f6e:	ee18 0a10 	vmov	r0, s16
 8004f72:	f007 fdfd 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_3_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004f76:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004f78:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004f7c:	a91a      	add	r1, sp, #104	; 0x68
 8004f7e:	f009 ff38 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_3_1.setPosition(0, 67, 23, 25);
 8004f82:	4633      	mov	r3, r6
 8004f84:	2243      	movs	r2, #67	; 0x43
 8004f86:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004f88:	f8cd a000 	str.w	sl, [sp]
 8004f8c:	4621      	mov	r1, r4
 8004f8e:	f7fd fa0a 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_3_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004f92:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004f94:	4621      	mov	r1, r4
 8004f96:	f009 f814 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat4_r.add(scalableImage1_3_1);
 8004f9a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004f9c:	ee18 0a10 	vmov	r0, s16
 8004fa0:	f007 fde6 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004fa4:	ee18 1a10 	vmov	r1, s16
 8004fa8:	4638      	mov	r0, r7
 8004faa:	f007 fde1 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boat3_r.setPosition(-34, -68, 23, 68);
 8004fae:	2344      	movs	r3, #68	; 0x44
 8004fb0:	f06f 0243 	mvn.w	r2, #67	; 0x43
 8004fb4:	ee19 0a10 	vmov	r0, s18
 8004fb8:	9300      	str	r3, [sp, #0]
 8004fba:	f06f 0121 	mvn.w	r1, #33	; 0x21
 8004fbe:	4633      	mov	r3, r6
 8004fc0:	f7fd f9f1 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004fc4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004fc6:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004fca:	a91a      	add	r1, sp, #104	; 0x68
 8004fcc:	f009 ff11 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1_1.setPosition(0, 22, 23, 23);
 8004fd0:	4633      	mov	r3, r6
 8004fd2:	2216      	movs	r2, #22
 8004fd4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004fd6:	9600      	str	r6, [sp, #0]
 8004fd8:	4621      	mov	r1, r4
 8004fda:	f7fd f9e4 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004fde:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004fe0:	4621      	mov	r1, r4
 8004fe2:	f008 ffee 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_1_1);
 8004fe6:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004fe8:	ee19 0a10 	vmov	r0, s18
 8004fec:	f007 fdc0 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 8004ff0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004ff2:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8004ff6:	a91a      	add	r1, sp, #104	; 0x68
 8004ff8:	f009 fefb 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_1.setPosition(0, 0, 23, 23);
 8004ffc:	4633      	mov	r3, r6
 8004ffe:	4622      	mov	r2, r4
 8005000:	9811      	ldr	r0, [sp, #68]	; 0x44
 8005002:	9600      	str	r6, [sp, #0]
 8005004:	4621      	mov	r1, r4
 8005006:	f7fd f9ce 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800500a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800500c:	4621      	mov	r1, r4
 800500e:	f008 ffd8 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_1);
 8005012:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005014:	ee19 0a10 	vmov	r0, s18
 8005018:	f007 fdaa 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1_2_1.setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 800501c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800501e:	f8ad 8068 	strh.w	r8, [sp, #104]	; 0x68
 8005022:	a91a      	add	r1, sp, #104	; 0x68
 8005024:	f009 fee5 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1_2_1.setPosition(0, 44, 23, 23);
 8005028:	464a      	mov	r2, r9
 800502a:	4633      	mov	r3, r6
 800502c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800502e:	9600      	str	r6, [sp, #0]
 8005030:	4621      	mov	r1, r4
 8005032:	f7fd f9b8 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1_2_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005036:	9812      	ldr	r0, [sp, #72]	; 0x48
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005038:	f8df 9280 	ldr.w	r9, [pc, #640]	; 80052bc <_ZN22OpponentScreenViewBaseC1Ev+0xbf8>
 800503c:	4621      	mov	r1, r4
 800503e:	f008 ffc0 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    boat3_r.add(scalableImage1_2_1);
 8005042:	9912      	ldr	r1, [sp, #72]	; 0x48
 8005044:	ee19 0a10 	vmov	r0, s18
 8005048:	f007 fd92 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800504c:	ee19 1a10 	vmov	r1, s18
 8005050:	4638      	mov	r0, r7
 8005052:	f007 fd8d 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005056:	f04f 030c 	mov.w	r3, #12
    title2.setBitmap(touchgfx::Bitmap(BITMAP_OPPONENT_ID));
 800505a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800505c:	f8ad 3068 	strh.w	r3, [sp, #104]	; 0x68
 8005060:	a91a      	add	r1, sp, #104	; 0x68
 8005062:	f009 fec6 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    title2.setPosition(6, 6, 229, 32);
 8005066:	2206      	movs	r2, #6
 8005068:	2320      	movs	r3, #32
 800506a:	4611      	mov	r1, r2
 800506c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800506e:	9300      	str	r3, [sp, #0]
 8005070:	23e5      	movs	r3, #229	; 0xe5
 8005072:	f7fd f998 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    title2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005076:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8005078:	4621      	mov	r1, r4
 800507a:	f008 ffa2 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800507e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8005080:	4638      	mov	r0, r7
 8005082:	f007 fd75 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRemainShip1.setXY(6, 42);
 8005086:	9814      	ldr	r0, [sp, #80]	; 0x50
 8005088:	222a      	movs	r2, #42	; 0x2a
 800508a:	2106      	movs	r1, #6
 800508c:	f7fd f97e 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005090:	f04f 33ff 	mov.w	r3, #4294967295
 8005094:	f8c5 3760 	str.w	r3, [r5, #1888]	; 0x760
 8005098:	f8d9 3000 	ldr.w	r3, [r9]
        color = newColor;
 800509c:	f8c5 b750 	str.w	fp, [r5, #1872]	; 0x750
        linespace = space;
 80050a0:	f8a5 4754 	strh.w	r4, [r5, #1876]	; 0x754
        boundingArea = calculateBoundingArea();
 80050a4:	f8c5 475c 	str.w	r4, [r5, #1884]	; 0x75c
 80050a8:	f8c5 4764 	str.w	r4, [r5, #1892]	; 0x764
    Unicode::snprintf(txtRemainShip1Buffer, TXTREMAINSHIP1_SIZE, "%s", touchgfx::TypedText(T_DESTROYER).getText());
 80050ac:	f605 087c 	addw	r8, r5, #2172	; 0x87c
 80050b0:	b92b      	cbnz	r3, 80050be <_ZN22OpponentScreenViewBaseC1Ev+0x9fa>
 80050b2:	4b7a      	ldr	r3, [pc, #488]	; (800529c <_ZN22OpponentScreenViewBaseC1Ev+0xbd8>)
 80050b4:	4a7a      	ldr	r2, [pc, #488]	; (80052a0 <_ZN22OpponentScreenViewBaseC1Ev+0xbdc>)
 80050b6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80050b8:	487a      	ldr	r0, [pc, #488]	; (80052a4 <_ZN22OpponentScreenViewBaseC1Ev+0xbe0>)
 80050ba:	f01c fba7 	bl	802180c <__assert_func>
 80050be:	4b7a      	ldr	r3, [pc, #488]	; (80052a8 <_ZN22OpponentScreenViewBaseC1Ev+0xbe4>)
 80050c0:	881b      	ldrh	r3, [r3, #0]
 80050c2:	2b12      	cmp	r3, #18
 80050c4:	d803      	bhi.n	80050ce <_ZN22OpponentScreenViewBaseC1Ev+0xa0a>
 80050c6:	4b79      	ldr	r3, [pc, #484]	; (80052ac <_ZN22OpponentScreenViewBaseC1Ev+0xbe8>)
 80050c8:	4a75      	ldr	r2, [pc, #468]	; (80052a0 <_ZN22OpponentScreenViewBaseC1Ev+0xbdc>)
 80050ca:	2161      	movs	r1, #97	; 0x61
 80050cc:	e7f4      	b.n	80050b8 <_ZN22OpponentScreenViewBaseC1Ev+0x9f4>
        return texts->getText(typedTextId);
 80050ce:	4b78      	ldr	r3, [pc, #480]	; (80052b0 <_ZN22OpponentScreenViewBaseC1Ev+0xbec>)
 80050d0:	2112      	movs	r1, #18
 80050d2:	6818      	ldr	r0, [r3, #0]
 80050d4:	f000 fad8 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 80050d8:	4a76      	ldr	r2, [pc, #472]	; (80052b4 <_ZN22OpponentScreenViewBaseC1Ev+0xbf0>)
 80050da:	4603      	mov	r3, r0
 80050dc:	2132      	movs	r1, #50	; 0x32
 80050de:	4640      	mov	r0, r8
 80050e0:	f00e fdd2 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRemainShip1.resizeToCurrentText();
 80050e4:	9814      	ldr	r0, [sp, #80]	; 0x50
        wc1 = value;
 80050e6:	f8c5 8768 	str.w	r8, [r5, #1896]	; 0x768
 80050ea:	f009 fcd3 	bl	800ea94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80050ee:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 80052c0 <_ZN22OpponentScreenViewBaseC1Ev+0xbfc>
    txtRemainShip1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S9QX));
 80050f2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80050f4:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 80050f8:	230e      	movs	r3, #14
 80050fa:	a91a      	add	r1, sp, #104	; 0x68
 80050fc:	f8ad 306c 	strh.w	r3, [sp, #108]	; 0x6c
 8005100:	f009 fce8 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005104:	9914      	ldr	r1, [sp, #80]	; 0x50
 8005106:	4638      	mov	r0, r7
 8005108:	f007 fd32 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRemainShip3.setXY(130, 42);
 800510c:	222a      	movs	r2, #42	; 0x2a
 800510e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8005110:	2182      	movs	r1, #130	; 0x82
 8005112:	f7fd f93b 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005116:	f8d9 3000 	ldr.w	r3, [r9]
        color = newColor;
 800511a:	f8c5 b79c 	str.w	fp, [r5, #1948]	; 0x79c
        boundingArea = calculateBoundingArea();
 800511e:	f04f 32ff 	mov.w	r2, #4294967295
        linespace = space;
 8005122:	f8a5 47a0 	strh.w	r4, [r5, #1952]	; 0x7a0
        boundingArea = calculateBoundingArea();
 8005126:	f8c5 47a8 	str.w	r4, [r5, #1960]	; 0x7a8
 800512a:	f8c5 27ac 	str.w	r2, [r5, #1964]	; 0x7ac
 800512e:	f8c5 47b0 	str.w	r4, [r5, #1968]	; 0x7b0
    Unicode::snprintf(txtRemainShip3Buffer, TXTREMAINSHIP3_SIZE, "%s", touchgfx::TypedText(T_BATTLESHIP).getText());
 8005132:	f505 6a0e 	add.w	sl, r5, #2272	; 0x8e0
 8005136:	2b00      	cmp	r3, #0
 8005138:	d0bb      	beq.n	80050b2 <_ZN22OpponentScreenViewBaseC1Ev+0x9ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800513a:	4a5b      	ldr	r2, [pc, #364]	; (80052a8 <_ZN22OpponentScreenViewBaseC1Ev+0xbe4>)
 800513c:	8813      	ldrh	r3, [r2, #0]
 800513e:	2b10      	cmp	r3, #16
 8005140:	d9c1      	bls.n	80050c6 <_ZN22OpponentScreenViewBaseC1Ev+0xa02>
        return texts->getText(typedTextId);
 8005142:	4b5b      	ldr	r3, [pc, #364]	; (80052b0 <_ZN22OpponentScreenViewBaseC1Ev+0xbec>)
 8005144:	2110      	movs	r1, #16
 8005146:	6818      	ldr	r0, [r3, #0]
 8005148:	f000 fa9e 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800514c:	4a59      	ldr	r2, [pc, #356]	; (80052b4 <_ZN22OpponentScreenViewBaseC1Ev+0xbf0>)
 800514e:	4603      	mov	r3, r0
 8005150:	2132      	movs	r1, #50	; 0x32
 8005152:	4650      	mov	r0, sl
 8005154:	f00e fd98 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRemainShip3.resizeToCurrentText();
 8005158:	9815      	ldr	r0, [sp, #84]	; 0x54
 800515a:	f8c5 a7b4 	str.w	sl, [r5, #1972]	; 0x7b4
 800515e:	f009 fc99 	bl	800ea94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005162:	f04f 010c 	mov.w	r1, #12
    txtRemainShip3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4QYS));
 8005166:	9815      	ldr	r0, [sp, #84]	; 0x54
 8005168:	f8ad 106c 	strh.w	r1, [sp, #108]	; 0x6c
 800516c:	a91a      	add	r1, sp, #104	; 0x68
 800516e:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8005172:	f009 fcaf 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005176:	9915      	ldr	r1, [sp, #84]	; 0x54
 8005178:	4638      	mov	r0, r7
 800517a:	f007 fcf9 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRemainShip2.setXY(6, 60);
 800517e:	2106      	movs	r1, #6
 8005180:	9816      	ldr	r0, [sp, #88]	; 0x58
 8005182:	223c      	movs	r2, #60	; 0x3c
 8005184:	f7fd f902 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005188:	f8d9 3000 	ldr.w	r3, [r9]
        color = newColor;
 800518c:	f8c5 b7e8 	str.w	fp, [r5, #2024]	; 0x7e8
        boundingArea = calculateBoundingArea();
 8005190:	f04f 31ff 	mov.w	r1, #4294967295
        linespace = space;
 8005194:	f8a5 47ec 	strh.w	r4, [r5, #2028]	; 0x7ec
        boundingArea = calculateBoundingArea();
 8005198:	f8c5 47f4 	str.w	r4, [r5, #2036]	; 0x7f4
 800519c:	f8c5 17f8 	str.w	r1, [r5, #2040]	; 0x7f8
 80051a0:	f8c5 47fc 	str.w	r4, [r5, #2044]	; 0x7fc
    Unicode::snprintf(txtRemainShip2Buffer, TXTREMAINSHIP2_SIZE, "%s", touchgfx::TypedText(T_CRUISER).getText());
 80051a4:	f605 1a44 	addw	sl, r5, #2372	; 0x944
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d082      	beq.n	80050b2 <_ZN22OpponentScreenViewBaseC1Ev+0x9ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80051ac:	4a3e      	ldr	r2, [pc, #248]	; (80052a8 <_ZN22OpponentScreenViewBaseC1Ev+0xbe4>)
 80051ae:	8813      	ldrh	r3, [r2, #0]
 80051b0:	2b11      	cmp	r3, #17
 80051b2:	d988      	bls.n	80050c6 <_ZN22OpponentScreenViewBaseC1Ev+0xa02>
        return texts->getText(typedTextId);
 80051b4:	4b3e      	ldr	r3, [pc, #248]	; (80052b0 <_ZN22OpponentScreenViewBaseC1Ev+0xbec>)
 80051b6:	2111      	movs	r1, #17
 80051b8:	6818      	ldr	r0, [r3, #0]
 80051ba:	f000 fa65 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 80051be:	4a3d      	ldr	r2, [pc, #244]	; (80052b4 <_ZN22OpponentScreenViewBaseC1Ev+0xbf0>)
 80051c0:	4603      	mov	r3, r0
 80051c2:	2132      	movs	r1, #50	; 0x32
 80051c4:	4650      	mov	r0, sl
 80051c6:	f00e fd5f 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRemainShip2.resizeToCurrentText();
 80051ca:	9816      	ldr	r0, [sp, #88]	; 0x58
 80051cc:	f8c5 a800 	str.w	sl, [r5, #2048]	; 0x800
 80051d0:	f009 fc60 	bl	800ea94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80051d4:	f04f 0a0d 	mov.w	sl, #13
    txtRemainShip2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AMBJ));
 80051d8:	9816      	ldr	r0, [sp, #88]	; 0x58
 80051da:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 80051de:	a91a      	add	r1, sp, #104	; 0x68
 80051e0:	f8ad a06c 	strh.w	sl, [sp, #108]	; 0x6c
 80051e4:	f009 fc76 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80051e8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80051ea:	4638      	mov	r0, r7
 80051ec:	f007 fcc0 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRemainShip4.setXY(130, 60);
 80051f0:	2182      	movs	r1, #130	; 0x82
 80051f2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80051f4:	223c      	movs	r2, #60	; 0x3c
 80051f6:	f7fd f8c9 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80051fa:	f8d9 3000 	ldr.w	r3, [r9]
        color = newColor;
 80051fe:	f8c5 b834 	str.w	fp, [r5, #2100]	; 0x834
        boundingArea = calculateBoundingArea();
 8005202:	f04f 31ff 	mov.w	r1, #4294967295
        linespace = space;
 8005206:	f8a5 4838 	strh.w	r4, [r5, #2104]	; 0x838
        boundingArea = calculateBoundingArea();
 800520a:	f8c5 4840 	str.w	r4, [r5, #2112]	; 0x840
 800520e:	f8c5 1844 	str.w	r1, [r5, #2116]	; 0x844
 8005212:	f8c5 4848 	str.w	r4, [r5, #2120]	; 0x848
    Unicode::snprintf(txtRemainShip4Buffer, TXTREMAINSHIP4_SIZE, "%s", touchgfx::TypedText(T_AIRCRAFT_CARRIER).getText());
 8005216:	f605 1ba8 	addw	fp, r5, #2472	; 0x9a8
 800521a:	2b00      	cmp	r3, #0
 800521c:	f43f af49 	beq.w	80050b2 <_ZN22OpponentScreenViewBaseC1Ev+0x9ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005220:	4a21      	ldr	r2, [pc, #132]	; (80052a8 <_ZN22OpponentScreenViewBaseC1Ev+0xbe4>)
 8005222:	8813      	ldrh	r3, [r2, #0]
 8005224:	2b0f      	cmp	r3, #15
 8005226:	f67f af4e 	bls.w	80050c6 <_ZN22OpponentScreenViewBaseC1Ev+0xa02>
        return texts->getText(typedTextId);
 800522a:	4b21      	ldr	r3, [pc, #132]	; (80052b0 <_ZN22OpponentScreenViewBaseC1Ev+0xbec>)
 800522c:	210f      	movs	r1, #15
 800522e:	6818      	ldr	r0, [r3, #0]
 8005230:	f000 fa2a 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 8005234:	4a1f      	ldr	r2, [pc, #124]	; (80052b4 <_ZN22OpponentScreenViewBaseC1Ev+0xbf0>)
 8005236:	4603      	mov	r3, r0
 8005238:	2132      	movs	r1, #50	; 0x32
 800523a:	4658      	mov	r0, fp
 800523c:	f00e fd24 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRemainShip4.resizeToCurrentText();
 8005240:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8005242:	f8c5 b84c 	str.w	fp, [r5, #2124]	; 0x84c
 8005246:	f009 fc25 	bl	800ea94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800524a:	230b      	movs	r3, #11
    txtRemainShip4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_546Q));
 800524c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800524e:	f8ad 306c 	strh.w	r3, [sp, #108]	; 0x6c
 8005252:	a91a      	add	r1, sp, #104	; 0x68
 8005254:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
 8005258:	f009 fc3c 	bl	800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800525c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800525e:	4638      	mov	r0, r7
 8005260:	f007 fc86 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    select.setBitmap(touchgfx::Bitmap(BITMAP_SELECT_ID));
 8005264:	9818      	ldr	r0, [sp, #96]	; 0x60
 8005266:	f8ad a068 	strh.w	sl, [sp, #104]	; 0x68
 800526a:	a91a      	add	r1, sp, #104	; 0x68
 800526c:	f009 fdc1 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    select.setPosition(5, 84, 23, 23);
 8005270:	4633      	mov	r3, r6
 8005272:	2254      	movs	r2, #84	; 0x54
 8005274:	9818      	ldr	r0, [sp, #96]	; 0x60
 8005276:	9600      	str	r6, [sp, #0]
 8005278:	2105      	movs	r1, #5
 800527a:	f7fd f894 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    select.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800527e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8005280:	4621      	mov	r1, r4
 8005282:	f008 fe9e 	bl	800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8005286:	4638      	mov	r0, r7
 8005288:	9918      	ldr	r1, [sp, #96]	; 0x60
 800528a:	f007 fc71 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800528e:	4628      	mov	r0, r5
 8005290:	b01d      	add	sp, #116	; 0x74
 8005292:	ecbd 8b10 	vpop	{d8-d15}
 8005296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800529a:	bf00      	nop
 800529c:	0802345c 	.word	0x0802345c
 80052a0:	080235c2 	.word	0x080235c2
 80052a4:	080234d9 	.word	0x080234d9
 80052a8:	20015028 	.word	0x20015028
 80052ac:	08023584 	.word	0x08023584
 80052b0:	20015030 	.word	0x20015030
 80052b4:	080235fa 	.word	0x080235fa
 80052b8:	ff1434a8 	.word	0xff1434a8
 80052bc:	20015024 	.word	0x20015024
 80052c0:	08023528 	.word	0x08023528

080052c4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_rechargebd_otf_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_rechargebd_otf_12_4bpp();

touchgfx::GeneratedFont& getFont_rechargebd_otf_12_4bpp()
{
    static touchgfx::GeneratedFont rechargebd_otf_12_4bpp(glyphs_rechargebd_otf_12_4bpp, 95, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_rechargebd_otf_12_4bpp, kerning_rechargebd_otf_12_4bpp, 63, 0, 0, 0);
 80052c4:	4770      	bx	lr
	...

080052c8 <_Z30getFont_rechargebd_otf_12_4bppv>:
{
 80052c8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont rechargebd_otf_12_4bpp(glyphs_rechargebd_otf_12_4bpp, 95, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_rechargebd_otf_12_4bpp, kerning_rechargebd_otf_12_4bpp, 63, 0, 0, 0);
 80052ca:	4d17      	ldr	r5, [pc, #92]	; (8005328 <_Z30getFont_rechargebd_otf_12_4bppv+0x60>)
 80052cc:	782c      	ldrb	r4, [r5, #0]
 80052ce:	f3bf 8f5b 	dmb	ish
 80052d2:	f014 0401 	ands.w	r4, r4, #1
{
 80052d6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont rechargebd_otf_12_4bpp(glyphs_rechargebd_otf_12_4bpp, 95, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_rechargebd_otf_12_4bpp, kerning_rechargebd_otf_12_4bpp, 63, 0, 0, 0);
 80052d8:	d122      	bne.n	8005320 <_Z30getFont_rechargebd_otf_12_4bppv+0x58>
 80052da:	4628      	mov	r0, r5
 80052dc:	f01c f9e8 	bl	80216b0 <__cxa_guard_acquire>
 80052e0:	b1f0      	cbz	r0, 8005320 <_Z30getFont_rechargebd_otf_12_4bppv+0x58>
 80052e2:	233f      	movs	r3, #63	; 0x3f
 80052e4:	9309      	str	r3, [sp, #36]	; 0x24
 80052e6:	4b11      	ldr	r3, [pc, #68]	; (800532c <_Z30getFont_rechargebd_otf_12_4bppv+0x64>)
 80052e8:	9308      	str	r3, [sp, #32]
 80052ea:	4b11      	ldr	r3, [pc, #68]	; (8005330 <_Z30getFont_rechargebd_otf_12_4bppv+0x68>)
 80052ec:	9307      	str	r3, [sp, #28]
 80052ee:	2301      	movs	r3, #1
 80052f0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80052f4:	9304      	str	r3, [sp, #16]
 80052f6:	2304      	movs	r3, #4
 80052f8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80052fc:	230c      	movs	r3, #12
 80052fe:	490d      	ldr	r1, [pc, #52]	; (8005334 <_Z30getFont_rechargebd_otf_12_4bppv+0x6c>)
 8005300:	9300      	str	r3, [sp, #0]
 8005302:	225f      	movs	r2, #95	; 0x5f
 8005304:	230f      	movs	r3, #15
 8005306:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800530a:	480b      	ldr	r0, [pc, #44]	; (8005338 <_Z30getFont_rechargebd_otf_12_4bppv+0x70>)
 800530c:	940a      	str	r4, [sp, #40]	; 0x28
 800530e:	9401      	str	r4, [sp, #4]
 8005310:	f7fe ff56 	bl	80041c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8005314:	4809      	ldr	r0, [pc, #36]	; (800533c <_Z30getFont_rechargebd_otf_12_4bppv+0x74>)
 8005316:	f01c fa97 	bl	8021848 <atexit>
 800531a:	4628      	mov	r0, r5
 800531c:	f01c f9d4 	bl	80216c8 <__cxa_guard_release>
    return rechargebd_otf_12_4bpp;
}
 8005320:	4805      	ldr	r0, [pc, #20]	; (8005338 <_Z30getFont_rechargebd_otf_12_4bppv+0x70>)
 8005322:	b00f      	add	sp, #60	; 0x3c
 8005324:	bd30      	pop	{r4, r5, pc}
 8005326:	bf00      	nop
 8005328:	20004158 	.word	0x20004158
 800532c:	08028c70 	.word	0x08028c70
 8005330:	08028f20 	.word	0x08028f20
 8005334:	08028450 	.word	0x08028450
 8005338:	2000415c 	.word	0x2000415c
 800533c:	080052c5 	.word	0x080052c5

08005340 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_rechargebd_otf_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_rechargebd_otf_20_4bpp();

touchgfx::GeneratedFont& getFont_rechargebd_otf_20_4bpp()
{
    static touchgfx::GeneratedFont rechargebd_otf_20_4bpp(glyphs_rechargebd_otf_20_4bpp, 34, 25, 20, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_20_4bpp, kerning_rechargebd_otf_20_4bpp, 63, 0, 0, 0);
 8005340:	4770      	bx	lr
	...

08005344 <_Z30getFont_rechargebd_otf_20_4bppv>:
{
 8005344:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont rechargebd_otf_20_4bpp(glyphs_rechargebd_otf_20_4bpp, 34, 25, 20, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_20_4bpp, kerning_rechargebd_otf_20_4bpp, 63, 0, 0, 0);
 8005346:	4d17      	ldr	r5, [pc, #92]	; (80053a4 <_Z30getFont_rechargebd_otf_20_4bppv+0x60>)
 8005348:	782c      	ldrb	r4, [r5, #0]
 800534a:	f3bf 8f5b 	dmb	ish
 800534e:	f014 0401 	ands.w	r4, r4, #1
{
 8005352:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont rechargebd_otf_20_4bpp(glyphs_rechargebd_otf_20_4bpp, 34, 25, 20, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_20_4bpp, kerning_rechargebd_otf_20_4bpp, 63, 0, 0, 0);
 8005354:	d122      	bne.n	800539c <_Z30getFont_rechargebd_otf_20_4bppv+0x58>
 8005356:	4628      	mov	r0, r5
 8005358:	f01c f9aa 	bl	80216b0 <__cxa_guard_acquire>
 800535c:	b1f0      	cbz	r0, 800539c <_Z30getFont_rechargebd_otf_20_4bppv+0x58>
 800535e:	233f      	movs	r3, #63	; 0x3f
 8005360:	9309      	str	r3, [sp, #36]	; 0x24
 8005362:	4b11      	ldr	r3, [pc, #68]	; (80053a8 <_Z30getFont_rechargebd_otf_20_4bppv+0x64>)
 8005364:	9308      	str	r3, [sp, #32]
 8005366:	4b11      	ldr	r3, [pc, #68]	; (80053ac <_Z30getFont_rechargebd_otf_20_4bppv+0x68>)
 8005368:	4911      	ldr	r1, [pc, #68]	; (80053b0 <_Z30getFont_rechargebd_otf_20_4bppv+0x6c>)
 800536a:	4812      	ldr	r0, [pc, #72]	; (80053b4 <_Z30getFont_rechargebd_otf_20_4bppv+0x70>)
 800536c:	940a      	str	r4, [sp, #40]	; 0x28
 800536e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8005372:	2201      	movs	r2, #1
 8005374:	2304      	movs	r3, #4
 8005376:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800537a:	2314      	movs	r3, #20
 800537c:	9300      	str	r3, [sp, #0]
 800537e:	2222      	movs	r2, #34	; 0x22
 8005380:	2319      	movs	r3, #25
 8005382:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8005386:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800538a:	9405      	str	r4, [sp, #20]
 800538c:	f7fe ff18 	bl	80041c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8005390:	4809      	ldr	r0, [pc, #36]	; (80053b8 <_Z30getFont_rechargebd_otf_20_4bppv+0x74>)
 8005392:	f01c fa59 	bl	8021848 <atexit>
 8005396:	4628      	mov	r0, r5
 8005398:	f01c f996 	bl	80216c8 <__cxa_guard_release>
    return rechargebd_otf_20_4bpp;
}
 800539c:	4805      	ldr	r0, [pc, #20]	; (80053b4 <_Z30getFont_rechargebd_otf_20_4bppv+0x70>)
 800539e:	b00f      	add	sp, #60	; 0x3c
 80053a0:	bd30      	pop	{r4, r5, pc}
 80053a2:	bf00      	nop
 80053a4:	20004188 	.word	0x20004188
 80053a8:	08028e48 	.word	0x08028e48
 80053ac:	08028f24 	.word	0x08028f24
 80053b0:	08028984 	.word	0x08028984
 80053b4:	2000418c 	.word	0x2000418c
 80053b8:	08005341 	.word	0x08005341

080053bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_rechargebd_otf_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_rechargebd_otf_30_4bpp();

touchgfx::GeneratedFont& getFont_rechargebd_otf_30_4bpp()
{
    static touchgfx::GeneratedFont rechargebd_otf_30_4bpp(glyphs_rechargebd_otf_30_4bpp, 17, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_30_4bpp, kerning_rechargebd_otf_30_4bpp, 63, 0, 0, 0);
 80053bc:	4770      	bx	lr
	...

080053c0 <_Z30getFont_rechargebd_otf_30_4bppv>:
{
 80053c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont rechargebd_otf_30_4bpp(glyphs_rechargebd_otf_30_4bpp, 17, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_30_4bpp, kerning_rechargebd_otf_30_4bpp, 63, 0, 0, 0);
 80053c2:	4d16      	ldr	r5, [pc, #88]	; (800541c <_Z30getFont_rechargebd_otf_30_4bppv+0x5c>)
 80053c4:	782c      	ldrb	r4, [r5, #0]
 80053c6:	f3bf 8f5b 	dmb	ish
 80053ca:	f014 0401 	ands.w	r4, r4, #1
{
 80053ce:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont rechargebd_otf_30_4bpp(glyphs_rechargebd_otf_30_4bpp, 17, 30, 30, 0, 0, 4, 1, 0, 0, unicodes_rechargebd_otf_30_4bpp, kerning_rechargebd_otf_30_4bpp, 63, 0, 0, 0);
 80053d0:	d121      	bne.n	8005416 <_Z30getFont_rechargebd_otf_30_4bppv+0x56>
 80053d2:	4628      	mov	r0, r5
 80053d4:	f01c f96c 	bl	80216b0 <__cxa_guard_acquire>
 80053d8:	b1e8      	cbz	r0, 8005416 <_Z30getFont_rechargebd_otf_30_4bppv+0x56>
 80053da:	233f      	movs	r3, #63	; 0x3f
 80053dc:	9309      	str	r3, [sp, #36]	; 0x24
 80053de:	4b10      	ldr	r3, [pc, #64]	; (8005420 <_Z30getFont_rechargebd_otf_30_4bppv+0x60>)
 80053e0:	9308      	str	r3, [sp, #32]
 80053e2:	4b10      	ldr	r3, [pc, #64]	; (8005424 <_Z30getFont_rechargebd_otf_30_4bppv+0x64>)
 80053e4:	4910      	ldr	r1, [pc, #64]	; (8005428 <_Z30getFont_rechargebd_otf_30_4bppv+0x68>)
 80053e6:	4811      	ldr	r0, [pc, #68]	; (800542c <_Z30getFont_rechargebd_otf_30_4bppv+0x6c>)
 80053e8:	940a      	str	r4, [sp, #40]	; 0x28
 80053ea:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80053ee:	2201      	movs	r2, #1
 80053f0:	2304      	movs	r3, #4
 80053f2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80053f6:	231e      	movs	r3, #30
 80053f8:	9300      	str	r3, [sp, #0]
 80053fa:	2211      	movs	r2, #17
 80053fc:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8005400:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8005404:	9405      	str	r4, [sp, #20]
 8005406:	f7fe fedb 	bl	80041c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800540a:	4809      	ldr	r0, [pc, #36]	; (8005430 <_Z30getFont_rechargebd_otf_30_4bppv+0x70>)
 800540c:	f01c fa1c 	bl	8021848 <atexit>
 8005410:	4628      	mov	r0, r5
 8005412:	f01c f959 	bl	80216c8 <__cxa_guard_release>
    return rechargebd_otf_30_4bpp;
}
 8005416:	4805      	ldr	r0, [pc, #20]	; (800542c <_Z30getFont_rechargebd_otf_30_4bppv+0x6c>)
 8005418:	b00f      	add	sp, #60	; 0x3c
 800541a:	bd30      	pop	{r4, r5, pc}
 800541c:	200041b8 	.word	0x200041b8
 8005420:	08028ee0 	.word	0x08028ee0
 8005424:	08028f28 	.word	0x08028f28
 8005428:	08028b60 	.word	0x08028b60
 800542c:	200041bc 	.word	0x200041bc
 8005430:	080053bd 	.word	0x080053bd

08005434 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8005434:	4770      	bx	lr
	...

08005438 <_Z23getFont_verdana_10_4bppv>:
{
 8005438:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800543a:	4d16      	ldr	r5, [pc, #88]	; (8005494 <_Z23getFont_verdana_10_4bppv+0x5c>)
 800543c:	782c      	ldrb	r4, [r5, #0]
 800543e:	f3bf 8f5b 	dmb	ish
 8005442:	f014 0401 	ands.w	r4, r4, #1
{
 8005446:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8005448:	d120      	bne.n	800548c <_Z23getFont_verdana_10_4bppv+0x54>
 800544a:	4628      	mov	r0, r5
 800544c:	f01c f930 	bl	80216b0 <__cxa_guard_acquire>
 8005450:	b1e0      	cbz	r0, 800548c <_Z23getFont_verdana_10_4bppv+0x54>
 8005452:	233f      	movs	r3, #63	; 0x3f
 8005454:	9309      	str	r3, [sp, #36]	; 0x24
 8005456:	4b10      	ldr	r3, [pc, #64]	; (8005498 <_Z23getFont_verdana_10_4bppv+0x60>)
 8005458:	9308      	str	r3, [sp, #32]
 800545a:	4b10      	ldr	r3, [pc, #64]	; (800549c <_Z23getFont_verdana_10_4bppv+0x64>)
 800545c:	4910      	ldr	r1, [pc, #64]	; (80054a0 <_Z23getFont_verdana_10_4bppv+0x68>)
 800545e:	4811      	ldr	r0, [pc, #68]	; (80054a4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8005460:	940a      	str	r4, [sp, #40]	; 0x28
 8005462:	2201      	movs	r2, #1
 8005464:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8005468:	2304      	movs	r3, #4
 800546a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800546e:	230a      	movs	r3, #10
 8005470:	9300      	str	r3, [sp, #0]
 8005472:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8005476:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800547a:	9405      	str	r4, [sp, #20]
 800547c:	f7fe fea0 	bl	80041c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8005480:	4809      	ldr	r0, [pc, #36]	; (80054a8 <_Z23getFont_verdana_10_4bppv+0x70>)
 8005482:	f01c f9e1 	bl	8021848 <atexit>
 8005486:	4628      	mov	r0, r5
 8005488:	f01c f91e 	bl	80216c8 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800548c:	4805      	ldr	r0, [pc, #20]	; (80054a4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800548e:	b00f      	add	sp, #60	; 0x3c
 8005490:	bd30      	pop	{r4, r5, pc}
 8005492:	bf00      	nop
 8005494:	200041e8 	.word	0x200041e8
 8005498:	08028f18 	.word	0x08028f18
 800549c:	08028f2c 	.word	0x08028f2c
 80054a0:	08028c50 	.word	0x08028c50
 80054a4:	200041ec 	.word	0x200041ec
 80054a8:	08005435 	.word	0x08005435

080054ac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80054ac:	4770      	bx	lr
	...

080054b0 <_Z23getFont_verdana_40_4bppv>:
{
 80054b0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80054b2:	4d16      	ldr	r5, [pc, #88]	; (800550c <_Z23getFont_verdana_40_4bppv+0x5c>)
 80054b4:	782c      	ldrb	r4, [r5, #0]
 80054b6:	f3bf 8f5b 	dmb	ish
 80054ba:	f014 0401 	ands.w	r4, r4, #1
{
 80054be:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80054c0:	d120      	bne.n	8005504 <_Z23getFont_verdana_40_4bppv+0x54>
 80054c2:	4628      	mov	r0, r5
 80054c4:	f01c f8f4 	bl	80216b0 <__cxa_guard_acquire>
 80054c8:	b1e0      	cbz	r0, 8005504 <_Z23getFont_verdana_40_4bppv+0x54>
 80054ca:	233f      	movs	r3, #63	; 0x3f
 80054cc:	9309      	str	r3, [sp, #36]	; 0x24
 80054ce:	4b10      	ldr	r3, [pc, #64]	; (8005510 <_Z23getFont_verdana_40_4bppv+0x60>)
 80054d0:	9308      	str	r3, [sp, #32]
 80054d2:	4b10      	ldr	r3, [pc, #64]	; (8005514 <_Z23getFont_verdana_40_4bppv+0x64>)
 80054d4:	4910      	ldr	r1, [pc, #64]	; (8005518 <_Z23getFont_verdana_40_4bppv+0x68>)
 80054d6:	4811      	ldr	r0, [pc, #68]	; (800551c <_Z23getFont_verdana_40_4bppv+0x6c>)
 80054d8:	940a      	str	r4, [sp, #40]	; 0x28
 80054da:	2201      	movs	r2, #1
 80054dc:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80054e0:	2304      	movs	r3, #4
 80054e2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80054e6:	2328      	movs	r3, #40	; 0x28
 80054e8:	9300      	str	r3, [sp, #0]
 80054ea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80054ee:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80054f2:	9405      	str	r4, [sp, #20]
 80054f4:	f7fe fe64 	bl	80041c0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80054f8:	4809      	ldr	r0, [pc, #36]	; (8005520 <_Z23getFont_verdana_40_4bppv+0x70>)
 80054fa:	f01c f9a5 	bl	8021848 <atexit>
 80054fe:	4628      	mov	r0, r5
 8005500:	f01c f8e2 	bl	80216c8 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8005504:	4805      	ldr	r0, [pc, #20]	; (800551c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8005506:	b00f      	add	sp, #60	; 0x3c
 8005508:	bd30      	pop	{r4, r5, pc}
 800550a:	bf00      	nop
 800550c:	20004218 	.word	0x20004218
 8005510:	08028f1c 	.word	0x08028f1c
 8005514:	08028f30 	.word	0x08028f30
 8005518:	08028c60 	.word	0x08028c60
 800551c:	2000421c 	.word	0x2000421c
 8005520:	080054ad 	.word	0x080054ad

08005524 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8005524:	2000      	movs	r0, #0
 8005526:	4770      	bx	lr

08005528 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8005528:	2000      	movs	r0, #0
 800552a:	4770      	bx	lr

0800552c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800552c:	b40e      	push	{r1, r2, r3}
 800552e:	b503      	push	{r0, r1, lr}
 8005530:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8005532:	2100      	movs	r1, #0
{
 8005534:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8005538:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800553a:	f00c fa41 	bl	80119c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800553e:	b002      	add	sp, #8
 8005540:	f85d eb04 	ldr.w	lr, [sp], #4
 8005544:	b003      	add	sp, #12
 8005546:	4770      	bx	lr

08005548 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8005548:	b40c      	push	{r2, r3}
 800554a:	b507      	push	{r0, r1, r2, lr}
 800554c:	ab04      	add	r3, sp, #16
 800554e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8005552:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8005554:	f00c fa34 	bl	80119c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8005558:	b003      	add	sp, #12
 800555a:	f85d eb04 	ldr.w	lr, [sp], #4
 800555e:	b002      	add	sp, #8
 8005560:	4770      	bx	lr
	...

08005564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8005564:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8005566:	b510      	push	{r4, lr}
 8005568:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800556a:	b373      	cbz	r3, 80055ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800556c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800556e:	b92b      	cbnz	r3, 800557c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8005570:	4b18      	ldr	r3, [pc, #96]	; (80055d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8005572:	4a19      	ldr	r2, [pc, #100]	; (80055d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8005574:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8005576:	4819      	ldr	r0, [pc, #100]	; (80055dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8005578:	f01c f948 	bl	802180c <__assert_func>
            return buffer[pos];
 800557c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800557e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8005582:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8005584:	b30b      	cbz	r3, 80055ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8005586:	f00d fdd6 	bl	8013136 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800558a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800558c:	2b01      	cmp	r3, #1
 800558e:	d803      	bhi.n	8005598 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8005590:	4b13      	ldr	r3, [pc, #76]	; (80055e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8005592:	4a14      	ldr	r2, [pc, #80]	; (80055e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8005594:	21cb      	movs	r1, #203	; 0xcb
 8005596:	e7ee      	b.n	8005576 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8005598:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800559a:	1c53      	adds	r3, r2, #1
 800559c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800559e:	2b09      	cmp	r3, #9
 80055a0:	4619      	mov	r1, r3
 80055a2:	bf88      	it	hi
 80055a4:	f1a3 010a 	subhi.w	r1, r3, #10
 80055a8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80055ac:	f640 103f 	movw	r0, #2367	; 0x93f
 80055b0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80055b2:	4281      	cmp	r1, r0
 80055b4:	d109      	bne.n	80055ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80055b6:	2b0a      	cmp	r3, #10
 80055b8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80055bc:	bf28      	it	cs
 80055be:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80055c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80055c4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80055c6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80055c8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80055ca:	4620      	mov	r0, r4
}
 80055cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80055d0:	f00d bcb4 	b.w	8012f3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80055d4:	080242d0 	.word	0x080242d0
 80055d8:	080242d9 	.word	0x080242d9
 80055dc:	08024384 	.word	0x08024384
 80055e0:	080243ce 	.word	0x080243ce
 80055e4:	080243dc 	.word	0x080243dc

080055e8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80055e8:	f00d bc6f 	b.w	8012eca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080055ec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80055ec:	b510      	push	{r4, lr}
 80055ee:	b086      	sub	sp, #24
 80055f0:	ac02      	add	r4, sp, #8
 80055f2:	e884 0006 	stmia.w	r4, {r1, r2}
 80055f6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80055f8:	ab0a      	add	r3, sp, #40	; 0x28
 80055fa:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80055fc:	9301      	str	r3, [sp, #4]
 80055fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005600:	9300      	str	r3, [sp, #0]
 8005602:	4621      	mov	r1, r4
 8005604:	9b08      	ldr	r3, [sp, #32]
 8005606:	f00a fdc7 	bl	8010198 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800560a:	b006      	add	sp, #24
 800560c:	bd10      	pop	{r4, pc}
	...

08005610 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8005610:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8005612:	bb18      	cbnz	r0, 800565c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8005614:	4b12      	ldr	r3, [pc, #72]	; (8005660 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8005616:	4813      	ldr	r0, [pc, #76]	; (8005664 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8005618:	681b      	ldr	r3, [r3, #0]
 800561a:	4913      	ldr	r1, [pc, #76]	; (8005668 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800561c:	b1b3      	cbz	r3, 800564c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800561e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8005620:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8005622:	441a      	add	r2, r3
 8005624:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8005626:	685a      	ldr	r2, [r3, #4]
 8005628:	441a      	add	r2, r3
 800562a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800562c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800562e:	4b0f      	ldr	r3, [pc, #60]	; (800566c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8005630:	2200      	movs	r2, #0
 8005632:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8005634:	f000 f838 	bl	80056a8 <_ZN17TypedTextDatabase8getFontsEv>
 8005638:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800563a:	f000 f833 	bl	80056a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800563e:	4b0c      	ldr	r3, [pc, #48]	; (8005670 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8005640:	601c      	str	r4, [r3, #0]
        fonts = f;
 8005642:	4b0c      	ldr	r3, [pc, #48]	; (8005674 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8005644:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8005646:	4b0c      	ldr	r3, [pc, #48]	; (8005678 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8005648:	8018      	strh	r0, [r3, #0]
    }
}
 800564a:	e007      	b.n	800565c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800564c:	4b0b      	ldr	r3, [pc, #44]	; (800567c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800564e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8005650:	4b0b      	ldr	r3, [pc, #44]	; (8005680 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8005652:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8005654:	4b0b      	ldr	r3, [pc, #44]	; (8005684 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8005656:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8005658:	2c00      	cmp	r4, #0
 800565a:	d1e8      	bne.n	800562e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800565c:	bd38      	pop	{r3, r4, r5, pc}
 800565e:	bf00      	nop
 8005660:	20004248 	.word	0x20004248
 8005664:	2000424c 	.word	0x2000424c
 8005668:	20004250 	.word	0x20004250
 800566c:	20004254 	.word	0x20004254
 8005670:	20015024 	.word	0x20015024
 8005674:	2001502c 	.word	0x2001502c
 8005678:	20015028 	.word	0x20015028
 800567c:	08028f88 	.word	0x08028f88
 8005680:	08028f34 	.word	0x08028f34
 8005684:	08029108 	.word	0x08029108

08005688 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8005688:	4b04      	ldr	r3, [pc, #16]	; (800569c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800568a:	681b      	ldr	r3, [r3, #0]
 800568c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8005690:	4b03      	ldr	r3, [pc, #12]	; (80056a0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8005692:	681b      	ldr	r3, [r3, #0]
}
 8005694:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8005698:	4770      	bx	lr
 800569a:	bf00      	nop
 800569c:	20004250 	.word	0x20004250
 80056a0:	2000424c 	.word	0x2000424c

080056a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80056a4:	2015      	movs	r0, #21
 80056a6:	4770      	bx	lr

080056a8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80056a8:	4800      	ldr	r0, [pc, #0]	; (80056ac <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80056aa:	4770      	bx	lr
 80056ac:	20004258 	.word	0x20004258

080056b0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_rechargebd_otf_20_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80056b0:	b510      	push	{r4, lr}
    &(getFont_rechargebd_otf_12_4bpp()),
 80056b2:	f7ff fe09 	bl	80052c8 <_Z30getFont_rechargebd_otf_12_4bppv>
};
 80056b6:	4c07      	ldr	r4, [pc, #28]	; (80056d4 <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
 80056b8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80056ba:	f7ff fef9 	bl	80054b0 <_Z23getFont_verdana_40_4bppv>
};
 80056be:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80056c0:	f7ff feba 	bl	8005438 <_Z23getFont_verdana_10_4bppv>
};
 80056c4:	60a0      	str	r0, [r4, #8]
    &(getFont_rechargebd_otf_30_4bpp()),
 80056c6:	f7ff fe7b 	bl	80053c0 <_Z30getFont_rechargebd_otf_30_4bppv>
};
 80056ca:	60e0      	str	r0, [r4, #12]
    &(getFont_rechargebd_otf_20_4bpp())
 80056cc:	f7ff fe3a 	bl	8005344 <_Z30getFont_rechargebd_otf_20_4bppv>
};
 80056d0:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
 80056d2:	bd10      	pop	{r4, pc}
 80056d4:	20004258 	.word	0x20004258

080056d8 <_ZN25ChooseTurnScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ChooseTurnScreenPresenter() {}
 80056d8:	4770      	bx	lr

080056da <_ZThn4_N25ChooseTurnScreenPresenterD1Ev>:
 80056da:	3804      	subs	r0, #4
 80056dc:	4770      	bx	lr

080056de <_ZN25ChooseTurnScreenPresenter10deactivateEv>:
}

void ChooseTurnScreenPresenter::activate()
{

}
 80056de:	4770      	bx	lr

080056e0 <_ZN25ChooseTurnScreenPresenterD0Ev>:
 80056e0:	b510      	push	{r4, lr}
 80056e2:	2110      	movs	r1, #16
 80056e4:	4604      	mov	r4, r0
 80056e6:	f01b ffe1 	bl	80216ac <_ZdlPvj>
 80056ea:	4620      	mov	r0, r4
 80056ec:	bd10      	pop	{r4, pc}

080056ee <_ZThn4_N25ChooseTurnScreenPresenterD0Ev>:
 80056ee:	f1a0 0004 	sub.w	r0, r0, #4
 80056f2:	e7f5      	b.n	80056e0 <_ZN25ChooseTurnScreenPresenterD0Ev>

080056f4 <_ZN25ChooseTurnScreenPresenterC1ER20ChooseTurnScreenView>:
ChooseTurnScreenPresenter::ChooseTurnScreenPresenter(ChooseTurnScreenView& v)
 80056f4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80056f6:	2200      	movs	r2, #0
 80056f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80056fa:	4a04      	ldr	r2, [pc, #16]	; (800570c <_ZN25ChooseTurnScreenPresenterC1ER20ChooseTurnScreenView+0x18>)
 80056fc:	60c1      	str	r1, [r0, #12]
 80056fe:	f102 0408 	add.w	r4, r2, #8
 8005702:	3220      	adds	r2, #32
 8005704:	6004      	str	r4, [r0, #0]
 8005706:	6042      	str	r2, [r0, #4]
}
 8005708:	bd10      	pop	{r4, pc}
 800570a:	bf00      	nop
 800570c:	080244b0 	.word	0x080244b0

08005710 <_ZN20ChooseTurnScreenView14tearDownScreenEv>:
}

void ChooseTurnScreenView::tearDownScreen()
{
    ChooseTurnScreenViewBase::tearDownScreen();
}
 8005710:	4770      	bx	lr

08005712 <_ZN20ChooseTurnScreenView15btnFirstClickedEv>:

void ChooseTurnScreenView::btnFirstClicked()
{
 8005712:	b508      	push	{r3, lr}

    void setIsGoFirst(bool b) {
		model->setIsGoFirst(b);
 8005714:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
	}
	bool getIsMultiPlayer() {
		return this->isMultiPlayer;
	}
	void setIsGoFirst(bool b) {
		this->isGoFirst = b;
 8005716:	689b      	ldr	r3, [r3, #8]
 8005718:	2201      	movs	r2, #1
 800571a:	f883 2651 	strb.w	r2, [r3, #1617]	; 0x651

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800571e:	f00b f9b9 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
	presenter->setIsGoFirst(true);
	application().gotoGameScreenScreenSlideTransitionEast();
}
 8005722:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	application().gotoGameScreenScreenSlideTransitionEast();
 8005726:	f7fd bb65 	b.w	8002df4 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>

0800572a <_ZN20ChooseTurnScreenView16btnSecondClickedEv>:

void ChooseTurnScreenView::btnSecondClicked()
{
 800572a:	b508      	push	{r3, lr}
 800572c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800572e:	689b      	ldr	r3, [r3, #8]
 8005730:	2200      	movs	r2, #0
 8005732:	f883 2651 	strb.w	r2, [r3, #1617]	; 0x651
 8005736:	f00b f9ad 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
	presenter->setIsGoFirst(false);
	application().gotoGameScreenScreenSlideTransitionEast();
}
 800573a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	application().gotoGameScreenScreenSlideTransitionEast();
 800573e:	f7fd bb59 	b.w	8002df4 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>
	...

08005744 <_ZN20ChooseTurnScreenViewD1Ev>:

class ChooseTurnScreenView : public ChooseTurnScreenViewBase
{
public:
    ChooseTurnScreenView();
    virtual ~ChooseTurnScreenView() {}
 8005744:	b510      	push	{r4, lr}
 8005746:	4b03      	ldr	r3, [pc, #12]	; (8005754 <_ZN20ChooseTurnScreenViewD1Ev+0x10>)
 8005748:	6003      	str	r3, [r0, #0]
 800574a:	4604      	mov	r4, r0
 800574c:	f7fc fdd5 	bl	80022fa <_ZN24ChooseTurnScreenViewBaseD1Ev>
 8005750:	4620      	mov	r0, r4
 8005752:	bd10      	pop	{r4, pc}
 8005754:	080244e0 	.word	0x080244e0

08005758 <_ZN20ChooseTurnScreenViewD0Ev>:
 8005758:	b510      	push	{r4, lr}
 800575a:	4604      	mov	r4, r0
 800575c:	f7ff fff2 	bl	8005744 <_ZN20ChooseTurnScreenViewD1Ev>
 8005760:	4620      	mov	r0, r4
 8005762:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8005766:	f01b ffa1 	bl	80216ac <_ZdlPvj>
 800576a:	4620      	mov	r0, r4
 800576c:	bd10      	pop	{r4, pc}
	...

08005770 <_ZN20ChooseTurnScreenViewC1Ev>:
ChooseTurnScreenView::ChooseTurnScreenView()
 8005770:	b510      	push	{r4, lr}
 8005772:	4604      	mov	r4, r0
 8005774:	f7fc fe84 	bl	8002480 <_ZN24ChooseTurnScreenViewBaseC1Ev>
 8005778:	4b01      	ldr	r3, [pc, #4]	; (8005780 <_ZN20ChooseTurnScreenViewC1Ev+0x10>)
 800577a:	6023      	str	r3, [r4, #0]
}
 800577c:	4620      	mov	r0, r4
 800577e:	bd10      	pop	{r4, pc}
 8005780:	080244e0 	.word	0x080244e0

08005784 <_ZN20ChooseTurnScreenView11setupScreenEv>:
    ChooseTurnScreenViewBase::setupScreen();
 8005784:	f7fc bdba 	b.w	80022fc <_ZN24ChooseTurnScreenViewBase11setupScreenEv>

08005788 <_ZN22EndGameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~EndGameScreenPresenter() {}
 8005788:	4770      	bx	lr

0800578a <_ZThn4_N22EndGameScreenPresenterD1Ev>:
 800578a:	3804      	subs	r0, #4
 800578c:	4770      	bx	lr

0800578e <_ZN22EndGameScreenPresenter10deactivateEv>:
}

void EndGameScreenPresenter::activate()
{

}
 800578e:	4770      	bx	lr

08005790 <_ZN22EndGameScreenPresenterD0Ev>:
 8005790:	b510      	push	{r4, lr}
 8005792:	2110      	movs	r1, #16
 8005794:	4604      	mov	r4, r0
 8005796:	f01b ff89 	bl	80216ac <_ZdlPvj>
 800579a:	4620      	mov	r0, r4
 800579c:	bd10      	pop	{r4, pc}

0800579e <_ZThn4_N22EndGameScreenPresenterD0Ev>:
 800579e:	f1a0 0004 	sub.w	r0, r0, #4
 80057a2:	e7f5      	b.n	8005790 <_ZN22EndGameScreenPresenterD0Ev>

080057a4 <_ZN22EndGameScreenPresenterC1ER17EndGameScreenView>:
EndGameScreenPresenter::EndGameScreenPresenter(EndGameScreenView& v)
 80057a4:	b510      	push	{r4, lr}
 80057a6:	2200      	movs	r2, #0
 80057a8:	6082      	str	r2, [r0, #8]
    : view(v)
 80057aa:	4a04      	ldr	r2, [pc, #16]	; (80057bc <_ZN22EndGameScreenPresenterC1ER17EndGameScreenView+0x18>)
 80057ac:	60c1      	str	r1, [r0, #12]
 80057ae:	f102 0408 	add.w	r4, r2, #8
 80057b2:	3220      	adds	r2, #32
 80057b4:	6004      	str	r4, [r0, #0]
 80057b6:	6042      	str	r2, [r0, #4]
}
 80057b8:	bd10      	pop	{r4, pc}
 80057ba:	bf00      	nop
 80057bc:	08024514 	.word	0x08024514

080057c0 <_ZN17EndGameScreenView14tearDownScreenEv>:
}

void EndGameScreenView::tearDownScreen()
{
    EndGameScreenViewBase::tearDownScreen();
}
 80057c0:	4770      	bx	lr
	...

080057c4 <_ZN17EndGameScreenViewD1Ev>:

class EndGameScreenView : public EndGameScreenViewBase
{
public:
    EndGameScreenView();
    virtual ~EndGameScreenView() {}
 80057c4:	b510      	push	{r4, lr}
 80057c6:	4b03      	ldr	r3, [pc, #12]	; (80057d4 <_ZN17EndGameScreenViewD1Ev+0x10>)
 80057c8:	6003      	str	r3, [r0, #0]
 80057ca:	4604      	mov	r4, r0
 80057cc:	f7fc ff74 	bl	80026b8 <_ZN21EndGameScreenViewBaseD1Ev>
 80057d0:	4620      	mov	r0, r4
 80057d2:	bd10      	pop	{r4, pc}
 80057d4:	08024544 	.word	0x08024544

080057d8 <_ZN17EndGameScreenViewD0Ev>:
 80057d8:	b510      	push	{r4, lr}
 80057da:	4604      	mov	r4, r0
 80057dc:	f7ff fff2 	bl	80057c4 <_ZN17EndGameScreenViewD1Ev>
 80057e0:	4620      	mov	r0, r4
 80057e2:	f44f 71cc 	mov.w	r1, #408	; 0x198
 80057e6:	f01b ff61 	bl	80216ac <_ZdlPvj>
 80057ea:	4620      	mov	r0, r4
 80057ec:	bd10      	pop	{r4, pc}
	...

080057f0 <_ZN17EndGameScreenViewC1Ev>:
EndGameScreenView::EndGameScreenView()
 80057f0:	b510      	push	{r4, lr}
 80057f2:	4604      	mov	r4, r0
 80057f4:	f7fd f804 	bl	8002800 <_ZN21EndGameScreenViewBaseC1Ev>
 80057f8:	4b01      	ldr	r3, [pc, #4]	; (8005800 <_ZN17EndGameScreenViewC1Ev+0x10>)
 80057fa:	6023      	str	r3, [r4, #0]
}
 80057fc:	4620      	mov	r0, r4
 80057fe:	bd10      	pop	{r4, pc}
 8005800:	08024544 	.word	0x08024544

08005804 <_ZN17EndGameScreenView11setupScreenEv>:
{
 8005804:	b538      	push	{r3, r4, r5, lr}
 8005806:	4604      	mov	r4, r0
    EndGameScreenViewBase::setupScreen();
 8005808:	f7fc ff57 	bl	80026ba <_ZN21EndGameScreenViewBase11setupScreenEv>

    int32_t getWinner() {
		return model->getWinner();
 800580c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800580e:	4918      	ldr	r1, [pc, #96]	; (8005870 <_ZN17EndGameScreenView11setupScreenEv+0x6c>)

	void setWinner(int32_t winner) {
		this->winner = winner;
	}
	int32_t getWinner() {
		return this->winner;
 8005810:	689b      	ldr	r3, [r3, #8]
 8005812:	4a18      	ldr	r2, [pc, #96]	; (8005874 <_ZN17EndGameScreenView11setupScreenEv+0x70>)
    if(winner == 1)
 8005814:	f8d3 3648 	ldr.w	r3, [r3, #1608]	; 0x648
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005818:	6809      	ldr	r1, [r1, #0]
 800581a:	2b01      	cmp	r3, #1
    	Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T_PLAYER1).getText());
 800581c:	f504 75ba 	add.w	r5, r4, #372	; 0x174
 8005820:	4b15      	ldr	r3, [pc, #84]	; (8005878 <_ZN17EndGameScreenView11setupScreenEv+0x74>)
    if(winner == 1)
 8005822:	d11d      	bne.n	8005860 <_ZN17EndGameScreenView11setupScreenEv+0x5c>
 8005824:	b929      	cbnz	r1, 8005832 <_ZN17EndGameScreenView11setupScreenEv+0x2e>
 8005826:	4b15      	ldr	r3, [pc, #84]	; (800587c <_ZN17EndGameScreenView11setupScreenEv+0x78>)
 8005828:	4a15      	ldr	r2, [pc, #84]	; (8005880 <_ZN17EndGameScreenView11setupScreenEv+0x7c>)
 800582a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800582c:	4815      	ldr	r0, [pc, #84]	; (8005884 <_ZN17EndGameScreenView11setupScreenEv+0x80>)
 800582e:	f01b ffed 	bl	802180c <__assert_func>
 8005832:	8812      	ldrh	r2, [r2, #0]
 8005834:	2a09      	cmp	r2, #9
 8005836:	d803      	bhi.n	8005840 <_ZN17EndGameScreenView11setupScreenEv+0x3c>
 8005838:	4b13      	ldr	r3, [pc, #76]	; (8005888 <_ZN17EndGameScreenView11setupScreenEv+0x84>)
 800583a:	4a11      	ldr	r2, [pc, #68]	; (8005880 <_ZN17EndGameScreenView11setupScreenEv+0x7c>)
 800583c:	2161      	movs	r1, #97	; 0x61
 800583e:	e7f5      	b.n	800582c <_ZN17EndGameScreenView11setupScreenEv+0x28>
        return texts->getText(typedTextId);
 8005840:	2109      	movs	r1, #9
 8005842:	6818      	ldr	r0, [r3, #0]
 8005844:	f7ff ff20 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
    	Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T_PLAYER2).getText());
 8005848:	4a10      	ldr	r2, [pc, #64]	; (800588c <_ZN17EndGameScreenView11setupScreenEv+0x88>)
 800584a:	4603      	mov	r3, r0
 800584c:	210a      	movs	r1, #10
 800584e:	4628      	mov	r0, r5
 8005850:	f00e fa1a 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}

    void Init()
    {
    	model->Init();
 8005854:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005856:	6898      	ldr	r0, [r3, #8]
}
 8005858:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800585c:	f000 bf55 	b.w	800670a <_ZN5Model4InitEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005860:	2900      	cmp	r1, #0
 8005862:	d0e0      	beq.n	8005826 <_ZN17EndGameScreenView11setupScreenEv+0x22>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005864:	8812      	ldrh	r2, [r2, #0]
 8005866:	2a08      	cmp	r2, #8
 8005868:	d9e6      	bls.n	8005838 <_ZN17EndGameScreenView11setupScreenEv+0x34>
        return texts->getText(typedTextId);
 800586a:	2108      	movs	r1, #8
 800586c:	e7e9      	b.n	8005842 <_ZN17EndGameScreenView11setupScreenEv+0x3e>
 800586e:	bf00      	nop
 8005870:	20015024 	.word	0x20015024
 8005874:	20015028 	.word	0x20015028
 8005878:	20015030 	.word	0x20015030
 800587c:	0802345c 	.word	0x0802345c
 8005880:	080235c2 	.word	0x080235c2
 8005884:	080234d9 	.word	0x080234d9
 8005888:	08023584 	.word	0x08023584
 800588c:	080235fa 	.word	0x080235fa

08005890 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8005890:	4770      	bx	lr

08005892 <_ZN19FrontendApplicationD0Ev>:
 8005892:	b510      	push	{r4, lr}
 8005894:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8005898:	4604      	mov	r4, r0
 800589a:	f01b ff07 	bl	80216ac <_ZdlPvj>
 800589e:	4620      	mov	r0, r4
 80058a0:	bd10      	pop	{r4, pc}

080058a2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80058a2:	b510      	push	{r4, lr}
 80058a4:	4604      	mov	r4, r0
    {
        model.tick();
 80058a6:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80058aa:	f000 ff2d 	bl	8006708 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80058ae:	4620      	mov	r0, r4
    }
 80058b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80058b4:	f00b b98a 	b.w	8010bcc <_ZN8touchgfx11Application15handleTickEventEv>

080058b8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80058b8:	b510      	push	{r4, lr}
 80058ba:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80058bc:	f7fd fa2a 	bl	8002d14 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80058c0:	4b01      	ldr	r3, [pc, #4]	; (80058c8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80058c2:	6023      	str	r3, [r4, #0]
{

}
 80058c4:	4620      	mov	r0, r4
 80058c6:	bd10      	pop	{r4, pc}
 80058c8:	08024578 	.word	0x08024578

080058cc <_ZN19GameScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~GameScreenPresenter() {}
 80058cc:	4770      	bx	lr

080058ce <_ZThn4_N19GameScreenPresenterD1Ev>:
 80058ce:	3804      	subs	r0, #4
 80058d0:	4770      	bx	lr

080058d2 <_ZN19GameScreenPresenter10deactivateEv>:
}

void GameScreenPresenter::activate()
{

}
 80058d2:	4770      	bx	lr

080058d4 <_ZN19GameScreenPresenterD0Ev>:
 80058d4:	b510      	push	{r4, lr}
 80058d6:	2110      	movs	r1, #16
 80058d8:	4604      	mov	r4, r0
 80058da:	f01b fee7 	bl	80216ac <_ZdlPvj>
 80058de:	4620      	mov	r0, r4
 80058e0:	bd10      	pop	{r4, pc}

080058e2 <_ZThn4_N19GameScreenPresenterD0Ev>:
 80058e2:	f1a0 0004 	sub.w	r0, r0, #4
 80058e6:	e7f5      	b.n	80058d4 <_ZN19GameScreenPresenterD0Ev>

080058e8 <_ZN19GameScreenPresenterC1ER14GameScreenView>:
GameScreenPresenter::GameScreenPresenter(GameScreenView& v)
 80058e8:	b510      	push	{r4, lr}
 80058ea:	2200      	movs	r2, #0
 80058ec:	6082      	str	r2, [r0, #8]
    : view(v)
 80058ee:	4a04      	ldr	r2, [pc, #16]	; (8005900 <_ZN19GameScreenPresenterC1ER14GameScreenView+0x18>)
 80058f0:	60c1      	str	r1, [r0, #12]
 80058f2:	f102 0408 	add.w	r4, r2, #8
 80058f6:	3220      	adds	r2, #32
 80058f8:	6004      	str	r4, [r0, #0]
 80058fa:	6042      	str	r2, [r0, #4]
}
 80058fc:	bd10      	pop	{r4, pc}
 80058fe:	bf00      	nop
 8005900:	080245c4 	.word	0x080245c4

08005904 <_ZN14GameScreenView14tearDownScreenEv>:
	}
}

void GameScreenView::tearDownScreen() {
	GameScreenViewBase::tearDownScreen();
}
 8005904:	4770      	bx	lr
	...

08005908 <_ZN14GameScreenViewD1Ev>:

class GameScreenView : public GameScreenViewBase
{
public:
    GameScreenView();
    virtual ~GameScreenView() {}
 8005908:	4b09      	ldr	r3, [pc, #36]	; (8005930 <_ZN14GameScreenViewD1Ev+0x28>)
 800590a:	b570      	push	{r4, r5, r6, lr}
 800590c:	4604      	mov	r4, r0
 800590e:	6003      	str	r3, [r0, #0]
 8005910:	f242 255c 	movw	r5, #8796	; 0x225c
 8005914:	f241 162c 	movw	r6, #4396	; 0x112c
 8005918:	5963      	ldr	r3, [r4, r5]
 800591a:	1960      	adds	r0, r4, r5
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	3d2c      	subs	r5, #44	; 0x2c
 8005920:	4798      	blx	r3
 8005922:	42b5      	cmp	r5, r6
 8005924:	d1f8      	bne.n	8005918 <_ZN14GameScreenViewD1Ev+0x10>
 8005926:	4620      	mov	r0, r4
 8005928:	f7fd fe92 	bl	8003650 <_ZN18GameScreenViewBaseD1Ev>
 800592c:	4620      	mov	r0, r4
 800592e:	bd70      	pop	{r4, r5, r6, pc}
 8005930:	080245fc 	.word	0x080245fc

08005934 <_ZN14GameScreenViewD0Ev>:
 8005934:	b510      	push	{r4, lr}
 8005936:	4604      	mov	r4, r0
 8005938:	f7ff ffe6 	bl	8005908 <_ZN14GameScreenViewD1Ev>
 800593c:	4620      	mov	r0, r4
 800593e:	f242 51b8 	movw	r1, #9656	; 0x25b8
 8005942:	f01b feb3 	bl	80216ac <_ZdlPvj>
 8005946:	4620      	mov	r0, r4
 8005948:	bd10      	pop	{r4, pc}

0800594a <_ZN19GameScreenPresenter7getDeskEPA10_l>:

	void getDesk(int32_t (*arr)[10]) {
 800594a:	b510      	push	{r4, lr}
 800594c:	460c      	mov	r4, r1
    			arr[i][j] = this->player1Desk[i][j];
 800594e:	6881      	ldr	r1, [r0, #8]
 8005950:	b0e4      	sub	sp, #400	; 0x190
 8005952:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8005956:	f501 714a 	add.w	r1, r1, #808	; 0x328
 800595a:	4668      	mov	r0, sp
 800595c:	f01b ffe4 	bl	8021928 <memcpy>
		int32_t data[10][10];
		model->getPlayer1Desk(data);
		for (int i = 0; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				arr[i][j] = data[i][j];
 8005960:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8005964:	4669      	mov	r1, sp
 8005966:	4620      	mov	r0, r4
 8005968:	f01b ffde 	bl	8021928 <memcpy>
			}
		}
	}
 800596c:	b064      	add	sp, #400	; 0x190
 800596e:	bd10      	pop	{r4, pc}

08005970 <_ZN19GameScreenPresenter7getHitsEPSt4pairIllE>:
        model->setPlayer1Desk(i, j, status);
    }
	void setHits(std::pair<int32_t, int32_t> bot[100]) {
		model->setHits(bot);
	}
	void getHits(std::pair<int32_t, int32_t>* bot) {
 8005970:	b530      	push	{r4, r5, lr}
 8005972:	4605      	mov	r5, r0
 8005974:	f5ad 7d49 	sub.w	sp, sp, #804	; 0x324
		std::pair<int32_t, int32_t> t[100];
 8005978:	f44f 7248 	mov.w	r2, #800	; 0x320
	void getHits(std::pair<int32_t, int32_t>* bot) {
 800597c:	460c      	mov	r4, r1
		std::pair<int32_t, int32_t> t[100];
 800597e:	4668      	mov	r0, sp
 8005980:	2100      	movs	r1, #0
 8005982:	f01b ffdf 	bl	8021944 <memset>
		for (int32_t i = 0; i < 100; i++) {
 8005986:	68aa      	ldr	r2, [r5, #8]
 8005988:	466b      	mov	r3, sp
 800598a:	f502 7048 	add.w	r0, r2, #800	; 0x320
		model->getHits(t);
 800598e:	4619      	mov	r1, r3
      operator=(typename conditional<
		__and_<is_copy_assignable<_T1>,
		       is_copy_assignable<_T2>>::value,
		const pair&, const __nonesuch&>::type __p)
      {
	first = __p.first;
 8005990:	6855      	ldr	r5, [r2, #4]
 8005992:	600d      	str	r5, [r1, #0]
	second = __p.second;
 8005994:	f852 5f08 	ldr.w	r5, [r2, #8]!
 8005998:	604d      	str	r5, [r1, #4]
 800599a:	4282      	cmp	r2, r0
 800599c:	f101 0108 	add.w	r1, r1, #8
 80059a0:	d1f6      	bne.n	8005990 <_ZN19GameScreenPresenter7getHitsEPSt4pairIllE+0x20>
		for (int32_t i = 0; i < 100; i++) {
 80059a2:	2200      	movs	r2, #0
 80059a4:	1d21      	adds	r1, r4, #4
	first = __p.first;
 80059a6:	6818      	ldr	r0, [r3, #0]
 80059a8:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
	second = __p.second;
 80059ac:	6858      	ldr	r0, [r3, #4]
 80059ae:	f841 0032 	str.w	r0, [r1, r2, lsl #3]
 80059b2:	3201      	adds	r2, #1
 80059b4:	2a64      	cmp	r2, #100	; 0x64
 80059b6:	f103 0308 	add.w	r3, r3, #8
 80059ba:	d1f4      	bne.n	80059a6 <_ZN19GameScreenPresenter7getHitsEPSt4pairIllE+0x36>
			bot[i] = t[i];
		}
	}
 80059bc:	f50d 7d49 	add.w	sp, sp, #804	; 0x324
 80059c0:	bd30      	pop	{r4, r5, pc}

080059c2 <_ZN5Queue7enQueueESt4pairIllE>:
    bool isEmpty() {
        if (front == -1) return true;
        else return false;
    }

    void enQueue(std::pair<int32_t, int32_t> value) {
 80059c2:	b082      	sub	sp, #8
 80059c4:	ab02      	add	r3, sp, #8
 80059c6:	e903 0006 	stmdb	r3, {r1, r2}
        if (front == 0 && rear == MAX_SIZE - 1) {
 80059ca:	e9d0 23c8 	ldrd	r2, r3, [r0, #800]	; 0x320
 80059ce:	b91a      	cbnz	r2, 80059d8 <_ZN5Queue7enQueueESt4pairIllE+0x16>
 80059d0:	2b63      	cmp	r3, #99	; 0x63
 80059d2:	d106      	bne.n	80059e2 <_ZN5Queue7enQueueESt4pairIllE+0x20>
        if (!isFull()) {
            if (front == -1) front = 0;
            rear++;
            myqueue[rear] = value;
        }
    }
 80059d4:	b002      	add	sp, #8
 80059d6:	4770      	bx	lr
            if (front == -1) front = 0;
 80059d8:	3201      	adds	r2, #1
 80059da:	bf04      	itt	eq
 80059dc:	2200      	moveq	r2, #0
 80059de:	f8c0 2320 	streq.w	r2, [r0, #800]	; 0x320
            rear++;
 80059e2:	1c5a      	adds	r2, r3, #1
 80059e4:	f8c0 2324 	str.w	r2, [r0, #804]	; 0x324
      operator=(typename conditional<
 80059e8:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
	first = __p.first;
 80059ec:	9b00      	ldr	r3, [sp, #0]
 80059ee:	6083      	str	r3, [r0, #8]
	second = __p.second;
 80059f0:	9b01      	ldr	r3, [sp, #4]
 80059f2:	60c3      	str	r3, [r0, #12]
    }
 80059f4:	e7ee      	b.n	80059d4 <_ZN5Queue7enQueueESt4pairIllE+0x12>

080059f6 <_ZN14GameScreenView11checkWinnerEPA10_l>:
    void handleTickEvent();
    bool checkOutOfDesk(int32_t x, int32_t y, int16_t countBoat);
    bool checkAvailable(int32_t x, int32_t y, int16_t countBoat);
    void botHit(int32_t [][10]);
    bool checkWinner(int32_t board[][10]) {
    	for (int32_t i = 0; i < 10; i++) {
 80059f6:	f101 0324 	add.w	r3, r1, #36	; 0x24
 80059fa:	f501 71da 	add.w	r1, r1, #436	; 0x1b4
    		for (int32_t j = 0; j < 10; j++) {
 80059fe:	f1a3 0228 	sub.w	r2, r3, #40	; 0x28
    			if (board[i][j] > 0) {
 8005a02:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8005a06:	2800      	cmp	r0, #0
 8005a08:	dc07      	bgt.n	8005a1a <_ZN14GameScreenView11checkWinnerEPA10_l+0x24>
    		for (int32_t j = 0; j < 10; j++) {
 8005a0a:	429a      	cmp	r2, r3
 8005a0c:	d1f9      	bne.n	8005a02 <_ZN14GameScreenView11checkWinnerEPA10_l+0xc>
    	for (int32_t i = 0; i < 10; i++) {
 8005a0e:	f102 0328 	add.w	r3, r2, #40	; 0x28
 8005a12:	428b      	cmp	r3, r1
 8005a14:	d1f3      	bne.n	80059fe <_ZN14GameScreenView11checkWinnerEPA10_l+0x8>
    				return false;
    			}
    		}
    	}
    	return true;
 8005a16:	2001      	movs	r0, #1
 8005a18:	4770      	bx	lr
    				return false;
 8005a1a:	2000      	movs	r0, #0
    }
 8005a1c:	4770      	bx	lr
	...

08005a20 <_ZN14GameScreenViewC1Ev>:
GameScreenView::GameScreenView() {
 8005a20:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005a24:	4605      	mov	r5, r0
 8005a26:	f7fd fe3b 	bl	80036a0 <_ZN18GameScreenViewBaseC1Ev>
 8005a2a:	4b1c      	ldr	r3, [pc, #112]	; (8005a9c <_ZN14GameScreenViewC1Ev+0x7c>)
 8005a2c:	602b      	str	r3, [r5, #0]
 8005a2e:	f205 70dc 	addw	r0, r5, #2012	; 0x7dc
 8005a32:	f001 fbbf 	bl	80071b4 <_ZN5BoardC1Ev>
    Queue() {
 8005a36:	f44f 7248 	mov.w	r2, #800	; 0x320
 8005a3a:	2100      	movs	r1, #0
 8005a3c:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 8005a40:	f01b ff80 	bl	8021944 <memset>
 8005a44:	f505 548a 	add.w	r4, r5, #4416	; 0x1140
        front = -1;
 8005a48:	f04f 33ff 	mov.w	r3, #4294967295
 8005a4c:	f505 560a 	add.w	r6, r5, #8832	; 0x2280
 8005a50:	f8c5 3fb4 	str.w	r3, [r5, #4020]	; 0xfb4
        rear = -1;
 8005a54:	f8c5 3fb8 	str.w	r3, [r5, #4024]	; 0xfb8
 8005a58:	3418      	adds	r4, #24
 8005a5a:	3608      	adds	r6, #8
 8005a5c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8005a60:	f504 78dc 	add.w	r8, r4, #440	; 0x1b8
 8005a64:	4620      	mov	r0, r4
 8005a66:	a901      	add	r1, sp, #4
 8005a68:	342c      	adds	r4, #44	; 0x2c
 8005a6a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8005a6e:	f008 faed 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005a72:	4544      	cmp	r4, r8
 8005a74:	d1f6      	bne.n	8005a64 <_ZN14GameScreenViewC1Ev+0x44>
 8005a76:	42a6      	cmp	r6, r4
 8005a78:	d1f2      	bne.n	8005a60 <_ZN14GameScreenViewC1Ev+0x40>
 8005a7a:	f505 5400 	add.w	r4, r5, #8192	; 0x2000
 8005a7e:	f44f 7248 	mov.w	r2, #800	; 0x320
 8005a82:	2100      	movs	r1, #0
 8005a84:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8005a88:	f01b ff5c 	bl	8021944 <memset>
	tickCount = 0;
 8005a8c:	2300      	movs	r3, #0
}
 8005a8e:	4628      	mov	r0, r5
	currentCount = 0;
 8005a90:	e9c4 33a2 	strd	r3, r3, [r4, #648]	; 0x288
}
 8005a94:	b002      	add	sp, #8
 8005a96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005a9a:	bf00      	nop
 8005a9c:	080245fc 	.word	0x080245fc

08005aa0 <_ZN14GameScreenView14checkOutOfDeskElls>:
	if(currentCount > 0 && tickCount > currentCount + 15){
		application().gotoOpponentScreenScreenSlideTransitionEast();
	}
	invalidate();
}
bool GameScreenView::checkOutOfDesk(int32_t x, int32_t y, int16_t countBoat) {
 8005aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005aa2:	4606      	mov	r6, r0
 8005aa4:	460d      	mov	r5, r1
	presenter->getDesk(desk);
 8005aa6:	f600 71c8 	addw	r1, r0, #4040	; 0xfc8
 8005aaa:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
bool GameScreenView::checkOutOfDesk(int32_t x, int32_t y, int16_t countBoat) {
 8005aac:	461f      	mov	r7, r3
 8005aae:	4614      	mov	r4, r2
	presenter->getDesk(desk);
 8005ab0:	f7ff ff4b 	bl	800594a <_ZN19GameScreenPresenter7getDeskEPA10_l>
	if (is_vertical) {
 8005ab4:	f896 3fbe 	ldrb.w	r3, [r6, #4030]	; 0xfbe
 8005ab8:	b12b      	cbz	r3, 8005ac6 <_ZN14GameScreenView14checkOutOfDeskElls+0x26>
		if (x + countBoat > MAX_BOARD) {
 8005aba:	19eb      	adds	r3, r5, r7
 8005abc:	2b09      	cmp	r3, #9
			return false;
		}
	} else {
		if (y + countBoat > MAX_BOARD) {
 8005abe:	bfcc      	ite	gt
 8005ac0:	2000      	movgt	r0, #0
 8005ac2:	2001      	movle	r0, #1
			return false;
		}
	}
	return true;
}
 8005ac4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if (y + countBoat > MAX_BOARD) {
 8005ac6:	19e0      	adds	r0, r4, r7
 8005ac8:	2809      	cmp	r0, #9
 8005aca:	e7f8      	b.n	8005abe <_ZN14GameScreenView14checkOutOfDeskElls+0x1e>

08005acc <_ZN14GameScreenView14checkAvailableElls>:

bool GameScreenView::checkAvailable(int32_t x, int32_t y, int16_t countBoat) {
 8005acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ace:	4604      	mov	r4, r0
 8005ad0:	460f      	mov	r7, r1
	presenter->getDesk(desk);
 8005ad2:	f600 71c8 	addw	r1, r0, #4040	; 0xfc8
 8005ad6:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
bool GameScreenView::checkAvailable(int32_t x, int32_t y, int16_t countBoat) {
 8005ad8:	4615      	mov	r5, r2
 8005ada:	461e      	mov	r6, r3
	presenter->getDesk(desk);
 8005adc:	f7ff ff35 	bl	800594a <_ZN19GameScreenPresenter7getDeskEPA10_l>
	if (!is_vertical) {
 8005ae0:	f894 0fbe 	ldrb.w	r0, [r4, #4030]	; 0xfbe
 8005ae4:	210a      	movs	r1, #10
 8005ae6:	b170      	cbz	r0, 8005b06 <_ZN14GameScreenView14checkAvailableElls+0x3a>
 8005ae8:	fb01 5107 	mla	r1, r1, r7, r5
 8005aec:	eb04 0481 	add.w	r4, r4, r1, lsl #2
			if (desk[x][y + i] > 0) {
				return false;
			}
		}
	} else {
		for (int i = 0; i <= countBoat; i++) {
 8005af0:	2300      	movs	r3, #0
 8005af2:	429e      	cmp	r6, r3
 8005af4:	db17      	blt.n	8005b26 <_ZN14GameScreenView14checkAvailableElls+0x5a>
			if (desk[x + i][y] > 0) {
 8005af6:	f8d4 2fc8 	ldr.w	r2, [r4, #4040]	; 0xfc8
 8005afa:	2a00      	cmp	r2, #0
 8005afc:	f104 0428 	add.w	r4, r4, #40	; 0x28
 8005b00:	dc12      	bgt.n	8005b28 <_ZN14GameScreenView14checkAvailableElls+0x5c>
		for (int i = 0; i <= countBoat; i++) {
 8005b02:	3301      	adds	r3, #1
 8005b04:	e7f5      	b.n	8005af2 <_ZN14GameScreenView14checkAvailableElls+0x26>
 8005b06:	f205 32f2 	addw	r2, r5, #1010	; 0x3f2
 8005b0a:	fb01 2507 	mla	r5, r1, r7, r2
 8005b0e:	eb04 0485 	add.w	r4, r4, r5, lsl #2
		for (int i = 0; i <= countBoat; i++) {
 8005b12:	4603      	mov	r3, r0
 8005b14:	429e      	cmp	r6, r3
 8005b16:	db05      	blt.n	8005b24 <_ZN14GameScreenView14checkAvailableElls+0x58>
			if (desk[x][y + i] > 0) {
 8005b18:	f854 2b04 	ldr.w	r2, [r4], #4
 8005b1c:	2a00      	cmp	r2, #0
 8005b1e:	dc02      	bgt.n	8005b26 <_ZN14GameScreenView14checkAvailableElls+0x5a>
		for (int i = 0; i <= countBoat; i++) {
 8005b20:	3301      	adds	r3, #1
 8005b22:	e7f7      	b.n	8005b14 <_ZN14GameScreenView14checkAvailableElls+0x48>
				return false;
			}
		}
	}
	return true;
 8005b24:	2001      	movs	r0, #1
}
 8005b26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				return false;
 8005b28:	2000      	movs	r0, #0
 8005b2a:	e7fc      	b.n	8005b26 <_ZN14GameScreenView14checkAvailableElls+0x5a>

08005b2c <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv>:
	   size_t __n, size_t __m, size_t __r,
	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
	   _UIntType __f>
    void
    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 8005b2c:	b530      	push	{r4, r5, lr}
      for (size_t __k = 0; __k < (__n - __m); ++__k)
        {
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
			   | (_M_x[__k + 1] & __lower_mask));
	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
		       ^ ((__y & 0x01) ? __a : 0));
 8005b2e:	4d25      	ldr	r5, [pc, #148]	; (8005bc4 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0x98>)
 8005b30:	f500 7463 	add.w	r4, r0, #908	; 0x38c
    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 8005b34:	4602      	mov	r2, r0
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005b36:	6811      	ldr	r1, [r2, #0]
			   | (_M_x[__k + 1] & __lower_mask));
 8005b38:	f852 3f04 	ldr.w	r3, [r2, #4]!
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005b3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
			   | (_M_x[__k + 1] & __lower_mask));
 8005b40:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005b44:	430b      	orrs	r3, r1
	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 8005b46:	f8d2 1630 	ldr.w	r1, [r2, #1584]	; 0x630
 8005b4a:	ea81 0153 	eor.w	r1, r1, r3, lsr #1
		       ^ ((__y & 0x01) ? __a : 0));
 8005b4e:	f013 0301 	ands.w	r3, r3, #1
 8005b52:	bf18      	it	ne
 8005b54:	462b      	movne	r3, r5
 8005b56:	404b      	eors	r3, r1
      for (size_t __k = 0; __k < (__n - __m); ++__k)
 8005b58:	4294      	cmp	r4, r2
	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 8005b5a:	f842 3c04 	str.w	r3, [r2, #-4]
      for (size_t __k = 0; __k < (__n - __m); ++__k)
 8005b5e:	d1ea      	bne.n	8005b36 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0xa>
      for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
	{
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
			   | (_M_x[__k + 1] & __lower_mask));
	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
		       ^ ((__y & 0x01) ? __a : 0));
 8005b60:	4d18      	ldr	r5, [pc, #96]	; (8005bc4 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0x98>)
 8005b62:	1f02      	subs	r2, r0, #4
 8005b64:	f200 642c 	addw	r4, r0, #1580	; 0x62c
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005b68:	f8d2 3390 	ldr.w	r3, [r2, #912]	; 0x390
			   | (_M_x[__k + 1] & __lower_mask));
 8005b6c:	f8d2 1394 	ldr.w	r1, [r2, #916]	; 0x394
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005b70:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
			   | (_M_x[__k + 1] & __lower_mask));
 8005b74:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 8005b78:	430b      	orrs	r3, r1
	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 8005b7a:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8005b7e:	ea81 0153 	eor.w	r1, r1, r3, lsr #1
		       ^ ((__y & 0x01) ? __a : 0));
 8005b82:	f013 0301 	ands.w	r3, r3, #1
 8005b86:	bf18      	it	ne
 8005b88:	462b      	movne	r3, r5
 8005b8a:	404b      	eors	r3, r1
      for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 8005b8c:	4294      	cmp	r4, r2
	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 8005b8e:	f8c2 338c 	str.w	r3, [r2, #908]	; 0x38c
      for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 8005b92:	d1e9      	bne.n	8005b68 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0x3c>
	}

      _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 8005b94:	f8d0 39bc 	ldr.w	r3, [r0, #2492]	; 0x9bc
		       | (_M_x[0] & __lower_mask));
 8005b98:	6802      	ldr	r2, [r0, #0]
      _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
		       ^ ((__y & 0x01) ? __a : 0));
 8005b9a:	490a      	ldr	r1, [pc, #40]	; (8005bc4 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv+0x98>)
		       | (_M_x[0] & __lower_mask));
 8005b9c:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
      _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 8005ba0:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8005ba4:	4313      	orrs	r3, r2
      _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 8005ba6:	f8d0 2630 	ldr.w	r2, [r0, #1584]	; 0x630
 8005baa:	ea82 0253 	eor.w	r2, r2, r3, lsr #1
		       ^ ((__y & 0x01) ? __a : 0));
 8005bae:	f013 0301 	ands.w	r3, r3, #1
 8005bb2:	bf18      	it	ne
 8005bb4:	460b      	movne	r3, r1
 8005bb6:	4053      	eors	r3, r2
      _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 8005bb8:	f8c0 39bc 	str.w	r3, [r0, #2492]	; 0x9bc
      _M_p = 0;
 8005bbc:	2300      	movs	r3, #0
 8005bbe:	f8c0 39c0 	str.w	r3, [r0, #2496]	; 0x9c0
    }
 8005bc2:	bd30      	pop	{r4, r5, pc}
 8005bc4:	9908b0df 	.word	0x9908b0df

08005bc8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>:
    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
			    __s, __b, __t, __c, __l, __f>::
    operator()()
    {
      // Reload the vector - cost is O(n) amortized over n calls.
      if (_M_p >= state_size)
 8005bc8:	f8d0 39c0 	ldr.w	r3, [r0, #2496]	; 0x9c0
 8005bcc:	f5b3 7f1c 	cmp.w	r3, #624	; 0x270
    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 8005bd0:	b510      	push	{r4, lr}
 8005bd2:	4604      	mov	r4, r0
      if (_M_p >= state_size)
 8005bd4:	d301      	bcc.n	8005bda <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv+0x12>
	_M_gen_rand();
 8005bd6:	f7ff ffa9 	bl	8005b2c <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE11_M_gen_randEv>

      // Calculate o(x(i)).
      result_type __z = _M_x[_M_p++];
 8005bda:	f8d4 39c0 	ldr.w	r3, [r4, #2496]	; 0x9c0
      __z ^= (__z >> __u) & __d;
      __z ^= (__z << __s) & __b;
 8005bde:	4809      	ldr	r0, [pc, #36]	; (8005c04 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv+0x3c>)
      result_type __z = _M_x[_M_p++];
 8005be0:	1c5a      	adds	r2, r3, #1
 8005be2:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8005be6:	f8c4 29c0 	str.w	r2, [r4, #2496]	; 0x9c0
      __z ^= (__z >> __u) & __d;
 8005bea:	ea83 23d3 	eor.w	r3, r3, r3, lsr #11
      __z ^= (__z << __s) & __b;
 8005bee:	ea00 10c3 	and.w	r0, r0, r3, lsl #7
 8005bf2:	4043      	eors	r3, r0
      __z ^= (__z << __t) & __c;
 8005bf4:	4804      	ldr	r0, [pc, #16]	; (8005c08 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv+0x40>)
 8005bf6:	ea00 30c3 	and.w	r0, r0, r3, lsl #15
 8005bfa:	4058      	eors	r0, r3
      __z ^= (__z >> __l);

      return __z;
    }
 8005bfc:	ea80 4090 	eor.w	r0, r0, r0, lsr #18
 8005c00:	bd10      	pop	{r4, pc}
 8005c02:	bf00      	nop
 8005c04:	9d2c5680 	.word	0x9d2c5680
 8005c08:	efc60000 	.word	0xefc60000

08005c0c <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0>:
    };

  template<typename _IntType>
    template<typename _UniformRandomNumberGenerator>
      typename uniform_int_distribution<_IntType>::result_type
      uniform_int_distribution<_IntType>::
 8005c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	  __uctype;

	const __uctype __urngmin = __urng.min();
	const __uctype __urngmax = __urng.max();
	const __uctype __urngrange = __urngmax - __urngmin;
	const __uctype __urange
 8005c0e:	e9d1 2300 	ldrd	r2, r3, [r1]
 8005c12:	1a9b      	subs	r3, r3, r2
	  = __uctype(__param.b()) - __uctype(__param.a());

	__uctype __ret;

	if (__urngrange > __urange)
 8005c14:	1c5a      	adds	r2, r3, #1
      uniform_int_distribution<_IntType>::
 8005c16:	4607      	mov	r7, r0
 8005c18:	460d      	mov	r5, r1
	if (__urngrange > __urange)
 8005c1a:	d010      	beq.n	8005c3e <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0+0x32>
	  {
	    // downscaling
	    const __uctype __uerange = __urange + 1; // __urange can be zero
 8005c1c:	3301      	adds	r3, #1
	    const __uctype __scaling = __urngrange / __uerange;
 8005c1e:	f04f 36ff 	mov.w	r6, #4294967295
 8005c22:	fbb6 f6f3 	udiv	r6, r6, r3
	    const __uctype __past = __uerange * __scaling;
 8005c26:	fb06 f403 	mul.w	r4, r6, r3
	    do
	      __ret = __uctype(__urng()) - __urngmin;
 8005c2a:	4638      	mov	r0, r7
 8005c2c:	f7ff ffcc 	bl	8005bc8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
	    while (__ret >= __past);
 8005c30:	4284      	cmp	r4, r0
 8005c32:	d9fa      	bls.n	8005c2a <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0+0x1e>
	    __ret /= __scaling;
 8005c34:	fbb0 f0f6 	udiv	r0, r0, r6
	    while (__ret > __urange || __ret < __tmp);
	  }
	else
	  __ret = __uctype(__urng()) - __urngmin;

	return __ret + __param.a();
 8005c38:	682b      	ldr	r3, [r5, #0]
      }
 8005c3a:	4418      	add	r0, r3
 8005c3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	  __ret = __uctype(__urng()) - __urngmin;
 8005c3e:	f7ff ffc3 	bl	8005bc8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
 8005c42:	e7f9      	b.n	8005c38 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0+0x2c>

08005c44 <_ZN14GameScreenView6botHitEPA10_l>:

void GameScreenView::botHit(int32_t board[][10]) {
 8005c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c48:	ed2d 8b02 	vpush	{d8}
 8005c4c:	f5ad 5d9d 	sub.w	sp, sp, #5024	; 0x13a0
 8005c50:	b085      	sub	sp, #20
	    _M_capacity(__dnew);
	  }

	// Check for out_of_range and length_error exceptions.
	__try
	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 8005c52:	4a60      	ldr	r2, [pc, #384]	; (8005dd4 <_ZN14GameScreenView6botHitEPA10_l+0x190>)
#if __cplusplus < 201103L
	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
	: allocator_type(__a), _M_p(__dat) { }
#else
	_Alloc_hider(pointer __dat, const _Alloc& __a)
	: allocator_type(__a), _M_p(__dat) { }
 8005c54:	f60d 17ec 	addw	r7, sp, #2540	; 0x9ec
 8005c58:	4605      	mov	r5, r0
 8005c5a:	4689      	mov	r9, r1
 8005c5c:	f60d 10f4 	addw	r0, sp, #2548	; 0x9f4
 8005c60:	1fd1      	subs	r1, r2, #7
 8005c62:	6038      	str	r0, [r7, #0]
 8005c64:	f01b fd9b 	bl	802179e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
      _M_data(pointer __p)
      { _M_dataplus._M_p = __p; }

      void
      _M_length(size_type __length)
      { _M_string_length = __length; }
 8005c68:	2307      	movs	r3, #7
 8005c6a:	607b      	str	r3, [r7, #4]
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { __c1 = __c2; }
 8005c6c:	683b      	ldr	r3, [r7, #0]
 8005c6e:	2200      	movs	r2, #0
 8005c70:	71da      	strb	r2, [r3, #7]
    /** The type of the generated random value. */
    typedef unsigned int result_type;

    // constructors, destructors and member functions

    random_device() { _M_init("default"); }
 8005c72:	4639      	mov	r1, r7
 8005c74:	a80a      	add	r0, sp, #40	; 0x28
 8005c76:	f01b fd6f 	bl	8021758 <_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>

      /**
       *  @brief  Destroy the string instance.
       */
      ~basic_string()
      { _M_dispose(); }
 8005c7a:	4638      	mov	r0, r7
 8005c7c:	f01b fd7b 	bl	8021776 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
#endif
    }

    result_type
    operator()()
    { return this->_M_getval(); }
 8005c80:	a80a      	add	r0, sp, #40	; 0x28
 8005c82:	f01b fd6b 	bl	802175c <_ZNSt13random_device9_M_getvalEv>
      _M_x[0] = __detail::__mod<_UIntType,
 8005c86:	6038      	str	r0, [r7, #0]
	  __x *= __f;
 8005c88:	4853      	ldr	r0, [pc, #332]	; (8005dd8 <_ZN14GameScreenView6botHitEPA10_l+0x194>)
 8005c8a:	4639      	mov	r1, r7
      for (size_t __i = 1; __i < state_size; ++__i)
 8005c8c:	2201      	movs	r2, #1
	  _UIntType __x = _M_x[__i - 1];
 8005c8e:	680b      	ldr	r3, [r1, #0]
	  __x ^= __x >> (__w - 2);
 8005c90:	ea83 7393 	eor.w	r3, r3, r3, lsr #30
	  __x += __detail::__mod<_UIntType, __n>(__i);
 8005c94:	fb00 2303 	mla	r3, r0, r3, r2
      for (size_t __i = 1; __i < state_size; ++__i)
 8005c98:	3201      	adds	r2, #1
 8005c9a:	f5b2 7f1c 	cmp.w	r2, #624	; 0x270
	  _M_x[__i] = __detail::__mod<_UIntType,
 8005c9e:	f841 3f04 	str.w	r3, [r1, #4]!
      for (size_t __i = 1; __i < state_size; ++__i)
 8005ca2:	d1f4      	bne.n	8005c8e <_ZN14GameScreenView6botHitEPA10_l+0x4a>
	: _M_a(__a), _M_b(__b)
 8005ca4:	466b      	mov	r3, sp
      _M_p = state_size;
 8005ca6:	f8c7 29c0 	str.w	r2, [r7, #2496]	; 0x9c0
 8005caa:	2100      	movs	r1, #0
 8005cac:	2209      	movs	r2, #9
 8005cae:	e9c3 1200 	strd	r1, r2, [r3]
	std::random_device rd;
	std::mt19937 gen(rd());
	std::uniform_int_distribution<> disIndex(0, 9);
	int32_t x, y;
	int32_t index = 0;
 8005cb2:	f505 580a 	add.w	r8, r5, #8832	; 0x2280
        { return this->operator()(__urng, _M_param); }
 8005cb6:	ee08 3a10 	vmov	s16, r3
 8005cba:	f108 0810 	add.w	r8, r8, #16
 8005cbe:	f10d 0a10 	add.w	sl, sp, #16
	while (!checkWinner(board)) {
 8005cc2:	4649      	mov	r1, r9
 8005cc4:	4628      	mov	r0, r5
 8005cc6:	f7ff fe96 	bl	80059f6 <_ZN14GameScreenView11checkWinnerEPA10_l>
 8005cca:	2800      	cmp	r0, #0
 8005ccc:	d17b      	bne.n	8005dc6 <_ZN14GameScreenView6botHitEPA10_l+0x182>
        if (front == -1) return true;
 8005cce:	f8d5 3fb4 	ldr.w	r3, [r5, #4020]	; 0xfb4
 8005cd2:	1c5a      	adds	r2, r3, #1
 8005cd4:	d114      	bne.n	8005d00 <_ZN14GameScreenView6botHitEPA10_l+0xbc>
		if (myq.isEmpty()) {
			do {
				x = disIndex(gen);
				y = disIndex(gen);
			} while (board[x][y] == -1);
 8005cd6:	f04f 0b28 	mov.w	fp, #40	; 0x28
 8005cda:	ee18 1a10 	vmov	r1, s16
 8005cde:	4638      	mov	r0, r7
 8005ce0:	f7ff ff94 	bl	8005c0c <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0>
 8005ce4:	ee18 1a10 	vmov	r1, s16
 8005ce8:	4606      	mov	r6, r0
 8005cea:	4638      	mov	r0, r7
 8005cec:	f7ff ff8e 	bl	8005c0c <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_RKNS0_10param_typeE.isra.0>
 8005cf0:	fb0b 9206 	mla	r2, fp, r6, r9
 8005cf4:	4604      	mov	r4, r0
 8005cf6:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 8005cfa:	3201      	adds	r2, #1
 8005cfc:	d0ed      	beq.n	8005cda <_ZN14GameScreenView6botHitEPA10_l+0x96>
 8005cfe:	e013      	b.n	8005d28 <_ZN14GameScreenView6botHitEPA10_l+0xe4>
      operator=(typename conditional<
 8005d00:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
	first = __p.first;
 8005d04:	f8d2 6c94 	ldr.w	r6, [r2, #3220]	; 0xc94
	second = __p.second;
 8005d08:	f8d2 4c98 	ldr.w	r4, [r2, #3224]	; 0xc98
    std::pair<int32_t, int32_t> deQueue() {
    	std::pair<int32_t, int32_t> value;
        if (!isEmpty()) {
            value = myqueue[front]; if (front >= rear) {      //only one element in queue
 8005d0c:	f8d5 2fb8 	ldr.w	r2, [r5, #4024]	; 0xfb8
 8005d10:	4293      	cmp	r3, r2
                front = -1;
 8005d12:	bfa9      	itett	ge
 8005d14:	f04f 33ff 	movge.w	r3, #4294967295
                rear = -1;
            }
            else {
                front++;
 8005d18:	3301      	addlt	r3, #1
                front = -1;
 8005d1a:	f8c5 3fb4 	strge.w	r3, [r5, #4020]	; 0xfb4
                rear = -1;
 8005d1e:	f8c5 3fb8 	strge.w	r3, [r5, #4024]	; 0xfb8
                front++;
 8005d22:	bfb8      	it	lt
 8005d24:	f8c5 3fb4 	strlt.w	r3, [r5, #4020]	; 0xfb4
		else {
			std::pair<int, int> top = myq.deQueue();
			x = top.first;
			y = top.second;
		}
		if (board[x][y] > 0) {
 8005d28:	2328      	movs	r3, #40	; 0x28
 8005d2a:	fb03 9b06 	mla	fp, r3, r6, r9
 8005d2e:	f85b 2024 	ldr.w	r2, [fp, r4, lsl #2]
 8005d32:	2a00      	cmp	r2, #0
 8005d34:	dd3e      	ble.n	8005db4 <_ZN14GameScreenView6botHitEPA10_l+0x170>
			if (x + 1 < 10) {
 8005d36:	2e08      	cmp	r6, #8
 8005d38:	dc0d      	bgt.n	8005d56 <_ZN14GameScreenView6botHitEPA10_l+0x112>
				if (board[x + 1][y] > 0) {
 8005d3a:	eb0b 0284 	add.w	r2, fp, r4, lsl #2
 8005d3e:	6a92      	ldr	r2, [r2, #40]	; 0x28
 8005d40:	2a00      	cmp	r2, #0
 8005d42:	dd08      	ble.n	8005d56 <_ZN14GameScreenView6botHitEPA10_l+0x112>
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 8005d44:	aa02      	add	r2, sp, #8
					myq.enQueue(std::make_pair(x + 1, y));
 8005d46:	1c71      	adds	r1, r6, #1
 8005d48:	e9c2 1400 	strd	r1, r4, [r2]
 8005d4c:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 8005d50:	ca06      	ldmia	r2, {r1, r2}
 8005d52:	f7ff fe36 	bl	80059c2 <_ZN5Queue7enQueueESt4pairIllE>
				}
			}
			if (y + 1 < 10) {
 8005d56:	2c08      	cmp	r4, #8
 8005d58:	dc0c      	bgt.n	8005d74 <_ZN14GameScreenView6botHitEPA10_l+0x130>
				if (board[x][y + 1] > 0) {
 8005d5a:	1c62      	adds	r2, r4, #1
 8005d5c:	f85b 1022 	ldr.w	r1, [fp, r2, lsl #2]
 8005d60:	2900      	cmp	r1, #0
 8005d62:	dd07      	ble.n	8005d74 <_ZN14GameScreenView6botHitEPA10_l+0x130>
 8005d64:	e9ca 6200 	strd	r6, r2, [sl]
					myq.enQueue(std::make_pair(x, y + 1));
 8005d68:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 8005d6c:	e89a 0006 	ldmia.w	sl, {r1, r2}
 8005d70:	f7ff fe27 	bl	80059c2 <_ZN5Queue7enQueueESt4pairIllE>
				}
			}
			if (x - 1 >= 0) {
 8005d74:	2e00      	cmp	r6, #0
 8005d76:	dd0e      	ble.n	8005d96 <_ZN14GameScreenView6botHitEPA10_l+0x152>
				if (board[x - 1][y] > 0) {
 8005d78:	eb0b 0284 	add.w	r2, fp, r4, lsl #2
 8005d7c:	f852 2c28 	ldr.w	r2, [r2, #-40]
 8005d80:	2a00      	cmp	r2, #0
 8005d82:	dd08      	ble.n	8005d96 <_ZN14GameScreenView6botHitEPA10_l+0x152>
 8005d84:	aa06      	add	r2, sp, #24
					myq.enQueue(std::make_pair(x - 1, y));
 8005d86:	1e71      	subs	r1, r6, #1
 8005d88:	e9c2 1400 	strd	r1, r4, [r2]
 8005d8c:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 8005d90:	ca06      	ldmia	r2, {r1, r2}
 8005d92:	f7ff fe16 	bl	80059c2 <_ZN5Queue7enQueueESt4pairIllE>
				}
			}
			if (y - 1 >= 0) {
 8005d96:	2c00      	cmp	r4, #0
 8005d98:	dd0c      	ble.n	8005db4 <_ZN14GameScreenView6botHitEPA10_l+0x170>
				if (board[x][y - 1] > 0) {
 8005d9a:	1e61      	subs	r1, r4, #1
 8005d9c:	f85b 2021 	ldr.w	r2, [fp, r1, lsl #2]
 8005da0:	2a00      	cmp	r2, #0
 8005da2:	dd07      	ble.n	8005db4 <_ZN14GameScreenView6botHitEPA10_l+0x170>
 8005da4:	aa08      	add	r2, sp, #32
 8005da6:	e9c2 6100 	strd	r6, r1, [r2]
					myq.enQueue(std::make_pair(x, y - 1));
 8005daa:	f605 4094 	addw	r0, r5, #3220	; 0xc94
 8005dae:	ca06      	ldmia	r2, {r1, r2}
 8005db0:	f7ff fe07 	bl	80059c2 <_ZN5Queue7enQueueESt4pairIllE>
				}
			}
		}
		board[x][y] = -1;
 8005db4:	f04f 33ff 	mov.w	r3, #4294967295
 8005db8:	f84b 3024 	str.w	r3, [fp, r4, lsl #2]
		pair&&, __nonesuch&&>::type __p)
      noexcept(__and_<is_nothrow_move_assignable<_T1>,
		      is_nothrow_move_assignable<_T2>>::value)
      {
	first = std::forward<first_type>(__p.first);
	second = std::forward<second_type>(__p.second);
 8005dbc:	e9c8 6400 	strd	r6, r4, [r8]
		hits[index] = std::make_pair(x, y);
		index++;
 8005dc0:	f108 0808 	add.w	r8, r8, #8
	while (!checkWinner(board)) {
 8005dc4:	e77d      	b.n	8005cc2 <_ZN14GameScreenView6botHitEPA10_l+0x7e>
	}

}
 8005dc6:	f50d 5d9d 	add.w	sp, sp, #5024	; 0x13a0
 8005dca:	b005      	add	sp, #20
 8005dcc:	ecbd 8b02 	vpop	{d8}
 8005dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005dd4:	080245f3 	.word	0x080245f3
 8005dd8:	6c078965 	.word	0x6c078965

08005ddc <_ZN14GameScreenView15handleTickEventEv>:
void GameScreenView::handleTickEvent() {
 8005ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	tickCount++;
 8005de0:	f500 5600 	add.w	r6, r0, #8192	; 0x2000
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 8005de4:	f8df a324 	ldr.w	sl, [pc, #804]	; 800610c <_ZN14GameScreenView15handleTickEventEv+0x330>
	tickCount++;
 8005de8:	f8d6 3288 	ldr.w	r3, [r6, #648]	; 0x288
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 8005dec:	f8df 9320 	ldr.w	r9, [pc, #800]	; 8006110 <_ZN14GameScreenView15handleTickEventEv+0x334>
void GameScreenView::handleTickEvent() {
 8005df0:	b089      	sub	sp, #36	; 0x24
	tickCount++;
 8005df2:	3301      	adds	r3, #1
void GameScreenView::handleTickEvent() {
 8005df4:	4604      	mov	r4, r0
	tickCount++;
 8005df6:	f8c6 3288 	str.w	r3, [r6, #648]	; 0x288
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 8005dfa:	f8da 0000 	ldr.w	r0, [sl]
	uint8_t res = 0;
 8005dfe:	f04f 0b00 	mov.w	fp, #0
 8005e02:	f88d b01b 	strb.w	fp, [sp, #27]
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 8005e06:	f004 fc4c 	bl	800a6a2 <osMessageQueueGetCount>
 8005e0a:	4680      	mov	r8, r0
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 8005e0c:	f8d9 0000 	ldr.w	r0, [r9]
 8005e10:	f004 fc47 	bl	800a6a2 <osMessageQueueGetCount>
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8005e14:	4bb1      	ldr	r3, [pc, #708]	; (80060dc <_ZN14GameScreenView15handleTickEventEv+0x300>)
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 8005e16:	9002      	str	r0, [sp, #8]
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8005e18:	6818      	ldr	r0, [r3, #0]
 8005e1a:	f004 fc42 	bl	800a6a2 <osMessageQueueGetCount>
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8005e1e:	4bb0      	ldr	r3, [pc, #704]	; (80060e0 <_ZN14GameScreenView15handleTickEventEv+0x304>)
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8005e20:	9003      	str	r0, [sp, #12]
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8005e22:	6818      	ldr	r0, [r3, #0]
 8005e24:	f004 fc3d 	bl	800a6a2 <osMessageQueueGetCount>
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 8005e28:	4bae      	ldr	r3, [pc, #696]	; (80060e4 <_ZN14GameScreenView15handleTickEventEv+0x308>)
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8005e2a:	9004      	str	r0, [sp, #16]
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 8005e2c:	6818      	ldr	r0, [r3, #0]
 8005e2e:	f004 fc38 	bl	800a6a2 <osMessageQueueGetCount>
	uint32_t count6 = osMessageQueueGetCount(Queue6Handle);
 8005e32:	4bad      	ldr	r3, [pc, #692]	; (80060e8 <_ZN14GameScreenView15handleTickEventEv+0x30c>)
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 8005e34:	9005      	str	r0, [sp, #20]
	int selected = gameBoard.getSelected();
 8005e36:	f204 77dc 	addw	r7, r4, #2012	; 0x7dc
	uint32_t count6 = osMessageQueueGetCount(Queue6Handle);
 8005e3a:	6818      	ldr	r0, [r3, #0]
 8005e3c:	f004 fc31 	bl	800a6a2 <osMessageQueueGetCount>
	int selected = gameBoard.getSelected();
 8005e40:	4638      	mov	r0, r7
 8005e42:	f001 f9d2 	bl	80071ea <_ZN5Board11getSelectedEv>
	if (gameMode == 0) {
 8005e46:	f894 37d0 	ldrb.w	r3, [r4, #2000]	; 0x7d0
	int selected = gameBoard.getSelected();
 8005e4a:	4605      	mov	r5, r0
	if (gameMode == 0) {
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	f040 8269 	bne.w	8006324 <_ZN14GameScreenView15handleTickEventEv+0x548>
		switch (selected)
 8005e52:	1e83      	subs	r3, r0, #2
 8005e54:	2b03      	cmp	r3, #3
 8005e56:	f200 80fd 	bhi.w	8006054 <_ZN14GameScreenView15handleTickEventEv+0x278>
 8005e5a:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005e5e:	0004      	.short	0x0004
 8005e60:	00df00d1 	.word	0x00df00d1
 8005e64:	00ed      	.short	0x00ed
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e66:	4ba1      	ldr	r3, [pc, #644]	; (80060ec <_ZN14GameScreenView15handleTickEventEv+0x310>)
 8005e68:	681b      	ldr	r3, [r3, #0]
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_DESTROYER).getText());
 8005e6a:	f204 7b6c 	addw	fp, r4, #1900	; 0x76c
 8005e6e:	b92b      	cbnz	r3, 8005e7c <_ZN14GameScreenView15handleTickEventEv+0xa0>
 8005e70:	4b9f      	ldr	r3, [pc, #636]	; (80060f0 <_ZN14GameScreenView15handleTickEventEv+0x314>)
 8005e72:	4aa0      	ldr	r2, [pc, #640]	; (80060f4 <_ZN14GameScreenView15handleTickEventEv+0x318>)
 8005e74:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e76:	48a0      	ldr	r0, [pc, #640]	; (80060f8 <_ZN14GameScreenView15handleTickEventEv+0x31c>)
 8005e78:	f01b fcc8 	bl	802180c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005e7c:	4b9f      	ldr	r3, [pc, #636]	; (80060fc <_ZN14GameScreenView15handleTickEventEv+0x320>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e7e:	881b      	ldrh	r3, [r3, #0]
 8005e80:	2b12      	cmp	r3, #18
 8005e82:	d803      	bhi.n	8005e8c <_ZN14GameScreenView15handleTickEventEv+0xb0>
 8005e84:	4b9e      	ldr	r3, [pc, #632]	; (8006100 <_ZN14GameScreenView15handleTickEventEv+0x324>)
 8005e86:	4a9b      	ldr	r2, [pc, #620]	; (80060f4 <_ZN14GameScreenView15handleTickEventEv+0x318>)
 8005e88:	2161      	movs	r1, #97	; 0x61
 8005e8a:	e7f4      	b.n	8005e76 <_ZN14GameScreenView15handleTickEventEv+0x9a>
        return texts->getText(typedTextId);
 8005e8c:	2112      	movs	r1, #18
 8005e8e:	4b9d      	ldr	r3, [pc, #628]	; (8006104 <_ZN14GameScreenView15handleTickEventEv+0x328>)
 8005e90:	6818      	ldr	r0, [r3, #0]
 8005e92:	f7ff fbf9 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_AIRCRAFT_CARRIER).getText());
 8005e96:	4a9c      	ldr	r2, [pc, #624]	; (8006108 <_ZN14GameScreenView15handleTickEventEv+0x32c>)
 8005e98:	4603      	mov	r3, r0
 8005e9a:	2132      	movs	r1, #50	; 0x32
 8005e9c:	4658      	mov	r0, fp
 8005e9e:	f00d fef3 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
		if (count1 > 0) {
 8005ea2:	f1b8 0f00 	cmp.w	r8, #0
 8005ea6:	f040 80d9 	bne.w	800605c <_ZN14GameScreenView15handleTickEventEv+0x280>
			if (count2 > 0) {
 8005eaa:	9b02      	ldr	r3, [sp, #8]
 8005eac:	b323      	cbz	r3, 8005ef8 <_ZN14GameScreenView15handleTickEventEv+0x11c>
				osMessageQueueGet(Queue2Handle, &res, NULL, osWaitForever);
 8005eae:	f04f 33ff 	mov.w	r3, #4294967295
 8005eb2:	f10d 011b 	add.w	r1, sp, #27
 8005eb6:	f8d9 0000 	ldr.w	r0, [r9]
 8005eba:	2200      	movs	r2, #0
 8005ebc:	f004 fbc2 	bl	800a644 <osMessageQueueGet>
				if (!is_vertical) {
 8005ec0:	f894 1fbe 	ldrb.w	r1, [r4, #4030]	; 0xfbe
 8005ec4:	f89d 301b 	ldrb.w	r3, [sp, #27]
 8005ec8:	2900      	cmp	r1, #0
 8005eca:	f040 81da 	bne.w	8006282 <_ZN14GameScreenView15handleTickEventEv+0x4a6>
					if (res == 'R') {
 8005ece:	2b52      	cmp	r3, #82	; 0x52
 8005ed0:	d112      	bne.n	8005ef8 <_ZN14GameScreenView15handleTickEventEv+0x11c>
						x += 1;
 8005ed2:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
						currentBoat->setX(getXFromIndex(x));
 8005ed6:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
						x += 1;
 8005eda:	3301      	adds	r3, #1
						if (x > MAX_BOARD - selected + 1) {
 8005edc:	f1c5 020a 	rsb	r2, r5, #10
						x += 1;
 8005ee0:	4293      	cmp	r3, r2
 8005ee2:	bfd8      	it	le
 8005ee4:	4619      	movle	r1, r3
 8005ee6:	f8c4 17d4 	str.w	r1, [r4, #2004]	; 0x7d4
	return (5 + x * WIDTH_SQUARE);
 8005eea:	2317      	movs	r3, #23
 8005eec:	4359      	muls	r1, r3
						currentBoatR->setX(getXFromIndex(x));
 8005eee:	6803      	ldr	r3, [r0, #0]
	return (5 + x * WIDTH_SQUARE);
 8005ef0:	3105      	adds	r1, #5
						currentBoatR->setX(getXFromIndex(x));
 8005ef2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ef4:	b209      	sxth	r1, r1
 8005ef6:	4798      	blx	r3
			if (count3 > 0) {
 8005ef8:	9b03      	ldr	r3, [sp, #12]
 8005efa:	b31b      	cbz	r3, 8005f44 <_ZN14GameScreenView15handleTickEventEv+0x168>
				osMessageQueueGet(Queue3Handle, &res, NULL, osWaitForever);
 8005efc:	4877      	ldr	r0, [pc, #476]	; (80060dc <_ZN14GameScreenView15handleTickEventEv+0x300>)
 8005efe:	f04f 33ff 	mov.w	r3, #4294967295
 8005f02:	2200      	movs	r2, #0
 8005f04:	6800      	ldr	r0, [r0, #0]
 8005f06:	f10d 011b 	add.w	r1, sp, #27
 8005f0a:	f004 fb9b 	bl	800a644 <osMessageQueueGet>
				if (!is_vertical) {
 8005f0e:	f894 2fbe 	ldrb.w	r2, [r4, #4030]	; 0xfbe
 8005f12:	f89d 301b 	ldrb.w	r3, [sp, #27]
 8005f16:	2a00      	cmp	r2, #0
 8005f18:	f040 81c3 	bne.w	80062a2 <_ZN14GameScreenView15handleTickEventEv+0x4c6>
					if (res == 'U') {
 8005f1c:	2b55      	cmp	r3, #85	; 0x55
 8005f1e:	d111      	bne.n	8005f44 <_ZN14GameScreenView15handleTickEventEv+0x168>
						y -= 1;
 8005f20:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
						currentBoat->setY(getYFromIndex(y));
 8005f24:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
						if (y < MIN_BOARD) {
 8005f28:	3b01      	subs	r3, #1
							y = MAX_BOARD;
 8005f2a:	bf48      	it	mi
 8005f2c:	2309      	movmi	r3, #9
 8005f2e:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
	return (83 + y * WIDTH_SQUARE);
 8005f32:	f8d4 17d8 	ldr.w	r1, [r4, #2008]	; 0x7d8
 8005f36:	2317      	movs	r3, #23
 8005f38:	4359      	muls	r1, r3
						currentBoatR->setY(getYFromIndex(y));
 8005f3a:	6803      	ldr	r3, [r0, #0]
	return (83 + y * WIDTH_SQUARE);
 8005f3c:	3153      	adds	r1, #83	; 0x53
						currentBoatR->setY(getYFromIndex(y));
 8005f3e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005f40:	b209      	sxth	r1, r1
 8005f42:	4798      	blx	r3
			if (count4 > 0) {
 8005f44:	9b04      	ldr	r3, [sp, #16]
 8005f46:	b313      	cbz	r3, 8005f8e <_ZN14GameScreenView15handleTickEventEv+0x1b2>
				osMessageQueueGet(Queue4Handle, &res, NULL, osWaitForever);
 8005f48:	4865      	ldr	r0, [pc, #404]	; (80060e0 <_ZN14GameScreenView15handleTickEventEv+0x304>)
 8005f4a:	f04f 33ff 	mov.w	r3, #4294967295
 8005f4e:	f10d 011b 	add.w	r1, sp, #27
 8005f52:	6800      	ldr	r0, [r0, #0]
 8005f54:	2200      	movs	r2, #0
 8005f56:	f004 fb75 	bl	800a644 <osMessageQueueGet>
				if (!is_vertical) {
 8005f5a:	f894 1fbe 	ldrb.w	r1, [r4, #4030]	; 0xfbe
 8005f5e:	f89d 301b 	ldrb.w	r3, [sp, #27]
 8005f62:	2900      	cmp	r1, #0
 8005f64:	f040 81ab 	bne.w	80062be <_ZN14GameScreenView15handleTickEventEv+0x4e2>
					if (res == 'D') {
 8005f68:	2b44      	cmp	r3, #68	; 0x44
 8005f6a:	d110      	bne.n	8005f8e <_ZN14GameScreenView15handleTickEventEv+0x1b2>
						y += 1;
 8005f6c:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
						currentBoat->setY(getYFromIndex(y));
 8005f70:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
						y += 1;
 8005f74:	3301      	adds	r3, #1
 8005f76:	2b09      	cmp	r3, #9
 8005f78:	bfd8      	it	le
 8005f7a:	4619      	movle	r1, r3
 8005f7c:	f8c4 17d8 	str.w	r1, [r4, #2008]	; 0x7d8
	return (83 + y * WIDTH_SQUARE);
 8005f80:	2317      	movs	r3, #23
 8005f82:	4359      	muls	r1, r3
						currentBoatR->setY(getYFromIndex(y));
 8005f84:	6803      	ldr	r3, [r0, #0]
	return (83 + y * WIDTH_SQUARE);
 8005f86:	3153      	adds	r1, #83	; 0x53
						currentBoatR->setY(getYFromIndex(y));
 8005f88:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005f8a:	b209      	sxth	r1, r1
 8005f8c:	4798      	blx	r3
			if (count5 > 0) {
 8005f8e:	9b05      	ldr	r3, [sp, #20]
 8005f90:	2b00      	cmp	r3, #0
 8005f92:	f000 8164 	beq.w	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
				osMessageQueueGet(Queue5Handle, &res, NULL, osWaitForever);
 8005f96:	4853      	ldr	r0, [pc, #332]	; (80060e4 <_ZN14GameScreenView15handleTickEventEv+0x308>)
 8005f98:	f04f 33ff 	mov.w	r3, #4294967295
 8005f9c:	2200      	movs	r2, #0
 8005f9e:	6800      	ldr	r0, [r0, #0]
 8005fa0:	f10d 011b 	add.w	r1, sp, #27
 8005fa4:	f004 fb4e 	bl	800a644 <osMessageQueueGet>
				if (!is_vertical) {
 8005fa8:	f894 2fbe 	ldrb.w	r2, [r4, #4030]	; 0xfbe
 8005fac:	f89d 301b 	ldrb.w	r3, [sp, #27]
 8005fb0:	2a00      	cmp	r2, #0
 8005fb2:	f040 8196 	bne.w	80062e2 <_ZN14GameScreenView15handleTickEventEv+0x506>
					if (res == 'A') {
 8005fb6:	2b41      	cmp	r3, #65	; 0x41
 8005fb8:	f040 8151 	bne.w	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
						if (checkOutOfDesk(x, y, selected - 1)) {
 8005fbc:	1e6b      	subs	r3, r5, #1
 8005fbe:	f8d4 27d8 	ldr.w	r2, [r4, #2008]	; 0x7d8
 8005fc2:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 8005fc6:	b21b      	sxth	r3, r3
 8005fc8:	4620      	mov	r0, r4
 8005fca:	f7ff fd69 	bl	8005aa0 <_ZN14GameScreenView14checkOutOfDeskElls>
 8005fce:	2800      	cmp	r0, #0
 8005fd0:	f000 8145 	beq.w	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
							int16_t x = currentBoat->getX();
 8005fd4:	f8d4 3fc0 	ldr.w	r3, [r4, #4032]	; 0xfc0
							currentBoatR->setXY(x, y);
 8005fd8:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
 8005fdc:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8005fe0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8005fe4:	f7fc f9d2 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
							currentBoat->setXY(OUT_OF_BOARD_X, OUT_OF_BOARD_Y);
 8005fe8:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
 8005fec:	f06f 0243 	mvn.w	r2, #67	; 0x43
 8005ff0:	f06f 011f 	mvn.w	r1, #31
 8005ff4:	f7fc f9ca 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
							is_vertical = true;
 8005ff8:	2301      	movs	r3, #1
							is_vertical = false;
 8005ffa:	f884 3fbe 	strb.w	r3, [r4, #4030]	; 0xfbe
 8005ffe:	e12e      	b.n	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006000:	4b3a      	ldr	r3, [pc, #232]	; (80060ec <_ZN14GameScreenView15handleTickEventEv+0x310>)
 8006002:	681b      	ldr	r3, [r3, #0]
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_CRUISER).getText());
 8006004:	f204 7b6c 	addw	fp, r4, #1900	; 0x76c
 8006008:	2b00      	cmp	r3, #0
 800600a:	f43f af31 	beq.w	8005e70 <_ZN14GameScreenView15handleTickEventEv+0x94>
        return typedTextId < numberOfTypedTexts;
 800600e:	4b3b      	ldr	r3, [pc, #236]	; (80060fc <_ZN14GameScreenView15handleTickEventEv+0x320>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006010:	881b      	ldrh	r3, [r3, #0]
 8006012:	2b11      	cmp	r3, #17
 8006014:	f67f af36 	bls.w	8005e84 <_ZN14GameScreenView15handleTickEventEv+0xa8>
        return texts->getText(typedTextId);
 8006018:	2111      	movs	r1, #17
 800601a:	e738      	b.n	8005e8e <_ZN14GameScreenView15handleTickEventEv+0xb2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800601c:	4b33      	ldr	r3, [pc, #204]	; (80060ec <_ZN14GameScreenView15handleTickEventEv+0x310>)
 800601e:	681b      	ldr	r3, [r3, #0]
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_BATTLESHIP).getText());
 8006020:	f204 7b6c 	addw	fp, r4, #1900	; 0x76c
 8006024:	2b00      	cmp	r3, #0
 8006026:	f43f af23 	beq.w	8005e70 <_ZN14GameScreenView15handleTickEventEv+0x94>
        return typedTextId < numberOfTypedTexts;
 800602a:	4b34      	ldr	r3, [pc, #208]	; (80060fc <_ZN14GameScreenView15handleTickEventEv+0x320>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800602c:	881b      	ldrh	r3, [r3, #0]
 800602e:	2b10      	cmp	r3, #16
 8006030:	f67f af28 	bls.w	8005e84 <_ZN14GameScreenView15handleTickEventEv+0xa8>
        return texts->getText(typedTextId);
 8006034:	2110      	movs	r1, #16
 8006036:	e72a      	b.n	8005e8e <_ZN14GameScreenView15handleTickEventEv+0xb2>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006038:	4b2c      	ldr	r3, [pc, #176]	; (80060ec <_ZN14GameScreenView15handleTickEventEv+0x310>)
 800603a:	681b      	ldr	r3, [r3, #0]
			Unicode::snprintf(textShipBuffer, TEXTSHIP_SIZE, "%s", touchgfx::TypedText(T_AIRCRAFT_CARRIER).getText());
 800603c:	f204 7b6c 	addw	fp, r4, #1900	; 0x76c
 8006040:	2b00      	cmp	r3, #0
 8006042:	f43f af15 	beq.w	8005e70 <_ZN14GameScreenView15handleTickEventEv+0x94>
        return typedTextId < numberOfTypedTexts;
 8006046:	4b2d      	ldr	r3, [pc, #180]	; (80060fc <_ZN14GameScreenView15handleTickEventEv+0x320>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006048:	881b      	ldrh	r3, [r3, #0]
 800604a:	2b0f      	cmp	r3, #15
 800604c:	f67f af1a 	bls.w	8005e84 <_ZN14GameScreenView15handleTickEventEv+0xa8>
        return texts->getText(typedTextId);
 8006050:	210f      	movs	r1, #15
 8006052:	e71c      	b.n	8005e8e <_ZN14GameScreenView15handleTickEventEv+0xb2>
		if (count1 > 0) {
 8006054:	f1b8 0f00 	cmp.w	r8, #0
 8006058:	f000 80fe 	beq.w	8006258 <_ZN14GameScreenView15handleTickEventEv+0x47c>
			osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 800605c:	f04f 33ff 	mov.w	r3, #4294967295
 8006060:	f8da 0000 	ldr.w	r0, [sl]
 8006064:	2200      	movs	r2, #0
 8006066:	f10d 011b 	add.w	r1, sp, #27
 800606a:	f004 faeb 	bl	800a644 <osMessageQueueGet>
			if (res == 'S') {
 800606e:	f89d 301b 	ldrb.w	r3, [sp, #27]
 8006072:	2b53      	cmp	r3, #83	; 0x53
 8006074:	d16a      	bne.n	800614c <_ZN14GameScreenView15handleTickEventEv+0x370>
				if (checkAvailable(y, x, selected)) {
 8006076:	f8d4 27d4 	ldr.w	r2, [r4, #2004]	; 0x7d4
 800607a:	f8d4 17d8 	ldr.w	r1, [r4, #2008]	; 0x7d8
 800607e:	b22b      	sxth	r3, r5
 8006080:	4620      	mov	r0, r4
 8006082:	f7ff fd23 	bl	8005acc <_ZN14GameScreenView14checkAvailableElls>
 8006086:	2800      	cmp	r0, #0
 8006088:	d060      	beq.n	800614c <_ZN14GameScreenView15handleTickEventEv+0x370>
					if (is_vertical) {
 800608a:	f894 3fbe 	ldrb.w	r3, [r4, #4030]	; 0xfbe
 800608e:	b193      	cbz	r3, 80060b6 <_ZN14GameScreenView15handleTickEventEv+0x2da>
						for (int i = 0; i <= selected - 1; i++) {
 8006090:	2200      	movs	r2, #0
    	player1Desk[i][j] = status;
 8006092:	200a      	movs	r0, #10
 8006094:	42aa      	cmp	r2, r5
 8006096:	da3d      	bge.n	8006114 <_ZN14GameScreenView15handleTickEventEv+0x338>
        model->setPlayer1Desk(i, j, status);
 8006098:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800609a:	6899      	ldr	r1, [r3, #8]
 800609c:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
 80060a0:	eb02 0c03 	add.w	ip, r2, r3
 80060a4:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
 80060a8:	fb00 330c 	mla	r3, r0, ip, r3
 80060ac:	33ca      	adds	r3, #202	; 0xca
 80060ae:	3201      	adds	r2, #1
 80060b0:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 80060b4:	e7ee      	b.n	8006094 <_ZN14GameScreenView15handleTickEventEv+0x2b8>
 80060b6:	f04f 0c0a 	mov.w	ip, #10
						for (int i = 0; i <= selected - 1; i++) {
 80060ba:	42ab      	cmp	r3, r5
 80060bc:	da2a      	bge.n	8006114 <_ZN14GameScreenView15handleTickEventEv+0x338>
 80060be:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80060c0:	f8d4 07d8 	ldr.w	r0, [r4, #2008]	; 0x7d8
 80060c4:	6891      	ldr	r1, [r2, #8]
 80060c6:	f8d4 27d4 	ldr.w	r2, [r4, #2004]	; 0x7d4
 80060ca:	fb0c 2200 	mla	r2, ip, r0, r2
 80060ce:	441a      	add	r2, r3
 80060d0:	32ca      	adds	r2, #202	; 0xca
 80060d2:	3301      	adds	r3, #1
 80060d4:	f841 5022 	str.w	r5, [r1, r2, lsl #2]
 80060d8:	e7ef      	b.n	80060ba <_ZN14GameScreenView15handleTickEventEv+0x2de>
 80060da:	bf00      	nop
 80060dc:	20003e44 	.word	0x20003e44
 80060e0:	20003e48 	.word	0x20003e48
 80060e4:	20003e4c 	.word	0x20003e4c
 80060e8:	20003e50 	.word	0x20003e50
 80060ec:	20015024 	.word	0x20015024
 80060f0:	0802345c 	.word	0x0802345c
 80060f4:	080235c2 	.word	0x080235c2
 80060f8:	080234d9 	.word	0x080234d9
 80060fc:	20015028 	.word	0x20015028
 8006100:	08023584 	.word	0x08023584
 8006104:	20015030 	.word	0x20015030
 8006108:	080235fa 	.word	0x080235fa
 800610c:	20003e3c 	.word	0x20003e3c
 8006110:	20003e40 	.word	0x20003e40
					if (selected == 2) {
 8006114:	2d02      	cmp	r5, #2
 8006116:	d139      	bne.n	800618c <_ZN14GameScreenView15handleTickEventEv+0x3b0>
						x = 0;
 8006118:	2300      	movs	r3, #0
						boat3.setXY(getXFromIndex(x), getYFromIndex(y));
 800611a:	f504 7577 	add.w	r5, r4, #988	; 0x3dc
						x = 0;
 800611e:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
						y = 0;
 8006122:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
						boat3.setXY(getXFromIndex(x), getYFromIndex(y));
 8006126:	2105      	movs	r1, #5
 8006128:	2253      	movs	r2, #83	; 0x53
 800612a:	4628      	mov	r0, r5
 800612c:	f7fc f92e 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
						currentBoatR = (touchgfx::Container*)&boat3_r;
 8006130:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
						currentBoat = (touchgfx::Container*)&boat3;
 8006134:	f8c4 5fc0 	str.w	r5, [r4, #4032]	; 0xfc0
						currentBoatR = (touchgfx::Container*)&boat3_r;
 8006138:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
						gameBoard.setSelected(selected + 1);
 800613c:	2103      	movs	r1, #3
						gameBoard.setSelected(selected + 1);
 800613e:	4638      	mov	r0, r7
 8006140:	f001 f850 	bl	80071e4 <_ZN5Board11setSelectedEl>
					selected = gameBoard.getSelected();
 8006144:	4638      	mov	r0, r7
 8006146:	f001 f850 	bl	80071ea <_ZN5Board11getSelectedEv>
 800614a:	4605      	mov	r5, r0
			if (selected <= 5) {
 800614c:	2d05      	cmp	r5, #5
 800614e:	f300 8086 	bgt.w	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
				if (!is_vertical) {
 8006152:	f894 2fbe 	ldrb.w	r2, [r4, #4030]	; 0xfbe
					if (res == 'L') {
 8006156:	f89d 301b 	ldrb.w	r3, [sp, #27]
				if (!is_vertical) {
 800615a:	2a00      	cmp	r2, #0
 800615c:	d16f      	bne.n	800623e <_ZN14GameScreenView15handleTickEventEv+0x462>
					if (res == 'L') {
 800615e:	2b4c      	cmp	r3, #76	; 0x4c
 8006160:	f47f aea3 	bne.w	8005eaa <_ZN14GameScreenView15handleTickEventEv+0xce>
						x -= 1;
 8006164:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
						currentBoat->setX(getXFromIndex(x));
 8006168:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
						if (x < MIN_BOARD) {
 800616c:	3b01      	subs	r3, #1
							x = MAX_BOARD - selected + 1;
 800616e:	bf48      	it	mi
 8006170:	f1c5 030a 	rsbmi	r3, r5, #10
 8006174:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
	return (5 + x * WIDTH_SQUARE);
 8006178:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 800617c:	2317      	movs	r3, #23
 800617e:	4359      	muls	r1, r3
						currentBoatR->setX(getXFromIndex(x));
 8006180:	6803      	ldr	r3, [r0, #0]
	return (5 + x * WIDTH_SQUARE);
 8006182:	3105      	adds	r1, #5
						currentBoatR->setX(getXFromIndex(x));
 8006184:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006186:	b209      	sxth	r1, r1
 8006188:	4798      	blx	r3
 800618a:	e68e      	b.n	8005eaa <_ZN14GameScreenView15handleTickEventEv+0xce>
					} else if (selected == 3) {
 800618c:	2d03      	cmp	r5, #3
 800618e:	d113      	bne.n	80061b8 <_ZN14GameScreenView15handleTickEventEv+0x3dc>
						x = 0;
 8006190:	2300      	movs	r3, #0
						boat4.setXY(getXFromIndex(x), getYFromIndex(y));
 8006192:	f204 458c 	addw	r5, r4, #1164	; 0x48c
						x = 0;
 8006196:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
						y = 0;
 800619a:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
						boat4.setXY(getXFromIndex(x), getYFromIndex(y));
 800619e:	2105      	movs	r1, #5
 80061a0:	2253      	movs	r2, #83	; 0x53
 80061a2:	4628      	mov	r0, r5
 80061a4:	f7fc f8f2 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
						currentBoatR = (touchgfx::Container*)&boat4_r;
 80061a8:	f504 73ba 	add.w	r3, r4, #372	; 0x174
						currentBoat = (touchgfx::Container*)&boat4;
 80061ac:	f8c4 5fc0 	str.w	r5, [r4, #4032]	; 0xfc0
						currentBoatR = (touchgfx::Container*)&boat4_r;
 80061b0:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
						gameBoard.setSelected(selected + 1);
 80061b4:	2104      	movs	r1, #4
 80061b6:	e7c2      	b.n	800613e <_ZN14GameScreenView15handleTickEventEv+0x362>
					} else if (selected == 4) {
 80061b8:	2d04      	cmp	r5, #4
 80061ba:	d113      	bne.n	80061e4 <_ZN14GameScreenView15handleTickEventEv+0x408>
						x = 0;
 80061bc:	2300      	movs	r3, #0
						boat5.setXY(getXFromIndex(x), getYFromIndex(y));
 80061be:	f504 65ad 	add.w	r5, r4, #1384	; 0x568
						x = 0;
 80061c2:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
						y = 0;
 80061c6:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
						boat5.setXY(getXFromIndex(x), getYFromIndex(y));
 80061ca:	2105      	movs	r1, #5
 80061cc:	2253      	movs	r2, #83	; 0x53
 80061ce:	4628      	mov	r0, r5
 80061d0:	f7fc f8dc 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
						currentBoatR = (touchgfx::Container*)&boat5_r;
 80061d4:	f504 7314 	add.w	r3, r4, #592	; 0x250
						currentBoat = (touchgfx::Container*)&boat5;
 80061d8:	f8c4 5fc0 	str.w	r5, [r4, #4032]	; 0xfc0
						currentBoatR = (touchgfx::Container*)&boat5_r;
 80061dc:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
						gameBoard.setSelected(selected + 1);
 80061e0:	2105      	movs	r1, #5
 80061e2:	e7ac      	b.n	800613e <_ZN14GameScreenView15handleTickEventEv+0x362>
					} else if (selected == 5) {
 80061e4:	2d05      	cmp	r5, #5
 80061e6:	d1ad      	bne.n	8006144 <_ZN14GameScreenView15handleTickEventEv+0x368>
						presenter->getDesk(desk);
 80061e8:	f604 75c8 	addw	r5, r4, #4040	; 0xfc8
 80061ec:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80061ee:	4629      	mov	r1, r5
 80061f0:	f7ff fbab 	bl	800594a <_ZN19GameScreenPresenter7getDeskEPA10_l>
						gameBoard.setSelected(selected + 1);
 80061f4:	2106      	movs	r1, #6
 80061f6:	4638      	mov	r0, r7
 80061f8:	f000 fff4 	bl	80071e4 <_ZN5Board11setSelectedEl>
						if(!isMultiPlayer){
 80061fc:	f896 35b4 	ldrb.w	r3, [r6, #1460]	; 0x5b4
 8006200:	b9c3      	cbnz	r3, 8006234 <_ZN14GameScreenView15handleTickEventEv+0x458>
							botHit(desk);
 8006202:	4629      	mov	r1, r5
 8006204:	4620      	mov	r0, r4
 8006206:	f7ff fd1d 	bl	8005c44 <_ZN14GameScreenView6botHitEPA10_l>
		model->setHits(bot);
 800620a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800620c:	689b      	ldr	r3, [r3, #8]
 800620e:	f504 520a 	add.w	r2, r4, #8832	; 0x2280
 8006212:	3214      	adds	r2, #20
 8006214:	f503 7148 	add.w	r1, r3, #800	; 0x320
	first = __p.first;
 8006218:	f852 0c04 	ldr.w	r0, [r2, #-4]
 800621c:	6058      	str	r0, [r3, #4]
	second = __p.second;
 800621e:	f852 0b08 	ldr.w	r0, [r2], #8
 8006222:	f843 0f08 	str.w	r0, [r3, #8]!
		for (int32_t i = 0; i < 100; i++) {
 8006226:	4299      	cmp	r1, r3
 8006228:	d1f6      	bne.n	8006218 <_ZN14GameScreenView15handleTickEventEv+0x43c>
    virtual ~GameScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800622a:	f00a fc33 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
								application().gotoOpponentScreenScreenSlideTransitionEast();
 800622e:	f7fc fdf1 	bl	8002e14 <_ZN23FrontendApplicationBase43gotoOpponentScreenScreenSlideTransitionEastEv>
 8006232:	e787      	b.n	8006144 <_ZN14GameScreenView15handleTickEventEv+0x368>
							if(isGoFirst)
 8006234:	f896 35b5 	ldrb.w	r3, [r6, #1461]	; 0x5b5
 8006238:	2b00      	cmp	r3, #0
 800623a:	d083      	beq.n	8006144 <_ZN14GameScreenView15handleTickEventEv+0x368>
 800623c:	e7f5      	b.n	800622a <_ZN14GameScreenView15handleTickEventEv+0x44e>
					if (res == 'L') {
 800623e:	2b4c      	cmp	r3, #76	; 0x4c
 8006240:	f47f ae33 	bne.w	8005eaa <_ZN14GameScreenView15handleTickEventEv+0xce>
						x -= 1;
 8006244:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
						currentBoatR->setX(getXFromIndex(x));
 8006248:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
						if (x < MIN_BOARD) {
 800624c:	3b01      	subs	r3, #1
							x = MAX_BOARD;
 800624e:	bf48      	it	mi
 8006250:	2309      	movmi	r3, #9
 8006252:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
						currentBoatR->setX(getXFromIndex(x));
 8006256:	e78f      	b.n	8006178 <_ZN14GameScreenView15handleTickEventEv+0x39c>
		if(selected <= 5){
 8006258:	2805      	cmp	r0, #5
 800625a:	f77f ae26 	ble.w	8005eaa <_ZN14GameScreenView15handleTickEventEv+0xce>
	if(currentCount > 0 && tickCount > currentCount + 15){
 800625e:	f8d6 328c 	ldr.w	r3, [r6, #652]	; 0x28c
 8006262:	b143      	cbz	r3, 8006276 <_ZN14GameScreenView15handleTickEventEv+0x49a>
 8006264:	f8d6 2288 	ldr.w	r2, [r6, #648]	; 0x288
 8006268:	330f      	adds	r3, #15
 800626a:	429a      	cmp	r2, r3
 800626c:	d903      	bls.n	8006276 <_ZN14GameScreenView15handleTickEventEv+0x49a>
 800626e:	f00a fc11 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoOpponentScreenScreenSlideTransitionEast();
 8006272:	f7fc fdcf 	bl	8002e14 <_ZN23FrontendApplicationBase43gotoOpponentScreenScreenSlideTransitionEastEv>
     *
     * @see Container::invalidate
     */
    void invalidate() const
    {
        container.invalidate();
 8006276:	1d20      	adds	r0, r4, #4
 8006278:	f00b fccc 	bl	8011c14 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800627c:	b009      	add	sp, #36	; 0x24
 800627e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
					if (res == 'R') {
 8006282:	2b52      	cmp	r3, #82	; 0x52
 8006284:	f47f ae38 	bne.w	8005ef8 <_ZN14GameScreenView15handleTickEventEv+0x11c>
						x += 1;
 8006288:	f8d4 37d4 	ldr.w	r3, [r4, #2004]	; 0x7d4
						currentBoatR->setX(getXFromIndex(x));
 800628c:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
						x += 1;
 8006290:	3301      	adds	r3, #1
						if (x > MAX_BOARD) {
 8006292:	2b09      	cmp	r3, #9
							x = MIN_BOARD;
 8006294:	bfc8      	it	gt
 8006296:	2300      	movgt	r3, #0
 8006298:	f8c4 37d4 	str.w	r3, [r4, #2004]	; 0x7d4
	return (5 + x * WIDTH_SQUARE);
 800629c:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 80062a0:	e623      	b.n	8005eea <_ZN14GameScreenView15handleTickEventEv+0x10e>
					if (res == 'U') {
 80062a2:	2b55      	cmp	r3, #85	; 0x55
 80062a4:	f47f ae4e 	bne.w	8005f44 <_ZN14GameScreenView15handleTickEventEv+0x168>
						y -= 1;
 80062a8:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
						currentBoatR->setY(getYFromIndex(y));
 80062ac:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
						if (y < MIN_BOARD) {
 80062b0:	3b01      	subs	r3, #1
							y = MAX_BOARD - selected + 1;
 80062b2:	bf48      	it	mi
 80062b4:	f1c5 030a 	rsbmi	r3, r5, #10
 80062b8:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
						currentBoatR->setY(getYFromIndex(y));
 80062bc:	e639      	b.n	8005f32 <_ZN14GameScreenView15handleTickEventEv+0x156>
					if (res == 'D') {
 80062be:	2b44      	cmp	r3, #68	; 0x44
 80062c0:	f47f ae65 	bne.w	8005f8e <_ZN14GameScreenView15handleTickEventEv+0x1b2>
						y += 1;
 80062c4:	f8d4 37d8 	ldr.w	r3, [r4, #2008]	; 0x7d8
						currentBoatR->setY(getYFromIndex(y));
 80062c8:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
						y += 1;
 80062cc:	3301      	adds	r3, #1
						if (y > MAX_BOARD - selected + 1) {
 80062ce:	f1c5 020a 	rsb	r2, r5, #10
 80062d2:	4293      	cmp	r3, r2
							y = MIN_BOARD;
 80062d4:	bfc8      	it	gt
 80062d6:	2300      	movgt	r3, #0
 80062d8:	f8c4 37d8 	str.w	r3, [r4, #2008]	; 0x7d8
	return (83 + y * WIDTH_SQUARE);
 80062dc:	f8d4 17d8 	ldr.w	r1, [r4, #2008]	; 0x7d8
 80062e0:	e64e      	b.n	8005f80 <_ZN14GameScreenView15handleTickEventEv+0x1a4>
					if (res == 'A') {
 80062e2:	2b41      	cmp	r3, #65	; 0x41
 80062e4:	d1bb      	bne.n	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
						if (checkOutOfDesk(x, y, selected - 1)) {
 80062e6:	1e6b      	subs	r3, r5, #1
 80062e8:	f8d4 27d8 	ldr.w	r2, [r4, #2008]	; 0x7d8
 80062ec:	f8d4 17d4 	ldr.w	r1, [r4, #2004]	; 0x7d4
 80062f0:	b21b      	sxth	r3, r3
 80062f2:	4620      	mov	r0, r4
 80062f4:	f7ff fbd4 	bl	8005aa0 <_ZN14GameScreenView14checkOutOfDeskElls>
 80062f8:	2800      	cmp	r0, #0
 80062fa:	d0b0      	beq.n	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
							int16_t x = currentBoatR->getX();
 80062fc:	f8d4 3fc4 	ldr.w	r3, [r4, #4036]	; 0xfc4
							currentBoat->setXY(x, y);
 8006300:	f8d4 0fc0 	ldr.w	r0, [r4, #4032]	; 0xfc0
 8006304:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 8006308:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800630c:	f7fc f83e 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
							currentBoatR->setXY(OUT_OF_BOARD_X, OUT_OF_BOARD_Y);
 8006310:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
 8006314:	f06f 0243 	mvn.w	r2, #67	; 0x43
 8006318:	f06f 011f 	mvn.w	r1, #31
 800631c:	f7fc f836 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
							is_vertical = false;
 8006320:	2300      	movs	r3, #0
 8006322:	e66a      	b.n	8005ffa <_ZN14GameScreenView15handleTickEventEv+0x21e>
	else if (gameMode == 1) {
 8006324:	2b01      	cmp	r3, #1
 8006326:	d19a      	bne.n	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
		if(!isMultiPlayer)
 8006328:	f896 35b4 	ldrb.w	r3, [r6, #1460]	; 0x5b4
 800632c:	2b00      	cmp	r3, #0
 800632e:	d161      	bne.n	80063f4 <_ZN14GameScreenView15handleTickEventEv+0x618>
      operator=(typename conditional<
 8006330:	f8d6 35b0 	ldr.w	r3, [r6, #1456]	; 0x5b0
 8006334:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
	first = __p.first;
 8006338:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
	second = __p.second;
 800633c:	e9d3 57a4 	ldrd	r5, r7, [r3, #656]	; 0x290
		if(desk[x][y] > 0){
 8006340:	210a      	movs	r1, #10
 8006342:	fb01 7205 	mla	r2, r1, r5, r7
 8006346:	f202 33f2 	addw	r3, r2, #1010	; 0x3f2
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 800634a:	f44f 7cdc 	mov.w	ip, #440	; 0x1b8
		if(desk[x][y] > 0){
 800634e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8006352:	232c      	movs	r3, #44	; 0x2c
 8006354:	437b      	muls	r3, r7
 8006356:	fb0c 3305 	mla	r3, ip, r5, r3
 800635a:	f241 1c58 	movw	ip, #4440	; 0x1158
 800635e:	eb03 080c 	add.w	r8, r3, ip
		if(desk[x][y] > 0){
 8006362:	2800      	cmp	r0, #0
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8006364:	44a0      	add	r8, r4
		if(desk[x][y] > 0){
 8006366:	dd48      	ble.n	80063fa <_ZN14GameScreenView15handleTickEventEv+0x61e>
			presenter->setDesk(x, y, Board::HIT_VALUE);
 8006368:	6be0      	ldr	r0, [r4, #60]	; 0x3c
    	player1Desk[i][j] = status;
 800636a:	32ca      	adds	r2, #202	; 0xca
 800636c:	6883      	ldr	r3, [r0, #8]
 800636e:	f04f 31ff 	mov.w	r1, #4294967295
 8006372:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			presenter->getDesk(desk);
 8006376:	f604 71c8 	addw	r1, r4, #4040	; 0xfc8
 800637a:	9102      	str	r1, [sp, #8]
 800637c:	f7ff fae5 	bl	800594a <_ZN19GameScreenPresenter7getDeskEPA10_l>
			if(GameScreenView::checkWinner(desk))
 8006380:	9902      	ldr	r1, [sp, #8]
 8006382:	4620      	mov	r0, r4
 8006384:	f7ff fb37 	bl	80059f6 <_ZN14GameScreenView11checkWinnerEPA10_l>
 8006388:	b140      	cbz	r0, 800639c <_ZN14GameScreenView15handleTickEventEv+0x5c0>
	}
	bool getIsGoFirst() {
		return model->getIsGoFirst();
	}
	void setWinner(int32_t winner) {
		model->setWinner(winner);
 800638a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		this->winner = winner;
 800638c:	689b      	ldr	r3, [r3, #8]
 800638e:	2202      	movs	r2, #2
 8006390:	f8c3 2648 	str.w	r2, [r3, #1608]	; 0x648
 8006394:	f00a fb7e 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
				application().gotoEndGameScreenScreenSlideTransitionEast();
 8006398:	f7fc fd4c 	bl	8002e34 <_ZN23FrontendApplicationBase42gotoEndGameScreenScreenSlideTransitionEastEv>
	return (83 + y * WIDTH_SQUARE);
 800639c:	2317      	movs	r3, #23
 800639e:	fb03 f205 	mul.w	r2, r3, r5
	return (5 + x * WIDTH_SQUARE);
 80063a2:	fb03 f107 	mul.w	r1, r3, r7
	return (83 + y * WIDTH_SQUARE);
 80063a6:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 80063a8:	3105      	adds	r1, #5
		boxes[x][y].setPosition(getXFromIndex(y), getYFromIndex(x), 23, 23);
 80063aa:	b212      	sxth	r2, r2
 80063ac:	9300      	str	r3, [sp, #0]
 80063ae:	b209      	sxth	r1, r1
 80063b0:	4640      	mov	r0, r8
 80063b2:	f7fb fff8 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
				touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80063b6:	f44f 73dc 	mov.w	r3, #440	; 0x1b8
 80063ba:	435d      	muls	r5, r3
 80063bc:	232c      	movs	r3, #44	; 0x2c
 80063be:	fb03 5507 	mla	r5, r3, r7, r5
 80063c2:	4425      	add	r5, r4
 80063c4:	f241 1358 	movw	r3, #4440	; 0x1158
		boxes[x][y].setScalingAlgorithm(
 80063c8:	2100      	movs	r1, #0
				touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80063ca:	58eb      	ldr	r3, [r5, r3]
		boxes[x][y].setScalingAlgorithm(
 80063cc:	4640      	mov	r0, r8
 80063ce:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80063d0:	4798      	blx	r3
		model->setIndexHit(index);
 80063d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		this->indexHit = index;
 80063d4:	689a      	ldr	r2, [r3, #8]
		presenter->setIndexHit(indexHit + 1);
 80063d6:	f8d6 35b0 	ldr.w	r3, [r6, #1456]	; 0x5b0
 80063da:	3301      	adds	r3, #1
 80063dc:	f8c2 3324 	str.w	r3, [r2, #804]	; 0x324
		if(currentCount == 0){
 80063e0:	f8d6 328c 	ldr.w	r3, [r6, #652]	; 0x28c
 80063e4:	2b00      	cmp	r3, #0
 80063e6:	f47f af3a 	bne.w	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
			currentCount = tickCount;
 80063ea:	f8d6 3288 	ldr.w	r3, [r6, #648]	; 0x288
 80063ee:	f8c6 328c 	str.w	r3, [r6, #652]	; 0x28c
 80063f2:	e734      	b.n	800625e <_ZN14GameScreenView15handleTickEventEv+0x482>
		std::pair<int32_t, int32_t> hit;
 80063f4:	465f      	mov	r7, fp
 80063f6:	465d      	mov	r5, fp
 80063f8:	e7a2      	b.n	8006340 <_ZN14GameScreenView15handleTickEventEv+0x564>
		} else if(desk[x][y] == 0){
 80063fa:	d10b      	bne.n	8006414 <_ZN14GameScreenView15handleTickEventEv+0x638>
			presenter->setDesk(x, y, Board::MISS_VALUE);
 80063fc:	6be0      	ldr	r0, [r4, #60]	; 0x3c
    	player1Desk[i][j] = status;
 80063fe:	32ca      	adds	r2, #202	; 0xca
 8006400:	6883      	ldr	r3, [r0, #8]
 8006402:	f06f 0101 	mvn.w	r1, #1
 8006406:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			presenter->getDesk(desk);
 800640a:	f604 71c8 	addw	r1, r4, #4040	; 0xfc8
 800640e:	f7ff fa9c 	bl	800594a <_ZN19GameScreenPresenter7getDeskEPA10_l>
 8006412:	e7c3      	b.n	800639c <_ZN14GameScreenView15handleTickEventEv+0x5c0>
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8006414:	4423      	add	r3, r4
		} else if(desk[x][y] == Board::HIT_VALUE){
 8006416:	3001      	adds	r0, #1
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 8006418:	f853 300c 	ldr.w	r3, [r3, ip]
 800641c:	bf08      	it	eq
 800641e:	2209      	moveq	r2, #9
 8006420:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006422:	bf14      	ite	ne
 8006424:	f8ad 101c 	strhne.w	r1, [sp, #28]
 8006428:	f8ad 201c 	strheq.w	r2, [sp, #28]
			boxes[x][y].setBitmap(touchgfx::Bitmap(BITMAP_MISS_BLUE_ID));
 800642c:	a907      	add	r1, sp, #28
 800642e:	4640      	mov	r0, r8
 8006430:	4798      	blx	r3
 8006432:	e7b3      	b.n	800639c <_ZN14GameScreenView15handleTickEventEv+0x5c0>

08006434 <_ZN14GameScreenView11setupScreenEv>:
void GameScreenView::setupScreen() {
 8006434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006438:	4604      	mov	r4, r0
 800643a:	b085      	sub	sp, #20
	GameScreenViewBase::setupScreen();
 800643c:	f7fd f909 	bl	8003652 <_ZN18GameScreenViewBase11setupScreenEv>
	currentBoat = (touchgfx::Container*) &boat2;
 8006440:	f504 63ce 	add.w	r3, r4, #1648	; 0x670
	is_vertical = false;
 8006444:	2500      	movs	r5, #0
	currentBoat = (touchgfx::Container*) &boat2;
 8006446:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
	currentBoatR = (touchgfx::Container*) &boat2_r;
 800644a:	f504 7356 	add.w	r3, r4, #856	; 0x358
 800644e:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
	gameBoard.Init();
 8006452:	f204 70dc 	addw	r0, r4, #2012	; 0x7dc
	is_vertical = false;
 8006456:	f884 5fbe 	strb.w	r5, [r4, #4030]	; 0xfbe
	gameBoard.Init();
 800645a:	f000 febf 	bl	80071dc <_ZN5Board4InitEv>
	presenter->getDesk(desk);
 800645e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
	x = 0;
 8006460:	f8c4 57d4 	str.w	r5, [r4, #2004]	; 0x7d4
	presenter->getDesk(desk);
 8006464:	f604 71c8 	addw	r1, r4, #4040	; 0xfc8
	y = 0;
 8006468:	f8c4 57d8 	str.w	r5, [r4, #2008]	; 0x7d8
	presenter->getDesk(desk);
 800646c:	f7ff fa6d 	bl	800594a <_ZN19GameScreenPresenter7getDeskEPA10_l>
	gameMode = presenter->getGameMode();
 8006470:	6be0      	ldr	r0, [r4, #60]	; 0x3c
		return model->getGameMode();
 8006472:	6883      	ldr	r3, [r0, #8]
 8006474:	f893 164c 	ldrb.w	r1, [r3, #1612]	; 0x64c
 8006478:	f884 17d0 	strb.w	r1, [r4, #2000]	; 0x7d0
	isMultiPlayer = presenter->getIsMultiPlayer();
 800647c:	f504 5200 	add.w	r2, r4, #8192	; 0x2000
 8006480:	f893 6650 	ldrb.w	r6, [r3, #1616]	; 0x650
 8006484:	f882 65b4 	strb.w	r6, [r2, #1460]	; 0x5b4
	if(gameMode == 1){
 8006488:	2901      	cmp	r1, #1
	isGoFirst = presenter->getIsGoFirst();
 800648a:	f893 6651 	ldrb.w	r6, [r3, #1617]	; 0x651
 800648e:	f882 65b5 	strb.w	r6, [r2, #1461]	; 0x5b5
	if(gameMode == 1){
 8006492:	d163      	bne.n	800655c <_ZN14GameScreenView11setupScreenEv+0x128>
		indexHit = presenter->getIndexHit();
 8006494:	f8d3 3324 	ldr.w	r3, [r3, #804]	; 0x324
 8006498:	f8c2 35b0 	str.w	r3, [r2, #1456]	; 0x5b0
		presenter->getHits(hits);
 800649c:	f504 510a 	add.w	r1, r4, #8832	; 0x2280
 80064a0:	3110      	adds	r1, #16
 80064a2:	f504 588a 	add.w	r8, r4, #4416	; 0x1140
 80064a6:	f7ff fa63 	bl	8005970 <_ZN19GameScreenPresenter7getHitsEPSt4pairIllE>
        visible = vis;
 80064aa:	f108 0818 	add.w	r8, r8, #24
 80064ae:	f884 5719 	strb.w	r5, [r4, #1817]	; 0x719
 80064b2:	f04f 0953 	mov.w	r9, #83	; 0x53
			for(int j = 0; j < 10; j++){
 80064b6:	2328      	movs	r3, #40	; 0x28
				boxes[i][j].setPosition(getXFromIndex(j), getYFromIndex(i), 23,
 80064b8:	fa0f fb89 	sxth.w	fp, r9
 80064bc:	fb03 4a05 	mla	sl, r3, r5, r4
 80064c0:	4646      	mov	r6, r8
 80064c2:	2705      	movs	r7, #5
				if (desk[i][j] == Board::HIT_VALUE)
 80064c4:	f8da 3fc8 	ldr.w	r3, [sl, #4040]	; 0xfc8
 80064c8:	1c59      	adds	r1, r3, #1
 80064ca:	d12b      	bne.n	8006524 <_ZN14GameScreenView11setupScreenEv+0xf0>
							touchgfx::Bitmap(BITMAP_HIT_ID));
 80064cc:	6833      	ldr	r3, [r6, #0]
 80064ce:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80064d0:	2209      	movs	r2, #9
 80064d2:	f8ad 200c 	strh.w	r2, [sp, #12]
						boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 80064d6:	a903      	add	r1, sp, #12
 80064d8:	4630      	mov	r0, r6
 80064da:	4798      	blx	r3
				boxes[i][j].setPosition(getXFromIndex(j), getYFromIndex(i), 23,
 80064dc:	2317      	movs	r3, #23
 80064de:	465a      	mov	r2, fp
 80064e0:	b239      	sxth	r1, r7
 80064e2:	4630      	mov	r0, r6
 80064e4:	9300      	str	r3, [sp, #0]
 80064e6:	f7fb ff5e 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
						touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80064ea:	6833      	ldr	r3, [r6, #0]
				boxes[i][j].setScalingAlgorithm(
 80064ec:	4630      	mov	r0, r6
 80064ee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80064f0:	2100      	movs	r1, #0
			for(int j = 0; j < 10; j++){
 80064f2:	3717      	adds	r7, #23
				boxes[i][j].setScalingAlgorithm(
 80064f4:	4798      	blx	r3
			for(int j = 0; j < 10; j++){
 80064f6:	b2bf      	uxth	r7, r7
        container.add(d);
 80064f8:	4631      	mov	r1, r6
 80064fa:	1d20      	adds	r0, r4, #4
 80064fc:	f006 fb38 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006500:	2feb      	cmp	r7, #235	; 0xeb
 8006502:	f10a 0a04 	add.w	sl, sl, #4
 8006506:	f106 062c 	add.w	r6, r6, #44	; 0x2c
 800650a:	d1db      	bne.n	80064c4 <_ZN14GameScreenView11setupScreenEv+0x90>
					if((i + 1 < 10 && desk[i + 1][j] == desk[i][j]) || (i - 1 >= 0 && desk[i - 1][j] == desk[i][j])){
 800650c:	3501      	adds	r5, #1
		for(int i = 0; i < 10; i++){
 800650e:	f109 0917 	add.w	r9, r9, #23
 8006512:	2d0a      	cmp	r5, #10
 8006514:	fa1f f989 	uxth.w	r9, r9
 8006518:	f508 78dc 	add.w	r8, r8, #440	; 0x1b8
 800651c:	d1cb      	bne.n	80064b6 <_ZN14GameScreenView11setupScreenEv+0x82>
}
 800651e:	b005      	add	sp, #20
 8006520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				} else if(desk[i][j] == Board::MISS_VALUE) {
 8006524:	1c9a      	adds	r2, r3, #2
 8006526:	d103      	bne.n	8006530 <_ZN14GameScreenView11setupScreenEv+0xfc>
					boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_MISS_BLUE_ID));
 8006528:	6833      	ldr	r3, [r6, #0]
 800652a:	220a      	movs	r2, #10
 800652c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800652e:	e7d0      	b.n	80064d2 <_ZN14GameScreenView11setupScreenEv+0x9e>
				} else if (desk[i][j] > 0){
 8006530:	2b00      	cmp	r3, #0
 8006532:	ddd3      	ble.n	80064dc <_ZN14GameScreenView11setupScreenEv+0xa8>
					if((i + 1 < 10 && desk[i + 1][j] == desk[i][j]) || (i - 1 >= 0 && desk[i - 1][j] == desk[i][j])){
 8006534:	2d09      	cmp	r5, #9
 8006536:	6832      	ldr	r2, [r6, #0]
 8006538:	d004      	beq.n	8006544 <_ZN14GameScreenView11setupScreenEv+0x110>
 800653a:	f8da 1ff0 	ldr.w	r1, [sl, #4080]	; 0xff0
 800653e:	428b      	cmp	r3, r1
 8006540:	d004      	beq.n	800654c <_ZN14GameScreenView11setupScreenEv+0x118>
 8006542:	b13d      	cbz	r5, 8006554 <_ZN14GameScreenView11setupScreenEv+0x120>
 8006544:	f8da 1fa0 	ldr.w	r1, [sl, #4000]	; 0xfa0
 8006548:	428b      	cmp	r3, r1
 800654a:	d103      	bne.n	8006554 <_ZN14GameScreenView11setupScreenEv+0x120>
						boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_BOAT_ID));
 800654c:	6e13      	ldr	r3, [r2, #96]	; 0x60
        : bitmapId(id)
 800654e:	f04f 0207 	mov.w	r2, #7
 8006552:	e7be      	b.n	80064d2 <_ZN14GameScreenView11setupScreenEv+0x9e>
						boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_BOAT2_ID));
 8006554:	6e13      	ldr	r3, [r2, #96]	; 0x60
 8006556:	f04f 0208 	mov.w	r2, #8
 800655a:	e7ba      	b.n	80064d2 <_ZN14GameScreenView11setupScreenEv+0x9e>
		gameMode = 0; // Dat thuyen
 800655c:	f884 57d0 	strb.w	r5, [r4, #2000]	; 0x7d0
}
 8006560:	e7dd      	b.n	800651e <_ZN14GameScreenView11setupScreenEv+0xea>

08006562 <_ZN19HomeScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~HomeScreenPresenter() {}
 8006562:	4770      	bx	lr

08006564 <_ZThn4_N19HomeScreenPresenterD1Ev>:
 8006564:	3804      	subs	r0, #4
 8006566:	4770      	bx	lr

08006568 <_ZN19HomeScreenPresenter10deactivateEv>:
}

void HomeScreenPresenter::activate()
{

}
 8006568:	4770      	bx	lr

0800656a <_ZN19HomeScreenPresenterD0Ev>:
 800656a:	b510      	push	{r4, lr}
 800656c:	2110      	movs	r1, #16
 800656e:	4604      	mov	r4, r0
 8006570:	f01b f89c 	bl	80216ac <_ZdlPvj>
 8006574:	4620      	mov	r0, r4
 8006576:	bd10      	pop	{r4, pc}

08006578 <_ZThn4_N19HomeScreenPresenterD0Ev>:
 8006578:	f1a0 0004 	sub.w	r0, r0, #4
 800657c:	e7f5      	b.n	800656a <_ZN19HomeScreenPresenterD0Ev>
	...

08006580 <_ZN19HomeScreenPresenterC1ER14HomeScreenView>:
HomeScreenPresenter::HomeScreenPresenter(HomeScreenView& v)
 8006580:	b510      	push	{r4, lr}
 8006582:	2200      	movs	r2, #0
 8006584:	6082      	str	r2, [r0, #8]
    : view(v)
 8006586:	4a04      	ldr	r2, [pc, #16]	; (8006598 <_ZN19HomeScreenPresenterC1ER14HomeScreenView+0x18>)
 8006588:	60c1      	str	r1, [r0, #12]
 800658a:	f102 0408 	add.w	r4, r2, #8
 800658e:	3220      	adds	r2, #32
 8006590:	6004      	str	r4, [r0, #0]
 8006592:	6042      	str	r2, [r0, #4]
}
 8006594:	bd10      	pop	{r4, pc}
 8006596:	bf00      	nop
 8006598:	08024628 	.word	0x08024628

0800659c <_ZN14HomeScreenView14tearDownScreenEv>:
}

void HomeScreenView::tearDownScreen()
{
    HomeScreenViewBase::tearDownScreen();
}
 800659c:	4770      	bx	lr

0800659e <_ZN14HomeScreenView9MultiModeEv>:

void HomeScreenView::MultiMode()
{
 800659e:	b508      	push	{r3, lr}

    void setIsMultiPlayer(bool b) {
		model->setIsMultiPlayer(b);
 80065a0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
		this->isMultiPlayer = b;
 80065a2:	689b      	ldr	r3, [r3, #8]
 80065a4:	2201      	movs	r2, #1
 80065a6:	f883 2650 	strb.w	r2, [r3, #1616]	; 0x650
 80065aa:	f00a fa73 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
	presenter->setIsMultiPlayer(true);
	application().gotoLoadingScreenScreenSlideTransitionEast();
}
 80065ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	application().gotoLoadingScreenScreenSlideTransitionEast();
 80065b2:	f7fc bbff 	b.w	8002db4 <_ZN23FrontendApplicationBase42gotoLoadingScreenScreenSlideTransitionEastEv>
	...

080065b8 <_ZN14HomeScreenViewD1Ev>:

class HomeScreenView : public HomeScreenViewBase
{
public:
    HomeScreenView();
    virtual ~HomeScreenView() {}
 80065b8:	b510      	push	{r4, lr}
 80065ba:	4b03      	ldr	r3, [pc, #12]	; (80065c8 <_ZN14HomeScreenViewD1Ev+0x10>)
 80065bc:	6003      	str	r3, [r0, #0]
 80065be:	4604      	mov	r4, r0
 80065c0:	f7fd fe2f 	bl	8004222 <_ZN18HomeScreenViewBaseD1Ev>
 80065c4:	4620      	mov	r0, r4
 80065c6:	bd10      	pop	{r4, pc}
 80065c8:	08024658 	.word	0x08024658

080065cc <_ZN14HomeScreenViewD0Ev>:
 80065cc:	b510      	push	{r4, lr}
 80065ce:	4604      	mov	r4, r0
 80065d0:	f7ff fff2 	bl	80065b8 <_ZN14HomeScreenViewD1Ev>
 80065d4:	4620      	mov	r0, r4
 80065d6:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 80065da:	f01b f867 	bl	80216ac <_ZdlPvj>
 80065de:	4620      	mov	r0, r4
 80065e0:	bd10      	pop	{r4, pc}
	...

080065e4 <_ZN14HomeScreenViewC1Ev>:
HomeScreenView::HomeScreenView()
 80065e4:	b510      	push	{r4, lr}
 80065e6:	4604      	mov	r4, r0
 80065e8:	f7fd fe7a 	bl	80042e0 <_ZN18HomeScreenViewBaseC1Ev>
 80065ec:	4b01      	ldr	r3, [pc, #4]	; (80065f4 <_ZN14HomeScreenViewC1Ev+0x10>)
 80065ee:	6023      	str	r3, [r4, #0]
}
 80065f0:	4620      	mov	r0, r4
 80065f2:	bd10      	pop	{r4, pc}
 80065f4:	08024658 	.word	0x08024658

080065f8 <_ZN14HomeScreenView11setupScreenEv>:
    HomeScreenViewBase::setupScreen();
 80065f8:	f7fd be14 	b.w	8004224 <_ZN18HomeScreenViewBase11setupScreenEv>

080065fc <_ZN22LoadingScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~LoadingScreenPresenter() {}
 80065fc:	4770      	bx	lr

080065fe <_ZThn4_N22LoadingScreenPresenterD1Ev>:
 80065fe:	3804      	subs	r0, #4
 8006600:	4770      	bx	lr

08006602 <_ZN22LoadingScreenPresenter10deactivateEv>:
}

void LoadingScreenPresenter::activate()
{

}
 8006602:	4770      	bx	lr

08006604 <_ZN22LoadingScreenPresenterD0Ev>:
 8006604:	b510      	push	{r4, lr}
 8006606:	2110      	movs	r1, #16
 8006608:	4604      	mov	r4, r0
 800660a:	f01b f84f 	bl	80216ac <_ZdlPvj>
 800660e:	4620      	mov	r0, r4
 8006610:	bd10      	pop	{r4, pc}

08006612 <_ZThn4_N22LoadingScreenPresenterD0Ev>:
 8006612:	f1a0 0004 	sub.w	r0, r0, #4
 8006616:	e7f5      	b.n	8006604 <_ZN22LoadingScreenPresenterD0Ev>

08006618 <_ZN22LoadingScreenPresenterC1ER17LoadingScreenView>:
LoadingScreenPresenter::LoadingScreenPresenter(LoadingScreenView& v)
 8006618:	b510      	push	{r4, lr}
 800661a:	2200      	movs	r2, #0
 800661c:	6082      	str	r2, [r0, #8]
    : view(v)
 800661e:	4a04      	ldr	r2, [pc, #16]	; (8006630 <_ZN22LoadingScreenPresenterC1ER17LoadingScreenView+0x18>)
 8006620:	60c1      	str	r1, [r0, #12]
 8006622:	f102 0408 	add.w	r4, r2, #8
 8006626:	3220      	adds	r2, #32
 8006628:	6004      	str	r4, [r0, #0]
 800662a:	6042      	str	r2, [r0, #4]
}
 800662c:	bd10      	pop	{r4, pc}
 800662e:	bf00      	nop
 8006630:	08024688 	.word	0x08024688

08006634 <_ZN17LoadingScreenView14tearDownScreenEv>:
}

void LoadingScreenView::tearDownScreen()
{
    LoadingScreenViewBase::tearDownScreen();
}
 8006634:	4770      	bx	lr
	...

08006638 <_ZN17LoadingScreenViewD1Ev>:

class LoadingScreenView : public LoadingScreenViewBase
{
public:
    LoadingScreenView();
    virtual ~LoadingScreenView() {}
 8006638:	b510      	push	{r4, lr}
 800663a:	4b03      	ldr	r3, [pc, #12]	; (8006648 <_ZN17LoadingScreenViewD1Ev+0x10>)
 800663c:	6003      	str	r3, [r0, #0]
 800663e:	4604      	mov	r4, r0
 8006640:	f7fd ff4e 	bl	80044e0 <_ZN21LoadingScreenViewBaseD1Ev>
 8006644:	4620      	mov	r0, r4
 8006646:	bd10      	pop	{r4, pc}
 8006648:	080246b8 	.word	0x080246b8

0800664c <_ZN17LoadingScreenViewD0Ev>:
 800664c:	b510      	push	{r4, lr}
 800664e:	4604      	mov	r4, r0
 8006650:	f7ff fff2 	bl	8006638 <_ZN17LoadingScreenViewD1Ev>
 8006654:	4620      	mov	r0, r4
 8006656:	f44f 7104 	mov.w	r1, #528	; 0x210
 800665a:	f01b f827 	bl	80216ac <_ZdlPvj>
 800665e:	4620      	mov	r0, r4
 8006660:	bd10      	pop	{r4, pc}
	...

08006664 <_ZN17LoadingScreenViewC1Ev>:
LoadingScreenView::LoadingScreenView()
 8006664:	b510      	push	{r4, lr}
 8006666:	4604      	mov	r4, r0
 8006668:	f7fd ff44 	bl	80044f4 <_ZN21LoadingScreenViewBaseC1Ev>
 800666c:	4b03      	ldr	r3, [pc, #12]	; (800667c <_ZN17LoadingScreenViewC1Ev+0x18>)
 800666e:	6023      	str	r3, [r4, #0]
 8006670:	2301      	movs	r3, #1
 8006672:	f884 320c 	strb.w	r3, [r4, #524]	; 0x20c
}
 8006676:	4620      	mov	r0, r4
 8006678:	bd10      	pop	{r4, pc}
 800667a:	bf00      	nop
 800667c:	080246b8 	.word	0x080246b8

08006680 <_ZN17LoadingScreenView11setupScreenEv>:
    LoadingScreenViewBase::setupScreen();
 8006680:	f7fd bf2f 	b.w	80044e2 <_ZN21LoadingScreenViewBase11setupScreenEv>

08006684 <_ZN17LoadingScreenView15handleTickEventEv>:

void LoadingScreenView::handleTickEvent()
{
 8006684:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	LoadingScreenViewBase::handleTickEvent();
	int currentValue = boxProgress1.getValue();
 8006688:	f100 0698 	add.w	r6, r0, #152	; 0x98
{
 800668c:	4604      	mov	r4, r0
	int currentValue = boxProgress1.getValue();
 800668e:	4630      	mov	r0, r6
 8006690:	f006 f903 	bl	800c89a <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
	int max;
	int min;
	boxProgress1.getRange(min, max);
 8006694:	aa02      	add	r2, sp, #8
	int currentValue = boxProgress1.getValue();
 8006696:	4605      	mov	r5, r0
	boxProgress1.getRange(min, max);
 8006698:	a903      	add	r1, sp, #12
 800669a:	4630      	mov	r0, r6
 800669c:	f006 f8f3 	bl	800c886 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>

	if (currentValue == min) {
 80066a0:	9b03      	ldr	r3, [sp, #12]
 80066a2:	42ab      	cmp	r3, r5
 80066a4:	d107      	bne.n	80066b6 <_ZN17LoadingScreenView15handleTickEventEv+0x32>
		increase = true;
 80066a6:	2301      	movs	r3, #1
 80066a8:	f884 320c 	strb.w	r3, [r4, #524]	; 0x20c
	}

	if(increase)
	{
		currentValue++;
		boxProgress1.setValue(currentValue);
 80066ac:	1c69      	adds	r1, r5, #1
 80066ae:	4630      	mov	r0, r6
 80066b0:	f005 ffb1 	bl	800c616 <_ZN8touchgfx11BoxProgress8setValueEi>
	}

}
 80066b4:	e023      	b.n	80066fe <_ZN17LoadingScreenView15handleTickEventEv+0x7a>
	else if (currentValue == max)
 80066b6:	9b02      	ldr	r3, [sp, #8]
 80066b8:	42ab      	cmp	r3, r5
 80066ba:	d11c      	bne.n	80066f6 <_ZN17LoadingScreenView15handleTickEventEv+0x72>
		uint32_t count = osMessageQueueGetCount(Queue6Handle);
 80066bc:	f8df 8044 	ldr.w	r8, [pc, #68]	; 8006704 <_ZN17LoadingScreenView15handleTickEventEv+0x80>
		increase = false;
 80066c0:	2700      	movs	r7, #0
		uint32_t count = osMessageQueueGetCount(Queue6Handle);
 80066c2:	f8d8 0000 	ldr.w	r0, [r8]
		increase = false;
 80066c6:	f884 720c 	strb.w	r7, [r4, #524]	; 0x20c
		uint8_t res = 0;
 80066ca:	f88d 7007 	strb.w	r7, [sp, #7]
		uint32_t count = osMessageQueueGetCount(Queue6Handle);
 80066ce:	f003 ffe8 	bl	800a6a2 <osMessageQueueGetCount>
		if (count > 0) {
 80066d2:	b180      	cbz	r0, 80066f6 <_ZN17LoadingScreenView15handleTickEventEv+0x72>
			osMessageQueueGet(Queue6Handle, &res, NULL, osWaitForever);
 80066d4:	f04f 33ff 	mov.w	r3, #4294967295
 80066d8:	f8d8 0000 	ldr.w	r0, [r8]
 80066dc:	463a      	mov	r2, r7
 80066de:	f10d 0107 	add.w	r1, sp, #7
 80066e2:	f003 ffaf 	bl	800a644 <osMessageQueueGet>
			if (res == '1') {
 80066e6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80066ea:	2b31      	cmp	r3, #49	; 0x31
 80066ec:	d103      	bne.n	80066f6 <_ZN17LoadingScreenView15handleTickEventEv+0x72>
    virtual ~LoadingScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066ee:	f00a f9d1 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
				application().gotoChooseTurnScreenScreenSlideTransitionEast();
 80066f2:	f7fc fb6f 	bl	8002dd4 <_ZN23FrontendApplicationBase45gotoChooseTurnScreenScreenSlideTransitionEastEv>
	if(increase)
 80066f6:	f894 320c 	ldrb.w	r3, [r4, #524]	; 0x20c
 80066fa:	2b00      	cmp	r3, #0
 80066fc:	d1d6      	bne.n	80066ac <_ZN17LoadingScreenView15handleTickEventEv+0x28>
}
 80066fe:	b004      	add	sp, #16
 8006700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006704:	20003e50 	.word	0x20003e50

08006708 <_ZN5Model4tickEv>:
}

void Model::tick()
{

}
 8006708:	4770      	bx	lr

0800670a <_ZN5Model4InitEv>:

void Model::Init()
{
	isGoFirst = true;
	isMultiPlayer = false;
	winner = 0;
 800670a:	2100      	movs	r1, #0
	isMultiPlayer = false;
 800670c:	f44f 7380 	mov.w	r3, #256	; 0x100
	winner = 0;
 8006710:	f8c0 1648 	str.w	r1, [r0, #1608]	; 0x648
	gameMode = 0;
 8006714:	f8c0 164c 	str.w	r1, [r0, #1612]	; 0x64c
	isMultiPlayer = false;
 8006718:	f8a0 3650 	strh.w	r3, [r0, #1616]	; 0x650
	for(int i = 0; i < 10; i++)
		{
			for(int j = 0; j < 10; j++)
			{
				player1Desk[i][j] = 0;
 800671c:	f44f 7248 	mov.w	r2, #800	; 0x320
 8006720:	f500 704a 	add.w	r0, r0, #808	; 0x328
 8006724:	f01b b90e 	b.w	8021944 <memset>

08006728 <_ZN5ModelC1Ev>:
Model::Model() : modelListener(0)
 8006728:	b510      	push	{r4, lr}
 800672a:	2100      	movs	r1, #0
 800672c:	4604      	mov	r4, r0
 800672e:	f44f 7248 	mov.w	r2, #800	; 0x320
 8006732:	f840 1b04 	str.w	r1, [r0], #4
 8006736:	f01b f905 	bl	8021944 <memset>
	this->Init();
 800673a:	4620      	mov	r0, r4
 800673c:	f7ff ffe5 	bl	800670a <_ZN5Model4InitEv>
}
 8006740:	4620      	mov	r0, r4
 8006742:	bd10      	pop	{r4, pc}

08006744 <_ZN23OpponentScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~OpponentScreenPresenter() {}
 8006744:	4770      	bx	lr

08006746 <_ZThn4_N23OpponentScreenPresenterD1Ev>:
 8006746:	3804      	subs	r0, #4
 8006748:	4770      	bx	lr

0800674a <_ZN23OpponentScreenPresenter10deactivateEv>:
}

void OpponentScreenPresenter::activate()
{

}
 800674a:	4770      	bx	lr

0800674c <_ZN23OpponentScreenPresenterD0Ev>:
 800674c:	b510      	push	{r4, lr}
 800674e:	2110      	movs	r1, #16
 8006750:	4604      	mov	r4, r0
 8006752:	f01a ffab 	bl	80216ac <_ZdlPvj>
 8006756:	4620      	mov	r0, r4
 8006758:	bd10      	pop	{r4, pc}

0800675a <_ZThn4_N23OpponentScreenPresenterD0Ev>:
 800675a:	f1a0 0004 	sub.w	r0, r0, #4
 800675e:	e7f5      	b.n	800674c <_ZN23OpponentScreenPresenterD0Ev>

08006760 <_ZN23OpponentScreenPresenterC1ER18OpponentScreenView>:
OpponentScreenPresenter::OpponentScreenPresenter(OpponentScreenView& v)
 8006760:	b510      	push	{r4, lr}
 8006762:	2200      	movs	r2, #0
 8006764:	6082      	str	r2, [r0, #8]
    : view(v)
 8006766:	4a04      	ldr	r2, [pc, #16]	; (8006778 <_ZN23OpponentScreenPresenterC1ER18OpponentScreenView+0x18>)
 8006768:	60c1      	str	r1, [r0, #12]
 800676a:	f102 0408 	add.w	r4, r2, #8
 800676e:	3220      	adds	r2, #32
 8006770:	6004      	str	r4, [r0, #0]
 8006772:	6042      	str	r2, [r0, #4]
}
 8006774:	bd10      	pop	{r4, pc}
 8006776:	bf00      	nop
 8006778:	080246e4 	.word	0x080246e4

0800677c <_ZN18OpponentScreenView14tearDownScreenEv>:
}

void OpponentScreenView::tearDownScreen()
{
    OpponentScreenViewBase::tearDownScreen();
}
 800677c:	4770      	bx	lr
	...

08006780 <_ZN18OpponentScreenViewD1Ev>:

class OpponentScreenView : public OpponentScreenViewBase
{
public:
    OpponentScreenView();
    virtual ~OpponentScreenView() {}
 8006780:	4b09      	ldr	r3, [pc, #36]	; (80067a8 <_ZN18OpponentScreenViewD1Ev+0x28>)
 8006782:	b570      	push	{r4, r5, r6, lr}
 8006784:	4604      	mov	r4, r0
 8006786:	6003      	str	r3, [r0, #0]
 8006788:	f641 45a4 	movw	r5, #7332	; 0x1ca4
 800678c:	f640 3674 	movw	r6, #2932	; 0xb74
 8006790:	5963      	ldr	r3, [r4, r5]
 8006792:	1960      	adds	r0, r4, r5
 8006794:	681b      	ldr	r3, [r3, #0]
 8006796:	3d2c      	subs	r5, #44	; 0x2c
 8006798:	4798      	blx	r3
 800679a:	42b5      	cmp	r5, r6
 800679c:	d1f8      	bne.n	8006790 <_ZN18OpponentScreenViewD1Ev+0x10>
 800679e:	4620      	mov	r0, r4
 80067a0:	f7fd ff64 	bl	800466c <_ZN22OpponentScreenViewBaseD1Ev>
 80067a4:	4620      	mov	r0, r4
 80067a6:	bd70      	pop	{r4, r5, r6, pc}
 80067a8:	08024714 	.word	0x08024714

080067ac <_ZN18OpponentScreenViewD0Ev>:
 80067ac:	b510      	push	{r4, lr}
 80067ae:	4604      	mov	r4, r0
 80067b0:	f7ff ffe6 	bl	8006780 <_ZN18OpponentScreenViewD1Ev>
 80067b4:	4620      	mov	r0, r4
 80067b6:	f641 617c 	movw	r1, #7804	; 0x1e7c
 80067ba:	f01a ff77 	bl	80216ac <_ZdlPvj>
 80067be:	4620      	mov	r0, r4
 80067c0:	bd10      	pop	{r4, pc}

080067c2 <_ZN23OpponentScreenPresenter7getDeskEPA10_l>:

	void getDesk(int32_t (*arr)[10]) {
 80067c2:	b510      	push	{r4, lr}
 80067c4:	460c      	mov	r4, r1
				arr[i][j] = this->player2Desk[i][j];
 80067c6:	6881      	ldr	r1, [r0, #8]
 80067c8:	b0e4      	sub	sp, #400	; 0x190
 80067ca:	f44f 72c8 	mov.w	r2, #400	; 0x190
 80067ce:	f501 6197 	add.w	r1, r1, #1208	; 0x4b8
 80067d2:	4668      	mov	r0, sp
 80067d4:	f01b f8a8 	bl	8021928 <memcpy>
		int32_t data[10][10];
		model->getPlayer2Desk(data);
		for (int i = 0; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				arr[i][j] = data[i][j];
 80067d8:	f44f 72c8 	mov.w	r2, #400	; 0x190
 80067dc:	4669      	mov	r1, sp
 80067de:	4620      	mov	r0, r4
 80067e0:	f01b f8a2 	bl	8021928 <memcpy>
			}
		}
	}
 80067e4:	b064      	add	sp, #400	; 0x190
 80067e6:	bd10      	pop	{r4, pc}

080067e8 <_ZN18OpponentScreenView15handleTickEventEv>:
void OpponentScreenView::handleTickEvent() {
 80067e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    OpponentScreenViewBase::handleTickEvent();
    tickCount++;
 80067ec:	f500 5580 	add.w	r5, r0, #4096	; 0x1000
	uint8_t res = 0;
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 80067f0:	f8df a34c 	ldr.w	sl, [pc, #844]	; 8006b40 <_ZN18OpponentScreenView15handleTickEventEv+0x358>
    tickCount++;
 80067f4:	f8d5 3e60 	ldr.w	r3, [r5, #3680]	; 0xe60
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 80067f8:	f8df 8348 	ldr.w	r8, [pc, #840]	; 8006b44 <_ZN18OpponentScreenView15handleTickEventEv+0x35c>
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 80067fc:	f8df 9348 	ldr.w	r9, [pc, #840]	; 8006b48 <_ZN18OpponentScreenView15handleTickEventEv+0x360>
void OpponentScreenView::handleTickEvent() {
 8006800:	b087      	sub	sp, #28
    tickCount++;
 8006802:	3301      	adds	r3, #1
	uint8_t res = 0;
 8006804:	2200      	movs	r2, #0
    tickCount++;
 8006806:	f8c5 3e60 	str.w	r3, [r5, #3680]	; 0xe60
void OpponentScreenView::handleTickEvent() {
 800680a:	4604      	mov	r4, r0
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 800680c:	f8da 0000 	ldr.w	r0, [sl]
	uint8_t res = 0;
 8006810:	f88d 2013 	strb.w	r2, [sp, #19]
	uint32_t count1 = osMessageQueueGetCount(Queue1Handle);
 8006814:	f003 ff45 	bl	800a6a2 <osMessageQueueGetCount>
 8006818:	4683      	mov	fp, r0
	uint32_t count2 = osMessageQueueGetCount(Queue2Handle);
 800681a:	f8d8 0000 	ldr.w	r0, [r8]
 800681e:	f003 ff40 	bl	800a6a2 <osMessageQueueGetCount>
 8006822:	9003      	str	r0, [sp, #12]
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 8006824:	f8d9 0000 	ldr.w	r0, [r9]
 8006828:	f003 ff3b 	bl	800a6a2 <osMessageQueueGetCount>
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 800682c:	4bc1      	ldr	r3, [pc, #772]	; (8006b34 <_ZN18OpponentScreenView15handleTickEventEv+0x34c>)
	uint32_t count3 = osMessageQueueGetCount(Queue3Handle);
 800682e:	4606      	mov	r6, r0
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8006830:	6818      	ldr	r0, [r3, #0]
 8006832:	f003 ff36 	bl	800a6a2 <osMessageQueueGetCount>
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 8006836:	4bc0      	ldr	r3, [pc, #768]	; (8006b38 <_ZN18OpponentScreenView15handleTickEventEv+0x350>)
	uint32_t count4 = osMessageQueueGetCount(Queue4Handle);
 8006838:	4607      	mov	r7, r0
	uint32_t count5 = osMessageQueueGetCount(Queue5Handle);
 800683a:	6818      	ldr	r0, [r3, #0]
 800683c:	f003 ff31 	bl	800a6a2 <osMessageQueueGetCount>
	uint32_t count6 = osMessageQueueGetCount(Queue6Handle);
 8006840:	4bbe      	ldr	r3, [pc, #760]	; (8006b3c <_ZN18OpponentScreenView15handleTickEventEv+0x354>)
 8006842:	6818      	ldr	r0, [r3, #0]
 8006844:	f003 ff2d 	bl	800a6a2 <osMessageQueueGetCount>

	if (count1 > 0) {
 8006848:	2200      	movs	r2, #0
 800684a:	f1bb 0f00 	cmp.w	fp, #0
 800684e:	d01d      	beq.n	800688c <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
		osMessageQueueGet(Queue1Handle, &res, NULL, osWaitForever);
 8006850:	f04f 33ff 	mov.w	r3, #4294967295
 8006854:	f8da 0000 	ldr.w	r0, [sl]
 8006858:	f10d 0113 	add.w	r1, sp, #19
 800685c:	f003 fef2 	bl	800a644 <osMessageQueueGet>
		if (res == 'L') {
 8006860:	f89d 3013 	ldrb.w	r3, [sp, #19]
 8006864:	2b4c      	cmp	r3, #76	; 0x4c
 8006866:	f040 8081 	bne.w	800696c <_ZN18OpponentScreenView15handleTickEventEv+0x184>
			x -= 1;
 800686a:	f894 3b9c 	ldrb.w	r3, [r4, #2972]	; 0xb9c
 800686e:	3b01      	subs	r3, #1
 8006870:	b25b      	sxtb	r3, r3
			if (x < MIN_BOARD) {
 8006872:	2b00      	cmp	r3, #0
				x = MAX_BOARD;
 8006874:	bfb8      	it	lt
 8006876:	2309      	movlt	r3, #9
 8006878:	f884 3b9c 	strb.w	r3, [r4, #2972]	; 0xb9c
		}
	} while (status == -1);
	return std::make_tuple(x, y, status);
}
int32_t OpponentScreenView::getXFromIndex(int32_t x) {
	return (5 + x * WIDTH_SQUARE);
 800687c:	f994 1b9c 	ldrsb.w	r1, [r4, #2972]	; 0xb9c
 8006880:	2317      	movs	r3, #23
 8006882:	2205      	movs	r2, #5
 8006884:	fb13 2301 	smlabb	r3, r3, r1, r2
			select.setX(getXFromIndex(x));
 8006888:	f8a4 3854 	strh.w	r3, [r4, #2132]	; 0x854
	if(count2 > 0){
 800688c:	9b03      	ldr	r3, [sp, #12]
 800688e:	b1eb      	cbz	r3, 80068cc <_ZN18OpponentScreenView15handleTickEventEv+0xe4>
		osMessageQueueGet(Queue2Handle, &res, NULL, osWaitForever);
 8006890:	f04f 33ff 	mov.w	r3, #4294967295
 8006894:	f8d8 0000 	ldr.w	r0, [r8]
 8006898:	2200      	movs	r2, #0
 800689a:	f10d 0113 	add.w	r1, sp, #19
 800689e:	f003 fed1 	bl	800a644 <osMessageQueueGet>
		if (res == 'R') {
 80068a2:	f89d 3013 	ldrb.w	r3, [sp, #19]
 80068a6:	2b52      	cmp	r3, #82	; 0x52
 80068a8:	d110      	bne.n	80068cc <_ZN18OpponentScreenView15handleTickEventEv+0xe4>
			x += 1;
 80068aa:	f894 3b9c 	ldrb.w	r3, [r4, #2972]	; 0xb9c
 80068ae:	3301      	adds	r3, #1
 80068b0:	b25b      	sxtb	r3, r3
			if (x > MAX_BOARD) {
 80068b2:	2b09      	cmp	r3, #9
				x = MIN_BOARD;
 80068b4:	bfc8      	it	gt
 80068b6:	2300      	movgt	r3, #0
 80068b8:	f884 3b9c 	strb.w	r3, [r4, #2972]	; 0xb9c
	return (5 + x * WIDTH_SQUARE);
 80068bc:	f994 1b9c 	ldrsb.w	r1, [r4, #2972]	; 0xb9c
 80068c0:	2317      	movs	r3, #23
 80068c2:	2205      	movs	r2, #5
 80068c4:	fb13 2301 	smlabb	r3, r3, r1, r2
			select.setX(getXFromIndex(x));
 80068c8:	f8a4 3854 	strh.w	r3, [r4, #2132]	; 0x854
	if (count3 > 0) {
 80068cc:	b1ee      	cbz	r6, 800690a <_ZN18OpponentScreenView15handleTickEventEv+0x122>
		osMessageQueueGet(Queue3Handle, &res, NULL, osWaitForever);
 80068ce:	f04f 33ff 	mov.w	r3, #4294967295
 80068d2:	f8d9 0000 	ldr.w	r0, [r9]
 80068d6:	2200      	movs	r2, #0
 80068d8:	f10d 0113 	add.w	r1, sp, #19
 80068dc:	f003 feb2 	bl	800a644 <osMessageQueueGet>
		if (res == 'U') {
 80068e0:	f89d 3013 	ldrb.w	r3, [sp, #19]
 80068e4:	2b55      	cmp	r3, #85	; 0x55
 80068e6:	d110      	bne.n	800690a <_ZN18OpponentScreenView15handleTickEventEv+0x122>
			y -= 1;
 80068e8:	f894 3b9d 	ldrb.w	r3, [r4, #2973]	; 0xb9d
 80068ec:	3b01      	subs	r3, #1
 80068ee:	b25b      	sxtb	r3, r3
			if (y < MIN_BOARD) {
 80068f0:	2b00      	cmp	r3, #0
				y = MAX_BOARD;
 80068f2:	bfb8      	it	lt
 80068f4:	2309      	movlt	r3, #9
 80068f6:	f884 3b9d 	strb.w	r3, [r4, #2973]	; 0xb9d
}
int32_t OpponentScreenView::getYFromIndex(int32_t y) {
	return (83 + y * WIDTH_SQUARE);
 80068fa:	f994 1b9d 	ldrsb.w	r1, [r4, #2973]	; 0xb9d
 80068fe:	2317      	movs	r3, #23
 8006900:	2253      	movs	r2, #83	; 0x53
 8006902:	fb13 2301 	smlabb	r3, r3, r1, r2
			select.setY(getYFromIndex(y));
 8006906:	f8a4 3856 	strh.w	r3, [r4, #2134]	; 0x856
	if (count4 > 0) {
 800690a:	b1ef      	cbz	r7, 8006948 <_ZN18OpponentScreenView15handleTickEventEv+0x160>
		osMessageQueueGet(Queue4Handle, &res, NULL, osWaitForever);
 800690c:	4889      	ldr	r0, [pc, #548]	; (8006b34 <_ZN18OpponentScreenView15handleTickEventEv+0x34c>)
 800690e:	f04f 33ff 	mov.w	r3, #4294967295
 8006912:	6800      	ldr	r0, [r0, #0]
 8006914:	2200      	movs	r2, #0
 8006916:	f10d 0113 	add.w	r1, sp, #19
 800691a:	f003 fe93 	bl	800a644 <osMessageQueueGet>
		if (res == 'D') {
 800691e:	f89d 3013 	ldrb.w	r3, [sp, #19]
 8006922:	2b44      	cmp	r3, #68	; 0x44
 8006924:	d110      	bne.n	8006948 <_ZN18OpponentScreenView15handleTickEventEv+0x160>
			y += 1;
 8006926:	f894 3b9d 	ldrb.w	r3, [r4, #2973]	; 0xb9d
 800692a:	3301      	adds	r3, #1
 800692c:	b25b      	sxtb	r3, r3
			if (y > MAX_BOARD) {
 800692e:	2b09      	cmp	r3, #9
				y = MIN_BOARD;
 8006930:	bfc8      	it	gt
 8006932:	2300      	movgt	r3, #0
 8006934:	f884 3b9d 	strb.w	r3, [r4, #2973]	; 0xb9d
	return (83 + y * WIDTH_SQUARE);
 8006938:	f994 1b9d 	ldrsb.w	r1, [r4, #2973]	; 0xb9d
 800693c:	2317      	movs	r3, #23
 800693e:	2253      	movs	r2, #83	; 0x53
 8006940:	fb13 2301 	smlabb	r3, r3, r1, r2
			select.setY(getYFromIndex(y));
 8006944:	f8a4 3856 	strh.w	r3, [r4, #2134]	; 0x856
	if(currentCount != 0 && tickCount > currentCount + 15){
 8006948:	f8d5 3e64 	ldr.w	r3, [r5, #3684]	; 0xe64
 800694c:	b143      	cbz	r3, 8006960 <_ZN18OpponentScreenView15handleTickEventEv+0x178>
 800694e:	f8d5 2e60 	ldr.w	r2, [r5, #3680]	; 0xe60
 8006952:	330f      	adds	r3, #15
 8006954:	429a      	cmp	r2, r3
 8006956:	dd03      	ble.n	8006960 <_ZN18OpponentScreenView15handleTickEventEv+0x178>
    virtual ~OpponentScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006958:	f00a f89c 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
		application().gotoGameScreenScreenSlideTransitionEast();
 800695c:	f7fc fa4a 	bl	8002df4 <_ZN23FrontendApplicationBase39gotoGameScreenScreenSlideTransitionEastEv>
        container.invalidate();
 8006960:	1d20      	adds	r0, r4, #4
 8006962:	f00b f957 	bl	8011c14 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8006966:	b007      	add	sp, #28
 8006968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if (res == 'S' && desk[y][x] >= 0) {
 800696c:	2b53      	cmp	r3, #83	; 0x53
 800696e:	d18d      	bne.n	800688c <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
 8006970:	f994 3b9d 	ldrsb.w	r3, [r4, #2973]	; 0xb9d
 8006974:	f994 2b9c 	ldrsb.w	r2, [r4, #2972]	; 0xb9c
 8006978:	f04f 0e0a 	mov.w	lr, #10
 800697c:	fb0e 2e03 	mla	lr, lr, r3, r2
 8006980:	f20e 7134 	addw	r1, lr, #1844	; 0x734
 8006984:	f854 a021 	ldr.w	sl, [r4, r1, lsl #2]
 8006988:	f1ba 0f00 	cmp.w	sl, #0
 800698c:	f6ff af7e 	blt.w	800688c <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
 8006990:	f44f 70dc 	mov.w	r0, #440	; 0x1b8
 8006994:	f04f 012c 	mov.w	r1, #44	; 0x2c
 8006998:	fb03 f000 	mul.w	r0, r3, r0
 800699c:	fb01 0b02 	mla	fp, r1, r2, r0
 80069a0:	44a3      	add	fp, r4
				boxes[y][x].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 80069a2:	fb02 0001 	mla	r0, r2, r1, r0
	void setDesk(int32_t i, int32_t j, int32_t status) {
		model->setPlayer2Desk(i, j, status);
 80069a6:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80069a8:	f04f 0c01 	mov.w	ip, #1
 80069ac:	f500 603a 	add.w	r0, r0, #2976	; 0xba0
 80069b0:	f88b cbc5 	strb.w	ip, [fp, #3013]	; 0xbc5
 80069b4:	4420      	add	r0, r4
 80069b6:	f8d1 c008 	ldr.w	ip, [r1, #8]
			if(desk[y][x] > 0){
 80069ba:	d072      	beq.n	8006aa2 <_ZN18OpponentScreenView15handleTickEventEv+0x2ba>
				if(desk[y][x] == 2)
 80069bc:	f1ba 0f02 	cmp.w	sl, #2
 80069c0:	d142      	bne.n	8006a48 <_ZN18OpponentScreenView15handleTickEventEv+0x260>
					ship[0]--;
 80069c2:	f8d5 1e68 	ldr.w	r1, [r5, #3688]	; 0xe68
 80069c6:	3901      	subs	r1, #1
 80069c8:	f8c5 1e68 	str.w	r1, [r5, #3688]	; 0xe68
					if(ship[0] == 0)
 80069cc:	b919      	cbnz	r1, 80069d6 <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
        color = newColor;
 80069ce:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 80069d2:	f8c4 1750 	str.w	r1, [r4, #1872]	; 0x750
		player2Desk[i][j] = status;
 80069d6:	210a      	movs	r1, #10
 80069d8:	fb01 2103 	mla	r1, r1, r3, r2
 80069dc:	f501 7197 	add.w	r1, r1, #302	; 0x12e
 80069e0:	f04f 3eff 	mov.w	lr, #4294967295
 80069e4:	f84c e021 	str.w	lr, [ip, r1, lsl #2]
				boxes[y][x].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 80069e8:	f44f 71dc 	mov.w	r1, #440	; 0x1b8
 80069ec:	434b      	muls	r3, r1
 80069ee:	212c      	movs	r1, #44	; 0x2c
 80069f0:	fb01 3202 	mla	r2, r1, r2, r3
 80069f4:	4422      	add	r2, r4
 80069f6:	a905      	add	r1, sp, #20
 80069f8:	f8d2 3ba0 	ldr.w	r3, [r2, #2976]	; 0xba0
 80069fc:	2209      	movs	r2, #9
 80069fe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006a00:	f8ad 2014 	strh.w	r2, [sp, #20]
 8006a04:	4798      	blx	r3
				presenter->getDesk(desk);
 8006a06:	f504 51e6 	add.w	r1, r4, #7360	; 0x1cc0
 8006a0a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8006a0c:	3110      	adds	r1, #16
 8006a0e:	f7ff fed8 	bl	80067c2 <_ZN23OpponentScreenPresenter7getDeskEPA10_l>
    virtual void tearDownScreen();
	void handleTickEvent();
	int32_t getXFromIndex(int32_t);
	int32_t getYFromIndex(int32_t);
	bool checkWinner(int32_t board[][10]) {
		for (int32_t i = 0; i < 10; i++) {
 8006a12:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 8006a16:	f504 52f4 	add.w	r2, r4, #7808	; 0x1e80
 8006a1a:	3314      	adds	r3, #20
 8006a1c:	3204      	adds	r2, #4
			for (int32_t j = 0; j < 10; j++) {
 8006a1e:	f1a3 0128 	sub.w	r1, r3, #40	; 0x28
				if (board[i][j] > 0) {
 8006a22:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8006a26:	2800      	cmp	r0, #0
 8006a28:	dc49      	bgt.n	8006abe <_ZN18OpponentScreenView15handleTickEventEv+0x2d6>
			for (int32_t j = 0; j < 10; j++) {
 8006a2a:	428b      	cmp	r3, r1
 8006a2c:	d1f9      	bne.n	8006a22 <_ZN18OpponentScreenView15handleTickEventEv+0x23a>
		for (int32_t i = 0; i < 10; i++) {
 8006a2e:	3328      	adds	r3, #40	; 0x28
 8006a30:	429a      	cmp	r2, r3
 8006a32:	d1f4      	bne.n	8006a1e <_ZN18OpponentScreenView15handleTickEventEv+0x236>
	}
	bool getIsMultiPlayer() {
		return model->getIsMultiPlayer();
	}
	void setWinner(int32_t winner) {
		model->setWinner(winner);
 8006a34:	6be3      	ldr	r3, [r4, #60]	; 0x3c
		this->winner = winner;
 8006a36:	689b      	ldr	r3, [r3, #8]
 8006a38:	2201      	movs	r2, #1
 8006a3a:	f8c3 2648 	str.w	r2, [r3, #1608]	; 0x648
 8006a3e:	f00a f829 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
					application().gotoEndGameScreenScreenSlideTransitionEast();
 8006a42:	f7fc f9f7 	bl	8002e34 <_ZN23FrontendApplicationBase42gotoEndGameScreenScreenSlideTransitionEastEv>
 8006a46:	e03a      	b.n	8006abe <_ZN18OpponentScreenView15handleTickEventEv+0x2d6>
				else if(desk[y][x] == 3)
 8006a48:	f1ba 0f03 	cmp.w	sl, #3
 8006a4c:	d10b      	bne.n	8006a66 <_ZN18OpponentScreenView15handleTickEventEv+0x27e>
					ship[1]--;
 8006a4e:	f8d5 1e6c 	ldr.w	r1, [r5, #3692]	; 0xe6c
 8006a52:	3901      	subs	r1, #1
 8006a54:	f8c5 1e6c 	str.w	r1, [r5, #3692]	; 0xe6c
					if(ship[1] == 0)
 8006a58:	2900      	cmp	r1, #0
 8006a5a:	d1bc      	bne.n	80069d6 <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
 8006a5c:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006a60:	f8c4 17e8 	str.w	r1, [r4, #2024]	; 0x7e8
 8006a64:	e7b7      	b.n	80069d6 <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
				else if(desk[y][x] == 4)
 8006a66:	f1ba 0f04 	cmp.w	sl, #4
 8006a6a:	d10b      	bne.n	8006a84 <_ZN18OpponentScreenView15handleTickEventEv+0x29c>
					ship[2]--;
 8006a6c:	f8d5 1e70 	ldr.w	r1, [r5, #3696]	; 0xe70
 8006a70:	3901      	subs	r1, #1
 8006a72:	f8c5 1e70 	str.w	r1, [r5, #3696]	; 0xe70
					if(ship[2] == 0)
 8006a76:	2900      	cmp	r1, #0
 8006a78:	d1ad      	bne.n	80069d6 <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
 8006a7a:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006a7e:	f8c4 179c 	str.w	r1, [r4, #1948]	; 0x79c
 8006a82:	e7a8      	b.n	80069d6 <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
				else if(desk[y][x] == 5)
 8006a84:	f1ba 0f05 	cmp.w	sl, #5
 8006a88:	d1a5      	bne.n	80069d6 <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
					ship[3]--;
 8006a8a:	f8d5 1e74 	ldr.w	r1, [r5, #3700]	; 0xe74
 8006a8e:	3901      	subs	r1, #1
 8006a90:	f8c5 1e74 	str.w	r1, [r5, #3700]	; 0xe74
					if(ship[3] == 0)
 8006a94:	2900      	cmp	r1, #0
 8006a96:	d19e      	bne.n	80069d6 <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
 8006a98:	f5a1 3180 	sub.w	r1, r1, #65536	; 0x10000
 8006a9c:	f8c4 1834 	str.w	r1, [r4, #2100]	; 0x834
 8006aa0:	e799      	b.n	80069d6 <_ZN18OpponentScreenView15handleTickEventEv+0x1ee>
		player2Desk[i][j] = status;
 8006aa2:	f50e 7e97 	add.w	lr, lr, #302	; 0x12e
 8006aa6:	f06f 0301 	mvn.w	r3, #1
 8006aaa:	f84c 302e 	str.w	r3, [ip, lr, lsl #2]
				boxes[y][x].setBitmap(touchgfx::Bitmap(BITMAP_MISS_GRAY_ID));
 8006aae:	f8db 3ba0 	ldr.w	r3, [fp, #2976]	; 0xba0
 8006ab2:	220b      	movs	r2, #11
 8006ab4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006ab6:	f8ad 2014 	strh.w	r2, [sp, #20]
 8006aba:	a905      	add	r1, sp, #20
 8006abc:	4798      	blx	r3
			boxes[y][x].setPosition(getXFromIndex(x), getYFromIndex(y), 23, 23);
 8006abe:	f994 1b9c 	ldrsb.w	r1, [r4, #2972]	; 0xb9c
 8006ac2:	f994 2b9d 	ldrsb.w	r2, [r4, #2973]	; 0xb9d
 8006ac6:	f04f 0a2c 	mov.w	sl, #44	; 0x2c
 8006aca:	f44f 7bdc 	mov.w	fp, #440	; 0x1b8
 8006ace:	fb11 f00a 	smulbb	r0, r1, sl
	return (83 + y * WIDTH_SQUARE);
 8006ad2:	2317      	movs	r3, #23
			boxes[y][x].setPosition(getXFromIndex(x), getYFromIndex(y), 23, 23);
 8006ad4:	fb0b 0002 	mla	r0, fp, r2, r0
 8006ad8:	f04f 0c53 	mov.w	ip, #83	; 0x53
 8006adc:	fb03 c202 	mla	r2, r3, r2, ip
 8006ae0:	f500 603a 	add.w	r0, r0, #2976	; 0xba0
 8006ae4:	f04f 0c05 	mov.w	ip, #5
 8006ae8:	fb03 c101 	mla	r1, r3, r1, ip
 8006aec:	9300      	str	r3, [sp, #0]
 8006aee:	4420      	add	r0, r4
 8006af0:	f7fb fc59 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
			boxes[y][x].setScalingAlgorithm(
 8006af4:	f994 3b9d 	ldrsb.w	r3, [r4, #2973]	; 0xb9d
 8006af8:	f994 2b9c 	ldrsb.w	r2, [r4, #2972]	; 0xb9c
 8006afc:	fb0b fb03 	mul.w	fp, fp, r3
 8006b00:	fb02 b00a 	mla	r0, r2, sl, fp
					touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006b04:	fb0a bb02 	mla	fp, sl, r2, fp
 8006b08:	44a3      	add	fp, r4
			boxes[y][x].setScalingAlgorithm(
 8006b0a:	f500 603a 	add.w	r0, r0, #2976	; 0xba0
					touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006b0e:	f8db 3ba0 	ldr.w	r3, [fp, #2976]	; 0xba0
			boxes[y][x].setScalingAlgorithm(
 8006b12:	2100      	movs	r1, #0
 8006b14:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006b16:	4420      	add	r0, r4
 8006b18:	4798      	blx	r3
 8006b1a:	2300      	movs	r3, #0
 8006b1c:	f884 3875 	strb.w	r3, [r4, #2165]	; 0x875
			if(currentCount == 0){
 8006b20:	f8d5 3e64 	ldr.w	r3, [r5, #3684]	; 0xe64
 8006b24:	2b00      	cmp	r3, #0
 8006b26:	f47f aeb1 	bne.w	800688c <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
				currentCount = tickCount;
 8006b2a:	f8d5 3e60 	ldr.w	r3, [r5, #3680]	; 0xe60
 8006b2e:	f8c5 3e64 	str.w	r3, [r5, #3684]	; 0xe64
 8006b32:	e6ab      	b.n	800688c <_ZN18OpponentScreenView15handleTickEventEv+0xa4>
 8006b34:	20003e48 	.word	0x20003e48
 8006b38:	20003e4c 	.word	0x20003e4c
 8006b3c:	20003e50 	.word	0x20003e50
 8006b40:	20003e3c 	.word	0x20003e3c
 8006b44:	20003e40 	.word	0x20003e40
 8006b48:	20003e44 	.word	0x20003e44

08006b4c <_ZN18OpponentScreenViewC1Ev>:
OpponentScreenView::OpponentScreenView()
 8006b4c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006b50:	4605      	mov	r5, r0
 8006b52:	f7fd fdb7 	bl	80046c4 <_ZN22OpponentScreenViewBaseC1Ev>
 8006b56:	4b18      	ldr	r3, [pc, #96]	; (8006bb8 <_ZN18OpponentScreenViewC1Ev+0x6c>)
 8006b58:	602b      	str	r3, [r5, #0]
 8006b5a:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8006b5e:	2100      	movs	r1, #0
 8006b60:	f605 200c 	addw	r0, r5, #2572	; 0xa0c
 8006b64:	f01a feee 	bl	8021944 <memset>
 8006b68:	f505 56e6 	add.w	r6, r5, #7360	; 0x1cc0
 8006b6c:	f505 643a 	add.w	r4, r5, #2976	; 0xba0
 8006b70:	3610      	adds	r6, #16
 8006b72:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8006b76:	f504 78dc 	add.w	r8, r4, #440	; 0x1b8
 8006b7a:	4620      	mov	r0, r4
 8006b7c:	a901      	add	r1, sp, #4
 8006b7e:	342c      	adds	r4, #44	; 0x2c
 8006b80:	f8ad 7004 	strh.w	r7, [sp, #4]
 8006b84:	f007 fa62 	bl	800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8006b88:	4544      	cmp	r4, r8
 8006b8a:	d1f6      	bne.n	8006b7a <_ZN18OpponentScreenViewC1Ev+0x2e>
 8006b8c:	42b4      	cmp	r4, r6
 8006b8e:	d1f2      	bne.n	8006b76 <_ZN18OpponentScreenViewC1Ev+0x2a>
	tickCount = 0;
 8006b90:	f505 5380 	add.w	r3, r5, #4096	; 0x1000
 8006b94:	2200      	movs	r2, #0
}
 8006b96:	4628      	mov	r0, r5
	tickCount = 0;
 8006b98:	f8c3 2e60 	str.w	r2, [r3, #3680]	; 0xe60
	currentCount = 0;
 8006b9c:	f8c3 2e64 	str.w	r2, [r3, #3684]	; 0xe64
		ship[i] = 0;
 8006ba0:	f8c3 2e68 	str.w	r2, [r3, #3688]	; 0xe68
 8006ba4:	f8c3 2e6c 	str.w	r2, [r3, #3692]	; 0xe6c
 8006ba8:	f8c3 2e70 	str.w	r2, [r3, #3696]	; 0xe70
 8006bac:	f8c3 2e74 	str.w	r2, [r3, #3700]	; 0xe74
}
 8006bb0:	b002      	add	sp, #8
 8006bb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006bb6:	bf00      	nop
 8006bb8:	08024714 	.word	0x08024714

08006bbc <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_>:
	operator()(_UniformRandomNumberGenerator& __urng)
 8006bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	const __uctype __urange
 8006bbe:	e9d0 2300 	ldrd	r2, r3, [r0]
 8006bc2:	1a9b      	subs	r3, r3, r2
	if (__urngrange > __urange)
 8006bc4:	1c5a      	adds	r2, r3, #1
	operator()(_UniformRandomNumberGenerator& __urng)
 8006bc6:	4605      	mov	r5, r0
 8006bc8:	460e      	mov	r6, r1
	if (__urngrange > __urange)
 8006bca:	d010      	beq.n	8006bee <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_+0x32>
	    const __uctype __uerange = __urange + 1; // __urange can be zero
 8006bcc:	3301      	adds	r3, #1
	    const __uctype __scaling = __urngrange / __uerange;
 8006bce:	f04f 30ff 	mov.w	r0, #4294967295
 8006bd2:	fbb0 f7f3 	udiv	r7, r0, r3
	    const __uctype __past = __uerange * __scaling;
 8006bd6:	fb07 f403 	mul.w	r4, r7, r3
	      __ret = __uctype(__urng()) - __urngmin;
 8006bda:	4630      	mov	r0, r6
 8006bdc:	f7fe fff4 	bl	8005bc8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
	    while (__ret >= __past);
 8006be0:	4284      	cmp	r4, r0
 8006be2:	d9fa      	bls.n	8006bda <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_+0x1e>
	    __ret /= __scaling;
 8006be4:	fbb0 f0f7 	udiv	r0, r0, r7
	return __ret + __param.a();
 8006be8:	682b      	ldr	r3, [r5, #0]
        { return this->operator()(__urng, _M_param); }
 8006bea:	4418      	add	r0, r3
 8006bec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	  __ret = __uctype(__urng()) - __urngmin;
 8006bee:	4608      	mov	r0, r1
 8006bf0:	f7fe ffea 	bl	8005bc8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
 8006bf4:	e7f8      	b.n	8006be8 <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_+0x2c>
	...

08006bf8 <_Z15randomIndexShipPA10_ii>:
std::tuple<int, int, int> randomIndexShip(int board[][10], int size_ship) {
 8006bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006bfc:	f5ad 5d9c 	sub.w	sp, sp, #4992	; 0x1380
 8006c00:	b086      	sub	sp, #24
 8006c02:	4691      	mov	r9, r2
 8006c04:	4a3d      	ldr	r2, [pc, #244]	; (8006cfc <_Z15randomIndexShipPA10_ii+0x104>)
	: allocator_type(__a), _M_p(__dat) { }
 8006c06:	f60d 14d4 	addw	r4, sp, #2516	; 0x9d4
 8006c0a:	4605      	mov	r5, r0
 8006c0c:	4688      	mov	r8, r1
 8006c0e:	f60d 10dc 	addw	r0, sp, #2524	; 0x9dc
 8006c12:	1fd1      	subs	r1, r2, #7
 8006c14:	6020      	str	r0, [r4, #0]
 8006c16:	f01a fdc2 	bl	802179e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
      { _M_string_length = __length; }
 8006c1a:	2307      	movs	r3, #7
 8006c1c:	6063      	str	r3, [r4, #4]
 8006c1e:	6823      	ldr	r3, [r4, #0]
 8006c20:	2200      	movs	r2, #0
 8006c22:	71da      	strb	r2, [r3, #7]
    random_device() { _M_init("default"); }
 8006c24:	4621      	mov	r1, r4
 8006c26:	a804      	add	r0, sp, #16
 8006c28:	f01a fd96 	bl	8021758 <_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
      { _M_dispose(); }
 8006c2c:	4620      	mov	r0, r4
 8006c2e:	f01a fda2 	bl	8021776 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    { return this->_M_getval(); }
 8006c32:	a804      	add	r0, sp, #16
 8006c34:	f01a fd92 	bl	802175c <_ZNSt13random_device9_M_getvalEv>
      _M_x[0] = __detail::__mod<_UIntType,
 8006c38:	6020      	str	r0, [r4, #0]
	  __x *= __f;
 8006c3a:	4831      	ldr	r0, [pc, #196]	; (8006d00 <_Z15randomIndexShipPA10_ii+0x108>)
 8006c3c:	4621      	mov	r1, r4
      for (size_t __i = 1; __i < state_size; ++__i)
 8006c3e:	2201      	movs	r2, #1
	  _UIntType __x = _M_x[__i - 1];
 8006c40:	680b      	ldr	r3, [r1, #0]
	  __x ^= __x >> (__w - 2);
 8006c42:	ea83 7393 	eor.w	r3, r3, r3, lsr #30
	  __x += __detail::__mod<_UIntType, __n>(__i);
 8006c46:	fb00 2303 	mla	r3, r0, r3, r2
      for (size_t __i = 1; __i < state_size; ++__i)
 8006c4a:	3201      	adds	r2, #1
 8006c4c:	f5b2 7f1c 	cmp.w	r2, #624	; 0x270
	  _M_x[__i] = __detail::__mod<_UIntType,
 8006c50:	f841 3f04 	str.w	r3, [r1, #4]!
      for (size_t __i = 1; __i < state_size; ++__i)
 8006c54:	d1f4      	bne.n	8006c40 <_Z15randomIndexShipPA10_ii+0x48>
	: _M_a(__a), _M_b(__b)
 8006c56:	466b      	mov	r3, sp
      _M_p = state_size;
 8006c58:	f8c4 29c0 	str.w	r2, [r4, #2496]	; 0x9c0
 8006c5c:	2109      	movs	r1, #9
 8006c5e:	2200      	movs	r2, #0
 8006c60:	e9c3 2100 	strd	r2, r1, [r3]
 8006c64:	9202      	str	r2, [sp, #8]
 8006c66:	2201      	movs	r2, #1
 8006c68:	ab02      	add	r3, sp, #8
						if (board[x][y + i] != 0) {
 8006c6a:	f04f 0a28 	mov.w	sl, #40	; 0x28
 8006c6e:	605a      	str	r2, [r3, #4]
		x = disIndex(gen);
 8006c70:	4621      	mov	r1, r4
 8006c72:	4668      	mov	r0, sp
 8006c74:	f7ff ffa2 	bl	8006bbc <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_>
		y = disIndex(gen);
 8006c78:	4621      	mov	r1, r4
		x = disIndex(gen);
 8006c7a:	4606      	mov	r6, r0
		y = disIndex(gen);
 8006c7c:	4668      	mov	r0, sp
 8006c7e:	f7ff ff9d 	bl	8006bbc <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_>
		direction = disDirec(gen);
 8006c82:	4621      	mov	r1, r4
		y = disIndex(gen);
 8006c84:	4607      	mov	r7, r0
		direction = disDirec(gen);
 8006c86:	a802      	add	r0, sp, #8
 8006c88:	f7ff ff98 	bl	8006bbc <_ZNSt24uniform_int_distributionIiEclISt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEEEiRT_>
			int value = direction % 2;
 8006c8c:	2800      	cmp	r0, #0
 8006c8e:	f000 0301 	and.w	r3, r0, #1
 8006c92:	4619      	mov	r1, r3
						if (board[x][y + i] != 0) {
 8006c94:	fb0a f206 	mul.w	r2, sl, r6
			int value = direction % 2;
 8006c98:	bfb8      	it	lt
 8006c9a:	4259      	neglt	r1, r3
			switch (value) {
 8006c9c:	b1a3      	cbz	r3, 8006cc8 <_Z15randomIndexShipPA10_ii+0xd0>
 8006c9e:	2901      	cmp	r1, #1
 8006ca0:	d1e6      	bne.n	8006c70 <_Z15randomIndexShipPA10_ii+0x78>
				if (x + size_ship < 10) {
 8006ca2:	eb06 0309 	add.w	r3, r6, r9
 8006ca6:	2b09      	cmp	r3, #9
 8006ca8:	dce2      	bgt.n	8006c70 <_Z15randomIndexShipPA10_ii+0x78>
 8006caa:	230a      	movs	r3, #10
 8006cac:	fb03 7306 	mla	r3, r3, r6, r7
 8006cb0:	eb08 0383 	add.w	r3, r8, r3, lsl #2
					for (int i = 0; i < size_ship; i++) {
 8006cb4:	2200      	movs	r2, #0
 8006cb6:	454a      	cmp	r2, r9
 8006cb8:	da16      	bge.n	8006ce8 <_Z15randomIndexShipPA10_ii+0xf0>
						if (board[x + i][y] != 0) {
 8006cba:	fb0a f002 	mul.w	r0, sl, r2
 8006cbe:	5818      	ldr	r0, [r3, r0]
 8006cc0:	2800      	cmp	r0, #0
 8006cc2:	d1d5      	bne.n	8006c70 <_Z15randomIndexShipPA10_ii+0x78>
					for (int i = 0; i < size_ship; i++) {
 8006cc4:	3201      	adds	r2, #1
 8006cc6:	e7f6      	b.n	8006cb6 <_Z15randomIndexShipPA10_ii+0xbe>
				if (y + size_ship < 10) {
 8006cc8:	eb07 0109 	add.w	r1, r7, r9
 8006ccc:	2909      	cmp	r1, #9
 8006cce:	dccf      	bgt.n	8006c70 <_Z15randomIndexShipPA10_ii+0x78>
 8006cd0:	eb02 0287 	add.w	r2, r2, r7, lsl #2
 8006cd4:	4442      	add	r2, r8
					for (int i = 0; i < size_ship; i++) {
 8006cd6:	454b      	cmp	r3, r9
 8006cd8:	da05      	bge.n	8006ce6 <_Z15randomIndexShipPA10_ii+0xee>
						if (board[x][y + i] != 0) {
 8006cda:	f852 1b04 	ldr.w	r1, [r2], #4
 8006cde:	2900      	cmp	r1, #0
 8006ce0:	d1c6      	bne.n	8006c70 <_Z15randomIndexShipPA10_ii+0x78>
					for (int i = 0; i < size_ship; i++) {
 8006ce2:	3301      	adds	r3, #1
 8006ce4:	e7f7      	b.n	8006cd6 <_Z15randomIndexShipPA10_ii+0xde>
 8006ce6:	2100      	movs	r1, #0
}
 8006ce8:	4628      	mov	r0, r5
      constexpr _Head_base(const _Head_base&) = default;
      constexpr _Head_base(_Head_base&&) = default;

      template<typename _UHead>
        constexpr _Head_base(_UHead&& __h)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
 8006cea:	e9c5 1700 	strd	r1, r7, [r5]
 8006cee:	60ae      	str	r6, [r5, #8]
 8006cf0:	f50d 5d9c 	add.w	sp, sp, #4992	; 0x1380
 8006cf4:	b006      	add	sp, #24
 8006cf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006cfa:	bf00      	nop
 8006cfc:	080245f3 	.word	0x080245f3
 8006d00:	6c078965 	.word	0x6c078965

08006d04 <_ZN18OpponentScreenView11setupScreenEv>:
{
 8006d04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d08:	ed2d 8b02 	vpush	{d8}
 8006d0c:	4604      	mov	r4, r0
 8006d0e:	b089      	sub	sp, #36	; 0x24
    OpponentScreenViewBase::setupScreen();
 8006d10:	f7fd fcad 	bl	800466e <_ZN22OpponentScreenViewBase11setupScreenEv>
	x = 0;
 8006d14:	2300      	movs	r3, #0
 8006d16:	f8a4 3b9c 	strh.w	r3, [r4, #2972]	; 0xb9c
		return model->getGameMode();
 8006d1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006d1c:	f8df 833c 	ldr.w	r8, [pc, #828]	; 800705c <_ZN18OpponentScreenView11setupScreenEv+0x358>
        return this->gameMode;
 8006d20:	689b      	ldr	r3, [r3, #8]
	gameMode = presenter->getGameMode();
 8006d22:	f504 5580 	add.w	r5, r4, #4096	; 0x1000
 8006d26:	f8d3 364c 	ldr.w	r3, [r3, #1612]	; 0x64c
 8006d2a:	f8c5 3e78 	str.w	r3, [r5, #3704]	; 0xe78
 8006d2e:	f8d8 3000 	ldr.w	r3, [r8]
	Unicode::snprintf(txtRemainShip1Buffer, TXTREMAINSHIP1_SIZE, "%s", touchgfx::TypedText(T_DESTROYER).getText());
 8006d32:	f604 097c 	addw	r9, r4, #2172	; 0x87c
 8006d36:	b92b      	cbnz	r3, 8006d44 <_ZN18OpponentScreenView11setupScreenEv+0x40>
 8006d38:	4bc0      	ldr	r3, [pc, #768]	; (800703c <_ZN18OpponentScreenView11setupScreenEv+0x338>)
 8006d3a:	4ac1      	ldr	r2, [pc, #772]	; (8007040 <_ZN18OpponentScreenView11setupScreenEv+0x33c>)
 8006d3c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006d3e:	48c1      	ldr	r0, [pc, #772]	; (8007044 <_ZN18OpponentScreenView11setupScreenEv+0x340>)
 8006d40:	f01a fd64 	bl	802180c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006d44:	4fc0      	ldr	r7, [pc, #768]	; (8007048 <_ZN18OpponentScreenView11setupScreenEv+0x344>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006d46:	883b      	ldrh	r3, [r7, #0]
 8006d48:	2b12      	cmp	r3, #18
 8006d4a:	d803      	bhi.n	8006d54 <_ZN18OpponentScreenView11setupScreenEv+0x50>
 8006d4c:	4bbf      	ldr	r3, [pc, #764]	; (800704c <_ZN18OpponentScreenView11setupScreenEv+0x348>)
 8006d4e:	4abc      	ldr	r2, [pc, #752]	; (8007040 <_ZN18OpponentScreenView11setupScreenEv+0x33c>)
 8006d50:	2161      	movs	r1, #97	; 0x61
 8006d52:	e7f4      	b.n	8006d3e <_ZN18OpponentScreenView11setupScreenEv+0x3a>
        return texts->getText(typedTextId);
 8006d54:	4ebe      	ldr	r6, [pc, #760]	; (8007050 <_ZN18OpponentScreenView11setupScreenEv+0x34c>)
 8006d56:	2112      	movs	r1, #18
 8006d58:	6830      	ldr	r0, [r6, #0]
 8006d5a:	f7fe fc95 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 8006d5e:	4abd      	ldr	r2, [pc, #756]	; (8007054 <_ZN18OpponentScreenView11setupScreenEv+0x350>)
 8006d60:	4603      	mov	r3, r0
 8006d62:	2132      	movs	r1, #50	; 0x32
 8006d64:	4648      	mov	r0, r9
 8006d66:	f00c ff8f 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006d6a:	f8d8 3000 	ldr.w	r3, [r8]
	Unicode::snprintf(txtRemainShip2Buffer, TXTREMAINSHIP2_SIZE, "%s", touchgfx::TypedText(T_CRUISER).getText());
 8006d6e:	f604 1944 	addw	r9, r4, #2372	; 0x944
 8006d72:	2b00      	cmp	r3, #0
 8006d74:	d0e0      	beq.n	8006d38 <_ZN18OpponentScreenView11setupScreenEv+0x34>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006d76:	883b      	ldrh	r3, [r7, #0]
 8006d78:	2b11      	cmp	r3, #17
 8006d7a:	d9e7      	bls.n	8006d4c <_ZN18OpponentScreenView11setupScreenEv+0x48>
        return texts->getText(typedTextId);
 8006d7c:	2111      	movs	r1, #17
 8006d7e:	6830      	ldr	r0, [r6, #0]
 8006d80:	f7fe fc82 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 8006d84:	4ab3      	ldr	r2, [pc, #716]	; (8007054 <_ZN18OpponentScreenView11setupScreenEv+0x350>)
 8006d86:	4603      	mov	r3, r0
 8006d88:	2132      	movs	r1, #50	; 0x32
 8006d8a:	4648      	mov	r0, r9
 8006d8c:	f00c ff7c 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006d90:	f8d8 3000 	ldr.w	r3, [r8]
	Unicode::snprintf(txtRemainShip3Buffer, TXTREMAINSHIP3_SIZE, "%s", touchgfx::TypedText(T_BATTLESHIP).getText());
 8006d94:	f504 690e 	add.w	r9, r4, #2272	; 0x8e0
 8006d98:	2b00      	cmp	r3, #0
 8006d9a:	d0cd      	beq.n	8006d38 <_ZN18OpponentScreenView11setupScreenEv+0x34>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006d9c:	883b      	ldrh	r3, [r7, #0]
 8006d9e:	2b10      	cmp	r3, #16
 8006da0:	d9d4      	bls.n	8006d4c <_ZN18OpponentScreenView11setupScreenEv+0x48>
        return texts->getText(typedTextId);
 8006da2:	2110      	movs	r1, #16
 8006da4:	6830      	ldr	r0, [r6, #0]
 8006da6:	f7fe fc6f 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 8006daa:	4aaa      	ldr	r2, [pc, #680]	; (8007054 <_ZN18OpponentScreenView11setupScreenEv+0x350>)
 8006dac:	4603      	mov	r3, r0
 8006dae:	2132      	movs	r1, #50	; 0x32
 8006db0:	4648      	mov	r0, r9
 8006db2:	f00c ff69 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006db6:	f8d8 3000 	ldr.w	r3, [r8]
	Unicode::snprintf(txtRemainShip4Buffer, TXTREMAINSHIP4_SIZE, "%s", touchgfx::TypedText(T_AIRCRAFT_CARRIER).getText());
 8006dba:	f604 19a8 	addw	r9, r4, #2472	; 0x9a8
 8006dbe:	2b00      	cmp	r3, #0
 8006dc0:	d0ba      	beq.n	8006d38 <_ZN18OpponentScreenView11setupScreenEv+0x34>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006dc2:	883b      	ldrh	r3, [r7, #0]
 8006dc4:	2b0f      	cmp	r3, #15
 8006dc6:	d9c1      	bls.n	8006d4c <_ZN18OpponentScreenView11setupScreenEv+0x48>
        return texts->getText(typedTextId);
 8006dc8:	210f      	movs	r1, #15
 8006dca:	6830      	ldr	r0, [r6, #0]
 8006dcc:	f7fe fc5c 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 8006dd0:	4aa0      	ldr	r2, [pc, #640]	; (8007054 <_ZN18OpponentScreenView11setupScreenEv+0x350>)
 8006dd2:	4603      	mov	r3, r0
 8006dd4:	2132      	movs	r1, #50	; 0x32
 8006dd6:	4648      	mov	r0, r9
 8006dd8:	f00c ff56 	bl	8013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	if (gameMode == 0) {
 8006ddc:	f8d5 3e78 	ldr.w	r3, [r5, #3704]	; 0xe78
 8006de0:	2b00      	cmp	r3, #0
 8006de2:	d141      	bne.n	8006e68 <_ZN18OpponentScreenView11setupScreenEv+0x164>
		for (int i = 2; i <= 5; i++) {
 8006de4:	f04f 0802 	mov.w	r8, #2
			std::tie(x, y, direction) = randomIndexShip(board, i);
 8006de8:	f604 270c 	addw	r7, r4, #2572	; 0xa0c
 8006dec:	260a      	movs	r6, #10
 8006dee:	4642      	mov	r2, r8
 8006df0:	4639      	mov	r1, r7
 8006df2:	a805      	add	r0, sp, #20
 8006df4:	f7ff ff00 	bl	8006bf8 <_Z15randomIndexShipPA10_ii>
			if (i == 2) {
 8006df8:	f1b8 0f02 	cmp.w	r8, #2
      template<typename _UHead, typename... _UTails>
	_GLIBCXX20_CONSTEXPR
        void
        _M_assign(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
        {
	  _M_head(*this) = std::forward<_UHead>
 8006dfc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
	_GLIBCXX20_CONSTEXPR
        void
        _M_assign(_Tuple_impl<_Idx, _UHead>&& __in)
        {
	  _M_head(*this)
	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
 8006e00:	9805      	ldr	r0, [sp, #20]
 8006e02:	f040 80bc 	bne.w	8006f7e <_ZN18OpponentScreenView11setupScreenEv+0x27a>
				switch (direction) {
 8006e06:	2800      	cmp	r0, #0
 8006e08:	f000 8097 	beq.w	8006f3a <_ZN18OpponentScreenView11setupScreenEv+0x236>
 8006e0c:	2801      	cmp	r0, #1
 8006e0e:	d121      	bne.n	8006e54 <_ZN18OpponentScreenView11setupScreenEv+0x150>
		model->setPlayer2Desk(i, j, status);
 8006e10:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006e12:	6898      	ldr	r0, [r3, #8]
		player2Desk[i][j] = status;
 8006e14:	fb06 1302 	mla	r3, r6, r2, r1
 8006e18:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
						board[x + j][y] = i;
 8006e1c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006e20:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 8006e24:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
 8006e28:	fb02 6306 	mla	r3, r2, r6, r6
 8006e2c:	440b      	add	r3, r1
 8006e2e:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
 8006e32:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006e36:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 8006e3a:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
	return (83 + y * WIDTH_SQUARE);
 8006e3e:	2317      	movs	r3, #23
 8006e40:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 8006e42:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 8006e44:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 8006e46:	3105      	adds	r1, #5
					boat2_r.setXY(getXFromIndex(y), getYFromIndex(x));
 8006e48:	b212      	sxth	r2, r2
 8006e4a:	b209      	sxth	r1, r1
 8006e4c:	f504 7077 	add.w	r0, r4, #988	; 0x3dc
					boat5.setXY(getXFromIndex(y), getYFromIndex(x));
 8006e50:	f7fb fa9c 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
		for (int i = 2; i <= 5; i++) {
 8006e54:	f108 0801 	add.w	r8, r8, #1
 8006e58:	f1b8 0f06 	cmp.w	r8, #6
 8006e5c:	d1c7      	bne.n	8006dee <_ZN18OpponentScreenView11setupScreenEv+0xea>
		model->setGameMode(gameMode);
 8006e5e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
        this->gameMode = gameMode;
 8006e60:	689b      	ldr	r3, [r3, #8]
 8006e62:	2201      	movs	r2, #1
 8006e64:	f8c3 264c 	str.w	r2, [r3, #1612]	; 0x64c
	presenter->getDesk(desk);
 8006e68:	f504 56e6 	add.w	r6, r4, #7360	; 0x1cc0
 8006e6c:	3610      	adds	r6, #16
 8006e6e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8006e70:	4631      	mov	r1, r6
 8006e72:	f7ff fca6 	bl	80067c2 <_ZN23OpponentScreenPresenter7getDeskEPA10_l>
	for (int i = 0; i < 10; i++) {
 8006e76:	f504 6b3a 	add.w	fp, r4, #2976	; 0xba0
 8006e7a:	9603      	str	r6, [sp, #12]
 8006e7c:	f04f 0800 	mov.w	r8, #0
		for (int j = 0; j < 10; j++) {
 8006e80:	eb08 0748 	add.w	r7, r8, r8, lsl #1
 8006e84:	ebc8 07c7 	rsb	r7, r8, r7, lsl #3
 8006e88:	3753      	adds	r7, #83	; 0x53
 8006e8a:	b23b      	sxth	r3, r7
 8006e8c:	ee08 3a10 	vmov	s16, r3
	for (int i = 0; i < 10; i++) {
 8006e90:	9f03      	ldr	r7, [sp, #12]
 8006e92:	f5ab 6a3a 	sub.w	sl, fp, #2976	; 0xba0
 8006e96:	465e      	mov	r6, fp
 8006e98:	f04f 0905 	mov.w	r9, #5
			if(desk[i][j] == 2)
 8006e9c:	f857 3b04 	ldr.w	r3, [r7], #4
 8006ea0:	2b02      	cmp	r3, #2
 8006ea2:	f040 8159 	bne.w	8007158 <_ZN18OpponentScreenView11setupScreenEv+0x454>
				ship[0]++;
 8006ea6:	f8d5 3e68 	ldr.w	r3, [r5, #3688]	; 0xe68
 8006eaa:	3301      	adds	r3, #1
 8006eac:	f8c5 3e68 	str.w	r3, [r5, #3688]	; 0xe68
			boxes[i][j].setPosition(getXFromIndex(j), getYFromIndex(i), 23, 23);
 8006eb0:	2317      	movs	r3, #23
 8006eb2:	ee18 2a10 	vmov	r2, s16
 8006eb6:	fa0f f189 	sxth.w	r1, r9
 8006eba:	4630      	mov	r0, r6
 8006ebc:	9300      	str	r3, [sp, #0]
 8006ebe:	f7fb fa72 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
					touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006ec2:	f8da 3ba0 	ldr.w	r3, [sl, #2976]	; 0xba0
			boxes[i][j].setScalingAlgorithm(
 8006ec6:	4630      	mov	r0, r6
 8006ec8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006eca:	2100      	movs	r1, #0
		for (int j = 0; j < 10; j++) {
 8006ecc:	f109 0917 	add.w	r9, r9, #23
			boxes[i][j].setScalingAlgorithm(
 8006ed0:	4798      	blx	r3
		for (int j = 0; j < 10; j++) {
 8006ed2:	fa1f f989 	uxth.w	r9, r9
        container.add(d);
 8006ed6:	4631      	mov	r1, r6
 8006ed8:	1d20      	adds	r0, r4, #4
 8006eda:	f005 fe49 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006ede:	f1b9 0feb 	cmp.w	r9, #235	; 0xeb
 8006ee2:	f106 062c 	add.w	r6, r6, #44	; 0x2c
 8006ee6:	f10a 0a2c 	add.w	sl, sl, #44	; 0x2c
 8006eea:	d1d7      	bne.n	8006e9c <_ZN18OpponentScreenView11setupScreenEv+0x198>
	for (int i = 0; i < 10; i++) {
 8006eec:	9b03      	ldr	r3, [sp, #12]
 8006eee:	f108 0801 	add.w	r8, r8, #1
 8006ef2:	3328      	adds	r3, #40	; 0x28
 8006ef4:	f1b8 0f0a 	cmp.w	r8, #10
 8006ef8:	9303      	str	r3, [sp, #12]
 8006efa:	f50b 7bdc 	add.w	fp, fp, #440	; 0x1b8
 8006efe:	d1bf      	bne.n	8006e80 <_ZN18OpponentScreenView11setupScreenEv+0x17c>
		if (ship[0] == 0) {
 8006f00:	f8d5 1e68 	ldr.w	r1, [r5, #3688]	; 0xe68
		if (ship[1] == 0) {
 8006f04:	f8d5 0e6c 	ldr.w	r0, [r5, #3692]	; 0xe6c
		if (ship[2] == 0) {
 8006f08:	f8d5 6e70 	ldr.w	r6, [r5, #3696]	; 0xe70
 8006f0c:	4b52      	ldr	r3, [pc, #328]	; (8007058 <_ZN18OpponentScreenView11setupScreenEv+0x354>)
		if (ship[3] == 0) {
 8006f0e:	f8d5 5e74 	ldr.w	r5, [r5, #3700]	; 0xe74
 8006f12:	2204      	movs	r2, #4
		if (ship[0] == 0) {
 8006f14:	b909      	cbnz	r1, 8006f1a <_ZN18OpponentScreenView11setupScreenEv+0x216>
 8006f16:	f8c4 3750 	str.w	r3, [r4, #1872]	; 0x750
		if (ship[1] == 0) {
 8006f1a:	b908      	cbnz	r0, 8006f20 <_ZN18OpponentScreenView11setupScreenEv+0x21c>
 8006f1c:	f8c4 37e8 	str.w	r3, [r4, #2024]	; 0x7e8
		if (ship[2] == 0) {
 8006f20:	b90e      	cbnz	r6, 8006f26 <_ZN18OpponentScreenView11setupScreenEv+0x222>
 8006f22:	f8c4 379c 	str.w	r3, [r4, #1948]	; 0x79c
		if (ship[3] == 0) {
 8006f26:	b90d      	cbnz	r5, 8006f2c <_ZN18OpponentScreenView11setupScreenEv+0x228>
 8006f28:	f8c4 3834 	str.w	r3, [r4, #2100]	; 0x834
	for(int i = 0; i < 4; i++)
 8006f2c:	3a01      	subs	r2, #1
 8006f2e:	d1f1      	bne.n	8006f14 <_ZN18OpponentScreenView11setupScreenEv+0x210>
}
 8006f30:	b009      	add	sp, #36	; 0x24
 8006f32:	ecbd 8b02 	vpop	{d8}
 8006f36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		model->setPlayer2Desk(i, j, status);
 8006f3a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006f3c:	f8d3 c008 	ldr.w	ip, [r3, #8]
		player2Desk[i][j] = status;
 8006f40:	fb06 f302 	mul.w	r3, r6, r2
 8006f44:	1858      	adds	r0, r3, r1
 8006f46:	f500 7e97 	add.w	lr, r0, #302	; 0x12e
						board[x][y + j] = i;
 8006f4a:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8006f4e:	f84c 802e 	str.w	r8, [ip, lr, lsl #2]
 8006f52:	f8c0 8a0c 	str.w	r8, [r0, #2572]	; 0xa0c
						presenter->setDesk(x, y + j, i);
 8006f56:	1c48      	adds	r0, r1, #1
 8006f58:	4403      	add	r3, r0
 8006f5a:	f503 7097 	add.w	r0, r3, #302	; 0x12e
						board[x][y + j] = i;
 8006f5e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006f62:	f84c 8020 	str.w	r8, [ip, r0, lsl #2]
 8006f66:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
	return (83 + y * WIDTH_SQUARE);
 8006f6a:	2317      	movs	r3, #23
 8006f6c:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 8006f6e:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 8006f70:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 8006f72:	3105      	adds	r1, #5
					boat2.setXY(getXFromIndex(y), getYFromIndex(x));
 8006f74:	b212      	sxth	r2, r2
 8006f76:	b209      	sxth	r1, r1
 8006f78:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8006f7c:	e768      	b.n	8006e50 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
			} else if (i == 3) {
 8006f7e:	f1b8 0f03 	cmp.w	r8, #3
 8006f82:	d16d      	bne.n	8007060 <_ZN18OpponentScreenView11setupScreenEv+0x35c>
				switch (direction) {
 8006f84:	b370      	cbz	r0, 8006fe4 <_ZN18OpponentScreenView11setupScreenEv+0x2e0>
 8006f86:	2801      	cmp	r0, #1
 8006f88:	f47f af64 	bne.w	8006e54 <_ZN18OpponentScreenView11setupScreenEv+0x150>
 8006f8c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006f8e:	6898      	ldr	r0, [r3, #8]
 8006f90:	fb06 1302 	mla	r3, r6, r2, r1
 8006f94:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
						board[x + j][y] = i;
 8006f98:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006f9c:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 8006fa0:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
 8006fa4:	fb02 6306 	mla	r3, r2, r6, r6
 8006fa8:	440b      	add	r3, r1
 8006faa:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
 8006fae:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006fb2:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 8006fb6:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
						presenter->setDesk(x + j, y, i);
 8006fba:	1c93      	adds	r3, r2, #2
 8006fbc:	fb06 1303 	mla	r3, r6, r3, r1
 8006fc0:	f503 7c97 	add.w	ip, r3, #302	; 0x12e
						board[x + j][y] = i;
 8006fc4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006fc8:	f840 802c 	str.w	r8, [r0, ip, lsl #2]
 8006fcc:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
	return (83 + y * WIDTH_SQUARE);
 8006fd0:	2317      	movs	r3, #23
 8006fd2:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 8006fd4:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 8006fd6:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 8006fd8:	3105      	adds	r1, #5
					boat3_r.setXY(getXFromIndex(y), getYFromIndex(x));
 8006fda:	b212      	sxth	r2, r2
 8006fdc:	b209      	sxth	r1, r1
 8006fde:	f204 6044 	addw	r0, r4, #1604	; 0x644
 8006fe2:	e735      	b.n	8006e50 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
 8006fe4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006fe6:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8006fea:	fb06 f302 	mul.w	r3, r6, r2
 8006fee:	1858      	adds	r0, r3, r1
 8006ff0:	f500 7e97 	add.w	lr, r0, #302	; 0x12e
						board[x][y + j] = i;
 8006ff4:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8006ff8:	f84c 802e 	str.w	r8, [ip, lr, lsl #2]
 8006ffc:	f8c0 8a0c 	str.w	r8, [r0, #2572]	; 0xa0c
						presenter->setDesk(x, y + j, i);
 8007000:	1c48      	adds	r0, r1, #1
 8007002:	4418      	add	r0, r3
 8007004:	f500 7e97 	add.w	lr, r0, #302	; 0x12e
						board[x][y + j] = i;
 8007008:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 800700c:	f84c 802e 	str.w	r8, [ip, lr, lsl #2]
 8007010:	f8c0 8a0c 	str.w	r8, [r0, #2572]	; 0xa0c
						presenter->setDesk(x, y + j, i);
 8007014:	1c88      	adds	r0, r1, #2
 8007016:	4403      	add	r3, r0
 8007018:	f503 7097 	add.w	r0, r3, #302	; 0x12e
						board[x][y + j] = i;
 800701c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8007020:	f84c 8020 	str.w	r8, [ip, r0, lsl #2]
 8007024:	f8c3 8a0c 	str.w	r8, [r3, #2572]	; 0xa0c
	return (83 + y * WIDTH_SQUARE);
 8007028:	2317      	movs	r3, #23
 800702a:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 800702c:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 800702e:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 8007030:	3105      	adds	r1, #5
					 boat3.setXY(getXFromIndex(y), getYFromIndex(x));
 8007032:	b212      	sxth	r2, r2
 8007034:	b209      	sxth	r1, r1
 8007036:	f504 704b 	add.w	r0, r4, #812	; 0x32c
 800703a:	e709      	b.n	8006e50 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
 800703c:	0802345c 	.word	0x0802345c
 8007040:	080235c2 	.word	0x080235c2
 8007044:	080234d9 	.word	0x080234d9
 8007048:	20015028 	.word	0x20015028
 800704c:	08023584 	.word	0x08023584
 8007050:	20015030 	.word	0x20015030
 8007054:	080235fa 	.word	0x080235fa
 8007058:	ffff0000 	.word	0xffff0000
 800705c:	20015024 	.word	0x20015024
			} else if (i == 4) {
 8007060:	f1b8 0f04 	cmp.w	r8, #4
 8007064:	d13b      	bne.n	80070de <_ZN18OpponentScreenView11setupScreenEv+0x3da>
				switch (direction) {
 8007066:	b1f0      	cbz	r0, 80070a6 <_ZN18OpponentScreenView11setupScreenEv+0x3a2>
 8007068:	2801      	cmp	r0, #1
 800706a:	f47f aef3 	bne.w	8006e54 <_ZN18OpponentScreenView11setupScreenEv+0x150>
 800706e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007070:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8007074:	fb06 1302 	mla	r3, r6, r2, r1
 8007078:	009b      	lsls	r3, r3, #2
 800707a:	4640      	mov	r0, r8
 800707c:	f50c 6c97 	add.w	ip, ip, #1208	; 0x4b8
 8007080:	46c6      	mov	lr, r8
					for (int j = 0; j < i; j++) {
 8007082:	3801      	subs	r0, #1
 8007084:	f84c e003 	str.w	lr, [ip, r3]
						board[x + j][y] = i;
 8007088:	f847 e003 	str.w	lr, [r7, r3]
					for (int j = 0; j < i; j++) {
 800708c:	f103 0328 	add.w	r3, r3, #40	; 0x28
 8007090:	d1f7      	bne.n	8007082 <_ZN18OpponentScreenView11setupScreenEv+0x37e>
	return (83 + y * WIDTH_SQUARE);
 8007092:	2317      	movs	r3, #23
 8007094:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 8007096:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 8007098:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 800709a:	3105      	adds	r1, #5
					boat4_r.setXY(getXFromIndex(y), getYFromIndex(x));
 800709c:	b212      	sxth	r2, r2
 800709e:	b209      	sxth	r1, r1
 80070a0:	f504 60ad 	add.w	r0, r4, #1384	; 0x568
 80070a4:	e6d4      	b.n	8006e50 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
 80070a6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80070a8:	f8d3 c008 	ldr.w	ip, [r3, #8]
 80070ac:	fb06 1302 	mla	r3, r6, r2, r1
 80070b0:	009b      	lsls	r3, r3, #2
 80070b2:	f50c 6c97 	add.w	ip, ip, #1208	; 0x4b8
 80070b6:	46c6      	mov	lr, r8
					for (int j = 0; j < i; j++) {
 80070b8:	3001      	adds	r0, #1
 80070ba:	2804      	cmp	r0, #4
 80070bc:	f84c e003 	str.w	lr, [ip, r3]
						board[x][y + j] = i;
 80070c0:	f847 e003 	str.w	lr, [r7, r3]
					for (int j = 0; j < i; j++) {
 80070c4:	f103 0304 	add.w	r3, r3, #4
 80070c8:	d1f6      	bne.n	80070b8 <_ZN18OpponentScreenView11setupScreenEv+0x3b4>
	return (83 + y * WIDTH_SQUARE);
 80070ca:	2317      	movs	r3, #23
 80070cc:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 80070ce:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 80070d0:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 80070d2:	3105      	adds	r1, #5
					boat4.setXY(getXFromIndex(y), getYFromIndex(x));
 80070d4:	b212      	sxth	r2, r2
 80070d6:	b209      	sxth	r1, r1
 80070d8:	f504 7014 	add.w	r0, r4, #592	; 0x250
 80070dc:	e6b8      	b.n	8006e50 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
				switch (direction) {
 80070de:	b1f0      	cbz	r0, 800711e <_ZN18OpponentScreenView11setupScreenEv+0x41a>
 80070e0:	2801      	cmp	r0, #1
 80070e2:	f47f aeb7 	bne.w	8006e54 <_ZN18OpponentScreenView11setupScreenEv+0x150>
 80070e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80070e8:	f8d3 c008 	ldr.w	ip, [r3, #8]
 80070ec:	2005      	movs	r0, #5
 80070ee:	fb06 1302 	mla	r3, r6, r2, r1
 80070f2:	009b      	lsls	r3, r3, #2
 80070f4:	f50c 6c97 	add.w	ip, ip, #1208	; 0x4b8
 80070f8:	4686      	mov	lr, r0
					for (int j = 0; j < i; j++) {
 80070fa:	3801      	subs	r0, #1
 80070fc:	f84c e003 	str.w	lr, [ip, r3]
						board[x + j][y] = i;
 8007100:	f847 e003 	str.w	lr, [r7, r3]
					for (int j = 0; j < i; j++) {
 8007104:	f103 0328 	add.w	r3, r3, #40	; 0x28
 8007108:	d1f7      	bne.n	80070fa <_ZN18OpponentScreenView11setupScreenEv+0x3f6>
	return (83 + y * WIDTH_SQUARE);
 800710a:	2317      	movs	r3, #23
 800710c:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 800710e:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 8007110:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 8007112:	3105      	adds	r1, #5
					 boat5_r.setXY(getXFromIndex(y), getYFromIndex(x));
 8007114:	b212      	sxth	r2, r2
 8007116:	b209      	sxth	r1, r1
 8007118:	f504 608c 	add.w	r0, r4, #1120	; 0x460
 800711c:	e698      	b.n	8006e50 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
 800711e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007120:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8007124:	fb06 1302 	mla	r3, r6, r2, r1
 8007128:	009b      	lsls	r3, r3, #2
 800712a:	f50c 6c97 	add.w	ip, ip, #1208	; 0x4b8
 800712e:	f04f 0e05 	mov.w	lr, #5
					for (int j = 0; j < i; j++) {
 8007132:	3001      	adds	r0, #1
 8007134:	2805      	cmp	r0, #5
 8007136:	f84c e003 	str.w	lr, [ip, r3]
						board[x][y + j] = i;
 800713a:	f847 e003 	str.w	lr, [r7, r3]
					for (int j = 0; j < i; j++) {
 800713e:	f103 0304 	add.w	r3, r3, #4
 8007142:	d1f6      	bne.n	8007132 <_ZN18OpponentScreenView11setupScreenEv+0x42e>
	return (83 + y * WIDTH_SQUARE);
 8007144:	2317      	movs	r3, #23
 8007146:	435a      	muls	r2, r3
	return (5 + x * WIDTH_SQUARE);
 8007148:	4359      	muls	r1, r3
	return (83 + y * WIDTH_SQUARE);
 800714a:	3253      	adds	r2, #83	; 0x53
	return (5 + x * WIDTH_SQUARE);
 800714c:	3105      	adds	r1, #5
					boat5.setXY(getXFromIndex(y), getYFromIndex(x));
 800714e:	b212      	sxth	r2, r2
 8007150:	b209      	sxth	r1, r1
 8007152:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 8007156:	e67b      	b.n	8006e50 <_ZN18OpponentScreenView11setupScreenEv+0x14c>
			else if(desk[i][j] == 3)
 8007158:	2b03      	cmp	r3, #3
 800715a:	d105      	bne.n	8007168 <_ZN18OpponentScreenView11setupScreenEv+0x464>
				ship[1]++;
 800715c:	f8d5 3e6c 	ldr.w	r3, [r5, #3692]	; 0xe6c
 8007160:	3301      	adds	r3, #1
 8007162:	f8c5 3e6c 	str.w	r3, [r5, #3692]	; 0xe6c
 8007166:	e6a3      	b.n	8006eb0 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
			else if(desk[i][j] == 4)
 8007168:	2b04      	cmp	r3, #4
 800716a:	d105      	bne.n	8007178 <_ZN18OpponentScreenView11setupScreenEv+0x474>
				ship[2]++;
 800716c:	f8d5 3e70 	ldr.w	r3, [r5, #3696]	; 0xe70
 8007170:	3301      	adds	r3, #1
 8007172:	f8c5 3e70 	str.w	r3, [r5, #3696]	; 0xe70
 8007176:	e69b      	b.n	8006eb0 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
			else if(desk[i][j] == 5)
 8007178:	2b05      	cmp	r3, #5
 800717a:	d105      	bne.n	8007188 <_ZN18OpponentScreenView11setupScreenEv+0x484>
				ship[3]++;
 800717c:	f8d5 3e74 	ldr.w	r3, [r5, #3700]	; 0xe74
 8007180:	3301      	adds	r3, #1
 8007182:	f8c5 3e74 	str.w	r3, [r5, #3700]	; 0xe74
 8007186:	e693      	b.n	8006eb0 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
			if (desk[i][j] == -2)
 8007188:	1c9a      	adds	r2, r3, #2
 800718a:	d10a      	bne.n	80071a2 <_ZN18OpponentScreenView11setupScreenEv+0x49e>
				boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_MISS_GRAY_ID));
 800718c:	f8da 3ba0 	ldr.w	r3, [sl, #2976]	; 0xba0
 8007190:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007192:	f04f 020b 	mov.w	r2, #11
 8007196:	f8ad 2014 	strh.w	r2, [sp, #20]
				boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 800719a:	a905      	add	r1, sp, #20
 800719c:	4630      	mov	r0, r6
 800719e:	4798      	blx	r3
 80071a0:	e686      	b.n	8006eb0 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
			} else if(desk[i][j] == -1) {
 80071a2:	3301      	adds	r3, #1
 80071a4:	f47f ae84 	bne.w	8006eb0 <_ZN18OpponentScreenView11setupScreenEv+0x1ac>
				boxes[i][j].setBitmap(touchgfx::Bitmap(BITMAP_HIT_ID));
 80071a8:	f8da 3ba0 	ldr.w	r3, [sl, #2976]	; 0xba0
 80071ac:	f04f 0209 	mov.w	r2, #9
 80071b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    Bitmap(const BitmapId id = BITMAP_INVALID)
 80071b2:	e7f0      	b.n	8007196 <_ZN18OpponentScreenView11setupScreenEv+0x492>

080071b4 <_ZN5BoardC1Ev>:



#include "Board.hpp"

Board::Board():desk({{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 80071b4:	b510      	push	{r4, lr}
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}),
	top(-1)
 80071b6:	f44f 72c8 	mov.w	r2, #400	; 0x190
Board::Board():desk({{0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
 80071ba:	4604      	mov	r4, r0
	top(-1)
 80071bc:	2100      	movs	r1, #0
 80071be:	f01a fbc1 	bl	8021944 <memset>
 80071c2:	f44f 7248 	mov.w	r2, #800	; 0x320
 80071c6:	2100      	movs	r1, #0
 80071c8:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 80071cc:	f01a fbba 	bl	8021944 <memset>
 80071d0:	f04f 33ff 	mov.w	r3, #4294967295
 80071d4:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
{
}
 80071d8:	4620      	mov	r0, r4
 80071da:	bd10      	pop	{r4, pc}

080071dc <_ZN5Board4InitEv>:

void Board::Init()
{
	this->selected = 2;
 80071dc:	2302      	movs	r3, #2
 80071de:	f8c0 3190 	str.w	r3, [r0, #400]	; 0x190
}
 80071e2:	4770      	bx	lr

080071e4 <_ZN5Board11setSelectedEl>:
void Board::setSelected(int32_t boat){
	this->selected = boat;
 80071e4:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
}
 80071e8:	4770      	bx	lr

080071ea <_ZN5Board11getSelectedEv>:
		}
	}
}
int Board::getSelected(){
	return this->selected;
}
 80071ea:	f8d0 0190 	ldr.w	r0, [r0, #400]	; 0x190
 80071ee:	4770      	bx	lr

080071f0 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80071f0:	20f0      	movs	r0, #240	; 0xf0
 80071f2:	4770      	bx	lr

080071f4 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80071f4:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80071f8:	4770      	bx	lr

080071fa <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80071fa:	2029      	movs	r0, #41	; 0x29
 80071fc:	f7fa bc24 	b.w	8001a48 <LCD_IO_WriteReg>

08007200 <ili9341_DisplayOff>:
 8007200:	2028      	movs	r0, #40	; 0x28
 8007202:	f7fa bc21 	b.w	8001a48 <LCD_IO_WriteReg>

08007206 <ili9341_Init>:
{
 8007206:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8007208:	f7fa fbf2 	bl	80019f0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800720c:	20ca      	movs	r0, #202	; 0xca
 800720e:	f7fa fc1b 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007212:	20c3      	movs	r0, #195	; 0xc3
 8007214:	f7fa fbfc 	bl	8001a10 <LCD_IO_WriteData>
 8007218:	2008      	movs	r0, #8
 800721a:	f7fa fbf9 	bl	8001a10 <LCD_IO_WriteData>
 800721e:	2050      	movs	r0, #80	; 0x50
 8007220:	f7fa fbf6 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007224:	20cf      	movs	r0, #207	; 0xcf
 8007226:	f7fa fc0f 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800722a:	2000      	movs	r0, #0
 800722c:	f7fa fbf0 	bl	8001a10 <LCD_IO_WriteData>
 8007230:	20c1      	movs	r0, #193	; 0xc1
 8007232:	f7fa fbed 	bl	8001a10 <LCD_IO_WriteData>
 8007236:	2030      	movs	r0, #48	; 0x30
 8007238:	f7fa fbea 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800723c:	20ed      	movs	r0, #237	; 0xed
 800723e:	f7fa fc03 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007242:	2064      	movs	r0, #100	; 0x64
 8007244:	f7fa fbe4 	bl	8001a10 <LCD_IO_WriteData>
 8007248:	2003      	movs	r0, #3
 800724a:	f7fa fbe1 	bl	8001a10 <LCD_IO_WriteData>
 800724e:	2012      	movs	r0, #18
 8007250:	f7fa fbde 	bl	8001a10 <LCD_IO_WriteData>
 8007254:	2081      	movs	r0, #129	; 0x81
 8007256:	f7fa fbdb 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800725a:	20e8      	movs	r0, #232	; 0xe8
 800725c:	f7fa fbf4 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007260:	2085      	movs	r0, #133	; 0x85
 8007262:	f7fa fbd5 	bl	8001a10 <LCD_IO_WriteData>
 8007266:	2000      	movs	r0, #0
 8007268:	f7fa fbd2 	bl	8001a10 <LCD_IO_WriteData>
 800726c:	2078      	movs	r0, #120	; 0x78
 800726e:	f7fa fbcf 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007272:	20cb      	movs	r0, #203	; 0xcb
 8007274:	f7fa fbe8 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007278:	2039      	movs	r0, #57	; 0x39
 800727a:	f7fa fbc9 	bl	8001a10 <LCD_IO_WriteData>
 800727e:	202c      	movs	r0, #44	; 0x2c
 8007280:	f7fa fbc6 	bl	8001a10 <LCD_IO_WriteData>
 8007284:	2000      	movs	r0, #0
 8007286:	f7fa fbc3 	bl	8001a10 <LCD_IO_WriteData>
 800728a:	2034      	movs	r0, #52	; 0x34
 800728c:	f7fa fbc0 	bl	8001a10 <LCD_IO_WriteData>
 8007290:	2002      	movs	r0, #2
 8007292:	f7fa fbbd 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007296:	20f7      	movs	r0, #247	; 0xf7
 8007298:	f7fa fbd6 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800729c:	2020      	movs	r0, #32
 800729e:	f7fa fbb7 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072a2:	20ea      	movs	r0, #234	; 0xea
 80072a4:	f7fa fbd0 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072a8:	2000      	movs	r0, #0
 80072aa:	f7fa fbb1 	bl	8001a10 <LCD_IO_WriteData>
 80072ae:	2000      	movs	r0, #0
 80072b0:	f7fa fbae 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072b4:	20b1      	movs	r0, #177	; 0xb1
 80072b6:	f7fa fbc7 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072ba:	2000      	movs	r0, #0
 80072bc:	f7fa fba8 	bl	8001a10 <LCD_IO_WriteData>
 80072c0:	201b      	movs	r0, #27
 80072c2:	f7fa fba5 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072c6:	20b6      	movs	r0, #182	; 0xb6
 80072c8:	f7fa fbbe 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072cc:	200a      	movs	r0, #10
 80072ce:	f7fa fb9f 	bl	8001a10 <LCD_IO_WriteData>
 80072d2:	20a2      	movs	r0, #162	; 0xa2
 80072d4:	f7fa fb9c 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072d8:	20c0      	movs	r0, #192	; 0xc0
 80072da:	f7fa fbb5 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072de:	2010      	movs	r0, #16
 80072e0:	f7fa fb96 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072e4:	20c1      	movs	r0, #193	; 0xc1
 80072e6:	f7fa fbaf 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072ea:	2010      	movs	r0, #16
 80072ec:	f7fa fb90 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80072f0:	20c5      	movs	r0, #197	; 0xc5
 80072f2:	f7fa fba9 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80072f6:	2045      	movs	r0, #69	; 0x45
 80072f8:	f7fa fb8a 	bl	8001a10 <LCD_IO_WriteData>
 80072fc:	2015      	movs	r0, #21
 80072fe:	f7fa fb87 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007302:	20c7      	movs	r0, #199	; 0xc7
 8007304:	f7fa fba0 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007308:	2090      	movs	r0, #144	; 0x90
 800730a:	f7fa fb81 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800730e:	2036      	movs	r0, #54	; 0x36
 8007310:	f7fa fb9a 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007314:	20c8      	movs	r0, #200	; 0xc8
 8007316:	f7fa fb7b 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800731a:	20f2      	movs	r0, #242	; 0xf2
 800731c:	f7fa fb94 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007320:	2000      	movs	r0, #0
 8007322:	f7fa fb75 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007326:	20b0      	movs	r0, #176	; 0xb0
 8007328:	f7fa fb8e 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800732c:	20c2      	movs	r0, #194	; 0xc2
 800732e:	f7fa fb6f 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007332:	20b6      	movs	r0, #182	; 0xb6
 8007334:	f7fa fb88 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007338:	200a      	movs	r0, #10
 800733a:	f7fa fb69 	bl	8001a10 <LCD_IO_WriteData>
 800733e:	20a7      	movs	r0, #167	; 0xa7
 8007340:	f7fa fb66 	bl	8001a10 <LCD_IO_WriteData>
 8007344:	2027      	movs	r0, #39	; 0x27
 8007346:	f7fa fb63 	bl	8001a10 <LCD_IO_WriteData>
 800734a:	2004      	movs	r0, #4
 800734c:	f7fa fb60 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8007350:	202a      	movs	r0, #42	; 0x2a
 8007352:	f7fa fb79 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007356:	2000      	movs	r0, #0
 8007358:	f7fa fb5a 	bl	8001a10 <LCD_IO_WriteData>
 800735c:	2000      	movs	r0, #0
 800735e:	f7fa fb57 	bl	8001a10 <LCD_IO_WriteData>
 8007362:	2000      	movs	r0, #0
 8007364:	f7fa fb54 	bl	8001a10 <LCD_IO_WriteData>
 8007368:	20ef      	movs	r0, #239	; 0xef
 800736a:	f7fa fb51 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800736e:	202b      	movs	r0, #43	; 0x2b
 8007370:	f7fa fb6a 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007374:	2000      	movs	r0, #0
 8007376:	f7fa fb4b 	bl	8001a10 <LCD_IO_WriteData>
 800737a:	2000      	movs	r0, #0
 800737c:	f7fa fb48 	bl	8001a10 <LCD_IO_WriteData>
 8007380:	2001      	movs	r0, #1
 8007382:	f7fa fb45 	bl	8001a10 <LCD_IO_WriteData>
 8007386:	203f      	movs	r0, #63	; 0x3f
 8007388:	f7fa fb42 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800738c:	20f6      	movs	r0, #246	; 0xf6
 800738e:	f7fa fb5b 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007392:	2001      	movs	r0, #1
 8007394:	f7fa fb3c 	bl	8001a10 <LCD_IO_WriteData>
 8007398:	2000      	movs	r0, #0
 800739a:	f7fa fb39 	bl	8001a10 <LCD_IO_WriteData>
 800739e:	2006      	movs	r0, #6
 80073a0:	f7fa fb36 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073a4:	202c      	movs	r0, #44	; 0x2c
 80073a6:	f7fa fb4f 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80073aa:	20c8      	movs	r0, #200	; 0xc8
 80073ac:	f7fa fb9a 	bl	8001ae4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80073b0:	2026      	movs	r0, #38	; 0x26
 80073b2:	f7fa fb49 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073b6:	2001      	movs	r0, #1
 80073b8:	f7fa fb2a 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80073bc:	20e0      	movs	r0, #224	; 0xe0
 80073be:	f7fa fb43 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80073c2:	200f      	movs	r0, #15
 80073c4:	f7fa fb24 	bl	8001a10 <LCD_IO_WriteData>
 80073c8:	2029      	movs	r0, #41	; 0x29
 80073ca:	f7fa fb21 	bl	8001a10 <LCD_IO_WriteData>
 80073ce:	2024      	movs	r0, #36	; 0x24
 80073d0:	f7fa fb1e 	bl	8001a10 <LCD_IO_WriteData>
 80073d4:	200c      	movs	r0, #12
 80073d6:	f7fa fb1b 	bl	8001a10 <LCD_IO_WriteData>
 80073da:	200e      	movs	r0, #14
 80073dc:	f7fa fb18 	bl	8001a10 <LCD_IO_WriteData>
 80073e0:	2009      	movs	r0, #9
 80073e2:	f7fa fb15 	bl	8001a10 <LCD_IO_WriteData>
 80073e6:	204e      	movs	r0, #78	; 0x4e
 80073e8:	f7fa fb12 	bl	8001a10 <LCD_IO_WriteData>
 80073ec:	2078      	movs	r0, #120	; 0x78
 80073ee:	f7fa fb0f 	bl	8001a10 <LCD_IO_WriteData>
 80073f2:	203c      	movs	r0, #60	; 0x3c
 80073f4:	f7fa fb0c 	bl	8001a10 <LCD_IO_WriteData>
 80073f8:	2009      	movs	r0, #9
 80073fa:	f7fa fb09 	bl	8001a10 <LCD_IO_WriteData>
 80073fe:	2013      	movs	r0, #19
 8007400:	f7fa fb06 	bl	8001a10 <LCD_IO_WriteData>
 8007404:	2005      	movs	r0, #5
 8007406:	f7fa fb03 	bl	8001a10 <LCD_IO_WriteData>
 800740a:	2017      	movs	r0, #23
 800740c:	f7fa fb00 	bl	8001a10 <LCD_IO_WriteData>
 8007410:	2011      	movs	r0, #17
 8007412:	f7fa fafd 	bl	8001a10 <LCD_IO_WriteData>
 8007416:	2000      	movs	r0, #0
 8007418:	f7fa fafa 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800741c:	20e1      	movs	r0, #225	; 0xe1
 800741e:	f7fa fb13 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8007422:	2000      	movs	r0, #0
 8007424:	f7fa faf4 	bl	8001a10 <LCD_IO_WriteData>
 8007428:	2016      	movs	r0, #22
 800742a:	f7fa faf1 	bl	8001a10 <LCD_IO_WriteData>
 800742e:	201b      	movs	r0, #27
 8007430:	f7fa faee 	bl	8001a10 <LCD_IO_WriteData>
 8007434:	2004      	movs	r0, #4
 8007436:	f7fa faeb 	bl	8001a10 <LCD_IO_WriteData>
 800743a:	2011      	movs	r0, #17
 800743c:	f7fa fae8 	bl	8001a10 <LCD_IO_WriteData>
 8007440:	2007      	movs	r0, #7
 8007442:	f7fa fae5 	bl	8001a10 <LCD_IO_WriteData>
 8007446:	2031      	movs	r0, #49	; 0x31
 8007448:	f7fa fae2 	bl	8001a10 <LCD_IO_WriteData>
 800744c:	2033      	movs	r0, #51	; 0x33
 800744e:	f7fa fadf 	bl	8001a10 <LCD_IO_WriteData>
 8007452:	2042      	movs	r0, #66	; 0x42
 8007454:	f7fa fadc 	bl	8001a10 <LCD_IO_WriteData>
 8007458:	2005      	movs	r0, #5
 800745a:	f7fa fad9 	bl	8001a10 <LCD_IO_WriteData>
 800745e:	200c      	movs	r0, #12
 8007460:	f7fa fad6 	bl	8001a10 <LCD_IO_WriteData>
 8007464:	200a      	movs	r0, #10
 8007466:	f7fa fad3 	bl	8001a10 <LCD_IO_WriteData>
 800746a:	2028      	movs	r0, #40	; 0x28
 800746c:	f7fa fad0 	bl	8001a10 <LCD_IO_WriteData>
 8007470:	202f      	movs	r0, #47	; 0x2f
 8007472:	f7fa facd 	bl	8001a10 <LCD_IO_WriteData>
 8007476:	200f      	movs	r0, #15
 8007478:	f7fa faca 	bl	8001a10 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800747c:	2011      	movs	r0, #17
 800747e:	f7fa fae3 	bl	8001a48 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8007482:	20c8      	movs	r0, #200	; 0xc8
 8007484:	f7fa fb2e 	bl	8001ae4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8007488:	2029      	movs	r0, #41	; 0x29
 800748a:	f7fa fadd 	bl	8001a48 <LCD_IO_WriteReg>
}
 800748e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8007492:	202c      	movs	r0, #44	; 0x2c
 8007494:	f7fa bad8 	b.w	8001a48 <LCD_IO_WriteReg>

08007498 <ili9341_ReadID>:
{
 8007498:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800749a:	f7fa faa9 	bl	80019f0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800749e:	2103      	movs	r1, #3
 80074a0:	20d3      	movs	r0, #211	; 0xd3
 80074a2:	f7fa faed 	bl	8001a80 <LCD_IO_ReadData>
}
 80074a6:	b280      	uxth	r0, r0
 80074a8:	bd08      	pop	{r3, pc}

080074aa <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80074aa:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80074ac:	b2c4      	uxtb	r4, r0
 80074ae:	2202      	movs	r2, #2
 80074b0:	2103      	movs	r1, #3
 80074b2:	4620      	mov	r0, r4
 80074b4:	f7fa fa52 	bl	800195c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80074b8:	200a      	movs	r0, #10
 80074ba:	f7fa fa97 	bl	80019ec <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80074be:	4620      	mov	r0, r4
 80074c0:	2200      	movs	r2, #0
 80074c2:	2103      	movs	r1, #3
 80074c4:	f7fa fa4a 	bl	800195c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 80074c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80074cc:	2002      	movs	r0, #2
 80074ce:	f7fa ba8d 	b.w	80019ec <IOE_Delay>

080074d2 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 80074d2:	b538      	push	{r3, r4, r5, lr}
 80074d4:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80074d6:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80074d8:	f7fa fa3e 	bl	8001958 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80074dc:	2100      	movs	r1, #0
 80074de:	4620      	mov	r0, r4
 80074e0:	f7fa fa54 	bl	800198c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80074e4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80074e6:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80074e8:	4620      	mov	r0, r4
 80074ea:	f7fa fa4f 	bl	800198c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80074ee:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80074f2:	b280      	uxth	r0, r0
 80074f4:	bd38      	pop	{r3, r4, r5, pc}

080074f6 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80074f6:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80074f8:	b2c4      	uxtb	r4, r0
 80074fa:	2140      	movs	r1, #64	; 0x40
 80074fc:	4620      	mov	r0, r4
 80074fe:	f7fa fa45 	bl	800198c <IOE_Read>
  
  if(state > 0)
 8007502:	0603      	lsls	r3, r0, #24
 8007504:	d507      	bpl.n	8007516 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8007506:	214c      	movs	r1, #76	; 0x4c
 8007508:	4620      	mov	r0, r4
 800750a:	f7fa fa3f 	bl	800198c <IOE_Read>
    {
      ret = 1;
 800750e:	3800      	subs	r0, #0
 8007510:	bf18      	it	ne
 8007512:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8007514:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007516:	2201      	movs	r2, #1
 8007518:	214b      	movs	r1, #75	; 0x4b
 800751a:	4620      	mov	r0, r4
 800751c:	f7fa fa1e 	bl	800195c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8007520:	4620      	mov	r0, r4
 8007522:	2200      	movs	r2, #0
 8007524:	214b      	movs	r1, #75	; 0x4b
 8007526:	f7fa fa19 	bl	800195c <IOE_Write>
  uint8_t ret = 0;
 800752a:	2000      	movs	r0, #0
 800752c:	e7f2      	b.n	8007514 <stmpe811_TS_DetectTouch+0x1e>

0800752e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800752e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007530:	2304      	movs	r3, #4
 8007532:	b2c4      	uxtb	r4, r0
{
 8007534:	460e      	mov	r6, r1
 8007536:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8007538:	21d7      	movs	r1, #215	; 0xd7
 800753a:	eb0d 0203 	add.w	r2, sp, r3
 800753e:	4620      	mov	r0, r4
 8007540:	f7fa fa3e 	bl	80019c0 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8007544:	9b01      	ldr	r3, [sp, #4]
 8007546:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8007548:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800754a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800754e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007550:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8007552:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8007554:	2201      	movs	r2, #1
 8007556:	214b      	movs	r1, #75	; 0x4b
 8007558:	f7fa fa00 	bl	800195c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800755c:	2200      	movs	r2, #0
 800755e:	214b      	movs	r1, #75	; 0x4b
 8007560:	4620      	mov	r0, r4
 8007562:	f7fa f9fb 	bl	800195c <IOE_Write>
}
 8007566:	b002      	add	sp, #8
 8007568:	bd70      	pop	{r4, r5, r6, pc}
	...

0800756c <stmpe811_Init>:
{
 800756c:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800756e:	4b0a      	ldr	r3, [pc, #40]	; (8007598 <stmpe811_Init+0x2c>)
 8007570:	781a      	ldrb	r2, [r3, #0]
 8007572:	4290      	cmp	r0, r2
{
 8007574:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8007576:	d00d      	beq.n	8007594 <stmpe811_Init+0x28>
 8007578:	7859      	ldrb	r1, [r3, #1]
 800757a:	4288      	cmp	r0, r1
 800757c:	d00a      	beq.n	8007594 <stmpe811_Init+0x28>
 800757e:	b10a      	cbz	r2, 8007584 <stmpe811_Init+0x18>
 8007580:	b941      	cbnz	r1, 8007594 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8007582:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8007584:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8007586:	f7fa f9e7 	bl	8001958 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 800758a:	4620      	mov	r0, r4
}
 800758c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8007590:	f7ff bf8b 	b.w	80074aa <stmpe811_Reset>
}
 8007594:	bd10      	pop	{r4, pc}
 8007596:	bf00      	nop
 8007598:	2000426c 	.word	0x2000426c

0800759c <stmpe811_EnableGlobalIT>:
{
 800759c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800759e:	b2c4      	uxtb	r4, r0
 80075a0:	2109      	movs	r1, #9
 80075a2:	4620      	mov	r0, r4
 80075a4:	f7fa f9f2 	bl	800198c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80075a8:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80075ac:	b2c2      	uxtb	r2, r0
 80075ae:	2109      	movs	r1, #9
 80075b0:	4620      	mov	r0, r4
}
 80075b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80075b6:	f7fa b9d1 	b.w	800195c <IOE_Write>

080075ba <stmpe811_DisableGlobalIT>:
{
 80075ba:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80075bc:	b2c4      	uxtb	r4, r0
 80075be:	2109      	movs	r1, #9
 80075c0:	4620      	mov	r0, r4
 80075c2:	f7fa f9e3 	bl	800198c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80075c6:	2109      	movs	r1, #9
 80075c8:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80075cc:	4620      	mov	r0, r4
}
 80075ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80075d2:	f7fa b9c3 	b.w	800195c <IOE_Write>

080075d6 <stmpe811_EnableITSource>:
{
 80075d6:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80075d8:	b2c4      	uxtb	r4, r0
{
 80075da:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80075dc:	4620      	mov	r0, r4
 80075de:	210a      	movs	r1, #10
 80075e0:	f7fa f9d4 	bl	800198c <IOE_Read>
  tmp |= Source; 
 80075e4:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80075e6:	b2c2      	uxtb	r2, r0
 80075e8:	210a      	movs	r1, #10
 80075ea:	4620      	mov	r0, r4
}
 80075ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80075f0:	f7fa b9b4 	b.w	800195c <IOE_Write>

080075f4 <stmpe811_TS_EnableIT>:
{
 80075f4:	b507      	push	{r0, r1, r2, lr}
 80075f6:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 80075f8:	f7fa f9af 	bl	800195a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80075fc:	9801      	ldr	r0, [sp, #4]
 80075fe:	211f      	movs	r1, #31
 8007600:	f7ff ffe9 	bl	80075d6 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8007604:	9801      	ldr	r0, [sp, #4]
}
 8007606:	b003      	add	sp, #12
 8007608:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 800760c:	f7ff bfc6 	b.w	800759c <stmpe811_EnableGlobalIT>

08007610 <stmpe811_DisableITSource>:
{
 8007610:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007612:	b2c4      	uxtb	r4, r0
{
 8007614:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8007616:	4620      	mov	r0, r4
 8007618:	210a      	movs	r1, #10
 800761a:	f7fa f9b7 	bl	800198c <IOE_Read>
  tmp &= ~Source; 
 800761e:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8007622:	b2c2      	uxtb	r2, r0
 8007624:	210a      	movs	r1, #10
 8007626:	4620      	mov	r0, r4
}
 8007628:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800762c:	f7fa b996 	b.w	800195c <IOE_Write>

08007630 <stmpe811_TS_DisableIT>:
{
 8007630:	b510      	push	{r4, lr}
 8007632:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8007634:	f7ff ffc1 	bl	80075ba <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007638:	4620      	mov	r0, r4
 800763a:	211f      	movs	r1, #31
}
 800763c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8007640:	f7ff bfe6 	b.w	8007610 <stmpe811_DisableITSource>

08007644 <stmpe811_ReadGITStatus>:
{
 8007644:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8007646:	b2c0      	uxtb	r0, r0
{
 8007648:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800764a:	210b      	movs	r1, #11
 800764c:	f7fa f99e 	bl	800198c <IOE_Read>
}
 8007650:	4020      	ands	r0, r4
 8007652:	bd10      	pop	{r4, pc}

08007654 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8007654:	211f      	movs	r1, #31
 8007656:	f7ff bff5 	b.w	8007644 <stmpe811_ReadGITStatus>

0800765a <stmpe811_ClearGlobalIT>:
{
 800765a:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800765c:	b2c0      	uxtb	r0, r0
 800765e:	210b      	movs	r1, #11
 8007660:	f7fa b97c 	b.w	800195c <IOE_Write>

08007664 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8007664:	211f      	movs	r1, #31
 8007666:	f7ff bff8 	b.w	800765a <stmpe811_ClearGlobalIT>

0800766a <stmpe811_IO_EnableAF>:
{
 800766a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800766c:	b2c4      	uxtb	r4, r0
{
 800766e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8007670:	4620      	mov	r0, r4
 8007672:	2117      	movs	r1, #23
 8007674:	f7fa f98a 	bl	800198c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8007678:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800767c:	b2c2      	uxtb	r2, r0
 800767e:	2117      	movs	r1, #23
 8007680:	4620      	mov	r0, r4
}
 8007682:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8007686:	f7fa b969 	b.w	800195c <IOE_Write>

0800768a <stmpe811_TS_Start>:
{
 800768a:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800768c:	b2c4      	uxtb	r4, r0
{
 800768e:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8007690:	2104      	movs	r1, #4
 8007692:	4620      	mov	r0, r4
 8007694:	f7fa f97a 	bl	800198c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8007698:	2104      	movs	r1, #4
 800769a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800769e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80076a0:	4620      	mov	r0, r4
 80076a2:	f7fa f95b 	bl	800195c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 80076a6:	4630      	mov	r0, r6
 80076a8:	21f0      	movs	r1, #240	; 0xf0
 80076aa:	f7ff ffde 	bl	800766a <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80076ae:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80076b2:	4620      	mov	r0, r4
 80076b4:	2104      	movs	r1, #4
 80076b6:	f7fa f951 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80076ba:	2249      	movs	r2, #73	; 0x49
 80076bc:	2120      	movs	r1, #32
 80076be:	4620      	mov	r0, r4
 80076c0:	f7fa f94c 	bl	800195c <IOE_Write>
  IOE_Delay(2); 
 80076c4:	2002      	movs	r0, #2
 80076c6:	f7fa f991 	bl	80019ec <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80076ca:	4620      	mov	r0, r4
 80076cc:	2201      	movs	r2, #1
 80076ce:	2121      	movs	r1, #33	; 0x21
 80076d0:	f7fa f944 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80076d4:	4620      	mov	r0, r4
 80076d6:	229a      	movs	r2, #154	; 0x9a
 80076d8:	2141      	movs	r1, #65	; 0x41
 80076da:	f7fa f93f 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80076de:	4620      	mov	r0, r4
 80076e0:	2201      	movs	r2, #1
 80076e2:	214a      	movs	r1, #74	; 0x4a
 80076e4:	f7fa f93a 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80076e8:	4620      	mov	r0, r4
 80076ea:	2201      	movs	r2, #1
 80076ec:	214b      	movs	r1, #75	; 0x4b
 80076ee:	f7fa f935 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80076f2:	4620      	mov	r0, r4
 80076f4:	2200      	movs	r2, #0
 80076f6:	214b      	movs	r1, #75	; 0x4b
 80076f8:	f7fa f930 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80076fc:	4620      	mov	r0, r4
 80076fe:	2201      	movs	r2, #1
 8007700:	2156      	movs	r1, #86	; 0x56
 8007702:	f7fa f92b 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8007706:	4620      	mov	r0, r4
 8007708:	2201      	movs	r2, #1
 800770a:	2158      	movs	r1, #88	; 0x58
 800770c:	f7fa f926 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8007710:	4620      	mov	r0, r4
 8007712:	2201      	movs	r2, #1
 8007714:	2140      	movs	r1, #64	; 0x40
 8007716:	f7fa f921 	bl	800195c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800771a:	4620      	mov	r0, r4
 800771c:	22ff      	movs	r2, #255	; 0xff
 800771e:	210b      	movs	r1, #11
 8007720:	f7fa f91c 	bl	800195c <IOE_Write>
}
 8007724:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8007728:	2002      	movs	r0, #2
 800772a:	f7fa b95f 	b.w	80019ec <IOE_Delay>
	...

08007730 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8007730:	4b05      	ldr	r3, [pc, #20]	; (8007748 <SystemInit+0x18>)
 8007732:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8007736:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800773a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800773e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8007742:	609a      	str	r2, [r3, #8]
#endif
}
 8007744:	4770      	bx	lr
 8007746:	bf00      	nop
 8007748:	e000ed00 	.word	0xe000ed00

0800774c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800774c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800774e:	4b0b      	ldr	r3, [pc, #44]	; (800777c <HAL_Init+0x30>)
 8007750:	681a      	ldr	r2, [r3, #0]
 8007752:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007756:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8007758:	681a      	ldr	r2, [r3, #0]
 800775a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800775e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8007760:	681a      	ldr	r2, [r3, #0]
 8007762:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007766:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8007768:	2003      	movs	r0, #3
 800776a:	f000 f82f 	bl	80077cc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800776e:	2000      	movs	r0, #0
 8007770:	f7fa fca4 	bl	80020bc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8007774:	f7fa f9c4 	bl	8001b00 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8007778:	2000      	movs	r0, #0
 800777a:	bd08      	pop	{r3, pc}
 800777c:	40023c00 	.word	0x40023c00

08007780 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8007780:	4a03      	ldr	r2, [pc, #12]	; (8007790 <HAL_IncTick+0x10>)
 8007782:	4b04      	ldr	r3, [pc, #16]	; (8007794 <HAL_IncTick+0x14>)
 8007784:	6811      	ldr	r1, [r2, #0]
 8007786:	781b      	ldrb	r3, [r3, #0]
 8007788:	440b      	add	r3, r1
 800778a:	6013      	str	r3, [r2, #0]
}
 800778c:	4770      	bx	lr
 800778e:	bf00      	nop
 8007790:	20004270 	.word	0x20004270
 8007794:	20000078 	.word	0x20000078

08007798 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8007798:	4b01      	ldr	r3, [pc, #4]	; (80077a0 <HAL_GetTick+0x8>)
 800779a:	6818      	ldr	r0, [r3, #0]
}
 800779c:	4770      	bx	lr
 800779e:	bf00      	nop
 80077a0:	20004270 	.word	0x20004270

080077a4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80077a4:	b538      	push	{r3, r4, r5, lr}
 80077a6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80077a8:	f7ff fff6 	bl	8007798 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80077ac:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80077ae:	bf1c      	itt	ne
 80077b0:	4b05      	ldrne	r3, [pc, #20]	; (80077c8 <HAL_Delay+0x24>)
 80077b2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80077b4:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80077b6:	bf18      	it	ne
 80077b8:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80077ba:	f7ff ffed 	bl	8007798 <HAL_GetTick>
 80077be:	1b43      	subs	r3, r0, r5
 80077c0:	42a3      	cmp	r3, r4
 80077c2:	d3fa      	bcc.n	80077ba <HAL_Delay+0x16>
  {
  }
}
 80077c4:	bd38      	pop	{r3, r4, r5, pc}
 80077c6:	bf00      	nop
 80077c8:	20000078 	.word	0x20000078

080077cc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80077cc:	4907      	ldr	r1, [pc, #28]	; (80077ec <HAL_NVIC_SetPriorityGrouping+0x20>)
 80077ce:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80077d0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80077d4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80077d6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80077d8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80077dc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80077de:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80077e0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80077e4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80077e8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80077ea:	4770      	bx	lr
 80077ec:	e000ed00 	.word	0xe000ed00

080077f0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80077f0:	4b16      	ldr	r3, [pc, #88]	; (800784c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80077f2:	b530      	push	{r4, r5, lr}
 80077f4:	68dc      	ldr	r4, [r3, #12]
 80077f6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80077fa:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80077fe:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8007800:	2d04      	cmp	r5, #4
 8007802:	bf28      	it	cs
 8007804:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8007806:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007808:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800780c:	bf8c      	ite	hi
 800780e:	3c03      	subhi	r4, #3
 8007810:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007812:	fa03 f505 	lsl.w	r5, r3, r5
 8007816:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800781a:	40a3      	lsls	r3, r4
 800781c:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007820:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8007822:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8007824:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007828:	bfac      	ite	ge
 800782a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800782e:	4a08      	ldrlt	r2, [pc, #32]	; (8007850 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007830:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007834:	bfb8      	it	lt
 8007836:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800783a:	b2db      	uxtb	r3, r3
 800783c:	bfaa      	itet	ge
 800783e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007842:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8007844:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8007848:	bd30      	pop	{r4, r5, pc}
 800784a:	bf00      	nop
 800784c:	e000ed00 	.word	0xe000ed00
 8007850:	e000ed14 	.word	0xe000ed14

08007854 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8007854:	2800      	cmp	r0, #0
 8007856:	db08      	blt.n	800786a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8007858:	0942      	lsrs	r2, r0, #5
 800785a:	2301      	movs	r3, #1
 800785c:	f000 001f 	and.w	r0, r0, #31
 8007860:	fa03 f000 	lsl.w	r0, r3, r0
 8007864:	4b01      	ldr	r3, [pc, #4]	; (800786c <HAL_NVIC_EnableIRQ+0x18>)
 8007866:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800786a:	4770      	bx	lr
 800786c:	e000e100 	.word	0xe000e100

08007870 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8007870:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8007872:	4604      	mov	r4, r0
 8007874:	b150      	cbz	r0, 800788c <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8007876:	7943      	ldrb	r3, [r0, #5]
 8007878:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800787c:	b913      	cbnz	r3, 8007884 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800787e:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8007880:	f7fa f95e 	bl	8001b40 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8007884:	2301      	movs	r3, #1
 8007886:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8007888:	2000      	movs	r0, #0
}
 800788a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800788c:	2001      	movs	r0, #1
 800788e:	e7fc      	b.n	800788a <HAL_CRC_Init+0x1a>

08007890 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 8007890:	b570      	push	{r4, r5, r6, lr}
 8007892:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8007894:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 8007896:	f7ff ff7f 	bl	8007798 <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800789a:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800789e:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 80078a0:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80078a2:	d006      	beq.n	80078b2 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80078a4:	2380      	movs	r3, #128	; 0x80
 80078a6:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80078a8:	2300      	movs	r3, #0
 80078aa:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 80078ae:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 80078b0:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 80078b2:	6823      	ldr	r3, [r4, #0]
 80078b4:	681a      	ldr	r2, [r3, #0]
 80078b6:	f022 0216 	bic.w	r2, r2, #22
 80078ba:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 80078bc:	695a      	ldr	r2, [r3, #20]
 80078be:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80078c2:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80078c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80078c6:	b90a      	cbnz	r2, 80078cc <HAL_DMA_Abort+0x3c>
 80078c8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80078ca:	b11a      	cbz	r2, 80078d4 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 80078cc:	681a      	ldr	r2, [r3, #0]
 80078ce:	f022 0208 	bic.w	r2, r2, #8
 80078d2:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 80078d4:	681a      	ldr	r2, [r3, #0]
 80078d6:	f022 0201 	bic.w	r2, r2, #1
 80078da:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80078dc:	6823      	ldr	r3, [r4, #0]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f013 0301 	ands.w	r3, r3, #1
 80078e4:	d10a      	bne.n	80078fc <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80078e6:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80078e8:	223f      	movs	r2, #63	; 0x3f
 80078ea:	408a      	lsls	r2, r1
 80078ec:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 80078ee:	2201      	movs	r2, #1
 80078f0:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 80078f4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 80078f8:	4618      	mov	r0, r3
 80078fa:	e7d9      	b.n	80078b0 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80078fc:	f7ff ff4c 	bl	8007798 <HAL_GetTick>
 8007900:	1b40      	subs	r0, r0, r5
 8007902:	2805      	cmp	r0, #5
 8007904:	d9ea      	bls.n	80078dc <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8007906:	2320      	movs	r3, #32
 8007908:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800790a:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800790c:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800790e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8007912:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8007916:	e7cb      	b.n	80078b0 <HAL_DMA_Abort+0x20>

08007918 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8007918:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800791c:	2b02      	cmp	r3, #2
 800791e:	d003      	beq.n	8007928 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8007920:	2380      	movs	r3, #128	; 0x80
 8007922:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8007924:	2001      	movs	r0, #1
 8007926:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8007928:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800792a:	2305      	movs	r3, #5
 800792c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8007930:	6813      	ldr	r3, [r2, #0]
 8007932:	f023 0301 	bic.w	r3, r3, #1
 8007936:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 8007938:	2000      	movs	r0, #0
}
 800793a:	4770      	bx	lr

0800793c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800793c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800793e:	4604      	mov	r4, r0
 8007940:	b330      	cbz	r0, 8007990 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8007942:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8007946:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800794a:	b91b      	cbnz	r3, 8007954 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800794c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8007950:	f7fa f90e 	bl	8001b70 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8007954:	6822      	ldr	r2, [r4, #0]
 8007956:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007958:	2302      	movs	r3, #2
 800795a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800795e:	6813      	ldr	r3, [r2, #0]
 8007960:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007964:	430b      	orrs	r3, r1
 8007966:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8007968:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800796a:	68a1      	ldr	r1, [r4, #8]
 800796c:	f023 0307 	bic.w	r3, r3, #7
 8007970:	430b      	orrs	r3, r1
 8007972:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8007974:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007976:	68e1      	ldr	r1, [r4, #12]
 8007978:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800797c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8007980:	430b      	orrs	r3, r1
 8007982:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007984:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8007986:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8007988:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800798a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800798e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007990:	2001      	movs	r0, #1
 8007992:	e7fc      	b.n	800798e <HAL_DMA2D_Init+0x52>

08007994 <HAL_DMA2D_LineEventCallback>:
 8007994:	4770      	bx	lr

08007996 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8007996:	4770      	bx	lr

08007998 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8007998:	6803      	ldr	r3, [r0, #0]
{
 800799a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800799c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800799e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80079a0:	07f2      	lsls	r2, r6, #31
{
 80079a2:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80079a4:	d514      	bpl.n	80079d0 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80079a6:	05e9      	lsls	r1, r5, #23
 80079a8:	d512      	bpl.n	80079d0 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80079aa:	681a      	ldr	r2, [r3, #0]
 80079ac:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80079b0:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80079b2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80079b4:	f042 0201 	orr.w	r2, r2, #1
 80079b8:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80079ba:	2201      	movs	r2, #1
 80079bc:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80079be:	2304      	movs	r3, #4
 80079c0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80079c4:	2300      	movs	r3, #0
 80079c6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80079ca:	6943      	ldr	r3, [r0, #20]
 80079cc:	b103      	cbz	r3, 80079d0 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80079ce:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80079d0:	06b2      	lsls	r2, r6, #26
 80079d2:	d516      	bpl.n	8007a02 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80079d4:	04ab      	lsls	r3, r5, #18
 80079d6:	d514      	bpl.n	8007a02 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80079d8:	6823      	ldr	r3, [r4, #0]
 80079da:	681a      	ldr	r2, [r3, #0]
 80079dc:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80079e0:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80079e2:	2220      	movs	r2, #32
 80079e4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80079e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80079e8:	f043 0302 	orr.w	r3, r3, #2
 80079ec:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80079ee:	2304      	movs	r3, #4
 80079f0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80079f4:	2300      	movs	r3, #0
 80079f6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80079fa:	6963      	ldr	r3, [r4, #20]
 80079fc:	b10b      	cbz	r3, 8007a02 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80079fe:	4620      	mov	r0, r4
 8007a00:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8007a02:	0730      	lsls	r0, r6, #28
 8007a04:	d516      	bpl.n	8007a34 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8007a06:	0529      	lsls	r1, r5, #20
 8007a08:	d514      	bpl.n	8007a34 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8007a0a:	6823      	ldr	r3, [r4, #0]
 8007a0c:	681a      	ldr	r2, [r3, #0]
 8007a0e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007a12:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8007a14:	2208      	movs	r2, #8
 8007a16:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8007a18:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a1a:	f043 0304 	orr.w	r3, r3, #4
 8007a1e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8007a20:	2304      	movs	r3, #4
 8007a22:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007a26:	2300      	movs	r3, #0
 8007a28:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8007a2c:	6963      	ldr	r3, [r4, #20]
 8007a2e:	b10b      	cbz	r3, 8007a34 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8007a30:	4620      	mov	r0, r4
 8007a32:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8007a34:	0772      	lsls	r2, r6, #29
 8007a36:	d50b      	bpl.n	8007a50 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8007a38:	056b      	lsls	r3, r5, #21
 8007a3a:	d509      	bpl.n	8007a50 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8007a3c:	6823      	ldr	r3, [r4, #0]
 8007a3e:	681a      	ldr	r2, [r3, #0]
 8007a40:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007a44:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8007a46:	2204      	movs	r2, #4
 8007a48:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8007a4a:	4620      	mov	r0, r4
 8007a4c:	f7ff ffa2 	bl	8007994 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8007a50:	07b0      	lsls	r0, r6, #30
 8007a52:	d514      	bpl.n	8007a7e <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8007a54:	05a9      	lsls	r1, r5, #22
 8007a56:	d512      	bpl.n	8007a7e <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8007a58:	6823      	ldr	r3, [r4, #0]
 8007a5a:	681a      	ldr	r2, [r3, #0]
 8007a5c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8007a60:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8007a62:	2202      	movs	r2, #2
 8007a64:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007a66:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a68:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007a6a:	2301      	movs	r3, #1
 8007a6c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007a70:	2300      	movs	r3, #0
 8007a72:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8007a76:	6923      	ldr	r3, [r4, #16]
 8007a78:	b10b      	cbz	r3, 8007a7e <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8007a7a:	4620      	mov	r0, r4
 8007a7c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8007a7e:	06f2      	lsls	r2, r6, #27
 8007a80:	d513      	bpl.n	8007aaa <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8007a82:	04eb      	lsls	r3, r5, #19
 8007a84:	d511      	bpl.n	8007aaa <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8007a86:	6823      	ldr	r3, [r4, #0]
 8007a88:	681a      	ldr	r2, [r3, #0]
 8007a8a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8007a8e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8007a90:	2210      	movs	r2, #16
 8007a92:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8007a94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a96:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8007a98:	2301      	movs	r3, #1
 8007a9a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8007a9e:	2300      	movs	r3, #0
 8007aa0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8007aa4:	4620      	mov	r0, r4
 8007aa6:	f7ff ff76 	bl	8007996 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8007aaa:	bd70      	pop	{r4, r5, r6, pc}

08007aac <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8007aac:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8007aae:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8007ab2:	2b01      	cmp	r3, #1
 8007ab4:	f04f 0302 	mov.w	r3, #2
 8007ab8:	d02b      	beq.n	8007b12 <HAL_DMA2D_ConfigLayer+0x66>
 8007aba:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8007abc:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8007ac0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007ac4:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8007ac8:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8007acc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8007ace:	4f18      	ldr	r7, [pc, #96]	; (8007b30 <HAL_DMA2D_ConfigLayer+0x84>)
 8007ad0:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007ad4:	3c09      	subs	r4, #9
 8007ad6:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8007ad8:	bf9c      	itt	ls
 8007ada:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8007ade:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8007ae0:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007ae4:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8007ae6:	bf88      	it	hi
 8007ae8:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8007aec:	b999      	cbnz	r1, 8007b16 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8007aee:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8007af0:	4039      	ands	r1, r7
 8007af2:	430a      	orrs	r2, r1
 8007af4:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007af6:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8007af8:	6982      	ldr	r2, [r0, #24]
 8007afa:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007afc:	d803      	bhi.n	8007b06 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8007afe:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8007b00:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8007b04:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8007b06:	2301      	movs	r3, #1
 8007b08:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8007b0c:	2300      	movs	r3, #0
 8007b0e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8007b12:	4618      	mov	r0, r3

  return HAL_OK;
}
 8007b14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8007b16:	69d9      	ldr	r1, [r3, #28]
 8007b18:	4039      	ands	r1, r7
 8007b1a:	430a      	orrs	r2, r1
 8007b1c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007b1e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8007b20:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8007b22:	6992      	ldr	r2, [r2, #24]
 8007b24:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8007b26:	bf9c      	itt	ls
 8007b28:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8007b2c:	621d      	strls	r5, [r3, #32]
 8007b2e:	e7ea      	b.n	8007b06 <HAL_DMA2D_ConfigLayer+0x5a>
 8007b30:	00fcfff0 	.word	0x00fcfff0

08007b34 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8007b34:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007b38:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8007cfc <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8007b3c:	4a6d      	ldr	r2, [pc, #436]	; (8007cf4 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007b3e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007b40:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8007b42:	2401      	movs	r4, #1
 8007b44:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007b46:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8007b4a:	43ac      	bics	r4, r5
 8007b4c:	f040 80b9 	bne.w	8007cc2 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007b50:	684d      	ldr	r5, [r1, #4]
 8007b52:	f005 0403 	and.w	r4, r5, #3
 8007b56:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007b5a:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007b5c:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007b5e:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007b62:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007b64:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007b68:	d834      	bhi.n	8007bd4 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8007b6a:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007b6c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8007b70:	68cf      	ldr	r7, [r1, #12]
 8007b72:	fa07 f708 	lsl.w	r7, r7, r8
 8007b76:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8007b7a:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8007b7c:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8007b7e:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8007b82:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8007b86:	409f      	lsls	r7, r3
 8007b88:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8007b8c:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8007b8e:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8007b90:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8007b94:	688f      	ldr	r7, [r1, #8]
 8007b96:	fa07 f708 	lsl.w	r7, r7, r8
 8007b9a:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007b9e:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8007ba0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8007ba2:	d119      	bne.n	8007bd8 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8007ba4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8007ba8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007bac:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8007bb0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8007bb4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8007bb8:	f04f 0e0f 	mov.w	lr, #15
 8007bbc:	fa0e fe0b 	lsl.w	lr, lr, fp
 8007bc0:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8007bc4:	690f      	ldr	r7, [r1, #16]
 8007bc6:	fa07 f70b 	lsl.w	r7, r7, fp
 8007bca:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 8007bce:	f8ca 7020 	str.w	r7, [sl, #32]
 8007bd2:	e001      	b.n	8007bd8 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8007bd4:	2c03      	cmp	r4, #3
 8007bd6:	d1da      	bne.n	8007b8e <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8007bd8:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007bda:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8007bde:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8007be0:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007be2:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8007be6:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8007be8:	d06b      	beq.n	8007cc2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007bea:	f04f 0a00 	mov.w	sl, #0
 8007bee:	f8cd a004 	str.w	sl, [sp, #4]
 8007bf2:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007bf6:	4c40      	ldr	r4, [pc, #256]	; (8007cf8 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8007bf8:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8007bfc:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8007c00:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8007c04:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8007c08:	9601      	str	r6, [sp, #4]
 8007c0a:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8007c0c:	f023 0603 	bic.w	r6, r3, #3
 8007c10:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8007c14:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007c18:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8007c1c:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007c20:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8007c24:	270f      	movs	r7, #15
 8007c26:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007c2a:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007c2c:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007c30:	d04e      	beq.n	8007cd0 <HAL_GPIO_Init+0x19c>
 8007c32:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c36:	42a0      	cmp	r0, r4
 8007c38:	d04c      	beq.n	8007cd4 <HAL_GPIO_Init+0x1a0>
 8007c3a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c3e:	42a0      	cmp	r0, r4
 8007c40:	d04a      	beq.n	8007cd8 <HAL_GPIO_Init+0x1a4>
 8007c42:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c46:	42a0      	cmp	r0, r4
 8007c48:	d048      	beq.n	8007cdc <HAL_GPIO_Init+0x1a8>
 8007c4a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c4e:	42a0      	cmp	r0, r4
 8007c50:	d046      	beq.n	8007ce0 <HAL_GPIO_Init+0x1ac>
 8007c52:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c56:	42a0      	cmp	r0, r4
 8007c58:	d044      	beq.n	8007ce4 <HAL_GPIO_Init+0x1b0>
 8007c5a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c5e:	42a0      	cmp	r0, r4
 8007c60:	d042      	beq.n	8007ce8 <HAL_GPIO_Init+0x1b4>
 8007c62:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c66:	42a0      	cmp	r0, r4
 8007c68:	d040      	beq.n	8007cec <HAL_GPIO_Init+0x1b8>
 8007c6a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c6e:	42a0      	cmp	r0, r4
 8007c70:	d03e      	beq.n	8007cf0 <HAL_GPIO_Init+0x1bc>
 8007c72:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007c76:	42a0      	cmp	r0, r4
 8007c78:	bf0c      	ite	eq
 8007c7a:	2409      	moveq	r4, #9
 8007c7c:	240a      	movne	r4, #10
 8007c7e:	fa04 f40e 	lsl.w	r4, r4, lr
 8007c82:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8007c84:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 8007c86:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 8007c88:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8007c8c:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8007c8e:	bf54      	ite	pl
 8007c90:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007c92:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 8007c96:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 8007c98:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8007c9a:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 8007c9c:	bf54      	ite	pl
 8007c9e:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007ca0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8007ca4:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8007ca6:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8007ca8:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8007caa:	bf54      	ite	pl
 8007cac:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007cae:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8007cb2:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8007cb4:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8007cb6:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8007cb8:	bf54      	ite	pl
 8007cba:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007cbc:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8007cc0:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007cc2:	3301      	adds	r3, #1
 8007cc4:	2b10      	cmp	r3, #16
 8007cc6:	f47f af3b 	bne.w	8007b40 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8007cca:	b003      	add	sp, #12
 8007ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007cd0:	4654      	mov	r4, sl
 8007cd2:	e7d4      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007cd4:	2401      	movs	r4, #1
 8007cd6:	e7d2      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007cd8:	2402      	movs	r4, #2
 8007cda:	e7d0      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007cdc:	2403      	movs	r4, #3
 8007cde:	e7ce      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007ce0:	2404      	movs	r4, #4
 8007ce2:	e7cc      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007ce4:	2405      	movs	r4, #5
 8007ce6:	e7ca      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007ce8:	2406      	movs	r4, #6
 8007cea:	e7c8      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007cec:	2407      	movs	r4, #7
 8007cee:	e7c6      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007cf0:	2408      	movs	r4, #8
 8007cf2:	e7c4      	b.n	8007c7e <HAL_GPIO_Init+0x14a>
 8007cf4:	40013c00 	.word	0x40013c00
 8007cf8:	40020000 	.word	0x40020000
 8007cfc:	40023800 	.word	0x40023800

08007d00 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8007d00:	6903      	ldr	r3, [r0, #16]
 8007d02:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8007d04:	bf14      	ite	ne
 8007d06:	2001      	movne	r0, #1
 8007d08:	2000      	moveq	r0, #0
 8007d0a:	4770      	bx	lr

08007d0c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8007d0c:	b10a      	cbz	r2, 8007d12 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007d0e:	6181      	str	r1, [r0, #24]
  }
}
 8007d10:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007d12:	0409      	lsls	r1, r1, #16
 8007d14:	e7fb      	b.n	8007d0e <HAL_GPIO_WritePin+0x2>

08007d16 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007d16:	6801      	ldr	r1, [r0, #0]
 8007d18:	694b      	ldr	r3, [r1, #20]
 8007d1a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8007d1e:	f04f 0200 	mov.w	r2, #0
 8007d22:	d010      	beq.n	8007d46 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007d24:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8007d28:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8007d2a:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8007d2c:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8007d2e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007d32:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007d36:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8007d38:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007d3c:	f043 0304 	orr.w	r3, r3, #4
 8007d40:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8007d42:	2001      	movs	r0, #1
 8007d44:	4770      	bx	lr
  }
  return HAL_OK;
 8007d46:	4618      	mov	r0, r3
}
 8007d48:	4770      	bx	lr

08007d4a <I2C_WaitOnFlagUntilTimeout>:
{
 8007d4a:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8007d4e:	4606      	mov	r6, r0
 8007d50:	460f      	mov	r7, r1
 8007d52:	4691      	mov	r9, r2
 8007d54:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8007d56:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8007d5a:	6833      	ldr	r3, [r6, #0]
 8007d5c:	f1ba 0f01 	cmp.w	sl, #1
 8007d60:	bf0c      	ite	eq
 8007d62:	695c      	ldreq	r4, [r3, #20]
 8007d64:	699c      	ldrne	r4, [r3, #24]
 8007d66:	ea27 0404 	bic.w	r4, r7, r4
 8007d6a:	b2a4      	uxth	r4, r4
 8007d6c:	fab4 f484 	clz	r4, r4
 8007d70:	0964      	lsrs	r4, r4, #5
 8007d72:	45a1      	cmp	r9, r4
 8007d74:	d001      	beq.n	8007d7a <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8007d76:	2000      	movs	r0, #0
 8007d78:	e017      	b.n	8007daa <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8007d7a:	1c6a      	adds	r2, r5, #1
 8007d7c:	d0ee      	beq.n	8007d5c <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007d7e:	f7ff fd0b 	bl	8007798 <HAL_GetTick>
 8007d82:	9b08      	ldr	r3, [sp, #32]
 8007d84:	1ac0      	subs	r0, r0, r3
 8007d86:	42a8      	cmp	r0, r5
 8007d88:	d801      	bhi.n	8007d8e <I2C_WaitOnFlagUntilTimeout+0x44>
 8007d8a:	2d00      	cmp	r5, #0
 8007d8c:	d1e5      	bne.n	8007d5a <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007d8e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8007d90:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007d92:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8007d94:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8007d98:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007d9c:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007d9e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007da2:	f042 0220 	orr.w	r2, r2, #32
 8007da6:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8007da8:	2001      	movs	r0, #1
}
 8007daa:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08007dae <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8007dae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007db2:	4604      	mov	r4, r0
 8007db4:	460f      	mov	r7, r1
 8007db6:	4616      	mov	r6, r2
 8007db8:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8007dba:	6825      	ldr	r5, [r4, #0]
 8007dbc:	6968      	ldr	r0, [r5, #20]
 8007dbe:	ea27 0000 	bic.w	r0, r7, r0
 8007dc2:	b280      	uxth	r0, r0
 8007dc4:	b1b8      	cbz	r0, 8007df6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007dc6:	696b      	ldr	r3, [r5, #20]
 8007dc8:	055a      	lsls	r2, r3, #21
 8007dca:	d516      	bpl.n	8007dfa <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007dcc:	682b      	ldr	r3, [r5, #0]
 8007dce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007dd2:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007dd4:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8007dd8:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8007dda:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007ddc:	2300      	movs	r3, #0
 8007dde:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007de0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007de4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8007de8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007dea:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007dee:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007df0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8007df4:	2001      	movs	r0, #1
}
 8007df6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8007dfa:	1c73      	adds	r3, r6, #1
 8007dfc:	d0de      	beq.n	8007dbc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007dfe:	f7ff fccb 	bl	8007798 <HAL_GetTick>
 8007e02:	eba0 0008 	sub.w	r0, r0, r8
 8007e06:	42b0      	cmp	r0, r6
 8007e08:	d801      	bhi.n	8007e0e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8007e0a:	2e00      	cmp	r6, #0
 8007e0c:	d1d5      	bne.n	8007dba <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007e0e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8007e10:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007e12:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007e14:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007e18:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007e1c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007e1e:	f042 0220 	orr.w	r2, r2, #32
 8007e22:	e7e4      	b.n	8007dee <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08007e24 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8007e24:	b570      	push	{r4, r5, r6, lr}
 8007e26:	4604      	mov	r4, r0
 8007e28:	460d      	mov	r5, r1
 8007e2a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8007e2c:	6821      	ldr	r1, [r4, #0]
 8007e2e:	694b      	ldr	r3, [r1, #20]
 8007e30:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8007e34:	d001      	beq.n	8007e3a <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8007e36:	2000      	movs	r0, #0
 8007e38:	e010      	b.n	8007e5c <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8007e3a:	694a      	ldr	r2, [r1, #20]
 8007e3c:	06d2      	lsls	r2, r2, #27
 8007e3e:	d50e      	bpl.n	8007e5e <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8007e40:	f06f 0210 	mvn.w	r2, #16
 8007e44:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8007e46:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007e48:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007e4a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007e4e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8007e52:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007e54:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8007e56:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8007e5a:	2001      	movs	r0, #1
}
 8007e5c:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007e5e:	f7ff fc9b 	bl	8007798 <HAL_GetTick>
 8007e62:	1b80      	subs	r0, r0, r6
 8007e64:	42a8      	cmp	r0, r5
 8007e66:	d801      	bhi.n	8007e6c <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8007e68:	2d00      	cmp	r5, #0
 8007e6a:	d1df      	bne.n	8007e2c <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007e6c:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8007e6e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8007e70:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007e72:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007e76:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007e7a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007e7c:	f042 0220 	orr.w	r2, r2, #32
 8007e80:	e7e8      	b.n	8007e54 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08007e82 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8007e82:	b570      	push	{r4, r5, r6, lr}
 8007e84:	4604      	mov	r4, r0
 8007e86:	460d      	mov	r5, r1
 8007e88:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8007e8a:	6823      	ldr	r3, [r4, #0]
 8007e8c:	695b      	ldr	r3, [r3, #20]
 8007e8e:	075b      	lsls	r3, r3, #29
 8007e90:	d501      	bpl.n	8007e96 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8007e92:	2000      	movs	r0, #0
}
 8007e94:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007e96:	4620      	mov	r0, r4
 8007e98:	f7ff ff3d 	bl	8007d16 <I2C_IsAcknowledgeFailed>
 8007e9c:	b9a8      	cbnz	r0, 8007eca <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8007e9e:	1c6a      	adds	r2, r5, #1
 8007ea0:	d0f3      	beq.n	8007e8a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007ea2:	f7ff fc79 	bl	8007798 <HAL_GetTick>
 8007ea6:	1b80      	subs	r0, r0, r6
 8007ea8:	42a8      	cmp	r0, r5
 8007eaa:	d801      	bhi.n	8007eb0 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8007eac:	2d00      	cmp	r5, #0
 8007eae:	d1ec      	bne.n	8007e8a <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007eb0:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8007eb2:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007eb4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007eb6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007eba:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007ebe:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007ec0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007ec4:	f042 0220 	orr.w	r2, r2, #32
 8007ec8:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8007eca:	2001      	movs	r0, #1
 8007ecc:	e7e2      	b.n	8007e94 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08007ece <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8007ece:	b570      	push	{r4, r5, r6, lr}
 8007ed0:	4604      	mov	r4, r0
 8007ed2:	460d      	mov	r5, r1
 8007ed4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007ed6:	6823      	ldr	r3, [r4, #0]
 8007ed8:	695b      	ldr	r3, [r3, #20]
 8007eda:	061b      	lsls	r3, r3, #24
 8007edc:	d501      	bpl.n	8007ee2 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8007ede:	2000      	movs	r0, #0
}
 8007ee0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007ee2:	4620      	mov	r0, r4
 8007ee4:	f7ff ff17 	bl	8007d16 <I2C_IsAcknowledgeFailed>
 8007ee8:	b9a8      	cbnz	r0, 8007f16 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8007eea:	1c6a      	adds	r2, r5, #1
 8007eec:	d0f3      	beq.n	8007ed6 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007eee:	f7ff fc53 	bl	8007798 <HAL_GetTick>
 8007ef2:	1b80      	subs	r0, r0, r6
 8007ef4:	42a8      	cmp	r0, r5
 8007ef6:	d801      	bhi.n	8007efc <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8007ef8:	2d00      	cmp	r5, #0
 8007efa:	d1ec      	bne.n	8007ed6 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007efc:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8007efe:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007f00:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007f02:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007f06:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007f0a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007f0c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007f10:	f042 0220 	orr.w	r2, r2, #32
 8007f14:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8007f16:	2001      	movs	r0, #1
 8007f18:	e7e2      	b.n	8007ee0 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08007f1c <I2C_RequestMemoryWrite>:
{
 8007f1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007f20:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f22:	6802      	ldr	r2, [r0, #0]
{
 8007f24:	b085      	sub	sp, #20
 8007f26:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8007f2a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007f2c:	6813      	ldr	r3, [r2, #0]
 8007f2e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007f32:	6013      	str	r3, [r2, #0]
{
 8007f34:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007f36:	463b      	mov	r3, r7
 8007f38:	f8cd 8000 	str.w	r8, [sp]
 8007f3c:	2200      	movs	r2, #0
 8007f3e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8007f42:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007f44:	f7ff ff01 	bl	8007d4a <I2C_WaitOnFlagUntilTimeout>
 8007f48:	6823      	ldr	r3, [r4, #0]
 8007f4a:	b138      	cbz	r0, 8007f5c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007f4c:	681b      	ldr	r3, [r3, #0]
 8007f4e:	05db      	lsls	r3, r3, #23
 8007f50:	d502      	bpl.n	8007f58 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007f52:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007f56:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8007f58:	2003      	movs	r0, #3
 8007f5a:	e00a      	b.n	8007f72 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007f5c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8007f60:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007f62:	4919      	ldr	r1, [pc, #100]	; (8007fc8 <I2C_RequestMemoryWrite+0xac>)
 8007f64:	4643      	mov	r3, r8
 8007f66:	463a      	mov	r2, r7
 8007f68:	4620      	mov	r0, r4
 8007f6a:	f7ff ff20 	bl	8007dae <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007f6e:	b118      	cbz	r0, 8007f78 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8007f70:	2001      	movs	r0, #1
}
 8007f72:	b005      	add	sp, #20
 8007f74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007f78:	6823      	ldr	r3, [r4, #0]
 8007f7a:	9003      	str	r0, [sp, #12]
 8007f7c:	695a      	ldr	r2, [r3, #20]
 8007f7e:	9203      	str	r2, [sp, #12]
 8007f80:	699b      	ldr	r3, [r3, #24]
 8007f82:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007f84:	4642      	mov	r2, r8
 8007f86:	4639      	mov	r1, r7
 8007f88:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007f8a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007f8c:	f7ff ff9f 	bl	8007ece <I2C_WaitOnTXEFlagUntilTimeout>
 8007f90:	b140      	cbz	r0, 8007fa4 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007f92:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007f94:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007f96:	bf01      	itttt	eq
 8007f98:	6822      	ldreq	r2, [r4, #0]
 8007f9a:	6813      	ldreq	r3, [r2, #0]
 8007f9c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8007fa0:	6013      	streq	r3, [r2, #0]
 8007fa2:	e7e5      	b.n	8007f70 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007fa4:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007fa8:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007faa:	d102      	bne.n	8007fb2 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007fac:	b2ed      	uxtb	r5, r5
 8007fae:	611d      	str	r5, [r3, #16]
 8007fb0:	e7df      	b.n	8007f72 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8007fb2:	0a2a      	lsrs	r2, r5, #8
 8007fb4:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007fb6:	4639      	mov	r1, r7
 8007fb8:	4642      	mov	r2, r8
 8007fba:	4620      	mov	r0, r4
 8007fbc:	f7ff ff87 	bl	8007ece <I2C_WaitOnTXEFlagUntilTimeout>
 8007fc0:	2800      	cmp	r0, #0
 8007fc2:	d1e6      	bne.n	8007f92 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007fc4:	6823      	ldr	r3, [r4, #0]
 8007fc6:	e7f1      	b.n	8007fac <I2C_RequestMemoryWrite+0x90>
 8007fc8:	00010002 	.word	0x00010002

08007fcc <I2C_RequestMemoryRead>:
{
 8007fcc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007fd0:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007fd2:	6803      	ldr	r3, [r0, #0]
{
 8007fd4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007fd6:	681a      	ldr	r2, [r3, #0]
 8007fd8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007fdc:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007fde:	681a      	ldr	r2, [r3, #0]
{
 8007fe0:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007fe4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007fe8:	601a      	str	r2, [r3, #0]
{
 8007fea:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007fec:	463b      	mov	r3, r7
 8007fee:	f8cd 8000 	str.w	r8, [sp]
 8007ff2:	2200      	movs	r2, #0
 8007ff4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8007ff8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8007ffa:	f7ff fea6 	bl	8007d4a <I2C_WaitOnFlagUntilTimeout>
 8007ffe:	6823      	ldr	r3, [r4, #0]
 8008000:	b148      	cbz	r0, 8008016 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008002:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008004:	05db      	lsls	r3, r3, #23
 8008006:	d502      	bpl.n	800800e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8008008:	f44f 7300 	mov.w	r3, #512	; 0x200
 800800c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800800e:	2003      	movs	r0, #3
}
 8008010:	b004      	add	sp, #16
 8008012:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8008016:	fa5f f986 	uxtb.w	r9, r6
 800801a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800801e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8008020:	492a      	ldr	r1, [pc, #168]	; (80080cc <I2C_RequestMemoryRead+0x100>)
 8008022:	4643      	mov	r3, r8
 8008024:	463a      	mov	r2, r7
 8008026:	4620      	mov	r0, r4
 8008028:	f7ff fec1 	bl	8007dae <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800802c:	b108      	cbz	r0, 8008032 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800802e:	2001      	movs	r0, #1
 8008030:	e7ee      	b.n	8008010 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008032:	6823      	ldr	r3, [r4, #0]
 8008034:	9003      	str	r0, [sp, #12]
 8008036:	695a      	ldr	r2, [r3, #20]
 8008038:	9203      	str	r2, [sp, #12]
 800803a:	699b      	ldr	r3, [r3, #24]
 800803c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800803e:	4642      	mov	r2, r8
 8008040:	4639      	mov	r1, r7
 8008042:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8008044:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8008046:	f7ff ff42 	bl	8007ece <I2C_WaitOnTXEFlagUntilTimeout>
 800804a:	b140      	cbz	r0, 800805e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800804c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800804e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008050:	bf01      	itttt	eq
 8008052:	6822      	ldreq	r2, [r4, #0]
 8008054:	6813      	ldreq	r3, [r2, #0]
 8008056:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800805a:	6013      	streq	r3, [r2, #0]
 800805c:	e7e7      	b.n	800802e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800805e:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8008062:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8008064:	d11a      	bne.n	800809c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8008066:	b2ed      	uxtb	r5, r5
 8008068:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800806a:	4642      	mov	r2, r8
 800806c:	4639      	mov	r1, r7
 800806e:	4620      	mov	r0, r4
 8008070:	f7ff ff2d 	bl	8007ece <I2C_WaitOnTXEFlagUntilTimeout>
 8008074:	2800      	cmp	r0, #0
 8008076:	d1e9      	bne.n	800804c <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8008078:	6822      	ldr	r2, [r4, #0]
 800807a:	6813      	ldr	r3, [r2, #0]
 800807c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008080:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8008082:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8008086:	4602      	mov	r2, r0
 8008088:	f8cd 8000 	str.w	r8, [sp]
 800808c:	463b      	mov	r3, r7
 800808e:	4620      	mov	r0, r4
 8008090:	f7ff fe5b 	bl	8007d4a <I2C_WaitOnFlagUntilTimeout>
 8008094:	6822      	ldr	r2, [r4, #0]
 8008096:	b160      	cbz	r0, 80080b2 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8008098:	6813      	ldr	r3, [r2, #0]
 800809a:	e7b3      	b.n	8008004 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800809c:	0a2a      	lsrs	r2, r5, #8
 800809e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80080a0:	4639      	mov	r1, r7
 80080a2:	4642      	mov	r2, r8
 80080a4:	4620      	mov	r0, r4
 80080a6:	f7ff ff12 	bl	8007ece <I2C_WaitOnTXEFlagUntilTimeout>
 80080aa:	2800      	cmp	r0, #0
 80080ac:	d1ce      	bne.n	800804c <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80080ae:	6823      	ldr	r3, [r4, #0]
 80080b0:	e7d9      	b.n	8008066 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80080b2:	f049 0301 	orr.w	r3, r9, #1
 80080b6:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80080b8:	4904      	ldr	r1, [pc, #16]	; (80080cc <I2C_RequestMemoryRead+0x100>)
 80080ba:	4643      	mov	r3, r8
 80080bc:	463a      	mov	r2, r7
 80080be:	4620      	mov	r0, r4
 80080c0:	f7ff fe75 	bl	8007dae <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80080c4:	3800      	subs	r0, #0
 80080c6:	bf18      	it	ne
 80080c8:	2001      	movne	r0, #1
 80080ca:	e7a1      	b.n	8008010 <I2C_RequestMemoryRead+0x44>
 80080cc:	00010002 	.word	0x00010002

080080d0 <HAL_I2C_Init>:
{
 80080d0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80080d2:	4604      	mov	r4, r0
 80080d4:	b908      	cbnz	r0, 80080da <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80080d6:	2001      	movs	r0, #1
}
 80080d8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80080da:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80080de:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80080e2:	b91b      	cbnz	r3, 80080ec <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80080e4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80080e8:	f7f9 fd64 	bl	8001bb4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80080ec:	2324      	movs	r3, #36	; 0x24
 80080ee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80080f2:	6823      	ldr	r3, [r4, #0]
 80080f4:	681a      	ldr	r2, [r3, #0]
 80080f6:	f022 0201 	bic.w	r2, r2, #1
 80080fa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80080fc:	681a      	ldr	r2, [r3, #0]
 80080fe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8008102:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8008104:	681a      	ldr	r2, [r3, #0]
 8008106:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800810a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800810c:	f000 fe74 	bl	8008df8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8008110:	4b3f      	ldr	r3, [pc, #252]	; (8008210 <HAL_I2C_Init+0x140>)
 8008112:	6865      	ldr	r5, [r4, #4]
 8008114:	429d      	cmp	r5, r3
 8008116:	bf94      	ite	ls
 8008118:	4b3e      	ldrls	r3, [pc, #248]	; (8008214 <HAL_I2C_Init+0x144>)
 800811a:	4b3f      	ldrhi	r3, [pc, #252]	; (8008218 <HAL_I2C_Init+0x148>)
 800811c:	4298      	cmp	r0, r3
 800811e:	bf8c      	ite	hi
 8008120:	2300      	movhi	r3, #0
 8008122:	2301      	movls	r3, #1
 8008124:	2b00      	cmp	r3, #0
 8008126:	d1d6      	bne.n	80080d6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008128:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800812a:	4e39      	ldr	r6, [pc, #228]	; (8008210 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800812c:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800812e:	493b      	ldr	r1, [pc, #236]	; (800821c <HAL_I2C_Init+0x14c>)
 8008130:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8008134:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8008138:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800813a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800813c:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800813e:	bf88      	it	hi
 8008140:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8008144:	6a13      	ldr	r3, [r2, #32]
 8008146:	bf88      	it	hi
 8008148:	4371      	mulhi	r1, r6
 800814a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800814e:	bf84      	itt	hi
 8008150:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8008154:	fbb1 f1f6 	udivhi	r1, r1, r6
 8008158:	3101      	adds	r1, #1
 800815a:	4319      	orrs	r1, r3
 800815c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800815e:	69d1      	ldr	r1, [r2, #28]
 8008160:	1e43      	subs	r3, r0, #1
 8008162:	482b      	ldr	r0, [pc, #172]	; (8008210 <HAL_I2C_Init+0x140>)
 8008164:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8008168:	4285      	cmp	r5, r0
 800816a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800816e:	d832      	bhi.n	80081d6 <HAL_I2C_Init+0x106>
 8008170:	006d      	lsls	r5, r5, #1
 8008172:	f640 70fc 	movw	r0, #4092	; 0xffc
 8008176:	fbb3 f3f5 	udiv	r3, r3, r5
 800817a:	3301      	adds	r3, #1
 800817c:	4203      	tst	r3, r0
 800817e:	d042      	beq.n	8008206 <HAL_I2C_Init+0x136>
 8008180:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008184:	430b      	orrs	r3, r1
 8008186:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8008188:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800818c:	6811      	ldr	r1, [r2, #0]
 800818e:	4303      	orrs	r3, r0
 8008190:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8008194:	430b      	orrs	r3, r1
 8008196:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8008198:	6891      	ldr	r1, [r2, #8]
 800819a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800819e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80081a2:	4303      	orrs	r3, r0
 80081a4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80081a8:	430b      	orrs	r3, r1
 80081aa:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80081ac:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80081b0:	68d1      	ldr	r1, [r2, #12]
 80081b2:	4303      	orrs	r3, r0
 80081b4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80081b8:	430b      	orrs	r3, r1
 80081ba:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80081bc:	6813      	ldr	r3, [r2, #0]
 80081be:	f043 0301 	orr.w	r3, r3, #1
 80081c2:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80081c4:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 80081c6:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80081c8:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80081ca:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80081ce:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80081d0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80081d4:	e780      	b.n	80080d8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80081d6:	68a0      	ldr	r0, [r4, #8]
 80081d8:	b950      	cbnz	r0, 80081f0 <HAL_I2C_Init+0x120>
 80081da:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80081de:	fbb3 f3f5 	udiv	r3, r3, r5
 80081e2:	3301      	adds	r3, #1
 80081e4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80081e8:	b17b      	cbz	r3, 800820a <HAL_I2C_Init+0x13a>
 80081ea:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80081ee:	e7c9      	b.n	8008184 <HAL_I2C_Init+0xb4>
 80081f0:	2019      	movs	r0, #25
 80081f2:	4345      	muls	r5, r0
 80081f4:	fbb3 f3f5 	udiv	r3, r3, r5
 80081f8:	3301      	adds	r3, #1
 80081fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80081fe:	b123      	cbz	r3, 800820a <HAL_I2C_Init+0x13a>
 8008200:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008204:	e7be      	b.n	8008184 <HAL_I2C_Init+0xb4>
 8008206:	2304      	movs	r3, #4
 8008208:	e7bc      	b.n	8008184 <HAL_I2C_Init+0xb4>
 800820a:	2301      	movs	r3, #1
 800820c:	e7ba      	b.n	8008184 <HAL_I2C_Init+0xb4>
 800820e:	bf00      	nop
 8008210:	000186a0 	.word	0x000186a0
 8008214:	001e847f 	.word	0x001e847f
 8008218:	003d08ff 	.word	0x003d08ff
 800821c:	000f4240 	.word	0x000f4240

08008220 <HAL_I2C_Mem_Write>:
{
 8008220:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008224:	4604      	mov	r4, r0
 8008226:	4699      	mov	r9, r3
 8008228:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800822a:	460f      	mov	r7, r1
 800822c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800822e:	f7ff fab3 	bl	8007798 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008232:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008236:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8008238:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800823a:	d003      	beq.n	8008244 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800823c:	2002      	movs	r0, #2
}
 800823e:	b003      	add	sp, #12
 8008240:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8008244:	9000      	str	r0, [sp, #0]
 8008246:	493c      	ldr	r1, [pc, #240]	; (8008338 <HAL_I2C_Mem_Write+0x118>)
 8008248:	2319      	movs	r3, #25
 800824a:	2201      	movs	r2, #1
 800824c:	4620      	mov	r0, r4
 800824e:	f7ff fd7c 	bl	8007d4a <I2C_WaitOnFlagUntilTimeout>
 8008252:	2800      	cmp	r0, #0
 8008254:	d1f2      	bne.n	800823c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8008256:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800825a:	2b01      	cmp	r3, #1
 800825c:	d0ee      	beq.n	800823c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800825e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008260:	2301      	movs	r3, #1
 8008262:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008266:	6803      	ldr	r3, [r0, #0]
 8008268:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800826a:	bf5e      	ittt	pl
 800826c:	6803      	ldrpl	r3, [r0, #0]
 800826e:	f043 0301 	orrpl.w	r3, r3, #1
 8008272:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008274:	6803      	ldr	r3, [r0, #0]
 8008276:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800827a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800827c:	2321      	movs	r3, #33	; 0x21
 800827e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8008282:	2340      	movs	r3, #64	; 0x40
 8008284:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8008288:	2300      	movs	r3, #0
 800828a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800828c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800828e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8008290:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8008294:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8008296:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008298:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800829a:	4b28      	ldr	r3, [pc, #160]	; (800833c <HAL_I2C_Mem_Write+0x11c>)
 800829c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800829e:	e9cd 6500 	strd	r6, r5, [sp]
 80082a2:	464b      	mov	r3, r9
 80082a4:	4642      	mov	r2, r8
 80082a6:	4639      	mov	r1, r7
 80082a8:	4620      	mov	r0, r4
 80082aa:	f7ff fe37 	bl	8007f1c <I2C_RequestMemoryWrite>
 80082ae:	2800      	cmp	r0, #0
 80082b0:	d02a      	beq.n	8008308 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80082b2:	2001      	movs	r0, #1
 80082b4:	e7c3      	b.n	800823e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80082b6:	f7ff fe0a 	bl	8007ece <I2C_WaitOnTXEFlagUntilTimeout>
 80082ba:	b140      	cbz	r0, 80082ce <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80082bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80082be:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80082c0:	bf01      	itttt	eq
 80082c2:	6822      	ldreq	r2, [r4, #0]
 80082c4:	6813      	ldreq	r3, [r2, #0]
 80082c6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80082ca:	6013      	streq	r3, [r2, #0]
 80082cc:	e7f1      	b.n	80082b2 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80082ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80082d0:	6827      	ldr	r7, [r4, #0]
 80082d2:	461a      	mov	r2, r3
 80082d4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80082d8:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80082da:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80082dc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80082de:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80082e0:	3a01      	subs	r2, #1
 80082e2:	b292      	uxth	r2, r2
 80082e4:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80082e6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80082e8:	1e48      	subs	r0, r1, #1
 80082ea:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80082ec:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80082ee:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80082f0:	d50a      	bpl.n	8008308 <HAL_I2C_Mem_Write+0xe8>
 80082f2:	b148      	cbz	r0, 8008308 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80082f4:	785a      	ldrb	r2, [r3, #1]
 80082f6:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80082f8:	3302      	adds	r3, #2
 80082fa:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80082fc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80082fe:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8008300:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8008302:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8008304:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8008306:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8008308:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800830a:	462a      	mov	r2, r5
 800830c:	4631      	mov	r1, r6
 800830e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8008310:	2b00      	cmp	r3, #0
 8008312:	d1d0      	bne.n	80082b6 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008314:	f7ff fdb5 	bl	8007e82 <I2C_WaitOnBTFFlagUntilTimeout>
 8008318:	2800      	cmp	r0, #0
 800831a:	d1cf      	bne.n	80082bc <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800831c:	6822      	ldr	r2, [r4, #0]
 800831e:	6813      	ldr	r3, [r2, #0]
 8008320:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008324:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8008326:	2320      	movs	r3, #32
 8008328:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800832c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008330:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8008334:	e783      	b.n	800823e <HAL_I2C_Mem_Write+0x1e>
 8008336:	bf00      	nop
 8008338:	00100002 	.word	0x00100002
 800833c:	ffff0000 	.word	0xffff0000

08008340 <HAL_I2C_Mem_Read>:
{
 8008340:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008344:	4604      	mov	r4, r0
 8008346:	b087      	sub	sp, #28
 8008348:	4699      	mov	r9, r3
 800834a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800834c:	460d      	mov	r5, r1
 800834e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8008350:	f7ff fa22 	bl	8007798 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8008354:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8008358:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800835a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800835c:	d004      	beq.n	8008368 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800835e:	2502      	movs	r5, #2
}
 8008360:	4628      	mov	r0, r5
 8008362:	b007      	add	sp, #28
 8008364:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8008368:	9000      	str	r0, [sp, #0]
 800836a:	4976      	ldr	r1, [pc, #472]	; (8008544 <HAL_I2C_Mem_Read+0x204>)
 800836c:	2319      	movs	r3, #25
 800836e:	2201      	movs	r2, #1
 8008370:	4620      	mov	r0, r4
 8008372:	f7ff fcea 	bl	8007d4a <I2C_WaitOnFlagUntilTimeout>
 8008376:	2800      	cmp	r0, #0
 8008378:	d1f1      	bne.n	800835e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800837a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800837e:	2b01      	cmp	r3, #1
 8008380:	d0ed      	beq.n	800835e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8008382:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8008384:	2301      	movs	r3, #1
 8008386:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800838a:	6803      	ldr	r3, [r0, #0]
 800838c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800838e:	bf5e      	ittt	pl
 8008390:	6803      	ldrpl	r3, [r0, #0]
 8008392:	f043 0301 	orrpl.w	r3, r3, #1
 8008396:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008398:	6803      	ldr	r3, [r0, #0]
 800839a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800839e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80083a0:	2322      	movs	r3, #34	; 0x22
 80083a2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80083a6:	2340      	movs	r3, #64	; 0x40
 80083a8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80083ac:	2300      	movs	r3, #0
 80083ae:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80083b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80083b2:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80083b4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80083b8:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80083ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80083bc:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80083be:	4b62      	ldr	r3, [pc, #392]	; (8008548 <HAL_I2C_Mem_Read+0x208>)
 80083c0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80083c2:	4629      	mov	r1, r5
 80083c4:	e9cd 7600 	strd	r7, r6, [sp]
 80083c8:	464b      	mov	r3, r9
 80083ca:	4642      	mov	r2, r8
 80083cc:	4620      	mov	r0, r4
 80083ce:	f7ff fdfd 	bl	8007fcc <I2C_RequestMemoryRead>
 80083d2:	4605      	mov	r5, r0
 80083d4:	b108      	cbz	r0, 80083da <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80083d6:	2501      	movs	r5, #1
 80083d8:	e7c2      	b.n	8008360 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80083da:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80083dc:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80083de:	b9b2      	cbnz	r2, 800840e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80083e0:	9002      	str	r0, [sp, #8]
 80083e2:	695a      	ldr	r2, [r3, #20]
 80083e4:	9202      	str	r2, [sp, #8]
 80083e6:	699a      	ldr	r2, [r3, #24]
 80083e8:	9202      	str	r2, [sp, #8]
 80083ea:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80083ec:	681a      	ldr	r2, [r3, #0]
 80083ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80083f2:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80083f4:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800854c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80083f8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80083fa:	2b00      	cmp	r3, #0
 80083fc:	d12c      	bne.n	8008458 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80083fe:	2220      	movs	r2, #32
 8008400:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8008404:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8008408:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800840c:	e7a8      	b.n	8008360 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800840e:	2a01      	cmp	r2, #1
 8008410:	d10a      	bne.n	8008428 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8008412:	681a      	ldr	r2, [r3, #0]
 8008414:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008418:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800841a:	9003      	str	r0, [sp, #12]
 800841c:	695a      	ldr	r2, [r3, #20]
 800841e:	9203      	str	r2, [sp, #12]
 8008420:	699a      	ldr	r2, [r3, #24]
 8008422:	9203      	str	r2, [sp, #12]
 8008424:	9a03      	ldr	r2, [sp, #12]
 8008426:	e7e1      	b.n	80083ec <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8008428:	2a02      	cmp	r2, #2
 800842a:	d10e      	bne.n	800844a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800842c:	681a      	ldr	r2, [r3, #0]
 800842e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008432:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8008434:	681a      	ldr	r2, [r3, #0]
 8008436:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800843a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800843c:	9004      	str	r0, [sp, #16]
 800843e:	695a      	ldr	r2, [r3, #20]
 8008440:	9204      	str	r2, [sp, #16]
 8008442:	699b      	ldr	r3, [r3, #24]
 8008444:	9304      	str	r3, [sp, #16]
 8008446:	9b04      	ldr	r3, [sp, #16]
 8008448:	e7d4      	b.n	80083f4 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800844a:	9005      	str	r0, [sp, #20]
 800844c:	695a      	ldr	r2, [r3, #20]
 800844e:	9205      	str	r2, [sp, #20]
 8008450:	699b      	ldr	r3, [r3, #24]
 8008452:	9305      	str	r3, [sp, #20]
 8008454:	9b05      	ldr	r3, [sp, #20]
 8008456:	e7cd      	b.n	80083f4 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8008458:	2b03      	cmp	r3, #3
 800845a:	d856      	bhi.n	800850a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800845c:	2b01      	cmp	r3, #1
 800845e:	d115      	bne.n	800848c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8008460:	4632      	mov	r2, r6
 8008462:	4639      	mov	r1, r7
 8008464:	4620      	mov	r0, r4
 8008466:	f7ff fcdd 	bl	8007e24 <I2C_WaitOnRXNEFlagUntilTimeout>
 800846a:	2800      	cmp	r0, #0
 800846c:	d1b3      	bne.n	80083d6 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800846e:	6823      	ldr	r3, [r4, #0]
 8008470:	691a      	ldr	r2, [r3, #16]
 8008472:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008474:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8008476:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008478:	3301      	adds	r3, #1
 800847a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800847c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800847e:	3b01      	subs	r3, #1
 8008480:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8008482:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008484:	3b01      	subs	r3, #1
 8008486:	b29b      	uxth	r3, r3
 8008488:	8563      	strh	r3, [r4, #42]	; 0x2a
 800848a:	e7b5      	b.n	80083f8 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800848c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800848e:	9600      	str	r6, [sp, #0]
 8008490:	463b      	mov	r3, r7
 8008492:	f04f 0200 	mov.w	r2, #0
 8008496:	4641      	mov	r1, r8
 8008498:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800849a:	d119      	bne.n	80084d0 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800849c:	f7ff fc55 	bl	8007d4a <I2C_WaitOnFlagUntilTimeout>
 80084a0:	2800      	cmp	r0, #0
 80084a2:	d198      	bne.n	80083d6 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80084a4:	6823      	ldr	r3, [r4, #0]
 80084a6:	681a      	ldr	r2, [r3, #0]
 80084a8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80084ac:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80084ae:	691a      	ldr	r2, [r3, #16]
 80084b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80084b2:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80084b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80084b6:	1c53      	adds	r3, r2, #1
 80084b8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80084ba:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80084bc:	3b01      	subs	r3, #1
 80084be:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80084c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80084c2:	3b01      	subs	r3, #1
 80084c4:	b29b      	uxth	r3, r3
 80084c6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80084c8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80084ca:	691b      	ldr	r3, [r3, #16]
 80084cc:	7053      	strb	r3, [r2, #1]
 80084ce:	e7d2      	b.n	8008476 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80084d0:	f7ff fc3b 	bl	8007d4a <I2C_WaitOnFlagUntilTimeout>
 80084d4:	2800      	cmp	r0, #0
 80084d6:	f47f af7e 	bne.w	80083d6 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80084da:	6823      	ldr	r3, [r4, #0]
 80084dc:	681a      	ldr	r2, [r3, #0]
 80084de:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80084e2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80084e4:	691a      	ldr	r2, [r3, #16]
 80084e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80084e8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80084ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80084ec:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80084ee:	3301      	adds	r3, #1
 80084f0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80084f2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80084f4:	3b01      	subs	r3, #1
 80084f6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80084f8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80084fa:	3b01      	subs	r3, #1
 80084fc:	b29b      	uxth	r3, r3
 80084fe:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8008500:	4602      	mov	r2, r0
 8008502:	463b      	mov	r3, r7
 8008504:	4641      	mov	r1, r8
 8008506:	4620      	mov	r0, r4
 8008508:	e7c8      	b.n	800849c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800850a:	4632      	mov	r2, r6
 800850c:	4639      	mov	r1, r7
 800850e:	4620      	mov	r0, r4
 8008510:	f7ff fc88 	bl	8007e24 <I2C_WaitOnRXNEFlagUntilTimeout>
 8008514:	2800      	cmp	r0, #0
 8008516:	f47f af5e 	bne.w	80083d6 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800851a:	6823      	ldr	r3, [r4, #0]
 800851c:	691a      	ldr	r2, [r3, #16]
 800851e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008520:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8008522:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008524:	1c53      	adds	r3, r2, #1
 8008526:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8008528:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800852a:	3b01      	subs	r3, #1
 800852c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800852e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8008530:	3b01      	subs	r3, #1
 8008532:	b29b      	uxth	r3, r3
 8008534:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8008536:	6823      	ldr	r3, [r4, #0]
 8008538:	6959      	ldr	r1, [r3, #20]
 800853a:	0749      	lsls	r1, r1, #29
 800853c:	f57f af5c 	bpl.w	80083f8 <HAL_I2C_Mem_Read+0xb8>
 8008540:	e7c3      	b.n	80084ca <HAL_I2C_Mem_Read+0x18a>
 8008542:	bf00      	nop
 8008544:	00100002 	.word	0x00100002
 8008548:	ffff0000 	.word	0xffff0000
 800854c:	00010004 	.word	0x00010004

08008550 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8008550:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8008552:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008556:	2b20      	cmp	r3, #32
 8008558:	b2dc      	uxtb	r4, r3
 800855a:	d116      	bne.n	800858a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 800855c:	2324      	movs	r3, #36	; 0x24
 800855e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8008562:	6803      	ldr	r3, [r0, #0]
 8008564:	681a      	ldr	r2, [r3, #0]
 8008566:	f022 0201 	bic.w	r2, r2, #1
 800856a:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800856c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800856e:	f022 0210 	bic.w	r2, r2, #16
 8008572:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8008574:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8008576:	4311      	orrs	r1, r2
 8008578:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 800857a:	681a      	ldr	r2, [r3, #0]
 800857c:	f042 0201 	orr.w	r2, r2, #1
 8008580:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8008582:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8008586:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8008588:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800858a:	2002      	movs	r0, #2
 800858c:	e7fc      	b.n	8008588 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800858e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800858e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8008590:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008594:	2b20      	cmp	r3, #32
 8008596:	b2dc      	uxtb	r4, r3
 8008598:	d116      	bne.n	80085c8 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800859a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800859c:	2324      	movs	r3, #36	; 0x24
 800859e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 80085a2:	6813      	ldr	r3, [r2, #0]
 80085a4:	f023 0301 	bic.w	r3, r3, #1
 80085a8:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 80085aa:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 80085ac:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 80085b0:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 80085b2:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 80085b4:	b29b      	uxth	r3, r3
 80085b6:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80085b8:	6813      	ldr	r3, [r2, #0]
 80085ba:	f043 0301 	orr.w	r3, r3, #1
 80085be:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80085c0:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80085c4:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80085c6:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80085c8:	2002      	movs	r0, #2
 80085ca:	e7fc      	b.n	80085c6 <HAL_I2CEx_ConfigDigitalFilter+0x38>

080085cc <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80085cc:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80085ce:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80085d2:	01d2      	lsls	r2, r2, #7
 80085d4:	3284      	adds	r2, #132	; 0x84
 80085d6:	1883      	adds	r3, r0, r2
{
 80085d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80085dc:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80085de:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80085e0:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80085e2:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80085e6:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80085ea:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80085ec:	68c5      	ldr	r5, [r0, #12]
 80085ee:	f10c 0701 	add.w	r7, ip, #1
 80085f2:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80085f6:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80085fa:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80085fc:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80085fe:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8008602:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8008604:	68c5      	ldr	r5, [r0, #12]
 8008606:	68ce      	ldr	r6, [r1, #12]
 8008608:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800860c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800860e:	689d      	ldr	r5, [r3, #8]
 8008610:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8008614:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8008616:	68c7      	ldr	r7, [r0, #12]
 8008618:	688d      	ldr	r5, [r1, #8]
 800861a:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800861e:	3501      	adds	r5, #1
 8008620:	443d      	add	r5, r7
 8008622:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8008626:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8008628:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800862a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800862c:	f025 0507 	bic.w	r5, r5, #7
 8008630:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8008632:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8008636:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8008638:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800863a:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800863e:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8008642:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8008646:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800864a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800864e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8008652:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8008656:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8008658:	695d      	ldr	r5, [r3, #20]
 800865a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800865e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8008660:	694d      	ldr	r5, [r1, #20]
 8008662:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8008664:	69dd      	ldr	r5, [r3, #28]
 8008666:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800866a:	f025 0507 	bic.w	r5, r5, #7
 800866e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8008670:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8008674:	433d      	orrs	r5, r7
 8008676:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8008678:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800867a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800867c:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8008680:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8008682:	b31e      	cbz	r6, 80086cc <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8008684:	2e01      	cmp	r6, #1
 8008686:	d023      	beq.n	80086d0 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8008688:	1eb5      	subs	r5, r6, #2
 800868a:	2d02      	cmp	r5, #2
 800868c:	d922      	bls.n	80086d4 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800868e:	2e07      	cmp	r6, #7
 8008690:	bf0c      	ite	eq
 8008692:	2502      	moveq	r5, #2
 8008694:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8008696:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8008698:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800869c:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800869e:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80086a2:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80086a4:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80086a6:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80086a8:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80086aa:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 80086ac:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80086b0:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80086b2:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80086b4:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80086b8:	f024 0407 	bic.w	r4, r4, #7
 80086bc:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80086be:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80086c0:	5883      	ldr	r3, [r0, r2]
 80086c2:	f043 0301 	orr.w	r3, r3, #1
 80086c6:	5083      	str	r3, [r0, r2]
}
 80086c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80086cc:	2504      	movs	r5, #4
 80086ce:	e7e2      	b.n	8008696 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80086d0:	2503      	movs	r5, #3
 80086d2:	e7e0      	b.n	8008696 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80086d4:	2502      	movs	r5, #2
 80086d6:	e7de      	b.n	8008696 <LTDC_SetConfig+0xca>

080086d8 <HAL_LTDC_Init>:
{
 80086d8:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80086da:	4604      	mov	r4, r0
 80086dc:	2800      	cmp	r0, #0
 80086de:	d063      	beq.n	80087a8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80086e0:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80086e4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80086e8:	b91b      	cbnz	r3, 80086f2 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80086ea:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80086ee:	f7f9 fabd 	bl	8001c6c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80086f2:	2302      	movs	r3, #2
 80086f4:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80086f8:	6823      	ldr	r3, [r4, #0]
 80086fa:	699a      	ldr	r2, [r3, #24]
 80086fc:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8008700:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008702:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8008706:	4302      	orrs	r2, r0
 8008708:	68e0      	ldr	r0, [r4, #12]
 800870a:	6999      	ldr	r1, [r3, #24]
 800870c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800870e:	6920      	ldr	r0, [r4, #16]
 8008710:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8008712:	430a      	orrs	r2, r1
 8008714:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8008716:	689a      	ldr	r2, [r3, #8]
 8008718:	4924      	ldr	r1, [pc, #144]	; (80087ac <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800871a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800871c:	400a      	ands	r2, r1
 800871e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8008720:	689a      	ldr	r2, [r3, #8]
 8008722:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008726:	69a0      	ldr	r0, [r4, #24]
 8008728:	4302      	orrs	r2, r0
 800872a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800872c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800872e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8008730:	400a      	ands	r2, r1
 8008732:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8008734:	68da      	ldr	r2, [r3, #12]
 8008736:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800873a:	6a20      	ldr	r0, [r4, #32]
 800873c:	4302      	orrs	r2, r0
 800873e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8008740:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8008742:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8008744:	400a      	ands	r2, r1
 8008746:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8008748:	691a      	ldr	r2, [r3, #16]
 800874a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800874e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8008750:	4302      	orrs	r2, r0
 8008752:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8008754:	695a      	ldr	r2, [r3, #20]
 8008756:	4011      	ands	r1, r2
 8008758:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800875a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800875c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800875e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8008762:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8008764:	430a      	orrs	r2, r1
 8008766:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8008768:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800876a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800876e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8008772:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8008776:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8008778:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800877a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800877e:	430a      	orrs	r2, r1
 8008780:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8008784:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8008788:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800878a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800878c:	f042 0206 	orr.w	r2, r2, #6
 8008790:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8008792:	699a      	ldr	r2, [r3, #24]
 8008794:	f042 0201 	orr.w	r2, r2, #1
 8008798:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800879a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800879c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800879e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80087a2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80087a6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80087a8:	2001      	movs	r0, #1
 80087aa:	e7fc      	b.n	80087a6 <HAL_LTDC_Init+0xce>
 80087ac:	f000f800 	.word	0xf000f800

080087b0 <HAL_LTDC_ErrorCallback>:
 80087b0:	4770      	bx	lr

080087b2 <HAL_LTDC_ReloadEventCallback>:
 80087b2:	4770      	bx	lr

080087b4 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80087b4:	6803      	ldr	r3, [r0, #0]
{
 80087b6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80087b8:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80087ba:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80087bc:	0772      	lsls	r2, r6, #29
{
 80087be:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80087c0:	d514      	bpl.n	80087ec <HAL_LTDC_IRQHandler+0x38>
 80087c2:	0769      	lsls	r1, r5, #29
 80087c4:	d512      	bpl.n	80087ec <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80087c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80087c8:	f022 0204 	bic.w	r2, r2, #4
 80087cc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80087ce:	2204      	movs	r2, #4
 80087d0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80087d2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80087d6:	f043 0301 	orr.w	r3, r3, #1
 80087da:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80087de:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80087e0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80087e4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80087e8:	f7ff ffe2 	bl	80087b0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80087ec:	07b2      	lsls	r2, r6, #30
 80087ee:	d516      	bpl.n	800881e <HAL_LTDC_IRQHandler+0x6a>
 80087f0:	07ab      	lsls	r3, r5, #30
 80087f2:	d514      	bpl.n	800881e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80087f4:	6823      	ldr	r3, [r4, #0]
 80087f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80087f8:	f022 0202 	bic.w	r2, r2, #2
 80087fc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80087fe:	2202      	movs	r2, #2
 8008800:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8008802:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8008806:	4313      	orrs	r3, r2
 8008808:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800880c:	2304      	movs	r3, #4
 800880e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8008812:	2300      	movs	r3, #0
 8008814:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8008818:	4620      	mov	r0, r4
 800881a:	f7ff ffc9 	bl	80087b0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800881e:	07f0      	lsls	r0, r6, #31
 8008820:	d510      	bpl.n	8008844 <HAL_LTDC_IRQHandler+0x90>
 8008822:	07e9      	lsls	r1, r5, #31
 8008824:	d50e      	bpl.n	8008844 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8008826:	6823      	ldr	r3, [r4, #0]
 8008828:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800882a:	f022 0201 	bic.w	r2, r2, #1
 800882e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8008830:	2201      	movs	r2, #1
 8008832:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8008834:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8008836:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800883a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800883e:	4620      	mov	r0, r4
 8008840:	f7f8 fc90 	bl	8001164 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8008844:	0732      	lsls	r2, r6, #28
 8008846:	d511      	bpl.n	800886c <HAL_LTDC_IRQHandler+0xb8>
 8008848:	072b      	lsls	r3, r5, #28
 800884a:	d50f      	bpl.n	800886c <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800884c:	6823      	ldr	r3, [r4, #0]
 800884e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008850:	f022 0208 	bic.w	r2, r2, #8
 8008854:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8008856:	2208      	movs	r2, #8
 8008858:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800885a:	2301      	movs	r3, #1
 800885c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8008860:	2300      	movs	r3, #0
 8008862:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8008866:	4620      	mov	r0, r4
 8008868:	f7ff ffa3 	bl	80087b2 <HAL_LTDC_ReloadEventCallback>
}
 800886c:	bd70      	pop	{r4, r5, r6, pc}

0800886e <HAL_LTDC_ConfigLayer>:
{
 800886e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8008872:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8008876:	2b01      	cmp	r3, #1
{
 8008878:	4606      	mov	r6, r0
 800887a:	460f      	mov	r7, r1
 800887c:	4694      	mov	ip, r2
 800887e:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8008882:	d01f      	beq.n	80088c4 <HAL_LTDC_ConfigLayer+0x56>
 8008884:	f04f 0801 	mov.w	r8, #1
 8008888:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800888c:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8008890:	2434      	movs	r4, #52	; 0x34
 8008892:	460d      	mov	r5, r1
 8008894:	fb04 6402 	mla	r4, r4, r2, r6
 8008898:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800889a:	3438      	adds	r4, #56	; 0x38
 800889c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800889e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80088a0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80088a2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80088a4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80088a6:	682b      	ldr	r3, [r5, #0]
 80088a8:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80088aa:	4630      	mov	r0, r6
 80088ac:	4662      	mov	r2, ip
 80088ae:	4639      	mov	r1, r7
 80088b0:	f7ff fe8c 	bl	80085cc <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80088b4:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80088b6:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80088b8:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80088bc:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80088c0:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80088c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080088c8 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80088c8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80088cc:	2b01      	cmp	r3, #1
 80088ce:	f04f 0302 	mov.w	r3, #2
 80088d2:	d012      	beq.n	80088fa <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80088d4:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80088d8:	6803      	ldr	r3, [r0, #0]
 80088da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80088dc:	f022 0201 	bic.w	r2, r2, #1
 80088e0:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80088e2:	4a07      	ldr	r2, [pc, #28]	; (8008900 <HAL_LTDC_ProgramLineEvent+0x38>)
 80088e4:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80088e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80088e8:	f042 0201 	orr.w	r2, r2, #1
 80088ec:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80088ee:	2301      	movs	r3, #1
 80088f0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80088f4:	2300      	movs	r3, #0
 80088f6:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80088fa:	4618      	mov	r0, r3
}
 80088fc:	4770      	bx	lr
 80088fe:	bf00      	nop
 8008900:	40016800 	.word	0x40016800

08008904 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8008904:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8008908:	4604      	mov	r4, r0
 800890a:	b340      	cbz	r0, 800895e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800890c:	6803      	ldr	r3, [r0, #0]
 800890e:	07dd      	lsls	r5, r3, #31
 8008910:	d410      	bmi.n	8008934 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8008912:	6823      	ldr	r3, [r4, #0]
 8008914:	0798      	lsls	r0, r3, #30
 8008916:	d45e      	bmi.n	80089d6 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8008918:	6823      	ldr	r3, [r4, #0]
 800891a:	071a      	lsls	r2, r3, #28
 800891c:	f100 80a0 	bmi.w	8008a60 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8008920:	6823      	ldr	r3, [r4, #0]
 8008922:	075b      	lsls	r3, r3, #29
 8008924:	f100 80c0 	bmi.w	8008aa8 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8008928:	69a0      	ldr	r0, [r4, #24]
 800892a:	2800      	cmp	r0, #0
 800892c:	f040 8128 	bne.w	8008b80 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8008930:	2000      	movs	r0, #0
 8008932:	e02b      	b.n	800898c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8008934:	4b8f      	ldr	r3, [pc, #572]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
 8008936:	689a      	ldr	r2, [r3, #8]
 8008938:	f002 020c 	and.w	r2, r2, #12
 800893c:	2a04      	cmp	r2, #4
 800893e:	d007      	beq.n	8008950 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008940:	689a      	ldr	r2, [r3, #8]
 8008942:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8008946:	2a08      	cmp	r2, #8
 8008948:	d10b      	bne.n	8008962 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800894a:	685a      	ldr	r2, [r3, #4]
 800894c:	0251      	lsls	r1, r2, #9
 800894e:	d508      	bpl.n	8008962 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8008950:	4b88      	ldr	r3, [pc, #544]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
 8008952:	681b      	ldr	r3, [r3, #0]
 8008954:	039a      	lsls	r2, r3, #14
 8008956:	d5dc      	bpl.n	8008912 <HAL_RCC_OscConfig+0xe>
 8008958:	6863      	ldr	r3, [r4, #4]
 800895a:	2b00      	cmp	r3, #0
 800895c:	d1d9      	bne.n	8008912 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800895e:	2001      	movs	r0, #1
 8008960:	e014      	b.n	800898c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008962:	6862      	ldr	r2, [r4, #4]
 8008964:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8008968:	d113      	bne.n	8008992 <HAL_RCC_OscConfig+0x8e>
 800896a:	681a      	ldr	r2, [r3, #0]
 800896c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8008970:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008972:	f7fe ff11 	bl	8007798 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008976:	4e7f      	ldr	r6, [pc, #508]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008978:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800897a:	6833      	ldr	r3, [r6, #0]
 800897c:	039b      	lsls	r3, r3, #14
 800897e:	d4c8      	bmi.n	8008912 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008980:	f7fe ff0a 	bl	8007798 <HAL_GetTick>
 8008984:	1b40      	subs	r0, r0, r5
 8008986:	2864      	cmp	r0, #100	; 0x64
 8008988:	d9f7      	bls.n	800897a <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800898a:	2003      	movs	r0, #3
}
 800898c:	b002      	add	sp, #8
 800898e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008992:	4d78      	ldr	r5, [pc, #480]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
 8008994:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8008998:	682b      	ldr	r3, [r5, #0]
 800899a:	d107      	bne.n	80089ac <HAL_RCC_OscConfig+0xa8>
 800899c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80089a0:	602b      	str	r3, [r5, #0]
 80089a2:	682b      	ldr	r3, [r5, #0]
 80089a4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80089a8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80089aa:	e7e2      	b.n	8008972 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80089ac:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80089b0:	602b      	str	r3, [r5, #0]
 80089b2:	682b      	ldr	r3, [r5, #0]
 80089b4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80089b8:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80089ba:	2a00      	cmp	r2, #0
 80089bc:	d1d9      	bne.n	8008972 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80089be:	f7fe feeb 	bl	8007798 <HAL_GetTick>
 80089c2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80089c4:	682b      	ldr	r3, [r5, #0]
 80089c6:	039f      	lsls	r7, r3, #14
 80089c8:	d5a3      	bpl.n	8008912 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80089ca:	f7fe fee5 	bl	8007798 <HAL_GetTick>
 80089ce:	1b80      	subs	r0, r0, r6
 80089d0:	2864      	cmp	r0, #100	; 0x64
 80089d2:	d9f7      	bls.n	80089c4 <HAL_RCC_OscConfig+0xc0>
 80089d4:	e7d9      	b.n	800898a <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80089d6:	4b67      	ldr	r3, [pc, #412]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
 80089d8:	689a      	ldr	r2, [r3, #8]
 80089da:	f012 0f0c 	tst.w	r2, #12
 80089de:	d007      	beq.n	80089f0 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80089e0:	689a      	ldr	r2, [r3, #8]
 80089e2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80089e6:	2a08      	cmp	r2, #8
 80089e8:	d111      	bne.n	8008a0e <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80089ea:	685b      	ldr	r3, [r3, #4]
 80089ec:	025e      	lsls	r6, r3, #9
 80089ee:	d40e      	bmi.n	8008a0e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80089f0:	4a60      	ldr	r2, [pc, #384]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
 80089f2:	6813      	ldr	r3, [r2, #0]
 80089f4:	079d      	lsls	r5, r3, #30
 80089f6:	d502      	bpl.n	80089fe <HAL_RCC_OscConfig+0xfa>
 80089f8:	68e3      	ldr	r3, [r4, #12]
 80089fa:	2b01      	cmp	r3, #1
 80089fc:	d1af      	bne.n	800895e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80089fe:	6813      	ldr	r3, [r2, #0]
 8008a00:	6921      	ldr	r1, [r4, #16]
 8008a02:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008a06:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8008a0a:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008a0c:	e784      	b.n	8008918 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8008a0e:	68e2      	ldr	r2, [r4, #12]
 8008a10:	4b59      	ldr	r3, [pc, #356]	; (8008b78 <HAL_RCC_OscConfig+0x274>)
 8008a12:	b1b2      	cbz	r2, 8008a42 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8008a14:	2201      	movs	r2, #1
 8008a16:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008a18:	f7fe febe 	bl	8007798 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008a1c:	4d55      	ldr	r5, [pc, #340]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008a1e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008a20:	682b      	ldr	r3, [r5, #0]
 8008a22:	0798      	lsls	r0, r3, #30
 8008a24:	d507      	bpl.n	8008a36 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008a26:	682b      	ldr	r3, [r5, #0]
 8008a28:	6922      	ldr	r2, [r4, #16]
 8008a2a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008a2e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008a32:	602b      	str	r3, [r5, #0]
 8008a34:	e770      	b.n	8008918 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008a36:	f7fe feaf 	bl	8007798 <HAL_GetTick>
 8008a3a:	1b80      	subs	r0, r0, r6
 8008a3c:	2802      	cmp	r0, #2
 8008a3e:	d9ef      	bls.n	8008a20 <HAL_RCC_OscConfig+0x11c>
 8008a40:	e7a3      	b.n	800898a <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8008a42:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008a44:	f7fe fea8 	bl	8007798 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008a48:	4e4a      	ldr	r6, [pc, #296]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008a4a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008a4c:	6833      	ldr	r3, [r6, #0]
 8008a4e:	0799      	lsls	r1, r3, #30
 8008a50:	f57f af62 	bpl.w	8008918 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008a54:	f7fe fea0 	bl	8007798 <HAL_GetTick>
 8008a58:	1b40      	subs	r0, r0, r5
 8008a5a:	2802      	cmp	r0, #2
 8008a5c:	d9f6      	bls.n	8008a4c <HAL_RCC_OscConfig+0x148>
 8008a5e:	e794      	b.n	800898a <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8008a60:	6962      	ldr	r2, [r4, #20]
 8008a62:	4b45      	ldr	r3, [pc, #276]	; (8008b78 <HAL_RCC_OscConfig+0x274>)
 8008a64:	b182      	cbz	r2, 8008a88 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8008a66:	2201      	movs	r2, #1
 8008a68:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8008a6c:	f7fe fe94 	bl	8007798 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008a70:	4e40      	ldr	r6, [pc, #256]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008a72:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008a74:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8008a76:	079f      	lsls	r7, r3, #30
 8008a78:	f53f af52 	bmi.w	8008920 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008a7c:	f7fe fe8c 	bl	8007798 <HAL_GetTick>
 8008a80:	1b40      	subs	r0, r0, r5
 8008a82:	2802      	cmp	r0, #2
 8008a84:	d9f6      	bls.n	8008a74 <HAL_RCC_OscConfig+0x170>
 8008a86:	e780      	b.n	800898a <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8008a88:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8008a8c:	f7fe fe84 	bl	8007798 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008a90:	4e38      	ldr	r6, [pc, #224]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008a92:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008a94:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8008a96:	0798      	lsls	r0, r3, #30
 8008a98:	f57f af42 	bpl.w	8008920 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008a9c:	f7fe fe7c 	bl	8007798 <HAL_GetTick>
 8008aa0:	1b40      	subs	r0, r0, r5
 8008aa2:	2802      	cmp	r0, #2
 8008aa4:	d9f6      	bls.n	8008a94 <HAL_RCC_OscConfig+0x190>
 8008aa6:	e770      	b.n	800898a <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008aa8:	4b32      	ldr	r3, [pc, #200]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
 8008aaa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008aac:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8008ab0:	d128      	bne.n	8008b04 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8008ab2:	9201      	str	r2, [sp, #4]
 8008ab4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008ab6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8008aba:	641a      	str	r2, [r3, #64]	; 0x40
 8008abc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008abe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008ac2:	9301      	str	r3, [sp, #4]
 8008ac4:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8008ac6:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008ac8:	4d2c      	ldr	r5, [pc, #176]	; (8008b7c <HAL_RCC_OscConfig+0x278>)
 8008aca:	682b      	ldr	r3, [r5, #0]
 8008acc:	05d9      	lsls	r1, r3, #23
 8008ace:	d51b      	bpl.n	8008b08 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008ad0:	68a3      	ldr	r3, [r4, #8]
 8008ad2:	4d28      	ldr	r5, [pc, #160]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
 8008ad4:	2b01      	cmp	r3, #1
 8008ad6:	d127      	bne.n	8008b28 <HAL_RCC_OscConfig+0x224>
 8008ad8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008ada:	f043 0301 	orr.w	r3, r3, #1
 8008ade:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8008ae0:	f7fe fe5a 	bl	8007798 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008ae4:	4e23      	ldr	r6, [pc, #140]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008ae6:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008ae8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008aec:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8008aee:	079b      	lsls	r3, r3, #30
 8008af0:	d539      	bpl.n	8008b66 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8008af2:	2f00      	cmp	r7, #0
 8008af4:	f43f af18 	beq.w	8008928 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8008af8:	4a1e      	ldr	r2, [pc, #120]	; (8008b74 <HAL_RCC_OscConfig+0x270>)
 8008afa:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8008afc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008b00:	6413      	str	r3, [r2, #64]	; 0x40
 8008b02:	e711      	b.n	8008928 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8008b04:	2700      	movs	r7, #0
 8008b06:	e7df      	b.n	8008ac8 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8008b08:	682b      	ldr	r3, [r5, #0]
 8008b0a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008b0e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8008b10:	f7fe fe42 	bl	8007798 <HAL_GetTick>
 8008b14:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008b16:	682b      	ldr	r3, [r5, #0]
 8008b18:	05da      	lsls	r2, r3, #23
 8008b1a:	d4d9      	bmi.n	8008ad0 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008b1c:	f7fe fe3c 	bl	8007798 <HAL_GetTick>
 8008b20:	1b80      	subs	r0, r0, r6
 8008b22:	2802      	cmp	r0, #2
 8008b24:	d9f7      	bls.n	8008b16 <HAL_RCC_OscConfig+0x212>
 8008b26:	e730      	b.n	800898a <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008b28:	2b05      	cmp	r3, #5
 8008b2a:	d104      	bne.n	8008b36 <HAL_RCC_OscConfig+0x232>
 8008b2c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008b2e:	f043 0304 	orr.w	r3, r3, #4
 8008b32:	672b      	str	r3, [r5, #112]	; 0x70
 8008b34:	e7d0      	b.n	8008ad8 <HAL_RCC_OscConfig+0x1d4>
 8008b36:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8008b38:	f022 0201 	bic.w	r2, r2, #1
 8008b3c:	672a      	str	r2, [r5, #112]	; 0x70
 8008b3e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8008b40:	f022 0204 	bic.w	r2, r2, #4
 8008b44:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8008b46:	2b00      	cmp	r3, #0
 8008b48:	d1ca      	bne.n	8008ae0 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8008b4a:	f7fe fe25 	bl	8007798 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008b4e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8008b52:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008b54:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008b56:	0798      	lsls	r0, r3, #30
 8008b58:	d5cb      	bpl.n	8008af2 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008b5a:	f7fe fe1d 	bl	8007798 <HAL_GetTick>
 8008b5e:	1b80      	subs	r0, r0, r6
 8008b60:	4540      	cmp	r0, r8
 8008b62:	d9f7      	bls.n	8008b54 <HAL_RCC_OscConfig+0x250>
 8008b64:	e711      	b.n	800898a <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008b66:	f7fe fe17 	bl	8007798 <HAL_GetTick>
 8008b6a:	1b40      	subs	r0, r0, r5
 8008b6c:	4540      	cmp	r0, r8
 8008b6e:	d9bd      	bls.n	8008aec <HAL_RCC_OscConfig+0x1e8>
 8008b70:	e70b      	b.n	800898a <HAL_RCC_OscConfig+0x86>
 8008b72:	bf00      	nop
 8008b74:	40023800 	.word	0x40023800
 8008b78:	42470000 	.word	0x42470000
 8008b7c:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8008b80:	4d36      	ldr	r5, [pc, #216]	; (8008c5c <HAL_RCC_OscConfig+0x358>)
 8008b82:	68ab      	ldr	r3, [r5, #8]
 8008b84:	f003 030c 	and.w	r3, r3, #12
 8008b88:	2b08      	cmp	r3, #8
 8008b8a:	d03d      	beq.n	8008c08 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008b8c:	4b34      	ldr	r3, [pc, #208]	; (8008c60 <HAL_RCC_OscConfig+0x35c>)
 8008b8e:	2200      	movs	r2, #0
 8008b90:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8008b92:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008b94:	d12b      	bne.n	8008bee <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8008b96:	f7fe fdff 	bl	8007798 <HAL_GetTick>
 8008b9a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008b9c:	682b      	ldr	r3, [r5, #0]
 8008b9e:	0199      	lsls	r1, r3, #6
 8008ba0:	d41f      	bmi.n	8008be2 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8008ba2:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8008ba6:	4313      	orrs	r3, r2
 8008ba8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008baa:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8008bae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008bb4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8008bb6:	0852      	lsrs	r2, r2, #1
 8008bb8:	3a01      	subs	r2, #1
 8008bba:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008bbe:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8008bc0:	4b27      	ldr	r3, [pc, #156]	; (8008c60 <HAL_RCC_OscConfig+0x35c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008bc2:	4d26      	ldr	r5, [pc, #152]	; (8008c5c <HAL_RCC_OscConfig+0x358>)
        __HAL_RCC_PLL_ENABLE();
 8008bc4:	2201      	movs	r2, #1
 8008bc6:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8008bc8:	f7fe fde6 	bl	8007798 <HAL_GetTick>
 8008bcc:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008bce:	682b      	ldr	r3, [r5, #0]
 8008bd0:	019a      	lsls	r2, r3, #6
 8008bd2:	f53f aead 	bmi.w	8008930 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008bd6:	f7fe fddf 	bl	8007798 <HAL_GetTick>
 8008bda:	1b00      	subs	r0, r0, r4
 8008bdc:	2802      	cmp	r0, #2
 8008bde:	d9f6      	bls.n	8008bce <HAL_RCC_OscConfig+0x2ca>
 8008be0:	e6d3      	b.n	800898a <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008be2:	f7fe fdd9 	bl	8007798 <HAL_GetTick>
 8008be6:	1b80      	subs	r0, r0, r6
 8008be8:	2802      	cmp	r0, #2
 8008bea:	d9d7      	bls.n	8008b9c <HAL_RCC_OscConfig+0x298>
 8008bec:	e6cd      	b.n	800898a <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8008bee:	f7fe fdd3 	bl	8007798 <HAL_GetTick>
 8008bf2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008bf4:	682b      	ldr	r3, [r5, #0]
 8008bf6:	019b      	lsls	r3, r3, #6
 8008bf8:	f57f ae9a 	bpl.w	8008930 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008bfc:	f7fe fdcc 	bl	8007798 <HAL_GetTick>
 8008c00:	1b00      	subs	r0, r0, r4
 8008c02:	2802      	cmp	r0, #2
 8008c04:	d9f6      	bls.n	8008bf4 <HAL_RCC_OscConfig+0x2f0>
 8008c06:	e6c0      	b.n	800898a <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8008c08:	2801      	cmp	r0, #1
 8008c0a:	f43f aebf 	beq.w	800898c <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8008c0e:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008c10:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008c12:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008c16:	4291      	cmp	r1, r2
 8008c18:	f47f aea1 	bne.w	800895e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008c1c:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008c1e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008c22:	428a      	cmp	r2, r1
 8008c24:	f47f ae9b 	bne.w	800895e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008c28:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008c2a:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8008c2e:	401a      	ands	r2, r3
 8008c30:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8008c34:	f47f ae93 	bne.w	800895e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8008c38:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8008c3a:	0852      	lsrs	r2, r2, #1
 8008c3c:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8008c40:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008c42:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8008c46:	f47f ae8a 	bne.w	800895e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8008c4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008c4c:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8008c50:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8008c54:	f43f ae6c 	beq.w	8008930 <HAL_RCC_OscConfig+0x2c>
 8008c58:	e681      	b.n	800895e <HAL_RCC_OscConfig+0x5a>
 8008c5a:	bf00      	nop
 8008c5c:	40023800 	.word	0x40023800
 8008c60:	42470000 	.word	0x42470000

08008c64 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008c64:	4913      	ldr	r1, [pc, #76]	; (8008cb4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8008c66:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008c68:	688b      	ldr	r3, [r1, #8]
 8008c6a:	f003 030c 	and.w	r3, r3, #12
 8008c6e:	2b04      	cmp	r3, #4
 8008c70:	d01c      	beq.n	8008cac <HAL_RCC_GetSysClockFreq+0x48>
 8008c72:	2b08      	cmp	r3, #8
 8008c74:	d11c      	bne.n	8008cb0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008c76:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008c78:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008c7a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008c7c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008c80:	bf14      	ite	ne
 8008c82:	480d      	ldrne	r0, [pc, #52]	; (8008cb8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008c84:	480d      	ldreq	r0, [pc, #52]	; (8008cbc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008c86:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8008c8a:	bf18      	it	ne
 8008c8c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008c8e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008c92:	fba1 0100 	umull	r0, r1, r1, r0
 8008c96:	f7f7 fb03 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8008c9a:	4b06      	ldr	r3, [pc, #24]	; (8008cb4 <HAL_RCC_GetSysClockFreq+0x50>)
 8008c9c:	685b      	ldr	r3, [r3, #4]
 8008c9e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8008ca2:	3301      	adds	r3, #1
 8008ca4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8008ca6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8008caa:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008cac:	4802      	ldr	r0, [pc, #8]	; (8008cb8 <HAL_RCC_GetSysClockFreq+0x54>)
 8008cae:	e7fc      	b.n	8008caa <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8008cb0:	4802      	ldr	r0, [pc, #8]	; (8008cbc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8008cb2:	e7fa      	b.n	8008caa <HAL_RCC_GetSysClockFreq+0x46>
 8008cb4:	40023800 	.word	0x40023800
 8008cb8:	007a1200 	.word	0x007a1200
 8008cbc:	00f42400 	.word	0x00f42400

08008cc0 <HAL_RCC_ClockConfig>:
{
 8008cc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008cc4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8008cc6:	4604      	mov	r4, r0
 8008cc8:	b910      	cbnz	r0, 8008cd0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8008cca:	2001      	movs	r0, #1
}
 8008ccc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8008cd0:	4b44      	ldr	r3, [pc, #272]	; (8008de4 <HAL_RCC_ClockConfig+0x124>)
 8008cd2:	681a      	ldr	r2, [r3, #0]
 8008cd4:	f002 020f 	and.w	r2, r2, #15
 8008cd8:	428a      	cmp	r2, r1
 8008cda:	d328      	bcc.n	8008d2e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8008cdc:	6822      	ldr	r2, [r4, #0]
 8008cde:	0797      	lsls	r7, r2, #30
 8008ce0:	d42d      	bmi.n	8008d3e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008ce2:	07d0      	lsls	r0, r2, #31
 8008ce4:	d441      	bmi.n	8008d6a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8008ce6:	4b3f      	ldr	r3, [pc, #252]	; (8008de4 <HAL_RCC_ClockConfig+0x124>)
 8008ce8:	681a      	ldr	r2, [r3, #0]
 8008cea:	f002 020f 	and.w	r2, r2, #15
 8008cee:	42aa      	cmp	r2, r5
 8008cf0:	d866      	bhi.n	8008dc0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008cf2:	6822      	ldr	r2, [r4, #0]
 8008cf4:	0751      	lsls	r1, r2, #29
 8008cf6:	d46c      	bmi.n	8008dd2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008cf8:	0713      	lsls	r3, r2, #28
 8008cfa:	d507      	bpl.n	8008d0c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8008cfc:	4a3a      	ldr	r2, [pc, #232]	; (8008de8 <HAL_RCC_ClockConfig+0x128>)
 8008cfe:	6921      	ldr	r1, [r4, #16]
 8008d00:	6893      	ldr	r3, [r2, #8]
 8008d02:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8008d06:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8008d0a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8008d0c:	f7ff ffaa 	bl	8008c64 <HAL_RCC_GetSysClockFreq>
 8008d10:	4b35      	ldr	r3, [pc, #212]	; (8008de8 <HAL_RCC_ClockConfig+0x128>)
 8008d12:	4a36      	ldr	r2, [pc, #216]	; (8008dec <HAL_RCC_ClockConfig+0x12c>)
 8008d14:	689b      	ldr	r3, [r3, #8]
 8008d16:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8008d1a:	5cd3      	ldrb	r3, [r2, r3]
 8008d1c:	40d8      	lsrs	r0, r3
 8008d1e:	4b34      	ldr	r3, [pc, #208]	; (8008df0 <HAL_RCC_ClockConfig+0x130>)
 8008d20:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8008d22:	4b34      	ldr	r3, [pc, #208]	; (8008df4 <HAL_RCC_ClockConfig+0x134>)
 8008d24:	6818      	ldr	r0, [r3, #0]
 8008d26:	f7f9 f9c9 	bl	80020bc <HAL_InitTick>
  return HAL_OK;
 8008d2a:	2000      	movs	r0, #0
 8008d2c:	e7ce      	b.n	8008ccc <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008d2e:	b2ca      	uxtb	r2, r1
 8008d30:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8008d32:	681b      	ldr	r3, [r3, #0]
 8008d34:	f003 030f 	and.w	r3, r3, #15
 8008d38:	428b      	cmp	r3, r1
 8008d3a:	d1c6      	bne.n	8008cca <HAL_RCC_ClockConfig+0xa>
 8008d3c:	e7ce      	b.n	8008cdc <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8008d3e:	4b2a      	ldr	r3, [pc, #168]	; (8008de8 <HAL_RCC_ClockConfig+0x128>)
 8008d40:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8008d44:	bf1e      	ittt	ne
 8008d46:	6899      	ldrne	r1, [r3, #8]
 8008d48:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8008d4c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8008d4e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8008d50:	bf42      	ittt	mi
 8008d52:	6899      	ldrmi	r1, [r3, #8]
 8008d54:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8008d58:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8008d5a:	4923      	ldr	r1, [pc, #140]	; (8008de8 <HAL_RCC_ClockConfig+0x128>)
 8008d5c:	68a0      	ldr	r0, [r4, #8]
 8008d5e:	688b      	ldr	r3, [r1, #8]
 8008d60:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008d64:	4303      	orrs	r3, r0
 8008d66:	608b      	str	r3, [r1, #8]
 8008d68:	e7bb      	b.n	8008ce2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8008d6a:	6862      	ldr	r2, [r4, #4]
 8008d6c:	4b1e      	ldr	r3, [pc, #120]	; (8008de8 <HAL_RCC_ClockConfig+0x128>)
 8008d6e:	2a01      	cmp	r2, #1
 8008d70:	d11c      	bne.n	8008dac <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008d72:	681b      	ldr	r3, [r3, #0]
 8008d74:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008d78:	d0a7      	beq.n	8008cca <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8008d7a:	4e1b      	ldr	r6, [pc, #108]	; (8008de8 <HAL_RCC_ClockConfig+0x128>)
 8008d7c:	68b3      	ldr	r3, [r6, #8]
 8008d7e:	f023 0303 	bic.w	r3, r3, #3
 8008d82:	4313      	orrs	r3, r2
 8008d84:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8008d86:	f7fe fd07 	bl	8007798 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008d8a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8008d8e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008d90:	68b3      	ldr	r3, [r6, #8]
 8008d92:	6862      	ldr	r2, [r4, #4]
 8008d94:	f003 030c 	and.w	r3, r3, #12
 8008d98:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8008d9c:	d0a3      	beq.n	8008ce6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8008d9e:	f7fe fcfb 	bl	8007798 <HAL_GetTick>
 8008da2:	1bc0      	subs	r0, r0, r7
 8008da4:	4540      	cmp	r0, r8
 8008da6:	d9f3      	bls.n	8008d90 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8008da8:	2003      	movs	r0, #3
 8008daa:	e78f      	b.n	8008ccc <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008dac:	1e91      	subs	r1, r2, #2
 8008dae:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008db0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008db2:	d802      	bhi.n	8008dba <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008db4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8008db8:	e7de      	b.n	8008d78 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008dba:	f013 0f02 	tst.w	r3, #2
 8008dbe:	e7db      	b.n	8008d78 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008dc0:	b2ea      	uxtb	r2, r5
 8008dc2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	f003 030f 	and.w	r3, r3, #15
 8008dca:	42ab      	cmp	r3, r5
 8008dcc:	f47f af7d 	bne.w	8008cca <HAL_RCC_ClockConfig+0xa>
 8008dd0:	e78f      	b.n	8008cf2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8008dd2:	4905      	ldr	r1, [pc, #20]	; (8008de8 <HAL_RCC_ClockConfig+0x128>)
 8008dd4:	68e0      	ldr	r0, [r4, #12]
 8008dd6:	688b      	ldr	r3, [r1, #8]
 8008dd8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8008ddc:	4303      	orrs	r3, r0
 8008dde:	608b      	str	r3, [r1, #8]
 8008de0:	e78a      	b.n	8008cf8 <HAL_RCC_ClockConfig+0x38>
 8008de2:	bf00      	nop
 8008de4:	40023c00 	.word	0x40023c00
 8008de8:	40023800 	.word	0x40023800
 8008dec:	08024740 	.word	0x08024740
 8008df0:	20000074 	.word	0x20000074
 8008df4:	2000007c 	.word	0x2000007c

08008df8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8008df8:	4b04      	ldr	r3, [pc, #16]	; (8008e0c <HAL_RCC_GetPCLK1Freq+0x14>)
 8008dfa:	4a05      	ldr	r2, [pc, #20]	; (8008e10 <HAL_RCC_GetPCLK1Freq+0x18>)
 8008dfc:	689b      	ldr	r3, [r3, #8]
 8008dfe:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8008e02:	5cd3      	ldrb	r3, [r2, r3]
 8008e04:	4a03      	ldr	r2, [pc, #12]	; (8008e14 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8008e06:	6810      	ldr	r0, [r2, #0]
}
 8008e08:	40d8      	lsrs	r0, r3
 8008e0a:	4770      	bx	lr
 8008e0c:	40023800 	.word	0x40023800
 8008e10:	08024750 	.word	0x08024750
 8008e14:	20000074 	.word	0x20000074

08008e18 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8008e18:	4b04      	ldr	r3, [pc, #16]	; (8008e2c <HAL_RCC_GetPCLK2Freq+0x14>)
 8008e1a:	4a05      	ldr	r2, [pc, #20]	; (8008e30 <HAL_RCC_GetPCLK2Freq+0x18>)
 8008e1c:	689b      	ldr	r3, [r3, #8]
 8008e1e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8008e22:	5cd3      	ldrb	r3, [r2, r3]
 8008e24:	4a03      	ldr	r2, [pc, #12]	; (8008e34 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8008e26:	6810      	ldr	r0, [r2, #0]
}
 8008e28:	40d8      	lsrs	r0, r3
 8008e2a:	4770      	bx	lr
 8008e2c:	40023800 	.word	0x40023800
 8008e30:	08024750 	.word	0x08024750
 8008e34:	20000074 	.word	0x20000074

08008e38 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8008e38:	230f      	movs	r3, #15
 8008e3a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8008e3c:	4b0b      	ldr	r3, [pc, #44]	; (8008e6c <HAL_RCC_GetClockConfig+0x34>)
 8008e3e:	689a      	ldr	r2, [r3, #8]
 8008e40:	f002 0203 	and.w	r2, r2, #3
 8008e44:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8008e46:	689a      	ldr	r2, [r3, #8]
 8008e48:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8008e4c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8008e4e:	689a      	ldr	r2, [r3, #8]
 8008e50:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8008e54:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8008e56:	689b      	ldr	r3, [r3, #8]
 8008e58:	08db      	lsrs	r3, r3, #3
 8008e5a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8008e5e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8008e60:	4b03      	ldr	r3, [pc, #12]	; (8008e70 <HAL_RCC_GetClockConfig+0x38>)
 8008e62:	681b      	ldr	r3, [r3, #0]
 8008e64:	f003 030f 	and.w	r3, r3, #15
 8008e68:	600b      	str	r3, [r1, #0]
}
 8008e6a:	4770      	bx	lr
 8008e6c:	40023800 	.word	0x40023800
 8008e70:	40023c00 	.word	0x40023c00

08008e74 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8008e74:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8008e76:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8008e7a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008e7c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8008e7e:	f040 808c 	bne.w	8008f9a <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8008e82:	6823      	ldr	r3, [r4, #0]
 8008e84:	f013 0f0c 	tst.w	r3, #12
 8008e88:	d045      	beq.n	8008f16 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8008e8a:	4b8b      	ldr	r3, [pc, #556]	; (80090b8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8008e8c:	4d8b      	ldr	r5, [pc, #556]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8008e8e:	2200      	movs	r2, #0
 8008e90:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8008e92:	f7fe fc81 	bl	8007798 <HAL_GetTick>
 8008e96:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8008e98:	682b      	ldr	r3, [r5, #0]
 8008e9a:	009f      	lsls	r7, r3, #2
 8008e9c:	f100 80cf 	bmi.w	800903e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8008ea0:	6821      	ldr	r1, [r4, #0]
 8008ea2:	074e      	lsls	r6, r1, #29
 8008ea4:	d515      	bpl.n	8008ed2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8008ea6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8008eaa:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8008eae:	061b      	lsls	r3, r3, #24
 8008eb0:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8008eb4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8008eb8:	4313      	orrs	r3, r2
 8008eba:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8008ebe:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8008ec2:	6a22      	ldr	r2, [r4, #32]
 8008ec4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8008ec8:	3a01      	subs	r2, #1
 8008eca:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008ece:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8008ed2:	070d      	lsls	r5, r1, #28
 8008ed4:	d514      	bpl.n	8008f00 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8008ed6:	4a79      	ldr	r2, [pc, #484]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8008ed8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8008eda:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8008ede:	6920      	ldr	r0, [r4, #16]
 8008ee0:	071b      	lsls	r3, r3, #28
 8008ee2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8008ee6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8008eea:	430b      	orrs	r3, r1
 8008eec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8008ef0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8008ef4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8008ef6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8008efa:	430b      	orrs	r3, r1
 8008efc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8008f00:	4b6d      	ldr	r3, [pc, #436]	; (80090b8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8008f02:	4e6e      	ldr	r6, [pc, #440]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8008f04:	2201      	movs	r2, #1
 8008f06:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8008f08:	f7fe fc46 	bl	8007798 <HAL_GetTick>
 8008f0c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8008f0e:	6833      	ldr	r3, [r6, #0]
 8008f10:	0098      	lsls	r0, r3, #2
 8008f12:	f140 809b 	bpl.w	800904c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8008f16:	6823      	ldr	r3, [r4, #0]
 8008f18:	069b      	lsls	r3, r3, #26
 8008f1a:	d533      	bpl.n	8008f84 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8008f1c:	2300      	movs	r3, #0
 8008f1e:	9301      	str	r3, [sp, #4]
 8008f20:	4b66      	ldr	r3, [pc, #408]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8008f22:	4d67      	ldr	r5, [pc, #412]	; (80090c0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8008f24:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008f26:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8008f2a:	641a      	str	r2, [r3, #64]	; 0x40
 8008f2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008f2e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008f32:	9301      	str	r3, [sp, #4]
 8008f34:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8008f36:	682b      	ldr	r3, [r5, #0]
 8008f38:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008f3c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8008f3e:	f7fe fc2b 	bl	8007798 <HAL_GetTick>
 8008f42:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8008f44:	682b      	ldr	r3, [r5, #0]
 8008f46:	05d9      	lsls	r1, r3, #23
 8008f48:	f140 8087 	bpl.w	800905a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8008f4c:	4d5b      	ldr	r5, [pc, #364]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8008f4e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008f50:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8008f54:	f040 8088 	bne.w	8009068 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008f58:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008f5a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8008f5e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8008f62:	4a56      	ldr	r2, [pc, #344]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8008f64:	f040 80a4 	bne.w	80090b0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8008f68:	6891      	ldr	r1, [r2, #8]
 8008f6a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8008f6e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8008f72:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8008f76:	4301      	orrs	r1, r0
 8008f78:	6091      	str	r1, [r2, #8]
 8008f7a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8008f7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008f80:	430b      	orrs	r3, r1
 8008f82:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8008f84:	6820      	ldr	r0, [r4, #0]
 8008f86:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8008f8a:	bf1f      	itttt	ne
 8008f8c:	4b4d      	ldrne	r3, [pc, #308]	; (80090c4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8008f8e:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8008f92:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8008f96:	2000      	movne	r0, #0
 8008f98:	e04f      	b.n	800903a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8008f9a:	4b47      	ldr	r3, [pc, #284]	; (80090b8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8008f9c:	4e47      	ldr	r6, [pc, #284]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8008f9e:	2200      	movs	r2, #0
 8008fa0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8008fa2:	f7fe fbf9 	bl	8007798 <HAL_GetTick>
 8008fa6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8008fa8:	6833      	ldr	r3, [r6, #0]
 8008faa:	011f      	lsls	r7, r3, #4
 8008fac:	d43f      	bmi.n	800902e <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8008fae:	6821      	ldr	r1, [r4, #0]
 8008fb0:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8008fb2:	bf41      	itttt	mi
 8008fb4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8008fb8:	071b      	lslmi	r3, r3, #28
 8008fba:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8008fbe:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8008fc2:	0788      	lsls	r0, r1, #30
 8008fc4:	d515      	bpl.n	8008ff2 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8008fc6:	4a3d      	ldr	r2, [pc, #244]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8008fc8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8008fca:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8008fce:	6865      	ldr	r5, [r4, #4]
 8008fd0:	061b      	lsls	r3, r3, #24
 8008fd2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8008fd6:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8008fda:	4303      	orrs	r3, r0
 8008fdc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8008fe0:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8008fe4:	69e3      	ldr	r3, [r4, #28]
 8008fe6:	f020 001f 	bic.w	r0, r0, #31
 8008fea:	3b01      	subs	r3, #1
 8008fec:	4303      	orrs	r3, r0
 8008fee:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8008ff2:	0649      	lsls	r1, r1, #25
 8008ff4:	d50a      	bpl.n	800900c <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8008ff6:	68e3      	ldr	r3, [r4, #12]
 8008ff8:	6862      	ldr	r2, [r4, #4]
 8008ffa:	061b      	lsls	r3, r3, #24
 8008ffc:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8009000:	68a2      	ldr	r2, [r4, #8]
 8009002:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8009006:	4a2d      	ldr	r2, [pc, #180]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8009008:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800900c:	4b2a      	ldr	r3, [pc, #168]	; (80090b8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800900e:	4e2b      	ldr	r6, [pc, #172]	; (80090bc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8009010:	2201      	movs	r2, #1
 8009012:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8009014:	f7fe fbc0 	bl	8007798 <HAL_GetTick>
 8009018:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800901a:	6833      	ldr	r3, [r6, #0]
 800901c:	011a      	lsls	r2, r3, #4
 800901e:	f53f af30 	bmi.w	8008e82 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8009022:	f7fe fbb9 	bl	8007798 <HAL_GetTick>
 8009026:	1b40      	subs	r0, r0, r5
 8009028:	2802      	cmp	r0, #2
 800902a:	d9f6      	bls.n	800901a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 800902c:	e004      	b.n	8009038 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800902e:	f7fe fbb3 	bl	8007798 <HAL_GetTick>
 8009032:	1b40      	subs	r0, r0, r5
 8009034:	2802      	cmp	r0, #2
 8009036:	d9b7      	bls.n	8008fa8 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8009038:	2003      	movs	r0, #3
}
 800903a:	b003      	add	sp, #12
 800903c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800903e:	f7fe fbab 	bl	8007798 <HAL_GetTick>
 8009042:	1b80      	subs	r0, r0, r6
 8009044:	2802      	cmp	r0, #2
 8009046:	f67f af27 	bls.w	8008e98 <HAL_RCCEx_PeriphCLKConfig+0x24>
 800904a:	e7f5      	b.n	8009038 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800904c:	f7fe fba4 	bl	8007798 <HAL_GetTick>
 8009050:	1b40      	subs	r0, r0, r5
 8009052:	2802      	cmp	r0, #2
 8009054:	f67f af5b 	bls.w	8008f0e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8009058:	e7ee      	b.n	8009038 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800905a:	f7fe fb9d 	bl	8007798 <HAL_GetTick>
 800905e:	1b80      	subs	r0, r0, r6
 8009060:	2802      	cmp	r0, #2
 8009062:	f67f af6f 	bls.w	8008f44 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8009066:	e7e7      	b.n	8009038 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8009068:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800906a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800906e:	4293      	cmp	r3, r2
 8009070:	f43f af72 	beq.w	8008f58 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8009074:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8009076:	4a10      	ldr	r2, [pc, #64]	; (80090b8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8009078:	2101      	movs	r1, #1
 800907a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800907e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8009082:	2100      	movs	r1, #0
 8009084:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8009088:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800908a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800908c:	07da      	lsls	r2, r3, #31
 800908e:	f57f af63 	bpl.w	8008f58 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8009092:	f7fe fb81 	bl	8007798 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8009096:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800909a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800909c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800909e:	079b      	lsls	r3, r3, #30
 80090a0:	f53f af5a 	bmi.w	8008f58 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80090a4:	f7fe fb78 	bl	8007798 <HAL_GetTick>
 80090a8:	1b80      	subs	r0, r0, r6
 80090aa:	42b8      	cmp	r0, r7
 80090ac:	d9f6      	bls.n	800909c <HAL_RCCEx_PeriphCLKConfig+0x228>
 80090ae:	e7c3      	b.n	8009038 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80090b0:	6891      	ldr	r1, [r2, #8]
 80090b2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 80090b6:	e75f      	b.n	8008f78 <HAL_RCCEx_PeriphCLKConfig+0x104>
 80090b8:	42470000 	.word	0x42470000
 80090bc:	40023800 	.word	0x40023800
 80090c0:	40007000 	.word	0x40007000
 80090c4:	42471000 	.word	0x42471000

080090c8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80090c8:	b538      	push	{r3, r4, r5, lr}
 80090ca:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80090cc:	4604      	mov	r4, r0
 80090ce:	b1c8      	cbz	r0, 8009104 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80090d0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80090d4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80090d8:	b91b      	cbnz	r3, 80090e2 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80090da:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80090de:	f7f8 ff81 	bl	8001fe4 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80090e2:	2302      	movs	r3, #2
 80090e4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80090e8:	1d21      	adds	r1, r4, #4
 80090ea:	6820      	ldr	r0, [r4, #0]
 80090ec:	f001 f869 	bl	800a1c2 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80090f0:	6862      	ldr	r2, [r4, #4]
 80090f2:	6820      	ldr	r0, [r4, #0]
 80090f4:	4629      	mov	r1, r5
 80090f6:	f001 f89f 	bl	800a238 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80090fa:	2301      	movs	r3, #1
 80090fc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8009100:	2000      	movs	r0, #0
}
 8009102:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8009104:	2001      	movs	r0, #1
 8009106:	e7fc      	b.n	8009102 <HAL_SDRAM_Init+0x3a>

08009108 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8009108:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800910a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800910e:	2b02      	cmp	r3, #2
{
 8009110:	4605      	mov	r5, r0
 8009112:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8009114:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8009116:	d012      	beq.n	800913e <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8009118:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800911c:	2c01      	cmp	r4, #1
 800911e:	d10f      	bne.n	8009140 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009120:	2302      	movs	r3, #2
 8009122:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8009126:	6828      	ldr	r0, [r5, #0]
 8009128:	f001 f8bc 	bl	800a2a4 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800912c:	6833      	ldr	r3, [r6, #0]
 800912e:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8009130:	bf06      	itte	eq
 8009132:	2305      	moveq	r3, #5
 8009134:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8009138:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800913c:	2000      	movs	r0, #0
}
 800913e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8009140:	2001      	movs	r0, #1
 8009142:	e7fc      	b.n	800913e <HAL_SDRAM_SendCommand+0x36>

08009144 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8009144:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8009146:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800914a:	2b02      	cmp	r3, #2
{
 800914c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800914e:	b2d8      	uxtb	r0, r3
 8009150:	d00d      	beq.n	800916e <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8009152:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8009156:	2b01      	cmp	r3, #1
 8009158:	b2dd      	uxtb	r5, r3
 800915a:	d109      	bne.n	8009170 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800915c:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800915e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009160:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8009164:	f001 f8c4 	bl	800a2f0 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8009168:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800916c:	2000      	movs	r0, #0
}
 800916e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8009170:	2001      	movs	r0, #1
 8009172:	e7fc      	b.n	800916e <HAL_SDRAM_ProgramRefreshRate+0x2a>

08009174 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8009174:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009178:	461d      	mov	r5, r3
 800917a:	4617      	mov	r7, r2
 800917c:	4688      	mov	r8, r1
 800917e:	4606      	mov	r6, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8009180:	f7fe fb0a 	bl	8007798 <HAL_GetTick>
 8009184:	443d      	add	r5, r7
 8009186:	1a2c      	subs	r4, r5, r0
  tmp_tickstart = HAL_GetTick();
 8009188:	f7fe fb06 	bl	8007798 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800918c:	4b22      	ldr	r3, [pc, #136]	; (8009218 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>)
 800918e:	681b      	ldr	r3, [r3, #0]
 8009190:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 8009194:	4605      	mov	r5, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8009196:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8009198:	6832      	ldr	r2, [r6, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 800919a:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800919c:	6893      	ldr	r3, [r2, #8]
 800919e:	ea38 0303 	bics.w	r3, r8, r3
 80091a2:	d001      	beq.n	80091a8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 80091a4:	2000      	movs	r0, #0
 80091a6:	e02d      	b.n	8009204 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
    if (Timeout != HAL_MAX_DELAY)
 80091a8:	1c7b      	adds	r3, r7, #1
 80091aa:	d0f7      	beq.n	800919c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80091ac:	f7fe faf4 	bl	8007798 <HAL_GetTick>
 80091b0:	1b40      	subs	r0, r0, r5
 80091b2:	42a0      	cmp	r0, r4
 80091b4:	d329      	bcc.n	800920a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80091b6:	6833      	ldr	r3, [r6, #0]
 80091b8:	685a      	ldr	r2, [r3, #4]
 80091ba:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80091be:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80091c0:	6872      	ldr	r2, [r6, #4]
 80091c2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80091c6:	d10a      	bne.n	80091de <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
 80091c8:	68b2      	ldr	r2, [r6, #8]
 80091ca:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 80091ce:	d002      	beq.n	80091d6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80091d0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80091d4:	d103      	bne.n	80091de <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
          __HAL_SPI_DISABLE(hspi);
 80091d6:	681a      	ldr	r2, [r3, #0]
 80091d8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80091dc:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80091de:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 80091e0:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 80091e4:	d107      	bne.n	80091f6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x82>
          SPI_RESET_CRC(hspi);
 80091e6:	681a      	ldr	r2, [r3, #0]
 80091e8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80091ec:	601a      	str	r2, [r3, #0]
 80091ee:	681a      	ldr	r2, [r3, #0]
 80091f0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80091f4:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80091f6:	2301      	movs	r3, #1
 80091f8:	f886 3051 	strb.w	r3, [r6, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 80091fc:	2300      	movs	r3, #0
 80091fe:	f886 3050 	strb.w	r3, [r6, #80]	; 0x50
        return HAL_TIMEOUT;
 8009202:	2003      	movs	r0, #3
}
 8009204:	b002      	add	sp, #8
 8009206:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 800920a:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800920c:	2b00      	cmp	r3, #0
      count--;
 800920e:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8009210:	bf08      	it	eq
 8009212:	2400      	moveq	r4, #0
      count--;
 8009214:	3b01      	subs	r3, #1
 8009216:	e7bf      	b.n	8009198 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 8009218:	20000074 	.word	0x20000074

0800921c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800921c:	b538      	push	{r3, r4, r5, lr}
 800921e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009220:	6842      	ldr	r2, [r0, #4]
 8009222:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8009226:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009228:	d11f      	bne.n	800926a <SPI_EndRxTransaction+0x4e>
 800922a:	6882      	ldr	r2, [r0, #8]
 800922c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8009230:	d002      	beq.n	8009238 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8009232:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009236:	d107      	bne.n	8009248 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8009238:	6825      	ldr	r5, [r4, #0]
 800923a:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800923c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8009240:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8009244:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8009246:	d007      	beq.n	8009258 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8009248:	460a      	mov	r2, r1
 800924a:	2180      	movs	r1, #128	; 0x80
 800924c:	4620      	mov	r0, r4
 800924e:	f7ff ff91 	bl	8009174 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8009252:	b920      	cbnz	r0, 800925e <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8009254:	2000      	movs	r0, #0
}
 8009256:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8009258:	460a      	mov	r2, r1
 800925a:	2101      	movs	r1, #1
 800925c:	e7f6      	b.n	800924c <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800925e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8009260:	f043 0320 	orr.w	r3, r3, #32
 8009264:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8009266:	2003      	movs	r0, #3
 8009268:	e7f5      	b.n	8009256 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800926a:	460a      	mov	r2, r1
 800926c:	2101      	movs	r1, #1
 800926e:	e7ee      	b.n	800924e <SPI_EndRxTransaction+0x32>

08009270 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8009270:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009272:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8009274:	4a12      	ldr	r2, [pc, #72]	; (80092c0 <SPI_EndRxTxTransaction+0x50>)
 8009276:	6815      	ldr	r5, [r2, #0]
 8009278:	4a12      	ldr	r2, [pc, #72]	; (80092c4 <SPI_EndRxTxTransaction+0x54>)
 800927a:	fbb5 f5f2 	udiv	r5, r5, r2
 800927e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8009282:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009284:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8009286:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009288:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800928c:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800928e:	d10b      	bne.n	80092a8 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8009290:	460a      	mov	r2, r1
 8009292:	2180      	movs	r1, #128	; 0x80
 8009294:	f7ff ff6e 	bl	8009174 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8009298:	b178      	cbz	r0, 80092ba <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800929a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800929c:	f043 0320 	orr.w	r3, r3, #32
 80092a0:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80092a2:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 80092a4:	b003      	add	sp, #12
 80092a6:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 80092a8:	9b01      	ldr	r3, [sp, #4]
 80092aa:	b133      	cbz	r3, 80092ba <SPI_EndRxTxTransaction+0x4a>
      count--;
 80092ac:	9b01      	ldr	r3, [sp, #4]
 80092ae:	3b01      	subs	r3, #1
 80092b0:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80092b2:	6823      	ldr	r3, [r4, #0]
 80092b4:	689b      	ldr	r3, [r3, #8]
 80092b6:	061b      	lsls	r3, r3, #24
 80092b8:	d4f6      	bmi.n	80092a8 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 80092ba:	2000      	movs	r0, #0
 80092bc:	e7f2      	b.n	80092a4 <SPI_EndRxTxTransaction+0x34>
 80092be:	bf00      	nop
 80092c0:	20000074 	.word	0x20000074
 80092c4:	016e3600 	.word	0x016e3600

080092c8 <HAL_SPI_Init>:
{
 80092c8:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80092ca:	4604      	mov	r4, r0
 80092cc:	2800      	cmp	r0, #0
 80092ce:	d055      	beq.n	800937c <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80092d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80092d2:	2b00      	cmp	r3, #0
 80092d4:	d14e      	bne.n	8009374 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80092d6:	6842      	ldr	r2, [r0, #4]
 80092d8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80092dc:	d000      	beq.n	80092e0 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80092de:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80092e0:	2300      	movs	r3, #0
 80092e2:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80092e4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80092e8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80092ec:	b923      	cbnz	r3, 80092f8 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80092ee:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 80092f2:	4620      	mov	r0, r4
 80092f4:	f7f8 fd96 	bl	8001e24 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80092f8:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80092fa:	68a0      	ldr	r0, [r4, #8]
 80092fc:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80092fe:	2302      	movs	r3, #2
 8009300:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8009304:	680b      	ldr	r3, [r1, #0]
 8009306:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800930a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800930c:	6863      	ldr	r3, [r4, #4]
 800930e:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 8009312:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8009316:	4303      	orrs	r3, r0
 8009318:	68e0      	ldr	r0, [r4, #12]
 800931a:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 800931e:	4303      	orrs	r3, r0
 8009320:	6920      	ldr	r0, [r4, #16]
 8009322:	f000 0002 	and.w	r0, r0, #2
 8009326:	4303      	orrs	r3, r0
 8009328:	6960      	ldr	r0, [r4, #20]
 800932a:	f000 0001 	and.w	r0, r0, #1
 800932e:	4303      	orrs	r3, r0
 8009330:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8009334:	4303      	orrs	r3, r0
 8009336:	69e0      	ldr	r0, [r4, #28]
 8009338:	f000 0038 	and.w	r0, r0, #56	; 0x38
 800933c:	4303      	orrs	r3, r0
 800933e:	6a20      	ldr	r0, [r4, #32]
 8009340:	f000 0080 	and.w	r0, r0, #128	; 0x80
 8009344:	4303      	orrs	r3, r0
 8009346:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8009348:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 800934c:	4303      	orrs	r3, r0
 800934e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8009350:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009352:	0c12      	lsrs	r2, r2, #16
 8009354:	f003 0310 	and.w	r3, r3, #16
 8009358:	f002 0204 	and.w	r2, r2, #4
 800935c:	431a      	orrs	r2, r3
 800935e:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8009360:	69cb      	ldr	r3, [r1, #28]
 8009362:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8009366:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009368:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800936a:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800936c:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800936e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8009372:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8009374:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8009376:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800937a:	e7b1      	b.n	80092e0 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800937c:	2001      	movs	r0, #1
 800937e:	e7f8      	b.n	8009372 <HAL_SPI_Init+0xaa>

08009380 <HAL_SPI_Transmit>:
{
 8009380:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009384:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8009386:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800938a:	2b01      	cmp	r3, #1
{
 800938c:	4604      	mov	r4, r0
 800938e:	460d      	mov	r5, r1
 8009390:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8009392:	f000 80a1 	beq.w	80094d8 <HAL_SPI_Transmit+0x158>
 8009396:	2301      	movs	r3, #1
 8009398:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800939c:	f7fe f9fc 	bl	8007798 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80093a0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80093a4:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80093a6:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80093a8:	b2d8      	uxtb	r0, r3
 80093aa:	f040 8093 	bne.w	80094d4 <HAL_SPI_Transmit+0x154>
  if ((pData == NULL) || (Size == 0U))
 80093ae:	2d00      	cmp	r5, #0
 80093b0:	d05e      	beq.n	8009470 <HAL_SPI_Transmit+0xf0>
 80093b2:	2f00      	cmp	r7, #0
 80093b4:	d05c      	beq.n	8009470 <HAL_SPI_Transmit+0xf0>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80093b6:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80093b8:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80093ba:	2303      	movs	r3, #3
 80093bc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80093c0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80093c4:	f04f 0300 	mov.w	r3, #0
 80093c8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 80093ca:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 80093ce:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80093d0:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80093d2:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80093d4:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 80093d6:	86a7      	strh	r7, [r4, #52]	; 0x34
    __HAL_SPI_DISABLE(hspi);
 80093d8:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80093da:	d107      	bne.n	80093ec <HAL_SPI_Transmit+0x6c>
    __HAL_SPI_DISABLE(hspi);
 80093dc:	681a      	ldr	r2, [r3, #0]
 80093de:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80093e2:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80093e4:	681a      	ldr	r2, [r3, #0]
 80093e6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80093ea:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80093ec:	681a      	ldr	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80093ee:	68e1      	ldr	r1, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80093f0:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80093f2:	bf5e      	ittt	pl
 80093f4:	681a      	ldrpl	r2, [r3, #0]
 80093f6:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80093fa:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80093fc:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009400:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8009402:	d141      	bne.n	8009488 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009404:	b10a      	cbz	r2, 800940a <HAL_SPI_Transmit+0x8a>
 8009406:	2f01      	cmp	r7, #1
 8009408:	d107      	bne.n	800941a <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800940a:	f835 2b02 	ldrh.w	r2, [r5], #2
 800940e:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8009410:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8009412:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009414:	3b01      	subs	r3, #1
 8009416:	b29b      	uxth	r3, r3
 8009418:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800941a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800941c:	b29b      	uxth	r3, r3
 800941e:	b9a3      	cbnz	r3, 800944a <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009420:	4642      	mov	r2, r8
 8009422:	4631      	mov	r1, r6
 8009424:	4620      	mov	r0, r4
 8009426:	f7ff ff23 	bl	8009270 <SPI_EndRxTxTransaction>
 800942a:	2800      	cmp	r0, #0
 800942c:	d14f      	bne.n	80094ce <HAL_SPI_Transmit+0x14e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800942e:	68a3      	ldr	r3, [r4, #8]
 8009430:	b933      	cbnz	r3, 8009440 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8009432:	9301      	str	r3, [sp, #4]
 8009434:	6823      	ldr	r3, [r4, #0]
 8009436:	68da      	ldr	r2, [r3, #12]
 8009438:	9201      	str	r2, [sp, #4]
 800943a:	689b      	ldr	r3, [r3, #8]
 800943c:	9301      	str	r3, [sp, #4]
 800943e:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009440:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8009442:	3800      	subs	r0, #0
 8009444:	bf18      	it	ne
 8009446:	2001      	movne	r0, #1
error:
 8009448:	e012      	b.n	8009470 <HAL_SPI_Transmit+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800944a:	6822      	ldr	r2, [r4, #0]
 800944c:	6893      	ldr	r3, [r2, #8]
 800944e:	0798      	lsls	r0, r3, #30
 8009450:	d505      	bpl.n	800945e <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009452:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009454:	f833 1b02 	ldrh.w	r1, [r3], #2
 8009458:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800945a:	6323      	str	r3, [r4, #48]	; 0x30
 800945c:	e7d9      	b.n	8009412 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800945e:	f7fe f99b 	bl	8007798 <HAL_GetTick>
 8009462:	eba0 0008 	sub.w	r0, r0, r8
 8009466:	42b0      	cmp	r0, r6
 8009468:	d30b      	bcc.n	8009482 <HAL_SPI_Transmit+0x102>
 800946a:	1c71      	adds	r1, r6, #1
 800946c:	d0d5      	beq.n	800941a <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 800946e:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8009470:	2301      	movs	r3, #1
 8009472:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8009476:	2300      	movs	r3, #0
 8009478:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800947c:	b002      	add	sp, #8
 800947e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009482:	2e00      	cmp	r6, #0
 8009484:	d1c9      	bne.n	800941a <HAL_SPI_Transmit+0x9a>
 8009486:	e7f2      	b.n	800946e <HAL_SPI_Transmit+0xee>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009488:	b10a      	cbz	r2, 800948e <HAL_SPI_Transmit+0x10e>
 800948a:	2f01      	cmp	r7, #1
 800948c:	d108      	bne.n	80094a0 <HAL_SPI_Transmit+0x120>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800948e:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8009490:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8009492:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009494:	3301      	adds	r3, #1
 8009496:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8009498:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800949a:	3b01      	subs	r3, #1
 800949c:	b29b      	uxth	r3, r3
 800949e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80094a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80094a2:	b29b      	uxth	r3, r3
 80094a4:	2b00      	cmp	r3, #0
 80094a6:	d0bb      	beq.n	8009420 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80094a8:	6823      	ldr	r3, [r4, #0]
 80094aa:	689a      	ldr	r2, [r3, #8]
 80094ac:	0792      	lsls	r2, r2, #30
 80094ae:	d502      	bpl.n	80094b6 <HAL_SPI_Transmit+0x136>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80094b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80094b2:	7812      	ldrb	r2, [r2, #0]
 80094b4:	e7ec      	b.n	8009490 <HAL_SPI_Transmit+0x110>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80094b6:	f7fe f96f 	bl	8007798 <HAL_GetTick>
 80094ba:	eba0 0008 	sub.w	r0, r0, r8
 80094be:	42b0      	cmp	r0, r6
 80094c0:	d302      	bcc.n	80094c8 <HAL_SPI_Transmit+0x148>
 80094c2:	1c73      	adds	r3, r6, #1
 80094c4:	d0ec      	beq.n	80094a0 <HAL_SPI_Transmit+0x120>
 80094c6:	e7d2      	b.n	800946e <HAL_SPI_Transmit+0xee>
 80094c8:	2e00      	cmp	r6, #0
 80094ca:	d1e9      	bne.n	80094a0 <HAL_SPI_Transmit+0x120>
 80094cc:	e7cf      	b.n	800946e <HAL_SPI_Transmit+0xee>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80094ce:	2320      	movs	r3, #32
 80094d0:	6563      	str	r3, [r4, #84]	; 0x54
 80094d2:	e7ac      	b.n	800942e <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 80094d4:	2002      	movs	r0, #2
 80094d6:	e7cb      	b.n	8009470 <HAL_SPI_Transmit+0xf0>
  __HAL_LOCK(hspi);
 80094d8:	2002      	movs	r0, #2
 80094da:	e7cf      	b.n	800947c <HAL_SPI_Transmit+0xfc>

080094dc <HAL_SPI_TransmitReceive>:
{
 80094dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80094e0:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80094e2:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 80094e6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 80094e8:	2b01      	cmp	r3, #1
{
 80094ea:	4604      	mov	r4, r0
 80094ec:	460d      	mov	r5, r1
 80094ee:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 80094f0:	f000 80e6 	beq.w	80096c0 <HAL_SPI_TransmitReceive+0x1e4>
 80094f4:	2301      	movs	r3, #1
 80094f6:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80094fa:	f7fe f94d 	bl	8007798 <HAL_GetTick>
  tmp_state           = hspi->State;
 80094fe:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8009502:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8009504:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8009506:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8009508:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800950a:	d00a      	beq.n	8009522 <HAL_SPI_TransmitReceive+0x46>
 800950c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8009510:	f040 80d4 	bne.w	80096bc <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8009514:	68a3      	ldr	r3, [r4, #8]
 8009516:	2b00      	cmp	r3, #0
 8009518:	f040 80d0 	bne.w	80096bc <HAL_SPI_TransmitReceive+0x1e0>
 800951c:	2904      	cmp	r1, #4
 800951e:	f040 80cd 	bne.w	80096bc <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8009522:	2d00      	cmp	r5, #0
 8009524:	d040      	beq.n	80095a8 <HAL_SPI_TransmitReceive+0xcc>
 8009526:	f1b9 0f00 	cmp.w	r9, #0
 800952a:	d03d      	beq.n	80095a8 <HAL_SPI_TransmitReceive+0xcc>
 800952c:	2e00      	cmp	r6, #0
 800952e:	d03b      	beq.n	80095a8 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8009530:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8009534:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8009538:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800953a:	bf1c      	itt	ne
 800953c:	2305      	movne	r3, #5
 800953e:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009542:	2300      	movs	r3, #0
 8009544:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8009546:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800954a:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 800954c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800954e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009550:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8009552:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009554:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8009556:	bf58      	it	pl
 8009558:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800955a:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 800955c:	bf58      	it	pl
 800955e:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8009562:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8009564:	bf58      	it	pl
 8009566:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8009568:	68e1      	ldr	r1, [r4, #12]
 800956a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800956e:	d152      	bne.n	8009616 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009570:	b10a      	cbz	r2, 8009576 <HAL_SPI_TransmitReceive+0x9a>
 8009572:	2e01      	cmp	r6, #1
 8009574:	d107      	bne.n	8009586 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8009576:	f835 2b02 	ldrh.w	r2, [r5], #2
 800957a:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 800957c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800957e:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8009580:	3b01      	subs	r3, #1
 8009582:	b29b      	uxth	r3, r3
 8009584:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8009586:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8009588:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800958a:	b29b      	uxth	r3, r3
 800958c:	b973      	cbnz	r3, 80095ac <HAL_SPI_TransmitReceive+0xd0>
 800958e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009590:	b29b      	uxth	r3, r3
 8009592:	b95b      	cbnz	r3, 80095ac <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8009594:	4642      	mov	r2, r8
 8009596:	4639      	mov	r1, r7
 8009598:	4620      	mov	r0, r4
 800959a:	f7ff fe69 	bl	8009270 <SPI_EndRxTxTransaction>
 800959e:	2800      	cmp	r0, #0
 80095a0:	f000 8081 	beq.w	80096a6 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80095a4:	2320      	movs	r3, #32
 80095a6:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 80095a8:	2001      	movs	r0, #1
 80095aa:	e02b      	b.n	8009604 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80095ac:	6821      	ldr	r1, [r4, #0]
 80095ae:	688b      	ldr	r3, [r1, #8]
 80095b0:	079e      	lsls	r6, r3, #30
 80095b2:	d50d      	bpl.n	80095d0 <HAL_SPI_TransmitReceive+0xf4>
 80095b4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80095b6:	b29b      	uxth	r3, r3
 80095b8:	b153      	cbz	r3, 80095d0 <HAL_SPI_TransmitReceive+0xf4>
 80095ba:	b14d      	cbz	r5, 80095d0 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80095bc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80095be:	f833 2b02 	ldrh.w	r2, [r3], #2
 80095c2:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80095c4:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80095c6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80095c8:	3b01      	subs	r3, #1
 80095ca:	b29b      	uxth	r3, r3
 80095cc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80095ce:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80095d0:	688a      	ldr	r2, [r1, #8]
 80095d2:	f012 0201 	ands.w	r2, r2, #1
 80095d6:	d00c      	beq.n	80095f2 <HAL_SPI_TransmitReceive+0x116>
 80095d8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80095da:	b29b      	uxth	r3, r3
 80095dc:	b14b      	cbz	r3, 80095f2 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80095de:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80095e0:	68c9      	ldr	r1, [r1, #12]
 80095e2:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80095e6:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80095e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80095ea:	3b01      	subs	r3, #1
 80095ec:	b29b      	uxth	r3, r3
 80095ee:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80095f0:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80095f2:	f7fe f8d1 	bl	8007798 <HAL_GetTick>
 80095f6:	eba0 0008 	sub.w	r0, r0, r8
 80095fa:	42b8      	cmp	r0, r7
 80095fc:	d3c4      	bcc.n	8009588 <HAL_SPI_TransmitReceive+0xac>
 80095fe:	1c78      	adds	r0, r7, #1
 8009600:	d0c2      	beq.n	8009588 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8009602:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8009604:	2301      	movs	r3, #1
 8009606:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800960a:	2300      	movs	r3, #0
 800960c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8009610:	b003      	add	sp, #12
 8009612:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8009616:	b10a      	cbz	r2, 800961c <HAL_SPI_TransmitReceive+0x140>
 8009618:	2e01      	cmp	r6, #1
 800961a:	d108      	bne.n	800962e <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800961c:	782a      	ldrb	r2, [r5, #0]
 800961e:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8009620:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009622:	3301      	adds	r3, #1
 8009624:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8009626:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009628:	3b01      	subs	r3, #1
 800962a:	b29b      	uxth	r3, r3
 800962c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800962e:	2501      	movs	r5, #1
 8009630:	e02d      	b.n	800968e <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8009632:	6822      	ldr	r2, [r4, #0]
 8009634:	6893      	ldr	r3, [r2, #8]
 8009636:	0799      	lsls	r1, r3, #30
 8009638:	d50e      	bpl.n	8009658 <HAL_SPI_TransmitReceive+0x17c>
 800963a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800963c:	b29b      	uxth	r3, r3
 800963e:	b15b      	cbz	r3, 8009658 <HAL_SPI_TransmitReceive+0x17c>
 8009640:	b155      	cbz	r5, 8009658 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8009642:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009644:	781b      	ldrb	r3, [r3, #0]
 8009646:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8009648:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800964a:	3301      	adds	r3, #1
 800964c:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800964e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009650:	3b01      	subs	r3, #1
 8009652:	b29b      	uxth	r3, r3
 8009654:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8009656:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8009658:	6822      	ldr	r2, [r4, #0]
 800965a:	6891      	ldr	r1, [r2, #8]
 800965c:	f011 0101 	ands.w	r1, r1, #1
 8009660:	d00d      	beq.n	800967e <HAL_SPI_TransmitReceive+0x1a2>
 8009662:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009664:	b29b      	uxth	r3, r3
 8009666:	b153      	cbz	r3, 800967e <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8009668:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800966a:	68d2      	ldr	r2, [r2, #12]
 800966c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800966e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009670:	3301      	adds	r3, #1
 8009672:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8009674:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009676:	3b01      	subs	r3, #1
 8009678:	b29b      	uxth	r3, r3
 800967a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800967c:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800967e:	f7fe f88b 	bl	8007798 <HAL_GetTick>
 8009682:	eba0 0008 	sub.w	r0, r0, r8
 8009686:	42b8      	cmp	r0, r7
 8009688:	d30a      	bcc.n	80096a0 <HAL_SPI_TransmitReceive+0x1c4>
 800968a:	1c7b      	adds	r3, r7, #1
 800968c:	d1b9      	bne.n	8009602 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800968e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8009690:	b29b      	uxth	r3, r3
 8009692:	2b00      	cmp	r3, #0
 8009694:	d1cd      	bne.n	8009632 <HAL_SPI_TransmitReceive+0x156>
 8009696:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009698:	b29b      	uxth	r3, r3
 800969a:	2b00      	cmp	r3, #0
 800969c:	d1c9      	bne.n	8009632 <HAL_SPI_TransmitReceive+0x156>
 800969e:	e779      	b.n	8009594 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80096a0:	2f00      	cmp	r7, #0
 80096a2:	d1f4      	bne.n	800968e <HAL_SPI_TransmitReceive+0x1b2>
 80096a4:	e7ad      	b.n	8009602 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80096a6:	68a3      	ldr	r3, [r4, #8]
 80096a8:	2b00      	cmp	r3, #0
 80096aa:	d1ab      	bne.n	8009604 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80096ac:	6823      	ldr	r3, [r4, #0]
 80096ae:	9001      	str	r0, [sp, #4]
 80096b0:	68da      	ldr	r2, [r3, #12]
 80096b2:	9201      	str	r2, [sp, #4]
 80096b4:	689b      	ldr	r3, [r3, #8]
 80096b6:	9301      	str	r3, [sp, #4]
 80096b8:	9b01      	ldr	r3, [sp, #4]
 80096ba:	e7a3      	b.n	8009604 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 80096bc:	2002      	movs	r0, #2
 80096be:	e7a1      	b.n	8009604 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 80096c0:	2002      	movs	r0, #2
 80096c2:	e7a5      	b.n	8009610 <HAL_SPI_TransmitReceive+0x134>

080096c4 <HAL_SPI_Receive>:
{
 80096c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80096c8:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80096ca:	6843      	ldr	r3, [r0, #4]
 80096cc:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 80096d0:	4604      	mov	r4, r0
 80096d2:	4689      	mov	r9, r1
 80096d4:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80096d6:	d10c      	bne.n	80096f2 <HAL_SPI_Receive+0x2e>
 80096d8:	6883      	ldr	r3, [r0, #8]
 80096da:	b953      	cbnz	r3, 80096f2 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80096dc:	2304      	movs	r3, #4
 80096de:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80096e2:	4613      	mov	r3, r2
 80096e4:	9500      	str	r5, [sp, #0]
 80096e6:	460a      	mov	r2, r1
 80096e8:	f7ff fef8 	bl	80094dc <HAL_SPI_TransmitReceive>
}
 80096ec:	b003      	add	sp, #12
 80096ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 80096f2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 80096f6:	2b01      	cmp	r3, #1
 80096f8:	f000 8086 	beq.w	8009808 <HAL_SPI_Receive+0x144>
 80096fc:	2301      	movs	r3, #1
 80096fe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8009702:	f7fe f849 	bl	8007798 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8009706:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800970a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800970c:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800970e:	b2d8      	uxtb	r0, r3
 8009710:	d178      	bne.n	8009804 <HAL_SPI_Receive+0x140>
  if ((pData == NULL) || (Size == 0U))
 8009712:	f1b9 0f00 	cmp.w	r9, #0
 8009716:	d05c      	beq.n	80097d2 <HAL_SPI_Receive+0x10e>
 8009718:	2f00      	cmp	r7, #0
 800971a:	d05a      	beq.n	80097d2 <HAL_SPI_Receive+0x10e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800971c:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800971e:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009722:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8009724:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009726:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800972a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800972e:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8009732:	6566      	str	r6, [r4, #84]	; 0x54
    __HAL_SPI_DISABLE(hspi);
 8009734:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8009736:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8009738:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800973a:	6326      	str	r6, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800973c:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 800973e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009740:	d107      	bne.n	8009752 <HAL_SPI_Receive+0x8e>
    __HAL_SPI_DISABLE(hspi);
 8009742:	681a      	ldr	r2, [r3, #0]
 8009744:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009748:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800974a:	681a      	ldr	r2, [r3, #0]
 800974c:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8009750:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8009752:	681a      	ldr	r2, [r3, #0]
 8009754:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8009756:	bf5e      	ittt	pl
 8009758:	681a      	ldrpl	r2, [r3, #0]
 800975a:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800975e:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8009760:	68e3      	ldr	r3, [r4, #12]
 8009762:	b1f3      	cbz	r3, 80097a2 <HAL_SPI_Receive+0xde>
    while (hspi->RxXferCount > 0U)
 8009764:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8009766:	b29b      	uxth	r3, r3
 8009768:	b1fb      	cbz	r3, 80097aa <HAL_SPI_Receive+0xe6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800976a:	6823      	ldr	r3, [r4, #0]
 800976c:	689a      	ldr	r2, [r3, #8]
 800976e:	07d2      	lsls	r2, r2, #31
 8009770:	d539      	bpl.n	80097e6 <HAL_SPI_Receive+0x122>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8009772:	68da      	ldr	r2, [r3, #12]
 8009774:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009776:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800977a:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800977c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800977e:	3b01      	subs	r3, #1
 8009780:	b29b      	uxth	r3, r3
 8009782:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8009784:	e7ee      	b.n	8009764 <HAL_SPI_Receive+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8009786:	6823      	ldr	r3, [r4, #0]
 8009788:	689a      	ldr	r2, [r3, #8]
 800978a:	07d0      	lsls	r0, r2, #31
 800978c:	d518      	bpl.n	80097c0 <HAL_SPI_Receive+0xfc>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800978e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009790:	7b1b      	ldrb	r3, [r3, #12]
 8009792:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8009794:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009796:	3301      	adds	r3, #1
 8009798:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800979a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800979c:	3b01      	subs	r3, #1
 800979e:	b29b      	uxth	r3, r3
 80097a0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 80097a2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80097a4:	b29b      	uxth	r3, r3
 80097a6:	2b00      	cmp	r3, #0
 80097a8:	d1ed      	bne.n	8009786 <HAL_SPI_Receive+0xc2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80097aa:	4642      	mov	r2, r8
 80097ac:	4629      	mov	r1, r5
 80097ae:	4620      	mov	r0, r4
 80097b0:	f7ff fd34 	bl	800921c <SPI_EndRxTransaction>
 80097b4:	bb18      	cbnz	r0, 80097fe <HAL_SPI_Receive+0x13a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80097b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80097b8:	3800      	subs	r0, #0
 80097ba:	bf18      	it	ne
 80097bc:	2001      	movne	r0, #1
error :
 80097be:	e008      	b.n	80097d2 <HAL_SPI_Receive+0x10e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80097c0:	f7fd ffea 	bl	8007798 <HAL_GetTick>
 80097c4:	eba0 0008 	sub.w	r0, r0, r8
 80097c8:	42a8      	cmp	r0, r5
 80097ca:	d309      	bcc.n	80097e0 <HAL_SPI_Receive+0x11c>
 80097cc:	1c69      	adds	r1, r5, #1
 80097ce:	d0e8      	beq.n	80097a2 <HAL_SPI_Receive+0xde>
          errorcode = HAL_TIMEOUT;
 80097d0:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80097d2:	2301      	movs	r3, #1
 80097d4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80097d8:	2300      	movs	r3, #0
 80097da:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 80097de:	e785      	b.n	80096ec <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80097e0:	2d00      	cmp	r5, #0
 80097e2:	d1de      	bne.n	80097a2 <HAL_SPI_Receive+0xde>
 80097e4:	e7f4      	b.n	80097d0 <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80097e6:	f7fd ffd7 	bl	8007798 <HAL_GetTick>
 80097ea:	eba0 0008 	sub.w	r0, r0, r8
 80097ee:	42a8      	cmp	r0, r5
 80097f0:	d302      	bcc.n	80097f8 <HAL_SPI_Receive+0x134>
 80097f2:	1c6b      	adds	r3, r5, #1
 80097f4:	d0b6      	beq.n	8009764 <HAL_SPI_Receive+0xa0>
 80097f6:	e7eb      	b.n	80097d0 <HAL_SPI_Receive+0x10c>
 80097f8:	2d00      	cmp	r5, #0
 80097fa:	d1b3      	bne.n	8009764 <HAL_SPI_Receive+0xa0>
 80097fc:	e7e8      	b.n	80097d0 <HAL_SPI_Receive+0x10c>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80097fe:	2320      	movs	r3, #32
 8009800:	6563      	str	r3, [r4, #84]	; 0x54
 8009802:	e7d8      	b.n	80097b6 <HAL_SPI_Receive+0xf2>
    errorcode = HAL_BUSY;
 8009804:	2002      	movs	r0, #2
 8009806:	e7e4      	b.n	80097d2 <HAL_SPI_Receive+0x10e>
  __HAL_LOCK(hspi);
 8009808:	2002      	movs	r0, #2
 800980a:	e76f      	b.n	80096ec <HAL_SPI_Receive+0x28>

0800980c <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800980c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009810:	2b01      	cmp	r3, #1
 8009812:	d130      	bne.n	8009876 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009814:	2302      	movs	r3, #2
 8009816:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800981a:	6803      	ldr	r3, [r0, #0]
 800981c:	68da      	ldr	r2, [r3, #12]
 800981e:	f042 0201 	orr.w	r2, r2, #1
 8009822:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009824:	4a15      	ldr	r2, [pc, #84]	; (800987c <HAL_TIM_Base_Start_IT+0x70>)
 8009826:	4293      	cmp	r3, r2
 8009828:	d01a      	beq.n	8009860 <HAL_TIM_Base_Start_IT+0x54>
 800982a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800982e:	d017      	beq.n	8009860 <HAL_TIM_Base_Start_IT+0x54>
 8009830:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009834:	4293      	cmp	r3, r2
 8009836:	d013      	beq.n	8009860 <HAL_TIM_Base_Start_IT+0x54>
 8009838:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800983c:	4293      	cmp	r3, r2
 800983e:	d00f      	beq.n	8009860 <HAL_TIM_Base_Start_IT+0x54>
 8009840:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009844:	4293      	cmp	r3, r2
 8009846:	d00b      	beq.n	8009860 <HAL_TIM_Base_Start_IT+0x54>
 8009848:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800984c:	4293      	cmp	r3, r2
 800984e:	d007      	beq.n	8009860 <HAL_TIM_Base_Start_IT+0x54>
 8009850:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8009854:	4293      	cmp	r3, r2
 8009856:	d003      	beq.n	8009860 <HAL_TIM_Base_Start_IT+0x54>
 8009858:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800985c:	4293      	cmp	r3, r2
 800985e:	d104      	bne.n	800986a <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009860:	689a      	ldr	r2, [r3, #8]
 8009862:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009866:	2a06      	cmp	r2, #6
 8009868:	d003      	beq.n	8009872 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800986a:	681a      	ldr	r2, [r3, #0]
 800986c:	f042 0201 	orr.w	r2, r2, #1
 8009870:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8009872:	2000      	movs	r0, #0
}
 8009874:	4770      	bx	lr
    return HAL_ERROR;
 8009876:	2001      	movs	r0, #1
 8009878:	4770      	bx	lr
 800987a:	bf00      	nop
 800987c:	40010000 	.word	0x40010000

08009880 <HAL_TIM_OC_DelayElapsedCallback>:
 8009880:	4770      	bx	lr

08009882 <HAL_TIM_IC_CaptureCallback>:
 8009882:	4770      	bx	lr

08009884 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009884:	4770      	bx	lr

08009886 <HAL_TIM_TriggerCallback>:
 8009886:	4770      	bx	lr

08009888 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8009888:	6803      	ldr	r3, [r0, #0]
 800988a:	691a      	ldr	r2, [r3, #16]
 800988c:	0791      	lsls	r1, r2, #30
{
 800988e:	b510      	push	{r4, lr}
 8009890:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8009892:	d50e      	bpl.n	80098b2 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8009894:	68da      	ldr	r2, [r3, #12]
 8009896:	0792      	lsls	r2, r2, #30
 8009898:	d50b      	bpl.n	80098b2 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800989a:	f06f 0202 	mvn.w	r2, #2
 800989e:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80098a0:	2201      	movs	r2, #1
 80098a2:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80098a4:	699b      	ldr	r3, [r3, #24]
 80098a6:	079b      	lsls	r3, r3, #30
 80098a8:	d077      	beq.n	800999a <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80098aa:	f7ff ffea 	bl	8009882 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80098ae:	2300      	movs	r3, #0
 80098b0:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80098b2:	6823      	ldr	r3, [r4, #0]
 80098b4:	691a      	ldr	r2, [r3, #16]
 80098b6:	0750      	lsls	r0, r2, #29
 80098b8:	d510      	bpl.n	80098dc <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80098ba:	68da      	ldr	r2, [r3, #12]
 80098bc:	0751      	lsls	r1, r2, #29
 80098be:	d50d      	bpl.n	80098dc <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80098c0:	f06f 0204 	mvn.w	r2, #4
 80098c4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80098c6:	2202      	movs	r2, #2
 80098c8:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80098ca:	699b      	ldr	r3, [r3, #24]
 80098cc:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80098d0:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80098d2:	d068      	beq.n	80099a6 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80098d4:	f7ff ffd5 	bl	8009882 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80098d8:	2300      	movs	r3, #0
 80098da:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80098dc:	6823      	ldr	r3, [r4, #0]
 80098de:	691a      	ldr	r2, [r3, #16]
 80098e0:	0712      	lsls	r2, r2, #28
 80098e2:	d50f      	bpl.n	8009904 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80098e4:	68da      	ldr	r2, [r3, #12]
 80098e6:	0710      	lsls	r0, r2, #28
 80098e8:	d50c      	bpl.n	8009904 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80098ea:	f06f 0208 	mvn.w	r2, #8
 80098ee:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80098f0:	2204      	movs	r2, #4
 80098f2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80098f4:	69db      	ldr	r3, [r3, #28]
 80098f6:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80098f8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80098fa:	d05a      	beq.n	80099b2 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80098fc:	f7ff ffc1 	bl	8009882 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009900:	2300      	movs	r3, #0
 8009902:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8009904:	6823      	ldr	r3, [r4, #0]
 8009906:	691a      	ldr	r2, [r3, #16]
 8009908:	06d2      	lsls	r2, r2, #27
 800990a:	d510      	bpl.n	800992e <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800990c:	68da      	ldr	r2, [r3, #12]
 800990e:	06d0      	lsls	r0, r2, #27
 8009910:	d50d      	bpl.n	800992e <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8009912:	f06f 0210 	mvn.w	r2, #16
 8009916:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8009918:	2208      	movs	r2, #8
 800991a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800991c:	69db      	ldr	r3, [r3, #28]
 800991e:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8009922:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009924:	d04b      	beq.n	80099be <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8009926:	f7ff ffac 	bl	8009882 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800992a:	2300      	movs	r3, #0
 800992c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800992e:	6823      	ldr	r3, [r4, #0]
 8009930:	691a      	ldr	r2, [r3, #16]
 8009932:	07d1      	lsls	r1, r2, #31
 8009934:	d508      	bpl.n	8009948 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8009936:	68da      	ldr	r2, [r3, #12]
 8009938:	07d2      	lsls	r2, r2, #31
 800993a:	d505      	bpl.n	8009948 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800993c:	f06f 0201 	mvn.w	r2, #1
 8009940:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8009942:	4620      	mov	r0, r4
 8009944:	f7f8 f8d0 	bl	8001ae8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8009948:	6823      	ldr	r3, [r4, #0]
 800994a:	691a      	ldr	r2, [r3, #16]
 800994c:	0610      	lsls	r0, r2, #24
 800994e:	d508      	bpl.n	8009962 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8009950:	68da      	ldr	r2, [r3, #12]
 8009952:	0611      	lsls	r1, r2, #24
 8009954:	d505      	bpl.n	8009962 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8009956:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800995a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800995c:	4620      	mov	r0, r4
 800995e:	f000 f906 	bl	8009b6e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8009962:	6823      	ldr	r3, [r4, #0]
 8009964:	691a      	ldr	r2, [r3, #16]
 8009966:	0652      	lsls	r2, r2, #25
 8009968:	d508      	bpl.n	800997c <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800996a:	68da      	ldr	r2, [r3, #12]
 800996c:	0650      	lsls	r0, r2, #25
 800996e:	d505      	bpl.n	800997c <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009970:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009974:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8009976:	4620      	mov	r0, r4
 8009978:	f7ff ff85 	bl	8009886 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800997c:	6823      	ldr	r3, [r4, #0]
 800997e:	691a      	ldr	r2, [r3, #16]
 8009980:	0691      	lsls	r1, r2, #26
 8009982:	d522      	bpl.n	80099ca <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8009984:	68da      	ldr	r2, [r3, #12]
 8009986:	0692      	lsls	r2, r2, #26
 8009988:	d51f      	bpl.n	80099ca <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800998a:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800998e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8009990:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8009992:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8009996:	f000 b8e9 	b.w	8009b6c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800999a:	f7ff ff71 	bl	8009880 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800999e:	4620      	mov	r0, r4
 80099a0:	f7ff ff70 	bl	8009884 <HAL_TIM_PWM_PulseFinishedCallback>
 80099a4:	e783      	b.n	80098ae <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80099a6:	f7ff ff6b 	bl	8009880 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80099aa:	4620      	mov	r0, r4
 80099ac:	f7ff ff6a 	bl	8009884 <HAL_TIM_PWM_PulseFinishedCallback>
 80099b0:	e792      	b.n	80098d8 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80099b2:	f7ff ff65 	bl	8009880 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80099b6:	4620      	mov	r0, r4
 80099b8:	f7ff ff64 	bl	8009884 <HAL_TIM_PWM_PulseFinishedCallback>
 80099bc:	e7a0      	b.n	8009900 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80099be:	f7ff ff5f 	bl	8009880 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80099c2:	4620      	mov	r0, r4
 80099c4:	f7ff ff5e 	bl	8009884 <HAL_TIM_PWM_PulseFinishedCallback>
 80099c8:	e7af      	b.n	800992a <HAL_TIM_IRQHandler+0xa2>
}
 80099ca:	bd10      	pop	{r4, pc}

080099cc <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80099cc:	4a30      	ldr	r2, [pc, #192]	; (8009a90 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80099ce:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80099d0:	4290      	cmp	r0, r2
 80099d2:	d012      	beq.n	80099fa <TIM_Base_SetConfig+0x2e>
 80099d4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80099d8:	d00f      	beq.n	80099fa <TIM_Base_SetConfig+0x2e>
 80099da:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80099de:	4290      	cmp	r0, r2
 80099e0:	d00b      	beq.n	80099fa <TIM_Base_SetConfig+0x2e>
 80099e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80099e6:	4290      	cmp	r0, r2
 80099e8:	d007      	beq.n	80099fa <TIM_Base_SetConfig+0x2e>
 80099ea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80099ee:	4290      	cmp	r0, r2
 80099f0:	d003      	beq.n	80099fa <TIM_Base_SetConfig+0x2e>
 80099f2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80099f6:	4290      	cmp	r0, r2
 80099f8:	d119      	bne.n	8009a2e <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80099fa:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80099fc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8009a00:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8009a02:	4a23      	ldr	r2, [pc, #140]	; (8009a90 <TIM_Base_SetConfig+0xc4>)
 8009a04:	4290      	cmp	r0, r2
 8009a06:	d029      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a08:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8009a0c:	d026      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a0e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009a12:	4290      	cmp	r0, r2
 8009a14:	d022      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a16:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a1a:	4290      	cmp	r0, r2
 8009a1c:	d01e      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a1e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a22:	4290      	cmp	r0, r2
 8009a24:	d01a      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a26:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8009a2a:	4290      	cmp	r0, r2
 8009a2c:	d016      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a2e:	4a19      	ldr	r2, [pc, #100]	; (8009a94 <TIM_Base_SetConfig+0xc8>)
 8009a30:	4290      	cmp	r0, r2
 8009a32:	d013      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a34:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a38:	4290      	cmp	r0, r2
 8009a3a:	d00f      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a3c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a40:	4290      	cmp	r0, r2
 8009a42:	d00b      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a44:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8009a48:	4290      	cmp	r0, r2
 8009a4a:	d007      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a4c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a50:	4290      	cmp	r0, r2
 8009a52:	d003      	beq.n	8009a5c <TIM_Base_SetConfig+0x90>
 8009a54:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009a58:	4290      	cmp	r0, r2
 8009a5a:	d103      	bne.n	8009a64 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009a5c:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8009a5e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009a62:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009a64:	694a      	ldr	r2, [r1, #20]
 8009a66:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8009a6a:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8009a6c:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009a6e:	688b      	ldr	r3, [r1, #8]
 8009a70:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8009a72:	680b      	ldr	r3, [r1, #0]
 8009a74:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8009a76:	4b06      	ldr	r3, [pc, #24]	; (8009a90 <TIM_Base_SetConfig+0xc4>)
 8009a78:	4298      	cmp	r0, r3
 8009a7a:	d003      	beq.n	8009a84 <TIM_Base_SetConfig+0xb8>
 8009a7c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009a80:	4298      	cmp	r0, r3
 8009a82:	d101      	bne.n	8009a88 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009a84:	690b      	ldr	r3, [r1, #16]
 8009a86:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8009a88:	2301      	movs	r3, #1
 8009a8a:	6143      	str	r3, [r0, #20]
}
 8009a8c:	4770      	bx	lr
 8009a8e:	bf00      	nop
 8009a90:	40010000 	.word	0x40010000
 8009a94:	40014000 	.word	0x40014000

08009a98 <HAL_TIM_Base_Init>:
{
 8009a98:	b510      	push	{r4, lr}
  if (htim == NULL)
 8009a9a:	4604      	mov	r4, r0
 8009a9c:	b330      	cbz	r0, 8009aec <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8009a9e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009aa2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009aa6:	b91b      	cbnz	r3, 8009ab0 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009aa8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8009aac:	f7f8 f9f0 	bl	8001e90 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8009ab0:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009ab2:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8009ab4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009ab8:	1d21      	adds	r1, r4, #4
 8009aba:	f7ff ff87 	bl	80099cc <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009abe:	2301      	movs	r3, #1
 8009ac0:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8009ac4:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009ac6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8009aca:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8009ace:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8009ad2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009ad6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8009ada:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009ade:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8009ae2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8009ae6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8009aea:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009aec:	2001      	movs	r0, #1
 8009aee:	e7fc      	b.n	8009aea <HAL_TIM_Base_Init+0x52>

08009af0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8009af0:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8009af2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8009af6:	2b01      	cmp	r3, #1
 8009af8:	f04f 0302 	mov.w	r3, #2
 8009afc:	d032      	beq.n	8009b64 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009afe:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8009b02:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8009b04:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8009b06:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8009b08:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 8009b0a:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8009b0e:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8009b10:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009b12:	4c15      	ldr	r4, [pc, #84]	; (8009b68 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8009b14:	42a3      	cmp	r3, r4
 8009b16:	d01a      	beq.n	8009b4e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009b18:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009b1c:	d017      	beq.n	8009b4e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009b1e:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8009b22:	42a3      	cmp	r3, r4
 8009b24:	d013      	beq.n	8009b4e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009b26:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009b2a:	42a3      	cmp	r3, r4
 8009b2c:	d00f      	beq.n	8009b4e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009b2e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009b32:	42a3      	cmp	r3, r4
 8009b34:	d00b      	beq.n	8009b4e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009b36:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8009b3a:	42a3      	cmp	r3, r4
 8009b3c:	d007      	beq.n	8009b4e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009b3e:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8009b42:	42a3      	cmp	r3, r4
 8009b44:	d003      	beq.n	8009b4e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8009b46:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8009b4a:	42a3      	cmp	r3, r4
 8009b4c:	d104      	bne.n	8009b58 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8009b4e:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8009b50:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8009b54:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8009b56:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8009b58:	2301      	movs	r3, #1
 8009b5a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8009b5e:	2300      	movs	r3, #0
 8009b60:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8009b64:	4618      	mov	r0, r3

  return HAL_OK;
}
 8009b66:	bd30      	pop	{r4, r5, pc}
 8009b68:	40010000 	.word	0x40010000

08009b6c <HAL_TIMEx_CommutCallback>:
 8009b6c:	4770      	bx	lr

08009b6e <HAL_TIMEx_BreakCallback>:
 8009b6e:	4770      	bx	lr

08009b70 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8009b70:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009b72:	f102 030c 	add.w	r3, r2, #12
 8009b76:	e853 3f00 	ldrex	r3, [r3]
 8009b7a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009b7e:	320c      	adds	r2, #12
 8009b80:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8009b84:	6802      	ldr	r2, [r0, #0]
 8009b86:	2900      	cmp	r1, #0
 8009b88:	d1f2      	bne.n	8009b70 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009b8a:	f102 0314 	add.w	r3, r2, #20
 8009b8e:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009b92:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009b96:	f102 0c14 	add.w	ip, r2, #20
 8009b9a:	e84c 3100 	strex	r1, r3, [ip]
 8009b9e:	2900      	cmp	r1, #0
 8009ba0:	d1f3      	bne.n	8009b8a <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8009ba2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8009ba4:	2b01      	cmp	r3, #1
 8009ba6:	d10b      	bne.n	8009bc0 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009ba8:	f102 030c 	add.w	r3, r2, #12
 8009bac:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8009bb0:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009bb4:	f102 0c0c 	add.w	ip, r2, #12
 8009bb8:	e84c 3100 	strex	r1, r3, [ip]
 8009bbc:	2900      	cmp	r1, #0
 8009bbe:	d1f3      	bne.n	8009ba8 <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8009bc0:	2320      	movs	r3, #32
 8009bc2:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8009bc6:	2300      	movs	r3, #0
 8009bc8:	6303      	str	r3, [r0, #48]	; 0x30
}
 8009bca:	4770      	bx	lr

08009bcc <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8009bcc:	6802      	ldr	r2, [r0, #0]
 8009bce:	68c1      	ldr	r1, [r0, #12]
 8009bd0:	6913      	ldr	r3, [r2, #16]
 8009bd2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8009bd6:	430b      	orrs	r3, r1
{
 8009bd8:	b570      	push	{r4, r5, r6, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8009bda:	6113      	str	r3, [r2, #16]
{
 8009bdc:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8009bde:	6883      	ldr	r3, [r0, #8]
 8009be0:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 8009be2:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8009be4:	4303      	orrs	r3, r0
 8009be6:	6968      	ldr	r0, [r5, #20]
 8009be8:	4303      	orrs	r3, r0
 8009bea:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8009bec:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
 8009bf0:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8009bf4:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 8009bf6:	430b      	orrs	r3, r1
 8009bf8:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8009bfa:	6953      	ldr	r3, [r2, #20]
 8009bfc:	69a9      	ldr	r1, [r5, #24]
 8009bfe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009c02:	430b      	orrs	r3, r1
 8009c04:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8009c06:	4b1f      	ldr	r3, [pc, #124]	; (8009c84 <UART_SetConfig+0xb8>)
 8009c08:	429a      	cmp	r2, r3
 8009c0a:	d003      	beq.n	8009c14 <UART_SetConfig+0x48>
 8009c0c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009c10:	429a      	cmp	r2, r3
 8009c12:	d123      	bne.n	8009c5c <UART_SetConfig+0x90>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8009c14:	f7ff f900 	bl	8008e18 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8009c18:	69eb      	ldr	r3, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8009c1a:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8009c1c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8009c20:	e9d5 4600 	ldrd	r4, r6, [r5]
 8009c24:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8009c28:	d11b      	bne.n	8009c62 <UART_SetConfig+0x96>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8009c2a:	19b2      	adds	r2, r6, r6
 8009c2c:	f04f 0300 	mov.w	r3, #0
 8009c30:	415b      	adcs	r3, r3
 8009c32:	f7f6 fb35 	bl	80002a0 <__aeabi_uldivmod>
 8009c36:	2164      	movs	r1, #100	; 0x64
 8009c38:	fbb0 f5f1 	udiv	r5, r0, r1
 8009c3c:	fb01 0315 	mls	r3, r1, r5, r0
 8009c40:	00db      	lsls	r3, r3, #3
 8009c42:	3332      	adds	r3, #50	; 0x32
 8009c44:	fbb3 f3f1 	udiv	r3, r3, r1
 8009c48:	f003 0207 	and.w	r2, r3, #7
 8009c4c:	005b      	lsls	r3, r3, #1
 8009c4e:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 8009c52:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8009c56:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8009c58:	60a3      	str	r3, [r4, #8]
  }
}
 8009c5a:	bd70      	pop	{r4, r5, r6, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8009c5c:	f7ff f8cc 	bl	8008df8 <HAL_RCC_GetPCLK1Freq>
 8009c60:	e7da      	b.n	8009c18 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8009c62:	00b2      	lsls	r2, r6, #2
 8009c64:	0fb3      	lsrs	r3, r6, #30
 8009c66:	f7f6 fb1b 	bl	80002a0 <__aeabi_uldivmod>
 8009c6a:	2264      	movs	r2, #100	; 0x64
 8009c6c:	fbb0 f1f2 	udiv	r1, r0, r2
 8009c70:	fb02 0311 	mls	r3, r2, r1, r0
 8009c74:	011b      	lsls	r3, r3, #4
 8009c76:	3332      	adds	r3, #50	; 0x32
 8009c78:	fbb3 f3f2 	udiv	r3, r3, r2
 8009c7c:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8009c80:	e7ea      	b.n	8009c58 <UART_SetConfig+0x8c>
 8009c82:	bf00      	nop
 8009c84:	40011000 	.word	0x40011000

08009c88 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 8009c88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009c8a:	4604      	mov	r4, r0
 8009c8c:	460e      	mov	r6, r1
 8009c8e:	4617      	mov	r7, r2
 8009c90:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8009c92:	6822      	ldr	r2, [r4, #0]
 8009c94:	6813      	ldr	r3, [r2, #0]
 8009c96:	ea36 0303 	bics.w	r3, r6, r3
 8009c9a:	d101      	bne.n	8009ca0 <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 8009c9c:	2000      	movs	r0, #0
 8009c9e:	e028      	b.n	8009cf2 <UART_WaitOnFlagUntilTimeout.constprop.0+0x6a>
    if (Timeout != HAL_MAX_DELAY)
 8009ca0:	1c6b      	adds	r3, r5, #1
 8009ca2:	d0f7      	beq.n	8009c94 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8009ca4:	b125      	cbz	r5, 8009cb0 <UART_WaitOnFlagUntilTimeout.constprop.0+0x28>
 8009ca6:	f7fd fd77 	bl	8007798 <HAL_GetTick>
 8009caa:	1bc0      	subs	r0, r0, r7
 8009cac:	4285      	cmp	r5, r0
 8009cae:	d2f0      	bcs.n	8009c92 <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8009cb0:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009cb2:	f102 030c 	add.w	r3, r2, #12
 8009cb6:	e853 3f00 	ldrex	r3, [r3]
 8009cba:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009cbe:	320c      	adds	r2, #12
 8009cc0:	e842 3000 	strex	r0, r3, [r2]
   return(result);
 8009cc4:	6821      	ldr	r1, [r4, #0]
 8009cc6:	2800      	cmp	r0, #0
 8009cc8:	d1f2      	bne.n	8009cb0 <UART_WaitOnFlagUntilTimeout.constprop.0+0x28>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009cca:	f101 0314 	add.w	r3, r1, #20
 8009cce:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009cd2:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009cd6:	f101 0014 	add.w	r0, r1, #20
 8009cda:	e840 3200 	strex	r2, r3, [r0]
 8009cde:	2a00      	cmp	r2, #0
 8009ce0:	d1f3      	bne.n	8009cca <UART_WaitOnFlagUntilTimeout.constprop.0+0x42>
        huart->gState  = HAL_UART_STATE_READY;
 8009ce2:	2320      	movs	r3, #32
 8009ce4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        __HAL_UNLOCK(huart);
 8009ce8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
        huart->RxState = HAL_UART_STATE_READY;
 8009cec:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        __HAL_UNLOCK(huart);
 8009cf0:	2003      	movs	r0, #3
}
 8009cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08009cf4 <HAL_UART_Init>:
{
 8009cf4:	b510      	push	{r4, lr}
  if (huart == NULL)
 8009cf6:	4604      	mov	r4, r0
 8009cf8:	b340      	cbz	r0, 8009d4c <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8009cfa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009cfe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009d02:	b91b      	cbnz	r3, 8009d0c <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8009d04:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_UART_MspInit(huart);
 8009d08:	f7f8 f8e4 	bl	8001ed4 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8009d0c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8009d0e:	2324      	movs	r3, #36	; 0x24
 8009d10:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UART_DISABLE(huart);
 8009d14:	68d3      	ldr	r3, [r2, #12]
 8009d16:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8009d1a:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8009d1c:	4620      	mov	r0, r4
 8009d1e:	f7ff ff55 	bl	8009bcc <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8009d22:	6823      	ldr	r3, [r4, #0]
 8009d24:	691a      	ldr	r2, [r3, #16]
 8009d26:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8009d2a:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8009d2c:	695a      	ldr	r2, [r3, #20]
 8009d2e:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8009d32:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8009d34:	68da      	ldr	r2, [r3, #12]
 8009d36:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009d3a:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009d3c:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8009d3e:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009d40:	6420      	str	r0, [r4, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 8009d42:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 8009d46:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
}
 8009d4a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009d4c:	2001      	movs	r0, #1
 8009d4e:	e7fc      	b.n	8009d4a <HAL_UART_Init+0x56>

08009d50 <HAL_UART_Transmit>:
{
 8009d50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009d52:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8009d54:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
{
 8009d58:	9300      	str	r3, [sp, #0]
  if (huart->gState == HAL_UART_STATE_READY)
 8009d5a:	2a20      	cmp	r2, #32
{
 8009d5c:	4604      	mov	r4, r0
 8009d5e:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 8009d60:	d149      	bne.n	8009df6 <HAL_UART_Transmit+0xa6>
    if ((pData == NULL) || (Size == 0U))
 8009d62:	2900      	cmp	r1, #0
 8009d64:	d045      	beq.n	8009df2 <HAL_UART_Transmit+0xa2>
 8009d66:	2f00      	cmp	r7, #0
 8009d68:	d043      	beq.n	8009df2 <HAL_UART_Transmit+0xa2>
    __HAL_LOCK(huart);
 8009d6a:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 8009d6e:	2a01      	cmp	r2, #1
 8009d70:	d041      	beq.n	8009df6 <HAL_UART_Transmit+0xa6>
 8009d72:	2201      	movs	r2, #1
 8009d74:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009d78:	2500      	movs	r5, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8009d7a:	2221      	movs	r2, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009d7c:	6405      	str	r5, [r0, #64]	; 0x40
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8009d7e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    tickstart = HAL_GetTick();
 8009d82:	f7fd fd09 	bl	8007798 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009d86:	68a1      	ldr	r1, [r4, #8]
 8009d88:	9b00      	ldr	r3, [sp, #0]
    huart->TxXferSize = Size;
 8009d8a:	84a7      	strh	r7, [r4, #36]	; 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009d8c:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
    tickstart = HAL_GetTick();
 8009d90:	4602      	mov	r2, r0
    huart->TxXferCount = Size;
 8009d92:	84e7      	strh	r7, [r4, #38]	; 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009d94:	d103      	bne.n	8009d9e <HAL_UART_Transmit+0x4e>
 8009d96:	6921      	ldr	r1, [r4, #16]
 8009d98:	b909      	cbnz	r1, 8009d9e <HAL_UART_Transmit+0x4e>
 8009d9a:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8009d9c:	460e      	mov	r6, r1
    __HAL_UNLOCK(huart);
 8009d9e:	2100      	movs	r1, #0
 8009da0:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    while (huart->TxXferCount > 0U)
 8009da4:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8009da6:	b289      	uxth	r1, r1
 8009da8:	b941      	cbnz	r1, 8009dbc <HAL_UART_Transmit+0x6c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8009daa:	2140      	movs	r1, #64	; 0x40
 8009dac:	4620      	mov	r0, r4
 8009dae:	f7ff ff6b 	bl	8009c88 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8009db2:	b960      	cbnz	r0, 8009dce <HAL_UART_Transmit+0x7e>
    huart->gState = HAL_UART_STATE_READY;
 8009db4:	2320      	movs	r3, #32
 8009db6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    return HAL_OK;
 8009dba:	e009      	b.n	8009dd0 <HAL_UART_Transmit+0x80>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8009dbc:	2180      	movs	r1, #128	; 0x80
 8009dbe:	4620      	mov	r0, r4
 8009dc0:	e9cd 2300 	strd	r2, r3, [sp]
 8009dc4:	f7ff ff60 	bl	8009c88 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8009dc8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8009dcc:	b110      	cbz	r0, 8009dd4 <HAL_UART_Transmit+0x84>
        return HAL_TIMEOUT;
 8009dce:	2003      	movs	r0, #3
}
 8009dd0:	b003      	add	sp, #12
 8009dd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8009dd4:	6820      	ldr	r0, [r4, #0]
      if (pdata8bits == NULL)
 8009dd6:	b94e      	cbnz	r6, 8009dec <HAL_UART_Transmit+0x9c>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8009dd8:	f835 1b02 	ldrh.w	r1, [r5], #2
 8009ddc:	f3c1 0108 	ubfx	r1, r1, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8009de0:	6041      	str	r1, [r0, #4]
      huart->TxXferCount--;
 8009de2:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8009de4:	3901      	subs	r1, #1
 8009de6:	b289      	uxth	r1, r1
 8009de8:	84e1      	strh	r1, [r4, #38]	; 0x26
 8009dea:	e7db      	b.n	8009da4 <HAL_UART_Transmit+0x54>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8009dec:	f816 1b01 	ldrb.w	r1, [r6], #1
 8009df0:	e7f6      	b.n	8009de0 <HAL_UART_Transmit+0x90>
      return  HAL_ERROR;
 8009df2:	2001      	movs	r0, #1
 8009df4:	e7ec      	b.n	8009dd0 <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8009df6:	2002      	movs	r0, #2
 8009df8:	e7ea      	b.n	8009dd0 <HAL_UART_Transmit+0x80>

08009dfa <HAL_UART_TxCpltCallback>:
 8009dfa:	4770      	bx	lr

08009dfc <HAL_UART_ErrorCallback>:
 8009dfc:	4770      	bx	lr

08009dfe <UART_DMAAbortOnError>:
{
 8009dfe:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8009e00:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8009e02:	2300      	movs	r3, #0
 8009e04:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8009e06:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8009e08:	f7ff fff8 	bl	8009dfc <HAL_UART_ErrorCallback>
}
 8009e0c:	bd08      	pop	{r3, pc}

08009e0e <HAL_UARTEx_RxEventCallback>:
}
 8009e0e:	4770      	bx	lr

08009e10 <UART_Receive_IT.part.0.isra.0>:
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
 8009e10:	b507      	push	{r0, r1, r2, lr}
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009e12:	6881      	ldr	r1, [r0, #8]
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8009e14:	6a83      	ldr	r3, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8009e16:	6802      	ldr	r2, [r0, #0]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8009e18:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8009e1c:	d13e      	bne.n	8009e9c <UART_Receive_IT.part.0.isra.0+0x8c>
 8009e1e:	6901      	ldr	r1, [r0, #16]
 8009e20:	2900      	cmp	r1, #0
 8009e22:	d13e      	bne.n	8009ea2 <UART_Receive_IT.part.0.isra.0+0x92>
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8009e24:	6852      	ldr	r2, [r2, #4]
 8009e26:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009e2a:	f823 2b02 	strh.w	r2, [r3], #2
      huart->pRxBuffPtr += 1U;
 8009e2e:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8009e30:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8009e32:	3b01      	subs	r3, #1
 8009e34:	b29b      	uxth	r3, r3
 8009e36:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8009e38:	2b00      	cmp	r3, #0
 8009e3a:	d12c      	bne.n	8009e96 <UART_Receive_IT.part.0.isra.0+0x86>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8009e3c:	6802      	ldr	r2, [r0, #0]
 8009e3e:	68d1      	ldr	r1, [r2, #12]
 8009e40:	f021 0120 	bic.w	r1, r1, #32
 8009e44:	60d1      	str	r1, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8009e46:	68d1      	ldr	r1, [r2, #12]
 8009e48:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8009e4c:	60d1      	str	r1, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8009e4e:	6951      	ldr	r1, [r2, #20]
 8009e50:	f021 0101 	bic.w	r1, r1, #1
 8009e54:	6151      	str	r1, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8009e56:	2220      	movs	r2, #32
 8009e58:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8009e5c:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8009e5e:	2a01      	cmp	r2, #1
 8009e60:	6802      	ldr	r2, [r0, #0]
 8009e62:	d128      	bne.n	8009eb6 <UART_Receive_IT.part.0.isra.0+0xa6>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8009e64:	6303      	str	r3, [r0, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009e66:	f102 030c 	add.w	r3, r2, #12
 8009e6a:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8009e6e:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009e72:	f102 0c0c 	add.w	ip, r2, #12
 8009e76:	e84c 3100 	strex	r1, r3, [ip]
 8009e7a:	2900      	cmp	r1, #0
 8009e7c:	d1f3      	bne.n	8009e66 <UART_Receive_IT.part.0.isra.0+0x56>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8009e7e:	6813      	ldr	r3, [r2, #0]
 8009e80:	06db      	lsls	r3, r3, #27
 8009e82:	d505      	bpl.n	8009e90 <UART_Receive_IT.part.0.isra.0+0x80>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8009e84:	9101      	str	r1, [sp, #4]
 8009e86:	6813      	ldr	r3, [r2, #0]
 8009e88:	9301      	str	r3, [sp, #4]
 8009e8a:	6853      	ldr	r3, [r2, #4]
 8009e8c:	9301      	str	r3, [sp, #4]
 8009e8e:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8009e90:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8009e92:	f7ff ffbc 	bl	8009e0e <HAL_UARTEx_RxEventCallback>
}
 8009e96:	b003      	add	sp, #12
 8009e98:	f85d fb04 	ldr.w	pc, [sp], #4
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8009e9c:	b939      	cbnz	r1, 8009eae <UART_Receive_IT.part.0.isra.0+0x9e>
 8009e9e:	6901      	ldr	r1, [r0, #16]
 8009ea0:	b929      	cbnz	r1, 8009eae <UART_Receive_IT.part.0.isra.0+0x9e>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8009ea2:	6852      	ldr	r2, [r2, #4]
 8009ea4:	b2d2      	uxtb	r2, r2
 8009ea6:	701a      	strb	r2, [r3, #0]
      huart->pRxBuffPtr += 1U;
 8009ea8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009eaa:	3301      	adds	r3, #1
 8009eac:	e7bf      	b.n	8009e2e <UART_Receive_IT.part.0.isra.0+0x1e>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8009eae:	6852      	ldr	r2, [r2, #4]
 8009eb0:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8009eb4:	e7f7      	b.n	8009ea6 <UART_Receive_IT.part.0.isra.0+0x96>
        HAL_UART_RxCpltCallback(huart);
 8009eb6:	f7f7 fa83 	bl	80013c0 <HAL_UART_RxCpltCallback>
 8009eba:	e7ec      	b.n	8009e96 <UART_Receive_IT.part.0.isra.0+0x86>

08009ebc <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8009ebc:	6803      	ldr	r3, [r0, #0]
{
 8009ebe:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8009ec0:	681a      	ldr	r2, [r3, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8009ec2:	68d9      	ldr	r1, [r3, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8009ec4:	695d      	ldr	r5, [r3, #20]
  if (errorflags == RESET)
 8009ec6:	f012 0f0f 	tst.w	r2, #15
{
 8009eca:	4604      	mov	r4, r0
  if (errorflags == RESET)
 8009ecc:	d10c      	bne.n	8009ee8 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8009ece:	0695      	lsls	r5, r2, #26
 8009ed0:	d570      	bpl.n	8009fb4 <HAL_UART_IRQHandler+0xf8>
 8009ed2:	068d      	lsls	r5, r1, #26
 8009ed4:	d56e      	bpl.n	8009fb4 <HAL_UART_IRQHandler+0xf8>
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8009ed6:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 8009eda:	2b22      	cmp	r3, #34	; 0x22
 8009edc:	d164      	bne.n	8009fa8 <HAL_UART_IRQHandler+0xec>
}
 8009ede:	b003      	add	sp, #12
 8009ee0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009ee4:	f7ff bf94 	b.w	8009e10 <UART_Receive_IT.part.0.isra.0>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8009ee8:	f005 0001 	and.w	r0, r5, #1
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8009eec:	f401 7590 	and.w	r5, r1, #288	; 0x120
 8009ef0:	4305      	orrs	r5, r0
 8009ef2:	d05f      	beq.n	8009fb4 <HAL_UART_IRQHandler+0xf8>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8009ef4:	07d5      	lsls	r5, r2, #31
 8009ef6:	d505      	bpl.n	8009f04 <HAL_UART_IRQHandler+0x48>
 8009ef8:	05cb      	lsls	r3, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8009efa:	bf42      	ittt	mi
 8009efc:	6c23      	ldrmi	r3, [r4, #64]	; 0x40
 8009efe:	f043 0301 	orrmi.w	r3, r3, #1
 8009f02:	6423      	strmi	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8009f04:	0755      	lsls	r5, r2, #29
 8009f06:	d504      	bpl.n	8009f12 <HAL_UART_IRQHandler+0x56>
 8009f08:	b118      	cbz	r0, 8009f12 <HAL_UART_IRQHandler+0x56>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8009f0a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f0c:	f043 0302 	orr.w	r3, r3, #2
 8009f10:	6423      	str	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8009f12:	0793      	lsls	r3, r2, #30
 8009f14:	d504      	bpl.n	8009f20 <HAL_UART_IRQHandler+0x64>
 8009f16:	b118      	cbz	r0, 8009f20 <HAL_UART_IRQHandler+0x64>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8009f18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f1a:	f043 0304 	orr.w	r3, r3, #4
 8009f1e:	6423      	str	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8009f20:	0715      	lsls	r5, r2, #28
 8009f22:	d507      	bpl.n	8009f34 <HAL_UART_IRQHandler+0x78>
 8009f24:	f001 0320 	and.w	r3, r1, #32
 8009f28:	4303      	orrs	r3, r0
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8009f2a:	bf1e      	ittt	ne
 8009f2c:	6c23      	ldrne	r3, [r4, #64]	; 0x40
 8009f2e:	f043 0308 	orrne.w	r3, r3, #8
 8009f32:	6423      	strne	r3, [r4, #64]	; 0x40
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8009f34:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f36:	2b00      	cmp	r3, #0
 8009f38:	d036      	beq.n	8009fa8 <HAL_UART_IRQHandler+0xec>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8009f3a:	0690      	lsls	r0, r2, #26
 8009f3c:	d508      	bpl.n	8009f50 <HAL_UART_IRQHandler+0x94>
 8009f3e:	068a      	lsls	r2, r1, #26
 8009f40:	d506      	bpl.n	8009f50 <HAL_UART_IRQHandler+0x94>
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8009f42:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 8009f46:	2b22      	cmp	r3, #34	; 0x22
 8009f48:	d102      	bne.n	8009f50 <HAL_UART_IRQHandler+0x94>
 8009f4a:	4620      	mov	r0, r4
 8009f4c:	f7ff ff60 	bl	8009e10 <UART_Receive_IT.part.0.isra.0>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8009f50:	6823      	ldr	r3, [r4, #0]
 8009f52:	695b      	ldr	r3, [r3, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8009f54:	6c25      	ldr	r5, [r4, #64]	; 0x40
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8009f56:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8009f5a:	f005 0508 	and.w	r5, r5, #8
 8009f5e:	431d      	orrs	r5, r3
        UART_EndRxTransfer(huart);
 8009f60:	4620      	mov	r0, r4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8009f62:	d023      	beq.n	8009fac <HAL_UART_IRQHandler+0xf0>
        UART_EndRxTransfer(huart);
 8009f64:	f7ff fe04 	bl	8009b70 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009f68:	6822      	ldr	r2, [r4, #0]
 8009f6a:	6953      	ldr	r3, [r2, #20]
 8009f6c:	065b      	lsls	r3, r3, #25
 8009f6e:	d518      	bpl.n	8009fa2 <HAL_UART_IRQHandler+0xe6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009f70:	f102 0314 	add.w	r3, r2, #20
 8009f74:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8009f78:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009f7c:	f102 0014 	add.w	r0, r2, #20
 8009f80:	e840 3100 	strex	r1, r3, [r0]
 8009f84:	2900      	cmp	r1, #0
 8009f86:	d1f3      	bne.n	8009f70 <HAL_UART_IRQHandler+0xb4>
          if (huart->hdmarx != NULL)
 8009f88:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009f8a:	b150      	cbz	r0, 8009fa2 <HAL_UART_IRQHandler+0xe6>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8009f8c:	4b72      	ldr	r3, [pc, #456]	; (800a158 <HAL_UART_IRQHandler+0x29c>)
 8009f8e:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8009f90:	f7fd fcc2 	bl	8007918 <HAL_DMA_Abort_IT>
 8009f94:	b140      	cbz	r0, 8009fa8 <HAL_UART_IRQHandler+0xec>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8009f96:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8009f98:	6d03      	ldr	r3, [r0, #80]	; 0x50
}
 8009f9a:	b003      	add	sp, #12
 8009f9c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8009fa0:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 8009fa2:	4620      	mov	r0, r4
 8009fa4:	f7ff ff2a 	bl	8009dfc <HAL_UART_ErrorCallback>
}
 8009fa8:	b003      	add	sp, #12
 8009faa:	bd30      	pop	{r4, r5, pc}
        HAL_UART_ErrorCallback(huart);
 8009fac:	f7ff ff26 	bl	8009dfc <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8009fb0:	6425      	str	r5, [r4, #64]	; 0x40
 8009fb2:	e7f9      	b.n	8009fa8 <HAL_UART_IRQHandler+0xec>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8009fb4:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009fb6:	2801      	cmp	r0, #1
 8009fb8:	f040 8091 	bne.w	800a0de <HAL_UART_IRQHandler+0x222>
      && ((isrflags & USART_SR_IDLE) != 0U)
 8009fbc:	06d5      	lsls	r5, r2, #27
 8009fbe:	f140 808e 	bpl.w	800a0de <HAL_UART_IRQHandler+0x222>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8009fc2:	06c8      	lsls	r0, r1, #27
 8009fc4:	f140 808b 	bpl.w	800a0de <HAL_UART_IRQHandler+0x222>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8009fc8:	2200      	movs	r2, #0
 8009fca:	9201      	str	r2, [sp, #4]
 8009fcc:	681a      	ldr	r2, [r3, #0]
 8009fce:	9201      	str	r2, [sp, #4]
 8009fd0:	685a      	ldr	r2, [r3, #4]
 8009fd2:	9201      	str	r2, [sp, #4]
 8009fd4:	9a01      	ldr	r2, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8009fd6:	695a      	ldr	r2, [r3, #20]
 8009fd8:	0655      	lsls	r5, r2, #25
 8009fda:	d54c      	bpl.n	800a076 <HAL_UART_IRQHandler+0x1ba>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8009fdc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8009fde:	680a      	ldr	r2, [r1, #0]
 8009fe0:	6852      	ldr	r2, [r2, #4]
 8009fe2:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8009fe4:	2a00      	cmp	r2, #0
 8009fe6:	d0df      	beq.n	8009fa8 <HAL_UART_IRQHandler+0xec>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8009fe8:	8da0      	ldrh	r0, [r4, #44]	; 0x2c
 8009fea:	4290      	cmp	r0, r2
 8009fec:	d9dc      	bls.n	8009fa8 <HAL_UART_IRQHandler+0xec>
        huart->RxXferCount = nb_remaining_rx_data;
 8009fee:	85e2      	strh	r2, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8009ff0:	69ca      	ldr	r2, [r1, #28]
 8009ff2:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8009ff6:	d036      	beq.n	800a066 <HAL_UART_IRQHandler+0x1aa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009ff8:	f103 020c 	add.w	r2, r3, #12
 8009ffc:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800a000:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a004:	f103 000c 	add.w	r0, r3, #12
 800a008:	e840 2100 	strex	r1, r2, [r0]
 800a00c:	2900      	cmp	r1, #0
 800a00e:	d1f3      	bne.n	8009ff8 <HAL_UART_IRQHandler+0x13c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a010:	f103 0214 	add.w	r2, r3, #20
 800a014:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800a018:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a01c:	f103 0014 	add.w	r0, r3, #20
 800a020:	e840 2100 	strex	r1, r2, [r0]
 800a024:	2900      	cmp	r1, #0
 800a026:	d1f3      	bne.n	800a010 <HAL_UART_IRQHandler+0x154>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a028:	f103 0214 	add.w	r2, r3, #20
 800a02c:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800a030:	f022 0240 	bic.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a034:	f103 0014 	add.w	r0, r3, #20
 800a038:	e840 2100 	strex	r1, r2, [r0]
 800a03c:	2900      	cmp	r1, #0
 800a03e:	d1f3      	bne.n	800a028 <HAL_UART_IRQHandler+0x16c>
          huart->RxState = HAL_UART_STATE_READY;
 800a040:	2220      	movs	r2, #32
 800a042:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a046:	6321      	str	r1, [r4, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a048:	f103 020c 	add.w	r2, r3, #12
 800a04c:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800a050:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a054:	f103 000c 	add.w	r0, r3, #12
 800a058:	e840 2100 	strex	r1, r2, [r0]
 800a05c:	2900      	cmp	r1, #0
 800a05e:	d1f3      	bne.n	800a048 <HAL_UART_IRQHandler+0x18c>
          (void)HAL_DMA_Abort(huart->hdmarx);
 800a060:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a062:	f7fd fc15 	bl	8007890 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 800a066:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800a068:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a06a:	1ac9      	subs	r1, r1, r3
 800a06c:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 800a06e:	4620      	mov	r0, r4
 800a070:	f7ff fecd 	bl	8009e0e <HAL_UARTEx_RxEventCallback>
 800a074:	e798      	b.n	8009fa8 <HAL_UART_IRQHandler+0xec>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800a076:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800a078:	b28a      	uxth	r2, r1
      if ((huart->RxXferCount > 0U)
 800a07a:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800a07c:	b289      	uxth	r1, r1
 800a07e:	2900      	cmp	r1, #0
 800a080:	d092      	beq.n	8009fa8 <HAL_UART_IRQHandler+0xec>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 800a082:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a084:	1a89      	subs	r1, r1, r2
 800a086:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 800a088:	2900      	cmp	r1, #0
 800a08a:	d08d      	beq.n	8009fa8 <HAL_UART_IRQHandler+0xec>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a08c:	f103 020c 	add.w	r2, r3, #12
 800a090:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800a094:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a098:	f103 050c 	add.w	r5, r3, #12
 800a09c:	e845 2000 	strex	r0, r2, [r5]
 800a0a0:	2800      	cmp	r0, #0
 800a0a2:	d1f3      	bne.n	800a08c <HAL_UART_IRQHandler+0x1d0>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a0a4:	f103 0214 	add.w	r2, r3, #20
 800a0a8:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800a0ac:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a0b0:	f103 0514 	add.w	r5, r3, #20
 800a0b4:	e845 2000 	strex	r0, r2, [r5]
 800a0b8:	2800      	cmp	r0, #0
 800a0ba:	d1f3      	bne.n	800a0a4 <HAL_UART_IRQHandler+0x1e8>
        huart->RxState = HAL_UART_STATE_READY;
 800a0bc:	2220      	movs	r2, #32
 800a0be:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a0c2:	6320      	str	r0, [r4, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800a0c4:	f103 020c 	add.w	r2, r3, #12
 800a0c8:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800a0cc:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800a0d0:	f103 050c 	add.w	r5, r3, #12
 800a0d4:	e845 2000 	strex	r0, r2, [r5]
 800a0d8:	2800      	cmp	r0, #0
 800a0da:	d1f3      	bne.n	800a0c4 <HAL_UART_IRQHandler+0x208>
 800a0dc:	e7c7      	b.n	800a06e <HAL_UART_IRQHandler+0x1b2>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 800a0de:	0610      	lsls	r0, r2, #24
 800a0e0:	d528      	bpl.n	800a134 <HAL_UART_IRQHandler+0x278>
 800a0e2:	060d      	lsls	r5, r1, #24
 800a0e4:	d526      	bpl.n	800a134 <HAL_UART_IRQHandler+0x278>
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 800a0e6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a0ea:	2a21      	cmp	r2, #33	; 0x21
 800a0ec:	f47f af5c 	bne.w	8009fa8 <HAL_UART_IRQHandler+0xec>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800a0f0:	68a1      	ldr	r1, [r4, #8]
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 800a0f2:	6a22      	ldr	r2, [r4, #32]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800a0f4:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 800a0f8:	d117      	bne.n	800a12a <HAL_UART_IRQHandler+0x26e>
 800a0fa:	6921      	ldr	r1, [r4, #16]
 800a0fc:	b9a9      	cbnz	r1, 800a12a <HAL_UART_IRQHandler+0x26e>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 800a0fe:	f832 1b02 	ldrh.w	r1, [r2], #2
 800a102:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800a106:	6059      	str	r1, [r3, #4]
      huart->pTxBuffPtr += 2U;
 800a108:	6222      	str	r2, [r4, #32]
    if (--huart->TxXferCount == 0U)
 800a10a:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 800a10c:	3a01      	subs	r2, #1
 800a10e:	b292      	uxth	r2, r2
 800a110:	84e2      	strh	r2, [r4, #38]	; 0x26
 800a112:	2a00      	cmp	r2, #0
 800a114:	f47f af48 	bne.w	8009fa8 <HAL_UART_IRQHandler+0xec>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 800a118:	68da      	ldr	r2, [r3, #12]
 800a11a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a11e:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 800a120:	68da      	ldr	r2, [r3, #12]
 800a122:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800a126:	60da      	str	r2, [r3, #12]
 800a128:	e73e      	b.n	8009fa8 <HAL_UART_IRQHandler+0xec>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 800a12a:	1c51      	adds	r1, r2, #1
 800a12c:	6221      	str	r1, [r4, #32]
 800a12e:	7812      	ldrb	r2, [r2, #0]
 800a130:	605a      	str	r2, [r3, #4]
 800a132:	e7ea      	b.n	800a10a <HAL_UART_IRQHandler+0x24e>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 800a134:	0650      	lsls	r0, r2, #25
 800a136:	f57f af37 	bpl.w	8009fa8 <HAL_UART_IRQHandler+0xec>
 800a13a:	064a      	lsls	r2, r1, #25
 800a13c:	f57f af34 	bpl.w	8009fa8 <HAL_UART_IRQHandler+0xec>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 800a140:	68da      	ldr	r2, [r3, #12]
 800a142:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800a146:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 800a148:	2320      	movs	r3, #32
 800a14a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  HAL_UART_TxCpltCallback(huart);
 800a14e:	4620      	mov	r0, r4
 800a150:	f7ff fe53 	bl	8009dfa <HAL_UART_TxCpltCallback>
  return HAL_OK;
 800a154:	e728      	b.n	8009fa8 <HAL_UART_IRQHandler+0xec>
 800a156:	bf00      	nop
 800a158:	08009dff 	.word	0x08009dff

0800a15c <UART_Start_Receive_IT>:
  huart->RxXferCount = Size;
 800a15c:	85c2      	strh	r2, [r0, #46]	; 0x2e
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800a15e:	2300      	movs	r3, #0
  huart->RxXferSize = Size;
 800a160:	8582      	strh	r2, [r0, #44]	; 0x2c
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 800a162:	2222      	movs	r2, #34	; 0x22
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800a164:	6403      	str	r3, [r0, #64]	; 0x40
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 800a166:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
  if (huart->Init.Parity != UART_PARITY_NONE)
 800a16a:	6902      	ldr	r2, [r0, #16]
  __HAL_UNLOCK(huart);
 800a16c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  huart->pRxBuffPtr = pData;
 800a170:	6281      	str	r1, [r0, #40]	; 0x28
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 800a172:	6803      	ldr	r3, [r0, #0]
  if (huart->Init.Parity != UART_PARITY_NONE)
 800a174:	b11a      	cbz	r2, 800a17e <UART_Start_Receive_IT+0x22>
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 800a176:	68da      	ldr	r2, [r3, #12]
 800a178:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a17c:	60da      	str	r2, [r3, #12]
  __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 800a17e:	695a      	ldr	r2, [r3, #20]
 800a180:	f042 0201 	orr.w	r2, r2, #1
 800a184:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 800a186:	68da      	ldr	r2, [r3, #12]
 800a188:	f042 0220 	orr.w	r2, r2, #32
 800a18c:	60da      	str	r2, [r3, #12]
}
 800a18e:	2000      	movs	r0, #0
 800a190:	4770      	bx	lr

0800a192 <HAL_UART_Receive_IT>:
{
 800a192:	b470      	push	{r4, r5, r6}
  if (huart->RxState == HAL_UART_STATE_READY)
 800a194:	f890 603e 	ldrb.w	r6, [r0, #62]	; 0x3e
 800a198:	2e20      	cmp	r6, #32
 800a19a:	d110      	bne.n	800a1be <HAL_UART_Receive_IT+0x2c>
    if ((pData == NULL) || (Size == 0U))
 800a19c:	b161      	cbz	r1, 800a1b8 <HAL_UART_Receive_IT+0x26>
 800a19e:	b15a      	cbz	r2, 800a1b8 <HAL_UART_Receive_IT+0x26>
    __HAL_LOCK(huart);
 800a1a0:	f890 403c 	ldrb.w	r4, [r0, #60]	; 0x3c
 800a1a4:	2c01      	cmp	r4, #1
 800a1a6:	d00a      	beq.n	800a1be <HAL_UART_Receive_IT+0x2c>
 800a1a8:	2401      	movs	r4, #1
 800a1aa:	f880 403c 	strb.w	r4, [r0, #60]	; 0x3c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800a1ae:	2400      	movs	r4, #0
 800a1b0:	6304      	str	r4, [r0, #48]	; 0x30
}
 800a1b2:	bc70      	pop	{r4, r5, r6}
    return (UART_Start_Receive_IT(huart, pData, Size));
 800a1b4:	f7ff bfd2 	b.w	800a15c <UART_Start_Receive_IT>
      return HAL_ERROR;
 800a1b8:	2001      	movs	r0, #1
}
 800a1ba:	bc70      	pop	{r4, r5, r6}
 800a1bc:	4770      	bx	lr
    return HAL_BUSY;
 800a1be:	2002      	movs	r0, #2
 800a1c0:	e7fb      	b.n	800a1ba <HAL_UART_Receive_IT+0x28>

0800a1c2 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800a1c2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800a1c6:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800a1ca:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800a1cc:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 800a1d0:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800a1d4:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800a1d8:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 800a1dc:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800a1de:	b9a2      	cbnz	r2, 800a20a <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800a1e0:	ea43 0209 	orr.w	r2, r3, r9
 800a1e4:	432a      	orrs	r2, r5
 800a1e6:	ea42 0308 	orr.w	r3, r2, r8
 800a1ea:	6801      	ldr	r1, [r0, #0]
 800a1ec:	ea43 030e 	orr.w	r3, r3, lr
 800a1f0:	ea43 030c 	orr.w	r3, r3, ip
 800a1f4:	433b      	orrs	r3, r7
 800a1f6:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800a1fa:	4333      	orrs	r3, r6
 800a1fc:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800a200:	430b      	orrs	r3, r1
 800a202:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800a204:	2000      	movs	r0, #0
 800a206:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800a20a:	6802      	ldr	r2, [r0, #0]
 800a20c:	ea43 0309 	orr.w	r3, r3, r9
 800a210:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800a214:	4313      	orrs	r3, r2
 800a216:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800a218:	ea45 0308 	orr.w	r3, r5, r8
 800a21c:	6842      	ldr	r2, [r0, #4]
 800a21e:	ea43 030e 	orr.w	r3, r3, lr
 800a222:	ea43 030c 	orr.w	r3, r3, ip
 800a226:	433b      	orrs	r3, r7
 800a228:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 800a22c:	4333      	orrs	r3, r6
 800a22e:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800a232:	4313      	orrs	r3, r2
 800a234:	6043      	str	r3, [r0, #4]
 800a236:	e7e5      	b.n	800a204 <FMC_SDRAM_Init+0x42>

0800a238 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800a238:	68cb      	ldr	r3, [r1, #12]
 800a23a:	f103 3cff 	add.w	ip, r3, #4294967295
 800a23e:	694b      	ldr	r3, [r1, #20]
{
 800a240:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800a242:	680f      	ldr	r7, [r1, #0]
 800a244:	684c      	ldr	r4, [r1, #4]
 800a246:	688e      	ldr	r6, [r1, #8]
 800a248:	690d      	ldr	r5, [r1, #16]
 800a24a:	6989      	ldr	r1, [r1, #24]
 800a24c:	3b01      	subs	r3, #1
 800a24e:	051b      	lsls	r3, r3, #20
 800a250:	3c01      	subs	r4, #1
 800a252:	3e01      	subs	r6, #1
 800a254:	3d01      	subs	r5, #1
 800a256:	3901      	subs	r1, #1
 800a258:	3f01      	subs	r7, #1
 800a25a:	0124      	lsls	r4, r4, #4
 800a25c:	0236      	lsls	r6, r6, #8
 800a25e:	042d      	lsls	r5, r5, #16
 800a260:	0609      	lsls	r1, r1, #24
 800a262:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800a266:	b95a      	cbnz	r2, 800a280 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800a268:	433b      	orrs	r3, r7
 800a26a:	4323      	orrs	r3, r4
 800a26c:	6882      	ldr	r2, [r0, #8]
 800a26e:	4333      	orrs	r3, r6
 800a270:	432b      	orrs	r3, r5
 800a272:	430b      	orrs	r3, r1
 800a274:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800a278:	4313      	orrs	r3, r2
 800a27a:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800a27c:	2000      	movs	r0, #0
 800a27e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800a280:	6882      	ldr	r2, [r0, #8]
 800a282:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800a286:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800a28a:	431a      	orrs	r2, r3
 800a28c:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800a28e:	ea44 0306 	orr.w	r3, r4, r6
 800a292:	68c2      	ldr	r2, [r0, #12]
 800a294:	433b      	orrs	r3, r7
 800a296:	432b      	orrs	r3, r5
 800a298:	430b      	orrs	r3, r1
 800a29a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800a29e:	4313      	orrs	r3, r2
 800a2a0:	60c3      	str	r3, [r0, #12]
 800a2a2:	e7eb      	b.n	800a27c <FMC_SDRAM_Timing_Init+0x44>

0800a2a4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800a2a4:	b570      	push	{r4, r5, r6, lr}
 800a2a6:	4604      	mov	r4, r0
 800a2a8:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800a2aa:	6902      	ldr	r2, [r0, #16]
 800a2ac:	e9d1 3000 	ldrd	r3, r0, [r1]
 800a2b0:	4303      	orrs	r3, r0
 800a2b2:	68c8      	ldr	r0, [r1, #12]
 800a2b4:	0d92      	lsrs	r2, r2, #22
 800a2b6:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800a2ba:	0592      	lsls	r2, r2, #22
 800a2bc:	4313      	orrs	r3, r2
 800a2be:	688a      	ldr	r2, [r1, #8]
 800a2c0:	3a01      	subs	r2, #1
 800a2c2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800a2c6:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800a2c8:	f7fd fa66 	bl	8007798 <HAL_GetTick>
 800a2cc:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800a2ce:	69a3      	ldr	r3, [r4, #24]
 800a2d0:	f013 0320 	ands.w	r3, r3, #32
 800a2d4:	d101      	bne.n	800a2da <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800a2d6:	4618      	mov	r0, r3
 800a2d8:	e003      	b.n	800a2e2 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800a2da:	1c6b      	adds	r3, r5, #1
 800a2dc:	d0f7      	beq.n	800a2ce <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800a2de:	b90d      	cbnz	r5, 800a2e4 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 800a2e0:	2003      	movs	r0, #3
}
 800a2e2:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800a2e4:	f7fd fa58 	bl	8007798 <HAL_GetTick>
 800a2e8:	1b80      	subs	r0, r0, r6
 800a2ea:	42a8      	cmp	r0, r5
 800a2ec:	d9ef      	bls.n	800a2ce <FMC_SDRAM_SendCommand+0x2a>
 800a2ee:	e7f7      	b.n	800a2e0 <FMC_SDRAM_SendCommand+0x3c>

0800a2f0 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800a2f0:	6943      	ldr	r3, [r0, #20]
 800a2f2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800a2f6:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800a2fa:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800a2fe:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 800a300:	2000      	movs	r0, #0
 800a302:	4770      	bx	lr

0800a304 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800a304:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800a306:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a30a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800a30c:	f001 fe3c 	bl	800bf88 <xTaskGetSchedulerState>
 800a310:	2801      	cmp	r0, #1
 800a312:	d003      	beq.n	800a31c <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800a314:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800a318:	f000 bbec 	b.w	800aaf4 <xPortSysTickHandler>
}
 800a31c:	bd08      	pop	{r3, pc}
	...

0800a320 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800a320:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800a324:	b92b      	cbnz	r3, 800a332 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800a326:	4b06      	ldr	r3, [pc, #24]	; (800a340 <osKernelInitialize+0x20>)
 800a328:	6818      	ldr	r0, [r3, #0]
 800a32a:	b928      	cbnz	r0, 800a338 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800a32c:	2201      	movs	r2, #1
 800a32e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800a330:	4770      	bx	lr
    stat = osErrorISR;
 800a332:	f06f 0005 	mvn.w	r0, #5
 800a336:	4770      	bx	lr
    } else {
      stat = osError;
 800a338:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800a33c:	4770      	bx	lr
 800a33e:	bf00      	nop
 800a340:	200044d4 	.word	0x200044d4

0800a344 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800a344:	b510      	push	{r4, lr}
 800a346:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800a34a:	b95c      	cbnz	r4, 800a364 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800a34c:	4b08      	ldr	r3, [pc, #32]	; (800a370 <osKernelStart+0x2c>)
 800a34e:	681a      	ldr	r2, [r3, #0]
 800a350:	2a01      	cmp	r2, #1
 800a352:	d10a      	bne.n	800a36a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a354:	4a07      	ldr	r2, [pc, #28]	; (800a374 <osKernelStart+0x30>)
 800a356:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800a358:	2202      	movs	r2, #2
 800a35a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800a35c:	f001 fb8e 	bl	800ba7c <vTaskStartScheduler>
      stat = osOK;
 800a360:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800a362:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800a364:	f06f 0005 	mvn.w	r0, #5
 800a368:	e7fb      	b.n	800a362 <osKernelStart+0x1e>
      stat = osError;
 800a36a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800a36e:	e7f8      	b.n	800a362 <osKernelStart+0x1e>
 800a370:	200044d4 	.word	0x200044d4
 800a374:	e000ed00 	.word	0xe000ed00

0800a378 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800a378:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a37a:	b087      	sub	sp, #28
 800a37c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800a37e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800a380:	460b      	mov	r3, r1
  hTask = NULL;
 800a382:	9205      	str	r2, [sp, #20]
 800a384:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800a388:	b9d2      	cbnz	r2, 800a3c0 <osThreadNew+0x48>
 800a38a:	b1c8      	cbz	r0, 800a3c0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800a38c:	2c00      	cmp	r4, #0
 800a38e:	d02f      	beq.n	800a3f0 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800a390:	69a5      	ldr	r5, [r4, #24]
 800a392:	2d00      	cmp	r5, #0
 800a394:	bf08      	it	eq
 800a396:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800a398:	1e69      	subs	r1, r5, #1
 800a39a:	2937      	cmp	r1, #55	; 0x37
 800a39c:	46ac      	mov	ip, r5
 800a39e:	d82b      	bhi.n	800a3f8 <osThreadNew+0x80>
 800a3a0:	6861      	ldr	r1, [r4, #4]
 800a3a2:	07c9      	lsls	r1, r1, #31
 800a3a4:	d428      	bmi.n	800a3f8 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800a3a6:	6966      	ldr	r6, [r4, #20]
 800a3a8:	b16e      	cbz	r6, 800a3c6 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800a3aa:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800a3ac:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800a3b0:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800a3b2:	b157      	cbz	r7, 800a3ca <osThreadNew+0x52>
 800a3b4:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800a3b8:	d902      	bls.n	800a3c0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800a3ba:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800a3bc:	b104      	cbz	r4, 800a3c0 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800a3be:	b9ee      	cbnz	r6, 800a3fc <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800a3c0:	9805      	ldr	r0, [sp, #20]
}
 800a3c2:	b007      	add	sp, #28
 800a3c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800a3c6:	2280      	movs	r2, #128	; 0x80
 800a3c8:	e7f0      	b.n	800a3ac <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800a3ca:	f1be 0f00 	cmp.w	lr, #0
 800a3ce:	d1f7      	bne.n	800a3c0 <osThreadNew+0x48>
      if (mem == 0) {
 800a3d0:	6924      	ldr	r4, [r4, #16]
 800a3d2:	2c00      	cmp	r4, #0
 800a3d4:	d1f4      	bne.n	800a3c0 <osThreadNew+0x48>
 800a3d6:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800a3d8:	a905      	add	r1, sp, #20
 800a3da:	e9cd c100 	strd	ip, r1, [sp]
 800a3de:	b292      	uxth	r2, r2
 800a3e0:	4621      	mov	r1, r4
 800a3e2:	f001 fb1e 	bl	800ba22 <xTaskCreate>
 800a3e6:	2801      	cmp	r0, #1
            hTask = NULL;
 800a3e8:	bf1c      	itt	ne
 800a3ea:	2300      	movne	r3, #0
 800a3ec:	9305      	strne	r3, [sp, #20]
 800a3ee:	e7e7      	b.n	800a3c0 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800a3f0:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800a3f4:	2280      	movs	r2, #128	; 0x80
 800a3f6:	e7ef      	b.n	800a3d8 <osThreadNew+0x60>
        return (NULL);
 800a3f8:	4610      	mov	r0, r2
 800a3fa:	e7e2      	b.n	800a3c2 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800a3fc:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800a400:	9500      	str	r5, [sp, #0]
 800a402:	f001 fad6 	bl	800b9b2 <xTaskCreateStatic>
 800a406:	9005      	str	r0, [sp, #20]
 800a408:	e7da      	b.n	800a3c0 <osThreadNew+0x48>

0800a40a <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800a40a:	b510      	push	{r4, lr}
 800a40c:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800a410:	b924      	cbnz	r4, 800a41c <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800a412:	b110      	cbz	r0, 800a41a <osDelay+0x10>
      vTaskDelay(ticks);
 800a414:	f001 fc90 	bl	800bd38 <vTaskDelay>
    stat = osOK;
 800a418:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800a41a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800a41c:	f06f 0005 	mvn.w	r0, #5
 800a420:	e7fb      	b.n	800a41a <osDelay+0x10>

0800a422 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800a422:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a424:	4604      	mov	r4, r0
 800a426:	460e      	mov	r6, r1
 800a428:	4615      	mov	r5, r2
 800a42a:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800a42e:	b11a      	cbz	r2, 800a438 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800a430:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800a432:	4620      	mov	r0, r4
 800a434:	b003      	add	sp, #12
 800a436:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800a438:	2800      	cmp	r0, #0
 800a43a:	d0f9      	beq.n	800a430 <osSemaphoreNew+0xe>
 800a43c:	4288      	cmp	r0, r1
 800a43e:	d3f7      	bcc.n	800a430 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800a440:	b1e5      	cbz	r5, 800a47c <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800a442:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800a446:	b1bb      	cbz	r3, 800a478 <osSemaphoreNew+0x56>
 800a448:	2f4f      	cmp	r7, #79	; 0x4f
 800a44a:	d9f1      	bls.n	800a430 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800a44c:	2801      	cmp	r0, #1
 800a44e:	d12a      	bne.n	800a4a6 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800a450:	2103      	movs	r1, #3
 800a452:	9100      	str	r1, [sp, #0]
 800a454:	4611      	mov	r1, r2
 800a456:	f000 fcf6 	bl	800ae46 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800a45a:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800a45c:	2800      	cmp	r0, #0
 800a45e:	d0e7      	beq.n	800a430 <osSemaphoreNew+0xe>
 800a460:	b1de      	cbz	r6, 800a49a <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800a462:	2300      	movs	r3, #0
 800a464:	461a      	mov	r2, r3
 800a466:	4619      	mov	r1, r3
 800a468:	f000 fda2 	bl	800afb0 <xQueueGenericSend>
 800a46c:	2801      	cmp	r0, #1
 800a46e:	d014      	beq.n	800a49a <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800a470:	4620      	mov	r0, r4
 800a472:	f001 f8ff 	bl	800b674 <vQueueDelete>
 800a476:	e7db      	b.n	800a430 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800a478:	2f00      	cmp	r7, #0
 800a47a:	d1d9      	bne.n	800a430 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800a47c:	2c01      	cmp	r4, #1
 800a47e:	d105      	bne.n	800a48c <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800a480:	2203      	movs	r2, #3
 800a482:	2100      	movs	r1, #0
 800a484:	4620      	mov	r0, r4
 800a486:	f000 fd2c 	bl	800aee2 <xQueueGenericCreate>
 800a48a:	e7e6      	b.n	800a45a <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800a48c:	4620      	mov	r0, r4
 800a48e:	4631      	mov	r1, r6
 800a490:	f000 fd70 	bl	800af74 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800a494:	4604      	mov	r4, r0
 800a496:	2800      	cmp	r0, #0
 800a498:	d0ca      	beq.n	800a430 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800a49a:	b955      	cbnz	r5, 800a4b2 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800a49c:	4629      	mov	r1, r5
 800a49e:	4620      	mov	r0, r4
 800a4a0:	f001 f8c2 	bl	800b628 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800a4a4:	e7c5      	b.n	800a432 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800a4a6:	461a      	mov	r2, r3
 800a4a8:	f000 fd42 	bl	800af30 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800a4ac:	4604      	mov	r4, r0
 800a4ae:	2800      	cmp	r0, #0
 800a4b0:	d0be      	beq.n	800a430 <osSemaphoreNew+0xe>
          name = attr->name;
 800a4b2:	682d      	ldr	r5, [r5, #0]
 800a4b4:	e7f2      	b.n	800a49c <osSemaphoreNew+0x7a>

0800a4b6 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800a4b6:	b513      	push	{r0, r1, r4, lr}
 800a4b8:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800a4ba:	b308      	cbz	r0, 800a500 <osSemaphoreAcquire+0x4a>
 800a4bc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800a4c0:	b1b3      	cbz	r3, 800a4f0 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 800a4c2:	b9e9      	cbnz	r1, 800a500 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800a4c4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800a4c6:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800a4c8:	f001 f83d 	bl	800b546 <xQueueReceiveFromISR>
 800a4cc:	2801      	cmp	r0, #1
 800a4ce:	d114      	bne.n	800a4fa <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800a4d0:	9b01      	ldr	r3, [sp, #4]
 800a4d2:	b913      	cbnz	r3, 800a4da <osSemaphoreAcquire+0x24>
  stat = osOK;
 800a4d4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800a4d6:	b002      	add	sp, #8
 800a4d8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800a4da:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a4de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a4e2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a4e6:	f3bf 8f4f 	dsb	sy
 800a4ea:	f3bf 8f6f 	isb	sy
 800a4ee:	e7f1      	b.n	800a4d4 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800a4f0:	f000 ff66 	bl	800b3c0 <xQueueSemaphoreTake>
 800a4f4:	2801      	cmp	r0, #1
 800a4f6:	d0ed      	beq.n	800a4d4 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800a4f8:	b92c      	cbnz	r4, 800a506 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 800a4fa:	f06f 0002 	mvn.w	r0, #2
 800a4fe:	e7ea      	b.n	800a4d6 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800a500:	f06f 0003 	mvn.w	r0, #3
 800a504:	e7e7      	b.n	800a4d6 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800a506:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800a50a:	e7e4      	b.n	800a4d6 <osSemaphoreAcquire+0x20>

0800a50c <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800a50c:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800a50e:	b310      	cbz	r0, 800a556 <osSemaphoreRelease+0x4a>
 800a510:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800a514:	b1b3      	cbz	r3, 800a544 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800a516:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800a518:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800a51a:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800a51c:	f000 fe5d 	bl	800b1da <xQueueGiveFromISR>
 800a520:	2801      	cmp	r0, #1
 800a522:	d115      	bne.n	800a550 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800a524:	9b01      	ldr	r3, [sp, #4]
 800a526:	b913      	cbnz	r3, 800a52e <osSemaphoreRelease+0x22>
  stat = osOK;
 800a528:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800a52a:	b002      	add	sp, #8
 800a52c:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800a52e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a532:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a536:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a53a:	f3bf 8f4f 	dsb	sy
 800a53e:	f3bf 8f6f 	isb	sy
 800a542:	e7f1      	b.n	800a528 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800a544:	461a      	mov	r2, r3
 800a546:	4619      	mov	r1, r3
 800a548:	f000 fd32 	bl	800afb0 <xQueueGenericSend>
 800a54c:	2801      	cmp	r0, #1
 800a54e:	d0eb      	beq.n	800a528 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800a550:	f06f 0002 	mvn.w	r0, #2
 800a554:	e7e9      	b.n	800a52a <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800a556:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800a55a:	e7e6      	b.n	800a52a <osSemaphoreRelease+0x1e>

0800a55c <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
 800a55c:	b130      	cbz	r0, 800a56c <osSemaphoreGetCount+0x10>
 800a55e:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
 800a562:	b10b      	cbz	r3, 800a568 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
 800a564:	f001 b853 	b.w	800b60e <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
 800a568:	f001 b83c 	b.w	800b5e4 <uxQueueMessagesWaiting>
  }

  return (count);
}
 800a56c:	4770      	bx	lr

0800a56e <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800a56e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a570:	4605      	mov	r5, r0
 800a572:	460e      	mov	r6, r1
 800a574:	4614      	mov	r4, r2
 800a576:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800a57a:	b11f      	cbz	r7, 800a584 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800a57c:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800a57e:	4628      	mov	r0, r5
 800a580:	b003      	add	sp, #12
 800a582:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800a584:	2800      	cmp	r0, #0
 800a586:	d0f9      	beq.n	800a57c <osMessageQueueNew+0xe>
 800a588:	2900      	cmp	r1, #0
 800a58a:	d0f7      	beq.n	800a57c <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800a58c:	b1da      	cbz	r2, 800a5c6 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800a58e:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800a592:	b183      	cbz	r3, 800a5b6 <osMessageQueueNew+0x48>
 800a594:	2a4f      	cmp	r2, #79	; 0x4f
 800a596:	d9f1      	bls.n	800a57c <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800a598:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800a59a:	2a00      	cmp	r2, #0
 800a59c:	d0ee      	beq.n	800a57c <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800a59e:	6966      	ldr	r6, [r4, #20]
 800a5a0:	434d      	muls	r5, r1
 800a5a2:	42ae      	cmp	r6, r5
 800a5a4:	d3ea      	bcc.n	800a57c <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800a5a6:	9700      	str	r7, [sp, #0]
 800a5a8:	f000 fc4d 	bl	800ae46 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800a5ac:	4605      	mov	r5, r0
 800a5ae:	2800      	cmp	r0, #0
 800a5b0:	d0e4      	beq.n	800a57c <osMessageQueueNew+0xe>
        name = attr->name;
 800a5b2:	6824      	ldr	r4, [r4, #0]
 800a5b4:	e011      	b.n	800a5da <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800a5b6:	2a00      	cmp	r2, #0
 800a5b8:	d1e0      	bne.n	800a57c <osMessageQueueNew+0xe>
 800a5ba:	6923      	ldr	r3, [r4, #16]
 800a5bc:	2b00      	cmp	r3, #0
 800a5be:	d1dd      	bne.n	800a57c <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800a5c0:	6963      	ldr	r3, [r4, #20]
 800a5c2:	2b00      	cmp	r3, #0
 800a5c4:	d1da      	bne.n	800a57c <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800a5c6:	4628      	mov	r0, r5
 800a5c8:	2200      	movs	r2, #0
 800a5ca:	4631      	mov	r1, r6
 800a5cc:	f000 fc89 	bl	800aee2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800a5d0:	4605      	mov	r5, r0
 800a5d2:	2800      	cmp	r0, #0
 800a5d4:	d0d2      	beq.n	800a57c <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800a5d6:	2c00      	cmp	r4, #0
 800a5d8:	d1eb      	bne.n	800a5b2 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800a5da:	4621      	mov	r1, r4
 800a5dc:	4628      	mov	r0, r5
 800a5de:	f001 f823 	bl	800b628 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800a5e2:	e7cc      	b.n	800a57e <osMessageQueueNew+0x10>

0800a5e4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800a5e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a5e6:	461c      	mov	r4, r3
 800a5e8:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800a5ec:	b1c6      	cbz	r6, 800a620 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800a5ee:	b318      	cbz	r0, 800a638 <osMessageQueuePut+0x54>
 800a5f0:	b311      	cbz	r1, 800a638 <osMessageQueuePut+0x54>
 800a5f2:	bb0b      	cbnz	r3, 800a638 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800a5f4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800a5f6:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800a5f8:	f000 fd8d 	bl	800b116 <xQueueGenericSendFromISR>
 800a5fc:	2801      	cmp	r0, #1
 800a5fe:	d118      	bne.n	800a632 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800a600:	9b01      	ldr	r3, [sp, #4]
 800a602:	b913      	cbnz	r3, 800a60a <osMessageQueuePut+0x26>
  stat = osOK;
 800a604:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800a606:	b002      	add	sp, #8
 800a608:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800a60a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a60e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a612:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a616:	f3bf 8f4f 	dsb	sy
 800a61a:	f3bf 8f6f 	isb	sy
 800a61e:	e7f1      	b.n	800a604 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800a620:	b150      	cbz	r0, 800a638 <osMessageQueuePut+0x54>
 800a622:	b149      	cbz	r1, 800a638 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800a624:	4633      	mov	r3, r6
 800a626:	4622      	mov	r2, r4
 800a628:	f000 fcc2 	bl	800afb0 <xQueueGenericSend>
 800a62c:	2801      	cmp	r0, #1
 800a62e:	d0e9      	beq.n	800a604 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800a630:	b92c      	cbnz	r4, 800a63e <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800a632:	f06f 0002 	mvn.w	r0, #2
 800a636:	e7e6      	b.n	800a606 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800a638:	f06f 0003 	mvn.w	r0, #3
 800a63c:	e7e3      	b.n	800a606 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800a63e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800a642:	e7e0      	b.n	800a606 <osMessageQueuePut+0x22>

0800a644 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800a644:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a646:	461c      	mov	r4, r3
 800a648:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800a64c:	b1c3      	cbz	r3, 800a680 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800a64e:	b310      	cbz	r0, 800a696 <osMessageQueueGet+0x52>
 800a650:	b309      	cbz	r1, 800a696 <osMessageQueueGet+0x52>
 800a652:	bb04      	cbnz	r4, 800a696 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800a654:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800a656:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800a658:	f000 ff75 	bl	800b546 <xQueueReceiveFromISR>
 800a65c:	2801      	cmp	r0, #1
 800a65e:	d117      	bne.n	800a690 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800a660:	9b01      	ldr	r3, [sp, #4]
 800a662:	b913      	cbnz	r3, 800a66a <osMessageQueueGet+0x26>
  stat = osOK;
 800a664:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800a666:	b003      	add	sp, #12
 800a668:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800a66a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a66e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a672:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a676:	f3bf 8f4f 	dsb	sy
 800a67a:	f3bf 8f6f 	isb	sy
 800a67e:	e7f1      	b.n	800a664 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800a680:	b148      	cbz	r0, 800a696 <osMessageQueueGet+0x52>
 800a682:	b141      	cbz	r1, 800a696 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800a684:	4622      	mov	r2, r4
 800a686:	f000 fdfc 	bl	800b282 <xQueueReceive>
 800a68a:	2801      	cmp	r0, #1
 800a68c:	d0ea      	beq.n	800a664 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800a68e:	b92c      	cbnz	r4, 800a69c <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800a690:	f06f 0002 	mvn.w	r0, #2
 800a694:	e7e7      	b.n	800a666 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800a696:	f06f 0003 	mvn.w	r0, #3
 800a69a:	e7e4      	b.n	800a666 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800a69c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800a6a0:	e7e1      	b.n	800a666 <osMessageQueueGet+0x22>

0800a6a2 <osMessageQueueGetCount>:
 800a6a2:	f7ff bf5b 	b.w	800a55c <osSemaphoreGetCount>
	...

0800a6a8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800a6a8:	4b03      	ldr	r3, [pc, #12]	; (800a6b8 <vApplicationGetIdleTaskMemory+0x10>)
 800a6aa:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800a6ac:	4b03      	ldr	r3, [pc, #12]	; (800a6bc <vApplicationGetIdleTaskMemory+0x14>)
 800a6ae:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800a6b0:	2380      	movs	r3, #128	; 0x80
 800a6b2:	6013      	str	r3, [r2, #0]
}
 800a6b4:	4770      	bx	lr
 800a6b6:	bf00      	nop
 800a6b8:	20004474 	.word	0x20004474
 800a6bc:	20004274 	.word	0x20004274

0800a6c0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800a6c0:	4b03      	ldr	r3, [pc, #12]	; (800a6d0 <vApplicationGetTimerTaskMemory+0x10>)
 800a6c2:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800a6c4:	4b03      	ldr	r3, [pc, #12]	; (800a6d4 <vApplicationGetTimerTaskMemory+0x14>)
 800a6c6:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800a6c8:	f44f 7380 	mov.w	r3, #256	; 0x100
 800a6cc:	6013      	str	r3, [r2, #0]
}
 800a6ce:	4770      	bx	lr
 800a6d0:	200048d8 	.word	0x200048d8
 800a6d4:	200044d8 	.word	0x200044d8

0800a6d8 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800a6d8:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800a6da:	4b0f      	ldr	r3, [pc, #60]	; (800a718 <prvInsertBlockIntoFreeList+0x40>)
 800a6dc:	461a      	mov	r2, r3
 800a6de:	681b      	ldr	r3, [r3, #0]
 800a6e0:	4283      	cmp	r3, r0
 800a6e2:	d3fb      	bcc.n	800a6dc <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800a6e4:	6854      	ldr	r4, [r2, #4]
 800a6e6:	1911      	adds	r1, r2, r4
 800a6e8:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800a6ea:	bf01      	itttt	eq
 800a6ec:	6841      	ldreq	r1, [r0, #4]
 800a6ee:	4610      	moveq	r0, r2
 800a6f0:	1909      	addeq	r1, r1, r4
 800a6f2:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800a6f4:	6844      	ldr	r4, [r0, #4]
 800a6f6:	1901      	adds	r1, r0, r4
 800a6f8:	428b      	cmp	r3, r1
 800a6fa:	d107      	bne.n	800a70c <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800a6fc:	4907      	ldr	r1, [pc, #28]	; (800a71c <prvInsertBlockIntoFreeList+0x44>)
 800a6fe:	6809      	ldr	r1, [r1, #0]
 800a700:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a702:	bf1f      	itttt	ne
 800a704:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800a706:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800a708:	1909      	addne	r1, r1, r4
 800a70a:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800a70c:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800a70e:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800a710:	bf18      	it	ne
 800a712:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800a714:	bd10      	pop	{r4, pc}
 800a716:	bf00      	nop
 800a718:	20014950 	.word	0x20014950
 800a71c:	20004938 	.word	0x20004938

0800a720 <pvPortMalloc>:
{
 800a720:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a724:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800a726:	f001 f9ef 	bl	800bb08 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800a72a:	4842      	ldr	r0, [pc, #264]	; (800a834 <pvPortMalloc+0x114>)
 800a72c:	4d42      	ldr	r5, [pc, #264]	; (800a838 <pvPortMalloc+0x118>)
 800a72e:	6803      	ldr	r3, [r0, #0]
 800a730:	bb0b      	cbnz	r3, 800a776 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800a732:	4942      	ldr	r1, [pc, #264]	; (800a83c <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800a734:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800a736:	bf1f      	itttt	ne
 800a738:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a73a:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800a73e:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800a742:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a744:	bf14      	ite	ne
 800a746:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800a748:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800a74c:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a74e:	4e3c      	ldr	r6, [pc, #240]	; (800a840 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800a750:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800a752:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800a756:	2300      	movs	r3, #0
 800a758:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800a75a:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800a75c:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800a760:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800a762:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800a766:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a768:	4a36      	ldr	r2, [pc, #216]	; (800a844 <pvPortMalloc+0x124>)
 800a76a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800a76c:	4a36      	ldr	r2, [pc, #216]	; (800a848 <pvPortMalloc+0x128>)
 800a76e:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800a770:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800a774:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800a776:	682f      	ldr	r7, [r5, #0]
 800a778:	4227      	tst	r7, r4
 800a77a:	d155      	bne.n	800a828 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800a77c:	2c00      	cmp	r4, #0
 800a77e:	d046      	beq.n	800a80e <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800a780:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800a784:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800a786:	bf1c      	itt	ne
 800a788:	f023 0307 	bicne.w	r3, r3, #7
 800a78c:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800a78e:	2b00      	cmp	r3, #0
 800a790:	d04a      	beq.n	800a828 <pvPortMalloc+0x108>
 800a792:	4c2d      	ldr	r4, [pc, #180]	; (800a848 <pvPortMalloc+0x128>)
 800a794:	6826      	ldr	r6, [r4, #0]
 800a796:	429e      	cmp	r6, r3
 800a798:	d346      	bcc.n	800a828 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800a79a:	4a29      	ldr	r2, [pc, #164]	; (800a840 <pvPortMalloc+0x120>)
 800a79c:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800a79e:	6869      	ldr	r1, [r5, #4]
 800a7a0:	4299      	cmp	r1, r3
 800a7a2:	d204      	bcs.n	800a7ae <pvPortMalloc+0x8e>
 800a7a4:	f8d5 c000 	ldr.w	ip, [r5]
 800a7a8:	f1bc 0f00 	cmp.w	ip, #0
 800a7ac:	d115      	bne.n	800a7da <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800a7ae:	6800      	ldr	r0, [r0, #0]
 800a7b0:	42a8      	cmp	r0, r5
 800a7b2:	d039      	beq.n	800a828 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a7b4:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a7b6:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a7b8:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800a7bc:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800a7be:	2910      	cmp	r1, #16
 800a7c0:	d912      	bls.n	800a7e8 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800a7c2:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800a7c4:	0742      	lsls	r2, r0, #29
 800a7c6:	d00b      	beq.n	800a7e0 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800a7c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7cc:	f383 8811 	msr	BASEPRI, r3
 800a7d0:	f3bf 8f6f 	isb	sy
 800a7d4:	f3bf 8f4f 	dsb	sy
 800a7d8:	e7fe      	b.n	800a7d8 <pvPortMalloc+0xb8>
 800a7da:	462a      	mov	r2, r5
 800a7dc:	4665      	mov	r5, ip
 800a7de:	e7de      	b.n	800a79e <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800a7e0:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800a7e2:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800a7e4:	f7ff ff78 	bl	800a6d8 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a7e8:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a7ea:	4916      	ldr	r1, [pc, #88]	; (800a844 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 800a7ec:	4a17      	ldr	r2, [pc, #92]	; (800a84c <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a7ee:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a7f0:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a7f2:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800a7f4:	2300      	movs	r3, #0
 800a7f6:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800a7f8:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800a7fa:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800a7fc:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800a7fe:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800a802:	bf38      	it	cc
 800a804:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800a806:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800a80a:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800a80c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800a80e:	f001 fa1f 	bl	800bc50 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800a812:	0763      	lsls	r3, r4, #29
 800a814:	d00a      	beq.n	800a82c <pvPortMalloc+0x10c>
 800a816:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a81a:	f383 8811 	msr	BASEPRI, r3
 800a81e:	f3bf 8f6f 	isb	sy
 800a822:	f3bf 8f4f 	dsb	sy
 800a826:	e7fe      	b.n	800a826 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800a828:	2400      	movs	r4, #0
 800a82a:	e7f0      	b.n	800a80e <pvPortMalloc+0xee>
}
 800a82c:	4620      	mov	r0, r4
 800a82e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a832:	bf00      	nop
 800a834:	20004938 	.word	0x20004938
 800a838:	2001493c 	.word	0x2001493c
 800a83c:	2000493c 	.word	0x2000493c
 800a840:	20014950 	.word	0x20014950
 800a844:	20014944 	.word	0x20014944
 800a848:	20014940 	.word	0x20014940
 800a84c:	20014948 	.word	0x20014948

0800a850 <vPortFree>:
{
 800a850:	b510      	push	{r4, lr}
	if( pv != NULL )
 800a852:	4604      	mov	r4, r0
 800a854:	b390      	cbz	r0, 800a8bc <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800a856:	4a1a      	ldr	r2, [pc, #104]	; (800a8c0 <vPortFree+0x70>)
 800a858:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800a85c:	6812      	ldr	r2, [r2, #0]
 800a85e:	4213      	tst	r3, r2
 800a860:	d108      	bne.n	800a874 <vPortFree+0x24>
 800a862:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a866:	f383 8811 	msr	BASEPRI, r3
 800a86a:	f3bf 8f6f 	isb	sy
 800a86e:	f3bf 8f4f 	dsb	sy
 800a872:	e7fe      	b.n	800a872 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800a874:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800a878:	b141      	cbz	r1, 800a88c <vPortFree+0x3c>
 800a87a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a87e:	f383 8811 	msr	BASEPRI, r3
 800a882:	f3bf 8f6f 	isb	sy
 800a886:	f3bf 8f4f 	dsb	sy
 800a88a:	e7fe      	b.n	800a88a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800a88c:	ea23 0302 	bic.w	r3, r3, r2
 800a890:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800a894:	f001 f938 	bl	800bb08 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a898:	4a0a      	ldr	r2, [pc, #40]	; (800a8c4 <vPortFree+0x74>)
 800a89a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a89e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a8a0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800a8a4:	440b      	add	r3, r1
 800a8a6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800a8a8:	f7ff ff16 	bl	800a6d8 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800a8ac:	4a06      	ldr	r2, [pc, #24]	; (800a8c8 <vPortFree+0x78>)
 800a8ae:	6813      	ldr	r3, [r2, #0]
}
 800a8b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800a8b4:	3301      	adds	r3, #1
 800a8b6:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800a8b8:	f001 b9ca 	b.w	800bc50 <xTaskResumeAll>
}
 800a8bc:	bd10      	pop	{r4, pc}
 800a8be:	bf00      	nop
 800a8c0:	2001493c 	.word	0x2001493c
 800a8c4:	20014940 	.word	0x20014940
 800a8c8:	2001494c 	.word	0x2001494c

0800a8cc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a8cc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800a8d0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a8d4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a8d8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800a8da:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800a8dc:	2300      	movs	r3, #0
 800a8de:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800a8e0:	4770      	bx	lr

0800a8e2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800a8e2:	2300      	movs	r3, #0
 800a8e4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800a8e6:	4770      	bx	lr

0800a8e8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800a8e8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800a8ea:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800a8ec:	689a      	ldr	r2, [r3, #8]
 800a8ee:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800a8f0:	689a      	ldr	r2, [r3, #8]
 800a8f2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800a8f4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a8f6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a8f8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a8fa:	3301      	adds	r3, #1
 800a8fc:	6003      	str	r3, [r0, #0]
}
 800a8fe:	4770      	bx	lr

0800a900 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800a900:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800a902:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800a904:	1c63      	adds	r3, r4, #1
 800a906:	d10a      	bne.n	800a91e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800a908:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800a90a:	685a      	ldr	r2, [r3, #4]
 800a90c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800a90e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800a910:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800a912:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800a914:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800a916:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800a918:	3301      	adds	r3, #1
 800a91a:	6003      	str	r3, [r0, #0]
}
 800a91c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800a91e:	f100 0208 	add.w	r2, r0, #8
 800a922:	4613      	mov	r3, r2
 800a924:	6852      	ldr	r2, [r2, #4]
 800a926:	6815      	ldr	r5, [r2, #0]
 800a928:	42a5      	cmp	r5, r4
 800a92a:	d9fa      	bls.n	800a922 <vListInsert+0x22>
 800a92c:	e7ed      	b.n	800a90a <vListInsert+0xa>

0800a92e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a92e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800a932:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800a934:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800a936:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800a938:	6859      	ldr	r1, [r3, #4]
 800a93a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800a93c:	bf08      	it	eq
 800a93e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800a940:	2200      	movs	r2, #0
 800a942:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800a944:	681a      	ldr	r2, [r3, #0]
 800a946:	3a01      	subs	r2, #1
 800a948:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800a94a:	6818      	ldr	r0, [r3, #0]
}
 800a94c:	4770      	bx	lr
	...

0800a950 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800a950:	4808      	ldr	r0, [pc, #32]	; (800a974 <prvPortStartFirstTask+0x24>)
 800a952:	6800      	ldr	r0, [r0, #0]
 800a954:	6800      	ldr	r0, [r0, #0]
 800a956:	f380 8808 	msr	MSP, r0
 800a95a:	f04f 0000 	mov.w	r0, #0
 800a95e:	f380 8814 	msr	CONTROL, r0
 800a962:	b662      	cpsie	i
 800a964:	b661      	cpsie	f
 800a966:	f3bf 8f4f 	dsb	sy
 800a96a:	f3bf 8f6f 	isb	sy
 800a96e:	df00      	svc	0
 800a970:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800a972:	0000      	.short	0x0000
 800a974:	e000ed08 	.word	0xe000ed08

0800a978 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800a978:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800a988 <vPortEnableVFP+0x10>
 800a97c:	6801      	ldr	r1, [r0, #0]
 800a97e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800a982:	6001      	str	r1, [r0, #0]
 800a984:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800a986:	0000      	.short	0x0000
 800a988:	e000ed88 	.word	0xe000ed88

0800a98c <prvTaskExitError>:
{
 800a98c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800a98e:	2300      	movs	r3, #0
 800a990:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800a992:	4b0d      	ldr	r3, [pc, #52]	; (800a9c8 <prvTaskExitError+0x3c>)
 800a994:	681b      	ldr	r3, [r3, #0]
 800a996:	3301      	adds	r3, #1
 800a998:	d008      	beq.n	800a9ac <prvTaskExitError+0x20>
 800a99a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a99e:	f383 8811 	msr	BASEPRI, r3
 800a9a2:	f3bf 8f6f 	isb	sy
 800a9a6:	f3bf 8f4f 	dsb	sy
 800a9aa:	e7fe      	b.n	800a9aa <prvTaskExitError+0x1e>
 800a9ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9b0:	f383 8811 	msr	BASEPRI, r3
 800a9b4:	f3bf 8f6f 	isb	sy
 800a9b8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800a9bc:	9b01      	ldr	r3, [sp, #4]
 800a9be:	2b00      	cmp	r3, #0
 800a9c0:	d0fc      	beq.n	800a9bc <prvTaskExitError+0x30>
}
 800a9c2:	b002      	add	sp, #8
 800a9c4:	4770      	bx	lr
 800a9c6:	bf00      	nop
 800a9c8:	20000080 	.word	0x20000080

0800a9cc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800a9cc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800a9d0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800a9d4:	4b07      	ldr	r3, [pc, #28]	; (800a9f4 <pxPortInitialiseStack+0x28>)
 800a9d6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a9da:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a9de:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800a9e2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800a9e6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800a9ea:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800a9ee:	3844      	subs	r0, #68	; 0x44
 800a9f0:	4770      	bx	lr
 800a9f2:	bf00      	nop
 800a9f4:	0800a98d 	.word	0x0800a98d
	...

0800aa00 <SVC_Handler>:
	__asm volatile (
 800aa00:	4b07      	ldr	r3, [pc, #28]	; (800aa20 <pxCurrentTCBConst2>)
 800aa02:	6819      	ldr	r1, [r3, #0]
 800aa04:	6808      	ldr	r0, [r1, #0]
 800aa06:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa0a:	f380 8809 	msr	PSP, r0
 800aa0e:	f3bf 8f6f 	isb	sy
 800aa12:	f04f 0000 	mov.w	r0, #0
 800aa16:	f380 8811 	msr	BASEPRI, r0
 800aa1a:	4770      	bx	lr
 800aa1c:	f3af 8000 	nop.w

0800aa20 <pxCurrentTCBConst2>:
 800aa20:	200149a0 	.word	0x200149a0

0800aa24 <vPortEnterCritical>:
 800aa24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa28:	f383 8811 	msr	BASEPRI, r3
 800aa2c:	f3bf 8f6f 	isb	sy
 800aa30:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800aa34:	4a0a      	ldr	r2, [pc, #40]	; (800aa60 <vPortEnterCritical+0x3c>)
 800aa36:	6813      	ldr	r3, [r2, #0]
 800aa38:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800aa3a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800aa3c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800aa3e:	d10e      	bne.n	800aa5e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800aa40:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800aa44:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800aa48:	b2db      	uxtb	r3, r3
 800aa4a:	b143      	cbz	r3, 800aa5e <vPortEnterCritical+0x3a>
 800aa4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa50:	f383 8811 	msr	BASEPRI, r3
 800aa54:	f3bf 8f6f 	isb	sy
 800aa58:	f3bf 8f4f 	dsb	sy
 800aa5c:	e7fe      	b.n	800aa5c <vPortEnterCritical+0x38>
}
 800aa5e:	4770      	bx	lr
 800aa60:	20000080 	.word	0x20000080

0800aa64 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800aa64:	4a08      	ldr	r2, [pc, #32]	; (800aa88 <vPortExitCritical+0x24>)
 800aa66:	6813      	ldr	r3, [r2, #0]
 800aa68:	b943      	cbnz	r3, 800aa7c <vPortExitCritical+0x18>
 800aa6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa6e:	f383 8811 	msr	BASEPRI, r3
 800aa72:	f3bf 8f6f 	isb	sy
 800aa76:	f3bf 8f4f 	dsb	sy
 800aa7a:	e7fe      	b.n	800aa7a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800aa7c:	3b01      	subs	r3, #1
 800aa7e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800aa80:	b90b      	cbnz	r3, 800aa86 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800aa82:	f383 8811 	msr	BASEPRI, r3
}
 800aa86:	4770      	bx	lr
 800aa88:	20000080 	.word	0x20000080
 800aa8c:	00000000 	.word	0x00000000

0800aa90 <PendSV_Handler>:
	__asm volatile
 800aa90:	f3ef 8009 	mrs	r0, PSP
 800aa94:	f3bf 8f6f 	isb	sy
 800aa98:	4b15      	ldr	r3, [pc, #84]	; (800aaf0 <pxCurrentTCBConst>)
 800aa9a:	681a      	ldr	r2, [r3, #0]
 800aa9c:	f01e 0f10 	tst.w	lr, #16
 800aaa0:	bf08      	it	eq
 800aaa2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800aaa6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aaaa:	6010      	str	r0, [r2, #0]
 800aaac:	e92d 0009 	stmdb	sp!, {r0, r3}
 800aab0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800aab4:	f380 8811 	msr	BASEPRI, r0
 800aab8:	f3bf 8f4f 	dsb	sy
 800aabc:	f3bf 8f6f 	isb	sy
 800aac0:	f001 f95e 	bl	800bd80 <vTaskSwitchContext>
 800aac4:	f04f 0000 	mov.w	r0, #0
 800aac8:	f380 8811 	msr	BASEPRI, r0
 800aacc:	bc09      	pop	{r0, r3}
 800aace:	6819      	ldr	r1, [r3, #0]
 800aad0:	6808      	ldr	r0, [r1, #0]
 800aad2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aad6:	f01e 0f10 	tst.w	lr, #16
 800aada:	bf08      	it	eq
 800aadc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800aae0:	f380 8809 	msr	PSP, r0
 800aae4:	f3bf 8f6f 	isb	sy
 800aae8:	4770      	bx	lr
 800aaea:	bf00      	nop
 800aaec:	f3af 8000 	nop.w

0800aaf0 <pxCurrentTCBConst>:
 800aaf0:	200149a0 	.word	0x200149a0

0800aaf4 <xPortSysTickHandler>:
{
 800aaf4:	b508      	push	{r3, lr}
	__asm volatile
 800aaf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aafa:	f383 8811 	msr	BASEPRI, r3
 800aafe:	f3bf 8f6f 	isb	sy
 800ab02:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800ab06:	f001 f80d 	bl	800bb24 <xTaskIncrementTick>
 800ab0a:	b128      	cbz	r0, 800ab18 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800ab0c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ab10:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ab14:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800ab18:	2300      	movs	r3, #0
 800ab1a:	f383 8811 	msr	BASEPRI, r3
}
 800ab1e:	bd08      	pop	{r3, pc}

0800ab20 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ab20:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800ab24:	2300      	movs	r3, #0
 800ab26:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800ab28:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ab2a:	4b05      	ldr	r3, [pc, #20]	; (800ab40 <vPortSetupTimerInterrupt+0x20>)
 800ab2c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ab30:	681b      	ldr	r3, [r3, #0]
 800ab32:	fbb3 f3f1 	udiv	r3, r3, r1
 800ab36:	3b01      	subs	r3, #1
 800ab38:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ab3a:	2307      	movs	r3, #7
 800ab3c:	6113      	str	r3, [r2, #16]
}
 800ab3e:	4770      	bx	lr
 800ab40:	20000074 	.word	0x20000074

0800ab44 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ab44:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800ab48:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ab4a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800ab4e:	4a3a      	ldr	r2, [pc, #232]	; (800ac38 <xPortStartScheduler+0xf4>)
 800ab50:	4291      	cmp	r1, r2
 800ab52:	d108      	bne.n	800ab66 <xPortStartScheduler+0x22>
	__asm volatile
 800ab54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab58:	f383 8811 	msr	BASEPRI, r3
 800ab5c:	f3bf 8f6f 	isb	sy
 800ab60:	f3bf 8f4f 	dsb	sy
 800ab64:	e7fe      	b.n	800ab64 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800ab66:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800ab6a:	4b34      	ldr	r3, [pc, #208]	; (800ac3c <xPortStartScheduler+0xf8>)
 800ab6c:	429a      	cmp	r2, r3
 800ab6e:	d108      	bne.n	800ab82 <xPortStartScheduler+0x3e>
 800ab70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab74:	f383 8811 	msr	BASEPRI, r3
 800ab78:	f3bf 8f6f 	isb	sy
 800ab7c:	f3bf 8f4f 	dsb	sy
 800ab80:	e7fe      	b.n	800ab80 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ab82:	4b2f      	ldr	r3, [pc, #188]	; (800ac40 <xPortStartScheduler+0xfc>)
 800ab84:	781a      	ldrb	r2, [r3, #0]
 800ab86:	b2d2      	uxtb	r2, r2
 800ab88:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800ab8a:	22ff      	movs	r2, #255	; 0xff
 800ab8c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800ab8e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ab90:	4a2c      	ldr	r2, [pc, #176]	; (800ac44 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800ab92:	b2db      	uxtb	r3, r3
 800ab94:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ab98:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800ab9c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800aba0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800aba2:	4a29      	ldr	r2, [pc, #164]	; (800ac48 <xPortStartScheduler+0x104>)
 800aba4:	2307      	movs	r3, #7
 800aba6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800aba8:	2100      	movs	r1, #0
 800abaa:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800abae:	0600      	lsls	r0, r0, #24
 800abb0:	f103 34ff 	add.w	r4, r3, #4294967295
 800abb4:	d40c      	bmi.n	800abd0 <xPortStartScheduler+0x8c>
 800abb6:	b111      	cbz	r1, 800abbe <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800abb8:	2b03      	cmp	r3, #3
 800abba:	6013      	str	r3, [r2, #0]
 800abbc:	d011      	beq.n	800abe2 <xPortStartScheduler+0x9e>
 800abbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800abc2:	f383 8811 	msr	BASEPRI, r3
 800abc6:	f3bf 8f6f 	isb	sy
 800abca:	f3bf 8f4f 	dsb	sy
 800abce:	e7fe      	b.n	800abce <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800abd0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800abd4:	005b      	lsls	r3, r3, #1
 800abd6:	b2db      	uxtb	r3, r3
 800abd8:	f88d 3003 	strb.w	r3, [sp, #3]
 800abdc:	2101      	movs	r1, #1
 800abde:	4623      	mov	r3, r4
 800abe0:	e7e3      	b.n	800abaa <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800abe2:	f44f 7340 	mov.w	r3, #768	; 0x300
 800abe6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800abe8:	9b01      	ldr	r3, [sp, #4]
 800abea:	4a15      	ldr	r2, [pc, #84]	; (800ac40 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800abec:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800abf0:	b2db      	uxtb	r3, r3
 800abf2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800abf4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800abf8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800abfc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800ac00:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800ac04:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800ac08:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800ac0c:	f7ff ff88 	bl	800ab20 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800ac10:	4b0e      	ldr	r3, [pc, #56]	; (800ac4c <xPortStartScheduler+0x108>)
 800ac12:	2500      	movs	r5, #0
 800ac14:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800ac16:	f7ff feaf 	bl	800a978 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800ac1a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800ac1e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800ac22:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800ac26:	f7ff fe93 	bl	800a950 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800ac2a:	f001 f8a9 	bl	800bd80 <vTaskSwitchContext>
	prvTaskExitError();
 800ac2e:	f7ff fead 	bl	800a98c <prvTaskExitError>
}
 800ac32:	4628      	mov	r0, r5
 800ac34:	b003      	add	sp, #12
 800ac36:	bd30      	pop	{r4, r5, pc}
 800ac38:	410fc271 	.word	0x410fc271
 800ac3c:	410fc270 	.word	0x410fc270
 800ac40:	e000e400 	.word	0xe000e400
 800ac44:	20014958 	.word	0x20014958
 800ac48:	2001495c 	.word	0x2001495c
 800ac4c:	20000080 	.word	0x20000080

0800ac50 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800ac50:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800ac54:	2b0f      	cmp	r3, #15
 800ac56:	d90e      	bls.n	800ac76 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800ac58:	4a11      	ldr	r2, [pc, #68]	; (800aca0 <vPortValidateInterruptPriority+0x50>)
 800ac5a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800ac5c:	4a11      	ldr	r2, [pc, #68]	; (800aca4 <vPortValidateInterruptPriority+0x54>)
 800ac5e:	7812      	ldrb	r2, [r2, #0]
 800ac60:	429a      	cmp	r2, r3
 800ac62:	d908      	bls.n	800ac76 <vPortValidateInterruptPriority+0x26>
 800ac64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac68:	f383 8811 	msr	BASEPRI, r3
 800ac6c:	f3bf 8f6f 	isb	sy
 800ac70:	f3bf 8f4f 	dsb	sy
 800ac74:	e7fe      	b.n	800ac74 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800ac76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ac7a:	4a0b      	ldr	r2, [pc, #44]	; (800aca8 <vPortValidateInterruptPriority+0x58>)
 800ac7c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800ac80:	6812      	ldr	r2, [r2, #0]
 800ac82:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800ac86:	4293      	cmp	r3, r2
 800ac88:	d908      	bls.n	800ac9c <vPortValidateInterruptPriority+0x4c>
 800ac8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac8e:	f383 8811 	msr	BASEPRI, r3
 800ac92:	f3bf 8f6f 	isb	sy
 800ac96:	f3bf 8f4f 	dsb	sy
 800ac9a:	e7fe      	b.n	800ac9a <vPortValidateInterruptPriority+0x4a>
	}
 800ac9c:	4770      	bx	lr
 800ac9e:	bf00      	nop
 800aca0:	e000e3f0 	.word	0xe000e3f0
 800aca4:	20014958 	.word	0x20014958
 800aca8:	2001495c 	.word	0x2001495c

0800acac <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800acac:	b510      	push	{r4, lr}
 800acae:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800acb0:	f7ff feb8 	bl	800aa24 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800acb4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800acb6:	f7ff fed5 	bl	800aa64 <vPortExitCritical>

	return xReturn;
}
 800acba:	fab4 f084 	clz	r0, r4
 800acbe:	0940      	lsrs	r0, r0, #5
 800acc0:	bd10      	pop	{r4, pc}

0800acc2 <prvCopyDataToQueue>:
{
 800acc2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800acc4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800acc6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800acc8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800acca:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800accc:	b952      	cbnz	r2, 800ace4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800acce:	6807      	ldr	r7, [r0, #0]
 800acd0:	bb47      	cbnz	r7, 800ad24 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800acd2:	6880      	ldr	r0, [r0, #8]
 800acd4:	f001 f9aa 	bl	800c02c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800acd8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800acda:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800acdc:	3601      	adds	r6, #1
 800acde:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800ace0:	4628      	mov	r0, r5
 800ace2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800ace4:	b965      	cbnz	r5, 800ad00 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ace6:	6840      	ldr	r0, [r0, #4]
 800ace8:	f016 fe1e 	bl	8021928 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800acec:	6863      	ldr	r3, [r4, #4]
 800acee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800acf0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800acf2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800acf4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800acf6:	4293      	cmp	r3, r2
 800acf8:	d3f0      	bcc.n	800acdc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800acfa:	6823      	ldr	r3, [r4, #0]
 800acfc:	6063      	str	r3, [r4, #4]
 800acfe:	e7ed      	b.n	800acdc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800ad00:	68c0      	ldr	r0, [r0, #12]
 800ad02:	f016 fe11 	bl	8021928 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800ad06:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ad08:	68e3      	ldr	r3, [r4, #12]
 800ad0a:	4251      	negs	r1, r2
 800ad0c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800ad0e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800ad10:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800ad12:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800ad14:	bf3e      	ittt	cc
 800ad16:	68a3      	ldrcc	r3, [r4, #8]
 800ad18:	185b      	addcc	r3, r3, r1
 800ad1a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800ad1c:	2d02      	cmp	r5, #2
 800ad1e:	d101      	bne.n	800ad24 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ad20:	b116      	cbz	r6, 800ad28 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800ad22:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800ad24:	2500      	movs	r5, #0
 800ad26:	e7d9      	b.n	800acdc <prvCopyDataToQueue+0x1a>
 800ad28:	4635      	mov	r5, r6
 800ad2a:	e7d7      	b.n	800acdc <prvCopyDataToQueue+0x1a>

0800ad2c <prvCopyDataFromQueue>:
{
 800ad2c:	4603      	mov	r3, r0
 800ad2e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ad30:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800ad32:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ad34:	b16a      	cbz	r2, 800ad52 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ad36:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ad38:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ad3a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ad3c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ad3e:	bf28      	it	cs
 800ad40:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ad42:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ad44:	bf28      	it	cs
 800ad46:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ad48:	68d9      	ldr	r1, [r3, #12]
}
 800ad4a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ad4e:	f016 bdeb 	b.w	8021928 <memcpy>
}
 800ad52:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ad56:	4770      	bx	lr

0800ad58 <prvUnlockQueue>:
{
 800ad58:	b570      	push	{r4, r5, r6, lr}
 800ad5a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800ad5c:	f7ff fe62 	bl	800aa24 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ad60:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ad64:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800ad68:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ad6a:	2d00      	cmp	r5, #0
 800ad6c:	dc14      	bgt.n	800ad98 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800ad6e:	23ff      	movs	r3, #255	; 0xff
 800ad70:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ad74:	f7ff fe76 	bl	800aa64 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ad78:	f7ff fe54 	bl	800aa24 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ad7c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ad80:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800ad84:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ad86:	2d00      	cmp	r5, #0
 800ad88:	dc12      	bgt.n	800adb0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800ad8a:	23ff      	movs	r3, #255	; 0xff
 800ad8c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800ad90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800ad94:	f7ff be66 	b.w	800aa64 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ad98:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ad9a:	2b00      	cmp	r3, #0
 800ad9c:	d0e7      	beq.n	800ad6e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ad9e:	4630      	mov	r0, r6
 800ada0:	f001 f860 	bl	800be64 <xTaskRemoveFromEventList>
 800ada4:	b108      	cbz	r0, 800adaa <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800ada6:	f001 f8e9 	bl	800bf7c <vTaskMissedYield>
			--cTxLock;
 800adaa:	3d01      	subs	r5, #1
 800adac:	b26d      	sxtb	r5, r5
 800adae:	e7dc      	b.n	800ad6a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800adb0:	6923      	ldr	r3, [r4, #16]
 800adb2:	2b00      	cmp	r3, #0
 800adb4:	d0e9      	beq.n	800ad8a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800adb6:	4630      	mov	r0, r6
 800adb8:	f001 f854 	bl	800be64 <xTaskRemoveFromEventList>
 800adbc:	b108      	cbz	r0, 800adc2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800adbe:	f001 f8dd 	bl	800bf7c <vTaskMissedYield>
				--cRxLock;
 800adc2:	3d01      	subs	r5, #1
 800adc4:	b26d      	sxtb	r5, r5
 800adc6:	e7de      	b.n	800ad86 <prvUnlockQueue+0x2e>

0800adc8 <xQueueGenericReset>:
{
 800adc8:	b538      	push	{r3, r4, r5, lr}
 800adca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800adcc:	4604      	mov	r4, r0
 800adce:	b940      	cbnz	r0, 800ade2 <xQueueGenericReset+0x1a>
 800add0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800add4:	f383 8811 	msr	BASEPRI, r3
 800add8:	f3bf 8f6f 	isb	sy
 800addc:	f3bf 8f4f 	dsb	sy
 800ade0:	e7fe      	b.n	800ade0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800ade2:	f7ff fe1f 	bl	800aa24 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ade6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800adea:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800adec:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800adee:	434b      	muls	r3, r1
 800adf0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800adf2:	1a5b      	subs	r3, r3, r1
 800adf4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800adf6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800adf8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800adfa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800adfc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800adfe:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800ae00:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800ae04:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800ae08:	b9a5      	cbnz	r5, 800ae34 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ae0a:	6923      	ldr	r3, [r4, #16]
 800ae0c:	b173      	cbz	r3, 800ae2c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ae0e:	f104 0010 	add.w	r0, r4, #16
 800ae12:	f001 f827 	bl	800be64 <xTaskRemoveFromEventList>
 800ae16:	b148      	cbz	r0, 800ae2c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800ae18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ae1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ae20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ae24:	f3bf 8f4f 	dsb	sy
 800ae28:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800ae2c:	f7ff fe1a 	bl	800aa64 <vPortExitCritical>
}
 800ae30:	2001      	movs	r0, #1
 800ae32:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800ae34:	f104 0010 	add.w	r0, r4, #16
 800ae38:	f7ff fd48 	bl	800a8cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800ae3c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ae40:	f7ff fd44 	bl	800a8cc <vListInitialise>
 800ae44:	e7f2      	b.n	800ae2c <xQueueGenericReset+0x64>

0800ae46 <xQueueGenericCreateStatic>:
	{
 800ae46:	b513      	push	{r0, r1, r4, lr}
 800ae48:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800ae4a:	b940      	cbnz	r0, 800ae5e <xQueueGenericCreateStatic+0x18>
 800ae4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae50:	f383 8811 	msr	BASEPRI, r3
 800ae54:	f3bf 8f6f 	isb	sy
 800ae58:	f3bf 8f4f 	dsb	sy
 800ae5c:	e7fe      	b.n	800ae5c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800ae5e:	b943      	cbnz	r3, 800ae72 <xQueueGenericCreateStatic+0x2c>
 800ae60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae64:	f383 8811 	msr	BASEPRI, r3
 800ae68:	f3bf 8f6f 	isb	sy
 800ae6c:	f3bf 8f4f 	dsb	sy
 800ae70:	e7fe      	b.n	800ae70 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800ae72:	b14a      	cbz	r2, 800ae88 <xQueueGenericCreateStatic+0x42>
 800ae74:	b991      	cbnz	r1, 800ae9c <xQueueGenericCreateStatic+0x56>
 800ae76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae7a:	f383 8811 	msr	BASEPRI, r3
 800ae7e:	f3bf 8f6f 	isb	sy
 800ae82:	f3bf 8f4f 	dsb	sy
 800ae86:	e7fe      	b.n	800ae86 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800ae88:	b141      	cbz	r1, 800ae9c <xQueueGenericCreateStatic+0x56>
 800ae8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae8e:	f383 8811 	msr	BASEPRI, r3
 800ae92:	f3bf 8f6f 	isb	sy
 800ae96:	f3bf 8f4f 	dsb	sy
 800ae9a:	e7fe      	b.n	800ae9a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800ae9c:	2350      	movs	r3, #80	; 0x50
 800ae9e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800aea0:	9b01      	ldr	r3, [sp, #4]
 800aea2:	2b50      	cmp	r3, #80	; 0x50
 800aea4:	d008      	beq.n	800aeb8 <xQueueGenericCreateStatic+0x72>
 800aea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aeaa:	f383 8811 	msr	BASEPRI, r3
 800aeae:	f3bf 8f6f 	isb	sy
 800aeb2:	f3bf 8f4f 	dsb	sy
 800aeb6:	e7fe      	b.n	800aeb6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800aeb8:	2900      	cmp	r1, #0
 800aeba:	bf08      	it	eq
 800aebc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800aebe:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800aec0:	6022      	str	r2, [r4, #0]
 800aec2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800aec4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800aec8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800aecc:	4619      	mov	r1, r3
 800aece:	4620      	mov	r0, r4
 800aed0:	f7ff ff7a 	bl	800adc8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800aed4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800aed8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800aedc:	4620      	mov	r0, r4
 800aede:	b002      	add	sp, #8
 800aee0:	bd10      	pop	{r4, pc}

0800aee2 <xQueueGenericCreate>:
	{
 800aee2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800aee4:	460d      	mov	r5, r1
 800aee6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800aee8:	4606      	mov	r6, r0
 800aeea:	b940      	cbnz	r0, 800aefe <xQueueGenericCreate+0x1c>
 800aeec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aef0:	f383 8811 	msr	BASEPRI, r3
 800aef4:	f3bf 8f6f 	isb	sy
 800aef8:	f3bf 8f4f 	dsb	sy
 800aefc:	e7fe      	b.n	800aefc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800aefe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800af00:	3050      	adds	r0, #80	; 0x50
 800af02:	f7ff fc0d 	bl	800a720 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800af06:	4604      	mov	r4, r0
 800af08:	b170      	cbz	r0, 800af28 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800af0a:	2300      	movs	r3, #0
 800af0c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800af10:	b165      	cbz	r5, 800af2c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800af12:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800af16:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800af1a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800af1c:	2101      	movs	r1, #1
 800af1e:	4620      	mov	r0, r4
 800af20:	f7ff ff52 	bl	800adc8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800af24:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800af28:	4620      	mov	r0, r4
 800af2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800af2c:	4603      	mov	r3, r0
 800af2e:	e7f2      	b.n	800af16 <xQueueGenericCreate+0x34>

0800af30 <xQueueCreateCountingSemaphoreStatic>:
	{
 800af30:	b513      	push	{r0, r1, r4, lr}
 800af32:	4613      	mov	r3, r2
 800af34:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800af36:	b940      	cbnz	r0, 800af4a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800af38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af3c:	f383 8811 	msr	BASEPRI, r3
 800af40:	f3bf 8f6f 	isb	sy
 800af44:	f3bf 8f4f 	dsb	sy
 800af48:	e7fe      	b.n	800af48 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800af4a:	4288      	cmp	r0, r1
 800af4c:	d208      	bcs.n	800af60 <xQueueCreateCountingSemaphoreStatic+0x30>
 800af4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af52:	f383 8811 	msr	BASEPRI, r3
 800af56:	f3bf 8f6f 	isb	sy
 800af5a:	f3bf 8f4f 	dsb	sy
 800af5e:	e7fe      	b.n	800af5e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800af60:	2202      	movs	r2, #2
 800af62:	9200      	str	r2, [sp, #0]
 800af64:	2200      	movs	r2, #0
 800af66:	4611      	mov	r1, r2
 800af68:	f7ff ff6d 	bl	800ae46 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800af6c:	b100      	cbz	r0, 800af70 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800af6e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800af70:	b002      	add	sp, #8
 800af72:	bd10      	pop	{r4, pc}

0800af74 <xQueueCreateCountingSemaphore>:
	{
 800af74:	b510      	push	{r4, lr}
 800af76:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800af78:	b940      	cbnz	r0, 800af8c <xQueueCreateCountingSemaphore+0x18>
 800af7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af7e:	f383 8811 	msr	BASEPRI, r3
 800af82:	f3bf 8f6f 	isb	sy
 800af86:	f3bf 8f4f 	dsb	sy
 800af8a:	e7fe      	b.n	800af8a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800af8c:	4288      	cmp	r0, r1
 800af8e:	d208      	bcs.n	800afa2 <xQueueCreateCountingSemaphore+0x2e>
 800af90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800af94:	f383 8811 	msr	BASEPRI, r3
 800af98:	f3bf 8f6f 	isb	sy
 800af9c:	f3bf 8f4f 	dsb	sy
 800afa0:	e7fe      	b.n	800afa0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800afa2:	2202      	movs	r2, #2
 800afa4:	2100      	movs	r1, #0
 800afa6:	f7ff ff9c 	bl	800aee2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800afaa:	b100      	cbz	r0, 800afae <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800afac:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800afae:	bd10      	pop	{r4, pc}

0800afb0 <xQueueGenericSend>:
{
 800afb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800afb4:	b085      	sub	sp, #20
 800afb6:	4688      	mov	r8, r1
 800afb8:	9201      	str	r2, [sp, #4]
 800afba:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800afbc:	4604      	mov	r4, r0
 800afbe:	b940      	cbnz	r0, 800afd2 <xQueueGenericSend+0x22>
 800afc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800afc4:	f383 8811 	msr	BASEPRI, r3
 800afc8:	f3bf 8f6f 	isb	sy
 800afcc:	f3bf 8f4f 	dsb	sy
 800afd0:	e7fe      	b.n	800afd0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800afd2:	b951      	cbnz	r1, 800afea <xQueueGenericSend+0x3a>
 800afd4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800afd6:	b143      	cbz	r3, 800afea <xQueueGenericSend+0x3a>
 800afd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800afdc:	f383 8811 	msr	BASEPRI, r3
 800afe0:	f3bf 8f6f 	isb	sy
 800afe4:	f3bf 8f4f 	dsb	sy
 800afe8:	e7fe      	b.n	800afe8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800afea:	2f02      	cmp	r7, #2
 800afec:	d10b      	bne.n	800b006 <xQueueGenericSend+0x56>
 800afee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800aff0:	2b01      	cmp	r3, #1
 800aff2:	d008      	beq.n	800b006 <xQueueGenericSend+0x56>
 800aff4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aff8:	f383 8811 	msr	BASEPRI, r3
 800affc:	f3bf 8f6f 	isb	sy
 800b000:	f3bf 8f4f 	dsb	sy
 800b004:	e7fe      	b.n	800b004 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800b006:	f000 ffbf 	bl	800bf88 <xTaskGetSchedulerState>
 800b00a:	4606      	mov	r6, r0
 800b00c:	b950      	cbnz	r0, 800b024 <xQueueGenericSend+0x74>
 800b00e:	9b01      	ldr	r3, [sp, #4]
 800b010:	b14b      	cbz	r3, 800b026 <xQueueGenericSend+0x76>
 800b012:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b016:	f383 8811 	msr	BASEPRI, r3
 800b01a:	f3bf 8f6f 	isb	sy
 800b01e:	f3bf 8f4f 	dsb	sy
 800b022:	e7fe      	b.n	800b022 <xQueueGenericSend+0x72>
 800b024:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800b026:	f04f 0900 	mov.w	r9, #0
 800b02a:	e037      	b.n	800b09c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800b02c:	9d01      	ldr	r5, [sp, #4]
 800b02e:	b91d      	cbnz	r5, 800b038 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800b030:	f7ff fd18 	bl	800aa64 <vPortExitCritical>
			return errQUEUE_FULL;
 800b034:	2000      	movs	r0, #0
 800b036:	e052      	b.n	800b0de <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800b038:	b916      	cbnz	r6, 800b040 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800b03a:	a802      	add	r0, sp, #8
 800b03c:	f000 ff56 	bl	800beec <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800b040:	f7ff fd10 	bl	800aa64 <vPortExitCritical>
		vTaskSuspendAll();
 800b044:	f000 fd60 	bl	800bb08 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800b048:	f7ff fcec 	bl	800aa24 <vPortEnterCritical>
 800b04c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800b050:	2bff      	cmp	r3, #255	; 0xff
 800b052:	bf08      	it	eq
 800b054:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800b058:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800b05c:	2bff      	cmp	r3, #255	; 0xff
 800b05e:	bf08      	it	eq
 800b060:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800b064:	f7ff fcfe 	bl	800aa64 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800b068:	a901      	add	r1, sp, #4
 800b06a:	a802      	add	r0, sp, #8
 800b06c:	f000 ff4a 	bl	800bf04 <xTaskCheckForTimeOut>
 800b070:	2800      	cmp	r0, #0
 800b072:	d14a      	bne.n	800b10a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800b074:	f7ff fcd6 	bl	800aa24 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800b078:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b07a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b07c:	429a      	cmp	r2, r3
 800b07e:	d131      	bne.n	800b0e4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800b080:	f7ff fcf0 	bl	800aa64 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800b084:	9901      	ldr	r1, [sp, #4]
 800b086:	f104 0010 	add.w	r0, r4, #16
 800b08a:	f000 feb3 	bl	800bdf4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800b08e:	4620      	mov	r0, r4
 800b090:	f7ff fe62 	bl	800ad58 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800b094:	f000 fddc 	bl	800bc50 <xTaskResumeAll>
 800b098:	b360      	cbz	r0, 800b0f4 <xQueueGenericSend+0x144>
 800b09a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800b09c:	f7ff fcc2 	bl	800aa24 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800b0a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b0a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b0a4:	429a      	cmp	r2, r3
 800b0a6:	d301      	bcc.n	800b0ac <xQueueGenericSend+0xfc>
 800b0a8:	2f02      	cmp	r7, #2
 800b0aa:	d1bf      	bne.n	800b02c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800b0ac:	463a      	mov	r2, r7
 800b0ae:	4641      	mov	r1, r8
 800b0b0:	4620      	mov	r0, r4
 800b0b2:	f7ff fe06 	bl	800acc2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800b0b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b0b8:	b11b      	cbz	r3, 800b0c2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800b0ba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b0be:	f000 fed1 	bl	800be64 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800b0c2:	b148      	cbz	r0, 800b0d8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800b0c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b0c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b0cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b0d0:	f3bf 8f4f 	dsb	sy
 800b0d4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800b0d8:	f7ff fcc4 	bl	800aa64 <vPortExitCritical>
				return pdPASS;
 800b0dc:	2001      	movs	r0, #1
}
 800b0de:	b005      	add	sp, #20
 800b0e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800b0e4:	f7ff fcbe 	bl	800aa64 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800b0e8:	4620      	mov	r0, r4
 800b0ea:	f7ff fe35 	bl	800ad58 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800b0ee:	f000 fdaf 	bl	800bc50 <xTaskResumeAll>
 800b0f2:	e7d2      	b.n	800b09a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800b0f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b0f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b0fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b100:	f3bf 8f4f 	dsb	sy
 800b104:	f3bf 8f6f 	isb	sy
 800b108:	e7c7      	b.n	800b09a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800b10a:	4620      	mov	r0, r4
 800b10c:	f7ff fe24 	bl	800ad58 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800b110:	f000 fd9e 	bl	800bc50 <xTaskResumeAll>
 800b114:	e78e      	b.n	800b034 <xQueueGenericSend+0x84>

0800b116 <xQueueGenericSendFromISR>:
{
 800b116:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b11a:	4689      	mov	r9, r1
 800b11c:	4690      	mov	r8, r2
 800b11e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800b120:	4604      	mov	r4, r0
 800b122:	b940      	cbnz	r0, 800b136 <xQueueGenericSendFromISR+0x20>
 800b124:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b128:	f383 8811 	msr	BASEPRI, r3
 800b12c:	f3bf 8f6f 	isb	sy
 800b130:	f3bf 8f4f 	dsb	sy
 800b134:	e7fe      	b.n	800b134 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800b136:	b951      	cbnz	r1, 800b14e <xQueueGenericSendFromISR+0x38>
 800b138:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b13a:	b143      	cbz	r3, 800b14e <xQueueGenericSendFromISR+0x38>
 800b13c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b140:	f383 8811 	msr	BASEPRI, r3
 800b144:	f3bf 8f6f 	isb	sy
 800b148:	f3bf 8f4f 	dsb	sy
 800b14c:	e7fe      	b.n	800b14c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800b14e:	2f02      	cmp	r7, #2
 800b150:	d10b      	bne.n	800b16a <xQueueGenericSendFromISR+0x54>
 800b152:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b154:	2b01      	cmp	r3, #1
 800b156:	d008      	beq.n	800b16a <xQueueGenericSendFromISR+0x54>
 800b158:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b15c:	f383 8811 	msr	BASEPRI, r3
 800b160:	f3bf 8f6f 	isb	sy
 800b164:	f3bf 8f4f 	dsb	sy
 800b168:	e7fe      	b.n	800b168 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800b16a:	f7ff fd71 	bl	800ac50 <vPortValidateInterruptPriority>
	__asm volatile
 800b16e:	f3ef 8611 	mrs	r6, BASEPRI
 800b172:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b176:	f383 8811 	msr	BASEPRI, r3
 800b17a:	f3bf 8f6f 	isb	sy
 800b17e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800b182:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b184:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b186:	429a      	cmp	r2, r3
 800b188:	d301      	bcc.n	800b18e <xQueueGenericSendFromISR+0x78>
 800b18a:	2f02      	cmp	r7, #2
 800b18c:	d123      	bne.n	800b1d6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800b18e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b192:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800b194:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800b196:	463a      	mov	r2, r7
 800b198:	4649      	mov	r1, r9
 800b19a:	4620      	mov	r0, r4
 800b19c:	f7ff fd91 	bl	800acc2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800b1a0:	1c6b      	adds	r3, r5, #1
 800b1a2:	d113      	bne.n	800b1cc <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800b1a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b1a6:	b90b      	cbnz	r3, 800b1ac <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800b1a8:	2001      	movs	r0, #1
 800b1aa:	e00b      	b.n	800b1c4 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800b1ac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b1b0:	f000 fe58 	bl	800be64 <xTaskRemoveFromEventList>
 800b1b4:	2800      	cmp	r0, #0
 800b1b6:	d0f7      	beq.n	800b1a8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800b1b8:	f1b8 0f00 	cmp.w	r8, #0
 800b1bc:	d0f4      	beq.n	800b1a8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800b1be:	2001      	movs	r0, #1
 800b1c0:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800b1c4:	f386 8811 	msr	BASEPRI, r6
}
 800b1c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800b1cc:	3501      	adds	r5, #1
 800b1ce:	b26d      	sxtb	r5, r5
 800b1d0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800b1d4:	e7e8      	b.n	800b1a8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800b1d6:	2000      	movs	r0, #0
 800b1d8:	e7f4      	b.n	800b1c4 <xQueueGenericSendFromISR+0xae>

0800b1da <xQueueGiveFromISR>:
{
 800b1da:	b570      	push	{r4, r5, r6, lr}
 800b1dc:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800b1de:	4604      	mov	r4, r0
 800b1e0:	b940      	cbnz	r0, 800b1f4 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800b1e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1e6:	f383 8811 	msr	BASEPRI, r3
 800b1ea:	f3bf 8f6f 	isb	sy
 800b1ee:	f3bf 8f4f 	dsb	sy
 800b1f2:	e7fe      	b.n	800b1f2 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800b1f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b1f6:	b143      	cbz	r3, 800b20a <xQueueGiveFromISR+0x30>
 800b1f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1fc:	f383 8811 	msr	BASEPRI, r3
 800b200:	f3bf 8f6f 	isb	sy
 800b204:	f3bf 8f4f 	dsb	sy
 800b208:	e7fe      	b.n	800b208 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800b20a:	6803      	ldr	r3, [r0, #0]
 800b20c:	b953      	cbnz	r3, 800b224 <xQueueGiveFromISR+0x4a>
 800b20e:	6883      	ldr	r3, [r0, #8]
 800b210:	b143      	cbz	r3, 800b224 <xQueueGiveFromISR+0x4a>
 800b212:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b216:	f383 8811 	msr	BASEPRI, r3
 800b21a:	f3bf 8f6f 	isb	sy
 800b21e:	f3bf 8f4f 	dsb	sy
 800b222:	e7fe      	b.n	800b222 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800b224:	f7ff fd14 	bl	800ac50 <vPortValidateInterruptPriority>
	__asm volatile
 800b228:	f3ef 8611 	mrs	r6, BASEPRI
 800b22c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b230:	f383 8811 	msr	BASEPRI, r3
 800b234:	f3bf 8f6f 	isb	sy
 800b238:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b23c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800b23e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b240:	4293      	cmp	r3, r2
 800b242:	d91c      	bls.n	800b27e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800b244:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800b248:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800b24a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800b24c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800b24e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800b250:	d110      	bne.n	800b274 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800b252:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b254:	b90b      	cbnz	r3, 800b25a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800b256:	2001      	movs	r0, #1
 800b258:	e009      	b.n	800b26e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800b25a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b25e:	f000 fe01 	bl	800be64 <xTaskRemoveFromEventList>
 800b262:	2800      	cmp	r0, #0
 800b264:	d0f7      	beq.n	800b256 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800b266:	2d00      	cmp	r5, #0
 800b268:	d0f5      	beq.n	800b256 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800b26a:	2001      	movs	r0, #1
 800b26c:	6028      	str	r0, [r5, #0]
	__asm volatile
 800b26e:	f386 8811 	msr	BASEPRI, r6
}
 800b272:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800b274:	3301      	adds	r3, #1
 800b276:	b25b      	sxtb	r3, r3
 800b278:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b27c:	e7eb      	b.n	800b256 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800b27e:	2000      	movs	r0, #0
 800b280:	e7f5      	b.n	800b26e <xQueueGiveFromISR+0x94>

0800b282 <xQueueReceive>:
{
 800b282:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b286:	460f      	mov	r7, r1
 800b288:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800b28a:	4604      	mov	r4, r0
 800b28c:	b940      	cbnz	r0, 800b2a0 <xQueueReceive+0x1e>
	__asm volatile
 800b28e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b292:	f383 8811 	msr	BASEPRI, r3
 800b296:	f3bf 8f6f 	isb	sy
 800b29a:	f3bf 8f4f 	dsb	sy
 800b29e:	e7fe      	b.n	800b29e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800b2a0:	b951      	cbnz	r1, 800b2b8 <xQueueReceive+0x36>
 800b2a2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b2a4:	b143      	cbz	r3, 800b2b8 <xQueueReceive+0x36>
 800b2a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2aa:	f383 8811 	msr	BASEPRI, r3
 800b2ae:	f3bf 8f6f 	isb	sy
 800b2b2:	f3bf 8f4f 	dsb	sy
 800b2b6:	e7fe      	b.n	800b2b6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800b2b8:	f000 fe66 	bl	800bf88 <xTaskGetSchedulerState>
 800b2bc:	4606      	mov	r6, r0
 800b2be:	b950      	cbnz	r0, 800b2d6 <xQueueReceive+0x54>
 800b2c0:	9b01      	ldr	r3, [sp, #4]
 800b2c2:	b14b      	cbz	r3, 800b2d8 <xQueueReceive+0x56>
 800b2c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2c8:	f383 8811 	msr	BASEPRI, r3
 800b2cc:	f3bf 8f6f 	isb	sy
 800b2d0:	f3bf 8f4f 	dsb	sy
 800b2d4:	e7fe      	b.n	800b2d4 <xQueueReceive+0x52>
 800b2d6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800b2d8:	f04f 0800 	mov.w	r8, #0
 800b2dc:	e03d      	b.n	800b35a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800b2de:	9d01      	ldr	r5, [sp, #4]
 800b2e0:	b91d      	cbnz	r5, 800b2ea <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800b2e2:	f7ff fbbf 	bl	800aa64 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800b2e6:	2000      	movs	r0, #0
 800b2e8:	e056      	b.n	800b398 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800b2ea:	b916      	cbnz	r6, 800b2f2 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800b2ec:	a802      	add	r0, sp, #8
 800b2ee:	f000 fdfd 	bl	800beec <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800b2f2:	f7ff fbb7 	bl	800aa64 <vPortExitCritical>
		vTaskSuspendAll();
 800b2f6:	f000 fc07 	bl	800bb08 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800b2fa:	f7ff fb93 	bl	800aa24 <vPortEnterCritical>
 800b2fe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800b302:	2bff      	cmp	r3, #255	; 0xff
 800b304:	bf08      	it	eq
 800b306:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800b30a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800b30e:	2bff      	cmp	r3, #255	; 0xff
 800b310:	bf08      	it	eq
 800b312:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800b316:	f7ff fba5 	bl	800aa64 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800b31a:	a901      	add	r1, sp, #4
 800b31c:	a802      	add	r0, sp, #8
 800b31e:	f000 fdf1 	bl	800bf04 <xTaskCheckForTimeOut>
 800b322:	2800      	cmp	r0, #0
 800b324:	d141      	bne.n	800b3aa <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b326:	4620      	mov	r0, r4
 800b328:	f7ff fcc0 	bl	800acac <prvIsQueueEmpty>
 800b32c:	b3b8      	cbz	r0, 800b39e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800b32e:	9901      	ldr	r1, [sp, #4]
 800b330:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b334:	f000 fd5e 	bl	800bdf4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800b338:	4620      	mov	r0, r4
 800b33a:	f7ff fd0d 	bl	800ad58 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800b33e:	f000 fc87 	bl	800bc50 <xTaskResumeAll>
 800b342:	b948      	cbnz	r0, 800b358 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800b344:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b348:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b34c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b350:	f3bf 8f4f 	dsb	sy
 800b354:	f3bf 8f6f 	isb	sy
 800b358:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800b35a:	f7ff fb63 	bl	800aa24 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b35e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800b360:	2d00      	cmp	r5, #0
 800b362:	d0bc      	beq.n	800b2de <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b364:	4639      	mov	r1, r7
 800b366:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b368:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b36a:	f7ff fcdf 	bl	800ad2c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b36e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800b370:	6923      	ldr	r3, [r4, #16]
 800b372:	b173      	cbz	r3, 800b392 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800b374:	f104 0010 	add.w	r0, r4, #16
 800b378:	f000 fd74 	bl	800be64 <xTaskRemoveFromEventList>
 800b37c:	b148      	cbz	r0, 800b392 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800b37e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b382:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b386:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b38a:	f3bf 8f4f 	dsb	sy
 800b38e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800b392:	f7ff fb67 	bl	800aa64 <vPortExitCritical>
				return pdPASS;
 800b396:	2001      	movs	r0, #1
}
 800b398:	b004      	add	sp, #16
 800b39a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800b39e:	4620      	mov	r0, r4
 800b3a0:	f7ff fcda 	bl	800ad58 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800b3a4:	f000 fc54 	bl	800bc50 <xTaskResumeAll>
 800b3a8:	e7d6      	b.n	800b358 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800b3aa:	4620      	mov	r0, r4
 800b3ac:	f7ff fcd4 	bl	800ad58 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800b3b0:	f000 fc4e 	bl	800bc50 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b3b4:	4620      	mov	r0, r4
 800b3b6:	f7ff fc79 	bl	800acac <prvIsQueueEmpty>
 800b3ba:	2800      	cmp	r0, #0
 800b3bc:	d0cc      	beq.n	800b358 <xQueueReceive+0xd6>
 800b3be:	e792      	b.n	800b2e6 <xQueueReceive+0x64>

0800b3c0 <xQueueSemaphoreTake>:
{
 800b3c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b3c2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800b3c4:	4604      	mov	r4, r0
{
 800b3c6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800b3c8:	b940      	cbnz	r0, 800b3dc <xQueueSemaphoreTake+0x1c>
 800b3ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b3ce:	f383 8811 	msr	BASEPRI, r3
 800b3d2:	f3bf 8f6f 	isb	sy
 800b3d6:	f3bf 8f4f 	dsb	sy
 800b3da:	e7fe      	b.n	800b3da <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800b3dc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800b3de:	b145      	cbz	r5, 800b3f2 <xQueueSemaphoreTake+0x32>
 800b3e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b3e4:	f383 8811 	msr	BASEPRI, r3
 800b3e8:	f3bf 8f6f 	isb	sy
 800b3ec:	f3bf 8f4f 	dsb	sy
 800b3f0:	e7fe      	b.n	800b3f0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800b3f2:	f000 fdc9 	bl	800bf88 <xTaskGetSchedulerState>
 800b3f6:	4606      	mov	r6, r0
 800b3f8:	b950      	cbnz	r0, 800b410 <xQueueSemaphoreTake+0x50>
 800b3fa:	9b01      	ldr	r3, [sp, #4]
 800b3fc:	b15b      	cbz	r3, 800b416 <xQueueSemaphoreTake+0x56>
 800b3fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b402:	f383 8811 	msr	BASEPRI, r3
 800b406:	f3bf 8f6f 	isb	sy
 800b40a:	f3bf 8f4f 	dsb	sy
 800b40e:	e7fe      	b.n	800b40e <xQueueSemaphoreTake+0x4e>
 800b410:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800b412:	2700      	movs	r7, #0
 800b414:	e053      	b.n	800b4be <xQueueSemaphoreTake+0xfe>
 800b416:	4605      	mov	r5, r0
 800b418:	e7fb      	b.n	800b412 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800b41a:	9b01      	ldr	r3, [sp, #4]
 800b41c:	b963      	cbnz	r3, 800b438 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800b41e:	b145      	cbz	r5, 800b432 <xQueueSemaphoreTake+0x72>
 800b420:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b424:	f383 8811 	msr	BASEPRI, r3
 800b428:	f3bf 8f6f 	isb	sy
 800b42c:	f3bf 8f4f 	dsb	sy
 800b430:	e7fe      	b.n	800b430 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800b432:	f7ff fb17 	bl	800aa64 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800b436:	e062      	b.n	800b4fe <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800b438:	b916      	cbnz	r6, 800b440 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800b43a:	a802      	add	r0, sp, #8
 800b43c:	f000 fd56 	bl	800beec <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800b440:	f7ff fb10 	bl	800aa64 <vPortExitCritical>
		vTaskSuspendAll();
 800b444:	f000 fb60 	bl	800bb08 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800b448:	f7ff faec 	bl	800aa24 <vPortEnterCritical>
 800b44c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800b450:	2bff      	cmp	r3, #255	; 0xff
 800b452:	bf08      	it	eq
 800b454:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800b458:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800b45c:	2bff      	cmp	r3, #255	; 0xff
 800b45e:	bf08      	it	eq
 800b460:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800b464:	f7ff fafe 	bl	800aa64 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800b468:	a901      	add	r1, sp, #4
 800b46a:	a802      	add	r0, sp, #8
 800b46c:	f000 fd4a 	bl	800bf04 <xTaskCheckForTimeOut>
 800b470:	2800      	cmp	r0, #0
 800b472:	d14d      	bne.n	800b510 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b474:	4620      	mov	r0, r4
 800b476:	f7ff fc19 	bl	800acac <prvIsQueueEmpty>
 800b47a:	2800      	cmp	r0, #0
 800b47c:	d042      	beq.n	800b504 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800b47e:	6823      	ldr	r3, [r4, #0]
 800b480:	b93b      	cbnz	r3, 800b492 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800b482:	f7ff facf 	bl	800aa24 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800b486:	68a0      	ldr	r0, [r4, #8]
 800b488:	f000 fd8e 	bl	800bfa8 <xTaskPriorityInherit>
 800b48c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800b48e:	f7ff fae9 	bl	800aa64 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800b492:	9901      	ldr	r1, [sp, #4]
 800b494:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b498:	f000 fcac 	bl	800bdf4 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800b49c:	4620      	mov	r0, r4
 800b49e:	f7ff fc5b 	bl	800ad58 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800b4a2:	f000 fbd5 	bl	800bc50 <xTaskResumeAll>
 800b4a6:	b948      	cbnz	r0, 800b4bc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800b4a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b4ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b4b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b4b4:	f3bf 8f4f 	dsb	sy
 800b4b8:	f3bf 8f6f 	isb	sy
 800b4bc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800b4be:	f7ff fab1 	bl	800aa24 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800b4c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800b4c4:	2b00      	cmp	r3, #0
 800b4c6:	d0a8      	beq.n	800b41a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800b4c8:	3b01      	subs	r3, #1
 800b4ca:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800b4cc:	6823      	ldr	r3, [r4, #0]
 800b4ce:	b913      	cbnz	r3, 800b4d6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800b4d0:	f000 fe42 	bl	800c158 <pvTaskIncrementMutexHeldCount>
 800b4d4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800b4d6:	6923      	ldr	r3, [r4, #16]
 800b4d8:	b173      	cbz	r3, 800b4f8 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800b4da:	f104 0010 	add.w	r0, r4, #16
 800b4de:	f000 fcc1 	bl	800be64 <xTaskRemoveFromEventList>
 800b4e2:	b148      	cbz	r0, 800b4f8 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800b4e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b4e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b4ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b4f0:	f3bf 8f4f 	dsb	sy
 800b4f4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800b4f8:	f7ff fab4 	bl	800aa64 <vPortExitCritical>
				return pdPASS;
 800b4fc:	2501      	movs	r5, #1
}
 800b4fe:	4628      	mov	r0, r5
 800b500:	b005      	add	sp, #20
 800b502:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800b504:	4620      	mov	r0, r4
 800b506:	f7ff fc27 	bl	800ad58 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800b50a:	f000 fba1 	bl	800bc50 <xTaskResumeAll>
 800b50e:	e7d5      	b.n	800b4bc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800b510:	4620      	mov	r0, r4
 800b512:	f7ff fc21 	bl	800ad58 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800b516:	f000 fb9b 	bl	800bc50 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800b51a:	4620      	mov	r0, r4
 800b51c:	f7ff fbc6 	bl	800acac <prvIsQueueEmpty>
 800b520:	2800      	cmp	r0, #0
 800b522:	d0cb      	beq.n	800b4bc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800b524:	2d00      	cmp	r5, #0
 800b526:	d0ea      	beq.n	800b4fe <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800b528:	f7ff fa7c 	bl	800aa24 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800b52c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b52e:	b119      	cbz	r1, 800b538 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800b530:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b532:	6819      	ldr	r1, [r3, #0]
 800b534:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800b538:	68a0      	ldr	r0, [r4, #8]
 800b53a:	f000 fdbb 	bl	800c0b4 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800b53e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800b540:	f7ff fa90 	bl	800aa64 <vPortExitCritical>
 800b544:	e7db      	b.n	800b4fe <xQueueSemaphoreTake+0x13e>

0800b546 <xQueueReceiveFromISR>:
{
 800b546:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b54a:	4689      	mov	r9, r1
 800b54c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800b54e:	4605      	mov	r5, r0
 800b550:	b940      	cbnz	r0, 800b564 <xQueueReceiveFromISR+0x1e>
 800b552:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b556:	f383 8811 	msr	BASEPRI, r3
 800b55a:	f3bf 8f6f 	isb	sy
 800b55e:	f3bf 8f4f 	dsb	sy
 800b562:	e7fe      	b.n	800b562 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800b564:	b951      	cbnz	r1, 800b57c <xQueueReceiveFromISR+0x36>
 800b566:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b568:	b143      	cbz	r3, 800b57c <xQueueReceiveFromISR+0x36>
 800b56a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b56e:	f383 8811 	msr	BASEPRI, r3
 800b572:	f3bf 8f6f 	isb	sy
 800b576:	f3bf 8f4f 	dsb	sy
 800b57a:	e7fe      	b.n	800b57a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800b57c:	f7ff fb68 	bl	800ac50 <vPortValidateInterruptPriority>
	__asm volatile
 800b580:	f3ef 8711 	mrs	r7, BASEPRI
 800b584:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b588:	f383 8811 	msr	BASEPRI, r3
 800b58c:	f3bf 8f6f 	isb	sy
 800b590:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800b594:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800b596:	b31c      	cbz	r4, 800b5e0 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800b598:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b59c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800b59e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800b5a0:	4628      	mov	r0, r5
 800b5a2:	f7ff fbc3 	bl	800ad2c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b5a6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800b5a8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800b5aa:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800b5ac:	d113      	bne.n	800b5d6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800b5ae:	692b      	ldr	r3, [r5, #16]
 800b5b0:	b90b      	cbnz	r3, 800b5b6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800b5b2:	2001      	movs	r0, #1
 800b5b4:	e00b      	b.n	800b5ce <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800b5b6:	f105 0010 	add.w	r0, r5, #16
 800b5ba:	f000 fc53 	bl	800be64 <xTaskRemoveFromEventList>
 800b5be:	2800      	cmp	r0, #0
 800b5c0:	d0f7      	beq.n	800b5b2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800b5c2:	f1b8 0f00 	cmp.w	r8, #0
 800b5c6:	d0f4      	beq.n	800b5b2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800b5c8:	2001      	movs	r0, #1
 800b5ca:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800b5ce:	f387 8811 	msr	BASEPRI, r7
}
 800b5d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800b5d6:	3601      	adds	r6, #1
 800b5d8:	b276      	sxtb	r6, r6
 800b5da:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800b5de:	e7e8      	b.n	800b5b2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800b5e0:	4620      	mov	r0, r4
 800b5e2:	e7f4      	b.n	800b5ce <xQueueReceiveFromISR+0x88>

0800b5e4 <uxQueueMessagesWaiting>:
{
 800b5e4:	b513      	push	{r0, r1, r4, lr}
	configASSERT( xQueue );
 800b5e6:	4604      	mov	r4, r0
 800b5e8:	b940      	cbnz	r0, 800b5fc <uxQueueMessagesWaiting+0x18>
	__asm volatile
 800b5ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b5ee:	f383 8811 	msr	BASEPRI, r3
 800b5f2:	f3bf 8f6f 	isb	sy
 800b5f6:	f3bf 8f4f 	dsb	sy
 800b5fa:	e7fe      	b.n	800b5fa <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 800b5fc:	f7ff fa12 	bl	800aa24 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800b600:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b602:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800b604:	f7ff fa2e 	bl	800aa64 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800b608:	9801      	ldr	r0, [sp, #4]
 800b60a:	b002      	add	sp, #8
 800b60c:	bd10      	pop	{r4, pc}

0800b60e <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800b60e:	b940      	cbnz	r0, 800b622 <uxQueueMessagesWaitingFromISR+0x14>
 800b610:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b614:	f383 8811 	msr	BASEPRI, r3
 800b618:	f3bf 8f6f 	isb	sy
 800b61c:	f3bf 8f4f 	dsb	sy
 800b620:	e7fe      	b.n	800b620 <uxQueueMessagesWaitingFromISR+0x12>
	uxReturn = pxQueue->uxMessagesWaiting;
 800b622:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800b624:	4770      	bx	lr
	...

0800b628 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800b628:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800b62a:	4a07      	ldr	r2, [pc, #28]	; (800b648 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b62c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800b62e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800b632:	b92c      	cbnz	r4, 800b640 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800b634:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800b638:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800b63c:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800b63e:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b640:	3301      	adds	r3, #1
 800b642:	2b08      	cmp	r3, #8
 800b644:	d1f3      	bne.n	800b62e <vQueueAddToRegistry+0x6>
 800b646:	e7fa      	b.n	800b63e <vQueueAddToRegistry+0x16>
 800b648:	20014960 	.word	0x20014960

0800b64c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800b64c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800b64e:	4a08      	ldr	r2, [pc, #32]	; (800b670 <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b650:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800b652:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800b656:	684c      	ldr	r4, [r1, #4]
 800b658:	4284      	cmp	r4, r0
 800b65a:	d104      	bne.n	800b666 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800b65c:	2000      	movs	r0, #0
 800b65e:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800b662:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800b664:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800b666:	3301      	adds	r3, #1
 800b668:	2b08      	cmp	r3, #8
 800b66a:	d1f2      	bne.n	800b652 <vQueueUnregisterQueue+0x6>
 800b66c:	e7fa      	b.n	800b664 <vQueueUnregisterQueue+0x18>
 800b66e:	bf00      	nop
 800b670:	20014960 	.word	0x20014960

0800b674 <vQueueDelete>:
{
 800b674:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800b676:	4604      	mov	r4, r0
 800b678:	b940      	cbnz	r0, 800b68c <vQueueDelete+0x18>
 800b67a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b67e:	f383 8811 	msr	BASEPRI, r3
 800b682:	f3bf 8f6f 	isb	sy
 800b686:	f3bf 8f4f 	dsb	sy
 800b68a:	e7fe      	b.n	800b68a <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800b68c:	f7ff ffde 	bl	800b64c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800b690:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800b694:	b923      	cbnz	r3, 800b6a0 <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800b696:	4620      	mov	r0, r4
}
 800b698:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800b69c:	f7ff b8d8 	b.w	800a850 <vPortFree>
}
 800b6a0:	bd10      	pop	{r4, pc}

0800b6a2 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800b6a2:	b570      	push	{r4, r5, r6, lr}
 800b6a4:	4604      	mov	r4, r0
 800b6a6:	460d      	mov	r5, r1
 800b6a8:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800b6aa:	f7ff f9bb 	bl	800aa24 <vPortEnterCritical>
 800b6ae:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800b6b2:	2bff      	cmp	r3, #255	; 0xff
 800b6b4:	bf04      	itt	eq
 800b6b6:	2300      	moveq	r3, #0
 800b6b8:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800b6bc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800b6c0:	2bff      	cmp	r3, #255	; 0xff
 800b6c2:	bf04      	itt	eq
 800b6c4:	2300      	moveq	r3, #0
 800b6c6:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800b6ca:	f7ff f9cb 	bl	800aa64 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800b6ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b6d0:	b92b      	cbnz	r3, 800b6de <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800b6d2:	4632      	mov	r2, r6
 800b6d4:	4629      	mov	r1, r5
 800b6d6:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800b6da:	f000 fba5 	bl	800be28 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800b6de:	4620      	mov	r0, r4
	}
 800b6e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800b6e4:	f7ff bb38 	b.w	800ad58 <prvUnlockQueue>

0800b6e8 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800b6e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6ec:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800b6ee:	f7ff f999 	bl	800aa24 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800b6f2:	4b30      	ldr	r3, [pc, #192]	; (800b7b4 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800b6f4:	4e30      	ldr	r6, [pc, #192]	; (800b7b8 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800b6f6:	681a      	ldr	r2, [r3, #0]
 800b6f8:	4f30      	ldr	r7, [pc, #192]	; (800b7bc <prvAddNewTaskToReadyList+0xd4>)
 800b6fa:	3201      	adds	r2, #1
 800b6fc:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800b6fe:	6835      	ldr	r5, [r6, #0]
 800b700:	2d00      	cmp	r5, #0
 800b702:	d14b      	bne.n	800b79c <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800b704:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800b706:	681b      	ldr	r3, [r3, #0]
 800b708:	2b01      	cmp	r3, #1
 800b70a:	d11f      	bne.n	800b74c <prvAddNewTaskToReadyList+0x64>
 800b70c:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800b70e:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800b710:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800b712:	f7ff f8db 	bl	800a8cc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800b716:	2d38      	cmp	r5, #56	; 0x38
 800b718:	f108 0814 	add.w	r8, r8, #20
 800b71c:	d1f7      	bne.n	800b70e <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800b71e:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800b7e4 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800b722:	4d27      	ldr	r5, [pc, #156]	; (800b7c0 <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800b724:	4640      	mov	r0, r8
 800b726:	f7ff f8d1 	bl	800a8cc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800b72a:	4628      	mov	r0, r5
 800b72c:	f7ff f8ce 	bl	800a8cc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800b730:	4824      	ldr	r0, [pc, #144]	; (800b7c4 <prvAddNewTaskToReadyList+0xdc>)
 800b732:	f7ff f8cb 	bl	800a8cc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800b736:	4824      	ldr	r0, [pc, #144]	; (800b7c8 <prvAddNewTaskToReadyList+0xe0>)
 800b738:	f7ff f8c8 	bl	800a8cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800b73c:	4823      	ldr	r0, [pc, #140]	; (800b7cc <prvAddNewTaskToReadyList+0xe4>)
 800b73e:	f7ff f8c5 	bl	800a8cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800b742:	4b23      	ldr	r3, [pc, #140]	; (800b7d0 <prvAddNewTaskToReadyList+0xe8>)
 800b744:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800b748:	4b22      	ldr	r3, [pc, #136]	; (800b7d4 <prvAddNewTaskToReadyList+0xec>)
 800b74a:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800b74c:	4a22      	ldr	r2, [pc, #136]	; (800b7d8 <prvAddNewTaskToReadyList+0xf0>)
 800b74e:	6813      	ldr	r3, [r2, #0]
 800b750:	3301      	adds	r3, #1
 800b752:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800b754:	4a21      	ldr	r2, [pc, #132]	; (800b7dc <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800b756:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800b758:	6811      	ldr	r1, [r2, #0]
 800b75a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b75c:	2014      	movs	r0, #20
 800b75e:	428b      	cmp	r3, r1
 800b760:	fb00 7003 	mla	r0, r0, r3, r7
 800b764:	f104 0104 	add.w	r1, r4, #4
 800b768:	bf88      	it	hi
 800b76a:	6013      	strhi	r3, [r2, #0]
 800b76c:	f7ff f8bc 	bl	800a8e8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800b770:	f7ff f978 	bl	800aa64 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800b774:	4b1a      	ldr	r3, [pc, #104]	; (800b7e0 <prvAddNewTaskToReadyList+0xf8>)
 800b776:	681b      	ldr	r3, [r3, #0]
 800b778:	b173      	cbz	r3, 800b798 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800b77a:	6833      	ldr	r3, [r6, #0]
 800b77c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b77e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b780:	429a      	cmp	r2, r3
 800b782:	d209      	bcs.n	800b798 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800b784:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b788:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b78c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b790:	f3bf 8f4f 	dsb	sy
 800b794:	f3bf 8f6f 	isb	sy
}
 800b798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800b79c:	4b10      	ldr	r3, [pc, #64]	; (800b7e0 <prvAddNewTaskToReadyList+0xf8>)
 800b79e:	681b      	ldr	r3, [r3, #0]
 800b7a0:	2b00      	cmp	r3, #0
 800b7a2:	d1d3      	bne.n	800b74c <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800b7a4:	6833      	ldr	r3, [r6, #0]
 800b7a6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b7a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b7aa:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800b7ac:	bf98      	it	ls
 800b7ae:	6034      	strls	r4, [r6, #0]
 800b7b0:	e7cc      	b.n	800b74c <prvAddNewTaskToReadyList+0x64>
 800b7b2:	bf00      	nop
 800b7b4:	20014e0c 	.word	0x20014e0c
 800b7b8:	200149a0 	.word	0x200149a0
 800b7bc:	200149ac 	.word	0x200149ac
 800b7c0:	20014e34 	.word	0x20014e34
 800b7c4:	20014e54 	.word	0x20014e54
 800b7c8:	20014e80 	.word	0x20014e80
 800b7cc:	20014e6c 	.word	0x20014e6c
 800b7d0:	200149a4 	.word	0x200149a4
 800b7d4:	200149a8 	.word	0x200149a8
 800b7d8:	20014e18 	.word	0x20014e18
 800b7dc:	20014e1c 	.word	0x20014e1c
 800b7e0:	20014e68 	.word	0x20014e68
 800b7e4:	20014e20 	.word	0x20014e20

0800b7e8 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800b7e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800b7ea:	4b15      	ldr	r3, [pc, #84]	; (800b840 <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b7ec:	4e15      	ldr	r6, [pc, #84]	; (800b844 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800b7ee:	681d      	ldr	r5, [r3, #0]
{
 800b7f0:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b7f2:	6830      	ldr	r0, [r6, #0]
 800b7f4:	3004      	adds	r0, #4
{
 800b7f6:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b7f8:	f7ff f899 	bl	800a92e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800b7fc:	1c63      	adds	r3, r4, #1
 800b7fe:	d107      	bne.n	800b810 <prvAddCurrentTaskToDelayedList+0x28>
 800b800:	b137      	cbz	r7, 800b810 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b802:	6831      	ldr	r1, [r6, #0]
 800b804:	4810      	ldr	r0, [pc, #64]	; (800b848 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800b806:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b80a:	3104      	adds	r1, #4
 800b80c:	f7ff b86c 	b.w	800a8e8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800b810:	6833      	ldr	r3, [r6, #0]
 800b812:	192c      	adds	r4, r5, r4
 800b814:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800b816:	d307      	bcc.n	800b828 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b818:	4b0c      	ldr	r3, [pc, #48]	; (800b84c <prvAddCurrentTaskToDelayedList+0x64>)
 800b81a:	6818      	ldr	r0, [r3, #0]
 800b81c:	6831      	ldr	r1, [r6, #0]
}
 800b81e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b822:	3104      	adds	r1, #4
 800b824:	f7ff b86c 	b.w	800a900 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b828:	4b09      	ldr	r3, [pc, #36]	; (800b850 <prvAddCurrentTaskToDelayedList+0x68>)
 800b82a:	6818      	ldr	r0, [r3, #0]
 800b82c:	6831      	ldr	r1, [r6, #0]
 800b82e:	3104      	adds	r1, #4
 800b830:	f7ff f866 	bl	800a900 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800b834:	4b07      	ldr	r3, [pc, #28]	; (800b854 <prvAddCurrentTaskToDelayedList+0x6c>)
 800b836:	681a      	ldr	r2, [r3, #0]
 800b838:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800b83a:	bf88      	it	hi
 800b83c:	601c      	strhi	r4, [r3, #0]
}
 800b83e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b840:	20014e94 	.word	0x20014e94
 800b844:	200149a0 	.word	0x200149a0
 800b848:	20014e6c 	.word	0x20014e6c
 800b84c:	200149a8 	.word	0x200149a8
 800b850:	200149a4 	.word	0x200149a4
 800b854:	20014e48 	.word	0x20014e48

0800b858 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800b858:	4a06      	ldr	r2, [pc, #24]	; (800b874 <prvResetNextTaskUnblockTime+0x1c>)
 800b85a:	6813      	ldr	r3, [r2, #0]
 800b85c:	6819      	ldr	r1, [r3, #0]
 800b85e:	4b06      	ldr	r3, [pc, #24]	; (800b878 <prvResetNextTaskUnblockTime+0x20>)
 800b860:	b919      	cbnz	r1, 800b86a <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800b862:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800b866:	601a      	str	r2, [r3, #0]
}
 800b868:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b86a:	6812      	ldr	r2, [r2, #0]
 800b86c:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800b86e:	68d2      	ldr	r2, [r2, #12]
 800b870:	6852      	ldr	r2, [r2, #4]
 800b872:	e7f8      	b.n	800b866 <prvResetNextTaskUnblockTime+0xe>
 800b874:	200149a4 	.word	0x200149a4
 800b878:	20014e48 	.word	0x20014e48

0800b87c <prvDeleteTCB>:
	{
 800b87c:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800b87e:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800b882:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800b884:	b93b      	cbnz	r3, 800b896 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800b886:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800b888:	f7fe ffe2 	bl	800a850 <vPortFree>
				vPortFree( pxTCB );
 800b88c:	4620      	mov	r0, r4
	}
 800b88e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800b892:	f7fe bfdd 	b.w	800a850 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800b896:	2b01      	cmp	r3, #1
 800b898:	d0f9      	beq.n	800b88e <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800b89a:	2b02      	cmp	r3, #2
 800b89c:	d008      	beq.n	800b8b0 <prvDeleteTCB+0x34>
 800b89e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b8a2:	f383 8811 	msr	BASEPRI, r3
 800b8a6:	f3bf 8f6f 	isb	sy
 800b8aa:	f3bf 8f4f 	dsb	sy
 800b8ae:	e7fe      	b.n	800b8ae <prvDeleteTCB+0x32>
	}
 800b8b0:	bd10      	pop	{r4, pc}
	...

0800b8b4 <prvIdleTask>:
{
 800b8b4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b8b6:	4c13      	ldr	r4, [pc, #76]	; (800b904 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b8b8:	4f13      	ldr	r7, [pc, #76]	; (800b908 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 800b8ba:	4d14      	ldr	r5, [pc, #80]	; (800b90c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800b8bc:	6823      	ldr	r3, [r4, #0]
 800b8be:	b973      	cbnz	r3, 800b8de <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800b8c0:	4b13      	ldr	r3, [pc, #76]	; (800b910 <prvIdleTask+0x5c>)
 800b8c2:	681b      	ldr	r3, [r3, #0]
 800b8c4:	2b01      	cmp	r3, #1
 800b8c6:	d9f8      	bls.n	800b8ba <prvIdleTask+0x6>
				taskYIELD();
 800b8c8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b8cc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b8d0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b8d4:	f3bf 8f4f 	dsb	sy
 800b8d8:	f3bf 8f6f 	isb	sy
 800b8dc:	e7ed      	b.n	800b8ba <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800b8de:	f7ff f8a1 	bl	800aa24 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b8e2:	68fb      	ldr	r3, [r7, #12]
 800b8e4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b8e6:	1d30      	adds	r0, r6, #4
 800b8e8:	f7ff f821 	bl	800a92e <uxListRemove>
				--uxCurrentNumberOfTasks;
 800b8ec:	682b      	ldr	r3, [r5, #0]
 800b8ee:	3b01      	subs	r3, #1
 800b8f0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800b8f2:	6823      	ldr	r3, [r4, #0]
 800b8f4:	3b01      	subs	r3, #1
 800b8f6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800b8f8:	f7ff f8b4 	bl	800aa64 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800b8fc:	4630      	mov	r0, r6
 800b8fe:	f7ff ffbd 	bl	800b87c <prvDeleteTCB>
 800b902:	e7db      	b.n	800b8bc <prvIdleTask+0x8>
 800b904:	20014e10 	.word	0x20014e10
 800b908:	20014e80 	.word	0x20014e80
 800b90c:	20014e0c 	.word	0x20014e0c
 800b910:	200149ac 	.word	0x200149ac

0800b914 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b914:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b918:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b91c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800b920:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b922:	4606      	mov	r6, r0
 800b924:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b926:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800b928:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800b92a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800b92c:	f016 f80a 	bl	8021944 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800b930:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b932:	f1a9 0904 	sub.w	r9, r9, #4
 800b936:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800b938:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800b93c:	b3b5      	cbz	r5, 800b9ac <prvInitialiseNewTask.constprop.0+0x98>
 800b93e:	1e6b      	subs	r3, r5, #1
 800b940:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800b944:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800b946:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800b94a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800b94e:	b108      	cbz	r0, 800b954 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800b950:	42ab      	cmp	r3, r5
 800b952:	d1f8      	bne.n	800b946 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800b954:	2300      	movs	r3, #0
 800b956:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800b95a:	9d08      	ldr	r5, [sp, #32]
 800b95c:	2d37      	cmp	r5, #55	; 0x37
 800b95e:	bf28      	it	cs
 800b960:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800b962:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800b966:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800b968:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b96a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800b96c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800b970:	f7fe ffb7 	bl	800a8e2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b974:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800b978:	f104 0018 	add.w	r0, r4, #24
 800b97c:	f7fe ffb1 	bl	800a8e2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800b980:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800b984:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b986:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800b988:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800b98a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800b98e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800b992:	463a      	mov	r2, r7
 800b994:	4631      	mov	r1, r6
 800b996:	4648      	mov	r0, r9
 800b998:	f7ff f818 	bl	800a9cc <pxPortInitialiseStack>
 800b99c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800b99e:	f1b8 0f00 	cmp.w	r8, #0
 800b9a2:	d001      	beq.n	800b9a8 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800b9a4:	f8c8 4000 	str.w	r4, [r8]
}
 800b9a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800b9ac:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800b9b0:	e7d3      	b.n	800b95a <prvInitialiseNewTask.constprop.0+0x46>

0800b9b2 <xTaskCreateStatic>:
	{
 800b9b2:	b570      	push	{r4, r5, r6, lr}
 800b9b4:	b086      	sub	sp, #24
 800b9b6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800b9ba:	b945      	cbnz	r5, 800b9ce <xTaskCreateStatic+0x1c>
 800b9bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b9c0:	f383 8811 	msr	BASEPRI, r3
 800b9c4:	f3bf 8f6f 	isb	sy
 800b9c8:	f3bf 8f4f 	dsb	sy
 800b9cc:	e7fe      	b.n	800b9cc <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800b9ce:	b944      	cbnz	r4, 800b9e2 <xTaskCreateStatic+0x30>
 800b9d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b9d4:	f383 8811 	msr	BASEPRI, r3
 800b9d8:	f3bf 8f6f 	isb	sy
 800b9dc:	f3bf 8f4f 	dsb	sy
 800b9e0:	e7fe      	b.n	800b9e0 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800b9e2:	2660      	movs	r6, #96	; 0x60
 800b9e4:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800b9e6:	9e05      	ldr	r6, [sp, #20]
 800b9e8:	2e60      	cmp	r6, #96	; 0x60
 800b9ea:	d008      	beq.n	800b9fe <xTaskCreateStatic+0x4c>
 800b9ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b9f0:	f383 8811 	msr	BASEPRI, r3
 800b9f4:	f3bf 8f6f 	isb	sy
 800b9f8:	f3bf 8f4f 	dsb	sy
 800b9fc:	e7fe      	b.n	800b9fc <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800b9fe:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ba00:	2502      	movs	r5, #2
 800ba02:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ba06:	ad04      	add	r5, sp, #16
 800ba08:	9501      	str	r5, [sp, #4]
 800ba0a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800ba0c:	9402      	str	r4, [sp, #8]
 800ba0e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ba10:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ba12:	f7ff ff7f 	bl	800b914 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ba16:	4620      	mov	r0, r4
 800ba18:	f7ff fe66 	bl	800b6e8 <prvAddNewTaskToReadyList>
	}
 800ba1c:	9804      	ldr	r0, [sp, #16]
 800ba1e:	b006      	add	sp, #24
 800ba20:	bd70      	pop	{r4, r5, r6, pc}

0800ba22 <xTaskCreate>:
	{
 800ba22:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ba26:	4607      	mov	r7, r0
 800ba28:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ba2a:	0090      	lsls	r0, r2, #2
	{
 800ba2c:	4688      	mov	r8, r1
 800ba2e:	4616      	mov	r6, r2
 800ba30:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ba32:	f7fe fe75 	bl	800a720 <pvPortMalloc>
			if( pxStack != NULL )
 800ba36:	4605      	mov	r5, r0
 800ba38:	b1e8      	cbz	r0, 800ba76 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ba3a:	2060      	movs	r0, #96	; 0x60
 800ba3c:	f7fe fe70 	bl	800a720 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ba40:	4604      	mov	r4, r0
 800ba42:	b1a8      	cbz	r0, 800ba70 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ba44:	2300      	movs	r3, #0
 800ba46:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ba4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800ba4c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ba4e:	9301      	str	r3, [sp, #4]
 800ba50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ba52:	9002      	str	r0, [sp, #8]
 800ba54:	9300      	str	r3, [sp, #0]
 800ba56:	4632      	mov	r2, r6
 800ba58:	464b      	mov	r3, r9
 800ba5a:	4641      	mov	r1, r8
 800ba5c:	4638      	mov	r0, r7
 800ba5e:	f7ff ff59 	bl	800b914 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ba62:	4620      	mov	r0, r4
 800ba64:	f7ff fe40 	bl	800b6e8 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ba68:	2001      	movs	r0, #1
	}
 800ba6a:	b005      	add	sp, #20
 800ba6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ba70:	4628      	mov	r0, r5
 800ba72:	f7fe feed 	bl	800a850 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ba76:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800ba7a:	e7f6      	b.n	800ba6a <xTaskCreate+0x48>

0800ba7c <vTaskStartScheduler>:
{
 800ba7c:	b510      	push	{r4, lr}
 800ba7e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ba80:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ba82:	aa07      	add	r2, sp, #28
 800ba84:	a906      	add	r1, sp, #24
 800ba86:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ba88:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ba8c:	f7fe fe0c 	bl	800a6a8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ba90:	9b05      	ldr	r3, [sp, #20]
 800ba92:	9302      	str	r3, [sp, #8]
 800ba94:	9b06      	ldr	r3, [sp, #24]
 800ba96:	9a07      	ldr	r2, [sp, #28]
 800ba98:	4916      	ldr	r1, [pc, #88]	; (800baf4 <vTaskStartScheduler+0x78>)
 800ba9a:	4817      	ldr	r0, [pc, #92]	; (800baf8 <vTaskStartScheduler+0x7c>)
 800ba9c:	e9cd 4300 	strd	r4, r3, [sp]
 800baa0:	4623      	mov	r3, r4
 800baa2:	f7ff ff86 	bl	800b9b2 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800baa6:	b318      	cbz	r0, 800baf0 <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 800baa8:	f000 fbb4 	bl	800c214 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800baac:	2801      	cmp	r0, #1
 800baae:	d114      	bne.n	800bada <vTaskStartScheduler+0x5e>
 800bab0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bab4:	f383 8811 	msr	BASEPRI, r3
 800bab8:	f3bf 8f6f 	isb	sy
 800babc:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800bac0:	4b0e      	ldr	r3, [pc, #56]	; (800bafc <vTaskStartScheduler+0x80>)
 800bac2:	f04f 32ff 	mov.w	r2, #4294967295
 800bac6:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800bac8:	4b0d      	ldr	r3, [pc, #52]	; (800bb00 <vTaskStartScheduler+0x84>)
 800baca:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800bacc:	4b0d      	ldr	r3, [pc, #52]	; (800bb04 <vTaskStartScheduler+0x88>)
 800bace:	601c      	str	r4, [r3, #0]
}
 800bad0:	b008      	add	sp, #32
 800bad2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800bad6:	f7ff b835 	b.w	800ab44 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800bada:	3001      	adds	r0, #1
 800badc:	d108      	bne.n	800baf0 <vTaskStartScheduler+0x74>
 800bade:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bae2:	f383 8811 	msr	BASEPRI, r3
 800bae6:	f3bf 8f6f 	isb	sy
 800baea:	f3bf 8f4f 	dsb	sy
 800baee:	e7fe      	b.n	800baee <vTaskStartScheduler+0x72>
}
 800baf0:	b008      	add	sp, #32
 800baf2:	bd10      	pop	{r4, pc}
 800baf4:	08024758 	.word	0x08024758
 800baf8:	0800b8b5 	.word	0x0800b8b5
 800bafc:	20014e48 	.word	0x20014e48
 800bb00:	20014e68 	.word	0x20014e68
 800bb04:	20014e94 	.word	0x20014e94

0800bb08 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800bb08:	4a02      	ldr	r2, [pc, #8]	; (800bb14 <vTaskSuspendAll+0xc>)
 800bb0a:	6813      	ldr	r3, [r2, #0]
 800bb0c:	3301      	adds	r3, #1
 800bb0e:	6013      	str	r3, [r2, #0]
}
 800bb10:	4770      	bx	lr
 800bb12:	bf00      	nop
 800bb14:	20014e14 	.word	0x20014e14

0800bb18 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800bb18:	4b01      	ldr	r3, [pc, #4]	; (800bb20 <xTaskGetTickCount+0x8>)
 800bb1a:	6818      	ldr	r0, [r3, #0]
}
 800bb1c:	4770      	bx	lr
 800bb1e:	bf00      	nop
 800bb20:	20014e94 	.word	0x20014e94

0800bb24 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800bb24:	4b3f      	ldr	r3, [pc, #252]	; (800bc24 <xTaskIncrementTick+0x100>)
 800bb26:	681b      	ldr	r3, [r3, #0]
{
 800bb28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800bb2c:	2b00      	cmp	r3, #0
 800bb2e:	d173      	bne.n	800bc18 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800bb30:	4b3d      	ldr	r3, [pc, #244]	; (800bc28 <xTaskIncrementTick+0x104>)
 800bb32:	681d      	ldr	r5, [r3, #0]
 800bb34:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800bb36:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800bb38:	b9bd      	cbnz	r5, 800bb6a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800bb3a:	4b3c      	ldr	r3, [pc, #240]	; (800bc2c <xTaskIncrementTick+0x108>)
 800bb3c:	681a      	ldr	r2, [r3, #0]
 800bb3e:	6812      	ldr	r2, [r2, #0]
 800bb40:	b142      	cbz	r2, 800bb54 <xTaskIncrementTick+0x30>
 800bb42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bb46:	f383 8811 	msr	BASEPRI, r3
 800bb4a:	f3bf 8f6f 	isb	sy
 800bb4e:	f3bf 8f4f 	dsb	sy
 800bb52:	e7fe      	b.n	800bb52 <xTaskIncrementTick+0x2e>
 800bb54:	4a36      	ldr	r2, [pc, #216]	; (800bc30 <xTaskIncrementTick+0x10c>)
 800bb56:	6819      	ldr	r1, [r3, #0]
 800bb58:	6810      	ldr	r0, [r2, #0]
 800bb5a:	6018      	str	r0, [r3, #0]
 800bb5c:	6011      	str	r1, [r2, #0]
 800bb5e:	4a35      	ldr	r2, [pc, #212]	; (800bc34 <xTaskIncrementTick+0x110>)
 800bb60:	6813      	ldr	r3, [r2, #0]
 800bb62:	3301      	adds	r3, #1
 800bb64:	6013      	str	r3, [r2, #0]
 800bb66:	f7ff fe77 	bl	800b858 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800bb6a:	4e33      	ldr	r6, [pc, #204]	; (800bc38 <xTaskIncrementTick+0x114>)
 800bb6c:	4f33      	ldr	r7, [pc, #204]	; (800bc3c <xTaskIncrementTick+0x118>)
 800bb6e:	6833      	ldr	r3, [r6, #0]
 800bb70:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800bc48 <xTaskIncrementTick+0x124>
 800bb74:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800bb76:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800bb7a:	d211      	bcs.n	800bba0 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800bb7c:	f8d8 3000 	ldr.w	r3, [r8]
 800bb80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bb82:	2214      	movs	r2, #20
 800bb84:	4353      	muls	r3, r2
 800bb86:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800bb88:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800bb8a:	4b2d      	ldr	r3, [pc, #180]	; (800bc40 <xTaskIncrementTick+0x11c>)
 800bb8c:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800bb8e:	bf28      	it	cs
 800bb90:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800bb92:	2b00      	cmp	r3, #0
 800bb94:	bf18      	it	ne
 800bb96:	2401      	movne	r4, #1
}
 800bb98:	4620      	mov	r0, r4
 800bb9a:	b003      	add	sp, #12
 800bb9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800bba0:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800bc2c <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800bba4:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800bc4c <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800bba8:	f8d9 3000 	ldr.w	r3, [r9]
 800bbac:	681b      	ldr	r3, [r3, #0]
 800bbae:	b91b      	cbnz	r3, 800bbb8 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bbb0:	f04f 33ff 	mov.w	r3, #4294967295
 800bbb4:	6033      	str	r3, [r6, #0]
					break;
 800bbb6:	e7e1      	b.n	800bb7c <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bbb8:	f8d9 3000 	ldr.w	r3, [r9]
 800bbbc:	68db      	ldr	r3, [r3, #12]
 800bbbe:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800bbc2:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800bbc6:	4295      	cmp	r5, r2
 800bbc8:	d201      	bcs.n	800bbce <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800bbca:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800bbcc:	e7d6      	b.n	800bb7c <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800bbce:	f10b 0104 	add.w	r1, fp, #4
 800bbd2:	4608      	mov	r0, r1
 800bbd4:	9101      	str	r1, [sp, #4]
 800bbd6:	f7fe feaa 	bl	800a92e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800bbda:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800bbde:	9901      	ldr	r1, [sp, #4]
 800bbe0:	b122      	cbz	r2, 800bbec <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800bbe2:	f10b 0018 	add.w	r0, fp, #24
 800bbe6:	f7fe fea2 	bl	800a92e <uxListRemove>
 800bbea:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800bbec:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800bbf0:	f8da 2000 	ldr.w	r2, [sl]
 800bbf4:	2314      	movs	r3, #20
 800bbf6:	4290      	cmp	r0, r2
 800bbf8:	bf88      	it	hi
 800bbfa:	f8ca 0000 	strhi.w	r0, [sl]
 800bbfe:	fb03 7000 	mla	r0, r3, r0, r7
 800bc02:	f7fe fe71 	bl	800a8e8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800bc06:	f8d8 1000 	ldr.w	r1, [r8]
 800bc0a:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800bc0e:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800bc10:	429a      	cmp	r2, r3
 800bc12:	bf28      	it	cs
 800bc14:	2401      	movcs	r4, #1
 800bc16:	e7c7      	b.n	800bba8 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800bc18:	4a0a      	ldr	r2, [pc, #40]	; (800bc44 <xTaskIncrementTick+0x120>)
 800bc1a:	6813      	ldr	r3, [r2, #0]
 800bc1c:	3301      	adds	r3, #1
 800bc1e:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800bc20:	2400      	movs	r4, #0
	return xSwitchRequired;
 800bc22:	e7b9      	b.n	800bb98 <xTaskIncrementTick+0x74>
 800bc24:	20014e14 	.word	0x20014e14
 800bc28:	20014e94 	.word	0x20014e94
 800bc2c:	200149a4 	.word	0x200149a4
 800bc30:	200149a8 	.word	0x200149a8
 800bc34:	20014e4c 	.word	0x20014e4c
 800bc38:	20014e48 	.word	0x20014e48
 800bc3c:	200149ac 	.word	0x200149ac
 800bc40:	20014e98 	.word	0x20014e98
 800bc44:	20014e50 	.word	0x20014e50
 800bc48:	200149a0 	.word	0x200149a0
 800bc4c:	20014e1c 	.word	0x20014e1c

0800bc50 <xTaskResumeAll>:
{
 800bc50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800bc52:	4c31      	ldr	r4, [pc, #196]	; (800bd18 <xTaskResumeAll+0xc8>)
 800bc54:	6823      	ldr	r3, [r4, #0]
 800bc56:	b943      	cbnz	r3, 800bc6a <xTaskResumeAll+0x1a>
 800bc58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc5c:	f383 8811 	msr	BASEPRI, r3
 800bc60:	f3bf 8f6f 	isb	sy
 800bc64:	f3bf 8f4f 	dsb	sy
 800bc68:	e7fe      	b.n	800bc68 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800bc6a:	f7fe fedb 	bl	800aa24 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800bc6e:	6823      	ldr	r3, [r4, #0]
 800bc70:	3b01      	subs	r3, #1
 800bc72:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800bc74:	6824      	ldr	r4, [r4, #0]
 800bc76:	b12c      	cbz	r4, 800bc84 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800bc78:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800bc7a:	f7fe fef3 	bl	800aa64 <vPortExitCritical>
}
 800bc7e:	4620      	mov	r0, r4
 800bc80:	b003      	add	sp, #12
 800bc82:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800bc84:	4b25      	ldr	r3, [pc, #148]	; (800bd1c <xTaskResumeAll+0xcc>)
 800bc86:	681b      	ldr	r3, [r3, #0]
 800bc88:	2b00      	cmp	r3, #0
 800bc8a:	d0f5      	beq.n	800bc78 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800bc8c:	4d24      	ldr	r5, [pc, #144]	; (800bd20 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800bc8e:	4e25      	ldr	r6, [pc, #148]	; (800bd24 <xTaskResumeAll+0xd4>)
 800bc90:	4f25      	ldr	r7, [pc, #148]	; (800bd28 <xTaskResumeAll+0xd8>)
 800bc92:	e01e      	b.n	800bcd2 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bc94:	68eb      	ldr	r3, [r5, #12]
 800bc96:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800bc98:	f104 0018 	add.w	r0, r4, #24
 800bc9c:	f7fe fe47 	bl	800a92e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800bca0:	1d21      	adds	r1, r4, #4
 800bca2:	4608      	mov	r0, r1
 800bca4:	9101      	str	r1, [sp, #4]
 800bca6:	f7fe fe42 	bl	800a92e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800bcaa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bcac:	6832      	ldr	r2, [r6, #0]
 800bcae:	9901      	ldr	r1, [sp, #4]
 800bcb0:	2014      	movs	r0, #20
 800bcb2:	4293      	cmp	r3, r2
 800bcb4:	fb00 7003 	mla	r0, r0, r3, r7
 800bcb8:	bf88      	it	hi
 800bcba:	6033      	strhi	r3, [r6, #0]
 800bcbc:	f7fe fe14 	bl	800a8e8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800bcc0:	4b1a      	ldr	r3, [pc, #104]	; (800bd2c <xTaskResumeAll+0xdc>)
 800bcc2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bcc4:	681b      	ldr	r3, [r3, #0]
 800bcc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bcc8:	429a      	cmp	r2, r3
 800bcca:	d302      	bcc.n	800bcd2 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800bccc:	4b18      	ldr	r3, [pc, #96]	; (800bd30 <xTaskResumeAll+0xe0>)
 800bcce:	2201      	movs	r2, #1
 800bcd0:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800bcd2:	682b      	ldr	r3, [r5, #0]
 800bcd4:	2b00      	cmp	r3, #0
 800bcd6:	d1dd      	bne.n	800bc94 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800bcd8:	b10c      	cbz	r4, 800bcde <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800bcda:	f7ff fdbd 	bl	800b858 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800bcde:	4d15      	ldr	r5, [pc, #84]	; (800bd34 <xTaskResumeAll+0xe4>)
 800bce0:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800bce2:	b144      	cbz	r4, 800bcf6 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800bce4:	4e12      	ldr	r6, [pc, #72]	; (800bd30 <xTaskResumeAll+0xe0>)
 800bce6:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800bce8:	f7ff ff1c 	bl	800bb24 <xTaskIncrementTick>
 800bcec:	b100      	cbz	r0, 800bcf0 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800bcee:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800bcf0:	3c01      	subs	r4, #1
 800bcf2:	d1f9      	bne.n	800bce8 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800bcf4:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800bcf6:	4b0e      	ldr	r3, [pc, #56]	; (800bd30 <xTaskResumeAll+0xe0>)
 800bcf8:	681b      	ldr	r3, [r3, #0]
 800bcfa:	2b00      	cmp	r3, #0
 800bcfc:	d0bc      	beq.n	800bc78 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800bcfe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bd02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bd06:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bd0a:	f3bf 8f4f 	dsb	sy
 800bd0e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800bd12:	2401      	movs	r4, #1
 800bd14:	e7b1      	b.n	800bc7a <xTaskResumeAll+0x2a>
 800bd16:	bf00      	nop
 800bd18:	20014e14 	.word	0x20014e14
 800bd1c:	20014e0c 	.word	0x20014e0c
 800bd20:	20014e54 	.word	0x20014e54
 800bd24:	20014e1c 	.word	0x20014e1c
 800bd28:	200149ac 	.word	0x200149ac
 800bd2c:	200149a0 	.word	0x200149a0
 800bd30:	20014e98 	.word	0x20014e98
 800bd34:	20014e50 	.word	0x20014e50

0800bd38 <vTaskDelay>:
	{
 800bd38:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800bd3a:	b950      	cbnz	r0, 800bd52 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800bd3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800bd40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bd44:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800bd48:	f3bf 8f4f 	dsb	sy
 800bd4c:	f3bf 8f6f 	isb	sy
	}
 800bd50:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800bd52:	4b0a      	ldr	r3, [pc, #40]	; (800bd7c <vTaskDelay+0x44>)
 800bd54:	6819      	ldr	r1, [r3, #0]
 800bd56:	b141      	cbz	r1, 800bd6a <vTaskDelay+0x32>
 800bd58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd5c:	f383 8811 	msr	BASEPRI, r3
 800bd60:	f3bf 8f6f 	isb	sy
 800bd64:	f3bf 8f4f 	dsb	sy
 800bd68:	e7fe      	b.n	800bd68 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800bd6a:	f7ff fecd 	bl	800bb08 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800bd6e:	f7ff fd3b 	bl	800b7e8 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800bd72:	f7ff ff6d 	bl	800bc50 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800bd76:	2800      	cmp	r0, #0
 800bd78:	d0e0      	beq.n	800bd3c <vTaskDelay+0x4>
 800bd7a:	e7e9      	b.n	800bd50 <vTaskDelay+0x18>
 800bd7c:	20014e14 	.word	0x20014e14

0800bd80 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800bd80:	4b17      	ldr	r3, [pc, #92]	; (800bde0 <vTaskSwitchContext+0x60>)
 800bd82:	681a      	ldr	r2, [r3, #0]
 800bd84:	4b17      	ldr	r3, [pc, #92]	; (800bde4 <vTaskSwitchContext+0x64>)
{
 800bd86:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800bd88:	b112      	cbz	r2, 800bd90 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800bd8a:	2201      	movs	r2, #1
 800bd8c:	601a      	str	r2, [r3, #0]
}
 800bd8e:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bd90:	4d15      	ldr	r5, [pc, #84]	; (800bde8 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800bd92:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bd94:	682a      	ldr	r2, [r5, #0]
 800bd96:	4915      	ldr	r1, [pc, #84]	; (800bdec <vTaskSwitchContext+0x6c>)
 800bd98:	2614      	movs	r6, #20
 800bd9a:	fb06 f302 	mul.w	r3, r6, r2
 800bd9e:	18c8      	adds	r0, r1, r3
 800bda0:	58cc      	ldr	r4, [r1, r3]
 800bda2:	b18c      	cbz	r4, 800bdc8 <vTaskSwitchContext+0x48>
 800bda4:	6844      	ldr	r4, [r0, #4]
 800bda6:	3308      	adds	r3, #8
 800bda8:	6864      	ldr	r4, [r4, #4]
 800bdaa:	6044      	str	r4, [r0, #4]
 800bdac:	440b      	add	r3, r1
 800bdae:	429c      	cmp	r4, r3
 800bdb0:	bf04      	itt	eq
 800bdb2:	6863      	ldreq	r3, [r4, #4]
 800bdb4:	6043      	streq	r3, [r0, #4]
 800bdb6:	2314      	movs	r3, #20
 800bdb8:	fb03 1102 	mla	r1, r3, r2, r1
 800bdbc:	684b      	ldr	r3, [r1, #4]
 800bdbe:	68d9      	ldr	r1, [r3, #12]
 800bdc0:	4b0b      	ldr	r3, [pc, #44]	; (800bdf0 <vTaskSwitchContext+0x70>)
 800bdc2:	6019      	str	r1, [r3, #0]
 800bdc4:	602a      	str	r2, [r5, #0]
}
 800bdc6:	e7e2      	b.n	800bd8e <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800bdc8:	b942      	cbnz	r2, 800bddc <vTaskSwitchContext+0x5c>
 800bdca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bdce:	f383 8811 	msr	BASEPRI, r3
 800bdd2:	f3bf 8f6f 	isb	sy
 800bdd6:	f3bf 8f4f 	dsb	sy
 800bdda:	e7fe      	b.n	800bdda <vTaskSwitchContext+0x5a>
 800bddc:	3a01      	subs	r2, #1
 800bdde:	e7dc      	b.n	800bd9a <vTaskSwitchContext+0x1a>
 800bde0:	20014e14 	.word	0x20014e14
 800bde4:	20014e98 	.word	0x20014e98
 800bde8:	20014e1c 	.word	0x20014e1c
 800bdec:	200149ac 	.word	0x200149ac
 800bdf0:	200149a0 	.word	0x200149a0

0800bdf4 <vTaskPlaceOnEventList>:
{
 800bdf4:	b510      	push	{r4, lr}
 800bdf6:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800bdf8:	b940      	cbnz	r0, 800be0c <vTaskPlaceOnEventList+0x18>
 800bdfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bdfe:	f383 8811 	msr	BASEPRI, r3
 800be02:	f3bf 8f6f 	isb	sy
 800be06:	f3bf 8f4f 	dsb	sy
 800be0a:	e7fe      	b.n	800be0a <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800be0c:	4b05      	ldr	r3, [pc, #20]	; (800be24 <vTaskPlaceOnEventList+0x30>)
 800be0e:	6819      	ldr	r1, [r3, #0]
 800be10:	3118      	adds	r1, #24
 800be12:	f7fe fd75 	bl	800a900 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800be16:	4620      	mov	r0, r4
 800be18:	2101      	movs	r1, #1
}
 800be1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800be1e:	f7ff bce3 	b.w	800b7e8 <prvAddCurrentTaskToDelayedList>
 800be22:	bf00      	nop
 800be24:	200149a0 	.word	0x200149a0

0800be28 <vTaskPlaceOnEventListRestricted>:
	{
 800be28:	b538      	push	{r3, r4, r5, lr}
 800be2a:	460d      	mov	r5, r1
 800be2c:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800be2e:	b940      	cbnz	r0, 800be42 <vTaskPlaceOnEventListRestricted+0x1a>
 800be30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be34:	f383 8811 	msr	BASEPRI, r3
 800be38:	f3bf 8f6f 	isb	sy
 800be3c:	f3bf 8f4f 	dsb	sy
 800be40:	e7fe      	b.n	800be40 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800be42:	4b07      	ldr	r3, [pc, #28]	; (800be60 <vTaskPlaceOnEventListRestricted+0x38>)
 800be44:	6819      	ldr	r1, [r3, #0]
 800be46:	3118      	adds	r1, #24
 800be48:	f7fe fd4e 	bl	800a8e8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800be4c:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800be4e:	4621      	mov	r1, r4
 800be50:	bf0c      	ite	eq
 800be52:	4628      	moveq	r0, r5
 800be54:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800be58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800be5c:	f7ff bcc4 	b.w	800b7e8 <prvAddCurrentTaskToDelayedList>
 800be60:	200149a0 	.word	0x200149a0

0800be64 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800be64:	68c3      	ldr	r3, [r0, #12]
{
 800be66:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800be68:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800be6a:	b944      	cbnz	r4, 800be7e <xTaskRemoveFromEventList+0x1a>
 800be6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800be70:	f383 8811 	msr	BASEPRI, r3
 800be74:	f3bf 8f6f 	isb	sy
 800be78:	f3bf 8f4f 	dsb	sy
 800be7c:	e7fe      	b.n	800be7c <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800be7e:	f104 0118 	add.w	r1, r4, #24
 800be82:	4608      	mov	r0, r1
 800be84:	9101      	str	r1, [sp, #4]
 800be86:	f7fe fd52 	bl	800a92e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800be8a:	4b12      	ldr	r3, [pc, #72]	; (800bed4 <xTaskRemoveFromEventList+0x70>)
 800be8c:	9901      	ldr	r1, [sp, #4]
 800be8e:	681b      	ldr	r3, [r3, #0]
 800be90:	b9eb      	cbnz	r3, 800bece <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800be92:	1d21      	adds	r1, r4, #4
 800be94:	4608      	mov	r0, r1
 800be96:	9101      	str	r1, [sp, #4]
 800be98:	f7fe fd49 	bl	800a92e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800be9c:	4a0e      	ldr	r2, [pc, #56]	; (800bed8 <xTaskRemoveFromEventList+0x74>)
 800be9e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bea0:	6810      	ldr	r0, [r2, #0]
 800bea2:	9901      	ldr	r1, [sp, #4]
 800bea4:	4283      	cmp	r3, r0
 800bea6:	bf88      	it	hi
 800bea8:	6013      	strhi	r3, [r2, #0]
 800beaa:	4a0c      	ldr	r2, [pc, #48]	; (800bedc <xTaskRemoveFromEventList+0x78>)
 800beac:	2014      	movs	r0, #20
 800beae:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800beb2:	f7fe fd19 	bl	800a8e8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800beb6:	4b0a      	ldr	r3, [pc, #40]	; (800bee0 <xTaskRemoveFromEventList+0x7c>)
 800beb8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800beba:	681b      	ldr	r3, [r3, #0]
 800bebc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bebe:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800bec0:	bf85      	ittet	hi
 800bec2:	4b08      	ldrhi	r3, [pc, #32]	; (800bee4 <xTaskRemoveFromEventList+0x80>)
 800bec4:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800bec6:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800bec8:	6018      	strhi	r0, [r3, #0]
}
 800beca:	b002      	add	sp, #8
 800becc:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800bece:	4806      	ldr	r0, [pc, #24]	; (800bee8 <xTaskRemoveFromEventList+0x84>)
 800bed0:	e7ef      	b.n	800beb2 <xTaskRemoveFromEventList+0x4e>
 800bed2:	bf00      	nop
 800bed4:	20014e14 	.word	0x20014e14
 800bed8:	20014e1c 	.word	0x20014e1c
 800bedc:	200149ac 	.word	0x200149ac
 800bee0:	200149a0 	.word	0x200149a0
 800bee4:	20014e98 	.word	0x20014e98
 800bee8:	20014e54 	.word	0x20014e54

0800beec <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800beec:	4b03      	ldr	r3, [pc, #12]	; (800befc <vTaskInternalSetTimeOutState+0x10>)
 800beee:	681b      	ldr	r3, [r3, #0]
 800bef0:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800bef2:	4b03      	ldr	r3, [pc, #12]	; (800bf00 <vTaskInternalSetTimeOutState+0x14>)
 800bef4:	681b      	ldr	r3, [r3, #0]
 800bef6:	6043      	str	r3, [r0, #4]
}
 800bef8:	4770      	bx	lr
 800befa:	bf00      	nop
 800befc:	20014e4c 	.word	0x20014e4c
 800bf00:	20014e94 	.word	0x20014e94

0800bf04 <xTaskCheckForTimeOut>:
{
 800bf04:	b570      	push	{r4, r5, r6, lr}
 800bf06:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800bf08:	4605      	mov	r5, r0
 800bf0a:	b940      	cbnz	r0, 800bf1e <xTaskCheckForTimeOut+0x1a>
 800bf0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bf10:	f383 8811 	msr	BASEPRI, r3
 800bf14:	f3bf 8f6f 	isb	sy
 800bf18:	f3bf 8f4f 	dsb	sy
 800bf1c:	e7fe      	b.n	800bf1c <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800bf1e:	b941      	cbnz	r1, 800bf32 <xTaskCheckForTimeOut+0x2e>
 800bf20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bf24:	f383 8811 	msr	BASEPRI, r3
 800bf28:	f3bf 8f6f 	isb	sy
 800bf2c:	f3bf 8f4f 	dsb	sy
 800bf30:	e7fe      	b.n	800bf30 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800bf32:	f7fe fd77 	bl	800aa24 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800bf36:	4b0f      	ldr	r3, [pc, #60]	; (800bf74 <xTaskCheckForTimeOut+0x70>)
 800bf38:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800bf3a:	6823      	ldr	r3, [r4, #0]
 800bf3c:	1c5a      	adds	r2, r3, #1
 800bf3e:	d010      	beq.n	800bf62 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800bf40:	480d      	ldr	r0, [pc, #52]	; (800bf78 <xTaskCheckForTimeOut+0x74>)
 800bf42:	682e      	ldr	r6, [r5, #0]
 800bf44:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800bf46:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800bf48:	4286      	cmp	r6, r0
 800bf4a:	d001      	beq.n	800bf50 <xTaskCheckForTimeOut+0x4c>
 800bf4c:	428a      	cmp	r2, r1
 800bf4e:	d90f      	bls.n	800bf70 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800bf50:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800bf52:	4283      	cmp	r3, r0
 800bf54:	d90a      	bls.n	800bf6c <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800bf56:	1a5b      	subs	r3, r3, r1
 800bf58:	4413      	add	r3, r2
 800bf5a:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800bf5c:	4628      	mov	r0, r5
 800bf5e:	f7ff ffc5 	bl	800beec <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800bf62:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800bf64:	f7fe fd7e 	bl	800aa64 <vPortExitCritical>
}
 800bf68:	4620      	mov	r0, r4
 800bf6a:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800bf6c:	2300      	movs	r3, #0
 800bf6e:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800bf70:	2401      	movs	r4, #1
 800bf72:	e7f7      	b.n	800bf64 <xTaskCheckForTimeOut+0x60>
 800bf74:	20014e94 	.word	0x20014e94
 800bf78:	20014e4c 	.word	0x20014e4c

0800bf7c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800bf7c:	4b01      	ldr	r3, [pc, #4]	; (800bf84 <vTaskMissedYield+0x8>)
 800bf7e:	2201      	movs	r2, #1
 800bf80:	601a      	str	r2, [r3, #0]
}
 800bf82:	4770      	bx	lr
 800bf84:	20014e98 	.word	0x20014e98

0800bf88 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800bf88:	4b05      	ldr	r3, [pc, #20]	; (800bfa0 <xTaskGetSchedulerState+0x18>)
 800bf8a:	681b      	ldr	r3, [r3, #0]
 800bf8c:	b133      	cbz	r3, 800bf9c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800bf8e:	4b05      	ldr	r3, [pc, #20]	; (800bfa4 <xTaskGetSchedulerState+0x1c>)
 800bf90:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800bf92:	2b00      	cmp	r3, #0
 800bf94:	bf0c      	ite	eq
 800bf96:	2002      	moveq	r0, #2
 800bf98:	2000      	movne	r0, #0
 800bf9a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800bf9c:	2001      	movs	r0, #1
	}
 800bf9e:	4770      	bx	lr
 800bfa0:	20014e68 	.word	0x20014e68
 800bfa4:	20014e14 	.word	0x20014e14

0800bfa8 <xTaskPriorityInherit>:
	{
 800bfa8:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800bfaa:	4604      	mov	r4, r0
 800bfac:	b348      	cbz	r0, 800c002 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800bfae:	4d1c      	ldr	r5, [pc, #112]	; (800c020 <xTaskPriorityInherit+0x78>)
 800bfb0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bfb2:	682a      	ldr	r2, [r5, #0]
 800bfb4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800bfb6:	4293      	cmp	r3, r2
 800bfb8:	d229      	bcs.n	800c00e <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bfba:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800bfbc:	4e19      	ldr	r6, [pc, #100]	; (800c024 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800bfbe:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800bfc0:	bfa1      	itttt	ge
 800bfc2:	682a      	ldrge	r2, [r5, #0]
 800bfc4:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800bfc6:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800bfca:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800bfcc:	2214      	movs	r2, #20
 800bfce:	fb02 6303 	mla	r3, r2, r3, r6
 800bfd2:	6942      	ldr	r2, [r0, #20]
 800bfd4:	429a      	cmp	r2, r3
 800bfd6:	d116      	bne.n	800c006 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800bfd8:	1d01      	adds	r1, r0, #4
 800bfda:	4608      	mov	r0, r1
 800bfdc:	9101      	str	r1, [sp, #4]
 800bfde:	f7fe fca6 	bl	800a92e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800bfe2:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800bfe4:	4a10      	ldr	r2, [pc, #64]	; (800c028 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800bfe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800bfe8:	6810      	ldr	r0, [r2, #0]
 800bfea:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800bfec:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800bfee:	4283      	cmp	r3, r0
 800bff0:	f04f 0014 	mov.w	r0, #20
 800bff4:	fb00 6003 	mla	r0, r0, r3, r6
 800bff8:	bf88      	it	hi
 800bffa:	6013      	strhi	r3, [r2, #0]
 800bffc:	f7fe fc74 	bl	800a8e8 <vListInsertEnd>
				xReturn = pdTRUE;
 800c000:	2001      	movs	r0, #1
	}
 800c002:	b002      	add	sp, #8
 800c004:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800c006:	682b      	ldr	r3, [r5, #0]
 800c008:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c00a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800c00c:	e7f8      	b.n	800c000 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800c00e:	682b      	ldr	r3, [r5, #0]
 800c010:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800c012:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800c014:	42a0      	cmp	r0, r4
 800c016:	bf2c      	ite	cs
 800c018:	2000      	movcs	r0, #0
 800c01a:	2001      	movcc	r0, #1
 800c01c:	e7f1      	b.n	800c002 <xTaskPriorityInherit+0x5a>
 800c01e:	bf00      	nop
 800c020:	200149a0 	.word	0x200149a0
 800c024:	200149ac 	.word	0x200149ac
 800c028:	20014e1c 	.word	0x20014e1c

0800c02c <xTaskPriorityDisinherit>:
	{
 800c02c:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800c02e:	b910      	cbnz	r0, 800c036 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800c030:	2000      	movs	r0, #0
	}
 800c032:	b002      	add	sp, #8
 800c034:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800c036:	4b1c      	ldr	r3, [pc, #112]	; (800c0a8 <xTaskPriorityDisinherit+0x7c>)
 800c038:	681c      	ldr	r4, [r3, #0]
 800c03a:	4284      	cmp	r4, r0
 800c03c:	d008      	beq.n	800c050 <xTaskPriorityDisinherit+0x24>
 800c03e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c042:	f383 8811 	msr	BASEPRI, r3
 800c046:	f3bf 8f6f 	isb	sy
 800c04a:	f3bf 8f4f 	dsb	sy
 800c04e:	e7fe      	b.n	800c04e <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800c050:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800c052:	b943      	cbnz	r3, 800c066 <xTaskPriorityDisinherit+0x3a>
 800c054:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c058:	f383 8811 	msr	BASEPRI, r3
 800c05c:	f3bf 8f6f 	isb	sy
 800c060:	f3bf 8f4f 	dsb	sy
 800c064:	e7fe      	b.n	800c064 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800c066:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c068:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800c06a:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800c06c:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800c06e:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800c070:	d0de      	beq.n	800c030 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800c072:	2b00      	cmp	r3, #0
 800c074:	d1dc      	bne.n	800c030 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800c076:	1d21      	adds	r1, r4, #4
 800c078:	4608      	mov	r0, r1
 800c07a:	9101      	str	r1, [sp, #4]
 800c07c:	f7fe fc57 	bl	800a92e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800c080:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800c082:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800c084:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c086:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800c08a:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800c08c:	4a07      	ldr	r2, [pc, #28]	; (800c0ac <xTaskPriorityDisinherit+0x80>)
 800c08e:	6810      	ldr	r0, [r2, #0]
 800c090:	4283      	cmp	r3, r0
 800c092:	bf88      	it	hi
 800c094:	6013      	strhi	r3, [r2, #0]
 800c096:	4a06      	ldr	r2, [pc, #24]	; (800c0b0 <xTaskPriorityDisinherit+0x84>)
 800c098:	2014      	movs	r0, #20
 800c09a:	fb00 2003 	mla	r0, r0, r3, r2
 800c09e:	f7fe fc23 	bl	800a8e8 <vListInsertEnd>
					xReturn = pdTRUE;
 800c0a2:	2001      	movs	r0, #1
		return xReturn;
 800c0a4:	e7c5      	b.n	800c032 <xTaskPriorityDisinherit+0x6>
 800c0a6:	bf00      	nop
 800c0a8:	200149a0 	.word	0x200149a0
 800c0ac:	20014e1c 	.word	0x20014e1c
 800c0b0:	200149ac 	.word	0x200149ac

0800c0b4 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800c0b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800c0b6:	4604      	mov	r4, r0
 800c0b8:	2800      	cmp	r0, #0
 800c0ba:	d044      	beq.n	800c146 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800c0bc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c0be:	b942      	cbnz	r2, 800c0d2 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800c0c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c0c4:	f383 8811 	msr	BASEPRI, r3
 800c0c8:	f3bf 8f6f 	isb	sy
 800c0cc:	f3bf 8f4f 	dsb	sy
 800c0d0:	e7fe      	b.n	800c0d0 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800c0d2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800c0d4:	4299      	cmp	r1, r3
 800c0d6:	bf38      	it	cc
 800c0d8:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800c0da:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800c0dc:	428b      	cmp	r3, r1
 800c0de:	d032      	beq.n	800c146 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800c0e0:	2a01      	cmp	r2, #1
 800c0e2:	d130      	bne.n	800c146 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800c0e4:	4a19      	ldr	r2, [pc, #100]	; (800c14c <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800c0e6:	6812      	ldr	r2, [r2, #0]
 800c0e8:	4282      	cmp	r2, r0
 800c0ea:	d108      	bne.n	800c0fe <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800c0ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c0f0:	f383 8811 	msr	BASEPRI, r3
 800c0f4:	f3bf 8f6f 	isb	sy
 800c0f8:	f3bf 8f4f 	dsb	sy
 800c0fc:	e7fe      	b.n	800c0fc <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800c0fe:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800c100:	4d13      	ldr	r5, [pc, #76]	; (800c150 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800c102:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800c104:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800c106:	f04f 0214 	mov.w	r2, #20
 800c10a:	fb02 5303 	mla	r3, r2, r3, r5
 800c10e:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c110:	bfa4      	itt	ge
 800c112:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800c116:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800c118:	429a      	cmp	r2, r3
 800c11a:	d114      	bne.n	800c146 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800c11c:	1d01      	adds	r1, r0, #4
 800c11e:	4608      	mov	r0, r1
 800c120:	9101      	str	r1, [sp, #4]
 800c122:	f7fe fc04 	bl	800a92e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800c126:	4a0b      	ldr	r2, [pc, #44]	; (800c154 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800c128:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c12a:	6810      	ldr	r0, [r2, #0]
 800c12c:	9901      	ldr	r1, [sp, #4]
 800c12e:	4283      	cmp	r3, r0
 800c130:	f04f 0014 	mov.w	r0, #20
 800c134:	fb00 5003 	mla	r0, r0, r3, r5
 800c138:	bf88      	it	hi
 800c13a:	6013      	strhi	r3, [r2, #0]
	}
 800c13c:	b003      	add	sp, #12
 800c13e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800c142:	f7fe bbd1 	b.w	800a8e8 <vListInsertEnd>
	}
 800c146:	b003      	add	sp, #12
 800c148:	bd30      	pop	{r4, r5, pc}
 800c14a:	bf00      	nop
 800c14c:	200149a0 	.word	0x200149a0
 800c150:	200149ac 	.word	0x200149ac
 800c154:	20014e1c 	.word	0x20014e1c

0800c158 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800c158:	4b04      	ldr	r3, [pc, #16]	; (800c16c <pvTaskIncrementMutexHeldCount+0x14>)
 800c15a:	681a      	ldr	r2, [r3, #0]
 800c15c:	b11a      	cbz	r2, 800c166 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800c15e:	6819      	ldr	r1, [r3, #0]
 800c160:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800c162:	3201      	adds	r2, #1
 800c164:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800c166:	6818      	ldr	r0, [r3, #0]
	}
 800c168:	4770      	bx	lr
 800c16a:	bf00      	nop
 800c16c:	200149a0 	.word	0x200149a0

0800c170 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800c170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800c172:	4c11      	ldr	r4, [pc, #68]	; (800c1b8 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800c174:	f7fe fc56 	bl	800aa24 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800c178:	6825      	ldr	r5, [r4, #0]
 800c17a:	b9bd      	cbnz	r5, 800c1ac <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800c17c:	4f0f      	ldr	r7, [pc, #60]	; (800c1bc <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800c17e:	4e10      	ldr	r6, [pc, #64]	; (800c1c0 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800c180:	4638      	mov	r0, r7
 800c182:	f7fe fba3 	bl	800a8cc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800c186:	4630      	mov	r0, r6
 800c188:	f7fe fba0 	bl	800a8cc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800c18c:	4b0d      	ldr	r3, [pc, #52]	; (800c1c4 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800c18e:	4a0e      	ldr	r2, [pc, #56]	; (800c1c8 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800c190:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800c192:	4b0e      	ldr	r3, [pc, #56]	; (800c1cc <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800c194:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800c196:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800c198:	200a      	movs	r0, #10
 800c19a:	4b0d      	ldr	r3, [pc, #52]	; (800c1d0 <prvCheckForValidListAndQueue+0x60>)
 800c19c:	9500      	str	r5, [sp, #0]
 800c19e:	f7fe fe52 	bl	800ae46 <xQueueGenericCreateStatic>
 800c1a2:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800c1a4:	b110      	cbz	r0, 800c1ac <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800c1a6:	490b      	ldr	r1, [pc, #44]	; (800c1d4 <prvCheckForValidListAndQueue+0x64>)
 800c1a8:	f7ff fa3e 	bl	800b628 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800c1ac:	b003      	add	sp, #12
 800c1ae:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800c1b2:	f7fe bc57 	b.w	800aa64 <vPortExitCritical>
 800c1b6:	bf00      	nop
 800c1b8:	20014fc0 	.word	0x20014fc0
 800c1bc:	20014f44 	.word	0x20014f44
 800c1c0:	20014f58 	.word	0x20014f58
 800c1c4:	20014e9c 	.word	0x20014e9c
 800c1c8:	20014ea4 	.word	0x20014ea4
 800c1cc:	20014ea0 	.word	0x20014ea0
 800c1d0:	20014f70 	.word	0x20014f70
 800c1d4:	0802475d 	.word	0x0802475d

0800c1d8 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800c1d8:	4291      	cmp	r1, r2
{
 800c1da:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800c1dc:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800c1de:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800c1e0:	d80a      	bhi.n	800c1f8 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800c1e2:	1ad2      	subs	r2, r2, r3
 800c1e4:	6983      	ldr	r3, [r0, #24]
 800c1e6:	429a      	cmp	r2, r3
 800c1e8:	d20d      	bcs.n	800c206 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800c1ea:	4b08      	ldr	r3, [pc, #32]	; (800c20c <prvInsertTimerInActiveList+0x34>)
 800c1ec:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c1ee:	6818      	ldr	r0, [r3, #0]
 800c1f0:	f7fe fb86 	bl	800a900 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800c1f4:	2000      	movs	r0, #0
}
 800c1f6:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800c1f8:	429a      	cmp	r2, r3
 800c1fa:	d201      	bcs.n	800c200 <prvInsertTimerInActiveList+0x28>
 800c1fc:	4299      	cmp	r1, r3
 800c1fe:	d202      	bcs.n	800c206 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c200:	4b03      	ldr	r3, [pc, #12]	; (800c210 <prvInsertTimerInActiveList+0x38>)
 800c202:	1d01      	adds	r1, r0, #4
 800c204:	e7f3      	b.n	800c1ee <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800c206:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800c208:	e7f5      	b.n	800c1f6 <prvInsertTimerInActiveList+0x1e>
 800c20a:	bf00      	nop
 800c20c:	20014ea0 	.word	0x20014ea0
 800c210:	20014e9c 	.word	0x20014e9c

0800c214 <xTimerCreateTimerTask>:
{
 800c214:	b510      	push	{r4, lr}
 800c216:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800c218:	f7ff ffaa 	bl	800c170 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800c21c:	4b12      	ldr	r3, [pc, #72]	; (800c268 <xTimerCreateTimerTask+0x54>)
 800c21e:	681b      	ldr	r3, [r3, #0]
 800c220:	b1b3      	cbz	r3, 800c250 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800c222:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800c224:	aa07      	add	r2, sp, #28
 800c226:	a906      	add	r1, sp, #24
 800c228:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800c22a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800c22e:	f7fe fa47 	bl	800a6c0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800c232:	9b05      	ldr	r3, [sp, #20]
 800c234:	9302      	str	r3, [sp, #8]
 800c236:	9b06      	ldr	r3, [sp, #24]
 800c238:	9301      	str	r3, [sp, #4]
 800c23a:	2302      	movs	r3, #2
 800c23c:	9300      	str	r3, [sp, #0]
 800c23e:	9a07      	ldr	r2, [sp, #28]
 800c240:	490a      	ldr	r1, [pc, #40]	; (800c26c <xTimerCreateTimerTask+0x58>)
 800c242:	480b      	ldr	r0, [pc, #44]	; (800c270 <xTimerCreateTimerTask+0x5c>)
 800c244:	4623      	mov	r3, r4
 800c246:	f7ff fbb4 	bl	800b9b2 <xTaskCreateStatic>
 800c24a:	4b0a      	ldr	r3, [pc, #40]	; (800c274 <xTimerCreateTimerTask+0x60>)
 800c24c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800c24e:	b940      	cbnz	r0, 800c262 <xTimerCreateTimerTask+0x4e>
 800c250:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c254:	f383 8811 	msr	BASEPRI, r3
 800c258:	f3bf 8f6f 	isb	sy
 800c25c:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800c260:	e7fe      	b.n	800c260 <xTimerCreateTimerTask+0x4c>
}
 800c262:	2001      	movs	r0, #1
 800c264:	b008      	add	sp, #32
 800c266:	bd10      	pop	{r4, pc}
 800c268:	20014fc0 	.word	0x20014fc0
 800c26c:	08024762 	.word	0x08024762
 800c270:	0800c37d 	.word	0x0800c37d
 800c274:	20014fc4 	.word	0x20014fc4

0800c278 <xTimerGenericCommand>:
{
 800c278:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c27a:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800c27c:	4604      	mov	r4, r0
{
 800c27e:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800c280:	b940      	cbnz	r0, 800c294 <xTimerGenericCommand+0x1c>
 800c282:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c286:	f383 8811 	msr	BASEPRI, r3
 800c28a:	f3bf 8f6f 	isb	sy
 800c28e:	f3bf 8f4f 	dsb	sy
 800c292:	e7fe      	b.n	800c292 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800c294:	4d0d      	ldr	r5, [pc, #52]	; (800c2cc <xTimerGenericCommand+0x54>)
 800c296:	6828      	ldr	r0, [r5, #0]
 800c298:	b180      	cbz	r0, 800c2bc <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800c29a:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800c29c:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800c2a0:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800c2a2:	dc0d      	bgt.n	800c2c0 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800c2a4:	f7ff fe70 	bl	800bf88 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800c2a8:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800c2aa:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800c2ac:	bf08      	it	eq
 800c2ae:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800c2b0:	6828      	ldr	r0, [r5, #0]
 800c2b2:	bf18      	it	ne
 800c2b4:	461a      	movne	r2, r3
 800c2b6:	4669      	mov	r1, sp
 800c2b8:	f7fe fe7a 	bl	800afb0 <xQueueGenericSend>
}
 800c2bc:	b004      	add	sp, #16
 800c2be:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800c2c0:	2300      	movs	r3, #0
 800c2c2:	4669      	mov	r1, sp
 800c2c4:	f7fe ff27 	bl	800b116 <xQueueGenericSendFromISR>
 800c2c8:	e7f8      	b.n	800c2bc <xTimerGenericCommand+0x44>
 800c2ca:	bf00      	nop
 800c2cc:	20014fc0 	.word	0x20014fc0

0800c2d0 <prvSampleTimeNow>:
{
 800c2d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800c2d4:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800c378 <prvSampleTimeNow+0xa8>
{
 800c2d8:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800c2da:	f7ff fc1d 	bl	800bb18 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800c2de:	f8d8 3000 	ldr.w	r3, [r8]
 800c2e2:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800c2e4:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800c2e6:	d940      	bls.n	800c36a <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800c2e8:	4f21      	ldr	r7, [pc, #132]	; (800c370 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800c2ea:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800c2ee:	683b      	ldr	r3, [r7, #0]
 800c2f0:	681a      	ldr	r2, [r3, #0]
 800c2f2:	b95a      	cbnz	r2, 800c30c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800c2f4:	4a1f      	ldr	r2, [pc, #124]	; (800c374 <prvSampleTimeNow+0xa4>)
 800c2f6:	6811      	ldr	r1, [r2, #0]
 800c2f8:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800c2fa:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800c2fc:	2301      	movs	r3, #1
}
 800c2fe:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800c300:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800c302:	f8c8 5000 	str.w	r5, [r8]
}
 800c306:	b004      	add	sp, #16
 800c308:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c30c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c30e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c310:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c314:	1d21      	adds	r1, r4, #4
 800c316:	4608      	mov	r0, r1
 800c318:	9103      	str	r1, [sp, #12]
 800c31a:	f7fe fb08 	bl	800a92e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c31e:	6a23      	ldr	r3, [r4, #32]
 800c320:	4620      	mov	r0, r4
 800c322:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c324:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c328:	9903      	ldr	r1, [sp, #12]
 800c32a:	f013 0f04 	tst.w	r3, #4
 800c32e:	d0de      	beq.n	800c2ee <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800c330:	69a3      	ldr	r3, [r4, #24]
 800c332:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800c334:	459a      	cmp	sl, r3
 800c336:	d205      	bcs.n	800c344 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c338:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800c33a:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800c33c:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800c33e:	f7fe fadf 	bl	800a900 <vListInsert>
 800c342:	e7d4      	b.n	800c2ee <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800c344:	2300      	movs	r3, #0
 800c346:	f8cd 9000 	str.w	r9, [sp]
 800c34a:	4652      	mov	r2, sl
 800c34c:	4619      	mov	r1, r3
 800c34e:	4620      	mov	r0, r4
 800c350:	f7ff ff92 	bl	800c278 <xTimerGenericCommand>
				configASSERT( xResult );
 800c354:	2800      	cmp	r0, #0
 800c356:	d1ca      	bne.n	800c2ee <prvSampleTimeNow+0x1e>
 800c358:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c35c:	f383 8811 	msr	BASEPRI, r3
 800c360:	f3bf 8f6f 	isb	sy
 800c364:	f3bf 8f4f 	dsb	sy
 800c368:	e7fe      	b.n	800c368 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800c36a:	2300      	movs	r3, #0
 800c36c:	e7c7      	b.n	800c2fe <prvSampleTimeNow+0x2e>
 800c36e:	bf00      	nop
 800c370:	20014e9c 	.word	0x20014e9c
 800c374:	20014ea0 	.word	0x20014ea0
 800c378:	20014f6c 	.word	0x20014f6c

0800c37c <prvTimerTask>:
{
 800c37c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c380:	4d6e      	ldr	r5, [pc, #440]	; (800c53c <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800c382:	4e6f      	ldr	r6, [pc, #444]	; (800c540 <prvTimerTask+0x1c4>)
{
 800c384:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c386:	682b      	ldr	r3, [r5, #0]
 800c388:	f8d3 8000 	ldr.w	r8, [r3]
 800c38c:	f1b8 0f00 	cmp.w	r8, #0
 800c390:	d035      	beq.n	800c3fe <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800c392:	68db      	ldr	r3, [r3, #12]
 800c394:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c398:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800c39a:	f7ff fbb5 	bl	800bb08 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c39e:	a804      	add	r0, sp, #16
 800c3a0:	f7ff ff96 	bl	800c2d0 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800c3a4:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c3a6:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800c3a8:	2b00      	cmp	r3, #0
 800c3aa:	d169      	bne.n	800c480 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800c3ac:	2c00      	cmp	r4, #0
 800c3ae:	d14c      	bne.n	800c44a <prvTimerTask+0xce>
 800c3b0:	4540      	cmp	r0, r8
 800c3b2:	d350      	bcc.n	800c456 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800c3b4:	f7ff fc4c 	bl	800bc50 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800c3b8:	682b      	ldr	r3, [r5, #0]
 800c3ba:	68db      	ldr	r3, [r3, #12]
 800c3bc:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c3be:	1d38      	adds	r0, r7, #4
 800c3c0:	f7fe fab5 	bl	800a92e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c3c4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800c3c8:	0758      	lsls	r0, r3, #29
 800c3ca:	d51a      	bpl.n	800c402 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800c3cc:	69b9      	ldr	r1, [r7, #24]
 800c3ce:	4643      	mov	r3, r8
 800c3d0:	464a      	mov	r2, r9
 800c3d2:	4441      	add	r1, r8
 800c3d4:	4638      	mov	r0, r7
 800c3d6:	f7ff feff 	bl	800c1d8 <prvInsertTimerInActiveList>
 800c3da:	b1b0      	cbz	r0, 800c40a <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800c3dc:	9400      	str	r4, [sp, #0]
 800c3de:	4623      	mov	r3, r4
 800c3e0:	4642      	mov	r2, r8
 800c3e2:	4621      	mov	r1, r4
 800c3e4:	4638      	mov	r0, r7
 800c3e6:	f7ff ff47 	bl	800c278 <xTimerGenericCommand>
			configASSERT( xResult );
 800c3ea:	b970      	cbnz	r0, 800c40a <prvTimerTask+0x8e>
 800c3ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c3f0:	f383 8811 	msr	BASEPRI, r3
 800c3f4:	f3bf 8f6f 	isb	sy
 800c3f8:	f3bf 8f4f 	dsb	sy
 800c3fc:	e7fe      	b.n	800c3fc <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800c3fe:	2401      	movs	r4, #1
 800c400:	e7cb      	b.n	800c39a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c402:	f023 0301 	bic.w	r3, r3, #1
 800c406:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c40a:	6a3b      	ldr	r3, [r7, #32]
 800c40c:	4638      	mov	r0, r7
 800c40e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800c410:	6830      	ldr	r0, [r6, #0]
 800c412:	2200      	movs	r2, #0
 800c414:	a904      	add	r1, sp, #16
 800c416:	f7fe ff34 	bl	800b282 <xQueueReceive>
 800c41a:	2800      	cmp	r0, #0
 800c41c:	d0b3      	beq.n	800c386 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800c41e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800c420:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800c422:	2b00      	cmp	r3, #0
 800c424:	db2f      	blt.n	800c486 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800c426:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800c428:	6963      	ldr	r3, [r4, #20]
 800c42a:	2b00      	cmp	r3, #0
 800c42c:	d132      	bne.n	800c494 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c42e:	a803      	add	r0, sp, #12
 800c430:	f7ff ff4e 	bl	800c2d0 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800c434:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800c436:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800c438:	2b09      	cmp	r3, #9
 800c43a:	d8e9      	bhi.n	800c410 <prvTimerTask+0x94>
 800c43c:	e8df f003 	tbb	[pc, r3]
 800c440:	572e2e2e 	.word	0x572e2e2e
 800c444:	2e2e765e 	.word	0x2e2e765e
 800c448:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800c44a:	4b3e      	ldr	r3, [pc, #248]	; (800c544 <prvTimerTask+0x1c8>)
 800c44c:	681b      	ldr	r3, [r3, #0]
 800c44e:	681c      	ldr	r4, [r3, #0]
 800c450:	fab4 f484 	clz	r4, r4
 800c454:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800c456:	6830      	ldr	r0, [r6, #0]
 800c458:	4622      	mov	r2, r4
 800c45a:	eba8 0109 	sub.w	r1, r8, r9
 800c45e:	f7ff f920 	bl	800b6a2 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800c462:	f7ff fbf5 	bl	800bc50 <xTaskResumeAll>
 800c466:	2800      	cmp	r0, #0
 800c468:	d1d2      	bne.n	800c410 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800c46a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c46e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c472:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c476:	f3bf 8f4f 	dsb	sy
 800c47a:	f3bf 8f6f 	isb	sy
 800c47e:	e7c7      	b.n	800c410 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800c480:	f7ff fbe6 	bl	800bc50 <xTaskResumeAll>
}
 800c484:	e7c4      	b.n	800c410 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800c486:	9b05      	ldr	r3, [sp, #20]
 800c488:	9907      	ldr	r1, [sp, #28]
 800c48a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800c48c:	9b04      	ldr	r3, [sp, #16]
 800c48e:	2b00      	cmp	r3, #0
 800c490:	dbbe      	blt.n	800c410 <prvTimerTask+0x94>
 800c492:	e7c8      	b.n	800c426 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800c494:	1d20      	adds	r0, r4, #4
 800c496:	f7fe fa4a 	bl	800a92e <uxListRemove>
 800c49a:	e7c8      	b.n	800c42e <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c49c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800c4a0:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c4a2:	f043 0301 	orr.w	r3, r3, #1
 800c4a6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800c4aa:	9b05      	ldr	r3, [sp, #20]
 800c4ac:	4620      	mov	r0, r4
 800c4ae:	4419      	add	r1, r3
 800c4b0:	f7ff fe92 	bl	800c1d8 <prvInsertTimerInActiveList>
 800c4b4:	2800      	cmp	r0, #0
 800c4b6:	d0ab      	beq.n	800c410 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800c4b8:	6a23      	ldr	r3, [r4, #32]
 800c4ba:	4620      	mov	r0, r4
 800c4bc:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800c4be:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c4c2:	0759      	lsls	r1, r3, #29
 800c4c4:	d5a4      	bpl.n	800c410 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800c4c6:	69a2      	ldr	r2, [r4, #24]
 800c4c8:	9905      	ldr	r1, [sp, #20]
 800c4ca:	2300      	movs	r3, #0
 800c4cc:	440a      	add	r2, r1
 800c4ce:	9300      	str	r3, [sp, #0]
 800c4d0:	4619      	mov	r1, r3
 800c4d2:	4620      	mov	r0, r4
 800c4d4:	f7ff fed0 	bl	800c278 <xTimerGenericCommand>
							configASSERT( xResult );
 800c4d8:	2800      	cmp	r0, #0
 800c4da:	d199      	bne.n	800c410 <prvTimerTask+0x94>
 800c4dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c4e0:	f383 8811 	msr	BASEPRI, r3
 800c4e4:	f3bf 8f6f 	isb	sy
 800c4e8:	f3bf 8f4f 	dsb	sy
 800c4ec:	e7fe      	b.n	800c4ec <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c4ee:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800c4f2:	f023 0301 	bic.w	r3, r3, #1
 800c4f6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800c4fa:	e789      	b.n	800c410 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800c4fc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c500:	f043 0301 	orr.w	r3, r3, #1
 800c504:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800c508:	9905      	ldr	r1, [sp, #20]
 800c50a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800c50c:	b941      	cbnz	r1, 800c520 <prvTimerTask+0x1a4>
 800c50e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c512:	f383 8811 	msr	BASEPRI, r3
 800c516:	f3bf 8f6f 	isb	sy
 800c51a:	f3bf 8f4f 	dsb	sy
 800c51e:	e7fe      	b.n	800c51e <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800c520:	4603      	mov	r3, r0
 800c522:	4401      	add	r1, r0
 800c524:	4620      	mov	r0, r4
 800c526:	f7ff fe57 	bl	800c1d8 <prvInsertTimerInActiveList>
					break;
 800c52a:	e771      	b.n	800c410 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800c52c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800c530:	079a      	lsls	r2, r3, #30
 800c532:	d4de      	bmi.n	800c4f2 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800c534:	4620      	mov	r0, r4
 800c536:	f7fe f98b 	bl	800a850 <vPortFree>
 800c53a:	e769      	b.n	800c410 <prvTimerTask+0x94>
 800c53c:	20014e9c 	.word	0x20014e9c
 800c540:	20014fc0 	.word	0x20014fc0
 800c544:	20014ea0 	.word	0x20014ea0

0800c548 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800c548:	8880      	ldrh	r0, [r0, #4]
 800c54a:	4770      	bx	lr

0800c54c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800c54c:	b570      	push	{r4, r5, r6, lr}
 800c54e:	6803      	ldr	r3, [r0, #0]
 800c550:	4605      	mov	r5, r0
 800c552:	460c      	mov	r4, r1
 800c554:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c556:	2100      	movs	r1, #0
 800c558:	4798      	blx	r3
 800c55a:	682b      	ldr	r3, [r5, #0]
 800c55c:	4606      	mov	r6, r0
 800c55e:	6a1b      	ldr	r3, [r3, #32]
 800c560:	4628      	mov	r0, r5
 800c562:	4798      	blx	r3
 800c564:	1ba4      	subs	r4, r4, r6
 800c566:	b2a4      	uxth	r4, r4
 800c568:	fbb4 f0f0 	udiv	r0, r4, r0
 800c56c:	bd70      	pop	{r4, r5, r6, pc}

0800c56e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800c56e:	2300      	movs	r3, #0
 800c570:	8083      	strh	r3, [r0, #4]
 800c572:	4770      	bx	lr

0800c574 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800c574:	b510      	push	{r4, lr}
 800c576:	6803      	ldr	r3, [r0, #0]
 800c578:	8881      	ldrh	r1, [r0, #4]
 800c57a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c57c:	4604      	mov	r4, r0
 800c57e:	4798      	blx	r3
 800c580:	88a3      	ldrh	r3, [r4, #4]
 800c582:	3301      	adds	r3, #1
 800c584:	80a3      	strh	r3, [r4, #4]
 800c586:	bd10      	pop	{r4, pc}

0800c588 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800c588:	6803      	ldr	r3, [r0, #0]
 800c58a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c58c:	4718      	bx	r3

0800c58e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800c58e:	4770      	bx	lr

0800c590 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800c590:	4a02      	ldr	r2, [pc, #8]	; (800c59c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800c592:	6002      	str	r2, [r0, #0]
 800c594:	2200      	movs	r2, #0
 800c596:	8082      	strh	r2, [r0, #4]
 800c598:	4770      	bx	lr
 800c59a:	bf00      	nop
 800c59c:	08024774 	.word	0x08024774

0800c5a0 <_ZN8touchgfx9Container13getFirstChildEv>:
 800c5a0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c5a2:	4770      	bx	lr

0800c5a4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800c5a4:	b510      	push	{r4, lr}
 800c5a6:	6803      	ldr	r3, [r0, #0]
 800c5a8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800c5ac:	4604      	mov	r4, r0
 800c5ae:	4798      	blx	r3
 800c5b0:	b110      	cbz	r0, 800c5b8 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800c5b2:	4620      	mov	r0, r4
 800c5b4:	f7f4 fdb0 	bl	8001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800c5b8:	bd10      	pop	{r4, pc}

0800c5ba <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>:
 800c5ba:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 800c5be:	4770      	bx	lr

0800c5c0 <_ZNK8touchgfx11BoxProgress8getColorEv>:
 800c5c0:	f8d0 00e0 	ldr.w	r0, [r0, #224]	; 0xe0
 800c5c4:	4770      	bx	lr

0800c5c6 <_ZN8touchgfx11BoxProgressD1Ev>:
 800c5c6:	4770      	bx	lr

0800c5c8 <_ZN8touchgfx11BoxProgressD0Ev>:
 800c5c8:	b510      	push	{r4, lr}
 800c5ca:	21e4      	movs	r1, #228	; 0xe4
 800c5cc:	4604      	mov	r4, r0
 800c5ce:	f015 f86d 	bl	80216ac <_ZdlPvj>
 800c5d2:	4620      	mov	r0, r4
 800c5d4:	bd10      	pop	{r4, pc}

0800c5d6 <_ZN8touchgfx11BoxProgress8setAlphaEh>:
 800c5d6:	b538      	push	{r3, r4, r5, lr}
 800c5d8:	4604      	mov	r4, r0
 800c5da:	460d      	mov	r5, r1
 800c5dc:	f000 f960 	bl	800c8a0 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800c5e0:	f884 50de 	strb.w	r5, [r4, #222]	; 0xde
 800c5e4:	bd38      	pop	{r3, r4, r5, pc}

0800c5e6 <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>:
 800c5e6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c5ea:	4617      	mov	r7, r2
 800c5ec:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 800c5f0:	9500      	str	r5, [sp, #0]
 800c5f2:	2200      	movs	r2, #0
 800c5f4:	4604      	mov	r4, r0
 800c5f6:	460e      	mov	r6, r1
 800c5f8:	30b8      	adds	r0, #184	; 0xb8
 800c5fa:	4611      	mov	r1, r2
 800c5fc:	4698      	mov	r8, r3
 800c5fe:	f7f5 fed2 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c602:	4643      	mov	r3, r8
 800c604:	463a      	mov	r2, r7
 800c606:	4631      	mov	r1, r6
 800c608:	4620      	mov	r0, r4
 800c60a:	9508      	str	r5, [sp, #32]
 800c60c:	b002      	add	sp, #8
 800c60e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c612:	f000 ba21 	b.w	800ca58 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0800c616 <_ZN8touchgfx11BoxProgress8setValueEi>:
 800c616:	b530      	push	{r4, r5, lr}
 800c618:	4604      	mov	r4, r0
 800c61a:	b085      	sub	sp, #20
 800c61c:	f000 f993 	bl	800c946 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800c620:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800c624:	2b03      	cmp	r3, #3
 800c626:	d814      	bhi.n	800c652 <_ZN8touchgfx11BoxProgress8setValueEi+0x3c>
 800c628:	e8df f003 	tbb	[pc, r3]
 800c62c:	10100202 	.word	0x10100202
 800c630:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800c634:	4620      	mov	r0, r4
 800c636:	f000 f9a8 	bl	800c98a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800c63a:	b200      	sxth	r0, r0
 800c63c:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800c640:	2b03      	cmp	r3, #3
 800c642:	d82f      	bhi.n	800c6a4 <_ZN8touchgfx11BoxProgress8setValueEi+0x8e>
 800c644:	e8df f003 	tbb	[pc, r3]
 800c648:	63413007 	.word	0x63413007
 800c64c:	f8b4 1062 	ldrh.w	r1, [r4, #98]	; 0x62
 800c650:	e7f0      	b.n	800c634 <_ZN8touchgfx11BoxProgress8setValueEi+0x1e>
 800c652:	2000      	movs	r0, #0
 800c654:	e7f2      	b.n	800c63c <_ZN8touchgfx11BoxProgress8setValueEi+0x26>
 800c656:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800c65a:	9300      	str	r3, [sp, #0]
 800c65c:	2200      	movs	r2, #0
 800c65e:	4603      	mov	r3, r0
 800c660:	4611      	mov	r1, r2
 800c662:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800c666:	f9b4 50c0 	ldrsh.w	r5, [r4, #192]	; 0xc0
 800c66a:	f7f5 fe9c 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c66e:	f9b4 30c0 	ldrsh.w	r3, [r4, #192]	; 0xc0
 800c672:	f9b4 20c2 	ldrsh.w	r2, [r4, #194]	; 0xc2
 800c676:	f8ad 200e 	strh.w	r2, [sp, #14]
 800c67a:	4629      	mov	r1, r5
 800c67c:	429d      	cmp	r5, r3
 800c67e:	eba5 0503 	sub.w	r5, r5, r3
 800c682:	bfa8      	it	ge
 800c684:	4619      	movge	r1, r3
 800c686:	2d00      	cmp	r5, #0
 800c688:	f8ad 1008 	strh.w	r1, [sp, #8]
 800c68c:	bfb8      	it	lt
 800c68e:	426d      	neglt	r5, r5
 800c690:	2100      	movs	r1, #0
 800c692:	f8ad 100a 	strh.w	r1, [sp, #10]
 800c696:	f8ad 500c 	strh.w	r5, [sp, #12]
 800c69a:	a902      	add	r1, sp, #8
 800c69c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800c6a0:	f005 fb0a 	bl	8011cb8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>
 800c6a4:	b005      	add	sp, #20
 800c6a6:	bd30      	pop	{r4, r5, pc}
 800c6a8:	8921      	ldrh	r1, [r4, #8]
 800c6aa:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800c6ae:	9300      	str	r3, [sp, #0]
 800c6b0:	1a09      	subs	r1, r1, r0
 800c6b2:	4603      	mov	r3, r0
 800c6b4:	2200      	movs	r2, #0
 800c6b6:	b209      	sxth	r1, r1
 800c6b8:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800c6bc:	f9b4 50bc 	ldrsh.w	r5, [r4, #188]	; 0xbc
 800c6c0:	f7f5 fe71 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c6c4:	f9b4 30bc 	ldrsh.w	r3, [r4, #188]	; 0xbc
 800c6c8:	e7d3      	b.n	800c672 <_ZN8touchgfx11BoxProgress8setValueEi+0x5c>
 800c6ca:	2200      	movs	r2, #0
 800c6cc:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800c6d0:	9000      	str	r0, [sp, #0]
 800c6d2:	4611      	mov	r1, r2
 800c6d4:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800c6d8:	f9b4 50c2 	ldrsh.w	r5, [r4, #194]	; 0xc2
 800c6dc:	f7f5 fe63 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c6e0:	f9b4 30c2 	ldrsh.w	r3, [r4, #194]	; 0xc2
 800c6e4:	f9b4 20c0 	ldrsh.w	r2, [r4, #192]	; 0xc0
 800c6e8:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c6ec:	2100      	movs	r1, #0
 800c6ee:	429d      	cmp	r5, r3
 800c6f0:	f8ad 1008 	strh.w	r1, [sp, #8]
 800c6f4:	4629      	mov	r1, r5
 800c6f6:	eba5 0503 	sub.w	r5, r5, r3
 800c6fa:	bfa8      	it	ge
 800c6fc:	4619      	movge	r1, r3
 800c6fe:	2d00      	cmp	r5, #0
 800c700:	bfb8      	it	lt
 800c702:	426d      	neglt	r5, r5
 800c704:	f8ad 100a 	strh.w	r1, [sp, #10]
 800c708:	f8ad 500e 	strh.w	r5, [sp, #14]
 800c70c:	e7c5      	b.n	800c69a <_ZN8touchgfx11BoxProgress8setValueEi+0x84>
 800c70e:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800c712:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800c716:	9000      	str	r0, [sp, #0]
 800c718:	1a12      	subs	r2, r2, r0
 800c71a:	b212      	sxth	r2, r2
 800c71c:	2100      	movs	r1, #0
 800c71e:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800c722:	f9b4 50be 	ldrsh.w	r5, [r4, #190]	; 0xbe
 800c726:	f7f5 fe3e 	bl	80023a6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800c72a:	f9b4 30be 	ldrsh.w	r3, [r4, #190]	; 0xbe
 800c72e:	e7d9      	b.n	800c6e4 <_ZN8touchgfx11BoxProgress8setValueEi+0xce>

0800c730 <_ZN8touchgfx11BoxProgressC1Ev>:
 800c730:	b510      	push	{r4, lr}
 800c732:	4604      	mov	r4, r0
 800c734:	f000 f85a 	bl	800c7ec <_ZN8touchgfx25AbstractDirectionProgressC1Ev>
 800c738:	2201      	movs	r2, #1
 800c73a:	f884 20dd 	strb.w	r2, [r4, #221]	; 0xdd
 800c73e:	4b16      	ldr	r3, [pc, #88]	; (800c798 <_ZN8touchgfx11BoxProgressC1Ev+0x68>)
 800c740:	4a16      	ldr	r2, [pc, #88]	; (800c79c <_ZN8touchgfx11BoxProgressC1Ev+0x6c>)
 800c742:	6023      	str	r3, [r4, #0]
 800c744:	f8c4 20b8 	str.w	r2, [r4, #184]	; 0xb8
 800c748:	2300      	movs	r3, #0
 800c74a:	22ff      	movs	r2, #255	; 0xff
 800c74c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800c750:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 800c754:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 800c758:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 800c75c:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800c760:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800c764:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800c768:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800c76c:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800c770:	e9c4 3333 	strd	r3, r3, [r4, #204]	; 0xcc
 800c774:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 800c778:	f8a4 30d8 	strh.w	r3, [r4, #216]	; 0xd8
 800c77c:	f8a4 30da 	strh.w	r3, [r4, #218]	; 0xda
 800c780:	f884 30dc 	strb.w	r3, [r4, #220]	; 0xdc
 800c784:	f884 20de 	strb.w	r2, [r4, #222]	; 0xde
 800c788:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 800c78c:	f104 01b8 	add.w	r1, r4, #184	; 0xb8
 800c790:	f000 f9ee 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c794:	4620      	mov	r0, r4
 800c796:	bd10      	pop	{r4, pc}
 800c798:	080247a8 	.word	0x080247a8
 800c79c:	08024c70 	.word	0x08024c70

0800c7a0 <_ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv>:
 800c7a0:	f890 00b4 	ldrb.w	r0, [r0, #180]	; 0xb4
 800c7a4:	4770      	bx	lr

0800c7a6 <_ZN8touchgfx25AbstractDirectionProgressD1Ev>:
 800c7a6:	4770      	bx	lr

0800c7a8 <_ZN8touchgfx25AbstractDirectionProgressD0Ev>:
 800c7a8:	b510      	push	{r4, lr}
 800c7aa:	21b8      	movs	r1, #184	; 0xb8
 800c7ac:	4604      	mov	r4, r0
 800c7ae:	f014 ff7d 	bl	80216ac <_ZdlPvj>
 800c7b2:	4620      	mov	r0, r4
 800c7b4:	bd10      	pop	{r4, pc}

0800c7b6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>:
 800c7b6:	b570      	push	{r4, r5, r6, lr}
 800c7b8:	4604      	mov	r4, r0
 800c7ba:	f880 10b4 	strb.w	r1, [r0, #180]	; 0xb4
 800c7be:	3058      	adds	r0, #88	; 0x58
 800c7c0:	f005 fa28 	bl	8011c14 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c7c4:	6823      	ldr	r3, [r4, #0]
 800c7c6:	4620      	mov	r0, r4
 800c7c8:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800c7cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c7d0:	4798      	blx	r3
 800c7d2:	462b      	mov	r3, r5
 800c7d4:	4601      	mov	r1, r0
 800c7d6:	4620      	mov	r0, r4
 800c7d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7dc:	4718      	bx	r3

0800c7de <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>:
 800c7de:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
 800c7e2:	428b      	cmp	r3, r1
 800c7e4:	d001      	beq.n	800c7ea <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE+0xc>
 800c7e6:	f7ff bfe6 	b.w	800c7b6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>
 800c7ea:	4770      	bx	lr

0800c7ec <_ZN8touchgfx25AbstractDirectionProgressC1Ev>:
 800c7ec:	b510      	push	{r4, lr}
 800c7ee:	4604      	mov	r4, r0
 800c7f0:	f000 f95e 	bl	800cab0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800c7f4:	4b03      	ldr	r3, [pc, #12]	; (800c804 <_ZN8touchgfx25AbstractDirectionProgressC1Ev+0x18>)
 800c7f6:	6023      	str	r3, [r4, #0]
 800c7f8:	2300      	movs	r3, #0
 800c7fa:	f884 30b4 	strb.w	r3, [r4, #180]	; 0xb4
 800c7fe:	4620      	mov	r0, r4
 800c800:	bd10      	pop	{r4, pc}
 800c802:	bf00      	nop
 800c804:	0802488c 	.word	0x0802488c

0800c808 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800c808:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800c80c:	4770      	bx	lr

0800c80e <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800c80e:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800c812:	4770      	bx	lr

0800c814 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800c814:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800c818:	4770      	bx	lr

0800c81a <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800c81a:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800c81e:	4770      	bx	lr

0800c820 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800c820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c822:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800c826:	461e      	mov	r6, r3
 800c828:	6803      	ldr	r3, [r0, #0]
 800c82a:	460f      	mov	r7, r1
 800c82c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c830:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800c834:	4604      	mov	r4, r0
 800c836:	4615      	mov	r5, r2
 800c838:	4798      	blx	r3
 800c83a:	b93e      	cbnz	r6, 800c84c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800c83c:	1bed      	subs	r5, r5, r7
 800c83e:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800c842:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800c846:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800c84a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c84c:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800c850:	e7f7      	b.n	800c842 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800c852 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800c852:	b510      	push	{r4, lr}
 800c854:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800c858:	600c      	str	r4, [r1, #0]
 800c85a:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800c85e:	6011      	str	r1, [r2, #0]
 800c860:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800c864:	801a      	strh	r2, [r3, #0]
 800c866:	9b02      	ldr	r3, [sp, #8]
 800c868:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800c86c:	801a      	strh	r2, [r3, #0]
 800c86e:	bd10      	pop	{r4, pc}

0800c870 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800c870:	b510      	push	{r4, lr}
 800c872:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800c876:	600c      	str	r4, [r1, #0]
 800c878:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800c87c:	6011      	str	r1, [r2, #0]
 800c87e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800c882:	801a      	strh	r2, [r3, #0]
 800c884:	bd10      	pop	{r4, pc}

0800c886 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800c886:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800c88a:	600b      	str	r3, [r1, #0]
 800c88c:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800c890:	6013      	str	r3, [r2, #0]
 800c892:	4770      	bx	lr

0800c894 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800c894:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800c898:	4770      	bx	lr

0800c89a <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800c89a:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800c89e:	4770      	bx	lr

0800c8a0 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800c8a0:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800c8a4:	4770      	bx	lr

0800c8a6 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800c8a6:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800c8aa:	4770      	bx	lr

0800c8ac <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800c8ac:	4770      	bx	lr

0800c8ae <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800c8ae:	b510      	push	{r4, lr}
 800c8b0:	21b4      	movs	r1, #180	; 0xb4
 800c8b2:	4604      	mov	r4, r0
 800c8b4:	f014 fefa 	bl	80216ac <_ZdlPvj>
 800c8b8:	4620      	mov	r0, r4
 800c8ba:	bd10      	pop	{r4, pc}

0800c8bc <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800c8bc:	b570      	push	{r4, r5, r6, lr}
 800c8be:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800c8c2:	428d      	cmp	r5, r1
 800c8c4:	bfb8      	it	lt
 800c8c6:	460d      	movlt	r5, r1
 800c8c8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800c8cc:	428d      	cmp	r5, r1
 800c8ce:	4604      	mov	r4, r0
 800c8d0:	bfa8      	it	ge
 800c8d2:	460d      	movge	r5, r1
 800c8d4:	4616      	mov	r6, r2
 800c8d6:	b99a      	cbnz	r2, 800c900 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800c8d8:	6803      	ldr	r3, [r0, #0]
 800c8da:	4629      	mov	r1, r5
 800c8dc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c8e0:	4798      	blx	r3
 800c8e2:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800c8e6:	b368      	cbz	r0, 800c944 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800c8e8:	6803      	ldr	r3, [r0, #0]
 800c8ea:	68db      	ldr	r3, [r3, #12]
 800c8ec:	4798      	blx	r3
 800c8ee:	b348      	cbz	r0, 800c944 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800c8f0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800c8f4:	6803      	ldr	r3, [r0, #0]
 800c8f6:	4621      	mov	r1, r4
 800c8f8:	689b      	ldr	r3, [r3, #8]
 800c8fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c8fe:	4718      	bx	r3
 800c900:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800c904:	2b00      	cmp	r3, #0
 800c906:	dd08      	ble.n	800c91a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800c908:	f004 f8c4 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800c90c:	4621      	mov	r1, r4
 800c90e:	3004      	adds	r0, #4
 800c910:	f004 f8e5 	bl	8010ade <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800c914:	2300      	movs	r3, #0
 800c916:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800c91a:	6823      	ldr	r3, [r4, #0]
 800c91c:	4620      	mov	r0, r4
 800c91e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c922:	4798      	blx	r3
 800c924:	2300      	movs	r3, #0
 800c926:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800c92a:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800c92e:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800c932:	f004 f8af 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800c936:	4621      	mov	r1, r4
 800c938:	3004      	adds	r0, #4
 800c93a:	f004 f979 	bl	8010c30 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800c93e:	2301      	movs	r3, #1
 800c940:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800c944:	bd70      	pop	{r4, r5, r6, pc}

0800c946 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800c946:	b510      	push	{r4, lr}
 800c948:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800c94c:	4299      	cmp	r1, r3
 800c94e:	bfb8      	it	lt
 800c950:	4619      	movlt	r1, r3
 800c952:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800c956:	4299      	cmp	r1, r3
 800c958:	bfa8      	it	ge
 800c95a:	4619      	movge	r1, r3
 800c95c:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800c960:	428b      	cmp	r3, r1
 800c962:	4604      	mov	r4, r0
 800c964:	d010      	beq.n	800c988 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800c966:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800c96a:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800c96e:	b158      	cbz	r0, 800c988 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800c970:	6803      	ldr	r3, [r0, #0]
 800c972:	68db      	ldr	r3, [r3, #12]
 800c974:	4798      	blx	r3
 800c976:	b138      	cbz	r0, 800c988 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800c978:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800c97c:	6803      	ldr	r3, [r0, #0]
 800c97e:	4621      	mov	r1, r4
 800c980:	689b      	ldr	r3, [r3, #8]
 800c982:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c986:	4718      	bx	r3
 800c988:	bd10      	pop	{r4, pc}

0800c98a <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800c98a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c98c:	4604      	mov	r4, r0
 800c98e:	460d      	mov	r5, r1
 800c990:	b1a9      	cbz	r1, 800c9be <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800c992:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800c996:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800c99a:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800c99e:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800c9a2:	ab01      	add	r3, sp, #4
 800c9a4:	1a12      	subs	r2, r2, r0
 800c9a6:	1b89      	subs	r1, r1, r6
 800c9a8:	1a38      	subs	r0, r7, r0
 800c9aa:	f005 fb01 	bl	8011fb0 <_ZN8touchgfx6muldivElllRl>
 800c9ae:	4629      	mov	r1, r5
 800c9b0:	ab01      	add	r3, sp, #4
 800c9b2:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800c9b6:	4430      	add	r0, r6
 800c9b8:	f005 fafa 	bl	8011fb0 <_ZN8touchgfx6muldivElllRl>
 800c9bc:	b285      	uxth	r5, r0
 800c9be:	4628      	mov	r0, r5
 800c9c0:	b003      	add	sp, #12
 800c9c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c9c4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800c9c4:	b570      	push	{r4, r5, r6, lr}
 800c9c6:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800c9ca:	4604      	mov	r4, r0
 800c9cc:	2b00      	cmp	r3, #0
 800c9ce:	d035      	beq.n	800ca3c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800c9d0:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800c9d4:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800c9d8:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800c9dc:	3001      	adds	r0, #1
 800c9de:	1ad2      	subs	r2, r2, r3
 800c9e0:	b212      	sxth	r2, r2
 800c9e2:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800c9e6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800c9ea:	2100      	movs	r1, #0
 800c9ec:	b280      	uxth	r0, r0
 800c9ee:	47a8      	blx	r5
 800c9f0:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800c9f4:	6823      	ldr	r3, [r4, #0]
 800c9f6:	4401      	add	r1, r0
 800c9f8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c9fc:	4620      	mov	r0, r4
 800c9fe:	4798      	blx	r3
 800ca00:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800ca04:	429a      	cmp	r2, r3
 800ca06:	db19      	blt.n	800ca3c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800ca08:	2500      	movs	r5, #0
 800ca0a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800ca0e:	f004 f841 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800ca12:	4621      	mov	r1, r4
 800ca14:	3004      	adds	r0, #4
 800ca16:	f004 f862 	bl	8010ade <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800ca1a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800ca1e:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800ca22:	b158      	cbz	r0, 800ca3c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800ca24:	6803      	ldr	r3, [r0, #0]
 800ca26:	68db      	ldr	r3, [r3, #12]
 800ca28:	4798      	blx	r3
 800ca2a:	b138      	cbz	r0, 800ca3c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800ca2c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800ca30:	6803      	ldr	r3, [r0, #0]
 800ca32:	4621      	mov	r1, r4
 800ca34:	689b      	ldr	r3, [r3, #8]
 800ca36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ca3a:	4718      	bx	r3
 800ca3c:	bd70      	pop	{r4, r5, r6, pc}

0800ca3e <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800ca3e:	b570      	push	{r4, r5, r6, lr}
 800ca40:	6803      	ldr	r3, [r0, #0]
 800ca42:	4604      	mov	r4, r0
 800ca44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ca46:	4615      	mov	r5, r2
 800ca48:	4798      	blx	r3
 800ca4a:	6823      	ldr	r3, [r4, #0]
 800ca4c:	4629      	mov	r1, r5
 800ca4e:	4620      	mov	r0, r4
 800ca50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ca52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ca56:	4718      	bx	r3

0800ca58 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800ca58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca5c:	4604      	mov	r4, r0
 800ca5e:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800ca62:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800ca66:	460e      	mov	r6, r1
 800ca68:	4615      	mov	r5, r2
 800ca6a:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800ca6e:	4619      	mov	r1, r3
 800ca70:	463a      	mov	r2, r7
 800ca72:	3058      	adds	r0, #88	; 0x58
 800ca74:	4698      	mov	r8, r3
 800ca76:	f7ff ffe2 	bl	800ca3e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ca7a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ca7e:	4446      	add	r6, r8
 800ca80:	42b3      	cmp	r3, r6
 800ca82:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ca86:	bfb8      	it	lt
 800ca88:	8126      	strhlt	r6, [r4, #8]
 800ca8a:	443d      	add	r5, r7
 800ca8c:	42ab      	cmp	r3, r5
 800ca8e:	bfb8      	it	lt
 800ca90:	8165      	strhlt	r5, [r4, #10]
 800ca92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ca96 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800ca96:	b510      	push	{r4, lr}
 800ca98:	4604      	mov	r4, r0
 800ca9a:	302c      	adds	r0, #44	; 0x2c
 800ca9c:	f002 f9a9 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800caa0:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800caa4:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800caa8:	4620      	mov	r0, r4
 800caaa:	f7ff ffc8 	bl	800ca3e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800caae:	bd10      	pop	{r4, pc}

0800cab0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800cab0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cab2:	4604      	mov	r4, r0
 800cab4:	4626      	mov	r6, r4
 800cab6:	2500      	movs	r5, #0
 800cab8:	f7f6 fdd4 	bl	8003664 <_ZN8touchgfx8DrawableC1Ev>
 800cabc:	4b23      	ldr	r3, [pc, #140]	; (800cb4c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800cabe:	62a5      	str	r5, [r4, #40]	; 0x28
 800cac0:	f846 3b2c 	str.w	r3, [r6], #44
 800cac4:	2226      	movs	r2, #38	; 0x26
 800cac6:	4629      	mov	r1, r5
 800cac8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800cacc:	4630      	mov	r0, r6
 800cace:	f8ad 7004 	strh.w	r7, [sp, #4]
 800cad2:	f014 ff37 	bl	8021944 <memset>
 800cad6:	4630      	mov	r0, r6
 800cad8:	f7f6 fdc4 	bl	8003664 <_ZN8touchgfx8DrawableC1Ev>
 800cadc:	a902      	add	r1, sp, #8
 800cade:	4b1c      	ldr	r3, [pc, #112]	; (800cb50 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800cae0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800cae2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800cae6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800caea:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800caee:	4630      	mov	r0, r6
 800caf0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800caf4:	f002 f97d 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800caf8:	4638      	mov	r0, r7
 800cafa:	f7f6 fdb3 	bl	8003664 <_ZN8touchgfx8DrawableC1Ev>
 800cafe:	4b15      	ldr	r3, [pc, #84]	; (800cb54 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800cb00:	65a3      	str	r3, [r4, #88]	; 0x58
 800cb02:	2364      	movs	r3, #100	; 0x64
 800cb04:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800cb08:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800cb0c:	4b12      	ldr	r3, [pc, #72]	; (800cb58 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800cb0e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800cb12:	4629      	mov	r1, r5
 800cb14:	4630      	mov	r0, r6
 800cb16:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800cb1a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800cb1e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800cb22:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800cb26:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800cb2a:	f7f4 fa75 	bl	8001018 <_ZN8touchgfx8Drawable4setXEs>
 800cb2e:	4629      	mov	r1, r5
 800cb30:	4630      	mov	r0, r6
 800cb32:	f7f4 fa73 	bl	800101c <_ZN8touchgfx8Drawable4setYEs>
 800cb36:	4631      	mov	r1, r6
 800cb38:	4620      	mov	r0, r4
 800cb3a:	f000 f819 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cb3e:	4620      	mov	r0, r4
 800cb40:	4639      	mov	r1, r7
 800cb42:	f000 f815 	bl	800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800cb46:	4620      	mov	r0, r4
 800cb48:	b003      	add	sp, #12
 800cb4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cb4c:	08024968 	.word	0x08024968
 800cb50:	08024cd8 	.word	0x08024cd8
 800cb54:	08024a3c 	.word	0x08024a3c
 800cb58:	0801268b 	.word	0x0801268b

0800cb5c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800cb5c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cb5e:	2000      	movs	r0, #0
 800cb60:	b12b      	cbz	r3, 800cb6e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800cb62:	b920      	cbnz	r0, 800cb6e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800cb64:	1a5a      	subs	r2, r3, r1
 800cb66:	4250      	negs	r0, r2
 800cb68:	4150      	adcs	r0, r2
 800cb6a:	699b      	ldr	r3, [r3, #24]
 800cb6c:	e7f8      	b.n	800cb60 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800cb6e:	4770      	bx	lr

0800cb70 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800cb70:	2300      	movs	r3, #0
 800cb72:	6148      	str	r0, [r1, #20]
 800cb74:	618b      	str	r3, [r1, #24]
 800cb76:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cb78:	b913      	cbnz	r3, 800cb80 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800cb7a:	6281      	str	r1, [r0, #40]	; 0x28
 800cb7c:	4770      	bx	lr
 800cb7e:	4613      	mov	r3, r2
 800cb80:	699a      	ldr	r2, [r3, #24]
 800cb82:	2a00      	cmp	r2, #0
 800cb84:	d1fb      	bne.n	800cb7e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800cb86:	6199      	str	r1, [r3, #24]
 800cb88:	4770      	bx	lr

0800cb8a <_ZN8touchgfx9Container9removeAllEv>:
 800cb8a:	2200      	movs	r2, #0
 800cb8c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cb8e:	b123      	cbz	r3, 800cb9a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800cb90:	6999      	ldr	r1, [r3, #24]
 800cb92:	6281      	str	r1, [r0, #40]	; 0x28
 800cb94:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800cb98:	e7f8      	b.n	800cb8c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800cb9a:	4770      	bx	lr

0800cb9c <_ZN8touchgfx9Container6unlinkEv>:
 800cb9c:	2300      	movs	r3, #0
 800cb9e:	6283      	str	r3, [r0, #40]	; 0x28
 800cba0:	4770      	bx	lr

0800cba2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800cba2:	2200      	movs	r2, #0
 800cba4:	8002      	strh	r2, [r0, #0]
 800cba6:	8042      	strh	r2, [r0, #2]
 800cba8:	8082      	strh	r2, [r0, #4]
 800cbaa:	80c2      	strh	r2, [r0, #6]
 800cbac:	4770      	bx	lr

0800cbae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800cbae:	b570      	push	{r4, r5, r6, lr}
 800cbb0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800cbb2:	460d      	mov	r5, r1
 800cbb4:	4616      	mov	r6, r2
 800cbb6:	b13c      	cbz	r4, 800cbc8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800cbb8:	6823      	ldr	r3, [r4, #0]
 800cbba:	4620      	mov	r0, r4
 800cbbc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800cbbe:	4632      	mov	r2, r6
 800cbc0:	4629      	mov	r1, r5
 800cbc2:	4798      	blx	r3
 800cbc4:	69a4      	ldr	r4, [r4, #24]
 800cbc6:	e7f6      	b.n	800cbb6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800cbc8:	bd70      	pop	{r4, r5, r6, pc}

0800cbca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800cbca:	b538      	push	{r3, r4, r5, lr}
 800cbcc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800cbce:	460d      	mov	r5, r1
 800cbd0:	b134      	cbz	r4, 800cbe0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800cbd2:	682b      	ldr	r3, [r5, #0]
 800cbd4:	4621      	mov	r1, r4
 800cbd6:	689b      	ldr	r3, [r3, #8]
 800cbd8:	4628      	mov	r0, r5
 800cbda:	4798      	blx	r3
 800cbdc:	69a4      	ldr	r4, [r4, #24]
 800cbde:	e7f7      	b.n	800cbd0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800cbe0:	bd38      	pop	{r3, r4, r5, pc}

0800cbe2 <_ZN8touchgfx9ContainerD1Ev>:
 800cbe2:	4770      	bx	lr

0800cbe4 <_ZN8touchgfx9ContainerD0Ev>:
 800cbe4:	b510      	push	{r4, lr}
 800cbe6:	212c      	movs	r1, #44	; 0x2c
 800cbe8:	4604      	mov	r4, r0
 800cbea:	f014 fd5f 	bl	80216ac <_ZdlPvj>
 800cbee:	4620      	mov	r0, r4
 800cbf0:	bd10      	pop	{r4, pc}

0800cbf2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800cbf2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cbf4:	b19b      	cbz	r3, 800cc1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800cbf6:	428b      	cmp	r3, r1
 800cbf8:	d109      	bne.n	800cc0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800cbfa:	699a      	ldr	r2, [r3, #24]
 800cbfc:	2100      	movs	r1, #0
 800cbfe:	6159      	str	r1, [r3, #20]
 800cc00:	6282      	str	r2, [r0, #40]	; 0x28
 800cc02:	b902      	cbnz	r2, 800cc06 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800cc04:	4770      	bx	lr
 800cc06:	6199      	str	r1, [r3, #24]
 800cc08:	4770      	bx	lr
 800cc0a:	4613      	mov	r3, r2
 800cc0c:	b13a      	cbz	r2, 800cc1e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800cc0e:	699a      	ldr	r2, [r3, #24]
 800cc10:	428a      	cmp	r2, r1
 800cc12:	d1fa      	bne.n	800cc0a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800cc14:	698a      	ldr	r2, [r1, #24]
 800cc16:	619a      	str	r2, [r3, #24]
 800cc18:	2300      	movs	r3, #0
 800cc1a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800cc1e:	4770      	bx	lr

0800cc20 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800cc20:	b410      	push	{r4}
 800cc22:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800cc24:	4604      	mov	r4, r0
 800cc26:	b92b      	cbnz	r3, 800cc34 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800cc28:	6803      	ldr	r3, [r0, #0]
 800cc2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cc2e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800cc30:	4611      	mov	r1, r2
 800cc32:	4718      	bx	r3
 800cc34:	b941      	cbnz	r1, 800cc48 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800cc36:	6193      	str	r3, [r2, #24]
 800cc38:	6282      	str	r2, [r0, #40]	; 0x28
 800cc3a:	6154      	str	r4, [r2, #20]
 800cc3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cc40:	4770      	bx	lr
 800cc42:	4603      	mov	r3, r0
 800cc44:	2800      	cmp	r0, #0
 800cc46:	d0f9      	beq.n	800cc3c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800cc48:	4299      	cmp	r1, r3
 800cc4a:	6998      	ldr	r0, [r3, #24]
 800cc4c:	d1f9      	bne.n	800cc42 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800cc4e:	6190      	str	r0, [r2, #24]
 800cc50:	618a      	str	r2, [r1, #24]
 800cc52:	e7f2      	b.n	800cc3a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800cc54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800cc54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc58:	461f      	mov	r7, r3
 800cc5a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800cc5e:	460d      	mov	r5, r1
 800cc60:	4616      	mov	r6, r2
 800cc62:	b103      	cbz	r3, 800cc66 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800cc64:	6038      	str	r0, [r7, #0]
 800cc66:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800cc68:	b314      	cbz	r4, 800ccb0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800cc6a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800cc6e:	b1eb      	cbz	r3, 800ccac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc70:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800cc74:	428d      	cmp	r5, r1
 800cc76:	db19      	blt.n	800ccac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc78:	8923      	ldrh	r3, [r4, #8]
 800cc7a:	b289      	uxth	r1, r1
 800cc7c:	440b      	add	r3, r1
 800cc7e:	b21b      	sxth	r3, r3
 800cc80:	429d      	cmp	r5, r3
 800cc82:	da13      	bge.n	800ccac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc84:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cc88:	4296      	cmp	r6, r2
 800cc8a:	db0f      	blt.n	800ccac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc8c:	8963      	ldrh	r3, [r4, #10]
 800cc8e:	b292      	uxth	r2, r2
 800cc90:	4413      	add	r3, r2
 800cc92:	b21b      	sxth	r3, r3
 800cc94:	429e      	cmp	r6, r3
 800cc96:	da09      	bge.n	800ccac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800cc98:	6823      	ldr	r3, [r4, #0]
 800cc9a:	1ab2      	subs	r2, r6, r2
 800cc9c:	1a69      	subs	r1, r5, r1
 800cc9e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800cca2:	b212      	sxth	r2, r2
 800cca4:	463b      	mov	r3, r7
 800cca6:	b209      	sxth	r1, r1
 800cca8:	4620      	mov	r0, r4
 800ccaa:	47c0      	blx	r8
 800ccac:	69a4      	ldr	r4, [r4, #24]
 800ccae:	e7db      	b.n	800cc68 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ccb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ccb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ccb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccb8:	4c6e      	ldr	r4, [pc, #440]	; (800ce74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ccba:	b0a1      	sub	sp, #132	; 0x84
 800ccbc:	6824      	ldr	r4, [r4, #0]
 800ccbe:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ccc0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ccc4:	9303      	str	r3, [sp, #12]
 800ccc6:	2400      	movs	r4, #0
 800ccc8:	802c      	strh	r4, [r5, #0]
 800ccca:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800cccc:	802c      	strh	r4, [r5, #0]
 800ccce:	601c      	str	r4, [r3, #0]
 800ccd0:	4606      	mov	r6, r0
 800ccd2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ccd6:	f7ff ffbd 	bl	800cc54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ccda:	f1b9 0f03 	cmp.w	r9, #3
 800ccde:	f340 80c2 	ble.w	800ce66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800cce2:	4631      	mov	r1, r6
 800cce4:	a80c      	add	r0, sp, #48	; 0x30
 800cce6:	f005 f831 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ccea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800ccee:	9306      	str	r3, [sp, #24]
 800ccf0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800ccf4:	9307      	str	r3, [sp, #28]
 800ccf6:	9b03      	ldr	r3, [sp, #12]
 800ccf8:	f8d3 a000 	ldr.w	sl, [r3]
 800ccfc:	f1ba 0f00 	cmp.w	sl, #0
 800cd00:	f000 80b4 	beq.w	800ce6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800cd04:	4651      	mov	r1, sl
 800cd06:	a810      	add	r0, sp, #64	; 0x40
 800cd08:	f005 f820 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cd0c:	9b01      	ldr	r3, [sp, #4]
 800cd0e:	9a06      	ldr	r2, [sp, #24]
 800cd10:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800cd14:	189d      	adds	r5, r3, r2
 800cd16:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800cd1a:	9a07      	ldr	r2, [sp, #28]
 800cd1c:	2002      	movs	r0, #2
 800cd1e:	fb91 f1f0 	sdiv	r1, r1, r0
 800cd22:	4419      	add	r1, r3
 800cd24:	1a6d      	subs	r5, r5, r1
 800cd26:	9b02      	ldr	r3, [sp, #8]
 800cd28:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800cd2c:	4413      	add	r3, r2
 800cd2e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800cd32:	fb92 f2f0 	sdiv	r2, r2, r0
 800cd36:	440a      	add	r2, r1
 800cd38:	1a9b      	subs	r3, r3, r2
 800cd3a:	435b      	muls	r3, r3
 800cd3c:	fb05 3505 	mla	r5, r5, r5, r3
 800cd40:	4f4d      	ldr	r7, [pc, #308]	; (800ce78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800cd42:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800cd44:	ac10      	add	r4, sp, #64	; 0x40
 800cd46:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd48:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800cd4a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd4c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800cd4e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800cd50:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800cd54:	f1b9 0f0c 	cmp.w	r9, #12
 800cd58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800cd5c:	f04f 0303 	mov.w	r3, #3
 800cd60:	bfc8      	it	gt
 800cd62:	4698      	movgt	r8, r3
 800cd64:	f8cd 9000 	str.w	r9, [sp]
 800cd68:	f04f 0400 	mov.w	r4, #0
 800cd6c:	bfdc      	itt	le
 800cd6e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800cd72:	fb92 f8f3 	sdivle	r8, r2, r3
 800cd76:	1c63      	adds	r3, r4, #1
 800cd78:	aa10      	add	r2, sp, #64	; 0x40
 800cd7a:	f004 0401 	and.w	r4, r4, #1
 800cd7e:	9308      	str	r3, [sp, #32]
 800cd80:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800cd84:	9b00      	ldr	r3, [sp, #0]
 800cd86:	fb93 f3f8 	sdiv	r3, r3, r8
 800cd8a:	b29b      	uxth	r3, r3
 800cd8c:	3404      	adds	r4, #4
 800cd8e:	f04f 0b00 	mov.w	fp, #0
 800cd92:	9304      	str	r3, [sp, #16]
 800cd94:	9a04      	ldr	r2, [sp, #16]
 800cd96:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800cd9a:	fb13 f302 	smulbb	r3, r3, r2
 800cd9e:	9a01      	ldr	r2, [sp, #4]
 800cda0:	b29b      	uxth	r3, r3
 800cda2:	1899      	adds	r1, r3, r2
 800cda4:	9305      	str	r3, [sp, #20]
 800cda6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800cdaa:	b209      	sxth	r1, r1
 800cdac:	4299      	cmp	r1, r3
 800cdae:	db4d      	blt.n	800ce4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800cdb0:	8932      	ldrh	r2, [r6, #8]
 800cdb2:	4413      	add	r3, r2
 800cdb4:	b21b      	sxth	r3, r3
 800cdb6:	4299      	cmp	r1, r3
 800cdb8:	da48      	bge.n	800ce4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800cdba:	9b04      	ldr	r3, [sp, #16]
 800cdbc:	6827      	ldr	r7, [r4, #0]
 800cdbe:	fb17 f703 	smulbb	r7, r7, r3
 800cdc2:	9b02      	ldr	r3, [sp, #8]
 800cdc4:	b2bf      	uxth	r7, r7
 800cdc6:	18fa      	adds	r2, r7, r3
 800cdc8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800cdcc:	b212      	sxth	r2, r2
 800cdce:	429a      	cmp	r2, r3
 800cdd0:	db3c      	blt.n	800ce4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800cdd2:	8970      	ldrh	r0, [r6, #10]
 800cdd4:	4403      	add	r3, r0
 800cdd6:	b21b      	sxth	r3, r3
 800cdd8:	429a      	cmp	r2, r3
 800cdda:	da37      	bge.n	800ce4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800cddc:	2300      	movs	r3, #0
 800cdde:	930b      	str	r3, [sp, #44]	; 0x2c
 800cde0:	4630      	mov	r0, r6
 800cde2:	ab0b      	add	r3, sp, #44	; 0x2c
 800cde4:	f7ff ff36 	bl	800cc54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800cde8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cdea:	b37a      	cbz	r2, 800ce4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800cdec:	4552      	cmp	r2, sl
 800cdee:	d02d      	beq.n	800ce4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800cdf0:	4611      	mov	r1, r2
 800cdf2:	a80e      	add	r0, sp, #56	; 0x38
 800cdf4:	9209      	str	r2, [sp, #36]	; 0x24
 800cdf6:	f004 ffa9 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cdfa:	9a06      	ldr	r2, [sp, #24]
 800cdfc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800ce00:	9b01      	ldr	r3, [sp, #4]
 800ce02:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800ce06:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800ce0a:	4413      	add	r3, r2
 800ce0c:	f04f 0e02 	mov.w	lr, #2
 800ce10:	fb91 f1fe 	sdiv	r1, r1, lr
 800ce14:	4401      	add	r1, r0
 800ce16:	1a58      	subs	r0, r3, r1
 800ce18:	9a07      	ldr	r2, [sp, #28]
 800ce1a:	9b02      	ldr	r3, [sp, #8]
 800ce1c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800ce20:	fb9c fcfe 	sdiv	ip, ip, lr
 800ce24:	4413      	add	r3, r2
 800ce26:	448c      	add	ip, r1
 800ce28:	eba3 030c 	sub.w	r3, r3, ip
 800ce2c:	435b      	muls	r3, r3
 800ce2e:	fb00 3300 	mla	r3, r0, r0, r3
 800ce32:	42ab      	cmp	r3, r5
 800ce34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ce36:	d208      	bcs.n	800ce4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ce38:	9803      	ldr	r0, [sp, #12]
 800ce3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ce3c:	6001      	str	r1, [r0, #0]
 800ce3e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ce40:	9805      	ldr	r0, [sp, #20]
 800ce42:	8008      	strh	r0, [r1, #0]
 800ce44:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ce46:	461d      	mov	r5, r3
 800ce48:	800f      	strh	r7, [r1, #0]
 800ce4a:	4692      	mov	sl, r2
 800ce4c:	f10b 0b01 	add.w	fp, fp, #1
 800ce50:	f1bb 0f04 	cmp.w	fp, #4
 800ce54:	f104 0408 	add.w	r4, r4, #8
 800ce58:	d19c      	bne.n	800cd94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ce5a:	9b00      	ldr	r3, [sp, #0]
 800ce5c:	9c08      	ldr	r4, [sp, #32]
 800ce5e:	444b      	add	r3, r9
 800ce60:	4544      	cmp	r4, r8
 800ce62:	9300      	str	r3, [sp, #0]
 800ce64:	d187      	bne.n	800cd76 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ce66:	b021      	add	sp, #132	; 0x84
 800ce68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce6c:	f04f 35ff 	mov.w	r5, #4294967295
 800ce70:	e766      	b.n	800cd40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ce72:	bf00      	nop
 800ce74:	20014fd4 	.word	0x20014fd4
 800ce78:	08022be0 	.word	0x08022be0

0800ce7c <_ZN8touchgfx4RectaNERKS0_>:
 800ce7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce80:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ce84:	888c      	ldrh	r4, [r1, #4]
 800ce86:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ce8a:	443c      	add	r4, r7
 800ce8c:	b2a4      	uxth	r4, r4
 800ce8e:	fa0f f884 	sxth.w	r8, r4
 800ce92:	45c1      	cmp	r9, r8
 800ce94:	da2f      	bge.n	800cef6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ce96:	8882      	ldrh	r2, [r0, #4]
 800ce98:	444a      	add	r2, r9
 800ce9a:	b292      	uxth	r2, r2
 800ce9c:	fa0f fe82 	sxth.w	lr, r2
 800cea0:	4577      	cmp	r7, lr
 800cea2:	da28      	bge.n	800cef6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800cea4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800cea8:	88cb      	ldrh	r3, [r1, #6]
 800ceaa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ceae:	442b      	add	r3, r5
 800ceb0:	b21b      	sxth	r3, r3
 800ceb2:	429e      	cmp	r6, r3
 800ceb4:	da1f      	bge.n	800cef6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ceb6:	88c3      	ldrh	r3, [r0, #6]
 800ceb8:	4433      	add	r3, r6
 800ceba:	b29b      	uxth	r3, r3
 800cebc:	fa0f fc83 	sxth.w	ip, r3
 800cec0:	4565      	cmp	r5, ip
 800cec2:	da18      	bge.n	800cef6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800cec4:	454f      	cmp	r7, r9
 800cec6:	bfb8      	it	lt
 800cec8:	464f      	movlt	r7, r9
 800ceca:	42b5      	cmp	r5, r6
 800cecc:	bfb8      	it	lt
 800cece:	4635      	movlt	r5, r6
 800ced0:	45f0      	cmp	r8, lr
 800ced2:	bfd8      	it	le
 800ced4:	4622      	movle	r2, r4
 800ced6:	1bd2      	subs	r2, r2, r7
 800ced8:	8082      	strh	r2, [r0, #4]
 800ceda:	884a      	ldrh	r2, [r1, #2]
 800cedc:	88c9      	ldrh	r1, [r1, #6]
 800cede:	8007      	strh	r7, [r0, #0]
 800cee0:	440a      	add	r2, r1
 800cee2:	b292      	uxth	r2, r2
 800cee4:	b211      	sxth	r1, r2
 800cee6:	458c      	cmp	ip, r1
 800cee8:	bfa8      	it	ge
 800ceea:	4613      	movge	r3, r2
 800ceec:	1b5b      	subs	r3, r3, r5
 800ceee:	80c3      	strh	r3, [r0, #6]
 800cef0:	8045      	strh	r5, [r0, #2]
 800cef2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cef6:	2300      	movs	r3, #0
 800cef8:	8003      	strh	r3, [r0, #0]
 800cefa:	8043      	strh	r3, [r0, #2]
 800cefc:	8083      	strh	r3, [r0, #4]
 800cefe:	80c3      	strh	r3, [r0, #6]
 800cf00:	e7f7      	b.n	800cef2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800cf02:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cf06:	2b00      	cmp	r3, #0
 800cf08:	dd06      	ble.n	800cf18 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800cf0a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800cf0e:	2800      	cmp	r0, #0
 800cf10:	bfcc      	ite	gt
 800cf12:	2000      	movgt	r0, #0
 800cf14:	2001      	movle	r0, #1
 800cf16:	4770      	bx	lr
 800cf18:	2001      	movs	r0, #1
 800cf1a:	4770      	bx	lr

0800cf1c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800cf1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf20:	2300      	movs	r3, #0
 800cf22:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800cf24:	8003      	strh	r3, [r0, #0]
 800cf26:	4604      	mov	r4, r0
 800cf28:	8043      	strh	r3, [r0, #2]
 800cf2a:	8083      	strh	r3, [r0, #4]
 800cf2c:	80c3      	strh	r3, [r0, #6]
 800cf2e:	2d00      	cmp	r5, #0
 800cf30:	d040      	beq.n	800cfb4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800cf32:	1d28      	adds	r0, r5, #4
 800cf34:	f7ff ffe5 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf38:	b988      	cbnz	r0, 800cf5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800cf3a:	4620      	mov	r0, r4
 800cf3c:	f7ff ffe1 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf40:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800cf44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cf48:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800cf4c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800cf50:	b138      	cbz	r0, 800cf62 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800cf52:	8022      	strh	r2, [r4, #0]
 800cf54:	8063      	strh	r3, [r4, #2]
 800cf56:	f8a4 e004 	strh.w	lr, [r4, #4]
 800cf5a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800cf5e:	69ad      	ldr	r5, [r5, #24]
 800cf60:	e7e5      	b.n	800cf2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800cf62:	f9b4 0000 	ldrsh.w	r0, [r4]
 800cf66:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800cf6a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800cf6e:	4290      	cmp	r0, r2
 800cf70:	4607      	mov	r7, r0
 800cf72:	bfa8      	it	ge
 800cf74:	4617      	movge	r7, r2
 800cf76:	4472      	add	r2, lr
 800cf78:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800cf7c:	8027      	strh	r7, [r4, #0]
 800cf7e:	4299      	cmp	r1, r3
 800cf80:	460e      	mov	r6, r1
 800cf82:	4440      	add	r0, r8
 800cf84:	bfa8      	it	ge
 800cf86:	461e      	movge	r6, r3
 800cf88:	4471      	add	r1, lr
 800cf8a:	4463      	add	r3, ip
 800cf8c:	b200      	sxth	r0, r0
 800cf8e:	b212      	sxth	r2, r2
 800cf90:	b209      	sxth	r1, r1
 800cf92:	b21b      	sxth	r3, r3
 800cf94:	4290      	cmp	r0, r2
 800cf96:	bfac      	ite	ge
 800cf98:	ebc7 0200 	rsbge	r2, r7, r0
 800cf9c:	ebc7 0202 	rsblt	r2, r7, r2
 800cfa0:	4299      	cmp	r1, r3
 800cfa2:	bfac      	ite	ge
 800cfa4:	ebc6 0301 	rsbge	r3, r6, r1
 800cfa8:	ebc6 0303 	rsblt	r3, r6, r3
 800cfac:	8066      	strh	r6, [r4, #2]
 800cfae:	80a2      	strh	r2, [r4, #4]
 800cfb0:	80e3      	strh	r3, [r4, #6]
 800cfb2:	e7d4      	b.n	800cf5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800cfb4:	4620      	mov	r0, r4
 800cfb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cfba <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800cfba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800cfbe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800cfc2:	b383      	cbz	r3, 800d026 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800cfc4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800cfc6:	b374      	cbz	r4, 800d026 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800cfc8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800cfcc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800cfd0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800cfd4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800cfd8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800cfdc:	b303      	cbz	r3, 800d020 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800cfde:	4668      	mov	r0, sp
 800cfe0:	1d21      	adds	r1, r4, #4
 800cfe2:	f8ad 5000 	strh.w	r5, [sp]
 800cfe6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800cfea:	f8ad 7004 	strh.w	r7, [sp, #4]
 800cfee:	f8ad 8006 	strh.w	r8, [sp, #6]
 800cff2:	f7ff ff43 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800cff6:	4668      	mov	r0, sp
 800cff8:	f7ff ff83 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cffc:	b980      	cbnz	r0, 800d020 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800cffe:	f8bd 3000 	ldrh.w	r3, [sp]
 800d002:	88a2      	ldrh	r2, [r4, #4]
 800d004:	1a9b      	subs	r3, r3, r2
 800d006:	f8ad 3000 	strh.w	r3, [sp]
 800d00a:	88e2      	ldrh	r2, [r4, #6]
 800d00c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d010:	1a9b      	subs	r3, r3, r2
 800d012:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d016:	6823      	ldr	r3, [r4, #0]
 800d018:	4669      	mov	r1, sp
 800d01a:	689b      	ldr	r3, [r3, #8]
 800d01c:	4620      	mov	r0, r4
 800d01e:	4798      	blx	r3
 800d020:	69a4      	ldr	r4, [r4, #24]
 800d022:	2c00      	cmp	r4, #0
 800d024:	d1d8      	bne.n	800cfd8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800d026:	b002      	add	sp, #8
 800d028:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d02c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800d02c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d02e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800d032:	460d      	mov	r5, r1
 800d034:	4616      	mov	r6, r2
 800d036:	b323      	cbz	r3, 800d082 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d038:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800d03a:	b314      	cbz	r4, 800d082 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d03c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800d040:	b1eb      	cbz	r3, 800d07e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d042:	6828      	ldr	r0, [r5, #0]
 800d044:	6869      	ldr	r1, [r5, #4]
 800d046:	466b      	mov	r3, sp
 800d048:	c303      	stmia	r3!, {r0, r1}
 800d04a:	4668      	mov	r0, sp
 800d04c:	1d21      	adds	r1, r4, #4
 800d04e:	f7ff ff15 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800d052:	4668      	mov	r0, sp
 800d054:	f7ff ff55 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d058:	b988      	cbnz	r0, 800d07e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d05a:	f8bd 3000 	ldrh.w	r3, [sp]
 800d05e:	88a2      	ldrh	r2, [r4, #4]
 800d060:	1a9b      	subs	r3, r3, r2
 800d062:	f8ad 3000 	strh.w	r3, [sp]
 800d066:	88e2      	ldrh	r2, [r4, #6]
 800d068:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d06c:	1a9b      	subs	r3, r3, r2
 800d06e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d072:	6823      	ldr	r3, [r4, #0]
 800d074:	4632      	mov	r2, r6
 800d076:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800d078:	4669      	mov	r1, sp
 800d07a:	4620      	mov	r0, r4
 800d07c:	4798      	blx	r3
 800d07e:	69a4      	ldr	r4, [r4, #24]
 800d080:	e7db      	b.n	800d03a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800d082:	b002      	add	sp, #8
 800d084:	bd70      	pop	{r4, r5, r6, pc}

0800d086 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800d086:	b513      	push	{r0, r1, r4, lr}
 800d088:	6803      	ldr	r3, [r0, #0]
 800d08a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800d08e:	2300      	movs	r3, #0
 800d090:	e9cd 3300 	strd	r3, r3, [sp]
 800d094:	466b      	mov	r3, sp
 800d096:	47a0      	blx	r4
 800d098:	b002      	add	sp, #8
 800d09a:	bd10      	pop	{r4, pc}

0800d09c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800d09c:	2301      	movs	r3, #1
 800d09e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800d0a2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800d0a6:	4770      	bx	lr

0800d0a8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800d0a8:	2301      	movs	r3, #1
 800d0aa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800d0ae:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800d0b2:	4770      	bx	lr

0800d0b4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800d0b4:	6843      	ldr	r3, [r0, #4]
 800d0b6:	2201      	movs	r2, #1
 800d0b8:	725a      	strb	r2, [r3, #9]
 800d0ba:	6840      	ldr	r0, [r0, #4]
 800d0bc:	6803      	ldr	r3, [r0, #0]
 800d0be:	691b      	ldr	r3, [r3, #16]
 800d0c0:	4718      	bx	r3

0800d0c2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800d0c2:	6840      	ldr	r0, [r0, #4]
 800d0c4:	6803      	ldr	r3, [r0, #0]
 800d0c6:	689b      	ldr	r3, [r3, #8]
 800d0c8:	4718      	bx	r3

0800d0ca <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800d0ca:	b530      	push	{r4, r5, lr}
 800d0cc:	b08b      	sub	sp, #44	; 0x2c
 800d0ce:	6804      	ldr	r4, [r0, #0]
 800d0d0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800d0d4:	9509      	str	r5, [sp, #36]	; 0x24
 800d0d6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800d0da:	9508      	str	r5, [sp, #32]
 800d0dc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800d0e0:	9507      	str	r5, [sp, #28]
 800d0e2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800d0e6:	9506      	str	r5, [sp, #24]
 800d0e8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800d0ec:	9505      	str	r5, [sp, #20]
 800d0ee:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800d0f2:	9504      	str	r5, [sp, #16]
 800d0f4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800d0f8:	9503      	str	r5, [sp, #12]
 800d0fa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800d0fe:	9502      	str	r5, [sp, #8]
 800d100:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800d104:	e9cd 3500 	strd	r3, r5, [sp]
 800d108:	4613      	mov	r3, r2
 800d10a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800d10c:	2200      	movs	r2, #0
 800d10e:	47a0      	blx	r4
 800d110:	b00b      	add	sp, #44	; 0x2c
 800d112:	bd30      	pop	{r4, r5, pc}

0800d114 <_ZN8touchgfx3HAL10beginFrameEv>:
 800d114:	4b04      	ldr	r3, [pc, #16]	; (800d128 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800d116:	781b      	ldrb	r3, [r3, #0]
 800d118:	b123      	cbz	r3, 800d124 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800d11a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800d11e:	f080 0001 	eor.w	r0, r0, #1
 800d122:	4770      	bx	lr
 800d124:	2001      	movs	r0, #1
 800d126:	4770      	bx	lr
 800d128:	20014fd2 	.word	0x20014fd2

0800d12c <_ZN8touchgfx3HAL8endFrameEv>:
 800d12c:	b510      	push	{r4, lr}
 800d12e:	4604      	mov	r4, r0
 800d130:	6840      	ldr	r0, [r0, #4]
 800d132:	6803      	ldr	r3, [r0, #0]
 800d134:	689b      	ldr	r3, [r3, #8]
 800d136:	4798      	blx	r3
 800d138:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800d13c:	b113      	cbz	r3, 800d144 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800d13e:	2301      	movs	r3, #1
 800d140:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800d144:	bd10      	pop	{r4, pc}

0800d146 <_ZN8touchgfx3HAL10initializeEv>:
 800d146:	b510      	push	{r4, lr}
 800d148:	4604      	mov	r4, r0
 800d14a:	f7f3 fbfb 	bl	8000944 <_ZN8touchgfx10OSWrappers10initializeEv>
 800d14e:	f7f3 fb13 	bl	8000778 <_ZN8touchgfx4GPIO4initEv>
 800d152:	6860      	ldr	r0, [r4, #4]
 800d154:	6803      	ldr	r3, [r0, #0]
 800d156:	68db      	ldr	r3, [r3, #12]
 800d158:	4798      	blx	r3
 800d15a:	68e0      	ldr	r0, [r4, #12]
 800d15c:	6803      	ldr	r3, [r0, #0]
 800d15e:	689b      	ldr	r3, [r3, #8]
 800d160:	4798      	blx	r3
 800d162:	6823      	ldr	r3, [r4, #0]
 800d164:	4620      	mov	r0, r4
 800d166:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800d168:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d16c:	4718      	bx	r3
	...

0800d170 <_ZN8touchgfx3HAL4tickEv>:
 800d170:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d172:	6803      	ldr	r3, [r0, #0]
 800d174:	4d5b      	ldr	r5, [pc, #364]	; (800d2e4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800d176:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800d17a:	4604      	mov	r4, r0
 800d17c:	4798      	blx	r3
 800d17e:	2800      	cmp	r0, #0
 800d180:	f000 8095 	beq.w	800d2ae <_ZN8touchgfx3HAL4tickEv+0x13e>
 800d184:	2001      	movs	r0, #1
 800d186:	f7f3 faf8 	bl	800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d18a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800d18e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800d192:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800d196:	2600      	movs	r6, #0
 800d198:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800d19c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800d1a0:	b133      	cbz	r3, 800d1b0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800d1a2:	6823      	ldr	r3, [r4, #0]
 800d1a4:	4620      	mov	r0, r4
 800d1a6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800d1aa:	4798      	blx	r3
 800d1ac:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800d1b0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800d1b4:	6862      	ldr	r2, [r4, #4]
 800d1b6:	f083 0301 	eor.w	r3, r3, #1
 800d1ba:	7253      	strb	r3, [r2, #9]
 800d1bc:	2601      	movs	r6, #1
 800d1be:	702e      	strb	r6, [r5, #0]
 800d1c0:	f003 fc68 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800d1c4:	6803      	ldr	r3, [r0, #0]
 800d1c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d1c8:	4798      	blx	r3
 800d1ca:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800d1ce:	b90b      	cbnz	r3, 800d1d4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800d1d0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800d1d4:	f003 fc5e 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800d1d8:	6803      	ldr	r3, [r0, #0]
 800d1da:	695b      	ldr	r3, [r3, #20]
 800d1dc:	4798      	blx	r3
 800d1de:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800d1e0:	6803      	ldr	r3, [r0, #0]
 800d1e2:	691b      	ldr	r3, [r3, #16]
 800d1e4:	4798      	blx	r3
 800d1e6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800d1ea:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800d1ee:	3b01      	subs	r3, #1
 800d1f0:	b2db      	uxtb	r3, r3
 800d1f2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800d1f6:	b10a      	cbz	r2, 800d1fc <_ZN8touchgfx3HAL4tickEv+0x8c>
 800d1f8:	2b00      	cmp	r3, #0
 800d1fa:	d1eb      	bne.n	800d1d4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800d1fc:	4a3a      	ldr	r2, [pc, #232]	; (800d2e8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800d1fe:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800d202:	7813      	ldrb	r3, [r2, #0]
 800d204:	3301      	adds	r3, #1
 800d206:	b25b      	sxtb	r3, r3
 800d208:	4299      	cmp	r1, r3
 800d20a:	7013      	strb	r3, [r2, #0]
 800d20c:	dc10      	bgt.n	800d230 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800d20e:	68e0      	ldr	r0, [r4, #12]
 800d210:	2300      	movs	r3, #0
 800d212:	7013      	strb	r3, [r2, #0]
 800d214:	6803      	ldr	r3, [r0, #0]
 800d216:	aa03      	add	r2, sp, #12
 800d218:	68db      	ldr	r3, [r3, #12]
 800d21a:	a902      	add	r1, sp, #8
 800d21c:	4798      	blx	r3
 800d21e:	6823      	ldr	r3, [r4, #0]
 800d220:	2800      	cmp	r0, #0
 800d222:	d050      	beq.n	800d2c6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800d224:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800d228:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d22c:	4620      	mov	r0, r4
 800d22e:	4798      	blx	r3
 800d230:	6960      	ldr	r0, [r4, #20]
 800d232:	2300      	movs	r3, #0
 800d234:	f88d 3007 	strb.w	r3, [sp, #7]
 800d238:	b158      	cbz	r0, 800d252 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800d23a:	6803      	ldr	r3, [r0, #0]
 800d23c:	f10d 0107 	add.w	r1, sp, #7
 800d240:	68db      	ldr	r3, [r3, #12]
 800d242:	4798      	blx	r3
 800d244:	b128      	cbz	r0, 800d252 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800d246:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800d248:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d24c:	6803      	ldr	r3, [r0, #0]
 800d24e:	68db      	ldr	r3, [r3, #12]
 800d250:	4798      	blx	r3
 800d252:	f104 001c 	add.w	r0, r4, #28
 800d256:	f014 f955 	bl	8021504 <_ZN8touchgfx8Gestures4tickEv>
 800d25a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800d25e:	b30b      	cbz	r3, 800d2a4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800d260:	6920      	ldr	r0, [r4, #16]
 800d262:	6803      	ldr	r3, [r0, #0]
 800d264:	691b      	ldr	r3, [r3, #16]
 800d266:	4798      	blx	r3
 800d268:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800d26a:	4606      	mov	r6, r0
 800d26c:	b903      	cbnz	r3, 800d270 <_ZN8touchgfx3HAL4tickEv+0x100>
 800d26e:	6760      	str	r0, [r4, #116]	; 0x74
 800d270:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800d272:	4a1e      	ldr	r2, [pc, #120]	; (800d2ec <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800d274:	1af3      	subs	r3, r6, r3
 800d276:	4293      	cmp	r3, r2
 800d278:	d914      	bls.n	800d2a4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800d27a:	6920      	ldr	r0, [r4, #16]
 800d27c:	6803      	ldr	r3, [r0, #0]
 800d27e:	699b      	ldr	r3, [r3, #24]
 800d280:	4798      	blx	r3
 800d282:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800d284:	2264      	movs	r2, #100	; 0x64
 800d286:	1af3      	subs	r3, r6, r3
 800d288:	fbb3 f3f2 	udiv	r3, r3, r2
 800d28c:	fbb0 f0f3 	udiv	r0, r0, r3
 800d290:	2800      	cmp	r0, #0
 800d292:	dc1d      	bgt.n	800d2d0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800d294:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800d298:	6920      	ldr	r0, [r4, #16]
 800d29a:	6803      	ldr	r3, [r0, #0]
 800d29c:	2100      	movs	r1, #0
 800d29e:	69db      	ldr	r3, [r3, #28]
 800d2a0:	4798      	blx	r3
 800d2a2:	6766      	str	r6, [r4, #116]	; 0x74
 800d2a4:	f003 fbf6 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 800d2a8:	6803      	ldr	r3, [r0, #0]
 800d2aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d2ac:	4798      	blx	r3
 800d2ae:	6823      	ldr	r3, [r4, #0]
 800d2b0:	4620      	mov	r0, r4
 800d2b2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800d2b6:	4798      	blx	r3
 800d2b8:	2001      	movs	r0, #1
 800d2ba:	f7f3 fa5f 	bl	800077c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d2be:	2300      	movs	r3, #0
 800d2c0:	702b      	strb	r3, [r5, #0]
 800d2c2:	b004      	add	sp, #16
 800d2c4:	bd70      	pop	{r4, r5, r6, pc}
 800d2c6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800d2ca:	4620      	mov	r0, r4
 800d2cc:	4798      	blx	r3
 800d2ce:	e7af      	b.n	800d230 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800d2d0:	2863      	cmp	r0, #99	; 0x63
 800d2d2:	bfcb      	itete	gt
 800d2d4:	2300      	movgt	r3, #0
 800d2d6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800d2da:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800d2de:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800d2e2:	e7d9      	b.n	800d298 <_ZN8touchgfx3HAL4tickEv+0x128>
 800d2e4:	20014fd8 	.word	0x20014fd8
 800d2e8:	20014fd9 	.word	0x20014fd9
 800d2ec:	05f5e100 	.word	0x05f5e100

0800d2f0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800d2f0:	b510      	push	{r4, lr}
 800d2f2:	4604      	mov	r4, r0
 800d2f4:	f7f3 fb56 	bl	80009a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800d2f8:	6863      	ldr	r3, [r4, #4]
 800d2fa:	2200      	movs	r2, #0
 800d2fc:	729a      	strb	r2, [r3, #10]
 800d2fe:	bd10      	pop	{r4, pc}

0800d300 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800d300:	65c1      	str	r1, [r0, #92]	; 0x5c
 800d302:	301c      	adds	r0, #28
 800d304:	f014 b8fc 	b.w	8021500 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800d308 <_ZN8touchgfx3HAL5touchEll>:
 800d308:	b530      	push	{r4, r5, lr}
 800d30a:	b087      	sub	sp, #28
 800d30c:	4604      	mov	r4, r0
 800d30e:	a804      	add	r0, sp, #16
 800d310:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800d314:	f003 f98a 	bl	801062c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800d318:	9b04      	ldr	r3, [sp, #16]
 800d31a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d31e:	a906      	add	r1, sp, #24
 800d320:	9b05      	ldr	r3, [sp, #20]
 800d322:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800d326:	a803      	add	r0, sp, #12
 800d328:	f003 f9d2 	bl	80106d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800d32c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800d330:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d334:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d338:	f104 001c 	add.w	r0, r4, #28
 800d33c:	b189      	cbz	r1, 800d362 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800d33e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800d342:	9300      	str	r3, [sp, #0]
 800d344:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800d348:	4613      	mov	r3, r2
 800d34a:	462a      	mov	r2, r5
 800d34c:	f014 f8e8 	bl	8021520 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800d350:	b128      	cbz	r0, 800d35e <_ZN8touchgfx3HAL5touchEll+0x56>
 800d352:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d356:	6623      	str	r3, [r4, #96]	; 0x60
 800d358:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d35c:	6663      	str	r3, [r4, #100]	; 0x64
 800d35e:	b007      	add	sp, #28
 800d360:	bd30      	pop	{r4, r5, pc}
 800d362:	f014 f91d 	bl	80215a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d366:	2301      	movs	r3, #1
 800d368:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800d36c:	e7f1      	b.n	800d352 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800d36e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800d36e:	b510      	push	{r4, lr}
 800d370:	2b00      	cmp	r3, #0
 800d372:	d046      	beq.n	800d402 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d374:	ea81 0002 	eor.w	r0, r1, r2
 800d378:	07c4      	lsls	r4, r0, #31
 800d37a:	d508      	bpl.n	800d38e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800d37c:	440b      	add	r3, r1
 800d37e:	3a01      	subs	r2, #1
 800d380:	428b      	cmp	r3, r1
 800d382:	d93e      	bls.n	800d402 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d384:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d388:	f801 0b01 	strb.w	r0, [r1], #1
 800d38c:	e7f8      	b.n	800d380 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800d38e:	07d0      	lsls	r0, r2, #31
 800d390:	bf42      	ittt	mi
 800d392:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800d396:	f801 0b01 	strbmi.w	r0, [r1], #1
 800d39a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800d39e:	2b01      	cmp	r3, #1
 800d3a0:	d911      	bls.n	800d3c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d3a2:	ea81 0402 	eor.w	r4, r1, r2
 800d3a6:	07a4      	lsls	r4, r4, #30
 800d3a8:	4610      	mov	r0, r2
 800d3aa:	d022      	beq.n	800d3f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800d3ac:	f023 0401 	bic.w	r4, r3, #1
 800d3b0:	440c      	add	r4, r1
 800d3b2:	428c      	cmp	r4, r1
 800d3b4:	4602      	mov	r2, r0
 800d3b6:	d904      	bls.n	800d3c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800d3b8:	8812      	ldrh	r2, [r2, #0]
 800d3ba:	f821 2b02 	strh.w	r2, [r1], #2
 800d3be:	3002      	adds	r0, #2
 800d3c0:	e7f7      	b.n	800d3b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800d3c2:	f003 0301 	and.w	r3, r3, #1
 800d3c6:	f023 0003 	bic.w	r0, r3, #3
 800d3ca:	4408      	add	r0, r1
 800d3cc:	4288      	cmp	r0, r1
 800d3ce:	4614      	mov	r4, r2
 800d3d0:	d904      	bls.n	800d3dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800d3d2:	6824      	ldr	r4, [r4, #0]
 800d3d4:	f841 4b04 	str.w	r4, [r1], #4
 800d3d8:	3204      	adds	r2, #4
 800d3da:	e7f7      	b.n	800d3cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800d3dc:	f003 0303 	and.w	r3, r3, #3
 800d3e0:	440b      	add	r3, r1
 800d3e2:	3a01      	subs	r2, #1
 800d3e4:	428b      	cmp	r3, r1
 800d3e6:	d90c      	bls.n	800d402 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d3e8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d3ec:	f801 0b01 	strb.w	r0, [r1], #1
 800d3f0:	e7f8      	b.n	800d3e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800d3f2:	0790      	lsls	r0, r2, #30
 800d3f4:	d0e7      	beq.n	800d3c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d3f6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800d3fa:	f821 0b02 	strh.w	r0, [r1], #2
 800d3fe:	3b02      	subs	r3, #2
 800d400:	e7e1      	b.n	800d3c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d402:	2001      	movs	r0, #1
 800d404:	bd10      	pop	{r4, pc}

0800d406 <_ZN8touchgfx3HAL7noTouchEv>:
 800d406:	b510      	push	{r4, lr}
 800d408:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800d40c:	4604      	mov	r4, r0
 800d40e:	b153      	cbz	r3, 800d426 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800d410:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800d414:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800d418:	2101      	movs	r1, #1
 800d41a:	301c      	adds	r0, #28
 800d41c:	f014 f8c0 	bl	80215a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d420:	2300      	movs	r3, #0
 800d422:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800d426:	bd10      	pop	{r4, pc}

0800d428 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800d428:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d42c:	b085      	sub	sp, #20
 800d42e:	ad04      	add	r5, sp, #16
 800d430:	4604      	mov	r4, r0
 800d432:	2000      	movs	r0, #0
 800d434:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d438:	69a0      	ldr	r0, [r4, #24]
 800d43a:	6806      	ldr	r6, [r0, #0]
 800d43c:	9501      	str	r5, [sp, #4]
 800d43e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800d442:	9500      	str	r5, [sp, #0]
 800d444:	6835      	ldr	r5, [r6, #0]
 800d446:	4699      	mov	r9, r3
 800d448:	460f      	mov	r7, r1
 800d44a:	4690      	mov	r8, r2
 800d44c:	47a8      	blx	r5
 800d44e:	4d10      	ldr	r5, [pc, #64]	; (800d490 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800d450:	4606      	mov	r6, r0
 800d452:	f8a5 9000 	strh.w	r9, [r5]
 800d456:	f7f5 fc51 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800d45a:	6803      	ldr	r3, [r0, #0]
 800d45c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d45e:	4798      	blx	r3
 800d460:	b128      	cbz	r0, 800d46e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800d462:	2801      	cmp	r0, #1
 800d464:	d00b      	beq.n	800d47e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800d466:	4630      	mov	r0, r6
 800d468:	b005      	add	sp, #20
 800d46a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d46e:	882b      	ldrh	r3, [r5, #0]
 800d470:	fb08 7203 	mla	r2, r8, r3, r7
 800d474:	9b03      	ldr	r3, [sp, #12]
 800d476:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800d47a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800d47c:	e7f3      	b.n	800d466 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800d47e:	882a      	ldrh	r2, [r5, #0]
 800d480:	9b03      	ldr	r3, [sp, #12]
 800d482:	fb08 7202 	mla	r2, r8, r2, r7
 800d486:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800d48a:	1a9a      	subs	r2, r3, r2
 800d48c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800d48e:	e7ea      	b.n	800d466 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800d490:	20014fce 	.word	0x20014fce

0800d494 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800d494:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d496:	b08b      	sub	sp, #44	; 0x2c
 800d498:	4617      	mov	r7, r2
 800d49a:	4604      	mov	r4, r0
 800d49c:	460e      	mov	r6, r1
 800d49e:	461d      	mov	r5, r3
 800d4a0:	f7f5 fc2c 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800d4a4:	6803      	ldr	r3, [r0, #0]
 800d4a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d4a8:	4798      	blx	r3
 800d4aa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800d4ae:	9007      	str	r0, [sp, #28]
 800d4b0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d4b4:	4b0d      	ldr	r3, [pc, #52]	; (800d4ec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800d4b6:	6822      	ldr	r2, [r4, #0]
 800d4b8:	881b      	ldrh	r3, [r3, #0]
 800d4ba:	9306      	str	r3, [sp, #24]
 800d4bc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800d4c0:	9305      	str	r3, [sp, #20]
 800d4c2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800d4c6:	9304      	str	r3, [sp, #16]
 800d4c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d4cc:	9303      	str	r3, [sp, #12]
 800d4ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d4d2:	9302      	str	r3, [sp, #8]
 800d4d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800d4d8:	e9cd 5300 	strd	r5, r3, [sp]
 800d4dc:	4631      	mov	r1, r6
 800d4de:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800d4e0:	463b      	mov	r3, r7
 800d4e2:	2200      	movs	r2, #0
 800d4e4:	4620      	mov	r0, r4
 800d4e6:	47a8      	blx	r5
 800d4e8:	b00b      	add	sp, #44	; 0x2c
 800d4ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d4ec:	20014fce 	.word	0x20014fce

0800d4f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800d4f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d4f4:	4698      	mov	r8, r3
 800d4f6:	6803      	ldr	r3, [r0, #0]
 800d4f8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800d4fa:	4b15      	ldr	r3, [pc, #84]	; (800d550 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800d4fc:	b08b      	sub	sp, #44	; 0x2c
 800d4fe:	4617      	mov	r7, r2
 800d500:	f8b3 9000 	ldrh.w	r9, [r3]
 800d504:	460e      	mov	r6, r1
 800d506:	4604      	mov	r4, r0
 800d508:	f7f5 fbf8 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800d50c:	6803      	ldr	r3, [r0, #0]
 800d50e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d510:	4798      	blx	r3
 800d512:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800d516:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d51a:	2302      	movs	r3, #2
 800d51c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800d520:	2301      	movs	r3, #1
 800d522:	9305      	str	r3, [sp, #20]
 800d524:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800d528:	9304      	str	r3, [sp, #16]
 800d52a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800d52e:	9303      	str	r3, [sp, #12]
 800d530:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800d534:	9302      	str	r3, [sp, #8]
 800d536:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d53a:	2200      	movs	r2, #0
 800d53c:	e9cd 8300 	strd	r8, r3, [sp]
 800d540:	4631      	mov	r1, r6
 800d542:	463b      	mov	r3, r7
 800d544:	4620      	mov	r0, r4
 800d546:	47a8      	blx	r5
 800d548:	b00b      	add	sp, #44	; 0x2c
 800d54a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d54e:	bf00      	nop
 800d550:	20014fce 	.word	0x20014fce

0800d554 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800d554:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d558:	4698      	mov	r8, r3
 800d55a:	6803      	ldr	r3, [r0, #0]
 800d55c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800d55e:	4b11      	ldr	r3, [pc, #68]	; (800d5a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800d560:	b087      	sub	sp, #28
 800d562:	f8b3 9000 	ldrh.w	r9, [r3]
 800d566:	460e      	mov	r6, r1
 800d568:	4617      	mov	r7, r2
 800d56a:	4604      	mov	r4, r0
 800d56c:	f7f5 fbc6 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800d570:	6803      	ldr	r3, [r0, #0]
 800d572:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d574:	4798      	blx	r3
 800d576:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800d57a:	f8cd 900c 	str.w	r9, [sp, #12]
 800d57e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800d582:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800d586:	9302      	str	r3, [sp, #8]
 800d588:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800d58c:	9301      	str	r3, [sp, #4]
 800d58e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800d592:	9300      	str	r3, [sp, #0]
 800d594:	463a      	mov	r2, r7
 800d596:	4643      	mov	r3, r8
 800d598:	4631      	mov	r1, r6
 800d59a:	4620      	mov	r0, r4
 800d59c:	47a8      	blx	r5
 800d59e:	b007      	add	sp, #28
 800d5a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5a4:	20014fce 	.word	0x20014fce

0800d5a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800d5a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5ac:	4604      	mov	r4, r0
 800d5ae:	b08f      	sub	sp, #60	; 0x3c
 800d5b0:	4610      	mov	r0, r2
 800d5b2:	460d      	mov	r5, r1
 800d5b4:	4691      	mov	r9, r2
 800d5b6:	461e      	mov	r6, r3
 800d5b8:	f006 fb8c 	bl	8013cd4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800d5bc:	2800      	cmp	r0, #0
 800d5be:	f000 809d 	beq.w	800d6fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800d5c2:	6823      	ldr	r3, [r4, #0]
 800d5c4:	f8df b198 	ldr.w	fp, [pc, #408]	; 800d760 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800d5c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d5ca:	f8df a198 	ldr.w	sl, [pc, #408]	; 800d764 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800d5ce:	4f61      	ldr	r7, [pc, #388]	; (800d754 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d5d0:	4620      	mov	r0, r4
 800d5d2:	4798      	blx	r3
 800d5d4:	6823      	ldr	r3, [r4, #0]
 800d5d6:	4620      	mov	r0, r4
 800d5d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d5da:	4798      	blx	r3
 800d5dc:	f8bb 3000 	ldrh.w	r3, [fp]
 800d5e0:	9301      	str	r3, [sp, #4]
 800d5e2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800d5e6:	f8ba 3000 	ldrh.w	r3, [sl]
 800d5ea:	9302      	str	r3, [sp, #8]
 800d5ec:	883b      	ldrh	r3, [r7, #0]
 800d5ee:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800d5f2:	9303      	str	r3, [sp, #12]
 800d5f4:	4b58      	ldr	r3, [pc, #352]	; (800d758 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800d5f6:	9305      	str	r3, [sp, #20]
 800d5f8:	881a      	ldrh	r2, [r3, #0]
 800d5fa:	9204      	str	r2, [sp, #16]
 800d5fc:	4640      	mov	r0, r8
 800d5fe:	f006 fbfd 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d602:	8038      	strh	r0, [r7, #0]
 800d604:	4640      	mov	r0, r8
 800d606:	f006 fc2d 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d60a:	9b05      	ldr	r3, [sp, #20]
 800d60c:	b280      	uxth	r0, r0
 800d60e:	8018      	strh	r0, [r3, #0]
 800d610:	4b52      	ldr	r3, [pc, #328]	; (800d75c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800d612:	781b      	ldrb	r3, [r3, #0]
 800d614:	2b00      	cmp	r3, #0
 800d616:	d174      	bne.n	800d702 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800d618:	883b      	ldrh	r3, [r7, #0]
 800d61a:	f8ab 3000 	strh.w	r3, [fp]
 800d61e:	f8aa 0000 	strh.w	r0, [sl]
 800d622:	4648      	mov	r0, r9
 800d624:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800d628:	f006 fb54 	bl	8013cd4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800d62c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800d630:	2200      	movs	r2, #0
 800d632:	4611      	mov	r1, r2
 800d634:	4628      	mov	r0, r5
 800d636:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800d63a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800d63e:	f7f4 fea5 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 800d642:	2301      	movs	r3, #1
 800d644:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800d648:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800d64c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800d650:	2b00      	cmp	r3, #0
 800d652:	dd5c      	ble.n	800d70e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800d654:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800d658:	2b00      	cmp	r3, #0
 800d65a:	dd58      	ble.n	800d70e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800d65c:	462a      	mov	r2, r5
 800d65e:	ab0a      	add	r3, sp, #40	; 0x28
 800d660:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d664:	6851      	ldr	r1, [r2, #4]
 800d666:	c303      	stmia	r3!, {r0, r1}
 800d668:	4631      	mov	r1, r6
 800d66a:	a80a      	add	r0, sp, #40	; 0x28
 800d66c:	f7ff fc06 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800d670:	4b38      	ldr	r3, [pc, #224]	; (800d754 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d672:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d676:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800d67a:	2100      	movs	r1, #0
 800d67c:	aa0a      	add	r2, sp, #40	; 0x28
 800d67e:	4b36      	ldr	r3, [pc, #216]	; (800d758 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800d680:	910c      	str	r1, [sp, #48]	; 0x30
 800d682:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d686:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d68a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d68e:	ab08      	add	r3, sp, #32
 800d690:	e883 0003 	stmia.w	r3, {r0, r1}
 800d694:	4618      	mov	r0, r3
 800d696:	a90c      	add	r1, sp, #48	; 0x30
 800d698:	f7ff fbf0 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800d69c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800d69e:	2b00      	cmp	r3, #0
 800d6a0:	d13c      	bne.n	800d71c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800d6a2:	2000      	movs	r0, #0
 800d6a4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800d6a8:	2600      	movs	r6, #0
 800d6aa:	682a      	ldr	r2, [r5, #0]
 800d6ac:	696b      	ldr	r3, [r5, #20]
 800d6ae:	616e      	str	r6, [r5, #20]
 800d6b0:	9305      	str	r3, [sp, #20]
 800d6b2:	6892      	ldr	r2, [r2, #8]
 800d6b4:	a908      	add	r1, sp, #32
 800d6b6:	4628      	mov	r0, r5
 800d6b8:	4790      	blx	r2
 800d6ba:	9b05      	ldr	r3, [sp, #20]
 800d6bc:	616b      	str	r3, [r5, #20]
 800d6be:	4652      	mov	r2, sl
 800d6c0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 800d6c4:	4649      	mov	r1, r9
 800d6c6:	4628      	mov	r0, r5
 800d6c8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800d6cc:	f7f4 fe5e 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 800d6d0:	4b23      	ldr	r3, [pc, #140]	; (800d760 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800d6d2:	9a01      	ldr	r2, [sp, #4]
 800d6d4:	801a      	strh	r2, [r3, #0]
 800d6d6:	4b23      	ldr	r3, [pc, #140]	; (800d764 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800d6d8:	9a02      	ldr	r2, [sp, #8]
 800d6da:	801a      	strh	r2, [r3, #0]
 800d6dc:	4b1d      	ldr	r3, [pc, #116]	; (800d754 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d6de:	9a03      	ldr	r2, [sp, #12]
 800d6e0:	801a      	strh	r2, [r3, #0]
 800d6e2:	4b1d      	ldr	r3, [pc, #116]	; (800d758 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800d6e4:	9a04      	ldr	r2, [sp, #16]
 800d6e6:	801a      	strh	r2, [r3, #0]
 800d6e8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800d6ec:	6823      	ldr	r3, [r4, #0]
 800d6ee:	4620      	mov	r0, r4
 800d6f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d6f2:	4798      	blx	r3
 800d6f4:	6823      	ldr	r3, [r4, #0]
 800d6f6:	4620      	mov	r0, r4
 800d6f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d6fa:	4798      	blx	r3
 800d6fc:	b00f      	add	sp, #60	; 0x3c
 800d6fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d702:	883b      	ldrh	r3, [r7, #0]
 800d704:	f8ab 0000 	strh.w	r0, [fp]
 800d708:	f8aa 3000 	strh.w	r3, [sl]
 800d70c:	e789      	b.n	800d622 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800d70e:	462a      	mov	r2, r5
 800d710:	ab0a      	add	r3, sp, #40	; 0x28
 800d712:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d716:	6851      	ldr	r1, [r2, #4]
 800d718:	c303      	stmia	r3!, {r0, r1}
 800d71a:	e7a9      	b.n	800d670 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800d71c:	a807      	add	r0, sp, #28
 800d71e:	f006 fcdd 	bl	80140dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d722:	4606      	mov	r6, r0
 800d724:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800d726:	6803      	ldr	r3, [r0, #0]
 800d728:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d72a:	4798      	blx	r3
 800d72c:	4286      	cmp	r6, r0
 800d72e:	d1b8      	bne.n	800d6a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800d730:	f7f5 fae4 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800d734:	6803      	ldr	r3, [r0, #0]
 800d736:	4606      	mov	r6, r0
 800d738:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d73a:	9305      	str	r3, [sp, #20]
 800d73c:	a807      	add	r0, sp, #28
 800d73e:	f006 fccd 	bl	80140dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d742:	9b05      	ldr	r3, [sp, #20]
 800d744:	4601      	mov	r1, r0
 800d746:	4630      	mov	r0, r6
 800d748:	4798      	blx	r3
 800d74a:	f080 0001 	eor.w	r0, r0, #1
 800d74e:	b2c0      	uxtb	r0, r0
 800d750:	e7a8      	b.n	800d6a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800d752:	bf00      	nop
 800d754:	20014fc8 	.word	0x20014fc8
 800d758:	20014fca 	.word	0x20014fca
 800d75c:	20014fcc 	.word	0x20014fcc
 800d760:	20014fce 	.word	0x20014fce
 800d764:	20014fd0 	.word	0x20014fd0

0800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800d768:	b510      	push	{r4, lr}
 800d76a:	4b07      	ldr	r3, [pc, #28]	; (800d788 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800d76c:	781b      	ldrb	r3, [r3, #0]
 800d76e:	4604      	mov	r4, r0
 800d770:	b13b      	cbz	r3, 800d782 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800d772:	6803      	ldr	r3, [r0, #0]
 800d774:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d776:	4798      	blx	r3
 800d778:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d77a:	4283      	cmp	r3, r0
 800d77c:	d101      	bne.n	800d782 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800d77e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800d780:	bd10      	pop	{r4, pc}
 800d782:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800d784:	e7fc      	b.n	800d780 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800d786:	bf00      	nop
 800d788:	20014fd2 	.word	0x20014fd2

0800d78c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800d78c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d790:	b08a      	sub	sp, #40	; 0x28
 800d792:	461d      	mov	r5, r3
 800d794:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d798:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d79c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800d7a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d7a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d7a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d7ac:	2400      	movs	r4, #0
 800d7ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d7b2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800d7b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d7ba:	4690      	mov	r8, r2
 800d7bc:	4607      	mov	r7, r0
 800d7be:	9404      	str	r4, [sp, #16]
 800d7c0:	f88d 4020 	strb.w	r4, [sp, #32]
 800d7c4:	f7ff ffd0 	bl	800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d7c8:	fb06 8505 	mla	r5, r6, r5, r8
 800d7cc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d7d0:	6878      	ldr	r0, [r7, #4]
 800d7d2:	9505      	str	r5, [sp, #20]
 800d7d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d7d8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d7dc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800d7e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800d7e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800d7e8:	6803      	ldr	r3, [r0, #0]
 800d7ea:	a901      	add	r1, sp, #4
 800d7ec:	685b      	ldr	r3, [r3, #4]
 800d7ee:	4798      	blx	r3
 800d7f0:	b00a      	add	sp, #40	; 0x28
 800d7f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d7f6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800d7f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7fa:	b08b      	sub	sp, #44	; 0x2c
 800d7fc:	2400      	movs	r4, #0
 800d7fe:	461d      	mov	r5, r3
 800d800:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800d804:	4688      	mov	r8, r1
 800d806:	4691      	mov	r9, r2
 800d808:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800d80c:	9404      	str	r4, [sp, #16]
 800d80e:	4607      	mov	r7, r0
 800d810:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d814:	f7ff ffa8 	bl	800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d818:	fb06 9505 	mla	r5, r6, r5, r9
 800d81c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d820:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d824:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800d828:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800d82c:	6878      	ldr	r0, [r7, #4]
 800d82e:	9505      	str	r5, [sp, #20]
 800d830:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d834:	f8ad 401c 	strh.w	r4, [sp, #28]
 800d838:	f8ad 601e 	strh.w	r6, [sp, #30]
 800d83c:	f8cd 8010 	str.w	r8, [sp, #16]
 800d840:	f8ad 4020 	strh.w	r4, [sp, #32]
 800d844:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d848:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800d84c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800d850:	6803      	ldr	r3, [r0, #0]
 800d852:	a901      	add	r1, sp, #4
 800d854:	685b      	ldr	r3, [r3, #4]
 800d856:	4798      	blx	r3
 800d858:	b00b      	add	sp, #44	; 0x2c
 800d85a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800d860 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800d860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d864:	b08a      	sub	sp, #40	; 0x28
 800d866:	4698      	mov	r8, r3
 800d868:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800d86c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800d870:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800d874:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800d878:	2300      	movs	r3, #0
 800d87a:	2d0b      	cmp	r5, #11
 800d87c:	4606      	mov	r6, r0
 800d87e:	9304      	str	r3, [sp, #16]
 800d880:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800d884:	d138      	bne.n	800d8f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800d886:	2380      	movs	r3, #128	; 0x80
 800d888:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d88c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d890:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d894:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800d898:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d89c:	f88d 0020 	strb.w	r0, [sp, #32]
 800d8a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800d8a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d8a8:	4630      	mov	r0, r6
 800d8aa:	9203      	str	r2, [sp, #12]
 800d8ac:	f7ff ff5c 	bl	800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d8b0:	2c0b      	cmp	r4, #11
 800d8b2:	bf98      	it	ls
 800d8b4:	4b1b      	ldrls	r3, [pc, #108]	; (800d924 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800d8b6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800d8ba:	bf98      	it	ls
 800d8bc:	5d19      	ldrbls	r1, [r3, r4]
 800d8be:	f8ad 701e 	strh.w	r7, [sp, #30]
 800d8c2:	bf88      	it	hi
 800d8c4:	2100      	movhi	r1, #0
 800d8c6:	fb02 8307 	mla	r3, r2, r7, r8
 800d8ca:	10c9      	asrs	r1, r1, #3
 800d8cc:	fb01 0003 	mla	r0, r1, r3, r0
 800d8d0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800d8d4:	9005      	str	r0, [sp, #20]
 800d8d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800d8da:	6870      	ldr	r0, [r6, #4]
 800d8dc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800d8e0:	2300      	movs	r3, #0
 800d8e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800d8e6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d8ea:	6803      	ldr	r3, [r0, #0]
 800d8ec:	a901      	add	r1, sp, #4
 800d8ee:	685b      	ldr	r3, [r3, #4]
 800d8f0:	4798      	blx	r3
 800d8f2:	b00a      	add	sp, #40	; 0x28
 800d8f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8f8:	2d02      	cmp	r5, #2
 800d8fa:	d109      	bne.n	800d910 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800d8fc:	28ff      	cmp	r0, #255	; 0xff
 800d8fe:	d105      	bne.n	800d90c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800d900:	f1bc 0f00 	cmp.w	ip, #0
 800d904:	bf14      	ite	ne
 800d906:	2340      	movne	r3, #64	; 0x40
 800d908:	2320      	moveq	r3, #32
 800d90a:	e7bd      	b.n	800d888 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d90c:	2340      	movs	r3, #64	; 0x40
 800d90e:	e7bb      	b.n	800d888 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d910:	28ff      	cmp	r0, #255	; 0xff
 800d912:	d105      	bne.n	800d920 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800d914:	f1bc 0f00 	cmp.w	ip, #0
 800d918:	bf14      	ite	ne
 800d91a:	2304      	movne	r3, #4
 800d91c:	2301      	moveq	r3, #1
 800d91e:	e7b3      	b.n	800d888 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d920:	2304      	movs	r3, #4
 800d922:	e7b1      	b.n	800d888 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800d924:	08024ac4 	.word	0x08024ac4

0800d928 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800d928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d92c:	b08b      	sub	sp, #44	; 0x2c
 800d92e:	461d      	mov	r5, r3
 800d930:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d934:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800d938:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800d93c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800d940:	bf14      	ite	ne
 800d942:	2308      	movne	r3, #8
 800d944:	2302      	moveq	r3, #2
 800d946:	2400      	movs	r4, #0
 800d948:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d94c:	4688      	mov	r8, r1
 800d94e:	4693      	mov	fp, r2
 800d950:	9404      	str	r4, [sp, #16]
 800d952:	4607      	mov	r7, r0
 800d954:	f7ff ff08 	bl	800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d958:	2e0b      	cmp	r6, #11
 800d95a:	bf98      	it	ls
 800d95c:	4b15      	ldrls	r3, [pc, #84]	; (800d9b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800d95e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800d962:	bf98      	it	ls
 800d964:	5d9c      	ldrbls	r4, [r3, r6]
 800d966:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800d96a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d96e:	fb05 b50a 	mla	r5, r5, sl, fp
 800d972:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800d976:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d97a:	10e4      	asrs	r4, r4, #3
 800d97c:	fb04 0405 	mla	r4, r4, r5, r0
 800d980:	2300      	movs	r3, #0
 800d982:	6878      	ldr	r0, [r7, #4]
 800d984:	9405      	str	r4, [sp, #20]
 800d986:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d98a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800d98e:	f8cd 8010 	str.w	r8, [sp, #16]
 800d992:	f88d 9020 	strb.w	r9, [sp, #32]
 800d996:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800d99a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800d99e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800d9a2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800d9a6:	6803      	ldr	r3, [r0, #0]
 800d9a8:	a901      	add	r1, sp, #4
 800d9aa:	685b      	ldr	r3, [r3, #4]
 800d9ac:	4798      	blx	r3
 800d9ae:	b00b      	add	sp, #44	; 0x2c
 800d9b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9b4:	08024ac4 	.word	0x08024ac4

0800d9b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800d9b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d9bc:	461e      	mov	r6, r3
 800d9be:	4b0a      	ldr	r3, [pc, #40]	; (800d9e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800d9c0:	460f      	mov	r7, r1
 800d9c2:	881d      	ldrh	r5, [r3, #0]
 800d9c4:	4690      	mov	r8, r2
 800d9c6:	f7f5 f999 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800d9ca:	6803      	ldr	r3, [r0, #0]
 800d9cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d9ce:	4798      	blx	r3
 800d9d0:	280b      	cmp	r0, #11
 800d9d2:	bf9a      	itte	ls
 800d9d4:	4b05      	ldrls	r3, [pc, #20]	; (800d9ec <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800d9d6:	5c1c      	ldrbls	r4, [r3, r0]
 800d9d8:	2400      	movhi	r4, #0
 800d9da:	fb08 7005 	mla	r0, r8, r5, r7
 800d9de:	10e4      	asrs	r4, r4, #3
 800d9e0:	fb04 6000 	mla	r0, r4, r0, r6
 800d9e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d9e8:	20014fce 	.word	0x20014fce
 800d9ec:	08024ac4 	.word	0x08024ac4

0800d9f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800d9f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d9f2:	b08b      	sub	sp, #44	; 0x2c
 800d9f4:	461f      	mov	r7, r3
 800d9f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800d9fa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d9fe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800da02:	f8ad 3018 	strh.w	r3, [sp, #24]
 800da06:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800da0a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800da0e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800da12:	f8ad 301c 	strh.w	r3, [sp, #28]
 800da16:	2500      	movs	r5, #0
 800da18:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800da1c:	f88d 3020 	strb.w	r3, [sp, #32]
 800da20:	4604      	mov	r4, r0
 800da22:	4616      	mov	r6, r2
 800da24:	9504      	str	r5, [sp, #16]
 800da26:	f7ff fe9f 	bl	800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800da2a:	463a      	mov	r2, r7
 800da2c:	4631      	mov	r1, r6
 800da2e:	4603      	mov	r3, r0
 800da30:	4620      	mov	r0, r4
 800da32:	f7ff ffc1 	bl	800d9b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800da36:	4b0e      	ldr	r3, [pc, #56]	; (800da70 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800da38:	9005      	str	r0, [sp, #20]
 800da3a:	881b      	ldrh	r3, [r3, #0]
 800da3c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800da40:	f7f5 f95c 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800da44:	6803      	ldr	r3, [r0, #0]
 800da46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800da48:	4798      	blx	r3
 800da4a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800da4c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800da50:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800da54:	9304      	str	r3, [sp, #16]
 800da56:	6860      	ldr	r0, [r4, #4]
 800da58:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800da5c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800da60:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800da64:	6803      	ldr	r3, [r0, #0]
 800da66:	a901      	add	r1, sp, #4
 800da68:	685b      	ldr	r3, [r3, #4]
 800da6a:	4798      	blx	r3
 800da6c:	b00b      	add	sp, #44	; 0x2c
 800da6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da70:	20014fce 	.word	0x20014fce

0800da74 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800da74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da76:	b08d      	sub	sp, #52	; 0x34
 800da78:	466b      	mov	r3, sp
 800da7a:	e883 0006 	stmia.w	r3, {r1, r2}
 800da7e:	2300      	movs	r3, #0
 800da80:	9306      	str	r3, [sp, #24]
 800da82:	6803      	ldr	r3, [r0, #0]
 800da84:	f8bd 6000 	ldrh.w	r6, [sp]
 800da88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800da8a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800da8e:	2501      	movs	r5, #1
 800da90:	9503      	str	r5, [sp, #12]
 800da92:	4604      	mov	r4, r0
 800da94:	4798      	blx	r3
 800da96:	463a      	mov	r2, r7
 800da98:	4631      	mov	r1, r6
 800da9a:	4603      	mov	r3, r0
 800da9c:	4620      	mov	r0, r4
 800da9e:	f7ff ff8b 	bl	800d9b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800daa2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800daa4:	9307      	str	r3, [sp, #28]
 800daa6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800daaa:	f8ad 3020 	strh.w	r3, [sp, #32]
 800daae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800dab2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800dab6:	4b0f      	ldr	r3, [pc, #60]	; (800daf4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800dab8:	9004      	str	r0, [sp, #16]
 800daba:	881b      	ldrh	r3, [r3, #0]
 800dabc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800dac0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800dac4:	f7f5 f91a 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800dac8:	6803      	ldr	r3, [r0, #0]
 800daca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dacc:	4798      	blx	r3
 800dace:	23ff      	movs	r3, #255	; 0xff
 800dad0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800dad4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800dad8:	6860      	ldr	r0, [r4, #4]
 800dada:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800dade:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800dae2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800dae6:	6803      	ldr	r3, [r0, #0]
 800dae8:	a903      	add	r1, sp, #12
 800daea:	685b      	ldr	r3, [r3, #4]
 800daec:	4798      	blx	r3
 800daee:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800daf0:	b00d      	add	sp, #52	; 0x34
 800daf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800daf4:	20014fce 	.word	0x20014fce

0800daf8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800daf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dafc:	b08c      	sub	sp, #48	; 0x30
 800dafe:	461e      	mov	r6, r3
 800db00:	466d      	mov	r5, sp
 800db02:	2300      	movs	r3, #0
 800db04:	e885 0006 	stmia.w	r5, {r1, r2}
 800db08:	9306      	str	r3, [sp, #24]
 800db0a:	6803      	ldr	r3, [r0, #0]
 800db0c:	f8bd 7000 	ldrh.w	r7, [sp]
 800db10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800db12:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800db16:	2501      	movs	r5, #1
 800db18:	9503      	str	r5, [sp, #12]
 800db1a:	4604      	mov	r4, r0
 800db1c:	4798      	blx	r3
 800db1e:	4642      	mov	r2, r8
 800db20:	4639      	mov	r1, r7
 800db22:	4603      	mov	r3, r0
 800db24:	4620      	mov	r0, r4
 800db26:	f7ff ff47 	bl	800d9b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800db2a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800db2e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800db32:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800db36:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800db3a:	4b11      	ldr	r3, [pc, #68]	; (800db80 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800db3c:	9004      	str	r0, [sp, #16]
 800db3e:	881b      	ldrh	r3, [r3, #0]
 800db40:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800db44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800db46:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800db4a:	9607      	str	r6, [sp, #28]
 800db4c:	f7f5 f8d6 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800db50:	6803      	ldr	r3, [r0, #0]
 800db52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800db54:	4798      	blx	r3
 800db56:	23ff      	movs	r3, #255	; 0xff
 800db58:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800db5c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800db60:	6860      	ldr	r0, [r4, #4]
 800db62:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800db66:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800db6a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800db6e:	6803      	ldr	r3, [r0, #0]
 800db70:	a903      	add	r1, sp, #12
 800db72:	685b      	ldr	r3, [r3, #4]
 800db74:	4798      	blx	r3
 800db76:	4630      	mov	r0, r6
 800db78:	b00c      	add	sp, #48	; 0x30
 800db7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db7e:	bf00      	nop
 800db80:	20014fce 	.word	0x20014fce

0800db84 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800db84:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db86:	b085      	sub	sp, #20
 800db88:	ac02      	add	r4, sp, #8
 800db8a:	e884 0006 	stmia.w	r4, {r1, r2}
 800db8e:	4605      	mov	r5, r0
 800db90:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800db94:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800db98:	f7ff fde6 	bl	800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800db9c:	463a      	mov	r2, r7
 800db9e:	4603      	mov	r3, r0
 800dba0:	4631      	mov	r1, r6
 800dba2:	4628      	mov	r0, r5
 800dba4:	f7ff ff08 	bl	800d9b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800dba8:	4a05      	ldr	r2, [pc, #20]	; (800dbc0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800dbaa:	682b      	ldr	r3, [r5, #0]
 800dbac:	8812      	ldrh	r2, [r2, #0]
 800dbae:	9200      	str	r2, [sp, #0]
 800dbb0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800dbb2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800dbb6:	4603      	mov	r3, r0
 800dbb8:	4628      	mov	r0, r5
 800dbba:	47b0      	blx	r6
 800dbbc:	b005      	add	sp, #20
 800dbbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dbc0:	20014fce 	.word	0x20014fce

0800dbc4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800dbc4:	b570      	push	{r4, r5, r6, lr}
 800dbc6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 800dbca:	4604      	mov	r4, r0
 800dbcc:	b19b      	cbz	r3, 800dbf6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800dbce:	2002      	movs	r0, #2
 800dbd0:	f7f2 fdd5 	bl	800077e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800dbd4:	2300      	movs	r3, #0
 800dbd6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800dbda:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800dbde:	6823      	ldr	r3, [r4, #0]
 800dbe0:	4620      	mov	r0, r4
 800dbe2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800dbe6:	f7ff fdbf 	bl	800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dbea:	462b      	mov	r3, r5
 800dbec:	4601      	mov	r1, r0
 800dbee:	4620      	mov	r0, r4
 800dbf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dbf4:	4718      	bx	r3
 800dbf6:	bd70      	pop	{r4, r5, r6, pc}

0800dbf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800dbf8:	b538      	push	{r3, r4, r5, lr}
 800dbfa:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 800dbfe:	428b      	cmp	r3, r1
 800dc00:	4604      	mov	r4, r0
 800dc02:	460d      	mov	r5, r1
 800dc04:	d006      	beq.n	800dc14 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800dc06:	6803      	ldr	r3, [r0, #0]
 800dc08:	b929      	cbnz	r1, 800dc16 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800dc0a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800dc0e:	4798      	blx	r3
 800dc10:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 800dc14:	bd38      	pop	{r3, r4, r5, pc}
 800dc16:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800dc1a:	e7f8      	b.n	800dc0e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800dc1c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800dc1c:	b510      	push	{r4, lr}
 800dc1e:	4b0d      	ldr	r3, [pc, #52]	; (800dc54 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800dc20:	781b      	ldrb	r3, [r3, #0]
 800dc22:	4604      	mov	r4, r0
 800dc24:	b95b      	cbnz	r3, 800dc3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800dc26:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800dc2a:	2b02      	cmp	r3, #2
 800dc2c:	d007      	beq.n	800dc3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800dc2e:	6840      	ldr	r0, [r0, #4]
 800dc30:	f000 f912 	bl	800de58 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800dc34:	b118      	cbz	r0, 800dc3e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800dc36:	6862      	ldr	r2, [r4, #4]
 800dc38:	7a53      	ldrb	r3, [r2, #9]
 800dc3a:	2b00      	cmp	r3, #0
 800dc3c:	d0fc      	beq.n	800dc38 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800dc3e:	f7f2 fea9 	bl	8000994 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800dc42:	4620      	mov	r0, r4
 800dc44:	2100      	movs	r1, #0
 800dc46:	f7ff ffd7 	bl	800dbf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800dc4a:	4620      	mov	r0, r4
 800dc4c:	f7ff fd8c 	bl	800d768 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dc50:	bd10      	pop	{r4, pc}
 800dc52:	bf00      	nop
 800dc54:	20014fd2 	.word	0x20014fd2

0800dc58 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800dc58:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800dc5c:	1a13      	subs	r3, r2, r0
 800dc5e:	4258      	negs	r0, r3
 800dc60:	4158      	adcs	r0, r3
 800dc62:	4770      	bx	lr

0800dc64 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800dc64:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800dc68:	1a9b      	subs	r3, r3, r2
 800dc6a:	2b00      	cmp	r3, #0
 800dc6c:	bfdc      	itt	le
 800dc6e:	6882      	ldrle	r2, [r0, #8]
 800dc70:	189b      	addle	r3, r3, r2
 800dc72:	2b01      	cmp	r3, #1
 800dc74:	bfcc      	ite	gt
 800dc76:	2000      	movgt	r0, #0
 800dc78:	2001      	movle	r0, #1
 800dc7a:	4770      	bx	lr

0800dc7c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800dc7c:	6902      	ldr	r2, [r0, #16]
 800dc7e:	6843      	ldr	r3, [r0, #4]
 800dc80:	2024      	movs	r0, #36	; 0x24
 800dc82:	fb00 3002 	mla	r0, r0, r2, r3
 800dc86:	4770      	bx	lr

0800dc88 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800dc88:	6803      	ldr	r3, [r0, #0]
 800dc8a:	691b      	ldr	r3, [r3, #16]
 800dc8c:	4718      	bx	r3

0800dc8e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800dc8e:	b570      	push	{r4, r5, r6, lr}
 800dc90:	2301      	movs	r3, #1
 800dc92:	7203      	strb	r3, [r0, #8]
 800dc94:	4604      	mov	r4, r0
 800dc96:	6840      	ldr	r0, [r0, #4]
 800dc98:	6803      	ldr	r3, [r0, #0]
 800dc9a:	699b      	ldr	r3, [r3, #24]
 800dc9c:	4798      	blx	r3
 800dc9e:	6803      	ldr	r3, [r0, #0]
 800dca0:	2b40      	cmp	r3, #64	; 0x40
 800dca2:	4605      	mov	r5, r0
 800dca4:	d00c      	beq.n	800dcc0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dca6:	d810      	bhi.n	800dcca <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800dca8:	2b04      	cmp	r3, #4
 800dcaa:	d01d      	beq.n	800dce8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800dcac:	d804      	bhi.n	800dcb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800dcae:	2b01      	cmp	r3, #1
 800dcb0:	d006      	beq.n	800dcc0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dcb2:	2b02      	cmp	r3, #2
 800dcb4:	d02c      	beq.n	800dd10 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800dcb6:	bd70      	pop	{r4, r5, r6, pc}
 800dcb8:	2b08      	cmp	r3, #8
 800dcba:	d01d      	beq.n	800dcf8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800dcbc:	2b20      	cmp	r3, #32
 800dcbe:	d1fa      	bne.n	800dcb6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800dcc0:	6823      	ldr	r3, [r4, #0]
 800dcc2:	4620      	mov	r0, r4
 800dcc4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dcc6:	4798      	blx	r3
 800dcc8:	e013      	b.n	800dcf2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800dcca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800dcce:	d0f7      	beq.n	800dcc0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dcd0:	d804      	bhi.n	800dcdc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800dcd2:	2b80      	cmp	r3, #128	; 0x80
 800dcd4:	d0f4      	beq.n	800dcc0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dcd6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800dcda:	e7f0      	b.n	800dcbe <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800dcdc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800dce0:	d0ee      	beq.n	800dcc0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800dce2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800dce6:	e7e5      	b.n	800dcb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800dce8:	6823      	ldr	r3, [r4, #0]
 800dcea:	7f01      	ldrb	r1, [r0, #28]
 800dcec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dcee:	4620      	mov	r0, r4
 800dcf0:	4798      	blx	r3
 800dcf2:	6823      	ldr	r3, [r4, #0]
 800dcf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dcf6:	e006      	b.n	800dd06 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800dcf8:	6823      	ldr	r3, [r4, #0]
 800dcfa:	7f01      	ldrb	r1, [r0, #28]
 800dcfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800dcfe:	4620      	mov	r0, r4
 800dd00:	4798      	blx	r3
 800dd02:	6823      	ldr	r3, [r4, #0]
 800dd04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dd06:	4629      	mov	r1, r5
 800dd08:	4620      	mov	r0, r4
 800dd0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd0e:	4718      	bx	r3
 800dd10:	6823      	ldr	r3, [r4, #0]
 800dd12:	4620      	mov	r0, r4
 800dd14:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd16:	4798      	blx	r3
 800dd18:	e7f3      	b.n	800dd02 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800dd1a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800dd1a:	4770      	bx	lr

0800dd1c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800dd1c:	4770      	bx	lr

0800dd1e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800dd1e:	4770      	bx	lr

0800dd20 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800dd20:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800dd24:	1ad2      	subs	r2, r2, r3
 800dd26:	2a00      	cmp	r2, #0
 800dd28:	b510      	push	{r4, lr}
 800dd2a:	bfdc      	itt	le
 800dd2c:	6884      	ldrle	r4, [r0, #8]
 800dd2e:	1912      	addle	r2, r2, r4
 800dd30:	2a01      	cmp	r2, #1
 800dd32:	dd16      	ble.n	800dd62 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800dd34:	6842      	ldr	r2, [r0, #4]
 800dd36:	2424      	movs	r4, #36	; 0x24
 800dd38:	fb04 2303 	mla	r3, r4, r3, r2
 800dd3c:	f101 0220 	add.w	r2, r1, #32
 800dd40:	f851 4b04 	ldr.w	r4, [r1], #4
 800dd44:	f843 4b04 	str.w	r4, [r3], #4
 800dd48:	4291      	cmp	r1, r2
 800dd4a:	d1f9      	bne.n	800dd40 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800dd4c:	780a      	ldrb	r2, [r1, #0]
 800dd4e:	701a      	strb	r2, [r3, #0]
 800dd50:	68c3      	ldr	r3, [r0, #12]
 800dd52:	6882      	ldr	r2, [r0, #8]
 800dd54:	f3bf 8f5b 	dmb	ish
 800dd58:	3301      	adds	r3, #1
 800dd5a:	429a      	cmp	r2, r3
 800dd5c:	bfd8      	it	le
 800dd5e:	1a9b      	suble	r3, r3, r2
 800dd60:	60c3      	str	r3, [r0, #12]
 800dd62:	bd10      	pop	{r4, pc}

0800dd64 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800dd64:	6903      	ldr	r3, [r0, #16]
 800dd66:	6882      	ldr	r2, [r0, #8]
 800dd68:	f3bf 8f5b 	dmb	ish
 800dd6c:	3301      	adds	r3, #1
 800dd6e:	429a      	cmp	r2, r3
 800dd70:	bfd8      	it	le
 800dd72:	1a9b      	suble	r3, r3, r2
 800dd74:	6103      	str	r3, [r0, #16]
 800dd76:	4770      	bx	lr

0800dd78 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800dd78:	b570      	push	{r4, r5, r6, lr}
 800dd7a:	4604      	mov	r4, r0
 800dd7c:	460e      	mov	r6, r1
 800dd7e:	6860      	ldr	r0, [r4, #4]
 800dd80:	6803      	ldr	r3, [r0, #0]
 800dd82:	685b      	ldr	r3, [r3, #4]
 800dd84:	4798      	blx	r3
 800dd86:	2800      	cmp	r0, #0
 800dd88:	d1f9      	bne.n	800dd7e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800dd8a:	4d0d      	ldr	r5, [pc, #52]	; (800ddc0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800dd8c:	6828      	ldr	r0, [r5, #0]
 800dd8e:	6803      	ldr	r3, [r0, #0]
 800dd90:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dd92:	4798      	blx	r3
 800dd94:	f7f2 fe0c 	bl	80009b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800dd98:	6828      	ldr	r0, [r5, #0]
 800dd9a:	2101      	movs	r1, #1
 800dd9c:	f7ff ff2c 	bl	800dbf8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800dda0:	6860      	ldr	r0, [r4, #4]
 800dda2:	6803      	ldr	r3, [r0, #0]
 800dda4:	4631      	mov	r1, r6
 800dda6:	689b      	ldr	r3, [r3, #8]
 800dda8:	4798      	blx	r3
 800ddaa:	6823      	ldr	r3, [r4, #0]
 800ddac:	4620      	mov	r0, r4
 800ddae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ddb0:	4798      	blx	r3
 800ddb2:	6828      	ldr	r0, [r5, #0]
 800ddb4:	6803      	ldr	r3, [r0, #0]
 800ddb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ddba:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800ddbc:	4718      	bx	r3
 800ddbe:	bf00      	nop
 800ddc0:	20014fd4 	.word	0x20014fd4

0800ddc4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ddc4:	b508      	push	{r3, lr}
 800ddc6:	f7f2 fde5 	bl	8000994 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ddca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ddce:	f7f2 bde9 	b.w	80009a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ddd2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ddd2:	b510      	push	{r4, lr}
 800ddd4:	2114      	movs	r1, #20
 800ddd6:	4604      	mov	r4, r0
 800ddd8:	f013 fc68 	bl	80216ac <_ZdlPvj>
 800dddc:	4620      	mov	r0, r4
 800ddde:	bd10      	pop	{r4, pc}

0800dde0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800dde0:	b510      	push	{r4, lr}
 800dde2:	4604      	mov	r4, r0
 800dde4:	6840      	ldr	r0, [r0, #4]
 800dde6:	6803      	ldr	r3, [r0, #0]
 800dde8:	681b      	ldr	r3, [r3, #0]
 800ddea:	4798      	blx	r3
 800ddec:	b948      	cbnz	r0, 800de02 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ddee:	7a63      	ldrb	r3, [r4, #9]
 800ddf0:	b13b      	cbz	r3, 800de02 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ddf2:	7a23      	ldrb	r3, [r4, #8]
 800ddf4:	b92b      	cbnz	r3, 800de02 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ddf6:	6823      	ldr	r3, [r4, #0]
 800ddf8:	4620      	mov	r0, r4
 800ddfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ddfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800de00:	4718      	bx	r3
 800de02:	bd10      	pop	{r4, pc}

0800de04 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800de04:	b570      	push	{r4, r5, r6, lr}
 800de06:	4604      	mov	r4, r0
 800de08:	6840      	ldr	r0, [r0, #4]
 800de0a:	6803      	ldr	r3, [r0, #0]
 800de0c:	681b      	ldr	r3, [r3, #0]
 800de0e:	4798      	blx	r3
 800de10:	4605      	mov	r5, r0
 800de12:	b930      	cbnz	r0, 800de22 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800de14:	7a23      	ldrb	r3, [r4, #8]
 800de16:	b123      	cbz	r3, 800de22 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800de18:	6860      	ldr	r0, [r4, #4]
 800de1a:	6803      	ldr	r3, [r0, #0]
 800de1c:	695b      	ldr	r3, [r3, #20]
 800de1e:	4798      	blx	r3
 800de20:	7225      	strb	r5, [r4, #8]
 800de22:	6860      	ldr	r0, [r4, #4]
 800de24:	6803      	ldr	r3, [r0, #0]
 800de26:	681b      	ldr	r3, [r3, #0]
 800de28:	4798      	blx	r3
 800de2a:	b928      	cbnz	r0, 800de38 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800de2c:	6823      	ldr	r3, [r4, #0]
 800de2e:	4620      	mov	r0, r4
 800de30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800de32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de36:	4718      	bx	r3
 800de38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de3c:	f7f2 bdc0 	b.w	80009c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800de40 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800de40:	b510      	push	{r4, lr}
 800de42:	4c04      	ldr	r4, [pc, #16]	; (800de54 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800de44:	6082      	str	r2, [r0, #8]
 800de46:	2200      	movs	r2, #0
 800de48:	e9c0 4100 	strd	r4, r1, [r0]
 800de4c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800de50:	bd10      	pop	{r4, pc}
 800de52:	bf00      	nop
 800de54:	08024ad8 	.word	0x08024ad8

0800de58 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800de58:	6840      	ldr	r0, [r0, #4]
 800de5a:	6803      	ldr	r3, [r0, #0]
 800de5c:	681b      	ldr	r3, [r3, #0]
 800de5e:	4718      	bx	r3

0800de60 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800de60:	b508      	push	{r3, lr}
 800de62:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800de66:	b10b      	cbz	r3, 800de6c <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800de68:	f7f3 f956 	bl	8001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800de6c:	bd08      	pop	{r3, pc}

0800de6e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800de6e:	6803      	ldr	r3, [r0, #0]
 800de70:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800de74:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800de76:	4718      	bx	r3

0800de78 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800de78:	4770      	bx	lr

0800de7a <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800de7a:	b510      	push	{r4, lr}
 800de7c:	212c      	movs	r1, #44	; 0x2c
 800de7e:	4604      	mov	r4, r0
 800de80:	f013 fc14 	bl	80216ac <_ZdlPvj>
 800de84:	4620      	mov	r0, r4
 800de86:	bd10      	pop	{r4, pc}

0800de88 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800de88:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800de8c:	2bff      	cmp	r3, #255	; 0xff
 800de8e:	b510      	push	{r4, lr}
 800de90:	d104      	bne.n	800de9c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800de92:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800de94:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800de98:	429a      	cmp	r2, r3
 800de9a:	d105      	bne.n	800dea8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800de9c:	2300      	movs	r3, #0
 800de9e:	8003      	strh	r3, [r0, #0]
 800dea0:	8043      	strh	r3, [r0, #2]
 800dea2:	8083      	strh	r3, [r0, #4]
 800dea4:	80c3      	strh	r3, [r0, #6]
 800dea6:	bd10      	pop	{r4, pc}
 800dea8:	2300      	movs	r3, #0
 800deaa:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800deae:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800deb2:	8003      	strh	r3, [r0, #0]
 800deb4:	8043      	strh	r3, [r0, #2]
 800deb6:	8084      	strh	r4, [r0, #4]
 800deb8:	80c2      	strh	r2, [r0, #6]
 800deba:	e7f4      	b.n	800dea6 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800debc <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800debc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dec0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800dec4:	b087      	sub	sp, #28
 800dec6:	4604      	mov	r4, r0
 800dec8:	4689      	mov	r9, r1
 800deca:	b363      	cbz	r3, 800df26 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800decc:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800dece:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ded2:	429a      	cmp	r2, r3
 800ded4:	d027      	beq.n	800df26 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800ded6:	ad06      	add	r5, sp, #24
 800ded8:	2700      	movs	r7, #0
 800deda:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800dede:	4628      	mov	r0, r5
 800dee0:	f005 ff8c 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dee4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dee8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800deec:	6823      	ldr	r3, [r4, #0]
 800deee:	f8ad 0014 	strh.w	r0, [sp, #20]
 800def2:	a904      	add	r1, sp, #16
 800def4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800def6:	9704      	str	r7, [sp, #16]
 800def8:	4620      	mov	r0, r4
 800defa:	4798      	blx	r3
 800defc:	f7f4 fefe 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800df00:	6803      	ldr	r3, [r0, #0]
 800df02:	4606      	mov	r6, r0
 800df04:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800df08:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800df0a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800df0e:	4628      	mov	r0, r5
 800df10:	f006 f860 	bl	8013fd4 <_ZNK8touchgfx6Bitmap7getDataEv>
 800df14:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800df18:	9300      	str	r3, [sp, #0]
 800df1a:	4601      	mov	r1, r0
 800df1c:	9701      	str	r7, [sp, #4]
 800df1e:	464b      	mov	r3, r9
 800df20:	aa04      	add	r2, sp, #16
 800df22:	4630      	mov	r0, r6
 800df24:	47c0      	blx	r8
 800df26:	b007      	add	sp, #28
 800df28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800df2c <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800df2c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df2e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800df32:	f8ad 3006 	strh.w	r3, [sp, #6]
 800df36:	6803      	ldr	r3, [r0, #0]
 800df38:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800df3c:	f8ad 2004 	strh.w	r2, [sp, #4]
 800df40:	460d      	mov	r5, r1
 800df42:	2100      	movs	r1, #0
 800df44:	4604      	mov	r4, r0
 800df46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800df48:	9100      	str	r1, [sp, #0]
 800df4a:	4669      	mov	r1, sp
 800df4c:	4798      	blx	r3
 800df4e:	4621      	mov	r1, r4
 800df50:	a802      	add	r0, sp, #8
 800df52:	f003 fefb 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800df56:	f7f4 fed1 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 800df5a:	6803      	ldr	r3, [r0, #0]
 800df5c:	aa02      	add	r2, sp, #8
 800df5e:	695e      	ldr	r6, [r3, #20]
 800df60:	4669      	mov	r1, sp
 800df62:	462b      	mov	r3, r5
 800df64:	47b0      	blx	r6
 800df66:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800df6a:	2800      	cmp	r0, #0
 800df6c:	bf08      	it	eq
 800df6e:	461d      	moveq	r5, r3
 800df70:	84e5      	strh	r5, [r4, #38]	; 0x26
 800df72:	b004      	add	sp, #16
 800df74:	bd70      	pop	{r4, r5, r6, pc}
	...

0800df78 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800df78:	2200      	movs	r2, #0
 800df7a:	8082      	strh	r2, [r0, #4]
 800df7c:	80c2      	strh	r2, [r0, #6]
 800df7e:	8102      	strh	r2, [r0, #8]
 800df80:	8142      	strh	r2, [r0, #10]
 800df82:	8182      	strh	r2, [r0, #12]
 800df84:	81c2      	strh	r2, [r0, #14]
 800df86:	8202      	strh	r2, [r0, #16]
 800df88:	8242      	strh	r2, [r0, #18]
 800df8a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800df8e:	61c2      	str	r2, [r0, #28]
 800df90:	8402      	strh	r2, [r0, #32]
 800df92:	8442      	strh	r2, [r0, #34]	; 0x22
 800df94:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800df98:	2201      	movs	r2, #1
 800df9a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800df9e:	4a04      	ldr	r2, [pc, #16]	; (800dfb0 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800dfa0:	6002      	str	r2, [r0, #0]
 800dfa2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800dfa6:	84c2      	strh	r2, [r0, #38]	; 0x26
 800dfa8:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800dfac:	4770      	bx	lr
 800dfae:	bf00      	nop
 800dfb0:	08024afc 	.word	0x08024afc

0800dfb4 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800dfb4:	b508      	push	{r3, lr}
 800dfb6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800dfba:	b10b      	cbz	r3, 800dfc0 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 800dfbc:	f7f3 f8ac 	bl	8001118 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800dfc0:	bd08      	pop	{r3, pc}

0800dfc2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800dfc2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800dfc6:	4770      	bx	lr

0800dfc8 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800dfc8:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800dfcc:	4770      	bx	lr

0800dfce <_ZN8touchgfx13ScalableImageD1Ev>:
 800dfce:	4770      	bx	lr

0800dfd0 <_ZN8touchgfx13ScalableImageD0Ev>:
 800dfd0:	b510      	push	{r4, lr}
 800dfd2:	212c      	movs	r1, #44	; 0x2c
 800dfd4:	4604      	mov	r4, r0
 800dfd6:	f013 fb69 	bl	80216ac <_ZdlPvj>
 800dfda:	4620      	mov	r0, r4
 800dfdc:	bd10      	pop	{r4, pc}

0800dfde <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800dfde:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfe0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800dfe4:	2bff      	cmp	r3, #255	; 0xff
 800dfe6:	b085      	sub	sp, #20
 800dfe8:	4604      	mov	r4, r0
 800dfea:	460d      	mov	r5, r1
 800dfec:	d128      	bne.n	800e040 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800dfee:	f101 0626 	add.w	r6, r1, #38	; 0x26
 800dff2:	4631      	mov	r1, r6
 800dff4:	4668      	mov	r0, sp
 800dff6:	f005 ff69 	bl	8013ecc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800dffa:	4630      	mov	r0, r6
 800dffc:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 800e000:	f005 fefc 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e004:	4287      	cmp	r7, r0
 800e006:	d11b      	bne.n	800e040 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800e008:	4630      	mov	r0, r6
 800e00a:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800e00e:	f005 ff29 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e012:	4287      	cmp	r7, r0
 800e014:	d114      	bne.n	800e040 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 800e016:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 800e01a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e01e:	2100      	movs	r1, #0
 800e020:	466b      	mov	r3, sp
 800e022:	9102      	str	r1, [sp, #8]
 800e024:	cb03      	ldmia	r3!, {r0, r1}
 800e026:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e02a:	6020      	str	r0, [r4, #0]
 800e02c:	6061      	str	r1, [r4, #4]
 800e02e:	4620      	mov	r0, r4
 800e030:	4619      	mov	r1, r3
 800e032:	f8ad 200c 	strh.w	r2, [sp, #12]
 800e036:	f7fe ff21 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800e03a:	4620      	mov	r0, r4
 800e03c:	b005      	add	sp, #20
 800e03e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e040:	2300      	movs	r3, #0
 800e042:	8023      	strh	r3, [r4, #0]
 800e044:	8063      	strh	r3, [r4, #2]
 800e046:	80a3      	strh	r3, [r4, #4]
 800e048:	80e3      	strh	r3, [r4, #6]
 800e04a:	e7f6      	b.n	800e03a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

0800e04c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800e04c:	b538      	push	{r3, r4, r5, lr}
 800e04e:	2300      	movs	r3, #0
 800e050:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800e054:	8083      	strh	r3, [r0, #4]
 800e056:	80c3      	strh	r3, [r0, #6]
 800e058:	8103      	strh	r3, [r0, #8]
 800e05a:	8143      	strh	r3, [r0, #10]
 800e05c:	8183      	strh	r3, [r0, #12]
 800e05e:	81c3      	strh	r3, [r0, #14]
 800e060:	8203      	strh	r3, [r0, #16]
 800e062:	8243      	strh	r3, [r0, #18]
 800e064:	61c3      	str	r3, [r0, #28]
 800e066:	8403      	strh	r3, [r0, #32]
 800e068:	8443      	strh	r3, [r0, #34]	; 0x22
 800e06a:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800e06e:	2501      	movs	r5, #1
 800e070:	4b08      	ldr	r3, [pc, #32]	; (800e094 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800e072:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800e076:	6003      	str	r3, [r0, #0]
 800e078:	880b      	ldrh	r3, [r1, #0]
 800e07a:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e07c:	23ff      	movs	r3, #255	; 0xff
 800e07e:	4604      	mov	r4, r0
 800e080:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800e084:	f000 feb5 	bl	800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800e088:	4b03      	ldr	r3, [pc, #12]	; (800e098 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800e08a:	6023      	str	r3, [r4, #0]
 800e08c:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800e090:	4620      	mov	r0, r4
 800e092:	bd38      	pop	{r3, r4, r5, pc}
 800e094:	08024cd8 	.word	0x08024cd8
 800e098:	08024b6c 	.word	0x08024b6c

0800e09c <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800e09c:	4603      	mov	r3, r0
 800e09e:	3026      	adds	r0, #38	; 0x26
 800e0a0:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800e0a4:	b90b      	cbnz	r3, 800e0aa <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800e0a6:	f003 bef5 	b.w	8011e94 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800e0aa:	f003 bf03 	b.w	8011eb4 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800e0b0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800e0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0b4:	4604      	mov	r4, r0
 800e0b6:	b0b3      	sub	sp, #204	; 0xcc
 800e0b8:	469b      	mov	fp, r3
 800e0ba:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e0be:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 800e0c2:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 800e0c6:	ab11      	add	r3, sp, #68	; 0x44
 800e0c8:	2500      	movs	r5, #0
 800e0ca:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 800e0ce:	4618      	mov	r0, r3
 800e0d0:	9206      	str	r2, [sp, #24]
 800e0d2:	9511      	str	r5, [sp, #68]	; 0x44
 800e0d4:	9307      	str	r3, [sp, #28]
 800e0d6:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 800e0da:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 800e0de:	f7fe fecd 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800e0e2:	9b07      	ldr	r3, [sp, #28]
 800e0e4:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e0e8:	ad13      	add	r5, sp, #76	; 0x4c
 800e0ea:	e885 0003 	stmia.w	r5, {r0, r1}
 800e0ee:	6821      	ldr	r1, [r4, #0]
 800e0f0:	4620      	mov	r0, r4
 800e0f2:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800e0f4:	4629      	mov	r1, r5
 800e0f6:	47b0      	blx	r6
 800e0f8:	4621      	mov	r1, r4
 800e0fa:	a815      	add	r0, sp, #84	; 0x54
 800e0fc:	f003 fe26 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e100:	a815      	add	r0, sp, #84	; 0x54
 800e102:	f002 fb13 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800e106:	9b07      	ldr	r3, [sp, #28]
 800e108:	1d26      	adds	r6, r4, #4
 800e10a:	4618      	mov	r0, r3
 800e10c:	4631      	mov	r1, r6
 800e10e:	f002 fb51 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800e112:	4628      	mov	r0, r5
 800e114:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800e118:	f002 fb08 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800e11c:	4628      	mov	r0, r5
 800e11e:	f005 ff59 	bl	8013fd4 <_ZNK8touchgfx6Bitmap7getDataEv>
 800e122:	9007      	str	r0, [sp, #28]
 800e124:	2800      	cmp	r0, #0
 800e126:	f000 80ce 	beq.w	800e2c6 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 800e12a:	f8db 200c 	ldr.w	r2, [fp, #12]
 800e12e:	920c      	str	r2, [sp, #48]	; 0x30
 800e130:	f8da 2000 	ldr.w	r2, [sl]
 800e134:	f8db 1000 	ldr.w	r1, [fp]
 800e138:	920d      	str	r2, [sp, #52]	; 0x34
 800e13a:	f8da 2004 	ldr.w	r2, [sl, #4]
 800e13e:	9109      	str	r1, [sp, #36]	; 0x24
 800e140:	920e      	str	r2, [sp, #56]	; 0x38
 800e142:	f8db 1004 	ldr.w	r1, [fp, #4]
 800e146:	f8da 2008 	ldr.w	r2, [sl, #8]
 800e14a:	910a      	str	r1, [sp, #40]	; 0x28
 800e14c:	920f      	str	r2, [sp, #60]	; 0x3c
 800e14e:	f8db 1008 	ldr.w	r1, [fp, #8]
 800e152:	f8da 200c 	ldr.w	r2, [sl, #12]
 800e156:	910b      	str	r1, [sp, #44]	; 0x2c
 800e158:	9210      	str	r2, [sp, #64]	; 0x40
 800e15a:	a90d      	add	r1, sp, #52	; 0x34
 800e15c:	4632      	mov	r2, r6
 800e15e:	a809      	add	r0, sp, #36	; 0x24
 800e160:	f002 fb0c 	bl	801077c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800e164:	4632      	mov	r2, r6
 800e166:	a90e      	add	r1, sp, #56	; 0x38
 800e168:	a80a      	add	r0, sp, #40	; 0x28
 800e16a:	f002 fb07 	bl	801077c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800e16e:	4632      	mov	r2, r6
 800e170:	a90f      	add	r1, sp, #60	; 0x3c
 800e172:	a80b      	add	r0, sp, #44	; 0x2c
 800e174:	f002 fb02 	bl	801077c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800e178:	4632      	mov	r2, r6
 800e17a:	a910      	add	r1, sp, #64	; 0x40
 800e17c:	a80c      	add	r0, sp, #48	; 0x30
 800e17e:	f002 fafd 	bl	801077c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800e182:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800e186:	ed97 3a00 	vldr	s6, [r7]
 800e18a:	edd7 4a01 	vldr	s9, [r7, #4]
 800e18e:	ed99 2a00 	vldr	s4, [r9]
 800e192:	edd8 2a00 	vldr	s5, [r8]
 800e196:	edd9 3a01 	vldr	s7, [r9, #4]
 800e19a:	ed98 4a01 	vldr	s8, [r8, #4]
 800e19e:	ed99 5a02 	vldr	s10, [r9, #8]
 800e1a2:	edd8 5a02 	vldr	s11, [r8, #8]
 800e1a6:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800e1aa:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800e1ae:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 800e1b2:	eef0 6a67 	vmov.f32	s13, s15
 800e1b6:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800e1ba:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 800e1be:	eeb0 7a67 	vmov.f32	s14, s15
 800e1c2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800e1c6:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 800e1ca:	eeb0 6a67 	vmov.f32	s12, s15
 800e1ce:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e1d2:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800e1d6:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 800e1da:	ee16 6a10 	vmov	r6, s12
 800e1de:	eeb0 6a67 	vmov.f32	s12, s15
 800e1e2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e1e6:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 800e1ea:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 800e1ee:	ee16 0a10 	vmov	r0, s12
 800e1f2:	eeb0 6a67 	vmov.f32	s12, s15
 800e1f6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e1fa:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800e1fe:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 800e202:	ee16 1a10 	vmov	r1, s12
 800e206:	eeb0 6a67 	vmov.f32	s12, s15
 800e20a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e20e:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800e212:	ee16 2a10 	vmov	r2, s12
 800e216:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 800e21a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 800e21e:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 800e222:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800e226:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e22a:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 800e22e:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 800e232:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 800e236:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800e23a:	9624      	str	r6, [sp, #144]	; 0x90
 800e23c:	68ff      	ldr	r7, [r7, #12]
 800e23e:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 800e242:	922d      	str	r2, [sp, #180]	; 0xb4
 800e244:	4a21      	ldr	r2, [pc, #132]	; (800e2cc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 800e246:	9b06      	ldr	r3, [sp, #24]
 800e248:	8812      	ldrh	r2, [r2, #0]
 800e24a:	9317      	str	r3, [sp, #92]	; 0x5c
 800e24c:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800e250:	9b07      	ldr	r3, [sp, #28]
 800e252:	9218      	str	r2, [sp, #96]	; 0x60
 800e254:	4628      	mov	r0, r5
 800e256:	9319      	str	r3, [sp, #100]	; 0x64
 800e258:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 800e25c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800e260:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 800e264:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 800e268:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 800e26c:	9731      	str	r7, [sp, #196]	; 0xc4
 800e26e:	f005 fee1 	bl	8014034 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800e272:	901a      	str	r0, [sp, #104]	; 0x68
 800e274:	4628      	mov	r0, r5
 800e276:	f005 fdc1 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e27a:	901b      	str	r0, [sp, #108]	; 0x6c
 800e27c:	4628      	mov	r0, r5
 800e27e:	f005 fdf1 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e282:	901c      	str	r0, [sp, #112]	; 0x70
 800e284:	4628      	mov	r0, r5
 800e286:	f005 fdb9 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e28a:	4b11      	ldr	r3, [pc, #68]	; (800e2d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800e28c:	901d      	str	r0, [sp, #116]	; 0x74
 800e28e:	681b      	ldr	r3, [r3, #0]
 800e290:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800e294:	b10a      	cbz	r2, 800e29a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800e296:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800e298:	b905      	cbnz	r5, 800e29c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 800e29a:	689d      	ldr	r5, [r3, #8]
 800e29c:	682b      	ldr	r3, [r5, #0]
 800e29e:	4620      	mov	r0, r4
 800e2a0:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800e2a2:	f7ff fefb 	bl	800e09c <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800e2a6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e2aa:	9304      	str	r3, [sp, #16]
 800e2ac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800e2b0:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800e2b4:	ab13      	add	r3, sp, #76	; 0x4c
 800e2b6:	9301      	str	r3, [sp, #4]
 800e2b8:	ab15      	add	r3, sp, #84	; 0x54
 800e2ba:	9300      	str	r3, [sp, #0]
 800e2bc:	aa1e      	add	r2, sp, #120	; 0x78
 800e2be:	ab19      	add	r3, sp, #100	; 0x64
 800e2c0:	a917      	add	r1, sp, #92	; 0x5c
 800e2c2:	4628      	mov	r0, r5
 800e2c4:	47b0      	blx	r6
 800e2c6:	b033      	add	sp, #204	; 0xcc
 800e2c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2cc:	20014fce 	.word	0x20014fce
 800e2d0:	20014fd4 	.word	0x20014fd4

0800e2d4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800e2d4:	b570      	push	{r4, r5, r6, lr}
 800e2d6:	ed2d 8b04 	vpush	{d8-d9}
 800e2da:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800e2de:	b098      	sub	sp, #96	; 0x60
 800e2e0:	4604      	mov	r4, r0
 800e2e2:	460e      	mov	r6, r1
 800e2e4:	2b00      	cmp	r3, #0
 800e2e6:	d065      	beq.n	800e3b4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800e2e8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e2ec:	ed9f 8a38 	vldr	s16, [pc, #224]	; 800e3d0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800e2f0:	ee09 3a10 	vmov	s18, r3
 800e2f4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e2f8:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800e2fc:	ee08 3a90 	vmov	s17, r3
 800e300:	4628      	mov	r0, r5
 800e302:	4b34      	ldr	r3, [pc, #208]	; (800e3d4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800e304:	930c      	str	r3, [sp, #48]	; 0x30
 800e306:	930d      	str	r3, [sp, #52]	; 0x34
 800e308:	930e      	str	r3, [sp, #56]	; 0x38
 800e30a:	930f      	str	r3, [sp, #60]	; 0x3c
 800e30c:	f005 fd76 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e310:	ee07 0a90 	vmov	s15, r0
 800e314:	4628      	mov	r0, r5
 800e316:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800e31a:	f005 fda3 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e31e:	4b2e      	ldr	r3, [pc, #184]	; (800e3d8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800e320:	781b      	ldrb	r3, [r3, #0]
 800e322:	ee07 0a90 	vmov	s15, r0
 800e326:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800e32a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800e32e:	2b01      	cmp	r3, #1
 800e330:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800e334:	ee39 9a08 	vadd.f32	s18, s18, s16
 800e338:	ee78 8a88 	vadd.f32	s17, s17, s16
 800e33c:	eef0 7a48 	vmov.f32	s15, s16
 800e340:	d13c      	bne.n	800e3bc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800e342:	eef0 6a69 	vmov.f32	s13, s19
 800e346:	eeb0 6a47 	vmov.f32	s12, s14
 800e34a:	eef0 5a47 	vmov.f32	s11, s14
 800e34e:	ee19 3a90 	vmov	r3, s19
 800e352:	eeb0 7a48 	vmov.f32	s14, s16
 800e356:	eef0 9a48 	vmov.f32	s19, s16
 800e35a:	9314      	str	r3, [sp, #80]	; 0x50
 800e35c:	ab14      	add	r3, sp, #80	; 0x50
 800e35e:	9303      	str	r3, [sp, #12]
 800e360:	ab10      	add	r3, sp, #64	; 0x40
 800e362:	9302      	str	r3, [sp, #8]
 800e364:	ab0c      	add	r3, sp, #48	; 0x30
 800e366:	9301      	str	r3, [sp, #4]
 800e368:	ab08      	add	r3, sp, #32
 800e36a:	9300      	str	r3, [sp, #0]
 800e36c:	2200      	movs	r2, #0
 800e36e:	ab04      	add	r3, sp, #16
 800e370:	4631      	mov	r1, r6
 800e372:	4620      	mov	r0, r4
 800e374:	edcd 7a04 	vstr	s15, [sp, #16]
 800e378:	ed8d 9a05 	vstr	s18, [sp, #20]
 800e37c:	ed8d 9a06 	vstr	s18, [sp, #24]
 800e380:	edcd 7a07 	vstr	s15, [sp, #28]
 800e384:	edcd 7a08 	vstr	s15, [sp, #32]
 800e388:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800e38c:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800e390:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 800e394:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 800e398:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 800e39c:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 800e3a0:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 800e3a4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 800e3a8:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 800e3ac:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 800e3b0:	f7ff fe7e 	bl	800e0b0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800e3b4:	b018      	add	sp, #96	; 0x60
 800e3b6:	ecbd 8b04 	vpop	{d8-d9}
 800e3ba:	bd70      	pop	{r4, r5, r6, pc}
 800e3bc:	eef0 6a47 	vmov.f32	s13, s14
 800e3c0:	eef0 5a69 	vmov.f32	s11, s19
 800e3c4:	eeb0 6a48 	vmov.f32	s12, s16
 800e3c8:	ee18 3a10 	vmov	r3, s16
 800e3cc:	e7c5      	b.n	800e35a <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800e3ce:	bf00      	nop
 800e3d0:	00000000 	.word	0x00000000
 800e3d4:	42c80000 	.word	0x42c80000
 800e3d8:	20014fcc 	.word	0x20014fcc

0800e3dc <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800e3dc:	2000      	movs	r0, #0
 800e3de:	4770      	bx	lr

0800e3e0 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800e3e0:	4b07      	ldr	r3, [pc, #28]	; (800e400 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800e3e2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e3e4:	881b      	ldrh	r3, [r3, #0]
 800e3e6:	4293      	cmp	r3, r2
 800e3e8:	bf81      	itttt	hi
 800e3ea:	4b06      	ldrhi	r3, [pc, #24]	; (800e404 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800e3ec:	681b      	ldrhi	r3, [r3, #0]
 800e3ee:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800e3f2:	7858      	ldrbhi	r0, [r3, #1]
 800e3f4:	bf8c      	ite	hi
 800e3f6:	f000 0003 	andhi.w	r0, r0, #3
 800e3fa:	2000      	movls	r0, #0
 800e3fc:	4770      	bx	lr
 800e3fe:	bf00      	nop
 800e400:	20015028 	.word	0x20015028
 800e404:	20015024 	.word	0x20015024

0800e408 <_ZN8touchgfx8TextAreaD1Ev>:
 800e408:	4770      	bx	lr
	...

0800e40c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800e40c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e410:	4b10      	ldr	r3, [pc, #64]	; (800e454 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800e412:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e414:	881b      	ldrh	r3, [r3, #0]
 800e416:	428b      	cmp	r3, r1
 800e418:	4604      	mov	r4, r0
 800e41a:	d918      	bls.n	800e44e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800e41c:	6803      	ldr	r3, [r0, #0]
 800e41e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800e420:	4b0d      	ldr	r3, [pc, #52]	; (800e458 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800e422:	6818      	ldr	r0, [r3, #0]
 800e424:	f7f7 f930 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800e428:	6823      	ldr	r3, [r4, #0]
 800e42a:	4606      	mov	r6, r0
 800e42c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e42e:	4620      	mov	r0, r4
 800e430:	4798      	blx	r3
 800e432:	6823      	ldr	r3, [r4, #0]
 800e434:	4607      	mov	r7, r0
 800e436:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e43a:	4620      	mov	r0, r4
 800e43c:	4798      	blx	r3
 800e43e:	463a      	mov	r2, r7
 800e440:	4603      	mov	r3, r0
 800e442:	4631      	mov	r1, r6
 800e444:	4620      	mov	r0, r4
 800e446:	46ac      	mov	ip, r5
 800e448:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e44c:	4760      	bx	ip
 800e44e:	2000      	movs	r0, #0
 800e450:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e454:	20015028 	.word	0x20015028
 800e458:	20015030 	.word	0x20015030

0800e45c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800e45c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e460:	4b17      	ldr	r3, [pc, #92]	; (800e4c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800e462:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e464:	881b      	ldrh	r3, [r3, #0]
 800e466:	428b      	cmp	r3, r1
 800e468:	4604      	mov	r4, r0
 800e46a:	d926      	bls.n	800e4ba <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800e46c:	4b15      	ldr	r3, [pc, #84]	; (800e4c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800e46e:	681b      	ldr	r3, [r3, #0]
 800e470:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e474:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e478:	4b13      	ldr	r3, [pc, #76]	; (800e4c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e47a:	7855      	ldrb	r5, [r2, #1]
 800e47c:	681b      	ldr	r3, [r3, #0]
 800e47e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800e482:	6833      	ldr	r3, [r6, #0]
 800e484:	69df      	ldr	r7, [r3, #28]
 800e486:	4b11      	ldr	r3, [pc, #68]	; (800e4cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800e488:	6818      	ldr	r0, [r3, #0]
 800e48a:	f7f7 f8fd 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800e48e:	6823      	ldr	r3, [r4, #0]
 800e490:	4680      	mov	r8, r0
 800e492:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e494:	4620      	mov	r0, r4
 800e496:	4798      	blx	r3
 800e498:	6823      	ldr	r3, [r4, #0]
 800e49a:	4681      	mov	r9, r0
 800e49c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e4a0:	4620      	mov	r0, r4
 800e4a2:	4798      	blx	r3
 800e4a4:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800e4a8:	9000      	str	r0, [sp, #0]
 800e4aa:	464b      	mov	r3, r9
 800e4ac:	4642      	mov	r2, r8
 800e4ae:	4629      	mov	r1, r5
 800e4b0:	4630      	mov	r0, r6
 800e4b2:	47b8      	blx	r7
 800e4b4:	b003      	add	sp, #12
 800e4b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e4ba:	2000      	movs	r0, #0
 800e4bc:	e7fa      	b.n	800e4b4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800e4be:	bf00      	nop
 800e4c0:	20015028 	.word	0x20015028
 800e4c4:	20015024 	.word	0x20015024
 800e4c8:	2001502c 	.word	0x2001502c
 800e4cc:	20015030 	.word	0x20015030

0800e4d0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800e4d0:	b40e      	push	{r1, r2, r3}
 800e4d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e4d6:	4b2f      	ldr	r3, [pc, #188]	; (800e594 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800e4d8:	881a      	ldrh	r2, [r3, #0]
 800e4da:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800e4dc:	429a      	cmp	r2, r3
 800e4de:	b09d      	sub	sp, #116	; 0x74
 800e4e0:	4604      	mov	r4, r0
 800e4e2:	d954      	bls.n	800e58e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800e4e4:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800e598 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800e4e8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800e59c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800e4ec:	aa26      	add	r2, sp, #152	; 0x98
 800e4ee:	9202      	str	r2, [sp, #8]
 800e4f0:	f8d9 2000 	ldr.w	r2, [r9]
 800e4f4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e4f8:	f8d8 3000 	ldr.w	r3, [r8]
 800e4fc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e500:	682b      	ldr	r3, [r5, #0]
 800e502:	4628      	mov	r0, r5
 800e504:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e506:	4798      	blx	r3
 800e508:	b207      	sxth	r7, r0
 800e50a:	4606      	mov	r6, r0
 800e50c:	a803      	add	r0, sp, #12
 800e50e:	f004 f8e9 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 800e512:	682b      	ldr	r3, [r5, #0]
 800e514:	4628      	mov	r0, r5
 800e516:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e518:	4798      	blx	r3
 800e51a:	682b      	ldr	r3, [r5, #0]
 800e51c:	4682      	mov	sl, r0
 800e51e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e520:	4628      	mov	r0, r5
 800e522:	4798      	blx	r3
 800e524:	4653      	mov	r3, sl
 800e526:	9000      	str	r0, [sp, #0]
 800e528:	9a02      	ldr	r2, [sp, #8]
 800e52a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800e52c:	a803      	add	r0, sp, #12
 800e52e:	f004 f934 	bl	801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e532:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e534:	f8d9 3000 	ldr.w	r3, [r9]
 800e538:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800e53c:	8925      	ldrh	r5, [r4, #8]
 800e53e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e542:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800e546:	eba5 050c 	sub.w	r5, r5, ip
 800e54a:	784a      	ldrb	r2, [r1, #1]
 800e54c:	f8d8 3000 	ldr.w	r3, [r8]
 800e550:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800e554:	b22d      	sxth	r5, r5
 800e556:	9500      	str	r5, [sp, #0]
 800e558:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e55c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e560:	a803      	add	r0, sp, #12
 800e562:	f001 fde9 	bl	8010138 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e566:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800e56a:	18b9      	adds	r1, r7, r2
 800e56c:	2900      	cmp	r1, #0
 800e56e:	b203      	sxth	r3, r0
 800e570:	dd0b      	ble.n	800e58a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800e572:	3b01      	subs	r3, #1
 800e574:	fb13 f302 	smulbb	r3, r3, r2
 800e578:	fb16 3300 	smlabb	r3, r6, r0, r3
 800e57c:	b21f      	sxth	r7, r3
 800e57e:	4638      	mov	r0, r7
 800e580:	b01d      	add	sp, #116	; 0x74
 800e582:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e586:	b003      	add	sp, #12
 800e588:	4770      	bx	lr
 800e58a:	2b00      	cmp	r3, #0
 800e58c:	dcf7      	bgt.n	800e57e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e58e:	2700      	movs	r7, #0
 800e590:	e7f5      	b.n	800e57e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e592:	bf00      	nop
 800e594:	20015028 	.word	0x20015028
 800e598:	20015024 	.word	0x20015024
 800e59c:	2001502c 	.word	0x2001502c

0800e5a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800e5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5a4:	4bbc      	ldr	r3, [pc, #752]	; (800e898 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800e5a6:	460c      	mov	r4, r1
 800e5a8:	881b      	ldrh	r3, [r3, #0]
 800e5aa:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800e5ac:	428b      	cmp	r3, r1
 800e5ae:	b0a9      	sub	sp, #164	; 0xa4
 800e5b0:	4680      	mov	r8, r0
 800e5b2:	d809      	bhi.n	800e5c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800e5b4:	2300      	movs	r3, #0
 800e5b6:	f04f 32ff 	mov.w	r2, #4294967295
 800e5ba:	e9c0 3200 	strd	r3, r2, [r0]
 800e5be:	6083      	str	r3, [r0, #8]
 800e5c0:	4640      	mov	r0, r8
 800e5c2:	b029      	add	sp, #164	; 0xa4
 800e5c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e5c8:	4eb4      	ldr	r6, [pc, #720]	; (800e89c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800e5ca:	6833      	ldr	r3, [r6, #0]
 800e5cc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e5d0:	4bb3      	ldr	r3, [pc, #716]	; (800e8a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800e5d2:	681b      	ldr	r3, [r3, #0]
 800e5d4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e5d8:	4bb2      	ldr	r3, [pc, #712]	; (800e8a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e5da:	6818      	ldr	r0, [r3, #0]
 800e5dc:	f7f7 f854 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800e5e0:	682b      	ldr	r3, [r5, #0]
 800e5e2:	4681      	mov	r9, r0
 800e5e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e5e6:	4628      	mov	r0, r5
 800e5e8:	4798      	blx	r3
 800e5ea:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800e5ec:	b203      	sxth	r3, r0
 800e5ee:	4407      	add	r7, r0
 800e5f0:	9304      	str	r3, [sp, #16]
 800e5f2:	b2bb      	uxth	r3, r7
 800e5f4:	9303      	str	r3, [sp, #12]
 800e5f6:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e5fa:	4682      	mov	sl, r0
 800e5fc:	a80f      	add	r0, sp, #60	; 0x3c
 800e5fe:	2b00      	cmp	r3, #0
 800e600:	f040 80a6 	bne.w	800e750 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800e604:	f004 f86e 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 800e608:	682b      	ldr	r3, [r5, #0]
 800e60a:	4628      	mov	r0, r5
 800e60c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e60e:	4798      	blx	r3
 800e610:	682b      	ldr	r3, [r5, #0]
 800e612:	4606      	mov	r6, r0
 800e614:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e616:	4628      	mov	r0, r5
 800e618:	4798      	blx	r3
 800e61a:	6823      	ldr	r3, [r4, #0]
 800e61c:	4607      	mov	r7, r0
 800e61e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e620:	4620      	mov	r0, r4
 800e622:	4798      	blx	r3
 800e624:	6823      	ldr	r3, [r4, #0]
 800e626:	4683      	mov	fp, r0
 800e628:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e62c:	4620      	mov	r0, r4
 800e62e:	4798      	blx	r3
 800e630:	463b      	mov	r3, r7
 800e632:	e9cd b000 	strd	fp, r0, [sp]
 800e636:	4649      	mov	r1, r9
 800e638:	4632      	mov	r2, r6
 800e63a:	a80f      	add	r0, sp, #60	; 0x3c
 800e63c:	f004 f8c2 	bl	80127c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e640:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e644:	f8df b254 	ldr.w	fp, [pc, #596]	; 800e89c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800e648:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e64c:	f04f 0600 	mov.w	r6, #0
 800e650:	bf0c      	ite	eq
 800e652:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800e656:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800e65a:	4637      	mov	r7, r6
 800e65c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e65e:	f8db 3000 	ldr.w	r3, [fp]
 800e662:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e666:	4629      	mov	r1, r5
 800e668:	785b      	ldrb	r3, [r3, #1]
 800e66a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e66e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e672:	a80f      	add	r0, sp, #60	; 0x3c
 800e674:	f001 fa7b 	bl	800fb6e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e678:	9b03      	ldr	r3, [sp, #12]
 800e67a:	4286      	cmp	r6, r0
 800e67c:	bfb8      	it	lt
 800e67e:	4606      	movlt	r6, r0
 800e680:	3701      	adds	r7, #1
 800e682:	eba9 0903 	sub.w	r9, r9, r3
 800e686:	a80f      	add	r0, sp, #60	; 0x3c
 800e688:	b236      	sxth	r6, r6
 800e68a:	b2bf      	uxth	r7, r7
 800e68c:	fa0f f989 	sxth.w	r9, r9
 800e690:	f004 f84f 	bl	8012732 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e694:	b918      	cbnz	r0, 800e69e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e696:	7a2b      	ldrb	r3, [r5, #8]
 800e698:	444b      	add	r3, r9
 800e69a:	2b00      	cmp	r3, #0
 800e69c:	dcde      	bgt.n	800e65c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800e69e:	9b03      	ldr	r3, [sp, #12]
 800e6a0:	9a04      	ldr	r2, [sp, #16]
 800e6a2:	f895 9009 	ldrb.w	r9, [r5, #9]
 800e6a6:	fb13 f707 	smulbb	r7, r3, r7
 800e6aa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e6ac:	1aff      	subs	r7, r7, r3
 800e6ae:	b2bf      	uxth	r7, r7
 800e6b0:	b23b      	sxth	r3, r7
 800e6b2:	429a      	cmp	r2, r3
 800e6b4:	bfa8      	it	ge
 800e6b6:	4657      	movge	r7, sl
 800e6b8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e6bc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e6c0:	6823      	ldr	r3, [r4, #0]
 800e6c2:	bf08      	it	eq
 800e6c4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800e6c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e6ca:	bf18      	it	ne
 800e6cc:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800e6d0:	4620      	mov	r0, r4
 800e6d2:	4798      	blx	r3
 800e6d4:	444f      	add	r7, r9
 800e6d6:	fa1f f987 	uxth.w	r9, r7
 800e6da:	2801      	cmp	r0, #1
 800e6dc:	fa0f f789 	sxth.w	r7, r9
 800e6e0:	b2b3      	uxth	r3, r6
 800e6e2:	f000 80e1 	beq.w	800e8a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800e6e6:	2802      	cmp	r0, #2
 800e6e8:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800e6ec:	f000 80e2 	beq.w	800e8b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800e6f0:	7aea      	ldrb	r2, [r5, #11]
 800e6f2:	7b2d      	ldrb	r5, [r5, #12]
 800e6f4:	b236      	sxth	r6, r6
 800e6f6:	1ab6      	subs	r6, r6, r2
 800e6f8:	442a      	add	r2, r5
 800e6fa:	4413      	add	r3, r2
 800e6fc:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800e700:	fa1f fa86 	uxth.w	sl, r6
 800e704:	b29b      	uxth	r3, r3
 800e706:	2a02      	cmp	r2, #2
 800e708:	fa0f fb8a 	sxth.w	fp, sl
 800e70c:	b21e      	sxth	r6, r3
 800e70e:	f000 80d5 	beq.w	800e8bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800e712:	2a03      	cmp	r2, #3
 800e714:	f000 80dd 	beq.w	800e8d2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800e718:	2a01      	cmp	r2, #1
 800e71a:	f040 80e5 	bne.w	800e8e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800e71e:	8925      	ldrh	r5, [r4, #8]
 800e720:	4633      	mov	r3, r6
 800e722:	eba5 0909 	sub.w	r9, r5, r9
 800e726:	463e      	mov	r6, r7
 800e728:	465d      	mov	r5, fp
 800e72a:	461f      	mov	r7, r3
 800e72c:	fa0f fb89 	sxth.w	fp, r9
 800e730:	4b5c      	ldr	r3, [pc, #368]	; (800e8a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e732:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e734:	6818      	ldr	r0, [r3, #0]
 800e736:	f7f6 ffa7 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800e73a:	f8a8 b000 	strh.w	fp, [r8]
 800e73e:	f8a8 5002 	strh.w	r5, [r8, #2]
 800e742:	f8a8 6004 	strh.w	r6, [r8, #4]
 800e746:	f8a8 7006 	strh.w	r7, [r8, #6]
 800e74a:	f8c8 0008 	str.w	r0, [r8, #8]
 800e74e:	e737      	b.n	800e5c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e750:	f003 ffc8 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 800e754:	682b      	ldr	r3, [r5, #0]
 800e756:	4628      	mov	r0, r5
 800e758:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e75a:	4798      	blx	r3
 800e75c:	682b      	ldr	r3, [r5, #0]
 800e75e:	4607      	mov	r7, r0
 800e760:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e762:	4628      	mov	r0, r5
 800e764:	4798      	blx	r3
 800e766:	6823      	ldr	r3, [r4, #0]
 800e768:	4683      	mov	fp, r0
 800e76a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e76c:	4620      	mov	r0, r4
 800e76e:	4798      	blx	r3
 800e770:	6822      	ldr	r2, [r4, #0]
 800e772:	9005      	str	r0, [sp, #20]
 800e774:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800e778:	4620      	mov	r0, r4
 800e77a:	4790      	blx	r2
 800e77c:	9b05      	ldr	r3, [sp, #20]
 800e77e:	9001      	str	r0, [sp, #4]
 800e780:	463a      	mov	r2, r7
 800e782:	4649      	mov	r1, r9
 800e784:	9300      	str	r3, [sp, #0]
 800e786:	a80f      	add	r0, sp, #60	; 0x3c
 800e788:	465b      	mov	r3, fp
 800e78a:	f004 f81b 	bl	80127c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e78e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e792:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800e796:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e798:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800e79c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e7a0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e7a4:	bf0a      	itet	eq
 800e7a6:	464a      	moveq	r2, r9
 800e7a8:	461a      	movne	r2, r3
 800e7aa:	4699      	moveq	r9, r3
 800e7ac:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e7b0:	1ad2      	subs	r2, r2, r3
 800e7b2:	6833      	ldr	r3, [r6, #0]
 800e7b4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800e7b8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e7bc:	af0f      	add	r7, sp, #60	; 0x3c
 800e7be:	7859      	ldrb	r1, [r3, #1]
 800e7c0:	9707      	str	r7, [sp, #28]
 800e7c2:	2300      	movs	r3, #0
 800e7c4:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e7c8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e7cc:	f88d 1020 	strb.w	r1, [sp, #32]
 800e7d0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800e7d4:	9509      	str	r5, [sp, #36]	; 0x24
 800e7d6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800e7da:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800e7de:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800e7e2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e7e6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800e7ea:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800e7ee:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800e7f2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e7f6:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e7fa:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800e7fe:	b350      	cbz	r0, 800e856 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e800:	682b      	ldr	r3, [r5, #0]
 800e802:	4628      	mov	r0, r5
 800e804:	695b      	ldr	r3, [r3, #20]
 800e806:	4798      	blx	r3
 800e808:	4607      	mov	r7, r0
 800e80a:	b320      	cbz	r0, 800e856 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e80c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e80e:	6803      	ldr	r3, [r0, #0]
 800e810:	4639      	mov	r1, r7
 800e812:	68db      	ldr	r3, [r3, #12]
 800e814:	4798      	blx	r3
 800e816:	4606      	mov	r6, r0
 800e818:	b1e8      	cbz	r0, 800e856 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e81a:	7b43      	ldrb	r3, [r0, #13]
 800e81c:	7a82      	ldrb	r2, [r0, #10]
 800e81e:	005b      	lsls	r3, r3, #1
 800e820:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e824:	4313      	orrs	r3, r2
 800e826:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e82a:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800e82e:	2b06      	cmp	r3, #6
 800e830:	d111      	bne.n	800e856 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e832:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e834:	6803      	ldr	r3, [r0, #0]
 800e836:	4632      	mov	r2, r6
 800e838:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e83a:	4639      	mov	r1, r7
 800e83c:	4798      	blx	r3
 800e83e:	7b73      	ldrb	r3, [r6, #13]
 800e840:	005b      	lsls	r3, r3, #1
 800e842:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e846:	7ab3      	ldrb	r3, [r6, #10]
 800e848:	4313      	orrs	r3, r2
 800e84a:	4418      	add	r0, r3
 800e84c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800e850:	4418      	add	r0, r3
 800e852:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800e856:	2600      	movs	r6, #0
 800e858:	4637      	mov	r7, r6
 800e85a:	a806      	add	r0, sp, #24
 800e85c:	f001 fb68 	bl	800ff30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e860:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800e864:	9b03      	ldr	r3, [sp, #12]
 800e866:	4286      	cmp	r6, r0
 800e868:	eba9 0903 	sub.w	r9, r9, r3
 800e86c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e870:	bfb8      	it	lt
 800e872:	4606      	movlt	r6, r0
 800e874:	3701      	adds	r7, #1
 800e876:	b236      	sxth	r6, r6
 800e878:	b2bf      	uxth	r7, r7
 800e87a:	fa0f f989 	sxth.w	r9, r9
 800e87e:	2b00      	cmp	r3, #0
 800e880:	f43f af0d 	beq.w	800e69e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e884:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800e888:	2b00      	cmp	r3, #0
 800e88a:	f47f af08 	bne.w	800e69e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e88e:	7a2b      	ldrb	r3, [r5, #8]
 800e890:	444b      	add	r3, r9
 800e892:	2b00      	cmp	r3, #0
 800e894:	dce1      	bgt.n	800e85a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800e896:	e702      	b.n	800e69e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e898:	20015028 	.word	0x20015028
 800e89c:	20015024 	.word	0x20015024
 800e8a0:	2001502c 	.word	0x2001502c
 800e8a4:	20015030 	.word	0x20015030
 800e8a8:	ebaa 0606 	sub.w	r6, sl, r6
 800e8ac:	2002      	movs	r0, #2
 800e8ae:	fb96 f6f0 	sdiv	r6, r6, r0
 800e8b2:	e71d      	b.n	800e6f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e8b4:	441e      	add	r6, r3
 800e8b6:	ebaa 0606 	sub.w	r6, sl, r6
 800e8ba:	e719      	b.n	800e6f0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e8bc:	8925      	ldrh	r5, [r4, #8]
 800e8be:	1aed      	subs	r5, r5, r3
 800e8c0:	eba5 050a 	sub.w	r5, r5, sl
 800e8c4:	fa0f fb85 	sxth.w	fp, r5
 800e8c8:	8965      	ldrh	r5, [r4, #10]
 800e8ca:	eba5 0509 	sub.w	r5, r5, r9
 800e8ce:	b22d      	sxth	r5, r5
 800e8d0:	e72e      	b.n	800e730 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e8d2:	8965      	ldrh	r5, [r4, #10]
 800e8d4:	1aed      	subs	r5, r5, r3
 800e8d6:	eba5 050a 	sub.w	r5, r5, sl
 800e8da:	4633      	mov	r3, r6
 800e8dc:	b22d      	sxth	r5, r5
 800e8de:	463e      	mov	r6, r7
 800e8e0:	f04f 0b00 	mov.w	fp, #0
 800e8e4:	461f      	mov	r7, r3
 800e8e6:	e723      	b.n	800e730 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e8e8:	2500      	movs	r5, #0
 800e8ea:	e721      	b.n	800e730 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800e8ec <_ZN8touchgfx8TextAreaD0Ev>:
 800e8ec:	b510      	push	{r4, lr}
 800e8ee:	2148      	movs	r1, #72	; 0x48
 800e8f0:	4604      	mov	r4, r0
 800e8f2:	f012 fedb 	bl	80216ac <_ZdlPvj>
 800e8f6:	4620      	mov	r0, r4
 800e8f8:	bd10      	pop	{r4, pc}
	...

0800e8fc <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e8fc:	b513      	push	{r0, r1, r4, lr}
 800e8fe:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e902:	4604      	mov	r4, r0
 800e904:	b1fb      	cbz	r3, 800e946 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e906:	4b16      	ldr	r3, [pc, #88]	; (800e960 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e908:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e90a:	881b      	ldrh	r3, [r3, #0]
 800e90c:	428b      	cmp	r3, r1
 800e90e:	d91a      	bls.n	800e946 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e910:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e914:	2b00      	cmp	r3, #0
 800e916:	dd16      	ble.n	800e946 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e918:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e91c:	2b00      	cmp	r3, #0
 800e91e:	dd12      	ble.n	800e946 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e920:	4b10      	ldr	r3, [pc, #64]	; (800e964 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e922:	6818      	ldr	r0, [r3, #0]
 800e924:	f7f6 feb0 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800e928:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e92c:	6822      	ldr	r2, [r4, #0]
 800e92e:	2b00      	cmp	r3, #0
 800e930:	db06      	blt.n	800e940 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e932:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e936:	2b00      	cmp	r3, #0
 800e938:	db02      	blt.n	800e940 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e93a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e93c:	4298      	cmp	r0, r3
 800e93e:	d004      	beq.n	800e94a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e940:	6953      	ldr	r3, [r2, #20]
 800e942:	4620      	mov	r0, r4
 800e944:	4798      	blx	r3
 800e946:	b002      	add	sp, #8
 800e948:	bd10      	pop	{r4, pc}
 800e94a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e94e:	c903      	ldmia	r1, {r0, r1}
 800e950:	466b      	mov	r3, sp
 800e952:	e883 0003 	stmia.w	r3, {r0, r1}
 800e956:	6912      	ldr	r2, [r2, #16]
 800e958:	4619      	mov	r1, r3
 800e95a:	4620      	mov	r0, r4
 800e95c:	4790      	blx	r2
 800e95e:	e7f2      	b.n	800e946 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e960:	20015028 	.word	0x20015028
 800e964:	20015030 	.word	0x20015030

0800e968 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e96c:	4b44      	ldr	r3, [pc, #272]	; (800ea80 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e96e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e970:	881b      	ldrh	r3, [r3, #0]
 800e972:	4293      	cmp	r3, r2
 800e974:	b08e      	sub	sp, #56	; 0x38
 800e976:	4604      	mov	r4, r0
 800e978:	d97e      	bls.n	800ea78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e97a:	6808      	ldr	r0, [r1, #0]
 800e97c:	4d41      	ldr	r5, [pc, #260]	; (800ea84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e97e:	6849      	ldr	r1, [r1, #4]
 800e980:	ab05      	add	r3, sp, #20
 800e982:	c303      	stmia	r3!, {r0, r1}
 800e984:	4611      	mov	r1, r2
 800e986:	6828      	ldr	r0, [r5, #0]
 800e988:	f7f6 fe7e 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800e98c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e990:	2b00      	cmp	r3, #0
 800e992:	db11      	blt.n	800e9b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e994:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e998:	2b00      	cmp	r3, #0
 800e99a:	db0d      	blt.n	800e9b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e99c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e99e:	4298      	cmp	r0, r3
 800e9a0:	d10a      	bne.n	800e9b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e9a2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e9a6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e9aa:	ab09      	add	r3, sp, #36	; 0x24
 800e9ac:	e883 0003 	stmia.w	r3, {r0, r1}
 800e9b0:	4619      	mov	r1, r3
 800e9b2:	a805      	add	r0, sp, #20
 800e9b4:	f7fe fa62 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800e9b8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e9bc:	2b00      	cmp	r3, #0
 800e9be:	dd5b      	ble.n	800ea78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e9c0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e9c4:	2b00      	cmp	r3, #0
 800e9c6:	dd57      	ble.n	800ea78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e9c8:	4f2f      	ldr	r7, [pc, #188]	; (800ea88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e9ca:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e9cc:	683b      	ldr	r3, [r7, #0]
 800e9ce:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e9d2:	4b2e      	ldr	r3, [pc, #184]	; (800ea8c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e9d4:	681b      	ldr	r3, [r3, #0]
 800e9d6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e9da:	2e00      	cmp	r6, #0
 800e9dc:	d04c      	beq.n	800ea78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e9de:	6823      	ldr	r3, [r4, #0]
 800e9e0:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e9e4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e9e6:	4620      	mov	r0, r4
 800e9e8:	4798      	blx	r3
 800e9ea:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e9ec:	683b      	ldr	r3, [r7, #0]
 800e9ee:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e9f2:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e9f6:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e9fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e9fc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ea00:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800ea04:	785b      	ldrb	r3, [r3, #1]
 800ea06:	9609      	str	r6, [sp, #36]	; 0x24
 800ea08:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ea0c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ea10:	4b1f      	ldr	r3, [pc, #124]	; (800ea90 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800ea12:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800ea16:	681b      	ldr	r3, [r3, #0]
 800ea18:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800ea1c:	910b      	str	r1, [sp, #44]	; 0x2c
 800ea1e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800ea22:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800ea26:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800ea2a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800ea2e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800ea32:	b10a      	cbz	r2, 800ea38 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800ea34:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800ea36:	b906      	cbnz	r6, 800ea3a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800ea38:	689e      	ldr	r6, [r3, #8]
 800ea3a:	af07      	add	r7, sp, #28
 800ea3c:	4621      	mov	r1, r4
 800ea3e:	4638      	mov	r0, r7
 800ea40:	f003 f984 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea44:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ea46:	6828      	ldr	r0, [r5, #0]
 800ea48:	f7f6 fe1e 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800ea4c:	6823      	ldr	r3, [r4, #0]
 800ea4e:	4605      	mov	r5, r0
 800ea50:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ea52:	4620      	mov	r0, r4
 800ea54:	4798      	blx	r3
 800ea56:	6823      	ldr	r3, [r4, #0]
 800ea58:	4680      	mov	r8, r0
 800ea5a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ea5e:	4620      	mov	r0, r4
 800ea60:	4798      	blx	r3
 800ea62:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800ea66:	ab09      	add	r3, sp, #36	; 0x24
 800ea68:	9300      	str	r3, [sp, #0]
 800ea6a:	9501      	str	r5, [sp, #4]
 800ea6c:	ab05      	add	r3, sp, #20
 800ea6e:	e897 0006 	ldmia.w	r7, {r1, r2}
 800ea72:	4630      	mov	r0, r6
 800ea74:	f7f6 fdba 	bl	80055ec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ea78:	b00e      	add	sp, #56	; 0x38
 800ea7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea7e:	bf00      	nop
 800ea80:	20015028 	.word	0x20015028
 800ea84:	20015030 	.word	0x20015030
 800ea88:	20015024 	.word	0x20015024
 800ea8c:	2001502c 	.word	0x2001502c
 800ea90:	20014fd4 	.word	0x20014fd4

0800ea94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800ea94:	b538      	push	{r3, r4, r5, lr}
 800ea96:	4b0e      	ldr	r3, [pc, #56]	; (800ead0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800ea98:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ea9a:	881b      	ldrh	r3, [r3, #0]
 800ea9c:	429a      	cmp	r2, r3
 800ea9e:	4604      	mov	r4, r0
 800eaa0:	d214      	bcs.n	800eacc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800eaa2:	6803      	ldr	r3, [r0, #0]
 800eaa4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800eaa6:	4798      	blx	r3
 800eaa8:	6823      	ldr	r3, [r4, #0]
 800eaaa:	4605      	mov	r5, r0
 800eaac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800eaae:	4620      	mov	r0, r4
 800eab0:	4798      	blx	r3
 800eab2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800eab6:	b22d      	sxth	r5, r5
 800eab8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800eabc:	4601      	mov	r1, r0
 800eabe:	bf06      	itte	eq
 800eac0:	4602      	moveq	r2, r0
 800eac2:	4629      	moveq	r1, r5
 800eac4:	462a      	movne	r2, r5
 800eac6:	4620      	mov	r0, r4
 800eac8:	f7fd ffb9 	bl	800ca3e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800eacc:	bd38      	pop	{r3, r4, r5, pc}
 800eace:	bf00      	nop
 800ead0:	20015028 	.word	0x20015028

0800ead4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ead4:	b530      	push	{r4, r5, lr}
 800ead6:	888b      	ldrh	r3, [r1, #4]
 800ead8:	8583      	strh	r3, [r0, #44]	; 0x2c
 800eada:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800eade:	b085      	sub	sp, #20
 800eae0:	4604      	mov	r4, r0
 800eae2:	b923      	cbnz	r3, 800eaee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800eae4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800eae8:	b90b      	cbnz	r3, 800eaee <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800eaea:	f7ff ffd3 	bl	800ea94 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800eaee:	6823      	ldr	r3, [r4, #0]
 800eaf0:	466d      	mov	r5, sp
 800eaf2:	4621      	mov	r1, r4
 800eaf4:	4628      	mov	r0, r5
 800eaf6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800eafa:	4798      	blx	r3
 800eafc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800eb00:	343c      	adds	r4, #60	; 0x3c
 800eb02:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800eb06:	b005      	add	sp, #20
 800eb08:	bd30      	pop	{r4, r5, pc}

0800eb0a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800eb0a:	2300      	movs	r3, #0
 800eb0c:	8083      	strh	r3, [r0, #4]
 800eb0e:	80c3      	strh	r3, [r0, #6]
 800eb10:	8003      	strh	r3, [r0, #0]
 800eb12:	8043      	strh	r3, [r0, #2]
 800eb14:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800eb18:	2bff      	cmp	r3, #255	; 0xff
 800eb1a:	bf01      	itttt	eq
 800eb1c:	890b      	ldrheq	r3, [r1, #8]
 800eb1e:	8083      	strheq	r3, [r0, #4]
 800eb20:	894b      	ldrheq	r3, [r1, #10]
 800eb22:	80c3      	strheq	r3, [r0, #6]
 800eb24:	4770      	bx	lr
	...

0800eb28 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800eb28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800eb2a:	4604      	mov	r4, r0
 800eb2c:	6808      	ldr	r0, [r1, #0]
 800eb2e:	6849      	ldr	r1, [r1, #4]
 800eb30:	466b      	mov	r3, sp
 800eb32:	c303      	stmia	r3!, {r0, r1}
 800eb34:	6823      	ldr	r3, [r4, #0]
 800eb36:	4669      	mov	r1, sp
 800eb38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb3a:	4620      	mov	r0, r4
 800eb3c:	4798      	blx	r3
 800eb3e:	4b08      	ldr	r3, [pc, #32]	; (800eb60 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800eb40:	681b      	ldr	r3, [r3, #0]
 800eb42:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800eb46:	b10a      	cbz	r2, 800eb4c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800eb48:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800eb4a:	b900      	cbnz	r0, 800eb4e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800eb4c:	6898      	ldr	r0, [r3, #8]
 800eb4e:	6803      	ldr	r3, [r0, #0]
 800eb50:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800eb52:	6a1d      	ldr	r5, [r3, #32]
 800eb54:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800eb58:	4669      	mov	r1, sp
 800eb5a:	47a8      	blx	r5
 800eb5c:	b003      	add	sp, #12
 800eb5e:	bd30      	pop	{r4, r5, pc}
 800eb60:	20014fd4 	.word	0x20014fd4

0800eb64 <_ZN8touchgfx3BoxD1Ev>:
 800eb64:	4770      	bx	lr

0800eb66 <_ZN8touchgfx3BoxD0Ev>:
 800eb66:	b510      	push	{r4, lr}
 800eb68:	212c      	movs	r1, #44	; 0x2c
 800eb6a:	4604      	mov	r4, r0
 800eb6c:	f012 fd9e 	bl	80216ac <_ZdlPvj>
 800eb70:	4620      	mov	r0, r4
 800eb72:	bd10      	pop	{r4, pc}

0800eb74 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800eb74:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800eb78:	b12a      	cbz	r2, 800eb86 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800eb7a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800eb7e:	b112      	cbz	r2, 800eb86 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800eb80:	6803      	ldr	r3, [r0, #0]
 800eb82:	695b      	ldr	r3, [r3, #20]
 800eb84:	4718      	bx	r3
 800eb86:	4770      	bx	lr

0800eb88 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800eb88:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800eb8c:	4770      	bx	lr

0800eb8e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800eb8e:	b570      	push	{r4, r5, r6, lr}
 800eb90:	880b      	ldrh	r3, [r1, #0]
 800eb92:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800eb94:	4605      	mov	r5, r0
 800eb96:	8813      	ldrh	r3, [r2, #0]
 800eb98:	f825 3f30 	strh.w	r3, [r5, #48]!
 800eb9c:	4604      	mov	r4, r0
 800eb9e:	4628      	mov	r0, r5
 800eba0:	f005 f92c 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800eba4:	4606      	mov	r6, r0
 800eba6:	4628      	mov	r0, r5
 800eba8:	f005 f95c 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ebac:	6823      	ldr	r3, [r4, #0]
 800ebae:	4605      	mov	r5, r0
 800ebb0:	4631      	mov	r1, r6
 800ebb2:	4620      	mov	r0, r4
 800ebb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ebb6:	4798      	blx	r3
 800ebb8:	6823      	ldr	r3, [r4, #0]
 800ebba:	4629      	mov	r1, r5
 800ebbc:	4620      	mov	r0, r4
 800ebbe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ebc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ebc4:	4718      	bx	r3

0800ebc6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800ebc6:	b510      	push	{r4, lr}
 800ebc8:	4604      	mov	r4, r0
 800ebca:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800ebcc:	b150      	cbz	r0, 800ebe4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800ebce:	6803      	ldr	r3, [r0, #0]
 800ebd0:	68db      	ldr	r3, [r3, #12]
 800ebd2:	4798      	blx	r3
 800ebd4:	b130      	cbz	r0, 800ebe4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800ebd6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ebd8:	6803      	ldr	r3, [r0, #0]
 800ebda:	4621      	mov	r1, r4
 800ebdc:	689b      	ldr	r3, [r3, #8]
 800ebde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebe2:	4718      	bx	r3
 800ebe4:	bd10      	pop	{r4, pc}

0800ebe6 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800ebe6:	b510      	push	{r4, lr}
 800ebe8:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800ebec:	2bff      	cmp	r3, #255	; 0xff
 800ebee:	4604      	mov	r4, r0
 800ebf0:	d006      	beq.n	800ec00 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800ebf2:	2300      	movs	r3, #0
 800ebf4:	8003      	strh	r3, [r0, #0]
 800ebf6:	8043      	strh	r3, [r0, #2]
 800ebf8:	8083      	strh	r3, [r0, #4]
 800ebfa:	80c3      	strh	r3, [r0, #6]
 800ebfc:	4620      	mov	r0, r4
 800ebfe:	bd10      	pop	{r4, pc}
 800ec00:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800ec04:	b11b      	cbz	r3, 800ec0e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800ec06:	3130      	adds	r1, #48	; 0x30
 800ec08:	f005 f960 	bl	8013ecc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ec0c:	e7f6      	b.n	800ebfc <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800ec0e:	312e      	adds	r1, #46	; 0x2e
 800ec10:	e7fa      	b.n	800ec08 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800ec14 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800ec14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec18:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ec1c:	b08a      	sub	sp, #40	; 0x28
 800ec1e:	4604      	mov	r4, r0
 800ec20:	4688      	mov	r8, r1
 800ec22:	2b00      	cmp	r3, #0
 800ec24:	d066      	beq.n	800ecf4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800ec26:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ec28:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ec2c:	a805      	add	r0, sp, #20
 800ec2e:	f005 f8e5 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ec32:	4607      	mov	r7, r0
 800ec34:	a805      	add	r0, sp, #20
 800ec36:	f005 f915 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ec3a:	f9b8 6000 	ldrsh.w	r6, [r8]
 800ec3e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800ec42:	4432      	add	r2, r6
 800ec44:	b292      	uxth	r2, r2
 800ec46:	2300      	movs	r3, #0
 800ec48:	fa0f fc82 	sxth.w	ip, r2
 800ec4c:	459c      	cmp	ip, r3
 800ec4e:	9306      	str	r3, [sp, #24]
 800ec50:	dd52      	ble.n	800ecf8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ec52:	42b7      	cmp	r7, r6
 800ec54:	dd50      	ble.n	800ecf8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ec56:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800ec5a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800ec5e:	442b      	add	r3, r5
 800ec60:	b29b      	uxth	r3, r3
 800ec62:	b219      	sxth	r1, r3
 800ec64:	2900      	cmp	r1, #0
 800ec66:	dd47      	ble.n	800ecf8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ec68:	42a8      	cmp	r0, r5
 800ec6a:	dd45      	ble.n	800ecf8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ec6c:	4567      	cmp	r7, ip
 800ec6e:	bfb8      	it	lt
 800ec70:	b2ba      	uxthlt	r2, r7
 800ec72:	4288      	cmp	r0, r1
 800ec74:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800ec78:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800ec7c:	bfb8      	it	lt
 800ec7e:	b283      	uxthlt	r3, r0
 800ec80:	1b92      	subs	r2, r2, r6
 800ec82:	1b5b      	subs	r3, r3, r5
 800ec84:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ec88:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ec8c:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ec90:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ec94:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ec98:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ec9c:	429a      	cmp	r2, r3
 800ec9e:	d026      	beq.n	800ecee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800eca0:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800eca4:	2b00      	cmp	r3, #0
 800eca6:	dd22      	ble.n	800ecee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800eca8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ecac:	2b00      	cmp	r3, #0
 800ecae:	dd1e      	ble.n	800ecee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800ecb0:	2300      	movs	r3, #0
 800ecb2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ecb6:	6823      	ldr	r3, [r4, #0]
 800ecb8:	a908      	add	r1, sp, #32
 800ecba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ecbc:	4620      	mov	r0, r4
 800ecbe:	4798      	blx	r3
 800ecc0:	4b0f      	ldr	r3, [pc, #60]	; (800ed00 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800ecc2:	681b      	ldr	r3, [r3, #0]
 800ecc4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800ecc8:	b10a      	cbz	r2, 800ecce <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800ecca:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800eccc:	b900      	cbnz	r0, 800ecd0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800ecce:	6898      	ldr	r0, [r3, #8]
 800ecd0:	6801      	ldr	r1, [r0, #0]
 800ecd2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800ecd6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800ecda:	2501      	movs	r5, #1
 800ecdc:	9502      	str	r5, [sp, #8]
 800ecde:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800ece2:	9401      	str	r4, [sp, #4]
 800ece4:	ac06      	add	r4, sp, #24
 800ece6:	9400      	str	r4, [sp, #0]
 800ece8:	688c      	ldr	r4, [r1, #8]
 800ecea:	a905      	add	r1, sp, #20
 800ecec:	47a0      	blx	r4
 800ecee:	b00a      	add	sp, #40	; 0x28
 800ecf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ecf4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ecf6:	e797      	b.n	800ec28 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800ecf8:	2300      	movs	r3, #0
 800ecfa:	9307      	str	r3, [sp, #28]
 800ecfc:	e7ca      	b.n	800ec94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800ecfe:	bf00      	nop
 800ed00:	20014fd4 	.word	0x20014fd4

0800ed04 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800ed04:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800ed08:	b12a      	cbz	r2, 800ed16 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800ed0a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800ed0e:	b112      	cbz	r2, 800ed16 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800ed10:	6803      	ldr	r3, [r0, #0]
 800ed12:	695b      	ldr	r3, [r3, #20]
 800ed14:	4718      	bx	r3
 800ed16:	4770      	bx	lr

0800ed18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800ed18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed1c:	4b2f      	ldr	r3, [pc, #188]	; (800eddc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800ed1e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ed20:	881b      	ldrh	r3, [r3, #0]
 800ed22:	4293      	cmp	r3, r2
 800ed24:	b08d      	sub	sp, #52	; 0x34
 800ed26:	4604      	mov	r4, r0
 800ed28:	460f      	mov	r7, r1
 800ed2a:	d954      	bls.n	800edd6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800ed2c:	4b2c      	ldr	r3, [pc, #176]	; (800ede0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800ed2e:	6819      	ldr	r1, [r3, #0]
 800ed30:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800ed34:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800ed38:	4a2a      	ldr	r2, [pc, #168]	; (800ede4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800ed3a:	6812      	ldr	r2, [r2, #0]
 800ed3c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800ed40:	2900      	cmp	r1, #0
 800ed42:	d048      	beq.n	800edd6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800ed44:	785a      	ldrb	r2, [r3, #1]
 800ed46:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800ed4a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800ed4e:	4b26      	ldr	r3, [pc, #152]	; (800ede8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800ed50:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800ed54:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800ed58:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800ed5c:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800ed5e:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800ed62:	9107      	str	r1, [sp, #28]
 800ed64:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800ed68:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ed6c:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800ed70:	681a      	ldr	r2, [r3, #0]
 800ed72:	f88d 8020 	strb.w	r8, [sp, #32]
 800ed76:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 800ed7a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800ed7e:	9609      	str	r6, [sp, #36]	; 0x24
 800ed80:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800ed84:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800ed88:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800ed8c:	b10b      	cbz	r3, 800ed92 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800ed8e:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800ed90:	b905      	cbnz	r5, 800ed94 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800ed92:	6895      	ldr	r5, [r2, #8]
 800ed94:	ae05      	add	r6, sp, #20
 800ed96:	4621      	mov	r1, r4
 800ed98:	4630      	mov	r0, r6
 800ed9a:	f002 ffd7 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ed9e:	4b13      	ldr	r3, [pc, #76]	; (800edec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800eda0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800eda2:	6818      	ldr	r0, [r3, #0]
 800eda4:	f7f6 fc70 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800eda8:	6823      	ldr	r3, [r4, #0]
 800edaa:	4680      	mov	r8, r0
 800edac:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800edae:	4620      	mov	r0, r4
 800edb0:	4798      	blx	r3
 800edb2:	6823      	ldr	r3, [r4, #0]
 800edb4:	4681      	mov	r9, r0
 800edb6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800edba:	4620      	mov	r0, r4
 800edbc:	4798      	blx	r3
 800edbe:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800edc2:	ab07      	add	r3, sp, #28
 800edc4:	9300      	str	r3, [sp, #0]
 800edc6:	f8cd 8004 	str.w	r8, [sp, #4]
 800edca:	463b      	mov	r3, r7
 800edcc:	e896 0006 	ldmia.w	r6, {r1, r2}
 800edd0:	4628      	mov	r0, r5
 800edd2:	f7f6 fc0b 	bl	80055ec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800edd6:	b00d      	add	sp, #52	; 0x34
 800edd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eddc:	20015028 	.word	0x20015028
 800ede0:	20015024 	.word	0x20015024
 800ede4:	2001502c 	.word	0x2001502c
 800ede8:	20014fd4 	.word	0x20014fd4
 800edec:	20015030 	.word	0x20015030

0800edf0 <_ZN8touchgfx5ImageD1Ev>:
 800edf0:	4770      	bx	lr

0800edf2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800edf2:	b570      	push	{r4, r5, r6, lr}
 800edf4:	880b      	ldrh	r3, [r1, #0]
 800edf6:	84c3      	strh	r3, [r0, #38]	; 0x26
 800edf8:	4604      	mov	r4, r0
 800edfa:	4608      	mov	r0, r1
 800edfc:	460d      	mov	r5, r1
 800edfe:	f004 fffd 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ee02:	4606      	mov	r6, r0
 800ee04:	4628      	mov	r0, r5
 800ee06:	f005 f82d 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ee0a:	6823      	ldr	r3, [r4, #0]
 800ee0c:	4605      	mov	r5, r0
 800ee0e:	4631      	mov	r1, r6
 800ee10:	4620      	mov	r0, r4
 800ee12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ee14:	4798      	blx	r3
 800ee16:	6823      	ldr	r3, [r4, #0]
 800ee18:	4629      	mov	r1, r5
 800ee1a:	4620      	mov	r0, r4
 800ee1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ee1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ee22:	4718      	bx	r3

0800ee24 <_ZN8touchgfx5ImageD0Ev>:
 800ee24:	b510      	push	{r4, lr}
 800ee26:	212c      	movs	r1, #44	; 0x2c
 800ee28:	4604      	mov	r4, r0
 800ee2a:	f012 fc3f 	bl	80216ac <_ZdlPvj>
 800ee2e:	4620      	mov	r0, r4
 800ee30:	bd10      	pop	{r4, pc}

0800ee32 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800ee32:	b510      	push	{r4, lr}
 800ee34:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800ee38:	2bff      	cmp	r3, #255	; 0xff
 800ee3a:	4604      	mov	r4, r0
 800ee3c:	d006      	beq.n	800ee4c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800ee3e:	2300      	movs	r3, #0
 800ee40:	8003      	strh	r3, [r0, #0]
 800ee42:	8043      	strh	r3, [r0, #2]
 800ee44:	8083      	strh	r3, [r0, #4]
 800ee46:	80c3      	strh	r3, [r0, #6]
 800ee48:	4620      	mov	r0, r4
 800ee4a:	bd10      	pop	{r4, pc}
 800ee4c:	3126      	adds	r1, #38	; 0x26
 800ee4e:	f005 f83d 	bl	8013ecc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ee52:	e7f9      	b.n	800ee48 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800ee54 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800ee54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ee58:	4604      	mov	r4, r0
 800ee5a:	b088      	sub	sp, #32
 800ee5c:	f854 3b26 	ldr.w	r3, [r4], #38
 800ee60:	2500      	movs	r5, #0
 800ee62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee64:	460f      	mov	r7, r1
 800ee66:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800ee6a:	a904      	add	r1, sp, #16
 800ee6c:	4606      	mov	r6, r0
 800ee6e:	4798      	blx	r3
 800ee70:	4620      	mov	r0, r4
 800ee72:	f004 ffc3 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ee76:	4680      	mov	r8, r0
 800ee78:	4620      	mov	r0, r4
 800ee7a:	f004 fff3 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ee7e:	9506      	str	r5, [sp, #24]
 800ee80:	ad06      	add	r5, sp, #24
 800ee82:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ee86:	4639      	mov	r1, r7
 800ee88:	4628      	mov	r0, r5
 800ee8a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ee8e:	f7fd fff5 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800ee92:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ee96:	2b00      	cmp	r3, #0
 800ee98:	dd19      	ble.n	800eece <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ee9a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ee9e:	2b00      	cmp	r3, #0
 800eea0:	dd15      	ble.n	800eece <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800eea2:	4b0c      	ldr	r3, [pc, #48]	; (800eed4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800eea4:	681b      	ldr	r3, [r3, #0]
 800eea6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800eeaa:	b10a      	cbz	r2, 800eeb0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800eeac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800eeae:	b900      	cbnz	r0, 800eeb2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800eeb0:	6898      	ldr	r0, [r3, #8]
 800eeb2:	6801      	ldr	r1, [r0, #0]
 800eeb4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800eeb8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800eebc:	2701      	movs	r7, #1
 800eebe:	9702      	str	r7, [sp, #8]
 800eec0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800eec4:	e9cd 5600 	strd	r5, r6, [sp]
 800eec8:	688d      	ldr	r5, [r1, #8]
 800eeca:	4621      	mov	r1, r4
 800eecc:	47a8      	blx	r5
 800eece:	b008      	add	sp, #32
 800eed0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eed4:	20014fd4 	.word	0x20014fd4

0800eed8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800eed8:	4770      	bx	lr

0800eeda <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800eeda:	b510      	push	{r4, lr}
 800eedc:	2148      	movs	r1, #72	; 0x48
 800eede:	4604      	mov	r4, r0
 800eee0:	f012 fbe4 	bl	80216ac <_ZdlPvj>
 800eee4:	4620      	mov	r0, r4
 800eee6:	bd10      	pop	{r4, pc}

0800eee8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800eee8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eeec:	b08d      	sub	sp, #52	; 0x34
 800eeee:	4604      	mov	r4, r0
 800eef0:	460f      	mov	r7, r1
 800eef2:	f7ff fe8f 	bl	800ec14 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800eef6:	4a55      	ldr	r2, [pc, #340]	; (800f04c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800eef8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800eefa:	8812      	ldrh	r2, [r2, #0]
 800eefc:	429a      	cmp	r2, r3
 800eefe:	f240 8082 	bls.w	800f006 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800ef02:	4d53      	ldr	r5, [pc, #332]	; (800f050 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800ef04:	682a      	ldr	r2, [r5, #0]
 800ef06:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800ef0a:	4b52      	ldr	r3, [pc, #328]	; (800f054 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800ef0c:	681b      	ldr	r3, [r3, #0]
 800ef0e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800ef12:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 800ef16:	2200      	movs	r2, #0
 800ef18:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800ef1c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800ef20:	2a03      	cmp	r2, #3
 800ef22:	d811      	bhi.n	800ef48 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800ef24:	e8df f002 	tbb	[pc, r2]
 800ef28:	89727902 	.word	0x89727902
 800ef2c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800ef30:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800ef34:	1ad2      	subs	r2, r2, r3
 800ef36:	2002      	movs	r0, #2
 800ef38:	f8ad 1010 	strh.w	r1, [sp, #16]
 800ef3c:	fb92 f2f0 	sdiv	r2, r2, r0
 800ef40:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ef44:	f8ad 200e 	strh.w	r2, [sp, #14]
 800ef48:	f10d 080c 	add.w	r8, sp, #12
 800ef4c:	e898 0003 	ldmia.w	r8, {r0, r1}
 800ef50:	f10d 0914 	add.w	r9, sp, #20
 800ef54:	e889 0003 	stmia.w	r9, {r0, r1}
 800ef58:	4639      	mov	r1, r7
 800ef5a:	4648      	mov	r0, r9
 800ef5c:	f7fd ff8e 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 800ef60:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800ef64:	2b00      	cmp	r3, #0
 800ef66:	dd4e      	ble.n	800f006 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800ef68:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800ef6c:	2b00      	cmp	r3, #0
 800ef6e:	dd4a      	ble.n	800f006 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800ef70:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800ef74:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ef78:	1a9b      	subs	r3, r3, r2
 800ef7a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ef7e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800ef82:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800ef86:	1a9b      	subs	r3, r3, r2
 800ef88:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ef8c:	6823      	ldr	r3, [r4, #0]
 800ef8e:	4641      	mov	r1, r8
 800ef90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef92:	4620      	mov	r0, r4
 800ef94:	4798      	blx	r3
 800ef96:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800ef9a:	2b00      	cmp	r3, #0
 800ef9c:	d053      	beq.n	800f046 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800ef9e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800efa0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800efa2:	682b      	ldr	r3, [r5, #0]
 800efa4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800efa8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800efac:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800efb0:	785b      	ldrb	r3, [r3, #1]
 800efb2:	9209      	str	r2, [sp, #36]	; 0x24
 800efb4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800efb8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800efbc:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800efc0:	2300      	movs	r3, #0
 800efc2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800efc6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800efca:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800efce:	4b22      	ldr	r3, [pc, #136]	; (800f058 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800efd0:	9607      	str	r6, [sp, #28]
 800efd2:	681b      	ldr	r3, [r3, #0]
 800efd4:	f88d 5020 	strb.w	r5, [sp, #32]
 800efd8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 800efdc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800efe0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800efe4:	b10a      	cbz	r2, 800efea <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800efe6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800efe8:	b904      	cbnz	r4, 800efec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800efea:	689c      	ldr	r4, [r3, #8]
 800efec:	4b1b      	ldr	r3, [pc, #108]	; (800f05c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800efee:	6818      	ldr	r0, [r3, #0]
 800eff0:	f7f6 fb4a 	bl	8005688 <_ZNK8touchgfx5Texts7getTextEt>
 800eff4:	ab07      	add	r3, sp, #28
 800eff6:	9001      	str	r0, [sp, #4]
 800eff8:	9300      	str	r3, [sp, #0]
 800effa:	e898 0006 	ldmia.w	r8, {r1, r2}
 800effe:	464b      	mov	r3, r9
 800f000:	4620      	mov	r0, r4
 800f002:	f7f6 faf3 	bl	80055ec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800f006:	b00d      	add	sp, #52	; 0x34
 800f008:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f00c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800f010:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800f014:	1ad2      	subs	r2, r2, r3
 800f016:	3201      	adds	r2, #1
 800f018:	e78d      	b.n	800ef36 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800f01a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800f01e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800f022:	1ad2      	subs	r2, r2, r3
 800f024:	3201      	adds	r2, #1
 800f026:	2002      	movs	r0, #2
 800f028:	f8ad 3010 	strh.w	r3, [sp, #16]
 800f02c:	fb92 f2f0 	sdiv	r2, r2, r0
 800f030:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f034:	f8ad 200c 	strh.w	r2, [sp, #12]
 800f038:	e786      	b.n	800ef48 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800f03a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800f03e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800f042:	1ad2      	subs	r2, r2, r3
 800f044:	e7ef      	b.n	800f026 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800f046:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800f048:	e7aa      	b.n	800efa0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800f04a:	bf00      	nop
 800f04c:	20015028 	.word	0x20015028
 800f050:	20015024 	.word	0x20015024
 800f054:	2001502c 	.word	0x2001502c
 800f058:	20014fd4 	.word	0x20014fd4
 800f05c:	20015030 	.word	0x20015030

0800f060 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800f060:	b510      	push	{r4, lr}
 800f062:	2101      	movs	r1, #1
 800f064:	4c13      	ldr	r4, [pc, #76]	; (800f0b4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800f066:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800f06a:	2200      	movs	r2, #0
 800f06c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800f070:	6004      	str	r4, [r0, #0]
 800f072:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f076:	4c10      	ldr	r4, [pc, #64]	; (800f0b8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800f078:	8082      	strh	r2, [r0, #4]
 800f07a:	80c2      	strh	r2, [r0, #6]
 800f07c:	8102      	strh	r2, [r0, #8]
 800f07e:	8142      	strh	r2, [r0, #10]
 800f080:	8182      	strh	r2, [r0, #12]
 800f082:	81c2      	strh	r2, [r0, #14]
 800f084:	8202      	strh	r2, [r0, #16]
 800f086:	8242      	strh	r2, [r0, #18]
 800f088:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f08c:	61c2      	str	r2, [r0, #28]
 800f08e:	8402      	strh	r2, [r0, #32]
 800f090:	8442      	strh	r2, [r0, #34]	; 0x22
 800f092:	6282      	str	r2, [r0, #40]	; 0x28
 800f094:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800f098:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800f09a:	8601      	strh	r1, [r0, #48]	; 0x30
 800f09c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800f0a0:	6344      	str	r4, [r0, #52]	; 0x34
 800f0a2:	8701      	strh	r1, [r0, #56]	; 0x38
 800f0a4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800f0a8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800f0ac:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 800f0b0:	bd10      	pop	{r4, pc}
 800f0b2:	bf00      	nop
 800f0b4:	08024d44 	.word	0x08024d44
 800f0b8:	08023528 	.word	0x08023528

0800f0bc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f0bc:	b510      	push	{r4, lr}
 800f0be:	6803      	ldr	r3, [r0, #0]
 800f0c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f0c2:	460c      	mov	r4, r1
 800f0c4:	4798      	blx	r3
 800f0c6:	1b03      	subs	r3, r0, r4
 800f0c8:	4258      	negs	r0, r3
 800f0ca:	4158      	adcs	r0, r3
 800f0cc:	bd10      	pop	{r4, pc}
	...

0800f0d0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f0d0:	4b01      	ldr	r3, [pc, #4]	; (800f0d8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f0d2:	6019      	str	r1, [r3, #0]
 800f0d4:	4770      	bx	lr
 800f0d6:	bf00      	nop
 800f0d8:	20014fdc 	.word	0x20014fdc

0800f0dc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f0dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f0e0:	4696      	mov	lr, r2
 800f0e2:	4605      	mov	r5, r0
 800f0e4:	4614      	mov	r4, r2
 800f0e6:	460e      	mov	r6, r1
 800f0e8:	461f      	mov	r7, r3
 800f0ea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f0ee:	b097      	sub	sp, #92	; 0x5c
 800f0f0:	f10d 0c1c 	add.w	ip, sp, #28
 800f0f4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f0f8:	f8de 3000 	ldr.w	r3, [lr]
 800f0fc:	f8cc 3000 	str.w	r3, [ip]
 800f100:	f104 0e14 	add.w	lr, r4, #20
 800f104:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f108:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f10c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f110:	f8de 3000 	ldr.w	r3, [lr]
 800f114:	f8cc 3000 	str.w	r3, [ip]
 800f118:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f11c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f120:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f124:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f128:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f12c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f130:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f134:	f8de 3000 	ldr.w	r3, [lr]
 800f138:	f8cc 3000 	str.w	r3, [ip]
 800f13c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f13e:	682b      	ldr	r3, [r5, #0]
 800f140:	9201      	str	r2, [sp, #4]
 800f142:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f146:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f148:	9200      	str	r2, [sp, #0]
 800f14a:	f8cd 8008 	str.w	r8, [sp, #8]
 800f14e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f152:	aa07      	add	r2, sp, #28
 800f154:	463b      	mov	r3, r7
 800f156:	4631      	mov	r1, r6
 800f158:	4628      	mov	r0, r5
 800f15a:	47d8      	blx	fp
 800f15c:	46a6      	mov	lr, r4
 800f15e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f162:	f10d 0c1c 	add.w	ip, sp, #28
 800f166:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f16a:	f8de 3000 	ldr.w	r3, [lr]
 800f16e:	f8cc 3000 	str.w	r3, [ip]
 800f172:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f176:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f17a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f17e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f182:	343c      	adds	r4, #60	; 0x3c
 800f184:	f8de 3000 	ldr.w	r3, [lr]
 800f188:	f8cc 3000 	str.w	r3, [ip]
 800f18c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f18e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f192:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f196:	6823      	ldr	r3, [r4, #0]
 800f198:	f8cc 3000 	str.w	r3, [ip]
 800f19c:	682b      	ldr	r3, [r5, #0]
 800f19e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f1a2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f1a4:	9201      	str	r2, [sp, #4]
 800f1a6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f1a8:	9200      	str	r2, [sp, #0]
 800f1aa:	f8cd 8008 	str.w	r8, [sp, #8]
 800f1ae:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f1b0:	aa07      	add	r2, sp, #28
 800f1b2:	463b      	mov	r3, r7
 800f1b4:	4631      	mov	r1, r6
 800f1b6:	4628      	mov	r0, r5
 800f1b8:	47a0      	blx	r4
 800f1ba:	b017      	add	sp, #92	; 0x5c
 800f1bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f1c0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1c4:	b08d      	sub	sp, #52	; 0x34
 800f1c6:	4688      	mov	r8, r1
 800f1c8:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f1ca:	f8d3 c000 	ldr.w	ip, [r3]
 800f1ce:	680f      	ldr	r7, [r1, #0]
 800f1d0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f1d4:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f1d8:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f1dc:	edd3 6a07 	vldr	s13, [r3, #28]
 800f1e0:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f1e2:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f1e6:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f1ea:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f1ee:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f1f2:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f1f6:	eba7 070c 	sub.w	r7, r7, ip
 800f1fa:	42bc      	cmp	r4, r7
 800f1fc:	bfa8      	it	ge
 800f1fe:	463c      	movge	r4, r7
 800f200:	ee07 4a90 	vmov	s15, r4
 800f204:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f208:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f20c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f210:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f214:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f218:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f21c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f220:	eb09 0e0c 	add.w	lr, r9, ip
 800f224:	4571      	cmp	r1, lr
 800f226:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f22a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f22e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f232:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f236:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f23a:	f340 808d 	ble.w	800f358 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f23e:	eba1 060e 	sub.w	r6, r1, lr
 800f242:	fb96 f5f4 	sdiv	r5, r6, r4
 800f246:	ee07 5a10 	vmov	s14, r5
 800f24a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f24e:	2d00      	cmp	r5, #0
 800f250:	fb04 6615 	mls	r6, r4, r5, r6
 800f254:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f258:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f25c:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f260:	dd13      	ble.n	800f28a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f262:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f266:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f26a:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f26e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f272:	bf18      	it	ne
 800f274:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f278:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f27c:	bf08      	it	eq
 800f27e:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f282:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f286:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f28a:	fb05 f204 	mul.w	r2, r5, r4
 800f28e:	1abf      	subs	r7, r7, r2
 800f290:	4494      	add	ip, r2
 800f292:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f296:	4411      	add	r1, r2
 800f298:	eb09 020c 	add.w	r2, r9, ip
 800f29c:	443a      	add	r2, r7
 800f29e:	b209      	sxth	r1, r1
 800f2a0:	428a      	cmp	r2, r1
 800f2a2:	bfc4      	itt	gt
 800f2a4:	eba1 0209 	subgt.w	r2, r1, r9
 800f2a8:	eba2 070c 	subgt.w	r7, r2, ip
 800f2ac:	2f00      	cmp	r7, #0
 800f2ae:	dd50      	ble.n	800f352 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f2b0:	fb97 f1f4 	sdiv	r1, r7, r4
 800f2b4:	fb04 7211 	mls	r2, r4, r1, r7
 800f2b8:	b90a      	cbnz	r2, 800f2be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f2ba:	3901      	subs	r1, #1
 800f2bc:	4622      	mov	r2, r4
 800f2be:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f2c2:	6840      	ldr	r0, [r0, #4]
 800f2c4:	900b      	str	r0, [sp, #44]	; 0x2c
 800f2c6:	f8d0 a000 	ldr.w	sl, [r0]
 800f2ca:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f2cc:	9008      	str	r0, [sp, #32]
 800f2ce:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f2d2:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f2d4:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f2d8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f2dc:	695b      	ldr	r3, [r3, #20]
 800f2de:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f2e0:	445b      	add	r3, fp
 800f2e2:	eef0 6a42 	vmov.f32	s13, s4
 800f2e6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f2ea:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f2ee:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f2f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f2f6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f2fa:	9307      	str	r3, [sp, #28]
 800f2fc:	ee17 7a90 	vmov	r7, s15
 800f300:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f304:	eeb0 7a61 	vmov.f32	s14, s3
 800f308:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f30c:	ee16 3a90 	vmov	r3, s13
 800f310:	fb97 f7f4 	sdiv	r7, r7, r4
 800f314:	ee17 ca90 	vmov	ip, s15
 800f318:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f31c:	fb9c fcf4 	sdiv	ip, ip, r4
 800f320:	fb0c 3306 	mla	r3, ip, r6, r3
 800f324:	9302      	str	r3, [sp, #8]
 800f326:	ee17 3a10 	vmov	r3, s14
 800f32a:	44b6      	add	lr, r6
 800f32c:	fb04 e505 	mla	r5, r4, r5, lr
 800f330:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f334:	fb07 3706 	mla	r7, r7, r6, r3
 800f338:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f33c:	e9cd 4700 	strd	r4, r7, [sp]
 800f340:	2900      	cmp	r1, #0
 800f342:	bfcc      	ite	gt
 800f344:	46a1      	movgt	r9, r4
 800f346:	4691      	movle	r9, r2
 800f348:	eba9 0306 	sub.w	r3, r9, r6
 800f34c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f350:	47a0      	blx	r4
 800f352:	b00d      	add	sp, #52	; 0x34
 800f354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f358:	2500      	movs	r5, #0
 800f35a:	462e      	mov	r6, r5
 800f35c:	e799      	b.n	800f292 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f360 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f364:	b0db      	sub	sp, #364	; 0x16c
 800f366:	461d      	mov	r5, r3
 800f368:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f36c:	930a      	str	r3, [sp, #40]	; 0x28
 800f36e:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800f372:	930b      	str	r3, [sp, #44]	; 0x2c
 800f374:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800f378:	9310      	str	r3, [sp, #64]	; 0x40
 800f37a:	6803      	ldr	r3, [r0, #0]
 800f37c:	910f      	str	r1, [sp, #60]	; 0x3c
 800f37e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800f380:	9009      	str	r0, [sp, #36]	; 0x24
 800f382:	4614      	mov	r4, r2
 800f384:	4629      	mov	r1, r5
 800f386:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f38a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f38e:	47b8      	blx	r7
 800f390:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f392:	6058      	str	r0, [r3, #4]
 800f394:	2800      	cmp	r0, #0
 800f396:	f000 83a1 	beq.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f39a:	682b      	ldr	r3, [r5, #0]
 800f39c:	9314      	str	r3, [sp, #80]	; 0x50
 800f39e:	686b      	ldr	r3, [r5, #4]
 800f3a0:	9315      	str	r3, [sp, #84]	; 0x54
 800f3a2:	4bc4      	ldr	r3, [pc, #784]	; (800f6b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f3a4:	ed94 7a02 	vldr	s14, [r4, #8]
 800f3a8:	7819      	ldrb	r1, [r3, #0]
 800f3aa:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f3ae:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800f3b2:	2900      	cmp	r1, #0
 800f3b4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f3b8:	bf16      	itet	ne
 800f3ba:	4619      	movne	r1, r3
 800f3bc:	4611      	moveq	r1, r2
 800f3be:	4613      	movne	r3, r2
 800f3c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3c4:	9116      	str	r1, [sp, #88]	; 0x58
 800f3c6:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800f3ca:	f240 8387 	bls.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3ce:	ed94 7a07 	vldr	s14, [r4, #28]
 800f3d2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f3d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3da:	f240 837f 	bls.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3de:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800f3e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f3e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f3ea:	f240 8377 	bls.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3ee:	6822      	ldr	r2, [r4, #0]
 800f3f0:	4bb1      	ldr	r3, [pc, #708]	; (800f6b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f3f2:	429a      	cmp	r2, r3
 800f3f4:	f2c0 8372 	blt.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f3f8:	49b0      	ldr	r1, [pc, #704]	; (800f6bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f3fa:	6963      	ldr	r3, [r4, #20]
 800f3fc:	428a      	cmp	r2, r1
 800f3fe:	f300 836d 	bgt.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f402:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f406:	48ae      	ldr	r0, [pc, #696]	; (800f6c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f408:	33ff      	adds	r3, #255	; 0xff
 800f40a:	4283      	cmp	r3, r0
 800f40c:	f200 8366 	bhi.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f410:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f412:	4dac      	ldr	r5, [pc, #688]	; (800f6c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f414:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800f418:	33ff      	adds	r3, #255	; 0xff
 800f41a:	42ab      	cmp	r3, r5
 800f41c:	f200 835e 	bhi.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f420:	6862      	ldr	r2, [r4, #4]
 800f422:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800f426:	33ff      	adds	r3, #255	; 0xff
 800f428:	4283      	cmp	r3, r0
 800f42a:	f200 8357 	bhi.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f42e:	69a1      	ldr	r1, [r4, #24]
 800f430:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800f434:	33ff      	adds	r3, #255	; 0xff
 800f436:	4283      	cmp	r3, r0
 800f438:	f200 8350 	bhi.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f43c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f43e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800f442:	30ff      	adds	r0, #255	; 0xff
 800f444:	42a8      	cmp	r0, r5
 800f446:	f200 8349 	bhi.w	800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f44a:	428a      	cmp	r2, r1
 800f44c:	f280 8110 	bge.w	800f670 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f450:	429a      	cmp	r2, r3
 800f452:	f300 8119 	bgt.w	800f688 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f456:	4299      	cmp	r1, r3
 800f458:	f280 811d 	bge.w	800f696 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f45c:	2502      	movs	r5, #2
 800f45e:	2701      	movs	r7, #1
 800f460:	46a9      	mov	r9, r5
 800f462:	46b8      	mov	r8, r7
 800f464:	f04f 0a00 	mov.w	sl, #0
 800f468:	4621      	mov	r1, r4
 800f46a:	a849      	add	r0, sp, #292	; 0x124
 800f46c:	f003 fe82 	bl	8013174 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f470:	4622      	mov	r2, r4
 800f472:	4653      	mov	r3, sl
 800f474:	a949      	add	r1, sp, #292	; 0x124
 800f476:	f8cd 9000 	str.w	r9, [sp]
 800f47a:	a819      	add	r0, sp, #100	; 0x64
 800f47c:	f003 ffaa 	bl	80133d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f480:	4622      	mov	r2, r4
 800f482:	4653      	mov	r3, sl
 800f484:	a949      	add	r1, sp, #292	; 0x124
 800f486:	f8cd 8000 	str.w	r8, [sp]
 800f48a:	a829      	add	r0, sp, #164	; 0xa4
 800f48c:	f003 ffa2 	bl	80133d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f490:	4643      	mov	r3, r8
 800f492:	4622      	mov	r2, r4
 800f494:	a949      	add	r1, sp, #292	; 0x124
 800f496:	f8cd 9000 	str.w	r9, [sp]
 800f49a:	a839      	add	r0, sp, #228	; 0xe4
 800f49c:	f003 ff9a 	bl	80133d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f4a0:	42af      	cmp	r7, r5
 800f4a2:	bfb5      	itete	lt
 800f4a4:	2300      	movlt	r3, #0
 800f4a6:	2301      	movge	r3, #1
 800f4a8:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f4aa:	930e      	strge	r3, [sp, #56]	; 0x38
 800f4ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f4ae:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f4b2:	af12      	add	r7, sp, #72	; 0x48
 800f4b4:	bfb9      	ittee	lt
 800f4b6:	ad29      	addlt	r5, sp, #164	; 0xa4
 800f4b8:	ac19      	addlt	r4, sp, #100	; 0x64
 800f4ba:	ad19      	addge	r5, sp, #100	; 0x64
 800f4bc:	ac29      	addge	r4, sp, #164	; 0xa4
 800f4be:	e887 0003 	stmia.w	r7, {r0, r1}
 800f4c2:	b928      	cbnz	r0, 800f4d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f4c4:	4b80      	ldr	r3, [pc, #512]	; (800f6c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f4c6:	6818      	ldr	r0, [r3, #0]
 800f4c8:	6803      	ldr	r3, [r0, #0]
 800f4ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f4cc:	4798      	blx	r3
 800f4ce:	6038      	str	r0, [r7, #0]
 800f4d0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f4d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f4d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f4da:	930c      	str	r3, [sp, #48]	; 0x30
 800f4dc:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f4de:	6963      	ldr	r3, [r4, #20]
 800f4e0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800f4e2:	440b      	add	r3, r1
 800f4e4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f4e8:	4408      	add	r0, r1
 800f4ea:	b200      	sxth	r0, r0
 800f4ec:	4283      	cmp	r3, r0
 800f4ee:	900d      	str	r0, [sp, #52]	; 0x34
 800f4f0:	f280 80dd 	bge.w	800f6ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f4f4:	428b      	cmp	r3, r1
 800f4f6:	da08      	bge.n	800f50a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f4f8:	2a00      	cmp	r2, #0
 800f4fa:	dd06      	ble.n	800f50a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f4fc:	1acb      	subs	r3, r1, r3
 800f4fe:	429a      	cmp	r2, r3
 800f500:	f2c0 80e4 	blt.w	800f6cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f504:	2b00      	cmp	r3, #0
 800f506:	f300 80e2 	bgt.w	800f6ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f50a:	6967      	ldr	r7, [r4, #20]
 800f50c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f50e:	443b      	add	r3, r7
 800f510:	461f      	mov	r7, r3
 800f512:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f514:	1bdf      	subs	r7, r3, r7
 800f516:	4297      	cmp	r7, r2
 800f518:	bfa8      	it	ge
 800f51a:	4617      	movge	r7, r2
 800f51c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f520:	2f00      	cmp	r7, #0
 800f522:	f340 8166 	ble.w	800f7f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f526:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f528:	6829      	ldr	r1, [r5, #0]
 800f52a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f52e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f532:	6820      	ldr	r0, [r4, #0]
 800f534:	4411      	add	r1, r2
 800f536:	4299      	cmp	r1, r3
 800f538:	dd1a      	ble.n	800f570 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f53a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f53e:	440b      	add	r3, r1
 800f540:	4402      	add	r2, r0
 800f542:	b21b      	sxth	r3, r3
 800f544:	429a      	cmp	r2, r3
 800f546:	dc13      	bgt.n	800f570 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f548:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f54a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f54c:	681b      	ldr	r3, [r3, #0]
 800f54e:	9206      	str	r2, [sp, #24]
 800f550:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f552:	9205      	str	r2, [sp, #20]
 800f554:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f556:	9500      	str	r5, [sp, #0]
 800f558:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f55c:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f55e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f560:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f564:	a912      	add	r1, sp, #72	; 0x48
 800f566:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f56a:	aa49      	add	r2, sp, #292	; 0x124
 800f56c:	4623      	mov	r3, r4
 800f56e:	47c8      	blx	r9
 800f570:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f574:	441a      	add	r2, r3
 800f576:	6963      	ldr	r3, [r4, #20]
 800f578:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f57c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f580:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f584:	68a1      	ldr	r1, [r4, #8]
 800f586:	ed94 6a08 	vldr	s12, [r4, #32]
 800f58a:	6022      	str	r2, [r4, #0]
 800f58c:	3301      	adds	r3, #1
 800f58e:	6163      	str	r3, [r4, #20]
 800f590:	69a3      	ldr	r3, [r4, #24]
 800f592:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f596:	3b01      	subs	r3, #1
 800f598:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f59c:	61a3      	str	r3, [r4, #24]
 800f59e:	6923      	ldr	r3, [r4, #16]
 800f5a0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f5a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f5a8:	edd4 6a07 	vldr	s13, [r4, #28]
 800f5ac:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f5b0:	440b      	add	r3, r1
 800f5b2:	68e1      	ldr	r1, [r4, #12]
 800f5b4:	6123      	str	r3, [r4, #16]
 800f5b6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f5ba:	428b      	cmp	r3, r1
 800f5bc:	edc4 6a07 	vstr	s13, [r4, #28]
 800f5c0:	db15      	blt.n	800f5ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f5c2:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f5c6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f5ca:	3201      	adds	r2, #1
 800f5cc:	edc4 6a07 	vstr	s13, [r4, #28]
 800f5d0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f5d4:	6022      	str	r2, [r4, #0]
 800f5d6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f5da:	1a5b      	subs	r3, r3, r1
 800f5dc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f5e0:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f5e4:	6123      	str	r3, [r4, #16]
 800f5e6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f5ea:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f5ee:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f5f2:	441a      	add	r2, r3
 800f5f4:	696b      	ldr	r3, [r5, #20]
 800f5f6:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f5fa:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f5fe:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f602:	68a9      	ldr	r1, [r5, #8]
 800f604:	ed95 6a08 	vldr	s12, [r5, #32]
 800f608:	602a      	str	r2, [r5, #0]
 800f60a:	3301      	adds	r3, #1
 800f60c:	616b      	str	r3, [r5, #20]
 800f60e:	69ab      	ldr	r3, [r5, #24]
 800f610:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f614:	3b01      	subs	r3, #1
 800f616:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f61a:	61ab      	str	r3, [r5, #24]
 800f61c:	692b      	ldr	r3, [r5, #16]
 800f61e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f622:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f626:	edd5 6a07 	vldr	s13, [r5, #28]
 800f62a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f62e:	440b      	add	r3, r1
 800f630:	68e9      	ldr	r1, [r5, #12]
 800f632:	612b      	str	r3, [r5, #16]
 800f634:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f638:	428b      	cmp	r3, r1
 800f63a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f63e:	db15      	blt.n	800f66c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f640:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f644:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f648:	3201      	adds	r2, #1
 800f64a:	edc5 6a07 	vstr	s13, [r5, #28]
 800f64e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f652:	602a      	str	r2, [r5, #0]
 800f654:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f658:	1a5b      	subs	r3, r3, r1
 800f65a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f65e:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f662:	612b      	str	r3, [r5, #16]
 800f664:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f668:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f66c:	3f01      	subs	r7, #1
 800f66e:	e757      	b.n	800f520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f670:	4299      	cmp	r1, r3
 800f672:	dc13      	bgt.n	800f69c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f674:	429a      	cmp	r2, r3
 800f676:	da14      	bge.n	800f6a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f678:	2502      	movs	r5, #2
 800f67a:	2703      	movs	r7, #3
 800f67c:	46a9      	mov	r9, r5
 800f67e:	f04f 0800 	mov.w	r8, #0
 800f682:	f04f 0a01 	mov.w	sl, #1
 800f686:	e6ef      	b.n	800f468 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f688:	2501      	movs	r5, #1
 800f68a:	2700      	movs	r7, #0
 800f68c:	46a9      	mov	r9, r5
 800f68e:	46b8      	mov	r8, r7
 800f690:	f04f 0a02 	mov.w	sl, #2
 800f694:	e6e8      	b.n	800f468 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f696:	2501      	movs	r5, #1
 800f698:	2702      	movs	r7, #2
 800f69a:	e6e1      	b.n	800f460 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f69c:	2500      	movs	r5, #0
 800f69e:	2701      	movs	r7, #1
 800f6a0:	e7f4      	b.n	800f68c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f6a2:	2702      	movs	r7, #2
 800f6a4:	2503      	movs	r5, #3
 800f6a6:	f04f 0900 	mov.w	r9, #0
 800f6aa:	46b8      	mov	r8, r7
 800f6ac:	e7e9      	b.n	800f682 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f6ae:	4613      	mov	r3, r2
 800f6b0:	e728      	b.n	800f504 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f6b2:	bf00      	nop
 800f6b4:	20014fcc 	.word	0x20014fcc
 800f6b8:	fffd8f01 	.word	0xfffd8f01
 800f6bc:	00027100 	.word	0x00027100
 800f6c0:	0004e1ff 	.word	0x0004e1ff
 800f6c4:	0004e1fe 	.word	0x0004e1fe
 800f6c8:	20014fd4 	.word	0x20014fd4
 800f6cc:	4613      	mov	r3, r2
 800f6ce:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f6d0:	9111      	str	r1, [sp, #68]	; 0x44
 800f6d2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800f6d6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800f6da:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800f6dc:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800f6e0:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800f6e4:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800f6e8:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800f6ec:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800f6f0:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800f6f4:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800f6f8:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800f6fc:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800f700:	469e      	mov	lr, r3
 800f702:	469c      	mov	ip, r3
 800f704:	f04f 0900 	mov.w	r9, #0
 800f708:	f1bc 0f00 	cmp.w	ip, #0
 800f70c:	d147      	bne.n	800f79e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f70e:	eb03 0c07 	add.w	ip, r3, r7
 800f712:	1ad7      	subs	r7, r2, r3
 800f714:	f1b9 0f00 	cmp.w	r9, #0
 800f718:	d009      	beq.n	800f72e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f71a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800f71e:	9029      	str	r0, [sp, #164]	; 0xa4
 800f720:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800f724:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800f728:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800f72c:	912d      	str	r1, [sp, #180]	; 0xb4
 800f72e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800f730:	9111      	str	r1, [sp, #68]	; 0x44
 800f732:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800f736:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800f73a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800f73e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800f742:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800f746:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800f74a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800f74e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800f752:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800f756:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800f75a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800f75e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800f762:	f04f 0800 	mov.w	r8, #0
 800f766:	f1be 0f00 	cmp.w	lr, #0
 800f76a:	d031      	beq.n	800f7d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f76c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f76e:	4431      	add	r1, r6
 800f770:	4549      	cmp	r1, r9
 800f772:	4450      	add	r0, sl
 800f774:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f778:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f77c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f780:	db08      	blt.n	800f794 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f782:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f786:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f78a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f78e:	3001      	adds	r0, #1
 800f790:	eba1 0109 	sub.w	r1, r1, r9
 800f794:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f798:	f04f 0801 	mov.w	r8, #1
 800f79c:	e7e3      	b.n	800f766 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f79e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f7a0:	4431      	add	r1, r6
 800f7a2:	4541      	cmp	r1, r8
 800f7a4:	4450      	add	r0, sl
 800f7a6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f7aa:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f7ae:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f7b2:	db08      	blt.n	800f7c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f7b4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f7b8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f7bc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f7c0:	3001      	adds	r0, #1
 800f7c2:	eba1 0108 	sub.w	r1, r1, r8
 800f7c6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f7ca:	f04f 0901 	mov.w	r9, #1
 800f7ce:	e79b      	b.n	800f708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f7d0:	449c      	add	ip, r3
 800f7d2:	1aff      	subs	r7, r7, r3
 800f7d4:	f1b8 0f00 	cmp.w	r8, #0
 800f7d8:	d009      	beq.n	800f7ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f7da:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800f7de:	9019      	str	r0, [sp, #100]	; 0x64
 800f7e0:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800f7e4:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800f7e8:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800f7ec:	911d      	str	r1, [sp, #116]	; 0x74
 800f7ee:	1ad2      	subs	r2, r2, r3
 800f7f0:	e68b      	b.n	800f50a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f7f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f7f4:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800f7f6:	2b00      	cmp	r3, #0
 800f7f8:	f000 80d1 	beq.w	800f99e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f7fc:	ad19      	add	r5, sp, #100	; 0x64
 800f7fe:	ac39      	add	r4, sp, #228	; 0xe4
 800f800:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f802:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f806:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f80a:	930c      	str	r3, [sp, #48]	; 0x30
 800f80c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f80e:	6963      	ldr	r3, [r4, #20]
 800f810:	440b      	add	r3, r1
 800f812:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f816:	4408      	add	r0, r1
 800f818:	b200      	sxth	r0, r0
 800f81a:	4283      	cmp	r3, r0
 800f81c:	900d      	str	r0, [sp, #52]	; 0x34
 800f81e:	f280 80c1 	bge.w	800f9a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f822:	428b      	cmp	r3, r1
 800f824:	da08      	bge.n	800f838 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f826:	2a00      	cmp	r2, #0
 800f828:	dd06      	ble.n	800f838 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f82a:	1acb      	subs	r3, r1, r3
 800f82c:	429a      	cmp	r2, r3
 800f82e:	f2c0 80bb 	blt.w	800f9a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f832:	2b00      	cmp	r3, #0
 800f834:	f300 80b9 	bgt.w	800f9aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f838:	6967      	ldr	r7, [r4, #20]
 800f83a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f83c:	443b      	add	r3, r7
 800f83e:	461f      	mov	r7, r3
 800f840:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f842:	1bdf      	subs	r7, r3, r7
 800f844:	4297      	cmp	r7, r2
 800f846:	bfa8      	it	ge
 800f848:	4617      	movge	r7, r2
 800f84a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800f84e:	2f00      	cmp	r7, #0
 800f850:	f340 813c 	ble.w	800facc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f854:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800f856:	6829      	ldr	r1, [r5, #0]
 800f858:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f85c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f860:	6820      	ldr	r0, [r4, #0]
 800f862:	4411      	add	r1, r2
 800f864:	4299      	cmp	r1, r3
 800f866:	dd1a      	ble.n	800f89e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f868:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f86c:	440b      	add	r3, r1
 800f86e:	4402      	add	r2, r0
 800f870:	b21b      	sxth	r3, r3
 800f872:	429a      	cmp	r2, r3
 800f874:	dc13      	bgt.n	800f89e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f876:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f878:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f87a:	681b      	ldr	r3, [r3, #0]
 800f87c:	9206      	str	r2, [sp, #24]
 800f87e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f880:	9205      	str	r2, [sp, #20]
 800f882:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800f884:	9500      	str	r5, [sp, #0]
 800f886:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f88a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800f88c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f88e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f892:	a912      	add	r1, sp, #72	; 0x48
 800f894:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800f898:	aa49      	add	r2, sp, #292	; 0x124
 800f89a:	4623      	mov	r3, r4
 800f89c:	47c8      	blx	r9
 800f89e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f8a2:	441a      	add	r2, r3
 800f8a4:	6963      	ldr	r3, [r4, #20]
 800f8a6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800f8aa:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800f8ae:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800f8b2:	68a1      	ldr	r1, [r4, #8]
 800f8b4:	ed94 6a08 	vldr	s12, [r4, #32]
 800f8b8:	6022      	str	r2, [r4, #0]
 800f8ba:	3301      	adds	r3, #1
 800f8bc:	6163      	str	r3, [r4, #20]
 800f8be:	69a3      	ldr	r3, [r4, #24]
 800f8c0:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f8c4:	3b01      	subs	r3, #1
 800f8c6:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800f8ca:	61a3      	str	r3, [r4, #24]
 800f8cc:	6923      	ldr	r3, [r4, #16]
 800f8ce:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f8d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f8d6:	edd4 6a07 	vldr	s13, [r4, #28]
 800f8da:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f8de:	440b      	add	r3, r1
 800f8e0:	68e1      	ldr	r1, [r4, #12]
 800f8e2:	6123      	str	r3, [r4, #16]
 800f8e4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f8e8:	428b      	cmp	r3, r1
 800f8ea:	edc4 6a07 	vstr	s13, [r4, #28]
 800f8ee:	db15      	blt.n	800f91c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f8f0:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800f8f4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f8f8:	3201      	adds	r2, #1
 800f8fa:	edc4 6a07 	vstr	s13, [r4, #28]
 800f8fe:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800f902:	6022      	str	r2, [r4, #0]
 800f904:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f908:	1a5b      	subs	r3, r3, r1
 800f90a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800f90e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800f912:	6123      	str	r3, [r4, #16]
 800f914:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f918:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800f91c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f920:	441a      	add	r2, r3
 800f922:	696b      	ldr	r3, [r5, #20]
 800f924:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800f928:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800f92c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800f930:	68a9      	ldr	r1, [r5, #8]
 800f932:	ed95 6a08 	vldr	s12, [r5, #32]
 800f936:	602a      	str	r2, [r5, #0]
 800f938:	3301      	adds	r3, #1
 800f93a:	616b      	str	r3, [r5, #20]
 800f93c:	69ab      	ldr	r3, [r5, #24]
 800f93e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f942:	3b01      	subs	r3, #1
 800f944:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800f948:	61ab      	str	r3, [r5, #24]
 800f94a:	692b      	ldr	r3, [r5, #16]
 800f94c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f950:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f954:	edd5 6a07 	vldr	s13, [r5, #28]
 800f958:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f95c:	440b      	add	r3, r1
 800f95e:	68e9      	ldr	r1, [r5, #12]
 800f960:	612b      	str	r3, [r5, #16]
 800f962:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f966:	428b      	cmp	r3, r1
 800f968:	edc5 6a07 	vstr	s13, [r5, #28]
 800f96c:	db15      	blt.n	800f99a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f96e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800f972:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f976:	3201      	adds	r2, #1
 800f978:	edc5 6a07 	vstr	s13, [r5, #28]
 800f97c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800f980:	602a      	str	r2, [r5, #0]
 800f982:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f986:	1a5b      	subs	r3, r3, r1
 800f988:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800f98c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800f990:	612b      	str	r3, [r5, #16]
 800f992:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f996:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800f99a:	3f01      	subs	r7, #1
 800f99c:	e757      	b.n	800f84e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f99e:	ad39      	add	r5, sp, #228	; 0xe4
 800f9a0:	ac19      	add	r4, sp, #100	; 0x64
 800f9a2:	e72d      	b.n	800f800 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f9a4:	4613      	mov	r3, r2
 800f9a6:	e744      	b.n	800f832 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f9a8:	4613      	mov	r3, r2
 800f9aa:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800f9ae:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800f9b0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800f9b4:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800f9b8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800f9bc:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800f9c0:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800f9c4:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800f9c8:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800f9cc:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800f9ce:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800f9d2:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800f9d6:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800f9da:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800f9de:	960e      	str	r6, [sp, #56]	; 0x38
 800f9e0:	469e      	mov	lr, r3
 800f9e2:	461f      	mov	r7, r3
 800f9e4:	f04f 0900 	mov.w	r9, #0
 800f9e8:	2f00      	cmp	r7, #0
 800f9ea:	d146      	bne.n	800fa7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f9ec:	449c      	add	ip, r3
 800f9ee:	1ad7      	subs	r7, r2, r3
 800f9f0:	f1b9 0f00 	cmp.w	r9, #0
 800f9f4:	d009      	beq.n	800fa0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f9f6:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800f9fa:	9039      	str	r0, [sp, #228]	; 0xe4
 800f9fc:	913d      	str	r1, [sp, #244]	; 0xf4
 800f9fe:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800fa02:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800fa06:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800fa0a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fa0c:	910e      	str	r1, [sp, #56]	; 0x38
 800fa0e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fa12:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fa16:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fa1a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fa1e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fa22:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fa26:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fa2a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fa2e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fa32:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fa36:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fa3a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fa3e:	f04f 0800 	mov.w	r8, #0
 800fa42:	f1be 0f00 	cmp.w	lr, #0
 800fa46:	d030      	beq.n	800faaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800fa48:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800fa4a:	4431      	add	r1, r6
 800fa4c:	4549      	cmp	r1, r9
 800fa4e:	4450      	add	r0, sl
 800fa50:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fa54:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fa58:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fa5c:	db08      	blt.n	800fa70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800fa5e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fa62:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fa66:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fa6a:	3001      	adds	r0, #1
 800fa6c:	eba1 0109 	sub.w	r1, r1, r9
 800fa70:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fa74:	f04f 0801 	mov.w	r8, #1
 800fa78:	e7e3      	b.n	800fa42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800fa7a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800fa7c:	4431      	add	r1, r6
 800fa7e:	4541      	cmp	r1, r8
 800fa80:	4450      	add	r0, sl
 800fa82:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fa86:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fa8a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fa8e:	db08      	blt.n	800faa2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800fa90:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fa94:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fa98:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fa9c:	3001      	adds	r0, #1
 800fa9e:	eba1 0108 	sub.w	r1, r1, r8
 800faa2:	3f01      	subs	r7, #1
 800faa4:	f04f 0901 	mov.w	r9, #1
 800faa8:	e79e      	b.n	800f9e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800faaa:	449c      	add	ip, r3
 800faac:	1aff      	subs	r7, r7, r3
 800faae:	f1b8 0f00 	cmp.w	r8, #0
 800fab2:	d009      	beq.n	800fac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800fab4:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fab8:	9019      	str	r0, [sp, #100]	; 0x64
 800faba:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fabe:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fac2:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fac6:	911d      	str	r1, [sp, #116]	; 0x74
 800fac8:	1ad2      	subs	r2, r2, r3
 800faca:	e6b5      	b.n	800f838 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800facc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800face:	681b      	ldr	r3, [r3, #0]
 800fad0:	b923      	cbnz	r3, 800fadc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fad2:	4b04      	ldr	r3, [pc, #16]	; (800fae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800fad4:	6818      	ldr	r0, [r3, #0]
 800fad6:	6803      	ldr	r3, [r0, #0]
 800fad8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fada:	4798      	blx	r3
 800fadc:	b05b      	add	sp, #364	; 0x16c
 800fade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fae2:	bf00      	nop
 800fae4:	20014fd4 	.word	0x20014fd4

0800fae8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800fae8:	b570      	push	{r4, r5, r6, lr}
 800faea:	4604      	mov	r4, r0
 800faec:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800faf0:	9805      	ldr	r0, [sp, #20]
 800faf2:	6061      	str	r1, [r4, #4]
 800faf4:	2500      	movs	r5, #0
 800faf6:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800fafa:	8263      	strh	r3, [r4, #18]
 800fafc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fb00:	8025      	strh	r5, [r4, #0]
 800fb02:	7221      	strb	r1, [r4, #8]
 800fb04:	7266      	strb	r6, [r4, #9]
 800fb06:	60e0      	str	r0, [r4, #12]
 800fb08:	8222      	strh	r2, [r4, #16]
 800fb0a:	82a3      	strh	r3, [r4, #20]
 800fb0c:	82e5      	strh	r5, [r4, #22]
 800fb0e:	8325      	strh	r5, [r4, #24]
 800fb10:	8365      	strh	r5, [r4, #26]
 800fb12:	83a5      	strh	r5, [r4, #28]
 800fb14:	83e5      	strh	r5, [r4, #30]
 800fb16:	8425      	strh	r5, [r4, #32]
 800fb18:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800fb1c:	b32e      	cbz	r6, 800fb6a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800fb1e:	6803      	ldr	r3, [r0, #0]
 800fb20:	695b      	ldr	r3, [r3, #20]
 800fb22:	4798      	blx	r3
 800fb24:	4606      	mov	r6, r0
 800fb26:	b300      	cbz	r0, 800fb6a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800fb28:	68e0      	ldr	r0, [r4, #12]
 800fb2a:	6803      	ldr	r3, [r0, #0]
 800fb2c:	4631      	mov	r1, r6
 800fb2e:	68db      	ldr	r3, [r3, #12]
 800fb30:	4798      	blx	r3
 800fb32:	4605      	mov	r5, r0
 800fb34:	b1c8      	cbz	r0, 800fb6a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800fb36:	7b43      	ldrb	r3, [r0, #13]
 800fb38:	7a82      	ldrb	r2, [r0, #10]
 800fb3a:	005b      	lsls	r3, r3, #1
 800fb3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fb40:	4313      	orrs	r3, r2
 800fb42:	8423      	strh	r3, [r4, #32]
 800fb44:	7a63      	ldrb	r3, [r4, #9]
 800fb46:	2b06      	cmp	r3, #6
 800fb48:	d10f      	bne.n	800fb6a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800fb4a:	68e0      	ldr	r0, [r4, #12]
 800fb4c:	6803      	ldr	r3, [r0, #0]
 800fb4e:	462a      	mov	r2, r5
 800fb50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fb52:	4631      	mov	r1, r6
 800fb54:	4798      	blx	r3
 800fb56:	7b6b      	ldrb	r3, [r5, #13]
 800fb58:	005b      	lsls	r3, r3, #1
 800fb5a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fb5e:	7aab      	ldrb	r3, [r5, #10]
 800fb60:	4313      	orrs	r3, r2
 800fb62:	4418      	add	r0, r3
 800fb64:	8c23      	ldrh	r3, [r4, #32]
 800fb66:	4418      	add	r0, r3
 800fb68:	8420      	strh	r0, [r4, #32]
 800fb6a:	4620      	mov	r0, r4
 800fb6c:	bd70      	pop	{r4, r5, r6, pc}

0800fb6e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800fb6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb72:	2400      	movs	r4, #0
 800fb74:	b085      	sub	sp, #20
 800fb76:	4681      	mov	r9, r0
 800fb78:	4688      	mov	r8, r1
 800fb7a:	4692      	mov	sl, r2
 800fb7c:	469b      	mov	fp, r3
 800fb7e:	4627      	mov	r7, r4
 800fb80:	4625      	mov	r5, r4
 800fb82:	4626      	mov	r6, r4
 800fb84:	4554      	cmp	r4, sl
 800fb86:	da2a      	bge.n	800fbde <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800fb88:	2300      	movs	r3, #0
 800fb8a:	9303      	str	r3, [sp, #12]
 800fb8c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fb90:	429d      	cmp	r5, r3
 800fb92:	d004      	beq.n	800fb9e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800fb94:	f242 030b 	movw	r3, #8203	; 0x200b
 800fb98:	429d      	cmp	r5, r3
 800fb9a:	bf18      	it	ne
 800fb9c:	462f      	movne	r7, r5
 800fb9e:	ab03      	add	r3, sp, #12
 800fba0:	4642      	mov	r2, r8
 800fba2:	4659      	mov	r1, fp
 800fba4:	4648      	mov	r0, r9
 800fba6:	f003 f8fb 	bl	8012da0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fbaa:	4605      	mov	r5, r0
 800fbac:	b1b8      	cbz	r0, 800fbde <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800fbae:	280a      	cmp	r0, #10
 800fbb0:	d015      	beq.n	800fbde <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800fbb2:	9a03      	ldr	r2, [sp, #12]
 800fbb4:	b18a      	cbz	r2, 800fbda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800fbb6:	7b50      	ldrb	r0, [r2, #13]
 800fbb8:	7a93      	ldrb	r3, [r2, #10]
 800fbba:	8895      	ldrh	r5, [r2, #4]
 800fbbc:	0040      	lsls	r0, r0, #1
 800fbbe:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800fbc2:	4303      	orrs	r3, r0
 800fbc4:	9301      	str	r3, [sp, #4]
 800fbc6:	f8d8 3000 	ldr.w	r3, [r8]
 800fbca:	4639      	mov	r1, r7
 800fbcc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fbce:	4640      	mov	r0, r8
 800fbd0:	4798      	blx	r3
 800fbd2:	9b01      	ldr	r3, [sp, #4]
 800fbd4:	4418      	add	r0, r3
 800fbd6:	4406      	add	r6, r0
 800fbd8:	b2b6      	uxth	r6, r6
 800fbda:	3401      	adds	r4, #1
 800fbdc:	e7d2      	b.n	800fb84 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800fbde:	4630      	mov	r0, r6
 800fbe0:	b005      	add	sp, #20
 800fbe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fbe6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800fbe6:	2a02      	cmp	r2, #2
 800fbe8:	b530      	push	{r4, r5, lr}
 800fbea:	d011      	beq.n	800fc10 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800fbec:	2a03      	cmp	r2, #3
 800fbee:	d01c      	beq.n	800fc2a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800fbf0:	2a01      	cmp	r2, #1
 800fbf2:	d10c      	bne.n	800fc0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800fbf4:	888b      	ldrh	r3, [r1, #4]
 800fbf6:	8801      	ldrh	r1, [r0, #0]
 800fbf8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800fbfc:	8844      	ldrh	r4, [r0, #2]
 800fbfe:	8004      	strh	r4, [r0, #0]
 800fc00:	1a5b      	subs	r3, r3, r1
 800fc02:	1a9b      	subs	r3, r3, r2
 800fc04:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800fc08:	8043      	strh	r3, [r0, #2]
 800fc0a:	8081      	strh	r1, [r0, #4]
 800fc0c:	80c2      	strh	r2, [r0, #6]
 800fc0e:	bd30      	pop	{r4, r5, pc}
 800fc10:	88cb      	ldrh	r3, [r1, #6]
 800fc12:	8842      	ldrh	r2, [r0, #2]
 800fc14:	1a9b      	subs	r3, r3, r2
 800fc16:	88c2      	ldrh	r2, [r0, #6]
 800fc18:	1a9b      	subs	r3, r3, r2
 800fc1a:	888a      	ldrh	r2, [r1, #4]
 800fc1c:	8801      	ldrh	r1, [r0, #0]
 800fc1e:	8043      	strh	r3, [r0, #2]
 800fc20:	1a52      	subs	r2, r2, r1
 800fc22:	8881      	ldrh	r1, [r0, #4]
 800fc24:	1a52      	subs	r2, r2, r1
 800fc26:	8002      	strh	r2, [r0, #0]
 800fc28:	e7f1      	b.n	800fc0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800fc2a:	88cb      	ldrh	r3, [r1, #6]
 800fc2c:	8841      	ldrh	r1, [r0, #2]
 800fc2e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800fc32:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fc36:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800fc3a:	8045      	strh	r5, [r0, #2]
 800fc3c:	1a5b      	subs	r3, r3, r1
 800fc3e:	1a9b      	subs	r3, r3, r2
 800fc40:	8003      	strh	r3, [r0, #0]
 800fc42:	8082      	strh	r2, [r0, #4]
 800fc44:	80c4      	strh	r4, [r0, #6]
 800fc46:	e7e2      	b.n	800fc0e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800fc48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800fc48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc4c:	b09f      	sub	sp, #124	; 0x7c
 800fc4e:	9116      	str	r1, [sp, #88]	; 0x58
 800fc50:	9317      	str	r3, [sp, #92]	; 0x5c
 800fc52:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800fc54:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fc56:	8809      	ldrh	r1, [r1, #0]
 800fc58:	889b      	ldrh	r3, [r3, #4]
 800fc5a:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800fc5e:	9212      	str	r2, [sp, #72]	; 0x48
 800fc60:	440b      	add	r3, r1
 800fc62:	b21b      	sxth	r3, r3
 800fc64:	9310      	str	r3, [sp, #64]	; 0x40
 800fc66:	f8d8 3000 	ldr.w	r3, [r8]
 800fc6a:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800fc6e:	7b19      	ldrb	r1, [r3, #12]
 800fc70:	7adb      	ldrb	r3, [r3, #11]
 800fc72:	9011      	str	r0, [sp, #68]	; 0x44
 800fc74:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800fc78:	9114      	str	r1, [sp, #80]	; 0x50
 800fc7a:	9315      	str	r3, [sp, #84]	; 0x54
 800fc7c:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800fc80:	2a00      	cmp	r2, #0
 800fc82:	d06a      	beq.n	800fd5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800fc84:	f898 3010 	ldrb.w	r3, [r8, #16]
 800fc88:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800fc8a:	2b06      	cmp	r3, #6
 800fc8c:	bf14      	ite	ne
 800fc8e:	2301      	movne	r3, #1
 800fc90:	2302      	moveq	r3, #2
 800fc92:	4413      	add	r3, r2
 800fc94:	f04f 0900 	mov.w	r9, #0
 800fc98:	930f      	str	r3, [sp, #60]	; 0x3c
 800fc9a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800fc9e:	464c      	mov	r4, r9
 800fca0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800fca4:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800fca8:	4293      	cmp	r3, r2
 800fcaa:	f280 808f 	bge.w	800fdcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800fcae:	2300      	movs	r3, #0
 800fcb0:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800fcb4:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800fcb8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fcbc:	429c      	cmp	r4, r3
 800fcbe:	d006      	beq.n	800fcce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800fcc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fcc2:	f242 020b 	movw	r2, #8203	; 0x200b
 800fcc6:	4294      	cmp	r4, r2
 800fcc8:	bf18      	it	ne
 800fcca:	4623      	movne	r3, r4
 800fccc:	930d      	str	r3, [sp, #52]	; 0x34
 800fcce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fcd0:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800fcd2:	f8d8 2000 	ldr.w	r2, [r8]
 800fcd6:	428b      	cmp	r3, r1
 800fcd8:	db41      	blt.n	800fd5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800fcda:	6813      	ldr	r3, [r2, #0]
 800fcdc:	4610      	mov	r0, r2
 800fcde:	695b      	ldr	r3, [r3, #20]
 800fce0:	4798      	blx	r3
 800fce2:	4604      	mov	r4, r0
 800fce4:	f8d8 0000 	ldr.w	r0, [r8]
 800fce8:	6803      	ldr	r3, [r0, #0]
 800fcea:	aa1d      	add	r2, sp, #116	; 0x74
 800fcec:	689d      	ldr	r5, [r3, #8]
 800fcee:	4621      	mov	r1, r4
 800fcf0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800fcf4:	47a8      	blx	r5
 800fcf6:	901c      	str	r0, [sp, #112]	; 0x70
 800fcf8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fcfc:	429c      	cmp	r4, r3
 800fcfe:	f000 80eb 	beq.w	800fed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fd02:	f242 030b 	movw	r3, #8203	; 0x200b
 800fd06:	429c      	cmp	r4, r3
 800fd08:	f000 80e6 	beq.w	800fed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fd0c:	2c00      	cmp	r4, #0
 800fd0e:	f000 80f8 	beq.w	800ff02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800fd12:	2c0a      	cmp	r4, #10
 800fd14:	d060      	beq.n	800fdd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800fd16:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800fd18:	b36a      	cbz	r2, 800fd76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800fd1a:	8894      	ldrh	r4, [r2, #4]
 800fd1c:	f1bb 0f00 	cmp.w	fp, #0
 800fd20:	d03b      	beq.n	800fd9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800fd22:	f892 900d 	ldrb.w	r9, [r2, #13]
 800fd26:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800fd2a:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800fd2e:	f892 900a 	ldrb.w	r9, [r2, #10]
 800fd32:	f1bb 0f01 	cmp.w	fp, #1
 800fd36:	ea49 0903 	orr.w	r9, r9, r3
 800fd3a:	d134      	bne.n	800fda6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800fd3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fd3e:	eba6 0609 	sub.w	r6, r6, r9
 800fd42:	2b00      	cmp	r3, #0
 800fd44:	d14f      	bne.n	800fde6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800fd46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fd48:	eb09 0306 	add.w	r3, r9, r6
 800fd4c:	4413      	add	r3, r2
 800fd4e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800fd50:	f9b2 2000 	ldrsh.w	r2, [r2]
 800fd54:	4293      	cmp	r3, r2
 800fd56:	da51      	bge.n	800fdfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800fd58:	e038      	b.n	800fdcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800fd5a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800fd5c:	e79a      	b.n	800fc94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800fd5e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800fd62:	9301      	str	r3, [sp, #4]
 800fd64:	ab1d      	add	r3, sp, #116	; 0x74
 800fd66:	9300      	str	r3, [sp, #0]
 800fd68:	4659      	mov	r1, fp
 800fd6a:	ab1c      	add	r3, sp, #112	; 0x70
 800fd6c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800fd6e:	f003 f860 	bl	8012e32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800fd72:	4604      	mov	r4, r0
 800fd74:	e7c0      	b.n	800fcf8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800fd76:	f8d8 0000 	ldr.w	r0, [r8]
 800fd7a:	6803      	ldr	r3, [r0, #0]
 800fd7c:	691b      	ldr	r3, [r3, #16]
 800fd7e:	4798      	blx	r3
 800fd80:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800fd84:	4298      	cmp	r0, r3
 800fd86:	f000 80a7 	beq.w	800fed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fd8a:	f242 030b 	movw	r3, #8203	; 0x200b
 800fd8e:	4298      	cmp	r0, r3
 800fd90:	f000 80a2 	beq.w	800fed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fd94:	f1bb 0f00 	cmp.w	fp, #0
 800fd98:	d100      	bne.n	800fd9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800fd9a:	444e      	add	r6, r9
 800fd9c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800fd9e:	2a00      	cmp	r2, #0
 800fda0:	d1bf      	bne.n	800fd22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800fda2:	4691      	mov	r9, r2
 800fda4:	e098      	b.n	800fed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fda6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fda8:	2b00      	cmp	r3, #0
 800fdaa:	f000 80ac 	beq.w	800ff06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 800fdae:	f1bb 0f00 	cmp.w	fp, #0
 800fdb2:	d118      	bne.n	800fde6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800fdb4:	f8d8 0000 	ldr.w	r0, [r8]
 800fdb8:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fdba:	6803      	ldr	r3, [r0, #0]
 800fdbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fdbe:	4798      	blx	r3
 800fdc0:	4406      	add	r6, r0
 800fdc2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fdc4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fdc6:	1af3      	subs	r3, r6, r3
 800fdc8:	4293      	cmp	r3, r2
 800fdca:	dd17      	ble.n	800fdfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800fdcc:	2c00      	cmp	r4, #0
 800fdce:	f000 8098 	beq.w	800ff02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800fdd2:	2c0a      	cmp	r4, #10
 800fdd4:	f040 8086 	bne.w	800fee4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800fdd8:	240a      	movs	r4, #10
 800fdda:	fab4 f084 	clz	r0, r4
 800fdde:	0940      	lsrs	r0, r0, #5
 800fde0:	b01f      	add	sp, #124	; 0x7c
 800fde2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fde6:	f8d8 0000 	ldr.w	r0, [r8]
 800fdea:	990d      	ldr	r1, [sp, #52]	; 0x34
 800fdec:	6803      	ldr	r3, [r0, #0]
 800fdee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800fdf0:	4798      	blx	r3
 800fdf2:	f1bb 0f01 	cmp.w	fp, #1
 800fdf6:	eba6 0600 	sub.w	r6, r6, r0
 800fdfa:	d0a4      	beq.n	800fd46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800fdfc:	981c      	ldr	r0, [sp, #112]	; 0x70
 800fdfe:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800fe00:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800fe04:	f9b3 7000 	ldrsh.w	r7, [r3]
 800fe08:	7b43      	ldrb	r3, [r0, #13]
 800fe0a:	015b      	lsls	r3, r3, #5
 800fe0c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fe10:	7983      	ldrb	r3, [r0, #6]
 800fe12:	4431      	add	r1, r6
 800fe14:	4313      	orrs	r3, r2
 800fe16:	440b      	add	r3, r1
 800fe18:	42bb      	cmp	r3, r7
 800fe1a:	db5d      	blt.n	800fed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fe1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe1e:	4299      	cmp	r1, r3
 800fe20:	da5a      	bge.n	800fed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fe22:	f8d8 0000 	ldr.w	r0, [r8]
 800fe26:	6803      	ldr	r3, [r0, #0]
 800fe28:	42b7      	cmp	r7, r6
 800fe2a:	bfc8      	it	gt
 800fe2c:	1bbf      	subgt	r7, r7, r6
 800fe2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fe30:	bfcc      	ite	gt
 800fe32:	b2bf      	uxthgt	r7, r7
 800fe34:	2700      	movle	r7, #0
 800fe36:	4798      	blx	r3
 800fe38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800fe3a:	7b5a      	ldrb	r2, [r3, #13]
 800fe3c:	00d1      	lsls	r1, r2, #3
 800fe3e:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800fe42:	7a19      	ldrb	r1, [r3, #8]
 800fe44:	4329      	orrs	r1, r5
 800fe46:	0655      	lsls	r5, r2, #25
 800fe48:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800fe4a:	bf44      	itt	mi
 800fe4c:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800fe50:	b209      	sxthmi	r1, r1
 800fe52:	1945      	adds	r5, r0, r5
 800fe54:	1a6d      	subs	r5, r5, r1
 800fe56:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800fe58:	b2ad      	uxth	r5, r5
 800fe5a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800fe5e:	fa0f fa85 	sxth.w	sl, r5
 800fe62:	4551      	cmp	r1, sl
 800fe64:	dd3c      	ble.n	800fee0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800fe66:	0112      	lsls	r2, r2, #4
 800fe68:	79d8      	ldrb	r0, [r3, #7]
 800fe6a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800fe6e:	4302      	orrs	r2, r0
 800fe70:	4492      	add	sl, r2
 800fe72:	4551      	cmp	r1, sl
 800fe74:	dc30      	bgt.n	800fed8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800fe76:	1b4d      	subs	r5, r1, r5
 800fe78:	b22d      	sxth	r5, r5
 800fe7a:	468a      	mov	sl, r1
 800fe7c:	9319      	str	r3, [sp, #100]	; 0x64
 800fe7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fe80:	f8d8 0000 	ldr.w	r0, [r8]
 800fe84:	681a      	ldr	r2, [r3, #0]
 800fe86:	6801      	ldr	r1, [r0, #0]
 800fe88:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800fe8a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800fe8c:	9313      	str	r3, [sp, #76]	; 0x4c
 800fe8e:	9218      	str	r2, [sp, #96]	; 0x60
 800fe90:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800fe92:	4788      	blx	r1
 800fe94:	f898 1006 	ldrb.w	r1, [r8, #6]
 800fe98:	910b      	str	r1, [sp, #44]	; 0x2c
 800fe9a:	f898 100e 	ldrb.w	r1, [r8, #14]
 800fe9e:	910a      	str	r1, [sp, #40]	; 0x28
 800fea0:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800fea4:	9109      	str	r1, [sp, #36]	; 0x24
 800fea6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800feaa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800feac:	9305      	str	r3, [sp, #20]
 800feae:	b2ad      	uxth	r5, r5
 800feb0:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800feb4:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800feb8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800feba:	9304      	str	r3, [sp, #16]
 800febc:	4437      	add	r7, r6
 800febe:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800fec0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800fec2:	9206      	str	r2, [sp, #24]
 800fec4:	b23f      	sxth	r7, r7
 800fec6:	f8cd a004 	str.w	sl, [sp, #4]
 800feca:	9700      	str	r7, [sp, #0]
 800fecc:	681a      	ldr	r2, [r3, #0]
 800fece:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fed0:	685b      	ldr	r3, [r3, #4]
 800fed2:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fed4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fed6:	47a8      	blx	r5
 800fed8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800feda:	3301      	adds	r3, #1
 800fedc:	930e      	str	r3, [sp, #56]	; 0x38
 800fede:	e6e1      	b.n	800fca4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800fee0:	2500      	movs	r5, #0
 800fee2:	e7cb      	b.n	800fe7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800fee4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800fee6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800fee8:	3501      	adds	r5, #1
 800feea:	429d      	cmp	r5, r3
 800feec:	f6bf af75 	bge.w	800fdda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800fef0:	4659      	mov	r1, fp
 800fef2:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800fef4:	f7f5 fb36 	bl	8005564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fef8:	4604      	mov	r4, r0
 800fefa:	b110      	cbz	r0, 800ff02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800fefc:	280a      	cmp	r0, #10
 800fefe:	d1f2      	bne.n	800fee6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800ff00:	e76a      	b.n	800fdd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800ff02:	2400      	movs	r4, #0
 800ff04:	e769      	b.n	800fdda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800ff06:	f1bb 0f00 	cmp.w	fp, #0
 800ff0a:	f43f af5a 	beq.w	800fdc2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800ff0e:	e775      	b.n	800fdfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800ff10 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800ff10:	b530      	push	{r4, r5, lr}
 800ff12:	8ac4      	ldrh	r4, [r0, #22]
 800ff14:	8b45      	ldrh	r5, [r0, #26]
 800ff16:	8343      	strh	r3, [r0, #26]
 800ff18:	442c      	add	r4, r5
 800ff1a:	1ae4      	subs	r4, r4, r3
 800ff1c:	82c4      	strh	r4, [r0, #22]
 800ff1e:	8b83      	ldrh	r3, [r0, #28]
 800ff20:	8b04      	ldrh	r4, [r0, #24]
 800ff22:	4422      	add	r2, r4
 800ff24:	440c      	add	r4, r1
 800ff26:	1a59      	subs	r1, r3, r1
 800ff28:	83c2      	strh	r2, [r0, #30]
 800ff2a:	8304      	strh	r4, [r0, #24]
 800ff2c:	8381      	strh	r1, [r0, #28]
 800ff2e:	bd30      	pop	{r4, r5, pc}

0800ff30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800ff30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff34:	4604      	mov	r4, r0
 800ff36:	8a47      	ldrh	r7, [r0, #18]
 800ff38:	68c0      	ldr	r0, [r0, #12]
 800ff3a:	6803      	ldr	r3, [r0, #0]
 800ff3c:	b085      	sub	sp, #20
 800ff3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ff40:	4798      	blx	r3
 800ff42:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800ff46:	7a63      	ldrb	r3, [r4, #9]
 800ff48:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800ff4c:	42b7      	cmp	r7, r6
 800ff4e:	f103 33ff 	add.w	r3, r3, #4294967295
 800ff52:	bfac      	ite	ge
 800ff54:	f04f 0900 	movge.w	r9, #0
 800ff58:	f04f 0901 	movlt.w	r9, #1
 800ff5c:	2b05      	cmp	r3, #5
 800ff5e:	d804      	bhi.n	800ff6a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800ff60:	e8df f003 	tbb	[pc, r3]
 800ff64:	470e0854 	.word	0x470e0854
 800ff68:	4c4c      	.short	0x4c4c
 800ff6a:	2500      	movs	r5, #0
 800ff6c:	46a9      	mov	r9, r5
 800ff6e:	462e      	mov	r6, r5
 800ff70:	462f      	mov	r7, r5
 800ff72:	e00d      	b.n	800ff90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800ff74:	42b7      	cmp	r7, r6
 800ff76:	bfb4      	ite	lt
 800ff78:	2600      	movlt	r6, #0
 800ff7a:	2601      	movge	r6, #1
 800ff7c:	2500      	movs	r5, #0
 800ff7e:	e7f7      	b.n	800ff70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800ff80:	42b7      	cmp	r7, r6
 800ff82:	464d      	mov	r5, r9
 800ff84:	f04f 0900 	mov.w	r9, #0
 800ff88:	bfb4      	ite	lt
 800ff8a:	2600      	movlt	r6, #0
 800ff8c:	2601      	movge	r6, #1
 800ff8e:	464f      	mov	r7, r9
 800ff90:	f04f 0800 	mov.w	r8, #0
 800ff94:	f8a4 8016 	strh.w	r8, [r4, #22]
 800ff98:	f8a4 8018 	strh.w	r8, [r4, #24]
 800ff9c:	f8cd 8004 	str.w	r8, [sp, #4]
 800ffa0:	2300      	movs	r3, #0
 800ffa2:	9303      	str	r3, [sp, #12]
 800ffa4:	8823      	ldrh	r3, [r4, #0]
 800ffa6:	2b20      	cmp	r3, #32
 800ffa8:	d034      	beq.n	8010014 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800ffaa:	f242 010b 	movw	r1, #8203	; 0x200b
 800ffae:	1a5a      	subs	r2, r3, r1
 800ffb0:	f1d2 0a00 	rsbs	sl, r2, #0
 800ffb4:	eb4a 0a02 	adc.w	sl, sl, r2
 800ffb8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800ffbc:	4293      	cmp	r3, r2
 800ffbe:	d009      	beq.n	800ffd4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800ffc0:	428b      	cmp	r3, r1
 800ffc2:	9a01      	ldr	r2, [sp, #4]
 800ffc4:	bf18      	it	ne
 800ffc6:	461a      	movne	r2, r3
 800ffc8:	9201      	str	r2, [sp, #4]
 800ffca:	bf0c      	ite	eq
 800ffcc:	f04f 0a01 	moveq.w	sl, #1
 800ffd0:	f04f 0a00 	movne.w	sl, #0
 800ffd4:	ab03      	add	r3, sp, #12
 800ffd6:	68e2      	ldr	r2, [r4, #12]
 800ffd8:	7a21      	ldrb	r1, [r4, #8]
 800ffda:	6860      	ldr	r0, [r4, #4]
 800ffdc:	f002 fee0 	bl	8012da0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ffe0:	8020      	strh	r0, [r4, #0]
 800ffe2:	b9d8      	cbnz	r0, 801001c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800ffe4:	8ba2      	ldrh	r2, [r4, #28]
 800ffe6:	2300      	movs	r3, #0
 800ffe8:	4611      	mov	r1, r2
 800ffea:	4620      	mov	r0, r4
 800ffec:	f7ff ff90 	bl	800ff10 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fff0:	e06e      	b.n	80100d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800fff2:	2500      	movs	r5, #0
 800fff4:	46a9      	mov	r9, r5
 800fff6:	462e      	mov	r6, r5
 800fff8:	2701      	movs	r7, #1
 800fffa:	e7c9      	b.n	800ff90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fffc:	42b7      	cmp	r7, r6
 800fffe:	f04f 0500 	mov.w	r5, #0
 8010002:	bfb4      	ite	lt
 8010004:	2700      	movlt	r7, #0
 8010006:	2701      	movge	r7, #1
 8010008:	462e      	mov	r6, r5
 801000a:	e7c1      	b.n	800ff90 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801000c:	2500      	movs	r5, #0
 801000e:	46a9      	mov	r9, r5
 8010010:	2601      	movs	r6, #1
 8010012:	e7ad      	b.n	800ff70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8010014:	9301      	str	r3, [sp, #4]
 8010016:	f04f 0a01 	mov.w	sl, #1
 801001a:	e7db      	b.n	800ffd4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801001c:	8b63      	ldrh	r3, [r4, #26]
 801001e:	280a      	cmp	r0, #10
 8010020:	f103 0301 	add.w	r3, r3, #1
 8010024:	8363      	strh	r3, [r4, #26]
 8010026:	d0dd      	beq.n	800ffe4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8010028:	9a03      	ldr	r2, [sp, #12]
 801002a:	bb62      	cbnz	r2, 8010086 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 801002c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010030:	4298      	cmp	r0, r3
 8010032:	d003      	beq.n	801003c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8010034:	f242 030b 	movw	r3, #8203	; 0x200b
 8010038:	4298      	cmp	r0, r3
 801003a:	d1b1      	bne.n	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801003c:	8823      	ldrh	r3, [r4, #0]
 801003e:	8ba1      	ldrh	r1, [r4, #28]
 8010040:	2b20      	cmp	r3, #32
 8010042:	d003      	beq.n	801004c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8010044:	f242 000b 	movw	r0, #8203	; 0x200b
 8010048:	4283      	cmp	r3, r0
 801004a:	d131      	bne.n	80100b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 801004c:	f1ba 0f00 	cmp.w	sl, #0
 8010050:	bf0a      	itet	eq
 8010052:	4688      	moveq	r8, r1
 8010054:	4650      	movne	r0, sl
 8010056:	2001      	moveq	r0, #1
 8010058:	440a      	add	r2, r1
 801005a:	8b23      	ldrh	r3, [r4, #24]
 801005c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010060:	b292      	uxth	r2, r2
 8010062:	83a2      	strh	r2, [r4, #28]
 8010064:	4413      	add	r3, r2
 8010066:	f1b9 0f00 	cmp.w	r9, #0
 801006a:	d102      	bne.n	8010072 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 801006c:	2d00      	cmp	r5, #0
 801006e:	d042      	beq.n	80100f6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8010070:	b300      	cbz	r0, 80100b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8010072:	8c21      	ldrh	r1, [r4, #32]
 8010074:	4419      	add	r1, r3
 8010076:	458c      	cmp	ip, r1
 8010078:	da37      	bge.n	80100ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801007a:	8ae1      	ldrh	r1, [r4, #22]
 801007c:	2900      	cmp	r1, #0
 801007e:	d034      	beq.n	80100ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8010080:	4563      	cmp	r3, ip
 8010082:	dd8d      	ble.n	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010084:	e01d      	b.n	80100c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8010086:	8893      	ldrh	r3, [r2, #4]
 8010088:	8023      	strh	r3, [r4, #0]
 801008a:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801008e:	9901      	ldr	r1, [sp, #4]
 8010090:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8010094:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8010098:	f892 b00a 	ldrb.w	fp, [r2, #10]
 801009c:	ea4b 0b00 	orr.w	fp, fp, r0
 80100a0:	68e0      	ldr	r0, [r4, #12]
 80100a2:	6803      	ldr	r3, [r0, #0]
 80100a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80100a6:	4798      	blx	r3
 80100a8:	eb0b 0200 	add.w	r2, fp, r0
 80100ac:	b292      	uxth	r2, r2
 80100ae:	e7c5      	b.n	801003c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80100b0:	2000      	movs	r0, #0
 80100b2:	e7d1      	b.n	8010058 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80100b4:	4563      	cmp	r3, ip
 80100b6:	f77f af73 	ble.w	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80100ba:	8ae3      	ldrh	r3, [r4, #22]
 80100bc:	2b00      	cmp	r3, #0
 80100be:	f43f af6f 	beq.w	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80100c2:	2301      	movs	r3, #1
 80100c4:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80100c8:	8c22      	ldrh	r2, [r4, #32]
 80100ca:	8be3      	ldrh	r3, [r4, #30]
 80100cc:	4413      	add	r3, r2
 80100ce:	83e3      	strh	r3, [r4, #30]
 80100d0:	68e0      	ldr	r0, [r4, #12]
 80100d2:	6803      	ldr	r3, [r0, #0]
 80100d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80100d6:	4798      	blx	r3
 80100d8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80100dc:	4418      	add	r0, r3
 80100de:	8a63      	ldrh	r3, [r4, #18]
 80100e0:	1a18      	subs	r0, r3, r0
 80100e2:	8260      	strh	r0, [r4, #18]
 80100e4:	b005      	add	sp, #20
 80100e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100ea:	2300      	movs	r3, #0
 80100ec:	4611      	mov	r1, r2
 80100ee:	4620      	mov	r0, r4
 80100f0:	f7ff ff0e 	bl	800ff10 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80100f4:	e754      	b.n	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80100f6:	4563      	cmp	r3, ip
 80100f8:	dd14      	ble.n	8010124 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80100fa:	b117      	cbz	r7, 8010102 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80100fc:	2301      	movs	r3, #1
 80100fe:	460a      	mov	r2, r1
 8010100:	e772      	b.n	800ffe8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8010102:	2e00      	cmp	r6, #0
 8010104:	f43f af4c 	beq.w	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010108:	2800      	cmp	r0, #0
 801010a:	f47f af49 	bne.w	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801010e:	f1ba 0f00 	cmp.w	sl, #0
 8010112:	d002      	beq.n	801011a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8010114:	2301      	movs	r3, #1
 8010116:	4642      	mov	r2, r8
 8010118:	e767      	b.n	800ffea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801011a:	8ae3      	ldrh	r3, [r4, #22]
 801011c:	2b00      	cmp	r3, #0
 801011e:	f43f af3f 	beq.w	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010122:	e7d5      	b.n	80100d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8010124:	2800      	cmp	r0, #0
 8010126:	f47f af3b 	bne.w	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801012a:	f1ba 0f00 	cmp.w	sl, #0
 801012e:	f43f af37 	beq.w	800ffa0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010132:	2301      	movs	r3, #1
 8010134:	4642      	mov	r2, r8
 8010136:	e7da      	b.n	80100ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08010138 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010138:	b5f0      	push	{r4, r5, r6, r7, lr}
 801013a:	4605      	mov	r5, r0
 801013c:	b08f      	sub	sp, #60	; 0x3c
 801013e:	4617      	mov	r7, r2
 8010140:	461c      	mov	r4, r3
 8010142:	460e      	mov	r6, r1
 8010144:	b1d1      	cbz	r1, 801017c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010146:	681b      	ldr	r3, [r3, #0]
 8010148:	4620      	mov	r0, r4
 801014a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801014c:	4798      	blx	r3
 801014e:	4240      	negs	r0, r0
 8010150:	b200      	sxth	r0, r0
 8010152:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8010156:	9603      	str	r6, [sp, #12]
 8010158:	9700      	str	r7, [sp, #0]
 801015a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801015e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8010162:	4629      	mov	r1, r5
 8010164:	a805      	add	r0, sp, #20
 8010166:	f7ff fcbf 	bl	800fae8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801016a:	2401      	movs	r4, #1
 801016c:	a805      	add	r0, sp, #20
 801016e:	f7ff fedf 	bl	800ff30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010172:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8010176:	b163      	cbz	r3, 8010192 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8010178:	3401      	adds	r4, #1
 801017a:	e7f7      	b.n	801016c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801017c:	f002 fede 	bl	8012f3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010180:	2401      	movs	r4, #1
 8010182:	280a      	cmp	r0, #10
 8010184:	4628      	mov	r0, r5
 8010186:	bf08      	it	eq
 8010188:	3401      	addeq	r4, #1
 801018a:	f002 fed7 	bl	8012f3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801018e:	2800      	cmp	r0, #0
 8010190:	d1f7      	bne.n	8010182 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8010192:	b2a0      	uxth	r0, r4
 8010194:	b00f      	add	sp, #60	; 0x3c
 8010196:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010198 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801019c:	b0e3      	sub	sp, #396	; 0x18c
 801019e:	461c      	mov	r4, r3
 80101a0:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80101a2:	4683      	mov	fp, r0
 80101a4:	4688      	mov	r8, r1
 80101a6:	2b00      	cmp	r3, #0
 80101a8:	f000 8112 	beq.w	80103d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80101ac:	6823      	ldr	r3, [r4, #0]
 80101ae:	2b00      	cmp	r3, #0
 80101b0:	f000 810e 	beq.w	80103d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80101b4:	7ba3      	ldrb	r3, [r4, #14]
 80101b6:	2b00      	cmp	r3, #0
 80101b8:	f000 810a 	beq.w	80103d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80101bc:	6810      	ldr	r0, [r2, #0]
 80101be:	6851      	ldr	r1, [r2, #4]
 80101c0:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80101c4:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80101c8:	ad0a      	add	r5, sp, #40	; 0x28
 80101ca:	462b      	mov	r3, r5
 80101cc:	c303      	stmia	r3!, {r0, r1}
 80101ce:	2100      	movs	r1, #0
 80101d0:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80101d4:	910c      	str	r1, [sp, #48]	; 0x30
 80101d6:	79a2      	ldrb	r2, [r4, #6]
 80101d8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80101dc:	a90c      	add	r1, sp, #48	; 0x30
 80101de:	4628      	mov	r0, r5
 80101e0:	f7ff fd01 	bl	800fbe6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80101e4:	a90c      	add	r1, sp, #48	; 0x30
 80101e6:	4608      	mov	r0, r1
 80101e8:	79a2      	ldrb	r2, [r4, #6]
 80101ea:	f7ff fcfc 	bl	800fbe6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80101ee:	a817      	add	r0, sp, #92	; 0x5c
 80101f0:	f002 fa78 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 80101f4:	6820      	ldr	r0, [r4, #0]
 80101f6:	6803      	ldr	r3, [r0, #0]
 80101f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80101fa:	4798      	blx	r3
 80101fc:	4606      	mov	r6, r0
 80101fe:	6820      	ldr	r0, [r4, #0]
 8010200:	6803      	ldr	r3, [r0, #0]
 8010202:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010204:	4798      	blx	r3
 8010206:	4633      	mov	r3, r6
 8010208:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801020a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801020c:	9000      	str	r0, [sp, #0]
 801020e:	a817      	add	r0, sp, #92	; 0x5c
 8010210:	f002 fac3 	bl	801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010214:	6820      	ldr	r0, [r4, #0]
 8010216:	f894 a004 	ldrb.w	sl, [r4, #4]
 801021a:	6803      	ldr	r3, [r0, #0]
 801021c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801021e:	4798      	blx	r3
 8010220:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8010224:	6823      	ldr	r3, [r4, #0]
 8010226:	4607      	mov	r7, r0
 8010228:	4406      	add	r6, r0
 801022a:	a830      	add	r0, sp, #192	; 0xc0
 801022c:	f893 9009 	ldrb.w	r9, [r3, #9]
 8010230:	f002 fa58 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 8010234:	7c23      	ldrb	r3, [r4, #16]
 8010236:	b17b      	cbz	r3, 8010258 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8010238:	6820      	ldr	r0, [r4, #0]
 801023a:	6803      	ldr	r3, [r0, #0]
 801023c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801023e:	4798      	blx	r3
 8010240:	9009      	str	r0, [sp, #36]	; 0x24
 8010242:	6820      	ldr	r0, [r4, #0]
 8010244:	6802      	ldr	r2, [r0, #0]
 8010246:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8010248:	4790      	blx	r2
 801024a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801024c:	9000      	str	r0, [sp, #0]
 801024e:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8010250:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8010252:	a830      	add	r0, sp, #192	; 0xc0
 8010254:	f002 faa1 	bl	801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010258:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801025c:	7be2      	ldrb	r2, [r4, #15]
 801025e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8010262:	1a8a      	subs	r2, r1, r2
 8010264:	7c21      	ldrb	r1, [r4, #16]
 8010266:	9103      	str	r1, [sp, #12]
 8010268:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801026c:	9102      	str	r1, [sp, #8]
 801026e:	6821      	ldr	r1, [r4, #0]
 8010270:	9101      	str	r1, [sp, #4]
 8010272:	7961      	ldrb	r1, [r4, #5]
 8010274:	9100      	str	r1, [sp, #0]
 8010276:	b292      	uxth	r2, r2
 8010278:	a930      	add	r1, sp, #192	; 0xc0
 801027a:	a80e      	add	r0, sp, #56	; 0x38
 801027c:	f7ff fc34 	bl	800fae8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8010280:	2e00      	cmp	r6, #0
 8010282:	dc5b      	bgt.n	801033c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8010284:	af17      	add	r7, sp, #92	; 0x5c
 8010286:	f04f 0900 	mov.w	r9, #0
 801028a:	7c23      	ldrb	r3, [r4, #16]
 801028c:	2b00      	cmp	r3, #0
 801028e:	f000 80b1 	beq.w	80103f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8010292:	a80e      	add	r0, sp, #56	; 0x38
 8010294:	f7ff fe4c 	bl	800ff30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010298:	f1ba 0f00 	cmp.w	sl, #0
 801029c:	f000 80a5 	beq.w	80103ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80102a0:	7c23      	ldrb	r3, [r4, #16]
 80102a2:	9309      	str	r3, [sp, #36]	; 0x24
 80102a4:	2264      	movs	r2, #100	; 0x64
 80102a6:	4639      	mov	r1, r7
 80102a8:	a849      	add	r0, sp, #292	; 0x124
 80102aa:	f011 fb3d 	bl	8021928 <memcpy>
 80102ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80102b0:	2b00      	cmp	r3, #0
 80102b2:	f000 80a7 	beq.w	8010404 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80102b6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80102ba:	7922      	ldrb	r2, [r4, #4]
 80102bc:	2a01      	cmp	r2, #1
 80102be:	f040 808a 	bne.w	80103d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80102c2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80102c6:	1ac0      	subs	r0, r0, r3
 80102c8:	2302      	movs	r3, #2
 80102ca:	fb90 f0f3 	sdiv	r0, r0, r3
 80102ce:	b200      	sxth	r0, r0
 80102d0:	7c23      	ldrb	r3, [r4, #16]
 80102d2:	2b00      	cmp	r3, #0
 80102d4:	f000 808b 	beq.w	80103ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80102d8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80102dc:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80102e0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80102e4:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80102e8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80102ec:	4410      	add	r0, r2
 80102ee:	b200      	sxth	r0, r0
 80102f0:	9000      	str	r0, [sp, #0]
 80102f2:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80102f6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80102fa:	4642      	mov	r2, r8
 80102fc:	2100      	movs	r1, #0
 80102fe:	4658      	mov	r0, fp
 8010300:	f7ff fca2 	bl	800fc48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010304:	2800      	cmp	r0, #0
 8010306:	d163      	bne.n	80103d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010308:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801030c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8010310:	b2b2      	uxth	r2, r6
 8010312:	4413      	add	r3, r2
 8010314:	1a8a      	subs	r2, r1, r2
 8010316:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 801031a:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801031e:	b21b      	sxth	r3, r3
 8010320:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010324:	2a00      	cmp	r2, #0
 8010326:	d153      	bne.n	80103d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010328:	6822      	ldr	r2, [r4, #0]
 801032a:	8869      	ldrh	r1, [r5, #2]
 801032c:	7a12      	ldrb	r2, [r2, #8]
 801032e:	1a9b      	subs	r3, r3, r2
 8010330:	88ea      	ldrh	r2, [r5, #6]
 8010332:	440a      	add	r2, r1
 8010334:	b212      	sxth	r2, r2
 8010336:	4293      	cmp	r3, r2
 8010338:	dda7      	ble.n	801028a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801033a:	e049      	b.n	80103d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801033c:	7c23      	ldrb	r3, [r4, #16]
 801033e:	444f      	add	r7, r9
 8010340:	b1c3      	cbz	r3, 8010374 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8010342:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8010346:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801034a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801034e:	443b      	add	r3, r7
 8010350:	4293      	cmp	r3, r2
 8010352:	da97      	bge.n	8010284 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8010354:	a80e      	add	r0, sp, #56	; 0x38
 8010356:	f7ff fdeb 	bl	800ff30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801035a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801035e:	3b01      	subs	r3, #1
 8010360:	b29b      	uxth	r3, r3
 8010362:	454b      	cmp	r3, r9
 8010364:	9309      	str	r3, [sp, #36]	; 0x24
 8010366:	d021      	beq.n	80103ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8010368:	7961      	ldrb	r1, [r4, #5]
 801036a:	a817      	add	r0, sp, #92	; 0x5c
 801036c:	f7f5 f8fa 	bl	8005564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010370:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010372:	e7f4      	b.n	801035e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8010374:	fa1f f986 	uxth.w	r9, r6
 8010378:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801037c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010380:	443b      	add	r3, r7
 8010382:	4293      	cmp	r3, r2
 8010384:	f6bf af7e 	bge.w	8010284 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8010388:	a817      	add	r0, sp, #92	; 0x5c
 801038a:	f002 fdd7 	bl	8012f3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801038e:	b1f8      	cbz	r0, 80103d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010390:	280a      	cmp	r0, #10
 8010392:	d1f1      	bne.n	8010378 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8010394:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8010398:	444b      	add	r3, r9
 801039a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801039e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80103a2:	eba3 0309 	sub.w	r3, r3, r9
 80103a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80103aa:	e7e5      	b.n	8010378 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80103ac:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80103b0:	b2b3      	uxth	r3, r6
 80103b2:	441a      	add	r2, r3
 80103b4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80103b8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80103bc:	1ad3      	subs	r3, r2, r3
 80103be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80103c2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80103c6:	b11b      	cbz	r3, 80103d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80103c8:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80103cc:	2b00      	cmp	r3, #0
 80103ce:	d0ba      	beq.n	8010346 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80103d0:	b063      	add	sp, #396	; 0x18c
 80103d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80103d6:	2a02      	cmp	r2, #2
 80103d8:	d105      	bne.n	80103e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80103da:	7be2      	ldrb	r2, [r4, #15]
 80103dc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80103e0:	1a80      	subs	r0, r0, r2
 80103e2:	1ac0      	subs	r0, r0, r3
 80103e4:	e773      	b.n	80102ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80103e6:	2000      	movs	r0, #0
 80103e8:	e772      	b.n	80102d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80103ea:	7be0      	ldrb	r0, [r4, #15]
 80103ec:	e770      	b.n	80102d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80103ee:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80103f2:	e773      	b.n	80102dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80103f4:	f1ba 0f00 	cmp.w	sl, #0
 80103f8:	d0f7      	beq.n	80103ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80103fa:	2264      	movs	r2, #100	; 0x64
 80103fc:	4639      	mov	r1, r7
 80103fe:	a849      	add	r0, sp, #292	; 0x124
 8010400:	f011 fa92 	bl	8021928 <memcpy>
 8010404:	2300      	movs	r3, #0
 8010406:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801040a:	6821      	ldr	r1, [r4, #0]
 801040c:	a849      	add	r0, sp, #292	; 0x124
 801040e:	f7ff fbae 	bl	800fb6e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010412:	b203      	sxth	r3, r0
 8010414:	e751      	b.n	80102ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08010416 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010416:	2b03      	cmp	r3, #3
 8010418:	d818      	bhi.n	801044c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801041a:	e8df f003 	tbb	[pc, r3]
 801041e:	0602      	.short	0x0602
 8010420:	130d      	.short	0x130d
 8010422:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010426:	1850      	adds	r0, r2, r1
 8010428:	4770      	bx	lr
 801042a:	8803      	ldrh	r3, [r0, #0]
 801042c:	8880      	ldrh	r0, [r0, #4]
 801042e:	4418      	add	r0, r3
 8010430:	b200      	sxth	r0, r0
 8010432:	1a80      	subs	r0, r0, r2
 8010434:	3801      	subs	r0, #1
 8010436:	4770      	bx	lr
 8010438:	8803      	ldrh	r3, [r0, #0]
 801043a:	8880      	ldrh	r0, [r0, #4]
 801043c:	4418      	add	r0, r3
 801043e:	b200      	sxth	r0, r0
 8010440:	1a40      	subs	r0, r0, r1
 8010442:	e7f7      	b.n	8010434 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010444:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010448:	4410      	add	r0, r2
 801044a:	4770      	bx	lr
 801044c:	2000      	movs	r0, #0
 801044e:	4770      	bx	lr

08010450 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010450:	2b03      	cmp	r3, #3
 8010452:	d817      	bhi.n	8010484 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010454:	e8df f003 	tbb	[pc, r3]
 8010458:	10090602 	.word	0x10090602
 801045c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010460:	1850      	adds	r0, r2, r1
 8010462:	4770      	bx	lr
 8010464:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010468:	e7fa      	b.n	8010460 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801046a:	8843      	ldrh	r3, [r0, #2]
 801046c:	88c0      	ldrh	r0, [r0, #6]
 801046e:	4418      	add	r0, r3
 8010470:	b200      	sxth	r0, r0
 8010472:	1a80      	subs	r0, r0, r2
 8010474:	3801      	subs	r0, #1
 8010476:	4770      	bx	lr
 8010478:	8843      	ldrh	r3, [r0, #2]
 801047a:	88c0      	ldrh	r0, [r0, #6]
 801047c:	4418      	add	r0, r3
 801047e:	b200      	sxth	r0, r0
 8010480:	1a40      	subs	r0, r0, r1
 8010482:	e7f7      	b.n	8010474 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010484:	2000      	movs	r0, #0
 8010486:	4770      	bx	lr

08010488 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010488:	4b01      	ldr	r3, [pc, #4]	; (8010490 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801048a:	2200      	movs	r2, #0
 801048c:	601a      	str	r2, [r3, #0]
 801048e:	4770      	bx	lr
 8010490:	20014fdc 	.word	0x20014fdc

08010494 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010494:	4603      	mov	r3, r0
 8010496:	b1c8      	cbz	r0, 80104cc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010498:	0c02      	lsrs	r2, r0, #16
 801049a:	0412      	lsls	r2, r2, #16
 801049c:	b9a2      	cbnz	r2, 80104c8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801049e:	0403      	lsls	r3, r0, #16
 80104a0:	2010      	movs	r0, #16
 80104a2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80104a6:	bf04      	itt	eq
 80104a8:	021b      	lsleq	r3, r3, #8
 80104aa:	3008      	addeq	r0, #8
 80104ac:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80104b0:	bf04      	itt	eq
 80104b2:	011b      	lsleq	r3, r3, #4
 80104b4:	3004      	addeq	r0, #4
 80104b6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80104ba:	bf04      	itt	eq
 80104bc:	009b      	lsleq	r3, r3, #2
 80104be:	3002      	addeq	r0, #2
 80104c0:	2b00      	cmp	r3, #0
 80104c2:	db04      	blt.n	80104ce <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80104c4:	3001      	adds	r0, #1
 80104c6:	4770      	bx	lr
 80104c8:	2000      	movs	r0, #0
 80104ca:	e7ea      	b.n	80104a2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80104cc:	2020      	movs	r0, #32
 80104ce:	4770      	bx	lr

080104d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80104d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104d4:	b087      	sub	sp, #28
 80104d6:	460d      	mov	r5, r1
 80104d8:	4616      	mov	r6, r2
 80104da:	4698      	mov	r8, r3
 80104dc:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80104e0:	4601      	mov	r1, r0
 80104e2:	b120      	cbz	r0, 80104ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80104e4:	b11a      	cbz	r2, 80104ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80104e6:	2d1f      	cmp	r5, #31
 80104e8:	d801      	bhi.n	80104ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80104ea:	2b1f      	cmp	r3, #31
 80104ec:	d904      	bls.n	80104f8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80104ee:	2000      	movs	r0, #0
 80104f0:	6038      	str	r0, [r7, #0]
 80104f2:	b007      	add	sp, #28
 80104f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104f8:	b97d      	cbnz	r5, 801051a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80104fa:	b143      	cbz	r3, 801050e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80104fc:	4602      	mov	r2, r0
 80104fe:	e9cd 4700 	strd	r4, r7, [sp]
 8010502:	462b      	mov	r3, r5
 8010504:	4641      	mov	r1, r8
 8010506:	4630      	mov	r0, r6
 8010508:	f7ff ffe2 	bl	80104d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801050c:	e7f1      	b.n	80104f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801050e:	f04f 33ff 	mov.w	r3, #4294967295
 8010512:	603b      	str	r3, [r7, #0]
 8010514:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010518:	e7eb      	b.n	80104f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801051a:	fa32 fa05 	lsrs.w	sl, r2, r5
 801051e:	d106      	bne.n	801052e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8010520:	4346      	muls	r6, r0
 8010522:	fbb6 f0f4 	udiv	r0, r6, r4
 8010526:	fb04 6610 	mls	r6, r4, r0, r6
 801052a:	603e      	str	r6, [r7, #0]
 801052c:	e7e1      	b.n	80104f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801052e:	2201      	movs	r2, #1
 8010530:	40aa      	lsls	r2, r5
 8010532:	3a01      	subs	r2, #1
 8010534:	4016      	ands	r6, r2
 8010536:	fa00 fb05 	lsl.w	fp, r0, r5
 801053a:	4630      	mov	r0, r6
 801053c:	fbbb f9f4 	udiv	r9, fp, r4
 8010540:	fb0a f309 	mul.w	r3, sl, r9
 8010544:	9303      	str	r3, [sp, #12]
 8010546:	f7ff ffa5 	bl	8010494 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801054a:	462b      	mov	r3, r5
 801054c:	460a      	mov	r2, r1
 801054e:	e9cd 4700 	strd	r4, r7, [sp]
 8010552:	4601      	mov	r1, r0
 8010554:	4630      	mov	r0, r6
 8010556:	f7ff ffbb 	bl	80104d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801055a:	fb04 b919 	mls	r9, r4, r9, fp
 801055e:	4606      	mov	r6, r0
 8010560:	4648      	mov	r0, r9
 8010562:	eb05 0108 	add.w	r1, r5, r8
 8010566:	f7ff ff95 	bl	8010494 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801056a:	ab05      	add	r3, sp, #20
 801056c:	e9cd 4300 	strd	r4, r3, [sp]
 8010570:	464a      	mov	r2, r9
 8010572:	4603      	mov	r3, r0
 8010574:	4650      	mov	r0, sl
 8010576:	f7ff ffab 	bl	80104d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801057a:	6839      	ldr	r1, [r7, #0]
 801057c:	9a05      	ldr	r2, [sp, #20]
 801057e:	9b03      	ldr	r3, [sp, #12]
 8010580:	4411      	add	r1, r2
 8010582:	fbb1 f2f4 	udiv	r2, r1, r4
 8010586:	18d3      	adds	r3, r2, r3
 8010588:	441e      	add	r6, r3
 801058a:	fb04 1412 	mls	r4, r4, r2, r1
 801058e:	4430      	add	r0, r6
 8010590:	603c      	str	r4, [r7, #0]
 8010592:	e7ae      	b.n	80104f2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08010594 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010594:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010598:	b085      	sub	sp, #20
 801059a:	f1b0 0900 	subs.w	r9, r0, #0
 801059e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80105a0:	461d      	mov	r5, r3
 80105a2:	bfbf      	itttt	lt
 80105a4:	6823      	ldrlt	r3, [r4, #0]
 80105a6:	425b      	neglt	r3, r3
 80105a8:	f1c9 0900 	rsblt	r9, r9, #0
 80105ac:	6023      	strlt	r3, [r4, #0]
 80105ae:	bfb4      	ite	lt
 80105b0:	f04f 36ff 	movlt.w	r6, #4294967295
 80105b4:	2601      	movge	r6, #1
 80105b6:	2a00      	cmp	r2, #0
 80105b8:	4617      	mov	r7, r2
 80105ba:	da04      	bge.n	80105c6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80105bc:	6823      	ldr	r3, [r4, #0]
 80105be:	425b      	negs	r3, r3
 80105c0:	4257      	negs	r7, r2
 80105c2:	4276      	negs	r6, r6
 80105c4:	6023      	str	r3, [r4, #0]
 80105c6:	2d00      	cmp	r5, #0
 80105c8:	4638      	mov	r0, r7
 80105ca:	bfba      	itte	lt
 80105cc:	426d      	neglt	r5, r5
 80105ce:	f04f 38ff 	movlt.w	r8, #4294967295
 80105d2:	f04f 0801 	movge.w	r8, #1
 80105d6:	f7ff ff5d 	bl	8010494 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80105da:	ab03      	add	r3, sp, #12
 80105dc:	e9cd 5300 	strd	r5, r3, [sp]
 80105e0:	463a      	mov	r2, r7
 80105e2:	4603      	mov	r3, r0
 80105e4:	4648      	mov	r0, r9
 80105e6:	f7ff ff73 	bl	80104d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80105ea:	6823      	ldr	r3, [r4, #0]
 80105ec:	9a03      	ldr	r2, [sp, #12]
 80105ee:	4546      	cmp	r6, r8
 80105f0:	441a      	add	r2, r3
 80105f2:	fb92 f3f5 	sdiv	r3, r2, r5
 80105f6:	4418      	add	r0, r3
 80105f8:	bf18      	it	ne
 80105fa:	4240      	negne	r0, r0
 80105fc:	fb05 2313 	mls	r3, r5, r3, r2
 8010600:	1c72      	adds	r2, r6, #1
 8010602:	6023      	str	r3, [r4, #0]
 8010604:	d105      	bne.n	8010612 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010606:	2b00      	cmp	r3, #0
 8010608:	f1c3 0200 	rsb	r2, r3, #0
 801060c:	db0b      	blt.n	8010626 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801060e:	6022      	str	r2, [r4, #0]
 8010610:	e006      	b.n	8010620 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010612:	2e01      	cmp	r6, #1
 8010614:	d104      	bne.n	8010620 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010616:	2b00      	cmp	r3, #0
 8010618:	da02      	bge.n	8010620 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801061a:	442b      	add	r3, r5
 801061c:	3801      	subs	r0, #1
 801061e:	6023      	str	r3, [r4, #0]
 8010620:	b005      	add	sp, #20
 8010622:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010626:	3801      	subs	r0, #1
 8010628:	1b52      	subs	r2, r2, r5
 801062a:	e7f0      	b.n	801060e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0801062c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801062c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010630:	4c1c      	ldr	r4, [pc, #112]	; (80106a4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010632:	6807      	ldr	r7, [r0, #0]
 8010634:	69a3      	ldr	r3, [r4, #24]
 8010636:	4605      	mov	r5, r0
 8010638:	b92b      	cbnz	r3, 8010646 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801063a:	6840      	ldr	r0, [r0, #4]
 801063c:	e9c5 7000 	strd	r7, r0, [r5]
 8010640:	b004      	add	sp, #16
 8010642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010646:	68a2      	ldr	r2, [r4, #8]
 8010648:	6820      	ldr	r0, [r4, #0]
 801064a:	ae04      	add	r6, sp, #16
 801064c:	f04f 0802 	mov.w	r8, #2
 8010650:	fb93 f1f8 	sdiv	r1, r3, r8
 8010654:	440a      	add	r2, r1
 8010656:	f846 2d04 	str.w	r2, [r6, #-4]!
 801065a:	69e1      	ldr	r1, [r4, #28]
 801065c:	9600      	str	r6, [sp, #0]
 801065e:	463a      	mov	r2, r7
 8010660:	f7ff ff98 	bl	8010594 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010664:	69a3      	ldr	r3, [r4, #24]
 8010666:	686a      	ldr	r2, [r5, #4]
 8010668:	6a21      	ldr	r1, [r4, #32]
 801066a:	9600      	str	r6, [sp, #0]
 801066c:	4607      	mov	r7, r0
 801066e:	6860      	ldr	r0, [r4, #4]
 8010670:	f7ff ff90 	bl	8010594 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010674:	6962      	ldr	r2, [r4, #20]
 8010676:	69a3      	ldr	r3, [r4, #24]
 8010678:	fb93 f8f8 	sdiv	r8, r3, r8
 801067c:	4442      	add	r2, r8
 801067e:	9203      	str	r2, [sp, #12]
 8010680:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010682:	682a      	ldr	r2, [r5, #0]
 8010684:	9600      	str	r6, [sp, #0]
 8010686:	4407      	add	r7, r0
 8010688:	68e0      	ldr	r0, [r4, #12]
 801068a:	f7ff ff83 	bl	8010594 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801068e:	9600      	str	r6, [sp, #0]
 8010690:	4680      	mov	r8, r0
 8010692:	69a3      	ldr	r3, [r4, #24]
 8010694:	686a      	ldr	r2, [r5, #4]
 8010696:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010698:	6920      	ldr	r0, [r4, #16]
 801069a:	f7ff ff7b 	bl	8010594 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801069e:	4440      	add	r0, r8
 80106a0:	e7cc      	b.n	801063c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80106a2:	bf00      	nop
 80106a4:	20014fe0 	.word	0x20014fe0

080106a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80106a8:	4b07      	ldr	r3, [pc, #28]	; (80106c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80106aa:	781b      	ldrb	r3, [r3, #0]
 80106ac:	2b01      	cmp	r3, #1
 80106ae:	d109      	bne.n	80106c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80106b0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80106b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80106b8:	8003      	strh	r3, [r0, #0]
 80106ba:	4b04      	ldr	r3, [pc, #16]	; (80106cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80106bc:	881b      	ldrh	r3, [r3, #0]
 80106be:	3b01      	subs	r3, #1
 80106c0:	1a9b      	subs	r3, r3, r2
 80106c2:	800b      	strh	r3, [r1, #0]
 80106c4:	4770      	bx	lr
 80106c6:	bf00      	nop
 80106c8:	20014fcc 	.word	0x20014fcc
 80106cc:	20014fc8 	.word	0x20014fc8

080106d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80106d0:	b510      	push	{r4, lr}
 80106d2:	4b07      	ldr	r3, [pc, #28]	; (80106f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80106d4:	781b      	ldrb	r3, [r3, #0]
 80106d6:	2b01      	cmp	r3, #1
 80106d8:	d108      	bne.n	80106ec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80106da:	4b06      	ldr	r3, [pc, #24]	; (80106f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80106dc:	880c      	ldrh	r4, [r1, #0]
 80106de:	881b      	ldrh	r3, [r3, #0]
 80106e0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80106e4:	3b01      	subs	r3, #1
 80106e6:	1b1b      	subs	r3, r3, r4
 80106e8:	8003      	strh	r3, [r0, #0]
 80106ea:	800a      	strh	r2, [r1, #0]
 80106ec:	bd10      	pop	{r4, pc}
 80106ee:	bf00      	nop
 80106f0:	20014fcc 	.word	0x20014fcc
 80106f4:	20014fc8 	.word	0x20014fc8

080106f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80106f8:	b510      	push	{r4, lr}
 80106fa:	4b0a      	ldr	r3, [pc, #40]	; (8010724 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80106fc:	781b      	ldrb	r3, [r3, #0]
 80106fe:	2b01      	cmp	r3, #1
 8010700:	d10e      	bne.n	8010720 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010702:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010706:	8843      	ldrh	r3, [r0, #2]
 8010708:	f9b0 4000 	ldrsh.w	r4, [r0]
 801070c:	8044      	strh	r4, [r0, #2]
 801070e:	18ca      	adds	r2, r1, r3
 8010710:	4b05      	ldr	r3, [pc, #20]	; (8010728 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010712:	881b      	ldrh	r3, [r3, #0]
 8010714:	1a9b      	subs	r3, r3, r2
 8010716:	8003      	strh	r3, [r0, #0]
 8010718:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801071c:	80c3      	strh	r3, [r0, #6]
 801071e:	8081      	strh	r1, [r0, #4]
 8010720:	bd10      	pop	{r4, pc}
 8010722:	bf00      	nop
 8010724:	20014fcc 	.word	0x20014fcc
 8010728:	20014fc8 	.word	0x20014fc8

0801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801072c:	4b08      	ldr	r3, [pc, #32]	; (8010750 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801072e:	781b      	ldrb	r3, [r3, #0]
 8010730:	2b01      	cmp	r3, #1
 8010732:	d10c      	bne.n	801074e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010734:	8803      	ldrh	r3, [r0, #0]
 8010736:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801073a:	8842      	ldrh	r2, [r0, #2]
 801073c:	8002      	strh	r2, [r0, #0]
 801073e:	185a      	adds	r2, r3, r1
 8010740:	4b04      	ldr	r3, [pc, #16]	; (8010754 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010742:	881b      	ldrh	r3, [r3, #0]
 8010744:	1a9b      	subs	r3, r3, r2
 8010746:	8043      	strh	r3, [r0, #2]
 8010748:	88c3      	ldrh	r3, [r0, #6]
 801074a:	8083      	strh	r3, [r0, #4]
 801074c:	80c1      	strh	r1, [r0, #6]
 801074e:	4770      	bx	lr
 8010750:	20014fcc 	.word	0x20014fcc
 8010754:	20014fc8 	.word	0x20014fc8

08010758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010758:	b510      	push	{r4, lr}
 801075a:	4b07      	ldr	r3, [pc, #28]	; (8010778 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801075c:	781b      	ldrb	r3, [r3, #0]
 801075e:	2b01      	cmp	r3, #1
 8010760:	d108      	bne.n	8010774 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010762:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010766:	f9b0 4000 	ldrsh.w	r4, [r0]
 801076a:	8003      	strh	r3, [r0, #0]
 801076c:	8893      	ldrh	r3, [r2, #4]
 801076e:	3b01      	subs	r3, #1
 8010770:	1b1b      	subs	r3, r3, r4
 8010772:	800b      	strh	r3, [r1, #0]
 8010774:	bd10      	pop	{r4, pc}
 8010776:	bf00      	nop
 8010778:	20014fcc 	.word	0x20014fcc

0801077c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 801077c:	4b0b      	ldr	r3, [pc, #44]	; (80107ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801077e:	781b      	ldrb	r3, [r3, #0]
 8010780:	2b01      	cmp	r3, #1
 8010782:	d111      	bne.n	80107a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8010784:	680b      	ldr	r3, [r1, #0]
 8010786:	ed90 7a00 	vldr	s14, [r0]
 801078a:	6003      	str	r3, [r0, #0]
 801078c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8010790:	eddf 6a07 	vldr	s13, [pc, #28]	; 80107b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8010794:	ee07 3a90 	vmov	s15, r3
 8010798:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801079c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80107a0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80107a4:	edc1 7a00 	vstr	s15, [r1]
 80107a8:	4770      	bx	lr
 80107aa:	bf00      	nop
 80107ac:	20014fcc 	.word	0x20014fcc
 80107b0:	38d1b717 	.word	0x38d1b717

080107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80107b4:	b510      	push	{r4, lr}
 80107b6:	4b0a      	ldr	r3, [pc, #40]	; (80107e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80107b8:	781b      	ldrb	r3, [r3, #0]
 80107ba:	2b01      	cmp	r3, #1
 80107bc:	460a      	mov	r2, r1
 80107be:	d10d      	bne.n	80107dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80107c0:	8881      	ldrh	r1, [r0, #4]
 80107c2:	8803      	ldrh	r3, [r0, #0]
 80107c4:	440b      	add	r3, r1
 80107c6:	4601      	mov	r1, r0
 80107c8:	3b01      	subs	r3, #1
 80107ca:	f821 3b02 	strh.w	r3, [r1], #2
 80107ce:	f7ff ffc3 	bl	8010758 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80107d2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80107d6:	88c2      	ldrh	r2, [r0, #6]
 80107d8:	8082      	strh	r2, [r0, #4]
 80107da:	80c3      	strh	r3, [r0, #6]
 80107dc:	bd10      	pop	{r4, pc}
 80107de:	bf00      	nop
 80107e0:	20014fcc 	.word	0x20014fcc

080107e4 <_ZN8touchgfx11Application13requestRedrawEv>:
 80107e4:	4b06      	ldr	r3, [pc, #24]	; (8010800 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80107e6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80107ea:	4b06      	ldr	r3, [pc, #24]	; (8010804 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80107ec:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80107f0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80107f4:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80107f8:	2100      	movs	r1, #0
 80107fa:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80107fe:	4770      	bx	lr
 8010800:	20014fc8 	.word	0x20014fc8
 8010804:	20014fca 	.word	0x20014fca

08010808 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010808:	4b03      	ldr	r3, [pc, #12]	; (8010818 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801080a:	6818      	ldr	r0, [r3, #0]
 801080c:	b110      	cbz	r0, 8010814 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801080e:	6803      	ldr	r3, [r0, #0]
 8010810:	699b      	ldr	r3, [r3, #24]
 8010812:	4718      	bx	r3
 8010814:	4770      	bx	lr
 8010816:	bf00      	nop
 8010818:	20015010 	.word	0x20015010

0801081c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801081c:	4770      	bx	lr
	...

08010820 <_ZN8touchgfx11Application4drawEv>:
 8010820:	b507      	push	{r0, r1, r2, lr}
 8010822:	4b09      	ldr	r3, [pc, #36]	; (8010848 <_ZN8touchgfx11Application4drawEv+0x28>)
 8010824:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010828:	4b08      	ldr	r3, [pc, #32]	; (801084c <_ZN8touchgfx11Application4drawEv+0x2c>)
 801082a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801082e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010832:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010836:	6803      	ldr	r3, [r0, #0]
 8010838:	2100      	movs	r1, #0
 801083a:	9100      	str	r1, [sp, #0]
 801083c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801083e:	4669      	mov	r1, sp
 8010840:	4798      	blx	r3
 8010842:	b003      	add	sp, #12
 8010844:	f85d fb04 	ldr.w	pc, [sp], #4
 8010848:	20014fc8 	.word	0x20014fc8
 801084c:	20014fca 	.word	0x20014fca

08010850 <_ZN8touchgfx11Application10invalidateEv>:
 8010850:	4b09      	ldr	r3, [pc, #36]	; (8010878 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8010852:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010856:	4b09      	ldr	r3, [pc, #36]	; (801087c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8010858:	b082      	sub	sp, #8
 801085a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801085e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010862:	2100      	movs	r1, #0
 8010864:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010868:	9100      	str	r1, [sp, #0]
 801086a:	6803      	ldr	r3, [r0, #0]
 801086c:	aa02      	add	r2, sp, #8
 801086e:	e912 0006 	ldmdb	r2, {r1, r2}
 8010872:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010874:	b002      	add	sp, #8
 8010876:	4718      	bx	r3
 8010878:	20014fc8 	.word	0x20014fc8
 801087c:	20014fca 	.word	0x20014fca

08010880 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010880:	4b03      	ldr	r3, [pc, #12]	; (8010890 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010882:	6818      	ldr	r0, [r3, #0]
 8010884:	b110      	cbz	r0, 801088c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010886:	6803      	ldr	r3, [r0, #0]
 8010888:	69db      	ldr	r3, [r3, #28]
 801088a:	4718      	bx	r3
 801088c:	4770      	bx	lr
 801088e:	bf00      	nop
 8010890:	20015010 	.word	0x20015010

08010894 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010894:	4b03      	ldr	r3, [pc, #12]	; (80108a4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010896:	6818      	ldr	r0, [r3, #0]
 8010898:	b110      	cbz	r0, 80108a0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801089a:	6803      	ldr	r3, [r0, #0]
 801089c:	6a1b      	ldr	r3, [r3, #32]
 801089e:	4718      	bx	r3
 80108a0:	4770      	bx	lr
 80108a2:	bf00      	nop
 80108a4:	20015010 	.word	0x20015010

080108a8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80108a8:	2300      	movs	r3, #0
 80108aa:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80108ae:	4770      	bx	lr

080108b0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80108b0:	4b03      	ldr	r3, [pc, #12]	; (80108c0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80108b2:	6818      	ldr	r0, [r3, #0]
 80108b4:	b110      	cbz	r0, 80108bc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80108b6:	6803      	ldr	r3, [r0, #0]
 80108b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80108ba:	4718      	bx	r3
 80108bc:	4770      	bx	lr
 80108be:	bf00      	nop
 80108c0:	20015010 	.word	0x20015010

080108c4 <_ZN8touchgfx11ApplicationD1Ev>:
 80108c4:	4770      	bx	lr

080108c6 <_ZN8touchgfx11ApplicationD0Ev>:
 80108c6:	b510      	push	{r4, lr}
 80108c8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80108cc:	4604      	mov	r4, r0
 80108ce:	f010 feed 	bl	80216ac <_ZdlPvj>
 80108d2:	4620      	mov	r0, r4
 80108d4:	bd10      	pop	{r4, pc}

080108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80108d6:	b510      	push	{r4, lr}
 80108d8:	f9b1 4000 	ldrsh.w	r4, [r1]
 80108dc:	888a      	ldrh	r2, [r1, #4]
 80108de:	f9b0 3000 	ldrsh.w	r3, [r0]
 80108e2:	4422      	add	r2, r4
 80108e4:	b212      	sxth	r2, r2
 80108e6:	4293      	cmp	r3, r2
 80108e8:	da15      	bge.n	8010916 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80108ea:	8882      	ldrh	r2, [r0, #4]
 80108ec:	4413      	add	r3, r2
 80108ee:	b21b      	sxth	r3, r3
 80108f0:	429c      	cmp	r4, r3
 80108f2:	da10      	bge.n	8010916 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80108f4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80108f8:	88c9      	ldrh	r1, [r1, #6]
 80108fa:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80108fe:	4419      	add	r1, r3
 8010900:	b209      	sxth	r1, r1
 8010902:	428a      	cmp	r2, r1
 8010904:	da07      	bge.n	8010916 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010906:	88c0      	ldrh	r0, [r0, #6]
 8010908:	4410      	add	r0, r2
 801090a:	b200      	sxth	r0, r0
 801090c:	4283      	cmp	r3, r0
 801090e:	bfac      	ite	ge
 8010910:	2000      	movge	r0, #0
 8010912:	2001      	movlt	r0, #1
 8010914:	bd10      	pop	{r4, pc}
 8010916:	2000      	movs	r0, #0
 8010918:	e7fc      	b.n	8010914 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801091a <_ZN8touchgfx4Rect10restrictToEss>:
 801091a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801091e:	2b00      	cmp	r3, #0
 8010920:	b510      	push	{r4, lr}
 8010922:	da04      	bge.n	801092e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010924:	8884      	ldrh	r4, [r0, #4]
 8010926:	4423      	add	r3, r4
 8010928:	8083      	strh	r3, [r0, #4]
 801092a:	2300      	movs	r3, #0
 801092c:	8003      	strh	r3, [r0, #0]
 801092e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010932:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010936:	1b09      	subs	r1, r1, r4
 8010938:	428b      	cmp	r3, r1
 801093a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801093e:	bfc8      	it	gt
 8010940:	8081      	strhgt	r1, [r0, #4]
 8010942:	2b00      	cmp	r3, #0
 8010944:	da04      	bge.n	8010950 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010946:	88c1      	ldrh	r1, [r0, #6]
 8010948:	440b      	add	r3, r1
 801094a:	80c3      	strh	r3, [r0, #6]
 801094c:	2300      	movs	r3, #0
 801094e:	8043      	strh	r3, [r0, #2]
 8010950:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010954:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010958:	1a52      	subs	r2, r2, r1
 801095a:	4293      	cmp	r3, r2
 801095c:	bfc8      	it	gt
 801095e:	80c2      	strhgt	r2, [r0, #6]
 8010960:	bd10      	pop	{r4, pc}
	...

08010964 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010964:	b510      	push	{r4, lr}
 8010966:	4b10      	ldr	r3, [pc, #64]	; (80109a8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010968:	f9b3 2000 	ldrsh.w	r2, [r3]
 801096c:	4b0f      	ldr	r3, [pc, #60]	; (80109ac <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801096e:	460c      	mov	r4, r1
 8010970:	4620      	mov	r0, r4
 8010972:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010976:	f7ff ffd0 	bl	801091a <_ZN8touchgfx4Rect10restrictToEss>
 801097a:	4b0d      	ldr	r3, [pc, #52]	; (80109b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801097c:	6818      	ldr	r0, [r3, #0]
 801097e:	b190      	cbz	r0, 80109a6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010980:	6803      	ldr	r3, [r0, #0]
 8010982:	4621      	mov	r1, r4
 8010984:	689b      	ldr	r3, [r3, #8]
 8010986:	4798      	blx	r3
 8010988:	4b0a      	ldr	r3, [pc, #40]	; (80109b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801098a:	6818      	ldr	r0, [r3, #0]
 801098c:	b118      	cbz	r0, 8010996 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801098e:	6803      	ldr	r3, [r0, #0]
 8010990:	4621      	mov	r1, r4
 8010992:	689b      	ldr	r3, [r3, #8]
 8010994:	4798      	blx	r3
 8010996:	4b08      	ldr	r3, [pc, #32]	; (80109b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010998:	6818      	ldr	r0, [r3, #0]
 801099a:	6803      	ldr	r3, [r0, #0]
 801099c:	4621      	mov	r1, r4
 801099e:	69db      	ldr	r3, [r3, #28]
 80109a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109a4:	4718      	bx	r3
 80109a6:	bd10      	pop	{r4, pc}
 80109a8:	20014fca 	.word	0x20014fca
 80109ac:	20014fc8 	.word	0x20014fc8
 80109b0:	20015010 	.word	0x20015010
 80109b4:	2001500c 	.word	0x2001500c
 80109b8:	20014fd4 	.word	0x20014fd4

080109bc <_ZNK8touchgfx4Rect8includesERKS0_>:
 80109bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80109be:	4606      	mov	r6, r0
 80109c0:	4608      	mov	r0, r1
 80109c2:	460f      	mov	r7, r1
 80109c4:	f7fc fa9d 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109c8:	b9e8      	cbnz	r0, 8010a06 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80109ca:	f9b7 5000 	ldrsh.w	r5, [r7]
 80109ce:	f9b6 4000 	ldrsh.w	r4, [r6]
 80109d2:	42a5      	cmp	r5, r4
 80109d4:	db17      	blt.n	8010a06 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80109d6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80109da:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80109de:	429a      	cmp	r2, r3
 80109e0:	db11      	blt.n	8010a06 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80109e2:	88b9      	ldrh	r1, [r7, #4]
 80109e4:	440d      	add	r5, r1
 80109e6:	88b1      	ldrh	r1, [r6, #4]
 80109e8:	440c      	add	r4, r1
 80109ea:	b22d      	sxth	r5, r5
 80109ec:	b224      	sxth	r4, r4
 80109ee:	42a5      	cmp	r5, r4
 80109f0:	dc09      	bgt.n	8010a06 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80109f2:	88f8      	ldrh	r0, [r7, #6]
 80109f4:	4410      	add	r0, r2
 80109f6:	88f2      	ldrh	r2, [r6, #6]
 80109f8:	4413      	add	r3, r2
 80109fa:	b200      	sxth	r0, r0
 80109fc:	b21b      	sxth	r3, r3
 80109fe:	4298      	cmp	r0, r3
 8010a00:	bfcc      	ite	gt
 8010a02:	2000      	movgt	r0, #0
 8010a04:	2001      	movle	r0, #1
 8010a06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010a08 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8010a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010a0a:	4604      	mov	r4, r0
 8010a0c:	4608      	mov	r0, r1
 8010a0e:	460d      	mov	r5, r1
 8010a10:	f7fc fa77 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a14:	b978      	cbnz	r0, 8010a36 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8010a16:	4620      	mov	r0, r4
 8010a18:	f7fc fa73 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a1c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8010a20:	b150      	cbz	r0, 8010a38 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8010a22:	8026      	strh	r6, [r4, #0]
 8010a24:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010a28:	8063      	strh	r3, [r4, #2]
 8010a2a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8010a2e:	80a3      	strh	r3, [r4, #4]
 8010a30:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010a34:	80e3      	strh	r3, [r4, #6]
 8010a36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010a38:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010a3c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010a40:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8010a44:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8010a48:	88ed      	ldrh	r5, [r5, #6]
 8010a4a:	42b1      	cmp	r1, r6
 8010a4c:	460f      	mov	r7, r1
 8010a4e:	bfa8      	it	ge
 8010a50:	4637      	movge	r7, r6
 8010a52:	4293      	cmp	r3, r2
 8010a54:	4618      	mov	r0, r3
 8010a56:	4466      	add	r6, ip
 8010a58:	bfa8      	it	ge
 8010a5a:	4610      	movge	r0, r2
 8010a5c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010a60:	8027      	strh	r7, [r4, #0]
 8010a62:	442a      	add	r2, r5
 8010a64:	88e5      	ldrh	r5, [r4, #6]
 8010a66:	8060      	strh	r0, [r4, #2]
 8010a68:	4461      	add	r1, ip
 8010a6a:	442b      	add	r3, r5
 8010a6c:	b236      	sxth	r6, r6
 8010a6e:	b209      	sxth	r1, r1
 8010a70:	b212      	sxth	r2, r2
 8010a72:	b21b      	sxth	r3, r3
 8010a74:	428e      	cmp	r6, r1
 8010a76:	bfac      	ite	ge
 8010a78:	ebc7 0106 	rsbge	r1, r7, r6
 8010a7c:	ebc7 0101 	rsblt	r1, r7, r1
 8010a80:	429a      	cmp	r2, r3
 8010a82:	bfac      	ite	ge
 8010a84:	ebc0 0202 	rsbge	r2, r0, r2
 8010a88:	ebc0 0203 	rsblt	r2, r0, r3
 8010a8c:	80a1      	strh	r1, [r4, #4]
 8010a8e:	80e2      	strh	r2, [r4, #6]
 8010a90:	e7d1      	b.n	8010a36 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08010a94 <_ZN8touchgfx11Application11getInstanceEv>:
 8010a94:	4b01      	ldr	r3, [pc, #4]	; (8010a9c <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8010a96:	6818      	ldr	r0, [r3, #0]
 8010a98:	4770      	bx	lr
 8010a9a:	bf00      	nop
 8010a9c:	20015020 	.word	0x20015020

08010aa0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8010aa0:	b510      	push	{r4, lr}
 8010aa2:	2300      	movs	r3, #0
 8010aa4:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8010aa8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8010aac:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8010ab0:	4604      	mov	r4, r0
 8010ab2:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010ab6:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8010aba:	429a      	cmp	r2, r3
 8010abc:	d90e      	bls.n	8010adc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8010abe:	18e2      	adds	r2, r4, r3
 8010ac0:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8010ac4:	b122      	cbz	r2, 8010ad0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8010ac6:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010ace:	4798      	blx	r3
 8010ad0:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010ad4:	3301      	adds	r3, #1
 8010ad6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8010ada:	e7ea      	b.n	8010ab2 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8010adc:	bd10      	pop	{r4, pc}

08010ade <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8010ade:	b530      	push	{r4, r5, lr}
 8010ae0:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8010ae4:	2200      	movs	r2, #0
 8010ae6:	b293      	uxth	r3, r2
 8010ae8:	429d      	cmp	r5, r3
 8010aea:	d90e      	bls.n	8010b0a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8010aec:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8010af0:	428b      	cmp	r3, r1
 8010af2:	d10b      	bne.n	8010b0c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8010af4:	1884      	adds	r4, r0, r2
 8010af6:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8010afa:	b13b      	cbz	r3, 8010b0c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8010afc:	3b01      	subs	r3, #1
 8010afe:	b2db      	uxtb	r3, r3
 8010b00:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8010b04:	b90b      	cbnz	r3, 8010b0a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8010b06:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8010b0a:	bd30      	pop	{r4, r5, pc}
 8010b0c:	3201      	adds	r2, #1
 8010b0e:	e7ea      	b.n	8010ae6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8010b10:	2300      	movs	r3, #0
 8010b12:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8010b16:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8010b1a:	30a4      	adds	r0, #164	; 0xa4
 8010b1c:	f802 3b01 	strb.w	r3, [r2], #1
 8010b20:	4282      	cmp	r2, r0
 8010b22:	d1fb      	bne.n	8010b1c <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8010b24:	4770      	bx	lr
	...

08010b28 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010b28:	b570      	push	{r4, r5, r6, lr}
 8010b2a:	4c0b      	ldr	r4, [pc, #44]	; (8010b58 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010b2c:	4605      	mov	r5, r0
 8010b2e:	6820      	ldr	r0, [r4, #0]
 8010b30:	460e      	mov	r6, r1
 8010b32:	b110      	cbz	r0, 8010b3a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8010b34:	6803      	ldr	r3, [r0, #0]
 8010b36:	695b      	ldr	r3, [r3, #20]
 8010b38:	4798      	blx	r3
 8010b3a:	1d28      	adds	r0, r5, #4
 8010b3c:	f7ff ffe8 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010b40:	6026      	str	r6, [r4, #0]
 8010b42:	6833      	ldr	r3, [r6, #0]
 8010b44:	4630      	mov	r0, r6
 8010b46:	68db      	ldr	r3, [r3, #12]
 8010b48:	4798      	blx	r3
 8010b4a:	682b      	ldr	r3, [r5, #0]
 8010b4c:	4628      	mov	r0, r5
 8010b4e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010b50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b54:	4718      	bx	r3
 8010b56:	bf00      	nop
 8010b58:	20015010 	.word	0x20015010

08010b5c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8010b5c:	2300      	movs	r3, #0
 8010b5e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8010b62:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8010b66:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010b68:	461a      	mov	r2, r3
 8010b6a:	461c      	mov	r4, r3
 8010b6c:	461d      	mov	r5, r3
 8010b6e:	459c      	cmp	ip, r3
 8010b70:	dd1a      	ble.n	8010ba8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8010b72:	18c6      	adds	r6, r0, r3
 8010b74:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8010b78:	b16e      	cbz	r6, 8010b96 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8010b7a:	429a      	cmp	r2, r3
 8010b7c:	d008      	beq.n	8010b90 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8010b7e:	fa1f fe82 	uxth.w	lr, r2
 8010b82:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8010b86:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8010b8a:	1887      	adds	r7, r0, r2
 8010b8c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8010b90:	3201      	adds	r2, #1
 8010b92:	3301      	adds	r3, #1
 8010b94:	e7eb      	b.n	8010b6e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8010b96:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8010b9a:	4299      	cmp	r1, r3
 8010b9c:	bfa8      	it	ge
 8010b9e:	3501      	addge	r5, #1
 8010ba0:	429e      	cmp	r6, r3
 8010ba2:	bfc8      	it	gt
 8010ba4:	3401      	addgt	r4, #1
 8010ba6:	e7f4      	b.n	8010b92 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8010ba8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8010bac:	1b49      	subs	r1, r1, r5
 8010bae:	1b1b      	subs	r3, r3, r4
 8010bb0:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8010bb4:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8010bb8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8010bbc:	4293      	cmp	r3, r2
 8010bbe:	dd03      	ble.n	8010bc8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8010bc0:	3b01      	subs	r3, #1
 8010bc2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8010bc6:	e7f7      	b.n	8010bb8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8010bc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010bcc <_ZN8touchgfx11Application15handleTickEventEv>:
 8010bcc:	b570      	push	{r4, r5, r6, lr}
 8010bce:	4d16      	ldr	r5, [pc, #88]	; (8010c28 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8010bd0:	4604      	mov	r4, r0
 8010bd2:	6828      	ldr	r0, [r5, #0]
 8010bd4:	b140      	cbz	r0, 8010be8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010bd6:	7a03      	ldrb	r3, [r0, #8]
 8010bd8:	b933      	cbnz	r3, 8010be8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010bda:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8010bde:	6803      	ldr	r3, [r0, #0]
 8010be0:	689b      	ldr	r3, [r3, #8]
 8010be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010be6:	4718      	bx	r3
 8010be8:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8010bec:	4e0f      	ldr	r6, [pc, #60]	; (8010c2c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8010bee:	b973      	cbnz	r3, 8010c0e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010bf0:	b168      	cbz	r0, 8010c0e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010bf2:	7a03      	ldrb	r3, [r0, #8]
 8010bf4:	b15b      	cbz	r3, 8010c0e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010bf6:	6830      	ldr	r0, [r6, #0]
 8010bf8:	b110      	cbz	r0, 8010c00 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010bfa:	6803      	ldr	r3, [r0, #0]
 8010bfc:	691b      	ldr	r3, [r3, #16]
 8010bfe:	4798      	blx	r3
 8010c00:	6828      	ldr	r0, [r5, #0]
 8010c02:	6803      	ldr	r3, [r0, #0]
 8010c04:	68db      	ldr	r3, [r3, #12]
 8010c06:	4798      	blx	r3
 8010c08:	2301      	movs	r3, #1
 8010c0a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8010c0e:	3404      	adds	r4, #4
 8010c10:	4620      	mov	r0, r4
 8010c12:	f7ff ff45 	bl	8010aa0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8010c16:	4620      	mov	r0, r4
 8010c18:	f7ff ffa0 	bl	8010b5c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8010c1c:	6830      	ldr	r0, [r6, #0]
 8010c1e:	b110      	cbz	r0, 8010c26 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8010c20:	6803      	ldr	r3, [r0, #0]
 8010c22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010c24:	e7dd      	b.n	8010be2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010c26:	bd70      	pop	{r4, r5, r6, pc}
 8010c28:	20015014 	.word	0x20015014
 8010c2c:	20015010 	.word	0x20015010

08010c30 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8010c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010c32:	2300      	movs	r3, #0
 8010c34:	4604      	mov	r4, r0
 8010c36:	460d      	mov	r5, r1
 8010c38:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8010c3c:	4618      	mov	r0, r3
 8010c3e:	b29a      	uxth	r2, r3
 8010c40:	4291      	cmp	r1, r2
 8010c42:	d911      	bls.n	8010c68 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8010c44:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8010c48:	18e6      	adds	r6, r4, r3
 8010c4a:	42af      	cmp	r7, r5
 8010c4c:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8010c50:	d105      	bne.n	8010c5e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8010c52:	2aff      	cmp	r2, #255	; 0xff
 8010c54:	d002      	beq.n	8010c5c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8010c56:	3201      	adds	r2, #1
 8010c58:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8010c5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010c5e:	2a00      	cmp	r2, #0
 8010c60:	bf08      	it	eq
 8010c62:	2001      	moveq	r0, #1
 8010c64:	3301      	adds	r3, #1
 8010c66:	e7ea      	b.n	8010c3e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8010c68:	b120      	cbz	r0, 8010c74 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8010c6a:	2920      	cmp	r1, #32
 8010c6c:	d102      	bne.n	8010c74 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8010c6e:	4620      	mov	r0, r4
 8010c70:	f7ff ff74 	bl	8010b5c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8010c74:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8010c78:	2b1f      	cmp	r3, #31
 8010c7a:	d8ef      	bhi.n	8010c5c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8010c7c:	18e2      	adds	r2, r4, r3
 8010c7e:	2101      	movs	r1, #1
 8010c80:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8010c84:	185a      	adds	r2, r3, r1
 8010c86:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8010c8a:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8010c8e:	e7e5      	b.n	8010c5c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08010c90 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010c90:	4603      	mov	r3, r0
 8010c92:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8010c96:	2200      	movs	r2, #0
 8010c98:	801a      	strh	r2, [r3, #0]
 8010c9a:	805a      	strh	r2, [r3, #2]
 8010c9c:	809a      	strh	r2, [r3, #4]
 8010c9e:	80da      	strh	r2, [r3, #6]
 8010ca0:	3308      	adds	r3, #8
 8010ca2:	428b      	cmp	r3, r1
 8010ca4:	d1f8      	bne.n	8010c98 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8010ca6:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8010caa:	4770      	bx	lr

08010cac <_ZN8touchgfx11ApplicationC1Ev>:
 8010cac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010cae:	4606      	mov	r6, r0
 8010cb0:	4b1c      	ldr	r3, [pc, #112]	; (8010d24 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8010cb2:	f846 3b04 	str.w	r3, [r6], #4
 8010cb6:	4604      	mov	r4, r0
 8010cb8:	2500      	movs	r5, #0
 8010cba:	22a8      	movs	r2, #168	; 0xa8
 8010cbc:	2100      	movs	r1, #0
 8010cbe:	4630      	mov	r0, r6
 8010cc0:	f010 fe40 	bl	8021944 <memset>
 8010cc4:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8010cc8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8010ccc:	f7ff ffe0 	bl	8010c90 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010cd0:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8010cd4:	f7ff ffdc 	bl	8010c90 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8010cd8:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8010cdc:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8010ce0:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8010ce4:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8010ce8:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8010cec:	490e      	ldr	r1, [pc, #56]	; (8010d28 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8010cee:	480f      	ldr	r0, [pc, #60]	; (8010d2c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8010cf0:	4f0f      	ldr	r7, [pc, #60]	; (8010d30 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8010cf2:	f010 fbb3 	bl	802145c <CRC_Lock>
 8010cf6:	4b0f      	ldr	r3, [pc, #60]	; (8010d34 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8010cf8:	b158      	cbz	r0, 8010d12 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8010cfa:	801d      	strh	r5, [r3, #0]
 8010cfc:	4a0e      	ldr	r2, [pc, #56]	; (8010d38 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8010cfe:	2300      	movs	r3, #0
 8010d00:	6013      	str	r3, [r2, #0]
 8010d02:	4a0e      	ldr	r2, [pc, #56]	; (8010d3c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8010d04:	603b      	str	r3, [r7, #0]
 8010d06:	4630      	mov	r0, r6
 8010d08:	6013      	str	r3, [r2, #0]
 8010d0a:	f7ff ff01 	bl	8010b10 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010d0e:	4620      	mov	r0, r4
 8010d10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010d12:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010d16:	2002      	movs	r0, #2
 8010d18:	801a      	strh	r2, [r3, #0]
 8010d1a:	6038      	str	r0, [r7, #0]
 8010d1c:	f001 fb08 	bl	8012330 <_ZN8touchgfx6Screen4drawEv>
 8010d20:	e7ec      	b.n	8010cfc <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8010d22:	bf00      	nop
 8010d24:	08024db8 	.word	0x08024db8
 8010d28:	b5e8b5cd 	.word	0xb5e8b5cd
 8010d2c:	f407a5c2 	.word	0xf407a5c2
 8010d30:	20015010 	.word	0x20015010
 8010d34:	20000084 	.word	0x20000084
 8010d38:	20015020 	.word	0x20015020
 8010d3c:	20015014 	.word	0x20015014

08010d40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010d40:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8010d44:	3b01      	subs	r3, #1
 8010d46:	b29b      	uxth	r3, r3
 8010d48:	428b      	cmp	r3, r1
 8010d4a:	b510      	push	{r4, lr}
 8010d4c:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8010d50:	d908      	bls.n	8010d64 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010d52:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8010d56:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8010d5a:	681a      	ldr	r2, [r3, #0]
 8010d5c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010d60:	685a      	ldr	r2, [r3, #4]
 8010d62:	6062      	str	r2, [r4, #4]
 8010d64:	bd10      	pop	{r4, pc}
	...

08010d68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8010d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d6c:	4b8f      	ldr	r3, [pc, #572]	; (8010fac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8010d6e:	b08f      	sub	sp, #60	; 0x3c
 8010d70:	ac0a      	add	r4, sp, #40	; 0x28
 8010d72:	e884 0006 	stmia.w	r4, {r1, r2}
 8010d76:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010d7a:	4b8d      	ldr	r3, [pc, #564]	; (8010fb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8010d7c:	4683      	mov	fp, r0
 8010d7e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010d82:	4620      	mov	r0, r4
 8010d84:	f7ff fdc9 	bl	801091a <_ZN8touchgfx4Rect10restrictToEss>
 8010d88:	4620      	mov	r0, r4
 8010d8a:	f7fc f8ba 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d8e:	2800      	cmp	r0, #0
 8010d90:	d16a      	bne.n	8010e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010d92:	9403      	str	r4, [sp, #12]
 8010d94:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8010d98:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8010d9c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010da0:	35a4      	adds	r5, #164	; 0xa4
 8010da2:	9301      	str	r3, [sp, #4]
 8010da4:	b15c      	cbz	r4, 8010dbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8010da6:	4629      	mov	r1, r5
 8010da8:	9803      	ldr	r0, [sp, #12]
 8010daa:	f7ff fe07 	bl	80109bc <_ZNK8touchgfx4Rect8includesERKS0_>
 8010dae:	3c01      	subs	r4, #1
 8010db0:	b118      	cbz	r0, 8010dba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8010db2:	b2a1      	uxth	r1, r4
 8010db4:	9801      	ldr	r0, [sp, #4]
 8010db6:	f7ff ffc3 	bl	8010d40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010dba:	3d08      	subs	r5, #8
 8010dbc:	e7f2      	b.n	8010da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8010dbe:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8010dc2:	f8cd a010 	str.w	sl, [sp, #16]
 8010dc6:	f10a 33ff 	add.w	r3, sl, #4294967295
 8010dca:	9302      	str	r3, [sp, #8]
 8010dcc:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8010dd0:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8010dd4:	9306      	str	r3, [sp, #24]
 8010dd6:	445c      	add	r4, fp
 8010dd8:	2500      	movs	r5, #0
 8010dda:	4626      	mov	r6, r4
 8010ddc:	f8cd a014 	str.w	sl, [sp, #20]
 8010de0:	462f      	mov	r7, r5
 8010de2:	9b05      	ldr	r3, [sp, #20]
 8010de4:	2b00      	cmp	r3, #0
 8010de6:	d073      	beq.n	8010ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8010de8:	9903      	ldr	r1, [sp, #12]
 8010dea:	4630      	mov	r0, r6
 8010dec:	f7ff fd73 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010df0:	b350      	cbz	r0, 8010e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010df2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8010df6:	f9b6 c000 	ldrsh.w	ip, [r6]
 8010dfa:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8010dfe:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010e02:	45e6      	cmp	lr, ip
 8010e04:	db33      	blt.n	8010e6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010e06:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8010e0a:	88b3      	ldrh	r3, [r6, #4]
 8010e0c:	4472      	add	r2, lr
 8010e0e:	4463      	add	r3, ip
 8010e10:	b212      	sxth	r2, r2
 8010e12:	b21b      	sxth	r3, r3
 8010e14:	429a      	cmp	r2, r3
 8010e16:	dc2a      	bgt.n	8010e6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010e18:	88f3      	ldrh	r3, [r6, #6]
 8010e1a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010e1e:	fa1f f289 	uxth.w	r2, r9
 8010e22:	4413      	add	r3, r2
 8010e24:	b29b      	uxth	r3, r3
 8010e26:	45c8      	cmp	r8, r9
 8010e28:	fa1f fc88 	uxth.w	ip, r8
 8010e2c:	fa0f fe83 	sxth.w	lr, r3
 8010e30:	db0f      	blt.n	8010e52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010e32:	eba3 030c 	sub.w	r3, r3, ip
 8010e36:	1ac9      	subs	r1, r1, r3
 8010e38:	b209      	sxth	r1, r1
 8010e3a:	2900      	cmp	r1, #0
 8010e3c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8010e40:	dd12      	ble.n	8010e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010e42:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8010e46:	4605      	mov	r5, r0
 8010e48:	9b05      	ldr	r3, [sp, #20]
 8010e4a:	3b01      	subs	r3, #1
 8010e4c:	9305      	str	r3, [sp, #20]
 8010e4e:	3e08      	subs	r6, #8
 8010e50:	e7c7      	b.n	8010de2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8010e52:	4461      	add	r1, ip
 8010e54:	b209      	sxth	r1, r1
 8010e56:	4571      	cmp	r1, lr
 8010e58:	dc38      	bgt.n	8010ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010e5a:	eba2 020c 	sub.w	r2, r2, ip
 8010e5e:	b212      	sxth	r2, r2
 8010e60:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8010e64:	2a00      	cmp	r2, #0
 8010e66:	dcee      	bgt.n	8010e46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010e68:	b00f      	add	sp, #60	; 0x3c
 8010e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e6e:	45c8      	cmp	r8, r9
 8010e70:	db2c      	blt.n	8010ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010e72:	88f3      	ldrh	r3, [r6, #6]
 8010e74:	4499      	add	r9, r3
 8010e76:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8010e7a:	4498      	add	r8, r3
 8010e7c:	fa0f f989 	sxth.w	r9, r9
 8010e80:	fa0f f888 	sxth.w	r8, r8
 8010e84:	45c1      	cmp	r9, r8
 8010e86:	db21      	blt.n	8010ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010e88:	88b3      	ldrh	r3, [r6, #4]
 8010e8a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8010e8e:	fa1f f28c 	uxth.w	r2, ip
 8010e92:	4413      	add	r3, r2
 8010e94:	b29b      	uxth	r3, r3
 8010e96:	45e6      	cmp	lr, ip
 8010e98:	fa1f f88e 	uxth.w	r8, lr
 8010e9c:	fa0f f983 	sxth.w	r9, r3
 8010ea0:	db0a      	blt.n	8010eb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8010ea2:	eba3 0308 	sub.w	r3, r3, r8
 8010ea6:	1ac9      	subs	r1, r1, r3
 8010ea8:	b209      	sxth	r1, r1
 8010eaa:	2900      	cmp	r1, #0
 8010eac:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8010eb0:	ddda      	ble.n	8010e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010eb2:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8010eb6:	e7c6      	b.n	8010e46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010eb8:	4441      	add	r1, r8
 8010eba:	b209      	sxth	r1, r1
 8010ebc:	4549      	cmp	r1, r9
 8010ebe:	dc05      	bgt.n	8010ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010ec0:	eba2 0208 	sub.w	r2, r2, r8
 8010ec4:	b212      	sxth	r2, r2
 8010ec6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8010eca:	e7cb      	b.n	8010e64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8010ecc:	4607      	mov	r7, r0
 8010ece:	e7bb      	b.n	8010e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010ed0:	2d00      	cmp	r5, #0
 8010ed2:	d181      	bne.n	8010dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8010ed4:	2f00      	cmp	r7, #0
 8010ed6:	f000 81dd 	beq.w	8011294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010eda:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8010ede:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8010ee2:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8010ee6:	b2b3      	uxth	r3, r6
 8010ee8:	9305      	str	r3, [sp, #20]
 8010eea:	9a05      	ldr	r2, [sp, #20]
 8010eec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8010ef0:	4413      	add	r3, r2
 8010ef2:	b2ba      	uxth	r2, r7
 8010ef4:	4492      	add	sl, r2
 8010ef6:	b29b      	uxth	r3, r3
 8010ef8:	fa1f fa8a 	uxth.w	sl, sl
 8010efc:	fa0f f883 	sxth.w	r8, r3
 8010f00:	fa0f f98a 	sxth.w	r9, sl
 8010f04:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010f08:	9b04      	ldr	r3, [sp, #16]
 8010f0a:	2b00      	cmp	r3, #0
 8010f0c:	d052      	beq.n	8010fb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8010f0e:	9903      	ldr	r1, [sp, #12]
 8010f10:	4620      	mov	r0, r4
 8010f12:	f7ff fce0 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010f16:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8010f1a:	b1c0      	cbz	r0, 8010f4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010f1c:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010f20:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010f24:	4576      	cmp	r6, lr
 8010f26:	dc22      	bgt.n	8010f6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010f28:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010f2c:	44f4      	add	ip, lr
 8010f2e:	fa0f fc8c 	sxth.w	ip, ip
 8010f32:	45e0      	cmp	r8, ip
 8010f34:	db1b      	blt.n	8010f6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010f36:	428f      	cmp	r7, r1
 8010f38:	fa1f fc81 	uxth.w	ip, r1
 8010f3c:	88e1      	ldrh	r1, [r4, #6]
 8010f3e:	dc0d      	bgt.n	8010f5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010f40:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010f44:	eba1 010c 	sub.w	r1, r1, ip
 8010f48:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010f4c:	80e1      	strh	r1, [r4, #6]
 8010f4e:	4628      	mov	r0, r5
 8010f50:	9904      	ldr	r1, [sp, #16]
 8010f52:	3901      	subs	r1, #1
 8010f54:	9104      	str	r1, [sp, #16]
 8010f56:	3c08      	subs	r4, #8
 8010f58:	4605      	mov	r5, r0
 8010f5a:	e7d3      	b.n	8010f04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8010f5c:	4461      	add	r1, ip
 8010f5e:	b209      	sxth	r1, r1
 8010f60:	4549      	cmp	r1, r9
 8010f62:	dcf5      	bgt.n	8010f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010f64:	eba2 0c0c 	sub.w	ip, r2, ip
 8010f68:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010f6c:	e7ef      	b.n	8010f4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010f6e:	428f      	cmp	r7, r1
 8010f70:	dcee      	bgt.n	8010f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010f72:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8010f76:	4461      	add	r1, ip
 8010f78:	b209      	sxth	r1, r1
 8010f7a:	4589      	cmp	r9, r1
 8010f7c:	dbe8      	blt.n	8010f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010f7e:	4576      	cmp	r6, lr
 8010f80:	fa1f fc8e 	uxth.w	ip, lr
 8010f84:	88a1      	ldrh	r1, [r4, #4]
 8010f86:	dc07      	bgt.n	8010f98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8010f88:	eba3 0c0c 	sub.w	ip, r3, ip
 8010f8c:	eba1 010c 	sub.w	r1, r1, ip
 8010f90:	f8a4 8000 	strh.w	r8, [r4]
 8010f94:	80a1      	strh	r1, [r4, #4]
 8010f96:	e7da      	b.n	8010f4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010f98:	4461      	add	r1, ip
 8010f9a:	b209      	sxth	r1, r1
 8010f9c:	4588      	cmp	r8, r1
 8010f9e:	dbd7      	blt.n	8010f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010fa0:	9905      	ldr	r1, [sp, #20]
 8010fa2:	eba1 0c0c 	sub.w	ip, r1, ip
 8010fa6:	f8a4 c004 	strh.w	ip, [r4, #4]
 8010faa:	e7d0      	b.n	8010f4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010fac:	20014fca 	.word	0x20014fca
 8010fb0:	20014fc8 	.word	0x20014fc8
 8010fb4:	2d00      	cmp	r5, #0
 8010fb6:	f000 816d 	beq.w	8011294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010fba:	9b06      	ldr	r3, [sp, #24]
 8010fbc:	445b      	add	r3, fp
 8010fbe:	461c      	mov	r4, r3
 8010fc0:	9b02      	ldr	r3, [sp, #8]
 8010fc2:	3301      	adds	r3, #1
 8010fc4:	f000 8166 	beq.w	8011294 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010fc8:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8010fcc:	4629      	mov	r1, r5
 8010fce:	9803      	ldr	r0, [sp, #12]
 8010fd0:	f7ff fcf4 	bl	80109bc <_ZNK8touchgfx4Rect8includesERKS0_>
 8010fd4:	b120      	cbz	r0, 8010fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8010fd6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010fda:	9801      	ldr	r0, [sp, #4]
 8010fdc:	f7ff feb0 	bl	8010d40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010fe0:	9903      	ldr	r1, [sp, #12]
 8010fe2:	4628      	mov	r0, r5
 8010fe4:	f7ff fc77 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010fe8:	2800      	cmp	r0, #0
 8010fea:	f000 809c 	beq.w	8011126 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010fee:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8010ff2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8010ff6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8010ffa:	9309      	str	r3, [sp, #36]	; 0x24
 8010ffc:	fa1f f189 	uxth.w	r1, r9
 8011000:	eb01 0c03 	add.w	ip, r1, r3
 8011004:	fa1f fa8c 	uxth.w	sl, ip
 8011008:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801100c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011010:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8011014:	b283      	uxth	r3, r0
 8011016:	eb03 050c 	add.w	r5, r3, ip
 801101a:	b2ad      	uxth	r5, r5
 801101c:	9505      	str	r5, [sp, #20]
 801101e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8011022:	9504      	str	r5, [sp, #16]
 8011024:	4548      	cmp	r0, r9
 8011026:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 801102a:	f340 8099 	ble.w	8011160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801102e:	1a5b      	subs	r3, r3, r1
 8011030:	b29b      	uxth	r3, r3
 8011032:	4596      	cmp	lr, r2
 8011034:	fa0f f08a 	sxth.w	r0, sl
 8011038:	b21e      	sxth	r6, r3
 801103a:	dd2e      	ble.n	801109a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 801103c:	9f02      	ldr	r7, [sp, #8]
 801103e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011042:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011046:	9f04      	ldr	r7, [sp, #16]
 8011048:	1a3f      	subs	r7, r7, r0
 801104a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801104e:	fa1f fe8e 	uxth.w	lr, lr
 8011052:	b292      	uxth	r2, r2
 8011054:	ebae 0102 	sub.w	r1, lr, r2
 8011058:	44a6      	add	lr, r4
 801105a:	4402      	add	r2, r0
 801105c:	b289      	uxth	r1, r1
 801105e:	fa0f fe8e 	sxth.w	lr, lr
 8011062:	b212      	sxth	r2, r2
 8011064:	b20d      	sxth	r5, r1
 8011066:	ebae 0202 	sub.w	r2, lr, r2
 801106a:	436f      	muls	r7, r5
 801106c:	4372      	muls	r2, r6
 801106e:	4297      	cmp	r7, r2
 8011070:	db09      	blt.n	8011086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8011072:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8011076:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 801107a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801107e:	449c      	add	ip, r3
 8011080:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011084:	e686      	b.n	8010d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011086:	4421      	add	r1, r4
 8011088:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 801108c:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8011090:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011094:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011098:	e67c      	b.n	8010d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801109a:	9f04      	ldr	r7, [sp, #16]
 801109c:	42b8      	cmp	r0, r7
 801109e:	da27      	bge.n	80110f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80110a0:	9902      	ldr	r1, [sp, #8]
 80110a2:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80110a6:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80110aa:	eb05 010e 	add.w	r1, r5, lr
 80110ae:	fa1f f881 	uxth.w	r8, r1
 80110b2:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80110b6:	4411      	add	r1, r2
 80110b8:	eba1 0108 	sub.w	r1, r1, r8
 80110bc:	b289      	uxth	r1, r1
 80110be:	fa0f f988 	sxth.w	r9, r8
 80110c2:	eba2 020e 	sub.w	r2, r2, lr
 80110c6:	fa0f f881 	sxth.w	r8, r1
 80110ca:	1a3f      	subs	r7, r7, r0
 80110cc:	4372      	muls	r2, r6
 80110ce:	fb08 f707 	mul.w	r7, r8, r7
 80110d2:	42ba      	cmp	r2, r7
 80110d4:	dc06      	bgt.n	80110e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80110d6:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80110da:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80110de:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80110e2:	e7ca      	b.n	801107a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80110e4:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80110e8:	4429      	add	r1, r5
 80110ea:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80110ee:	e651      	b.n	8010d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80110f0:	9805      	ldr	r0, [sp, #20]
 80110f2:	ebaa 0000 	sub.w	r0, sl, r0
 80110f6:	b280      	uxth	r0, r0
 80110f8:	2d06      	cmp	r5, #6
 80110fa:	fa0f fe80 	sxth.w	lr, r0
 80110fe:	d817      	bhi.n	8011130 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8011100:	9b04      	ldr	r3, [sp, #16]
 8011102:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8011106:	1c6b      	adds	r3, r5, #1
 8011108:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 801110c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8011110:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8011114:	9b01      	ldr	r3, [sp, #4]
 8011116:	9801      	ldr	r0, [sp, #4]
 8011118:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801111c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8011120:	805a      	strh	r2, [r3, #2]
 8011122:	809e      	strh	r6, [r3, #4]
 8011124:	80d9      	strh	r1, [r3, #6]
 8011126:	9b02      	ldr	r3, [sp, #8]
 8011128:	3b01      	subs	r3, #1
 801112a:	9302      	str	r3, [sp, #8]
 801112c:	3c08      	subs	r4, #8
 801112e:	e747      	b.n	8010fc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8011130:	9a02      	ldr	r2, [sp, #8]
 8011132:	45b6      	cmp	lr, r6
 8011134:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011138:	db0d      	blt.n	8011156 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801113a:	449c      	add	ip, r3
 801113c:	fa1f fc8c 	uxth.w	ip, ip
 8011140:	445a      	add	r2, fp
 8011142:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011146:	448c      	add	ip, r1
 8011148:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801114c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8011150:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8011154:	e61e      	b.n	8010d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011156:	445a      	add	r2, fp
 8011158:	4484      	add	ip, r0
 801115a:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801115e:	e78f      	b.n	8011080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8011160:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011164:	fa1f f18e 	uxth.w	r1, lr
 8011168:	eb01 0806 	add.w	r8, r1, r6
 801116c:	b293      	uxth	r3, r2
 801116e:	fa1f f888 	uxth.w	r8, r8
 8011172:	9306      	str	r3, [sp, #24]
 8011174:	fa0f f388 	sxth.w	r3, r8
 8011178:	9307      	str	r3, [sp, #28]
 801117a:	9f06      	ldr	r7, [sp, #24]
 801117c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8011180:	443b      	add	r3, r7
 8011182:	b29b      	uxth	r3, r3
 8011184:	4596      	cmp	lr, r2
 8011186:	9308      	str	r3, [sp, #32]
 8011188:	da24      	bge.n	80111d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801118a:	9905      	ldr	r1, [sp, #20]
 801118c:	eba3 0308 	sub.w	r3, r3, r8
 8011190:	ebaa 0401 	sub.w	r4, sl, r1
 8011194:	b2a4      	uxth	r4, r4
 8011196:	b29b      	uxth	r3, r3
 8011198:	b225      	sxth	r5, r4
 801119a:	b219      	sxth	r1, r3
 801119c:	eba2 020e 	sub.w	r2, r2, lr
 80111a0:	eba9 0000 	sub.w	r0, r9, r0
 80111a4:	436a      	muls	r2, r5
 80111a6:	4348      	muls	r0, r1
 80111a8:	4282      	cmp	r2, r0
 80111aa:	9a02      	ldr	r2, [sp, #8]
 80111ac:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80111b0:	445a      	add	r2, fp
 80111b2:	dc06      	bgt.n	80111c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80111b4:	9b07      	ldr	r3, [sp, #28]
 80111b6:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80111ba:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80111be:	44a4      	add	ip, r4
 80111c0:	e75e      	b.n	8011080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80111c2:	9904      	ldr	r1, [sp, #16]
 80111c4:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80111c8:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80111cc:	4433      	add	r3, r6
 80111ce:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80111d2:	e5df      	b.n	8010d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80111d4:	9f06      	ldr	r7, [sp, #24]
 80111d6:	9b04      	ldr	r3, [sp, #16]
 80111d8:	1bc9      	subs	r1, r1, r7
 80111da:	fa0f f78a 	sxth.w	r7, sl
 80111de:	b289      	uxth	r1, r1
 80111e0:	429f      	cmp	r7, r3
 80111e2:	fa0f fe81 	sxth.w	lr, r1
 80111e6:	dd23      	ble.n	8011230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80111e8:	9a05      	ldr	r2, [sp, #20]
 80111ea:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80111ee:	9d07      	ldr	r5, [sp, #28]
 80111f0:	ebaa 0202 	sub.w	r2, sl, r2
 80111f4:	b292      	uxth	r2, r2
 80111f6:	eba5 0a03 	sub.w	sl, r5, r3
 80111fa:	b214      	sxth	r4, r2
 80111fc:	eba9 0000 	sub.w	r0, r9, r0
 8011200:	9b02      	ldr	r3, [sp, #8]
 8011202:	fb0e f000 	mul.w	r0, lr, r0
 8011206:	fb04 fa0a 	mul.w	sl, r4, sl
 801120a:	00db      	lsls	r3, r3, #3
 801120c:	4550      	cmp	r0, sl
 801120e:	445b      	add	r3, fp
 8011210:	db03      	blt.n	801121a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8011212:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8011216:	4494      	add	ip, r2
 8011218:	e732      	b.n	8011080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801121a:	9a04      	ldr	r2, [sp, #16]
 801121c:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8011220:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8011224:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8011228:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801122c:	4431      	add	r1, r6
 801122e:	e75c      	b.n	80110ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8011230:	9b08      	ldr	r3, [sp, #32]
 8011232:	eba3 0308 	sub.w	r3, r3, r8
 8011236:	b29b      	uxth	r3, r3
 8011238:	2d06      	cmp	r5, #6
 801123a:	b218      	sxth	r0, r3
 801123c:	d813      	bhi.n	8011266 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801123e:	9b07      	ldr	r3, [sp, #28]
 8011240:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8011244:	1c6b      	adds	r3, r5, #1
 8011246:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 801124a:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801124e:	9b01      	ldr	r3, [sp, #4]
 8011250:	9901      	ldr	r1, [sp, #4]
 8011252:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011256:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801125a:	805a      	strh	r2, [r3, #2]
 801125c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801125e:	809a      	strh	r2, [r3, #4]
 8011260:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011264:	e75f      	b.n	8011126 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8011266:	9c02      	ldr	r4, [sp, #8]
 8011268:	4570      	cmp	r0, lr
 801126a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801126e:	db0d      	blt.n	801128c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8011270:	4431      	add	r1, r6
 8011272:	9b06      	ldr	r3, [sp, #24]
 8011274:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8011278:	b289      	uxth	r1, r1
 801127a:	445c      	add	r4, fp
 801127c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011280:	4419      	add	r1, r3
 8011282:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8011286:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 801128a:	e583      	b.n	8010d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801128c:	445c      	add	r4, fp
 801128e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8011292:	e79b      	b.n	80111cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8011294:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8011298:	1e65      	subs	r5, r4, #1
 801129a:	b2ad      	uxth	r5, r5
 801129c:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80112a0:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80112a4:	42b5      	cmp	r5, r6
 80112a6:	d044      	beq.n	8011332 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80112a8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80112ac:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80112b0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80112b4:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80112b8:	4282      	cmp	r2, r0
 80112ba:	d11f      	bne.n	80112fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80112bc:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80112c0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80112c4:	459c      	cmp	ip, r3
 80112c6:	d119      	bne.n	80112fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80112c8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80112cc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80112d0:	19d8      	adds	r0, r3, r7
 80112d2:	b200      	sxth	r0, r0
 80112d4:	4288      	cmp	r0, r1
 80112d6:	d109      	bne.n	80112ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80112d8:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80112dc:	4413      	add	r3, r2
 80112de:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80112e2:	4629      	mov	r1, r5
 80112e4:	9801      	ldr	r0, [sp, #4]
 80112e6:	f7ff fd2b 	bl	8010d40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80112ea:	e003      	b.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80112ec:	4411      	add	r1, r2
 80112ee:	b209      	sxth	r1, r1
 80112f0:	42b9      	cmp	r1, r7
 80112f2:	d0f3      	beq.n	80112dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80112f4:	3d01      	subs	r5, #1
 80112f6:	b2ad      	uxth	r5, r5
 80112f8:	3c08      	subs	r4, #8
 80112fa:	e7d3      	b.n	80112a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80112fc:	42b9      	cmp	r1, r7
 80112fe:	d1f9      	bne.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8011300:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8011304:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8011308:	4299      	cmp	r1, r3
 801130a:	d1f3      	bne.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801130c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8011310:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011314:	181f      	adds	r7, r3, r0
 8011316:	b23f      	sxth	r7, r7
 8011318:	42ba      	cmp	r2, r7
 801131a:	d105      	bne.n	8011328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 801131c:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8011320:	440b      	add	r3, r1
 8011322:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011326:	e7dc      	b.n	80112e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8011328:	440a      	add	r2, r1
 801132a:	b212      	sxth	r2, r2
 801132c:	4290      	cmp	r0, r2
 801132e:	d1e1      	bne.n	80112f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8011330:	e7f6      	b.n	8011320 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8011332:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8011336:	2e07      	cmp	r6, #7
 8011338:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801133c:	d812      	bhi.n	8011364 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801133e:	1c75      	adds	r5, r6, #1
 8011340:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8011344:	9d01      	ldr	r5, [sp, #4]
 8011346:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801134a:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801134e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8011352:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8011356:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801135a:	442c      	add	r4, r5
 801135c:	8061      	strh	r1, [r4, #2]
 801135e:	80a2      	strh	r2, [r4, #4]
 8011360:	80e3      	strh	r3, [r4, #6]
 8011362:	e581      	b.n	8010e68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011364:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8011368:	3e01      	subs	r6, #1
 801136a:	445c      	add	r4, fp
 801136c:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8011370:	f04f 37ff 	mov.w	r7, #4294967295
 8011374:	2500      	movs	r5, #0
 8011376:	9305      	str	r3, [sp, #20]
 8011378:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801137c:	9302      	str	r3, [sp, #8]
 801137e:	1e72      	subs	r2, r6, #1
 8011380:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8011384:	9304      	str	r3, [sp, #16]
 8011386:	4691      	mov	r9, r2
 8011388:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 801138c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011390:	bf14      	ite	ne
 8011392:	9905      	ldrne	r1, [sp, #20]
 8011394:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8011398:	6818      	ldr	r0, [r3, #0]
 801139a:	9207      	str	r2, [sp, #28]
 801139c:	bf18      	it	ne
 801139e:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80113a2:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80113a6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80113aa:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80113ae:	9306      	str	r3, [sp, #24]
 80113b0:	fb18 f801 	smulbb	r8, r8, r1
 80113b4:	6859      	ldr	r1, [r3, #4]
 80113b6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80113ba:	4671      	mov	r1, lr
 80113bc:	a80c      	add	r0, sp, #48	; 0x30
 80113be:	f7ff fb23 	bl	8010a08 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80113c2:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80113c6:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80113ca:	9b04      	ldr	r3, [sp, #16]
 80113cc:	9a02      	ldr	r2, [sp, #8]
 80113ce:	fb10 f001 	smulbb	r0, r0, r1
 80113d2:	fb02 8803 	mla	r8, r2, r3, r8
 80113d6:	eba0 0108 	sub.w	r1, r0, r8
 80113da:	f04f 0c08 	mov.w	ip, #8
 80113de:	fb90 f0fc 	sdiv	r0, r0, ip
 80113e2:	4288      	cmp	r0, r1
 80113e4:	dc20      	bgt.n	8011428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80113e6:	4551      	cmp	r1, sl
 80113e8:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80113ec:	da03      	bge.n	80113f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80113ee:	b1d9      	cbz	r1, 8011428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80113f0:	468a      	mov	sl, r1
 80113f2:	464f      	mov	r7, r9
 80113f4:	4635      	mov	r5, r6
 80113f6:	f109 39ff 	add.w	r9, r9, #4294967295
 80113fa:	f119 0f02 	cmn.w	r9, #2
 80113fe:	d1c5      	bne.n	801138c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8011400:	4616      	mov	r6, r2
 8011402:	3201      	adds	r2, #1
 8011404:	f1a4 0408 	sub.w	r4, r4, #8
 8011408:	d1b6      	bne.n	8011378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 801140a:	9b01      	ldr	r3, [sp, #4]
 801140c:	b2ac      	uxth	r4, r5
 801140e:	00ed      	lsls	r5, r5, #3
 8011410:	1958      	adds	r0, r3, r5
 8011412:	1c7b      	adds	r3, r7, #1
 8011414:	d10b      	bne.n	801142e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8011416:	4601      	mov	r1, r0
 8011418:	9803      	ldr	r0, [sp, #12]
 801141a:	f7ff faf5 	bl	8010a08 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801141e:	4621      	mov	r1, r4
 8011420:	9801      	ldr	r0, [sp, #4]
 8011422:	f7ff fc8d 	bl	8010d40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011426:	e4b5      	b.n	8010d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011428:	464f      	mov	r7, r9
 801142a:	4635      	mov	r5, r6
 801142c:	e7ed      	b.n	801140a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801142e:	9b01      	ldr	r3, [sp, #4]
 8011430:	00ff      	lsls	r7, r7, #3
 8011432:	19d9      	adds	r1, r3, r7
 8011434:	f7ff fae8 	bl	8010a08 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011438:	9b03      	ldr	r3, [sp, #12]
 801143a:	cb03      	ldmia	r3!, {r0, r1}
 801143c:	445f      	add	r7, fp
 801143e:	445d      	add	r5, fp
 8011440:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8011444:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8011448:	f855 0fac 	ldr.w	r0, [r5, #172]!
 801144c:	9b03      	ldr	r3, [sp, #12]
 801144e:	6869      	ldr	r1, [r5, #4]
 8011450:	c303      	stmia	r3!, {r0, r1}
 8011452:	e7e4      	b.n	801141e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08011454 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011458:	f500 7698 	add.w	r6, r0, #304	; 0x130
 801145c:	b09b      	sub	sp, #108	; 0x6c
 801145e:	4604      	mov	r4, r0
 8011460:	4630      	mov	r0, r6
 8011462:	f7fb fd4e 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011466:	4605      	mov	r5, r0
 8011468:	b948      	cbnz	r0, 801147e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801146a:	6823      	ldr	r3, [r4, #0]
 801146c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011470:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011472:	4620      	mov	r0, r4
 8011474:	4798      	blx	r3
 8011476:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801147a:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801147e:	4bc6      	ldr	r3, [pc, #792]	; (8011798 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8011480:	681b      	ldr	r3, [r3, #0]
 8011482:	2b00      	cmp	r3, #0
 8011484:	d03f      	beq.n	8011506 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8011486:	4dc5      	ldr	r5, [pc, #788]	; (801179c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8011488:	4628      	mov	r0, r5
 801148a:	f7fb fd3a 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801148e:	4606      	mov	r6, r0
 8011490:	2800      	cmp	r0, #0
 8011492:	d138      	bne.n	8011506 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8011494:	4628      	mov	r0, r5
 8011496:	f7ff f92f 	bl	80106f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801149a:	6823      	ldr	r3, [r4, #0]
 801149c:	6829      	ldr	r1, [r5, #0]
 801149e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80114a0:	686a      	ldr	r2, [r5, #4]
 80114a2:	4620      	mov	r0, r4
 80114a4:	4798      	blx	r3
 80114a6:	802e      	strh	r6, [r5, #0]
 80114a8:	806e      	strh	r6, [r5, #2]
 80114aa:	80ae      	strh	r6, [r5, #4]
 80114ac:	80ee      	strh	r6, [r5, #6]
 80114ae:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80114b2:	4dbb      	ldr	r5, [pc, #748]	; (80117a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80114b4:	4640      	mov	r0, r8
 80114b6:	f7ff fbeb 	bl	8010c90 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80114ba:	882e      	ldrh	r6, [r5, #0]
 80114bc:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80114c0:	4633      	mov	r3, r6
 80114c2:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80114c6:	42bb      	cmp	r3, r7
 80114c8:	d224      	bcs.n	8011514 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80114ca:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80114ce:	2907      	cmp	r1, #7
 80114d0:	d816      	bhi.n	8011500 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80114d2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80114d6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80114da:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80114de:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80114e2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80114e6:	1c4a      	adds	r2, r1, #1
 80114e8:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80114ec:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80114f0:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80114f4:	f8a2 a002 	strh.w	sl, [r2, #2]
 80114f8:	f8a2 e004 	strh.w	lr, [r2, #4]
 80114fc:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011500:	3301      	adds	r3, #1
 8011502:	b29b      	uxth	r3, r3
 8011504:	e7df      	b.n	80114c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8011506:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801150a:	2b00      	cmp	r3, #0
 801150c:	d1cf      	bne.n	80114ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801150e:	b01b      	add	sp, #108	; 0x6c
 8011510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011514:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8011518:	42b3      	cmp	r3, r6
 801151a:	d90c      	bls.n	8011536 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 801151c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8011520:	6822      	ldr	r2, [r4, #0]
 8011522:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8011526:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8011528:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 801152c:	4620      	mov	r0, r4
 801152e:	3601      	adds	r6, #1
 8011530:	47b8      	blx	r7
 8011532:	b2b6      	uxth	r6, r6
 8011534:	e7ee      	b.n	8011514 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8011536:	4a9b      	ldr	r2, [pc, #620]	; (80117a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011538:	6813      	ldr	r3, [r2, #0]
 801153a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801153e:	2b01      	cmp	r3, #1
 8011540:	4691      	mov	r9, r2
 8011542:	f040 80e2 	bne.w	801170a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8011546:	8829      	ldrh	r1, [r5, #0]
 8011548:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801154c:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8011550:	33ae      	adds	r3, #174	; 0xae
 8011552:	2600      	movs	r6, #0
 8011554:	428f      	cmp	r7, r1
 8011556:	f103 0308 	add.w	r3, r3, #8
 801155a:	dd0a      	ble.n	8011572 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 801155c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8011560:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8011564:	4402      	add	r2, r0
 8011566:	b212      	sxth	r2, r2
 8011568:	4296      	cmp	r6, r2
 801156a:	bfb8      	it	lt
 801156c:	4616      	movlt	r6, r2
 801156e:	3101      	adds	r1, #1
 8011570:	e7f0      	b.n	8011554 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8011572:	4b8d      	ldr	r3, [pc, #564]	; (80117a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8011574:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80117a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8011578:	881b      	ldrh	r3, [r3, #0]
 801157a:	2b0f      	cmp	r3, #15
 801157c:	bf88      	it	hi
 801157e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8011582:	f04f 0300 	mov.w	r3, #0
 8011586:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801158a:	bf98      	it	ls
 801158c:	f04f 0b01 	movls.w	fp, #1
 8011590:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8011594:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8011598:	4b82      	ldr	r3, [pc, #520]	; (80117a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801159a:	4438      	add	r0, r7
 801159c:	b207      	sxth	r7, r0
 801159e:	6818      	ldr	r0, [r3, #0]
 80115a0:	42b7      	cmp	r7, r6
 80115a2:	6803      	ldr	r3, [r0, #0]
 80115a4:	f280 8083 	bge.w	80116ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80115a8:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80115ac:	4798      	blx	r3
 80115ae:	eb07 030b 	add.w	r3, r7, fp
 80115b2:	4298      	cmp	r0, r3
 80115b4:	da07      	bge.n	80115c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80115b6:	42b0      	cmp	r0, r6
 80115b8:	da05      	bge.n	80115c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80115ba:	4287      	cmp	r7, r0
 80115bc:	dd6c      	ble.n	8011698 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80115be:	2f00      	cmp	r7, #0
 80115c0:	dd6a      	ble.n	8011698 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80115c2:	4630      	mov	r0, r6
 80115c4:	e004      	b.n	80115d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80115c6:	4287      	cmp	r7, r0
 80115c8:	dcfb      	bgt.n	80115c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80115ca:	42b0      	cmp	r0, r6
 80115cc:	bfa8      	it	ge
 80115ce:	4630      	movge	r0, r6
 80115d0:	4b76      	ldr	r3, [pc, #472]	; (80117ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80115d2:	f8ad 7016 	strh.w	r7, [sp, #22]
 80115d6:	1bc0      	subs	r0, r0, r7
 80115d8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80115dc:	882f      	ldrh	r7, [r5, #0]
 80115de:	f8ad 3018 	strh.w	r3, [sp, #24]
 80115e2:	2200      	movs	r2, #0
 80115e4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80115e8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80115ec:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80115f0:	42bb      	cmp	r3, r7
 80115f2:	d9cd      	bls.n	8011590 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80115f4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80115f8:	ab07      	add	r3, sp, #28
 80115fa:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80115fe:	6851      	ldr	r1, [r2, #4]
 8011600:	c303      	stmia	r3!, {r0, r1}
 8011602:	a905      	add	r1, sp, #20
 8011604:	a807      	add	r0, sp, #28
 8011606:	f7ff f966 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801160a:	2800      	cmp	r0, #0
 801160c:	d04c      	beq.n	80116a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801160e:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011612:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011616:	f8bd a020 	ldrh.w	sl, [sp, #32]
 801161a:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801161e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011622:	9302      	str	r3, [sp, #8]
 8011624:	4686      	mov	lr, r0
 8011626:	4290      	cmp	r0, r2
 8011628:	4450      	add	r0, sl
 801162a:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801162e:	bfb8      	it	lt
 8011630:	4696      	movlt	lr, r2
 8011632:	4452      	add	r2, sl
 8011634:	4299      	cmp	r1, r3
 8011636:	b280      	uxth	r0, r0
 8011638:	b292      	uxth	r2, r2
 801163a:	468c      	mov	ip, r1
 801163c:	fa0f fa82 	sxth.w	sl, r2
 8011640:	bfb8      	it	lt
 8011642:	469c      	movlt	ip, r3
 8011644:	b203      	sxth	r3, r0
 8011646:	4553      	cmp	r3, sl
 8011648:	bfb8      	it	lt
 801164a:	4602      	movlt	r2, r0
 801164c:	eba2 020e 	sub.w	r2, r2, lr
 8011650:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011654:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011658:	9b02      	ldr	r3, [sp, #8]
 801165a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801165e:	4411      	add	r1, r2
 8011660:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011664:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011668:	4413      	add	r3, r2
 801166a:	b289      	uxth	r1, r1
 801166c:	b29b      	uxth	r3, r3
 801166e:	b208      	sxth	r0, r1
 8011670:	b21a      	sxth	r2, r3
 8011672:	4290      	cmp	r0, r2
 8011674:	bfb8      	it	lt
 8011676:	460b      	movlt	r3, r1
 8011678:	eba3 030c 	sub.w	r3, r3, ip
 801167c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011680:	a807      	add	r0, sp, #28
 8011682:	f7fb fc3e 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011686:	b920      	cbnz	r0, 8011692 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011688:	6823      	ldr	r3, [r4, #0]
 801168a:	a907      	add	r1, sp, #28
 801168c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801168e:	4620      	mov	r0, r4
 8011690:	4798      	blx	r3
 8011692:	3701      	adds	r7, #1
 8011694:	b2bf      	uxth	r7, r7
 8011696:	e7a9      	b.n	80115ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011698:	f8d9 0000 	ldr.w	r0, [r9]
 801169c:	6803      	ldr	r3, [r0, #0]
 801169e:	2101      	movs	r1, #1
 80116a0:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80116a4:	4798      	blx	r3
 80116a6:	e773      	b.n	8011590 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80116a8:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80116ac:	e7e8      	b.n	8011680 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80116ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80116b0:	4798      	blx	r3
 80116b2:	4b3f      	ldr	r3, [pc, #252]	; (80117b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80116b4:	781b      	ldrb	r3, [r3, #0]
 80116b6:	2b00      	cmp	r3, #0
 80116b8:	f43f af29 	beq.w	801150e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80116bc:	2300      	movs	r3, #0
 80116be:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80116c2:	882b      	ldrh	r3, [r5, #0]
 80116c4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80116c8:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80116cc:	42ab      	cmp	r3, r5
 80116ce:	f4bf af1e 	bcs.w	801150e <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80116d2:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80116d6:	2907      	cmp	r1, #7
 80116d8:	d814      	bhi.n	8011704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80116da:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80116de:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80116e2:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80116e6:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80116ea:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80116ee:	1c4a      	adds	r2, r1, #1
 80116f0:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80116f4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80116f8:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80116fc:	f8a2 c002 	strh.w	ip, [r2, #2]
 8011700:	8097      	strh	r7, [r2, #4]
 8011702:	80d6      	strh	r6, [r2, #6]
 8011704:	3301      	adds	r3, #1
 8011706:	b29b      	uxth	r3, r3
 8011708:	e7e0      	b.n	80116cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 801170a:	2b02      	cmp	r3, #2
 801170c:	f040 8133 	bne.w	8011976 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8011710:	4b28      	ldr	r3, [pc, #160]	; (80117b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011712:	781b      	ldrb	r3, [r3, #0]
 8011714:	2b01      	cmp	r3, #1
 8011716:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 801171a:	f000 8098 	beq.w	801184e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801171e:	882a      	ldrh	r2, [r5, #0]
 8011720:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8011724:	3201      	adds	r2, #1
 8011726:	b292      	uxth	r2, r2
 8011728:	2900      	cmp	r1, #0
 801172a:	d0c2      	beq.n	80116b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801172c:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8011730:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8011734:	441e      	add	r6, r3
 8011736:	b236      	sxth	r6, r6
 8011738:	4694      	mov	ip, r2
 801173a:	f04f 0900 	mov.w	r9, #0
 801173e:	fa1f f38c 	uxth.w	r3, ip
 8011742:	4299      	cmp	r1, r3
 8011744:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8011748:	f240 80bf 	bls.w	80118ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 801174c:	4427      	add	r7, r4
 801174e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8011752:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8011756:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 801175a:	4283      	cmp	r3, r0
 801175c:	f340 80a1 	ble.w	80118a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8011760:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8011764:	4406      	add	r6, r0
 8011766:	b236      	sxth	r6, r6
 8011768:	429e      	cmp	r6, r3
 801176a:	bfa8      	it	ge
 801176c:	461e      	movge	r6, r3
 801176e:	46e1      	mov	r9, ip
 8011770:	f10c 0c01 	add.w	ip, ip, #1
 8011774:	e7e3      	b.n	801173e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8011776:	d10a      	bne.n	801178e <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8011778:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 801177c:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8011780:	4562      	cmp	r2, ip
 8011782:	bfb8      	it	lt
 8011784:	4662      	movlt	r2, ip
 8011786:	4288      	cmp	r0, r1
 8011788:	bfb8      	it	lt
 801178a:	461f      	movlt	r7, r3
 801178c:	e087      	b.n	801189e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801178e:	428a      	cmp	r2, r1
 8011790:	bfb8      	it	lt
 8011792:	460a      	movlt	r2, r1
 8011794:	e083      	b.n	801189e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8011796:	bf00      	nop
 8011798:	2001500c 	.word	0x2001500c
 801179c:	20015018 	.word	0x20015018
 80117a0:	20000084 	.word	0x20000084
 80117a4:	20014fd4 	.word	0x20014fd4
 80117a8:	20014fca 	.word	0x20014fca
 80117ac:	20014fc8 	.word	0x20014fc8
 80117b0:	20014fd2 	.word	0x20014fd2
 80117b4:	20014fcc 	.word	0x20014fcc
 80117b8:	19a1      	adds	r1, r4, r6
 80117ba:	ab07      	add	r3, sp, #28
 80117bc:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80117c0:	6849      	ldr	r1, [r1, #4]
 80117c2:	c303      	stmia	r3!, {r0, r1}
 80117c4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80117c8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80117cc:	2b13      	cmp	r3, #19
 80117ce:	bfd8      	it	le
 80117d0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80117d4:	f8ad 201c 	strh.w	r2, [sp, #28]
 80117d8:	440b      	add	r3, r1
 80117da:	1a9b      	subs	r3, r3, r2
 80117dc:	a807      	add	r0, sp, #28
 80117de:	f8ad 3020 	strh.w	r3, [sp, #32]
 80117e2:	f7fe ffa3 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80117e6:	a807      	add	r0, sp, #28
 80117e8:	f7fb fb8b 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80117ec:	bb78      	cbnz	r0, 801184e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80117ee:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80117f2:	f8d9 0000 	ldr.w	r0, [r9]
 80117f6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80117fa:	f8d0 e000 	ldr.w	lr, [r0]
 80117fe:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011802:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011806:	f1bc 0f14 	cmp.w	ip, #20
 801180a:	bfa8      	it	ge
 801180c:	f04f 0c14 	movge.w	ip, #20
 8011810:	fa1f fc8c 	uxth.w	ip, ip
 8011814:	f8cd c000 	str.w	ip, [sp]
 8011818:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 801181c:	47d8      	blx	fp
 801181e:	4683      	mov	fp, r0
 8011820:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011824:	a807      	add	r0, sp, #28
 8011826:	f7fe ff67 	bl	80106f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801182a:	6823      	ldr	r3, [r4, #0]
 801182c:	4426      	add	r6, r4
 801182e:	4620      	mov	r0, r4
 8011830:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011832:	a907      	add	r1, sp, #28
 8011834:	4798      	blx	r3
 8011836:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801183a:	eba0 000b 	sub.w	r0, r0, fp
 801183e:	b200      	sxth	r0, r0
 8011840:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8011844:	b918      	cbnz	r0, 801184e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8011846:	b2b9      	uxth	r1, r7
 8011848:	4650      	mov	r0, sl
 801184a:	f7ff fa79 	bl	8010d40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801184e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8011852:	f1bb 0f00 	cmp.w	fp, #0
 8011856:	f43f af2c 	beq.w	80116b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801185a:	882b      	ldrh	r3, [r5, #0]
 801185c:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8011860:	3301      	adds	r3, #1
 8011862:	b29b      	uxth	r3, r3
 8011864:	2700      	movs	r7, #0
 8011866:	b299      	uxth	r1, r3
 8011868:	458b      	cmp	fp, r1
 801186a:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801186e:	d9a3      	bls.n	80117b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8011870:	4426      	add	r6, r4
 8011872:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8011876:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 801187a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801187e:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8011882:	4408      	add	r0, r1
 8011884:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8011888:	4461      	add	r1, ip
 801188a:	b200      	sxth	r0, r0
 801188c:	b209      	sxth	r1, r1
 801188e:	4288      	cmp	r0, r1
 8011890:	f6bf af71 	bge.w	8011776 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8011894:	4584      	cmp	ip, r0
 8011896:	4662      	mov	r2, ip
 8011898:	461f      	mov	r7, r3
 801189a:	bfb8      	it	lt
 801189c:	4602      	movlt	r2, r0
 801189e:	3301      	adds	r3, #1
 80118a0:	e7e1      	b.n	8011866 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80118a2:	d10e      	bne.n	80118c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80118a4:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80118a8:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80118ac:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80118b0:	4473      	add	r3, lr
 80118b2:	b21b      	sxth	r3, r3
 80118b4:	429e      	cmp	r6, r3
 80118b6:	bfa8      	it	ge
 80118b8:	461e      	movge	r6, r3
 80118ba:	4287      	cmp	r7, r0
 80118bc:	bfb8      	it	lt
 80118be:	46e1      	movlt	r9, ip
 80118c0:	e756      	b.n	8011770 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80118c2:	4286      	cmp	r6, r0
 80118c4:	bfa8      	it	ge
 80118c6:	4606      	movge	r6, r0
 80118c8:	e752      	b.n	8011770 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80118ca:	eb0a 0007 	add.w	r0, sl, r7
 80118ce:	4427      	add	r7, r4
 80118d0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80118d4:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80118d8:	f1bb 0f13 	cmp.w	fp, #19
 80118dc:	bfde      	ittt	le
 80118de:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80118e2:	445e      	addle	r6, fp
 80118e4:	b236      	sxthle	r6, r6
 80118e6:	f7fb fb0c 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80118ea:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80118ee:	2800      	cmp	r0, #0
 80118f0:	f47f af1a 	bne.w	8011728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80118f4:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80118f8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80118fc:	482a      	ldr	r0, [pc, #168]	; (80119a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80118fe:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8011902:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8011906:	6800      	ldr	r0, [r0, #0]
 8011908:	f8ad 101c 	strh.w	r1, [sp, #28]
 801190c:	1ab6      	subs	r6, r6, r2
 801190e:	2e14      	cmp	r6, #20
 8011910:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011914:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011918:	bfa8      	it	ge
 801191a:	2614      	movge	r6, #20
 801191c:	f8d0 c000 	ldr.w	ip, [r0]
 8011920:	b2b6      	uxth	r6, r6
 8011922:	fa1f fb8b 	uxth.w	fp, fp
 8011926:	455e      	cmp	r6, fp
 8011928:	bf94      	ite	ls
 801192a:	9600      	strls	r6, [sp, #0]
 801192c:	f8cd b000 	strhi.w	fp, [sp]
 8011930:	b292      	uxth	r2, r2
 8011932:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8011936:	b29b      	uxth	r3, r3
 8011938:	b289      	uxth	r1, r1
 801193a:	47b0      	blx	r6
 801193c:	6823      	ldr	r3, [r4, #0]
 801193e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011942:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011944:	a907      	add	r1, sp, #28
 8011946:	4620      	mov	r0, r4
 8011948:	4798      	blx	r3
 801194a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801194e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8011952:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8011956:	1a5b      	subs	r3, r3, r1
 8011958:	440a      	add	r2, r1
 801195a:	b21b      	sxth	r3, r3
 801195c:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8011960:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8011964:	2b00      	cmp	r3, #0
 8011966:	f47f aeda 	bne.w	801171e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801196a:	fa1f f189 	uxth.w	r1, r9
 801196e:	4650      	mov	r0, sl
 8011970:	f7ff f9e6 	bl	8010d40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011974:	e6d3      	b.n	801171e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8011976:	882e      	ldrh	r6, [r5, #0]
 8011978:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801197c:	42b3      	cmp	r3, r6
 801197e:	f67f ae98 	bls.w	80116b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011982:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8011986:	ab07      	add	r3, sp, #28
 8011988:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801198c:	6851      	ldr	r1, [r2, #4]
 801198e:	c303      	stmia	r3!, {r0, r1}
 8011990:	a807      	add	r0, sp, #28
 8011992:	f7fb fab6 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011996:	b920      	cbnz	r0, 80119a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8011998:	6823      	ldr	r3, [r4, #0]
 801199a:	a907      	add	r1, sp, #28
 801199c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801199e:	4620      	mov	r0, r4
 80119a0:	4798      	blx	r3
 80119a2:	3601      	adds	r6, #1
 80119a4:	b2b6      	uxth	r6, r6
 80119a6:	e7e7      	b.n	8011978 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80119a8:	20014fd4 	.word	0x20014fd4

080119ac <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80119ac:	4b03      	ldr	r3, [pc, #12]	; (80119bc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80119ae:	2200      	movs	r2, #0
 80119b0:	801a      	strh	r2, [r3, #0]
 80119b2:	805a      	strh	r2, [r3, #2]
 80119b4:	809a      	strh	r2, [r3, #4]
 80119b6:	80da      	strh	r2, [r3, #6]
 80119b8:	4770      	bx	lr
 80119ba:	bf00      	nop
 80119bc:	20015018 	.word	0x20015018

080119c0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80119c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119c4:	4606      	mov	r6, r0
 80119c6:	b09d      	sub	sp, #116	; 0x74
 80119c8:	a803      	add	r0, sp, #12
 80119ca:	4614      	mov	r4, r2
 80119cc:	468a      	mov	sl, r1
 80119ce:	461d      	mov	r5, r3
 80119d0:	f000 fe88 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 80119d4:	6833      	ldr	r3, [r6, #0]
 80119d6:	4630      	mov	r0, r6
 80119d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80119da:	4798      	blx	r3
 80119dc:	6833      	ldr	r3, [r6, #0]
 80119de:	4607      	mov	r7, r0
 80119e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80119e2:	4630      	mov	r0, r6
 80119e4:	4798      	blx	r3
 80119e6:	462a      	mov	r2, r5
 80119e8:	9000      	str	r0, [sp, #0]
 80119ea:	4621      	mov	r1, r4
 80119ec:	463b      	mov	r3, r7
 80119ee:	a803      	add	r0, sp, #12
 80119f0:	f000 fed3 	bl	801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80119f4:	2500      	movs	r5, #0
 80119f6:	462c      	mov	r4, r5
 80119f8:	46a9      	mov	r9, r5
 80119fa:	46a8      	mov	r8, r5
 80119fc:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011a00:	2300      	movs	r3, #0
 8011a02:	9302      	str	r3, [sp, #8]
 8011a04:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011a08:	429c      	cmp	r4, r3
 8011a0a:	d002      	beq.n	8011a12 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011a0c:	455c      	cmp	r4, fp
 8011a0e:	bf18      	it	ne
 8011a10:	4625      	movne	r5, r4
 8011a12:	ab02      	add	r3, sp, #8
 8011a14:	4632      	mov	r2, r6
 8011a16:	4651      	mov	r1, sl
 8011a18:	a803      	add	r0, sp, #12
 8011a1a:	f001 f9c1 	bl	8012da0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011a1e:	4604      	mov	r4, r0
 8011a20:	b108      	cbz	r0, 8011a26 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011a22:	280a      	cmp	r0, #10
 8011a24:	d10a      	bne.n	8011a3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011a26:	45c1      	cmp	r9, r8
 8011a28:	bf38      	it	cc
 8011a2a:	46c1      	movcc	r9, r8
 8011a2c:	f04f 0800 	mov.w	r8, #0
 8011a30:	2c00      	cmp	r4, #0
 8011a32:	d1e5      	bne.n	8011a00 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011a34:	4648      	mov	r0, r9
 8011a36:	b01d      	add	sp, #116	; 0x74
 8011a38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a3c:	9a02      	ldr	r2, [sp, #8]
 8011a3e:	2a00      	cmp	r2, #0
 8011a40:	d0de      	beq.n	8011a00 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011a42:	7b57      	ldrb	r7, [r2, #13]
 8011a44:	6833      	ldr	r3, [r6, #0]
 8011a46:	8894      	ldrh	r4, [r2, #4]
 8011a48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011a4a:	007f      	lsls	r7, r7, #1
 8011a4c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011a50:	7a97      	ldrb	r7, [r2, #10]
 8011a52:	4629      	mov	r1, r5
 8011a54:	4307      	orrs	r7, r0
 8011a56:	4630      	mov	r0, r6
 8011a58:	4798      	blx	r3
 8011a5a:	4438      	add	r0, r7
 8011a5c:	4480      	add	r8, r0
 8011a5e:	fa1f f888 	uxth.w	r8, r8
 8011a62:	e7e5      	b.n	8011a30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011a64 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011a64:	b508      	push	{r3, lr}
 8011a66:	6803      	ldr	r3, [r0, #0]
 8011a68:	68db      	ldr	r3, [r3, #12]
 8011a6a:	4798      	blx	r3
 8011a6c:	b128      	cbz	r0, 8011a7a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011a6e:	7b43      	ldrb	r3, [r0, #13]
 8011a70:	7a80      	ldrb	r0, [r0, #10]
 8011a72:	005b      	lsls	r3, r3, #1
 8011a74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011a78:	4318      	orrs	r0, r3
 8011a7a:	bd08      	pop	{r3, pc}

08011a7c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011a7c:	b40e      	push	{r1, r2, r3}
 8011a7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a80:	b09e      	sub	sp, #120	; 0x78
 8011a82:	ab23      	add	r3, sp, #140	; 0x8c
 8011a84:	4605      	mov	r5, r0
 8011a86:	f853 4b04 	ldr.w	r4, [r3], #4
 8011a8a:	9303      	str	r3, [sp, #12]
 8011a8c:	a805      	add	r0, sp, #20
 8011a8e:	f000 fe29 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 8011a92:	682b      	ldr	r3, [r5, #0]
 8011a94:	4628      	mov	r0, r5
 8011a96:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011a98:	4798      	blx	r3
 8011a9a:	682b      	ldr	r3, [r5, #0]
 8011a9c:	4606      	mov	r6, r0
 8011a9e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011aa0:	4628      	mov	r0, r5
 8011aa2:	4798      	blx	r3
 8011aa4:	4633      	mov	r3, r6
 8011aa6:	ae1e      	add	r6, sp, #120	; 0x78
 8011aa8:	4621      	mov	r1, r4
 8011aaa:	9000      	str	r0, [sp, #0]
 8011aac:	9a03      	ldr	r2, [sp, #12]
 8011aae:	2400      	movs	r4, #0
 8011ab0:	a805      	add	r0, sp, #20
 8011ab2:	f000 fe72 	bl	801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011ab6:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011aba:	462a      	mov	r2, r5
 8011abc:	4633      	mov	r3, r6
 8011abe:	4621      	mov	r1, r4
 8011ac0:	a805      	add	r0, sp, #20
 8011ac2:	f001 f96d 	bl	8012da0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011ac6:	b1f0      	cbz	r0, 8011b06 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011ac8:	280a      	cmp	r0, #10
 8011aca:	d018      	beq.n	8011afe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011acc:	9f04      	ldr	r7, [sp, #16]
 8011ace:	b1b7      	cbz	r7, 8011afe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011ad0:	7b78      	ldrb	r0, [r7, #13]
 8011ad2:	7a3b      	ldrb	r3, [r7, #8]
 8011ad4:	88ea      	ldrh	r2, [r5, #6]
 8011ad6:	00c1      	lsls	r1, r0, #3
 8011ad8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011adc:	4319      	orrs	r1, r3
 8011ade:	0643      	lsls	r3, r0, #25
 8011ae0:	bf44      	itt	mi
 8011ae2:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011ae6:	b219      	sxthmi	r1, r3
 8011ae8:	0100      	lsls	r0, r0, #4
 8011aea:	79fb      	ldrb	r3, [r7, #7]
 8011aec:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011af0:	4303      	orrs	r3, r0
 8011af2:	4413      	add	r3, r2
 8011af4:	1a5b      	subs	r3, r3, r1
 8011af6:	b21b      	sxth	r3, r3
 8011af8:	429c      	cmp	r4, r3
 8011afa:	bfb8      	it	lt
 8011afc:	461c      	movlt	r4, r3
 8011afe:	4633      	mov	r3, r6
 8011b00:	462a      	mov	r2, r5
 8011b02:	2100      	movs	r1, #0
 8011b04:	e7dc      	b.n	8011ac0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011b06:	b2a0      	uxth	r0, r4
 8011b08:	b01e      	add	sp, #120	; 0x78
 8011b0a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011b0e:	b003      	add	sp, #12
 8011b10:	4770      	bx	lr

08011b12 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8011b12:	7a43      	ldrb	r3, [r0, #9]
 8011b14:	8880      	ldrh	r0, [r0, #4]
 8011b16:	4418      	add	r0, r3
 8011b18:	b280      	uxth	r0, r0
 8011b1a:	4770      	bx	lr

08011b1c <_ZNK8touchgfx4Font13getFontHeightEv>:
 8011b1c:	6803      	ldr	r3, [r0, #0]
 8011b1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011b20:	4718      	bx	r3

08011b22 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011b22:	b40e      	push	{r1, r2, r3}
 8011b24:	b570      	push	{r4, r5, r6, lr}
 8011b26:	b09d      	sub	sp, #116	; 0x74
 8011b28:	ab21      	add	r3, sp, #132	; 0x84
 8011b2a:	4604      	mov	r4, r0
 8011b2c:	f853 5b04 	ldr.w	r5, [r3], #4
 8011b30:	9302      	str	r3, [sp, #8]
 8011b32:	a803      	add	r0, sp, #12
 8011b34:	f000 fdd6 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 8011b38:	6823      	ldr	r3, [r4, #0]
 8011b3a:	4620      	mov	r0, r4
 8011b3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011b3e:	4798      	blx	r3
 8011b40:	6823      	ldr	r3, [r4, #0]
 8011b42:	4606      	mov	r6, r0
 8011b44:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011b46:	4620      	mov	r0, r4
 8011b48:	4798      	blx	r3
 8011b4a:	4633      	mov	r3, r6
 8011b4c:	9000      	str	r0, [sp, #0]
 8011b4e:	9a02      	ldr	r2, [sp, #8]
 8011b50:	4629      	mov	r1, r5
 8011b52:	a803      	add	r0, sp, #12
 8011b54:	f000 fe21 	bl	801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011b58:	a803      	add	r0, sp, #12
 8011b5a:	f001 f9ef 	bl	8012f3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011b5e:	2401      	movs	r4, #1
 8011b60:	b2a3      	uxth	r3, r4
 8011b62:	b140      	cbz	r0, 8011b76 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011b64:	280a      	cmp	r0, #10
 8011b66:	bf08      	it	eq
 8011b68:	3301      	addeq	r3, #1
 8011b6a:	a803      	add	r0, sp, #12
 8011b6c:	bf08      	it	eq
 8011b6e:	b21c      	sxtheq	r4, r3
 8011b70:	f001 f9e4 	bl	8012f3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011b74:	e7f4      	b.n	8011b60 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011b76:	4618      	mov	r0, r3
 8011b78:	b01d      	add	sp, #116	; 0x74
 8011b7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b7e:	b003      	add	sp, #12
 8011b80:	4770      	bx	lr

08011b82 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011b82:	b40e      	push	{r1, r2, r3}
 8011b84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011b86:	b09e      	sub	sp, #120	; 0x78
 8011b88:	ab23      	add	r3, sp, #140	; 0x8c
 8011b8a:	4604      	mov	r4, r0
 8011b8c:	f853 5b04 	ldr.w	r5, [r3], #4
 8011b90:	9303      	str	r3, [sp, #12]
 8011b92:	a805      	add	r0, sp, #20
 8011b94:	f000 fda6 	bl	80126e4 <_ZN8touchgfx12TextProviderC1Ev>
 8011b98:	6823      	ldr	r3, [r4, #0]
 8011b9a:	4620      	mov	r0, r4
 8011b9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011b9e:	4798      	blx	r3
 8011ba0:	6823      	ldr	r3, [r4, #0]
 8011ba2:	4606      	mov	r6, r0
 8011ba4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011ba6:	4620      	mov	r0, r4
 8011ba8:	4798      	blx	r3
 8011baa:	4633      	mov	r3, r6
 8011bac:	4629      	mov	r1, r5
 8011bae:	9000      	str	r0, [sp, #0]
 8011bb0:	9a03      	ldr	r2, [sp, #12]
 8011bb2:	a805      	add	r0, sp, #20
 8011bb4:	ad1e      	add	r5, sp, #120	; 0x78
 8011bb6:	f000 fdf0 	bl	801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011bba:	2100      	movs	r1, #0
 8011bbc:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011bc0:	4622      	mov	r2, r4
 8011bc2:	462b      	mov	r3, r5
 8011bc4:	a805      	add	r0, sp, #20
 8011bc6:	f001 f8eb 	bl	8012da0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011bca:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8011bce:	b1d8      	cbz	r0, 8011c08 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8011bd0:	280a      	cmp	r0, #10
 8011bd2:	d012      	beq.n	8011bfa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011bd4:	9804      	ldr	r0, [sp, #16]
 8011bd6:	b180      	cbz	r0, 8011bfa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8011bd8:	7b47      	ldrb	r7, [r0, #13]
 8011bda:	88e2      	ldrh	r2, [r4, #6]
 8011bdc:	00fb      	lsls	r3, r7, #3
 8011bde:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011be2:	7a03      	ldrb	r3, [r0, #8]
 8011be4:	430b      	orrs	r3, r1
 8011be6:	0679      	lsls	r1, r7, #25
 8011be8:	bf44      	itt	mi
 8011bea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011bee:	b21b      	sxthmi	r3, r3
 8011bf0:	1ad3      	subs	r3, r2, r3
 8011bf2:	b21b      	sxth	r3, r3
 8011bf4:	429e      	cmp	r6, r3
 8011bf6:	bfa8      	it	ge
 8011bf8:	461e      	movge	r6, r3
 8011bfa:	462b      	mov	r3, r5
 8011bfc:	4622      	mov	r2, r4
 8011bfe:	2100      	movs	r1, #0
 8011c00:	a805      	add	r0, sp, #20
 8011c02:	f001 f8cd 	bl	8012da0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011c06:	e7e2      	b.n	8011bce <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8011c08:	4630      	mov	r0, r6
 8011c0a:	b01e      	add	sp, #120	; 0x78
 8011c0c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011c10:	b003      	add	sp, #12
 8011c12:	4770      	bx	lr

08011c14 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011c14:	b513      	push	{r0, r1, r4, lr}
 8011c16:	6803      	ldr	r3, [r0, #0]
 8011c18:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011c1c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011c20:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011c24:	2400      	movs	r4, #0
 8011c26:	9400      	str	r4, [sp, #0]
 8011c28:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011c2c:	691b      	ldr	r3, [r3, #16]
 8011c2e:	4669      	mov	r1, sp
 8011c30:	4798      	blx	r3
 8011c32:	b002      	add	sp, #8
 8011c34:	bd10      	pop	{r4, pc}

08011c36 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011c36:	b538      	push	{r3, r4, r5, lr}
 8011c38:	680b      	ldr	r3, [r1, #0]
 8011c3a:	460c      	mov	r4, r1
 8011c3c:	68db      	ldr	r3, [r3, #12]
 8011c3e:	4605      	mov	r5, r0
 8011c40:	4798      	blx	r3
 8011c42:	6823      	ldr	r3, [r4, #0]
 8011c44:	4620      	mov	r0, r4
 8011c46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c48:	4629      	mov	r1, r5
 8011c4a:	4798      	blx	r3
 8011c4c:	4628      	mov	r0, r5
 8011c4e:	bd38      	pop	{r3, r4, r5, pc}

08011c50 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011c50:	b410      	push	{r4}
 8011c52:	880a      	ldrh	r2, [r1, #0]
 8011c54:	8884      	ldrh	r4, [r0, #4]
 8011c56:	4422      	add	r2, r4
 8011c58:	800a      	strh	r2, [r1, #0]
 8011c5a:	88c4      	ldrh	r4, [r0, #6]
 8011c5c:	884a      	ldrh	r2, [r1, #2]
 8011c5e:	4422      	add	r2, r4
 8011c60:	804a      	strh	r2, [r1, #2]
 8011c62:	6940      	ldr	r0, [r0, #20]
 8011c64:	b120      	cbz	r0, 8011c70 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011c66:	6803      	ldr	r3, [r0, #0]
 8011c68:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011c6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011c6e:	4718      	bx	r3
 8011c70:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011c74:	4770      	bx	lr

08011c76 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011c76:	b570      	push	{r4, r5, r6, lr}
 8011c78:	8882      	ldrh	r2, [r0, #4]
 8011c7a:	880b      	ldrh	r3, [r1, #0]
 8011c7c:	4413      	add	r3, r2
 8011c7e:	800b      	strh	r3, [r1, #0]
 8011c80:	88c2      	ldrh	r2, [r0, #6]
 8011c82:	884b      	ldrh	r3, [r1, #2]
 8011c84:	460c      	mov	r4, r1
 8011c86:	4413      	add	r3, r2
 8011c88:	804b      	strh	r3, [r1, #2]
 8011c8a:	4605      	mov	r5, r0
 8011c8c:	1d01      	adds	r1, r0, #4
 8011c8e:	4620      	mov	r0, r4
 8011c90:	f7fb f8f4 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 8011c94:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011c98:	2b00      	cmp	r3, #0
 8011c9a:	dd0b      	ble.n	8011cb4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011c9c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011ca0:	2b00      	cmp	r3, #0
 8011ca2:	dd07      	ble.n	8011cb4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011ca4:	6968      	ldr	r0, [r5, #20]
 8011ca6:	b128      	cbz	r0, 8011cb4 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011ca8:	6803      	ldr	r3, [r0, #0]
 8011caa:	4621      	mov	r1, r4
 8011cac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011cae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cb2:	4718      	bx	r3
 8011cb4:	bd70      	pop	{r4, r5, r6, pc}
	...

08011cb8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8011cb8:	b570      	push	{r4, r5, r6, lr}
 8011cba:	8882      	ldrh	r2, [r0, #4]
 8011cbc:	880b      	ldrh	r3, [r1, #0]
 8011cbe:	4413      	add	r3, r2
 8011cc0:	800b      	strh	r3, [r1, #0]
 8011cc2:	88c2      	ldrh	r2, [r0, #6]
 8011cc4:	884b      	ldrh	r3, [r1, #2]
 8011cc6:	460c      	mov	r4, r1
 8011cc8:	4413      	add	r3, r2
 8011cca:	804b      	strh	r3, [r1, #2]
 8011ccc:	4605      	mov	r5, r0
 8011cce:	1d01      	adds	r1, r0, #4
 8011cd0:	4620      	mov	r0, r4
 8011cd2:	f7fb f8d3 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 8011cd6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8011cda:	2b00      	cmp	r3, #0
 8011cdc:	dd19      	ble.n	8011d12 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011cde:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011ce2:	2b00      	cmp	r3, #0
 8011ce4:	dd15      	ble.n	8011d12 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011ce6:	6968      	ldr	r0, [r5, #20]
 8011ce8:	b128      	cbz	r0, 8011cf6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8011cea:	6803      	ldr	r3, [r0, #0]
 8011cec:	4621      	mov	r1, r4
 8011cee:	691b      	ldr	r3, [r3, #16]
 8011cf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011cf4:	4718      	bx	r3
 8011cf6:	4b07      	ldr	r3, [pc, #28]	; (8011d14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8011cf8:	681b      	ldr	r3, [r3, #0]
 8011cfa:	3304      	adds	r3, #4
 8011cfc:	429d      	cmp	r5, r3
 8011cfe:	d108      	bne.n	8011d12 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8011d00:	f7fe fec8 	bl	8010a94 <_ZN8touchgfx11Application11getInstanceEv>
 8011d04:	6803      	ldr	r3, [r0, #0]
 8011d06:	6821      	ldr	r1, [r4, #0]
 8011d08:	6862      	ldr	r2, [r4, #4]
 8011d0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011d0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d10:	4718      	bx	r3
 8011d12:	bd70      	pop	{r4, r5, r6, pc}
 8011d14:	20015010 	.word	0x20015010

08011d18 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8011d18:	b570      	push	{r4, r5, r6, lr}
 8011d1a:	4604      	mov	r4, r0
 8011d1c:	4616      	mov	r6, r2
 8011d1e:	460d      	mov	r5, r1
 8011d20:	b901      	cbnz	r1, 8011d24 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011d22:	b192      	cbz	r2, 8011d4a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011d24:	6823      	ldr	r3, [r4, #0]
 8011d26:	4620      	mov	r0, r4
 8011d28:	699b      	ldr	r3, [r3, #24]
 8011d2a:	4798      	blx	r3
 8011d2c:	88e2      	ldrh	r2, [r4, #6]
 8011d2e:	88a1      	ldrh	r1, [r4, #4]
 8011d30:	4432      	add	r2, r6
 8011d32:	4429      	add	r1, r5
 8011d34:	4620      	mov	r0, r4
 8011d36:	b212      	sxth	r2, r2
 8011d38:	b209      	sxth	r1, r1
 8011d3a:	f7f0 fb27 	bl	800238c <_ZN8touchgfx8Drawable5setXYEss>
 8011d3e:	6823      	ldr	r3, [r4, #0]
 8011d40:	4620      	mov	r0, r4
 8011d42:	699b      	ldr	r3, [r3, #24]
 8011d44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011d48:	4718      	bx	r3
 8011d4a:	bd70      	pop	{r4, r5, r6, pc}

08011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8011d4c:	b510      	push	{r4, lr}
 8011d4e:	4604      	mov	r4, r0
 8011d50:	4608      	mov	r0, r1
 8011d52:	2300      	movs	r3, #0
 8011d54:	8023      	strh	r3, [r4, #0]
 8011d56:	8063      	strh	r3, [r4, #2]
 8011d58:	6803      	ldr	r3, [r0, #0]
 8011d5a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011d5e:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011d62:	80a1      	strh	r1, [r4, #4]
 8011d64:	80e2      	strh	r2, [r4, #6]
 8011d66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d68:	4621      	mov	r1, r4
 8011d6a:	4798      	blx	r3
 8011d6c:	4620      	mov	r0, r4
 8011d6e:	bd10      	pop	{r4, pc}

08011d70 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011d70:	b530      	push	{r4, r5, lr}
 8011d72:	8083      	strh	r3, [r0, #4]
 8011d74:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8011d78:	80c3      	strh	r3, [r0, #6]
 8011d7a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011d7e:	7203      	strb	r3, [r0, #8]
 8011d80:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011d84:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8011d88:	7243      	strb	r3, [r0, #9]
 8011d8a:	7a83      	ldrb	r3, [r0, #10]
 8011d8c:	6141      	str	r1, [r0, #20]
 8011d8e:	f365 0306 	bfi	r3, r5, #0, #7
 8011d92:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8011d96:	8302      	strh	r2, [r0, #24]
 8011d98:	f365 13c7 	bfi	r3, r5, #7, #1
 8011d9c:	7283      	strb	r3, [r0, #10]
 8011d9e:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011da2:	72c3      	strb	r3, [r0, #11]
 8011da4:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8011da8:	7303      	strb	r3, [r0, #12]
 8011daa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8011dae:	81c3      	strh	r3, [r0, #14]
 8011db0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8011db4:	8203      	strh	r3, [r0, #16]
 8011db6:	4b01      	ldr	r3, [pc, #4]	; (8011dbc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8011db8:	6003      	str	r3, [r0, #0]
 8011dba:	bd30      	pop	{r4, r5, pc}
 8011dbc:	08024e74 	.word	0x08024e74

08011dc0 <_ZNK8touchgfx9ConstFont4findEt>:
 8011dc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011dc2:	6944      	ldr	r4, [r0, #20]
 8011dc4:	b3bc      	cbz	r4, 8011e36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011dc6:	88a3      	ldrh	r3, [r4, #4]
 8011dc8:	8b02      	ldrh	r2, [r0, #24]
 8011dca:	1acb      	subs	r3, r1, r3
 8011dcc:	f102 32ff 	add.w	r2, r2, #4294967295
 8011dd0:	d431      	bmi.n	8011e36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011dd2:	4293      	cmp	r3, r2
 8011dd4:	dd0c      	ble.n	8011df0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8011dd6:	230e      	movs	r3, #14
 8011dd8:	fb03 4302 	mla	r3, r3, r2, r4
 8011ddc:	889b      	ldrh	r3, [r3, #4]
 8011dde:	1a5b      	subs	r3, r3, r1
 8011de0:	1ad3      	subs	r3, r2, r3
 8011de2:	429a      	cmp	r2, r3
 8011de4:	db27      	blt.n	8011e36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011de6:	2b00      	cmp	r3, #0
 8011de8:	bfbc      	itt	lt
 8011dea:	2302      	movlt	r3, #2
 8011dec:	fb92 f3f3 	sdivlt	r3, r2, r3
 8011df0:	2500      	movs	r5, #0
 8011df2:	260e      	movs	r6, #14
 8011df4:	4295      	cmp	r5, r2
 8011df6:	dc1e      	bgt.n	8011e36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011df8:	fb06 4003 	mla	r0, r6, r3, r4
 8011dfc:	8887      	ldrh	r7, [r0, #4]
 8011dfe:	42b9      	cmp	r1, r7
 8011e00:	d01a      	beq.n	8011e38 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8011e02:	d20d      	bcs.n	8011e20 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8011e04:	1e5a      	subs	r2, r3, #1
 8011e06:	4295      	cmp	r5, r2
 8011e08:	dc15      	bgt.n	8011e36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e0a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011e0e:	1a5b      	subs	r3, r3, r1
 8011e10:	1ad3      	subs	r3, r2, r3
 8011e12:	429a      	cmp	r2, r3
 8011e14:	db0f      	blt.n	8011e36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e16:	429d      	cmp	r5, r3
 8011e18:	ddec      	ble.n	8011df4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011e1a:	1953      	adds	r3, r2, r5
 8011e1c:	105b      	asrs	r3, r3, #1
 8011e1e:	e7e9      	b.n	8011df4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011e20:	1c5d      	adds	r5, r3, #1
 8011e22:	42aa      	cmp	r2, r5
 8011e24:	db07      	blt.n	8011e36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e26:	8a43      	ldrh	r3, [r0, #18]
 8011e28:	1acb      	subs	r3, r1, r3
 8011e2a:	442b      	add	r3, r5
 8011e2c:	429d      	cmp	r5, r3
 8011e2e:	dc02      	bgt.n	8011e36 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011e30:	429a      	cmp	r2, r3
 8011e32:	dadf      	bge.n	8011df4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011e34:	e7f1      	b.n	8011e1a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011e36:	2000      	movs	r0, #0
 8011e38:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011e3a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011e3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011e3c:	4604      	mov	r4, r0
 8011e3e:	4617      	mov	r7, r2
 8011e40:	461e      	mov	r6, r3
 8011e42:	b911      	cbnz	r1, 8011e4a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011e44:	2500      	movs	r5, #0
 8011e46:	4628      	mov	r0, r5
 8011e48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011e4a:	290a      	cmp	r1, #10
 8011e4c:	d0fa      	beq.n	8011e44 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011e4e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8011e52:	4291      	cmp	r1, r2
 8011e54:	d0f6      	beq.n	8011e44 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011e56:	f242 020b 	movw	r2, #8203	; 0x200b
 8011e5a:	4291      	cmp	r1, r2
 8011e5c:	d0f2      	beq.n	8011e44 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011e5e:	f7ff ffaf 	bl	8011dc0 <_ZNK8touchgfx9ConstFont4findEt>
 8011e62:	4605      	mov	r5, r0
 8011e64:	b950      	cbnz	r0, 8011e7c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011e66:	6823      	ldr	r3, [r4, #0]
 8011e68:	4620      	mov	r0, r4
 8011e6a:	691b      	ldr	r3, [r3, #16]
 8011e6c:	4798      	blx	r3
 8011e6e:	4601      	mov	r1, r0
 8011e70:	4620      	mov	r0, r4
 8011e72:	f7ff ffa5 	bl	8011dc0 <_ZNK8touchgfx9ConstFont4findEt>
 8011e76:	4605      	mov	r5, r0
 8011e78:	2800      	cmp	r0, #0
 8011e7a:	d0e3      	beq.n	8011e44 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011e7c:	6823      	ldr	r3, [r4, #0]
 8011e7e:	4629      	mov	r1, r5
 8011e80:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8011e82:	4620      	mov	r0, r4
 8011e84:	4798      	blx	r3
 8011e86:	6038      	str	r0, [r7, #0]
 8011e88:	6823      	ldr	r3, [r4, #0]
 8011e8a:	4620      	mov	r0, r4
 8011e8c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011e8e:	4798      	blx	r3
 8011e90:	7030      	strb	r0, [r6, #0]
 8011e92:	e7d8      	b.n	8011e46 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011e94 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8011e94:	b538      	push	{r3, r4, r5, lr}
 8011e96:	4605      	mov	r5, r0
 8011e98:	f002 f920 	bl	80140dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011e9c:	4604      	mov	r4, r0
 8011e9e:	4628      	mov	r0, r5
 8011ea0:	f002 f860 	bl	8013f64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011ea4:	2800      	cmp	r0, #0
 8011ea6:	bf14      	ite	ne
 8011ea8:	2002      	movne	r0, #2
 8011eaa:	2000      	moveq	r0, #0
 8011eac:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8011eb0:	b280      	uxth	r0, r0
 8011eb2:	bd38      	pop	{r3, r4, r5, pc}

08011eb4 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8011eb4:	b538      	push	{r3, r4, r5, lr}
 8011eb6:	4605      	mov	r5, r0
 8011eb8:	f002 f910 	bl	80140dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011ebc:	4604      	mov	r4, r0
 8011ebe:	4628      	mov	r0, r5
 8011ec0:	f002 f850 	bl	8013f64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011ec4:	2800      	cmp	r0, #0
 8011ec6:	bf14      	ite	ne
 8011ec8:	2002      	movne	r0, #2
 8011eca:	2000      	moveq	r0, #0
 8011ecc:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8011ed0:	f040 0001 	orr.w	r0, r0, #1
 8011ed4:	b280      	uxth	r0, r0
 8011ed6:	bd38      	pop	{r3, r4, r5, pc}

08011ed8 <_ZN8touchgfx4clzuEm>:
 8011ed8:	4603      	mov	r3, r0
 8011eda:	b1c8      	cbz	r0, 8011f10 <_ZN8touchgfx4clzuEm+0x38>
 8011edc:	0c02      	lsrs	r2, r0, #16
 8011ede:	0412      	lsls	r2, r2, #16
 8011ee0:	b9a2      	cbnz	r2, 8011f0c <_ZN8touchgfx4clzuEm+0x34>
 8011ee2:	0403      	lsls	r3, r0, #16
 8011ee4:	2010      	movs	r0, #16
 8011ee6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011eea:	bf04      	itt	eq
 8011eec:	021b      	lsleq	r3, r3, #8
 8011eee:	3008      	addeq	r0, #8
 8011ef0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011ef4:	bf04      	itt	eq
 8011ef6:	011b      	lsleq	r3, r3, #4
 8011ef8:	3004      	addeq	r0, #4
 8011efa:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011efe:	bf04      	itt	eq
 8011f00:	009b      	lsleq	r3, r3, #2
 8011f02:	3002      	addeq	r0, #2
 8011f04:	2b00      	cmp	r3, #0
 8011f06:	db04      	blt.n	8011f12 <_ZN8touchgfx4clzuEm+0x3a>
 8011f08:	3001      	adds	r0, #1
 8011f0a:	4770      	bx	lr
 8011f0c:	2000      	movs	r0, #0
 8011f0e:	e7ea      	b.n	8011ee6 <_ZN8touchgfx4clzuEm+0xe>
 8011f10:	2020      	movs	r0, #32
 8011f12:	4770      	bx	lr

08011f14 <_ZN8touchgfx7muldivuEmmmRm>:
 8011f14:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011f18:	460f      	mov	r7, r1
 8011f1a:	4615      	mov	r5, r2
 8011f1c:	461e      	mov	r6, r3
 8011f1e:	4601      	mov	r1, r0
 8011f20:	b100      	cbz	r0, 8011f24 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8011f22:	b927      	cbnz	r7, 8011f2e <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8011f24:	2000      	movs	r0, #0
 8011f26:	6030      	str	r0, [r6, #0]
 8011f28:	b002      	add	sp, #8
 8011f2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011f2e:	f7ff ffd3 	bl	8011ed8 <_ZN8touchgfx4clzuEm>
 8011f32:	b980      	cbnz	r0, 8011f56 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8011f34:	4638      	mov	r0, r7
 8011f36:	f7ff ffcf 	bl	8011ed8 <_ZN8touchgfx4clzuEm>
 8011f3a:	2800      	cmp	r0, #0
 8011f3c:	dd05      	ble.n	8011f4a <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8011f3e:	4633      	mov	r3, r6
 8011f40:	462a      	mov	r2, r5
 8011f42:	4638      	mov	r0, r7
 8011f44:	f7ff ffe6 	bl	8011f14 <_ZN8touchgfx7muldivuEmmmRm>
 8011f48:	e7ee      	b.n	8011f28 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011f4a:	f04f 33ff 	mov.w	r3, #4294967295
 8011f4e:	6033      	str	r3, [r6, #0]
 8011f50:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8011f54:	e7e8      	b.n	8011f28 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011f56:	fa37 f800 	lsrs.w	r8, r7, r0
 8011f5a:	fb07 f301 	mul.w	r3, r7, r1
 8011f5e:	d105      	bne.n	8011f6c <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8011f60:	fbb3 f0f5 	udiv	r0, r3, r5
 8011f64:	fb05 3510 	mls	r5, r5, r0, r3
 8011f68:	6035      	str	r5, [r6, #0]
 8011f6a:	e7dd      	b.n	8011f28 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8011f6c:	2301      	movs	r3, #1
 8011f6e:	fa01 fa00 	lsl.w	sl, r1, r0
 8011f72:	fa03 f000 	lsl.w	r0, r3, r0
 8011f76:	3801      	subs	r0, #1
 8011f78:	462a      	mov	r2, r5
 8011f7a:	4633      	mov	r3, r6
 8011f7c:	4038      	ands	r0, r7
 8011f7e:	f7ff ffc9 	bl	8011f14 <_ZN8touchgfx7muldivuEmmmRm>
 8011f82:	fbba f9f5 	udiv	r9, sl, r5
 8011f86:	462a      	mov	r2, r5
 8011f88:	4607      	mov	r7, r0
 8011f8a:	ab01      	add	r3, sp, #4
 8011f8c:	fb05 a119 	mls	r1, r5, r9, sl
 8011f90:	4640      	mov	r0, r8
 8011f92:	f7ff ffbf 	bl	8011f14 <_ZN8touchgfx7muldivuEmmmRm>
 8011f96:	9b01      	ldr	r3, [sp, #4]
 8011f98:	6832      	ldr	r2, [r6, #0]
 8011f9a:	fb08 f409 	mul.w	r4, r8, r9
 8011f9e:	441a      	add	r2, r3
 8011fa0:	fbb2 f3f5 	udiv	r3, r2, r5
 8011fa4:	441c      	add	r4, r3
 8011fa6:	443c      	add	r4, r7
 8011fa8:	4420      	add	r0, r4
 8011faa:	fb05 2513 	mls	r5, r5, r3, r2
 8011fae:	e7db      	b.n	8011f68 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08011fb0 <_ZN8touchgfx6muldivElllRl>:
 8011fb0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011fb2:	2800      	cmp	r0, #0
 8011fb4:	bfba      	itte	lt
 8011fb6:	4240      	neglt	r0, r0
 8011fb8:	f04f 34ff 	movlt.w	r4, #4294967295
 8011fbc:	2401      	movge	r4, #1
 8011fbe:	2900      	cmp	r1, #0
 8011fc0:	bfbc      	itt	lt
 8011fc2:	4249      	neglt	r1, r1
 8011fc4:	4264      	neglt	r4, r4
 8011fc6:	2a00      	cmp	r2, #0
 8011fc8:	bfb6      	itet	lt
 8011fca:	4265      	neglt	r5, r4
 8011fcc:	4625      	movge	r5, r4
 8011fce:	4252      	neglt	r2, r2
 8011fd0:	4288      	cmp	r0, r1
 8011fd2:	461e      	mov	r6, r3
 8011fd4:	bfc2      	ittt	gt
 8011fd6:	4603      	movgt	r3, r0
 8011fd8:	4608      	movgt	r0, r1
 8011fda:	4619      	movgt	r1, r3
 8011fdc:	ab01      	add	r3, sp, #4
 8011fde:	f7ff ff99 	bl	8011f14 <_ZN8touchgfx7muldivuEmmmRm>
 8011fe2:	9b01      	ldr	r3, [sp, #4]
 8011fe4:	4368      	muls	r0, r5
 8011fe6:	435c      	muls	r4, r3
 8011fe8:	6034      	str	r4, [r6, #0]
 8011fea:	b002      	add	sp, #8
 8011fec:	bd70      	pop	{r4, r5, r6, pc}

08011fee <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011fee:	2000      	movs	r0, #0
 8011ff0:	4770      	bx	lr

08011ff2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011ff2:	2001      	movs	r0, #1
 8011ff4:	4770      	bx	lr

08011ff6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011ff6:	2002      	movs	r0, #2
 8011ff8:	4770      	bx	lr

08011ffa <_ZN8touchgfx6ScreenD1Ev>:
 8011ffa:	4770      	bx	lr

08011ffc <_ZN8touchgfx12GestureEventD1Ev>:
 8011ffc:	4770      	bx	lr

08011ffe <_ZN8touchgfx9DragEventD1Ev>:
 8011ffe:	4770      	bx	lr

08012000 <_ZN8touchgfx10ClickEventD1Ev>:
 8012000:	4770      	bx	lr

08012002 <_ZN8touchgfx10ClickEventD0Ev>:
 8012002:	b510      	push	{r4, lr}
 8012004:	210c      	movs	r1, #12
 8012006:	4604      	mov	r4, r0
 8012008:	f00f fb50 	bl	80216ac <_ZdlPvj>
 801200c:	4620      	mov	r0, r4
 801200e:	bd10      	pop	{r4, pc}

08012010 <_ZN8touchgfx9DragEventD0Ev>:
 8012010:	b510      	push	{r4, lr}
 8012012:	2110      	movs	r1, #16
 8012014:	4604      	mov	r4, r0
 8012016:	f00f fb49 	bl	80216ac <_ZdlPvj>
 801201a:	4620      	mov	r0, r4
 801201c:	bd10      	pop	{r4, pc}

0801201e <_ZN8touchgfx12GestureEventD0Ev>:
 801201e:	b510      	push	{r4, lr}
 8012020:	210c      	movs	r1, #12
 8012022:	4604      	mov	r4, r0
 8012024:	f00f fb42 	bl	80216ac <_ZdlPvj>
 8012028:	4620      	mov	r0, r4
 801202a:	bd10      	pop	{r4, pc}

0801202c <_ZN8touchgfx6ScreenD0Ev>:
 801202c:	b510      	push	{r4, lr}
 801202e:	213c      	movs	r1, #60	; 0x3c
 8012030:	4604      	mov	r4, r0
 8012032:	f00f fb3b 	bl	80216ac <_ZdlPvj>
 8012036:	4620      	mov	r0, r4
 8012038:	bd10      	pop	{r4, pc}
	...

0801203c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801203c:	b530      	push	{r4, r5, lr}
 801203e:	460d      	mov	r5, r1
 8012040:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012042:	b087      	sub	sp, #28
 8012044:	4604      	mov	r4, r0
 8012046:	b301      	cbz	r1, 801208a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012048:	a801      	add	r0, sp, #4
 801204a:	f7ff fe7f 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801204e:	892a      	ldrh	r2, [r5, #8]
 8012050:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012054:	7928      	ldrb	r0, [r5, #4]
 8012056:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801205a:	f88d 0010 	strb.w	r0, [sp, #16]
 801205e:	1ad2      	subs	r2, r2, r3
 8012060:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012062:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012064:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012068:	441a      	add	r2, r3
 801206a:	896b      	ldrh	r3, [r5, #10]
 801206c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012070:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012074:	1b5b      	subs	r3, r3, r5
 8012076:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012078:	442b      	add	r3, r5
 801207a:	4d05      	ldr	r5, [pc, #20]	; (8012090 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801207c:	9503      	str	r5, [sp, #12]
 801207e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012082:	6803      	ldr	r3, [r0, #0]
 8012084:	a903      	add	r1, sp, #12
 8012086:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012088:	4798      	blx	r3
 801208a:	b007      	add	sp, #28
 801208c:	bd30      	pop	{r4, r5, pc}
 801208e:	bf00      	nop
 8012090:	08024efc 	.word	0x08024efc

08012094 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012094:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012098:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801209a:	b08a      	sub	sp, #40	; 0x28
 801209c:	4604      	mov	r4, r0
 801209e:	460d      	mov	r5, r1
 80120a0:	b113      	cbz	r3, 80120a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80120a2:	790b      	ldrb	r3, [r1, #4]
 80120a4:	2b00      	cmp	r3, #0
 80120a6:	d044      	beq.n	8012132 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80120a8:	f104 0804 	add.w	r8, r4, #4
 80120ac:	4641      	mov	r1, r8
 80120ae:	a803      	add	r0, sp, #12
 80120b0:	f7ff fe4c 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80120b4:	792b      	ldrb	r3, [r5, #4]
 80120b6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80120ba:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80120be:	b983      	cbnz	r3, 80120e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80120c0:	892a      	ldrh	r2, [r5, #8]
 80120c2:	88e9      	ldrh	r1, [r5, #6]
 80120c4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80120c8:	1b92      	subs	r2, r2, r6
 80120ca:	1bc9      	subs	r1, r1, r7
 80120cc:	9301      	str	r3, [sp, #4]
 80120ce:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80120d2:	9300      	str	r3, [sp, #0]
 80120d4:	b212      	sxth	r2, r2
 80120d6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80120da:	b209      	sxth	r1, r1
 80120dc:	4640      	mov	r0, r8
 80120de:	f7fa fde9 	bl	800ccb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80120e2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80120e4:	b329      	cbz	r1, 8012132 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80120e6:	a805      	add	r0, sp, #20
 80120e8:	f7ff fe30 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80120ec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80120f0:	792b      	ldrb	r3, [r5, #4]
 80120f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80120f4:	f88d 3020 	strb.w	r3, [sp, #32]
 80120f8:	1abf      	subs	r7, r7, r2
 80120fa:	88ea      	ldrh	r2, [r5, #6]
 80120fc:	4417      	add	r7, r2
 80120fe:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012100:	4417      	add	r7, r2
 8012102:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012106:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801210a:	1ab6      	subs	r6, r6, r2
 801210c:	892a      	ldrh	r2, [r5, #8]
 801210e:	4416      	add	r6, r2
 8012110:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012112:	4416      	add	r6, r2
 8012114:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012118:	4a07      	ldr	r2, [pc, #28]	; (8012138 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801211a:	9207      	str	r2, [sp, #28]
 801211c:	2600      	movs	r6, #0
 801211e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012122:	6803      	ldr	r3, [r0, #0]
 8012124:	a907      	add	r1, sp, #28
 8012126:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012128:	4798      	blx	r3
 801212a:	792b      	ldrb	r3, [r5, #4]
 801212c:	b10b      	cbz	r3, 8012132 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801212e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012132:	b00a      	add	sp, #40	; 0x28
 8012134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012138:	08024ed4 	.word	0x08024ed4

0801213c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801213c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012140:	460c      	mov	r4, r1
 8012142:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012144:	b088      	sub	sp, #32
 8012146:	4605      	mov	r5, r0
 8012148:	2900      	cmp	r1, #0
 801214a:	d06d      	beq.n	8012228 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801214c:	4668      	mov	r0, sp
 801214e:	f7ff fdfd 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012152:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012154:	88e3      	ldrh	r3, [r4, #6]
 8012156:	f9bd 8000 	ldrsh.w	r8, [sp]
 801215a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801215e:	440b      	add	r3, r1
 8012160:	b21b      	sxth	r3, r3
 8012162:	4543      	cmp	r3, r8
 8012164:	db31      	blt.n	80121ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012166:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801216a:	44c4      	add	ip, r8
 801216c:	fa0f fc8c 	sxth.w	ip, ip
 8012170:	4563      	cmp	r3, ip
 8012172:	da2a      	bge.n	80121ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012174:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012176:	8926      	ldrh	r6, [r4, #8]
 8012178:	4416      	add	r6, r2
 801217a:	b236      	sxth	r6, r6
 801217c:	42be      	cmp	r6, r7
 801217e:	db24      	blt.n	80121ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012180:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012184:	4438      	add	r0, r7
 8012186:	b200      	sxth	r0, r0
 8012188:	4286      	cmp	r6, r0
 801218a:	da1e      	bge.n	80121ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801218c:	8963      	ldrh	r3, [r4, #10]
 801218e:	4419      	add	r1, r3
 8012190:	b209      	sxth	r1, r1
 8012192:	4541      	cmp	r1, r8
 8012194:	db08      	blt.n	80121a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012196:	4561      	cmp	r1, ip
 8012198:	da06      	bge.n	80121a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801219a:	89a3      	ldrh	r3, [r4, #12]
 801219c:	441a      	add	r2, r3
 801219e:	b212      	sxth	r2, r2
 80121a0:	42ba      	cmp	r2, r7
 80121a2:	db01      	blt.n	80121a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80121a4:	4282      	cmp	r2, r0
 80121a6:	db10      	blt.n	80121ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80121a8:	4b21      	ldr	r3, [pc, #132]	; (8012230 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80121aa:	9304      	str	r3, [sp, #16]
 80121ac:	2302      	movs	r3, #2
 80121ae:	f88d 3014 	strb.w	r3, [sp, #20]
 80121b2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80121b4:	2300      	movs	r3, #0
 80121b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80121ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 80121be:	f8ad 301a 	strh.w	r3, [sp, #26]
 80121c2:	6803      	ldr	r3, [r0, #0]
 80121c4:	a904      	add	r1, sp, #16
 80121c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80121c8:	4798      	blx	r3
 80121ca:	1d29      	adds	r1, r5, #4
 80121cc:	a802      	add	r0, sp, #8
 80121ce:	f7ff fdbd 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80121d2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80121d6:	88e0      	ldrh	r0, [r4, #6]
 80121d8:	7921      	ldrb	r1, [r4, #4]
 80121da:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80121de:	8922      	ldrh	r2, [r4, #8]
 80121e0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80121e2:	f88d 1014 	strb.w	r1, [sp, #20]
 80121e6:	eba3 0808 	sub.w	r8, r3, r8
 80121ea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80121ee:	1bdf      	subs	r7, r3, r7
 80121f0:	b2bb      	uxth	r3, r7
 80121f2:	fa1f f888 	uxth.w	r8, r8
 80121f6:	8967      	ldrh	r7, [r4, #10]
 80121f8:	89a4      	ldrh	r4, [r4, #12]
 80121fa:	4440      	add	r0, r8
 80121fc:	4460      	add	r0, ip
 80121fe:	441a      	add	r2, r3
 8012200:	44b8      	add	r8, r7
 8012202:	4423      	add	r3, r4
 8012204:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012208:	4433      	add	r3, r6
 801220a:	4432      	add	r2, r6
 801220c:	44e0      	add	r8, ip
 801220e:	4c09      	ldr	r4, [pc, #36]	; (8012234 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012210:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012212:	9404      	str	r4, [sp, #16]
 8012214:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012218:	f8ad 801a 	strh.w	r8, [sp, #26]
 801221c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012220:	6803      	ldr	r3, [r0, #0]
 8012222:	a904      	add	r1, sp, #16
 8012224:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012226:	4798      	blx	r3
 8012228:	b008      	add	sp, #32
 801222a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801222e:	bf00      	nop
 8012230:	08024ed4 	.word	0x08024ed4
 8012234:	08024ee8 	.word	0x08024ee8

08012238 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8012238:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801223a:	4604      	mov	r4, r0
 801223c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012240:	3201      	adds	r2, #1
 8012242:	d112      	bne.n	801226a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012244:	6803      	ldr	r3, [r0, #0]
 8012246:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801224a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801224e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012252:	2500      	movs	r5, #0
 8012254:	9500      	str	r5, [sp, #0]
 8012256:	466d      	mov	r5, sp
 8012258:	4629      	mov	r1, r5
 801225a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801225e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012260:	4798      	blx	r3
 8012262:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012266:	e884 0003 	stmia.w	r4, {r0, r1}
 801226a:	4620      	mov	r0, r4
 801226c:	b003      	add	sp, #12
 801226e:	bd30      	pop	{r4, r5, pc}

08012270 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012270:	b513      	push	{r0, r1, r4, lr}
 8012272:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012276:	3301      	adds	r3, #1
 8012278:	4604      	mov	r4, r0
 801227a:	d109      	bne.n	8012290 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801227c:	4601      	mov	r1, r0
 801227e:	4668      	mov	r0, sp
 8012280:	f7ff fd64 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012284:	f8bd 3000 	ldrh.w	r3, [sp]
 8012288:	8423      	strh	r3, [r4, #32]
 801228a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801228e:	8463      	strh	r3, [r4, #34]	; 0x22
 8012290:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012294:	b002      	add	sp, #8
 8012296:	bd10      	pop	{r4, pc}

08012298 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8012298:	b513      	push	{r0, r1, r4, lr}
 801229a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801229e:	3301      	adds	r3, #1
 80122a0:	4604      	mov	r4, r0
 80122a2:	d109      	bne.n	80122b8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80122a4:	4601      	mov	r1, r0
 80122a6:	4668      	mov	r0, sp
 80122a8:	f7ff fd50 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80122ac:	f8bd 3000 	ldrh.w	r3, [sp]
 80122b0:	8423      	strh	r3, [r4, #32]
 80122b2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80122b6:	8463      	strh	r3, [r4, #34]	; 0x22
 80122b8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80122bc:	b002      	add	sp, #8
 80122be:	bd10      	pop	{r4, pc}

080122c0 <_ZN8touchgfx6ScreenC1Ev>:
 80122c0:	b570      	push	{r4, r5, r6, lr}
 80122c2:	4605      	mov	r5, r0
 80122c4:	4b16      	ldr	r3, [pc, #88]	; (8012320 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80122c6:	f845 3b04 	str.w	r3, [r5], #4
 80122ca:	2300      	movs	r3, #0
 80122cc:	8103      	strh	r3, [r0, #8]
 80122ce:	8143      	strh	r3, [r0, #10]
 80122d0:	8183      	strh	r3, [r0, #12]
 80122d2:	81c3      	strh	r3, [r0, #14]
 80122d4:	8203      	strh	r3, [r0, #16]
 80122d6:	8243      	strh	r3, [r0, #18]
 80122d8:	8283      	strh	r3, [r0, #20]
 80122da:	82c3      	strh	r3, [r0, #22]
 80122dc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80122e0:	6203      	str	r3, [r0, #32]
 80122e2:	8483      	strh	r3, [r0, #36]	; 0x24
 80122e4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80122e6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80122ea:	4a0e      	ldr	r2, [pc, #56]	; (8012324 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80122ec:	6343      	str	r3, [r0, #52]	; 0x34
 80122ee:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80122f2:	4b0d      	ldr	r3, [pc, #52]	; (8012328 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80122f4:	6042      	str	r2, [r0, #4]
 80122f6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80122fa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80122fc:	4a0b      	ldr	r2, [pc, #44]	; (801232c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80122fe:	4604      	mov	r4, r0
 8012300:	2101      	movs	r1, #1
 8012302:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8012306:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801230a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801230e:	4628      	mov	r0, r5
 8012310:	4798      	blx	r3
 8012312:	6863      	ldr	r3, [r4, #4]
 8012314:	4628      	mov	r0, r5
 8012316:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012318:	4631      	mov	r1, r6
 801231a:	4798      	blx	r3
 801231c:	4620      	mov	r0, r4
 801231e:	bd70      	pop	{r4, r5, r6, pc}
 8012320:	08024f10 	.word	0x08024f10
 8012324:	08024a3c 	.word	0x08024a3c
 8012328:	20014fca 	.word	0x20014fca
 801232c:	20014fc8 	.word	0x20014fc8

08012330 <_ZN8touchgfx6Screen4drawEv>:
 8012330:	b507      	push	{r0, r1, r2, lr}
 8012332:	4b09      	ldr	r3, [pc, #36]	; (8012358 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012334:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012338:	4b08      	ldr	r3, [pc, #32]	; (801235c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801233a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801233e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012342:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012346:	6803      	ldr	r3, [r0, #0]
 8012348:	2100      	movs	r1, #0
 801234a:	9100      	str	r1, [sp, #0]
 801234c:	689b      	ldr	r3, [r3, #8]
 801234e:	4669      	mov	r1, sp
 8012350:	4798      	blx	r3
 8012352:	b003      	add	sp, #12
 8012354:	f85d fb04 	ldr.w	pc, [sp], #4
 8012358:	20014fc8 	.word	0x20014fc8
 801235c:	20014fca 	.word	0x20014fca

08012360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012364:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8012368:	2b00      	cmp	r3, #0
 801236a:	b089      	sub	sp, #36	; 0x24
 801236c:	4680      	mov	r8, r0
 801236e:	460c      	mov	r4, r1
 8012370:	4615      	mov	r5, r2
 8012372:	dd0e      	ble.n	8012392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012374:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012378:	2b00      	cmp	r3, #0
 801237a:	dd0a      	ble.n	8012392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801237c:	4628      	mov	r0, r5
 801237e:	f7ff ff5b 	bl	8012238 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012382:	4621      	mov	r1, r4
 8012384:	f7fe faa7 	bl	80108d6 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012388:	69eb      	ldr	r3, [r5, #28]
 801238a:	b928      	cbnz	r0, 8012398 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801238c:	461d      	mov	r5, r3
 801238e:	2b00      	cmp	r3, #0
 8012390:	d1f4      	bne.n	801237c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012392:	b009      	add	sp, #36	; 0x24
 8012394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012398:	ae04      	add	r6, sp, #16
 801239a:	2b00      	cmp	r3, #0
 801239c:	f000 80b5 	beq.w	801250a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80123a0:	682b      	ldr	r3, [r5, #0]
 80123a2:	4629      	mov	r1, r5
 80123a4:	68db      	ldr	r3, [r3, #12]
 80123a6:	a802      	add	r0, sp, #8
 80123a8:	4798      	blx	r3
 80123aa:	4628      	mov	r0, r5
 80123ac:	f7ff ff60 	bl	8012270 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80123b0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80123b4:	4407      	add	r7, r0
 80123b6:	4628      	mov	r0, r5
 80123b8:	f7ff ff6e 	bl	8012298 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80123bc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80123c0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80123c4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80123c8:	4418      	add	r0, r3
 80123ca:	4621      	mov	r1, r4
 80123cc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80123d0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80123d4:	b23f      	sxth	r7, r7
 80123d6:	4630      	mov	r0, r6
 80123d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80123dc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80123e0:	f7fa fd4c 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 80123e4:	4628      	mov	r0, r5
 80123e6:	f7ff ff27 	bl	8012238 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80123ea:	4602      	mov	r2, r0
 80123ec:	e896 0003 	ldmia.w	r6, {r0, r1}
 80123f0:	ab06      	add	r3, sp, #24
 80123f2:	e883 0003 	stmia.w	r3, {r0, r1}
 80123f6:	4611      	mov	r1, r2
 80123f8:	4618      	mov	r0, r3
 80123fa:	f7fa fd3f 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 80123fe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012402:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012406:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801240a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801240e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8012412:	4299      	cmp	r1, r3
 8012414:	d10b      	bne.n	801242e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012416:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801241a:	4552      	cmp	r2, sl
 801241c:	d107      	bne.n	801242e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801241e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012422:	455a      	cmp	r2, fp
 8012424:	d103      	bne.n	801242e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8012426:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801242a:	454a      	cmp	r2, r9
 801242c:	d06d      	beq.n	801250a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801242e:	f1bb 0f00 	cmp.w	fp, #0
 8012432:	dd65      	ble.n	8012500 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012434:	f1b9 0f00 	cmp.w	r9, #0
 8012438:	dd62      	ble.n	8012500 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801243a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801243e:	fa1f f08a 	uxth.w	r0, sl
 8012442:	4552      	cmp	r2, sl
 8012444:	9000      	str	r0, [sp, #0]
 8012446:	da12      	bge.n	801246e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8012448:	9301      	str	r3, [sp, #4]
 801244a:	9b00      	ldr	r3, [sp, #0]
 801244c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012450:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012454:	1a9a      	subs	r2, r3, r2
 8012456:	f8ad 1010 	strh.w	r1, [sp, #16]
 801245a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801245e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012462:	69ea      	ldr	r2, [r5, #28]
 8012464:	4631      	mov	r1, r6
 8012466:	4640      	mov	r0, r8
 8012468:	f7ff ff7a 	bl	8012360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801246c:	9b01      	ldr	r3, [sp, #4]
 801246e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012472:	429a      	cmp	r2, r3
 8012474:	b29f      	uxth	r7, r3
 8012476:	da0d      	bge.n	8012494 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8012478:	f8ad 2010 	strh.w	r2, [sp, #16]
 801247c:	1aba      	subs	r2, r7, r2
 801247e:	f8ad a012 	strh.w	sl, [sp, #18]
 8012482:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012486:	f8ad 9016 	strh.w	r9, [sp, #22]
 801248a:	69ea      	ldr	r2, [r5, #28]
 801248c:	4631      	mov	r1, r6
 801248e:	4640      	mov	r0, r8
 8012490:	f7ff ff66 	bl	8012360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012494:	8822      	ldrh	r2, [r4, #0]
 8012496:	88a3      	ldrh	r3, [r4, #4]
 8012498:	445f      	add	r7, fp
 801249a:	4413      	add	r3, r2
 801249c:	b29b      	uxth	r3, r3
 801249e:	b2bf      	uxth	r7, r7
 80124a0:	b23a      	sxth	r2, r7
 80124a2:	b219      	sxth	r1, r3
 80124a4:	4291      	cmp	r1, r2
 80124a6:	dd0d      	ble.n	80124c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80124a8:	1bdb      	subs	r3, r3, r7
 80124aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80124ae:	f8ad a012 	strh.w	sl, [sp, #18]
 80124b2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80124b6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80124ba:	69ea      	ldr	r2, [r5, #28]
 80124bc:	4631      	mov	r1, r6
 80124be:	4640      	mov	r0, r8
 80124c0:	f7ff ff4e 	bl	8012360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80124c4:	88e2      	ldrh	r2, [r4, #6]
 80124c6:	8863      	ldrh	r3, [r4, #2]
 80124c8:	4413      	add	r3, r2
 80124ca:	9a00      	ldr	r2, [sp, #0]
 80124cc:	444a      	add	r2, r9
 80124ce:	b29b      	uxth	r3, r3
 80124d0:	fa1f f982 	uxth.w	r9, r2
 80124d4:	fa0f f289 	sxth.w	r2, r9
 80124d8:	b219      	sxth	r1, r3
 80124da:	428a      	cmp	r2, r1
 80124dc:	da15      	bge.n	801250a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80124de:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80124e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80124e6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80124ea:	eba3 0309 	sub.w	r3, r3, r9
 80124ee:	f8ad 0010 	strh.w	r0, [sp, #16]
 80124f2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80124f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80124fa:	69ea      	ldr	r2, [r5, #28]
 80124fc:	4631      	mov	r1, r6
 80124fe:	e001      	b.n	8012504 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8012500:	69ea      	ldr	r2, [r5, #28]
 8012502:	4621      	mov	r1, r4
 8012504:	4640      	mov	r0, r8
 8012506:	f7ff ff2b 	bl	8012360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801250a:	4628      	mov	r0, r5
 801250c:	f7ff fe94 	bl	8012238 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012510:	6861      	ldr	r1, [r4, #4]
 8012512:	4602      	mov	r2, r0
 8012514:	6820      	ldr	r0, [r4, #0]
 8012516:	4633      	mov	r3, r6
 8012518:	c303      	stmia	r3!, {r0, r1}
 801251a:	4611      	mov	r1, r2
 801251c:	4630      	mov	r0, r6
 801251e:	f7fa fcad 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 8012522:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012526:	2b00      	cmp	r3, #0
 8012528:	f77f af33 	ble.w	8012392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801252c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012530:	2b00      	cmp	r3, #0
 8012532:	f77f af2e 	ble.w	8012392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012536:	4628      	mov	r0, r5
 8012538:	f7ff fe9a 	bl	8012270 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801253c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012540:	1a18      	subs	r0, r3, r0
 8012542:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012546:	4628      	mov	r0, r5
 8012548:	f7ff fea6 	bl	8012298 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801254c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012550:	1a18      	subs	r0, r3, r0
 8012552:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012556:	682b      	ldr	r3, [r5, #0]
 8012558:	4631      	mov	r1, r6
 801255a:	689b      	ldr	r3, [r3, #8]
 801255c:	4628      	mov	r0, r5
 801255e:	4798      	blx	r3
 8012560:	e717      	b.n	8012392 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012562 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012562:	b570      	push	{r4, r5, r6, lr}
 8012564:	460c      	mov	r4, r1
 8012566:	b086      	sub	sp, #24
 8012568:	1d06      	adds	r6, r0, #4
 801256a:	2300      	movs	r3, #0
 801256c:	4631      	mov	r1, r6
 801256e:	4605      	mov	r5, r0
 8012570:	a802      	add	r0, sp, #8
 8012572:	9301      	str	r3, [sp, #4]
 8012574:	f7ff fbea 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012578:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801257c:	8822      	ldrh	r2, [r4, #0]
 801257e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012582:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012586:	f8ad 0014 	strh.w	r0, [sp, #20]
 801258a:	1ad2      	subs	r2, r2, r3
 801258c:	8863      	ldrh	r3, [r4, #2]
 801258e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012592:	1a5b      	subs	r3, r3, r1
 8012594:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012598:	f8ad 1016 	strh.w	r1, [sp, #22]
 801259c:	aa01      	add	r2, sp, #4
 801259e:	a904      	add	r1, sp, #16
 80125a0:	4630      	mov	r0, r6
 80125a2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80125a6:	f7fa fd41 	bl	800d02c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80125aa:	9a01      	ldr	r2, [sp, #4]
 80125ac:	b11a      	cbz	r2, 80125b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80125ae:	4621      	mov	r1, r4
 80125b0:	4628      	mov	r0, r5
 80125b2:	f7ff fed5 	bl	8012360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80125b6:	b006      	add	sp, #24
 80125b8:	bd70      	pop	{r4, r5, r6, pc}

080125ba <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80125ba:	b530      	push	{r4, r5, lr}
 80125bc:	4602      	mov	r2, r0
 80125be:	4604      	mov	r4, r0
 80125c0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80125c4:	b085      	sub	sp, #20
 80125c6:	460d      	mov	r5, r1
 80125c8:	6851      	ldr	r1, [r2, #4]
 80125ca:	466b      	mov	r3, sp
 80125cc:	c303      	stmia	r3!, {r0, r1}
 80125ce:	4629      	mov	r1, r5
 80125d0:	4668      	mov	r0, sp
 80125d2:	f7fa fc53 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 80125d6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80125da:	b12b      	cbz	r3, 80125e8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80125dc:	4669      	mov	r1, sp
 80125de:	4620      	mov	r0, r4
 80125e0:	f7ff ffbf 	bl	8012562 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80125e4:	b005      	add	sp, #20
 80125e6:	bd30      	pop	{r4, r5, pc}
 80125e8:	3404      	adds	r4, #4
 80125ea:	4621      	mov	r1, r4
 80125ec:	a802      	add	r0, sp, #8
 80125ee:	f7ff fbad 	bl	8011d4c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80125f2:	f8bd 3000 	ldrh.w	r3, [sp]
 80125f6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80125fa:	1a9b      	subs	r3, r3, r2
 80125fc:	f8ad 3000 	strh.w	r3, [sp]
 8012600:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012604:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012608:	4669      	mov	r1, sp
 801260a:	1a9b      	subs	r3, r3, r2
 801260c:	4620      	mov	r0, r4
 801260e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012612:	f7fa fcd2 	bl	800cfba <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012616:	e7e5      	b.n	80125e4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012618 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012618:	680a      	ldr	r2, [r1, #0]
 801261a:	460b      	mov	r3, r1
 801261c:	6992      	ldr	r2, [r2, #24]
 801261e:	1d01      	adds	r1, r0, #4
 8012620:	4618      	mov	r0, r3
 8012622:	4710      	bx	r2

08012624 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012624:	4298      	cmp	r0, r3
 8012626:	d200      	bcs.n	801262a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012628:	b913      	cbnz	r3, 8012630 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801262a:	440a      	add	r2, r1
 801262c:	b210      	sxth	r0, r2
 801262e:	4770      	bx	lr
 8012630:	ee07 0a90 	vmov	s15, r0
 8012634:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012638:	ee07 3a90 	vmov	s15, r3
 801263c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012640:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012644:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012648:	ee37 7a66 	vsub.f32	s14, s14, s13
 801264c:	ee07 2a90 	vmov	s15, r2
 8012650:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012654:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012658:	eee5 6a87 	vfma.f32	s13, s11, s14
 801265c:	ee07 1a90 	vmov	s15, r1
 8012660:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012664:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012668:	eee6 7a26 	vfma.f32	s15, s12, s13
 801266c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012674:	bfcc      	ite	gt
 8012676:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801267a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801267e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012682:	ee17 3a90 	vmov	r3, s15
 8012686:	b218      	sxth	r0, r3
 8012688:	4770      	bx	lr

0801268a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801268a:	4298      	cmp	r0, r3
 801268c:	d200      	bcs.n	8012690 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801268e:	b913      	cbnz	r3, 8012696 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8012690:	440a      	add	r2, r1
 8012692:	b210      	sxth	r0, r2
 8012694:	4770      	bx	lr
 8012696:	ee07 2a90 	vmov	s15, r2
 801269a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801269e:	ee07 0a90 	vmov	s15, r0
 80126a2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80126a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80126aa:	ee07 3a10 	vmov	s14, r3
 80126ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80126b2:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80126b6:	ee07 1a90 	vmov	s15, r1
 80126ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80126be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80126c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80126c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80126ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126ce:	bfcc      	ite	gt
 80126d0:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80126d4:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80126d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80126dc:	ee17 3a90 	vmov	r3, s15
 80126e0:	b218      	sxth	r0, r3
 80126e2:	4770      	bx	lr

080126e4 <_ZN8touchgfx12TextProviderC1Ev>:
 80126e4:	b538      	push	{r3, r4, r5, lr}
 80126e6:	2500      	movs	r5, #0
 80126e8:	2302      	movs	r3, #2
 80126ea:	4604      	mov	r4, r0
 80126ec:	e9c0 5500 	strd	r5, r5, [r0]
 80126f0:	7403      	strb	r3, [r0, #16]
 80126f2:	6145      	str	r5, [r0, #20]
 80126f4:	7605      	strb	r5, [r0, #24]
 80126f6:	83c5      	strh	r5, [r0, #30]
 80126f8:	8405      	strh	r5, [r0, #32]
 80126fa:	86c5      	strh	r5, [r0, #54]	; 0x36
 80126fc:	8705      	strh	r5, [r0, #56]	; 0x38
 80126fe:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012700:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012704:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012708:	220e      	movs	r2, #14
 801270a:	4629      	mov	r1, r5
 801270c:	304c      	adds	r0, #76	; 0x4c
 801270e:	f00f f919 	bl	8021944 <memset>
 8012712:	2301      	movs	r3, #1
 8012714:	4620      	mov	r0, r4
 8012716:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801271a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801271e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012722:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012726:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801272a:	f7f2 ff5d 	bl	80055e8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801272e:	4620      	mov	r0, r4
 8012730:	bd38      	pop	{r3, r4, r5, pc}

08012732 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012732:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012734:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012738:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801273a:	fab0 f080 	clz	r0, r0
 801273e:	0940      	lsrs	r0, r0, #5
 8012740:	4770      	bx	lr

08012742 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012742:	b530      	push	{r4, r5, lr}
 8012744:	2500      	movs	r5, #0
 8012746:	2401      	movs	r4, #1
 8012748:	6843      	ldr	r3, [r0, #4]
 801274a:	b913      	cbnz	r3, 8012752 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801274c:	6803      	ldr	r3, [r0, #0]
 801274e:	b313      	cbz	r3, 8012796 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012750:	6043      	str	r3, [r0, #4]
 8012752:	7e03      	ldrb	r3, [r0, #24]
 8012754:	b143      	cbz	r3, 8012768 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012756:	6943      	ldr	r3, [r0, #20]
 8012758:	b12b      	cbz	r3, 8012766 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801275a:	881a      	ldrh	r2, [r3, #0]
 801275c:	b11a      	cbz	r2, 8012766 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801275e:	1c9a      	adds	r2, r3, #2
 8012760:	6142      	str	r2, [r0, #20]
 8012762:	8818      	ldrh	r0, [r3, #0]
 8012764:	bd30      	pop	{r4, r5, pc}
 8012766:	7605      	strb	r5, [r0, #24]
 8012768:	6843      	ldr	r3, [r0, #4]
 801276a:	8819      	ldrh	r1, [r3, #0]
 801276c:	b199      	cbz	r1, 8012796 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801276e:	1c9a      	adds	r2, r3, #2
 8012770:	2902      	cmp	r1, #2
 8012772:	6042      	str	r2, [r0, #4]
 8012774:	d1f5      	bne.n	8012762 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012776:	7c03      	ldrb	r3, [r0, #16]
 8012778:	2b01      	cmp	r3, #1
 801277a:	d8e5      	bhi.n	8012748 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801277c:	1c5a      	adds	r2, r3, #1
 801277e:	3302      	adds	r3, #2
 8012780:	7402      	strb	r2, [r0, #16]
 8012782:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012786:	6143      	str	r3, [r0, #20]
 8012788:	2b00      	cmp	r3, #0
 801278a:	d0dd      	beq.n	8012748 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801278c:	881b      	ldrh	r3, [r3, #0]
 801278e:	2b00      	cmp	r3, #0
 8012790:	d0da      	beq.n	8012748 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012792:	7604      	strb	r4, [r0, #24]
 8012794:	e7d8      	b.n	8012748 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012796:	2000      	movs	r0, #0
 8012798:	e7e4      	b.n	8012764 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801279a:	b430      	push	{r4, r5}
 801279c:	6001      	str	r1, [r0, #0]
 801279e:	2100      	movs	r1, #0
 80127a0:	6041      	str	r1, [r0, #4]
 80127a2:	6815      	ldr	r5, [r2, #0]
 80127a4:	6085      	str	r5, [r0, #8]
 80127a6:	6852      	ldr	r2, [r2, #4]
 80127a8:	6443      	str	r3, [r0, #68]	; 0x44
 80127aa:	9b02      	ldr	r3, [sp, #8]
 80127ac:	60c2      	str	r2, [r0, #12]
 80127ae:	7401      	strb	r1, [r0, #16]
 80127b0:	6141      	str	r1, [r0, #20]
 80127b2:	7601      	strb	r1, [r0, #24]
 80127b4:	8701      	strh	r1, [r0, #56]	; 0x38
 80127b6:	8401      	strh	r1, [r0, #32]
 80127b8:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80127bc:	6483      	str	r3, [r0, #72]	; 0x48
 80127be:	bc30      	pop	{r4, r5}
 80127c0:	f7f2 bf12 	b.w	80055e8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080127c4 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80127c4:	b408      	push	{r3}
 80127c6:	b510      	push	{r4, lr}
 80127c8:	b085      	sub	sp, #20
 80127ca:	ac07      	add	r4, sp, #28
 80127cc:	f854 3b04 	ldr.w	r3, [r4], #4
 80127d0:	9300      	str	r3, [sp, #0]
 80127d2:	4613      	mov	r3, r2
 80127d4:	4622      	mov	r2, r4
 80127d6:	9403      	str	r4, [sp, #12]
 80127d8:	f7ff ffdf 	bl	801279a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80127dc:	b005      	add	sp, #20
 80127de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80127e2:	b001      	add	sp, #4
 80127e4:	4770      	bx	lr

080127e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80127e6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80127e8:	4605      	mov	r5, r0
 80127ea:	4608      	mov	r0, r1
 80127ec:	b1e9      	cbz	r1, 801282a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80127ee:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80127f2:	460b      	mov	r3, r1
 80127f4:	f101 0708 	add.w	r7, r1, #8
 80127f8:	4622      	mov	r2, r4
 80127fa:	6818      	ldr	r0, [r3, #0]
 80127fc:	6859      	ldr	r1, [r3, #4]
 80127fe:	4626      	mov	r6, r4
 8012800:	c603      	stmia	r6!, {r0, r1}
 8012802:	3308      	adds	r3, #8
 8012804:	42bb      	cmp	r3, r7
 8012806:	4634      	mov	r4, r6
 8012808:	d1f7      	bne.n	80127fa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801280a:	6818      	ldr	r0, [r3, #0]
 801280c:	6030      	str	r0, [r6, #0]
 801280e:	889b      	ldrh	r3, [r3, #4]
 8012810:	80b3      	strh	r3, [r6, #4]
 8012812:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012816:	015b      	lsls	r3, r3, #5
 8012818:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801281c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012820:	430b      	orrs	r3, r1
 8012822:	425b      	negs	r3, r3
 8012824:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012828:	4610      	mov	r0, r2
 801282a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801282c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801282c:	b538      	push	{r3, r4, r5, lr}
 801282e:	460c      	mov	r4, r1
 8012830:	6811      	ldr	r1, [r2, #0]
 8012832:	4610      	mov	r0, r2
 8012834:	68cd      	ldr	r5, [r1, #12]
 8012836:	4619      	mov	r1, r3
 8012838:	47a8      	blx	r5
 801283a:	2800      	cmp	r0, #0
 801283c:	bf08      	it	eq
 801283e:	4620      	moveq	r0, r4
 8012840:	bd38      	pop	{r3, r4, r5, pc}
	...

08012844 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012846:	4604      	mov	r4, r0
 8012848:	4615      	mov	r5, r2
 801284a:	4608      	mov	r0, r1
 801284c:	b93a      	cbnz	r2, 801285e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801284e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012852:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012856:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801285a:	4628      	mov	r0, r5
 801285c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801285e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012862:	8893      	ldrh	r3, [r2, #4]
 8012864:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012868:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801286c:	79ee      	ldrb	r6, [r5, #7]
 801286e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012872:	4316      	orrs	r6, r2
 8012874:	19da      	adds	r2, r3, r7
 8012876:	b291      	uxth	r1, r2
 8012878:	291d      	cmp	r1, #29
 801287a:	b2b7      	uxth	r7, r6
 801287c:	d87a      	bhi.n	8012974 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801287e:	2201      	movs	r2, #1
 8012880:	408a      	lsls	r2, r1
 8012882:	4975      	ldr	r1, [pc, #468]	; (8012a58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012884:	420a      	tst	r2, r1
 8012886:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801288a:	d12d      	bne.n	80128e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801288c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012890:	d070      	beq.n	8012974 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012892:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012896:	462b      	mov	r3, r5
 8012898:	f105 0e08 	add.w	lr, r5, #8
 801289c:	4615      	mov	r5, r2
 801289e:	6818      	ldr	r0, [r3, #0]
 80128a0:	6859      	ldr	r1, [r3, #4]
 80128a2:	4694      	mov	ip, r2
 80128a4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80128a8:	3308      	adds	r3, #8
 80128aa:	4573      	cmp	r3, lr
 80128ac:	4662      	mov	r2, ip
 80128ae:	d1f6      	bne.n	801289e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80128b0:	6818      	ldr	r0, [r3, #0]
 80128b2:	f8cc 0000 	str.w	r0, [ip]
 80128b6:	889b      	ldrh	r3, [r3, #4]
 80128b8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80128bc:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 80128c0:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80128c4:	b2b3      	uxth	r3, r6
 80128c6:	1aca      	subs	r2, r1, r3
 80128c8:	b292      	uxth	r2, r2
 80128ca:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80128ce:	10d2      	asrs	r2, r2, #3
 80128d0:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80128d4:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80128d8:	4302      	orrs	r2, r0
 80128da:	1bcf      	subs	r7, r1, r7
 80128dc:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80128e0:	1afb      	subs	r3, r7, r3
 80128e2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80128e6:	e7b8      	b.n	801285a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80128e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80128ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80128ee:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80128f0:	f640 6333 	movw	r3, #3635	; 0xe33
 80128f4:	4299      	cmp	r1, r3
 80128f6:	d110      	bne.n	801291a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80128f8:	6803      	ldr	r3, [r0, #0]
 80128fa:	68db      	ldr	r3, [r3, #12]
 80128fc:	4798      	blx	r3
 80128fe:	7b41      	ldrb	r1, [r0, #13]
 8012900:	00cb      	lsls	r3, r1, #3
 8012902:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012906:	7a03      	ldrb	r3, [r0, #8]
 8012908:	0648      	lsls	r0, r1, #25
 801290a:	ea43 0302 	orr.w	r3, r3, r2
 801290e:	bf44      	itt	mi
 8012910:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012914:	b21b      	sxthmi	r3, r3
 8012916:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801291a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801291e:	443b      	add	r3, r7
 8012920:	4433      	add	r3, r6
 8012922:	b29b      	uxth	r3, r3
 8012924:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012928:	462a      	mov	r2, r5
 801292a:	f105 0c08 	add.w	ip, r5, #8
 801292e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012932:	4635      	mov	r5, r6
 8012934:	6810      	ldr	r0, [r2, #0]
 8012936:	6851      	ldr	r1, [r2, #4]
 8012938:	4637      	mov	r7, r6
 801293a:	c703      	stmia	r7!, {r0, r1}
 801293c:	3208      	adds	r2, #8
 801293e:	4562      	cmp	r2, ip
 8012940:	463e      	mov	r6, r7
 8012942:	d1f7      	bne.n	8012934 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012944:	6810      	ldr	r0, [r2, #0]
 8012946:	6038      	str	r0, [r7, #0]
 8012948:	8892      	ldrh	r2, [r2, #4]
 801294a:	80ba      	strh	r2, [r7, #4]
 801294c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012950:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012954:	10db      	asrs	r3, r3, #3
 8012956:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801295a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801295e:	4313      	orrs	r3, r2
 8012960:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012964:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012968:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801296c:	1a9b      	subs	r3, r3, r2
 801296e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012972:	e772      	b.n	801285a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012974:	f023 0204 	bic.w	r2, r3, #4
 8012978:	f640 611b 	movw	r1, #3611	; 0xe1b
 801297c:	428a      	cmp	r2, r1
 801297e:	d003      	beq.n	8012988 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012980:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012984:	4293      	cmp	r3, r2
 8012986:	d120      	bne.n	80129ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012988:	3b01      	subs	r3, #1
 801298a:	4602      	mov	r2, r0
 801298c:	b29b      	uxth	r3, r3
 801298e:	4629      	mov	r1, r5
 8012990:	4620      	mov	r0, r4
 8012992:	f7ff ff4b 	bl	801282c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012996:	7b41      	ldrb	r1, [r0, #13]
 8012998:	00cb      	lsls	r3, r1, #3
 801299a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801299e:	7a03      	ldrb	r3, [r0, #8]
 80129a0:	0649      	lsls	r1, r1, #25
 80129a2:	ea43 0302 	orr.w	r3, r3, r2
 80129a6:	bf44      	itt	mi
 80129a8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80129ac:	b21b      	sxthmi	r3, r3
 80129ae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80129b2:	7b6b      	ldrb	r3, [r5, #13]
 80129b4:	7aaa      	ldrb	r2, [r5, #10]
 80129b6:	005b      	lsls	r3, r3, #1
 80129b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80129bc:	4313      	orrs	r3, r2
 80129be:	115a      	asrs	r2, r3, #5
 80129c0:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80129c4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80129c8:	e036      	b.n	8012a38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80129ca:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80129ce:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80129d2:	7a2a      	ldrb	r2, [r5, #8]
 80129d4:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80129d8:	ea42 0201 	orr.w	r2, r2, r1
 80129dc:	bf1c      	itt	ne
 80129de:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80129e2:	b212      	sxthne	r2, r2
 80129e4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80129e8:	f640 6109 	movw	r1, #3593	; 0xe09
 80129ec:	f023 0210 	bic.w	r2, r3, #16
 80129f0:	428a      	cmp	r2, r1
 80129f2:	d003      	beq.n	80129fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80129f4:	f640 6213 	movw	r2, #3603	; 0xe13
 80129f8:	4293      	cmp	r3, r2
 80129fa:	d12a      	bne.n	8012a52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80129fc:	7b6e      	ldrb	r6, [r5, #13]
 80129fe:	0076      	lsls	r6, r6, #1
 8012a00:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012a04:	7aae      	ldrb	r6, [r5, #10]
 8012a06:	4316      	orrs	r6, r2
 8012a08:	f640 6213 	movw	r2, #3603	; 0xe13
 8012a0c:	4293      	cmp	r3, r2
 8012a0e:	bf18      	it	ne
 8012a10:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012a14:	4602      	mov	r2, r0
 8012a16:	bf14      	ite	ne
 8012a18:	b29b      	uxthne	r3, r3
 8012a1a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012a1e:	4629      	mov	r1, r5
 8012a20:	4620      	mov	r0, r4
 8012a22:	f7ff ff03 	bl	801282c <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012a26:	7b43      	ldrb	r3, [r0, #13]
 8012a28:	7a82      	ldrb	r2, [r0, #10]
 8012a2a:	005b      	lsls	r3, r3, #1
 8012a2c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012a30:	4313      	orrs	r3, r2
 8012a32:	1af6      	subs	r6, r6, r3
 8012a34:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012a38:	7b69      	ldrb	r1, [r5, #13]
 8012a3a:	00cb      	lsls	r3, r1, #3
 8012a3c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012a40:	7a2b      	ldrb	r3, [r5, #8]
 8012a42:	4313      	orrs	r3, r2
 8012a44:	064a      	lsls	r2, r1, #25
 8012a46:	bf44      	itt	mi
 8012a48:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012a4c:	b21b      	sxthmi	r3, r3
 8012a4e:	1bdb      	subs	r3, r3, r7
 8012a50:	e747      	b.n	80128e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012a52:	2300      	movs	r3, #0
 8012a54:	e7b6      	b.n	80129c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012a56:	bf00      	nop
 8012a58:	3fc00079 	.word	0x3fc00079

08012a5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012a5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012a60:	4604      	mov	r4, r0
 8012a62:	b942      	cbnz	r2, 8012a76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012a64:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012a68:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012a6c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012a70:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012a74:	e047      	b.n	8012b06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012a76:	7b51      	ldrb	r1, [r2, #13]
 8012a78:	8893      	ldrh	r3, [r2, #4]
 8012a7a:	010d      	lsls	r5, r1, #4
 8012a7c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012a80:	79d5      	ldrb	r5, [r2, #7]
 8012a82:	4305      	orrs	r5, r0
 8012a84:	2d04      	cmp	r5, #4
 8012a86:	bfcc      	ite	gt
 8012a88:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012a8c:	f04f 0e01 	movle.w	lr, #1
 8012a90:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012a94:	f200 80ab 	bhi.w	8012bee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012a98:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012a9c:	4283      	cmp	r3, r0
 8012a9e:	d216      	bcs.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012aa0:	f240 605b 	movw	r0, #1627	; 0x65b
 8012aa4:	4283      	cmp	r3, r0
 8012aa6:	d859      	bhi.n	8012b5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012aa8:	f240 6057 	movw	r0, #1623	; 0x657
 8012aac:	4283      	cmp	r3, r0
 8012aae:	d20e      	bcs.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ab0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012ab4:	d24a      	bcs.n	8012b4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012ab6:	f240 604e 	movw	r0, #1614	; 0x64e
 8012aba:	4283      	cmp	r3, r0
 8012abc:	d207      	bcs.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012abe:	f240 601a 	movw	r0, #1562	; 0x61a
 8012ac2:	4283      	cmp	r3, r0
 8012ac4:	d02a      	beq.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ac6:	d821      	bhi.n	8012b0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012ac8:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012acc:	d35b      	bcc.n	8012b86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012ace:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012ad2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012ad6:	f040 80d0 	bne.w	8012c7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012ada:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012ade:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012ae2:	f040 80ca 	bne.w	8012c7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012ae6:	00cb      	lsls	r3, r1, #3
 8012ae8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012aec:	7a13      	ldrb	r3, [r2, #8]
 8012aee:	0649      	lsls	r1, r1, #25
 8012af0:	ea43 0300 	orr.w	r3, r3, r0
 8012af4:	bf44      	itt	mi
 8012af6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012afa:	b21b      	sxthmi	r3, r3
 8012afc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012b00:	1b5d      	subs	r5, r3, r5
 8012b02:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012b06:	4610      	mov	r0, r2
 8012b08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b0c:	f240 604b 	movw	r0, #1611	; 0x64b
 8012b10:	4283      	cmp	r3, r0
 8012b12:	d338      	bcc.n	8012b86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012b14:	f240 604c 	movw	r0, #1612	; 0x64c
 8012b18:	4283      	cmp	r3, r0
 8012b1a:	d9d8      	bls.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b1c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012b20:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012b24:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012b28:	f040 80f2 	bne.w	8012d10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012b2c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012b30:	f040 80ee 	bne.w	8012d10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012b34:	00cb      	lsls	r3, r1, #3
 8012b36:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012b3a:	7a13      	ldrb	r3, [r2, #8]
 8012b3c:	064e      	lsls	r6, r1, #25
 8012b3e:	ea43 0300 	orr.w	r3, r3, r0
 8012b42:	bf44      	itt	mi
 8012b44:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012b48:	b21b      	sxthmi	r3, r3
 8012b4a:	e7d9      	b.n	8012b00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012b4c:	f240 6054 	movw	r0, #1620	; 0x654
 8012b50:	4283      	cmp	r3, r0
 8012b52:	d8e3      	bhi.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012b54:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012b58:	d9e0      	bls.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012b5a:	e7b8      	b.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b5c:	f240 6074 	movw	r0, #1652	; 0x674
 8012b60:	4283      	cmp	r3, r0
 8012b62:	d0b4      	beq.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b64:	d82d      	bhi.n	8012bc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012b66:	f240 605e 	movw	r0, #1630	; 0x65e
 8012b6a:	4283      	cmp	r3, r0
 8012b6c:	d804      	bhi.n	8012b78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012b6e:	f240 605d 	movw	r0, #1629	; 0x65d
 8012b72:	4283      	cmp	r3, r0
 8012b74:	d3d2      	bcc.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012b76:	e7aa      	b.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b78:	f240 605f 	movw	r0, #1631	; 0x65f
 8012b7c:	4283      	cmp	r3, r0
 8012b7e:	d0cd      	beq.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012b80:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012b84:	d0a3      	beq.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012b86:	00cb      	lsls	r3, r1, #3
 8012b88:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012b8c:	7a13      	ldrb	r3, [r2, #8]
 8012b8e:	0649      	lsls	r1, r1, #25
 8012b90:	ea43 0300 	orr.w	r3, r3, r0
 8012b94:	bf44      	itt	mi
 8012b96:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012b9a:	b21b      	sxthmi	r3, r3
 8012b9c:	1b5d      	subs	r5, r3, r5
 8012b9e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012ba2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012ba6:	7b53      	ldrb	r3, [r2, #13]
 8012ba8:	015b      	lsls	r3, r3, #5
 8012baa:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012bae:	7993      	ldrb	r3, [r2, #6]
 8012bb0:	430b      	orrs	r3, r1
 8012bb2:	005b      	lsls	r3, r3, #1
 8012bb4:	2105      	movs	r1, #5
 8012bb6:	fb93 f3f1 	sdiv	r3, r3, r1
 8012bba:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012bbe:	440b      	add	r3, r1
 8012bc0:	e756      	b.n	8012a70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012bc2:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012bc6:	4283      	cmp	r3, r0
 8012bc8:	d809      	bhi.n	8012bde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012bca:	f240 60df 	movw	r0, #1759	; 0x6df
 8012bce:	4283      	cmp	r3, r0
 8012bd0:	f4bf af7d 	bcs.w	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012bd4:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8012bd8:	2b05      	cmp	r3, #5
 8012bda:	d8d4      	bhi.n	8012b86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012bdc:	e777      	b.n	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012bde:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012be2:	4283      	cmp	r3, r0
 8012be4:	d09a      	beq.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012be6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8012bea:	4283      	cmp	r3, r0
 8012bec:	e7ca      	b.n	8012b84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012bee:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012bf2:	d22b      	bcs.n	8012c4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012bf4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8012bf8:	4283      	cmp	r3, r0
 8012bfa:	d28f      	bcs.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012bfc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012c00:	4283      	cmp	r3, r0
 8012c02:	d816      	bhi.n	8012c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012c04:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8012c08:	4283      	cmp	r3, r0
 8012c0a:	f4bf af60 	bcs.w	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c0e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012c12:	4283      	cmp	r3, r0
 8012c14:	d80a      	bhi.n	8012c2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012c16:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8012c1a:	4283      	cmp	r3, r0
 8012c1c:	f4bf af57 	bcs.w	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c20:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012c24:	4283      	cmp	r3, r0
 8012c26:	f43f af79 	beq.w	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c2a:	e7ac      	b.n	8012b86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012c2c:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012c30:	e7f8      	b.n	8012c24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012c32:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012c36:	4283      	cmp	r3, r0
 8012c38:	d802      	bhi.n	8012c40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012c3a:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012c3e:	e798      	b.n	8012b72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012c40:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012c44:	4283      	cmp	r3, r0
 8012c46:	f47f af42 	bne.w	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c4a:	e767      	b.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c4c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012c50:	4283      	cmp	r3, r0
 8012c52:	f43f af63 	beq.w	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c56:	d802      	bhi.n	8012c5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012c58:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012c5c:	e7f2      	b.n	8012c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012c5e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012c62:	4283      	cmp	r3, r0
 8012c64:	d805      	bhi.n	8012c72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012c66:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8012c6a:	4283      	cmp	r3, r0
 8012c6c:	f4ff af2f 	bcc.w	8012ace <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012c70:	e754      	b.n	8012b1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012c72:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012c76:	4283      	cmp	r3, r0
 8012c78:	e7af      	b.n	8012bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8012c7a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012c7e:	4617      	mov	r7, r2
 8012c80:	f102 0808 	add.w	r8, r2, #8
 8012c84:	4666      	mov	r6, ip
 8012c86:	6838      	ldr	r0, [r7, #0]
 8012c88:	6879      	ldr	r1, [r7, #4]
 8012c8a:	46e6      	mov	lr, ip
 8012c8c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012c90:	3708      	adds	r7, #8
 8012c92:	4547      	cmp	r7, r8
 8012c94:	46f4      	mov	ip, lr
 8012c96:	d1f6      	bne.n	8012c86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012c98:	6838      	ldr	r0, [r7, #0]
 8012c9a:	f8ce 0000 	str.w	r0, [lr]
 8012c9e:	88b9      	ldrh	r1, [r7, #4]
 8012ca0:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012ca4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012ca8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012cac:	d009      	beq.n	8012cc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012cae:	7b51      	ldrb	r1, [r2, #13]
 8012cb0:	7992      	ldrb	r2, [r2, #6]
 8012cb2:	0149      	lsls	r1, r1, #5
 8012cb4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012cb8:	4311      	orrs	r1, r2
 8012cba:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012cbe:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012cc2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012cc6:	b2ad      	uxth	r5, r5
 8012cc8:	d00d      	beq.n	8012ce6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8012cca:	442b      	add	r3, r5
 8012ccc:	b29b      	uxth	r3, r3
 8012cce:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012cd2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012cd6:	10db      	asrs	r3, r3, #3
 8012cd8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012cdc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012ce0:	4313      	orrs	r3, r2
 8012ce2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012ce6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012cea:	00cb      	lsls	r3, r1, #3
 8012cec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012cf0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012cf4:	064f      	lsls	r7, r1, #25
 8012cf6:	ea43 0302 	orr.w	r3, r3, r2
 8012cfa:	bf44      	itt	mi
 8012cfc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d00:	b21b      	sxthmi	r3, r3
 8012d02:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012d06:	1b5b      	subs	r3, r3, r5
 8012d08:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012d0c:	4632      	mov	r2, r6
 8012d0e:	e6fa      	b.n	8012b06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012d10:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012d14:	4617      	mov	r7, r2
 8012d16:	f102 0908 	add.w	r9, r2, #8
 8012d1a:	4666      	mov	r6, ip
 8012d1c:	6838      	ldr	r0, [r7, #0]
 8012d1e:	6879      	ldr	r1, [r7, #4]
 8012d20:	46e0      	mov	r8, ip
 8012d22:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012d26:	3708      	adds	r7, #8
 8012d28:	454f      	cmp	r7, r9
 8012d2a:	46c4      	mov	ip, r8
 8012d2c:	d1f6      	bne.n	8012d1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8012d2e:	6838      	ldr	r0, [r7, #0]
 8012d30:	f8c8 0000 	str.w	r0, [r8]
 8012d34:	88b9      	ldrh	r1, [r7, #4]
 8012d36:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012d3a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012d3e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012d42:	d009      	beq.n	8012d58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012d44:	7b51      	ldrb	r1, [r2, #13]
 8012d46:	7992      	ldrb	r2, [r2, #6]
 8012d48:	0149      	lsls	r1, r1, #5
 8012d4a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8012d4e:	4311      	orrs	r1, r2
 8012d50:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012d54:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8012d58:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012d5c:	d00e      	beq.n	8012d7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8012d5e:	eba3 030e 	sub.w	r3, r3, lr
 8012d62:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012d66:	b29b      	uxth	r3, r3
 8012d68:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012d6c:	10db      	asrs	r3, r3, #3
 8012d6e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012d72:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012d76:	4313      	orrs	r3, r2
 8012d78:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012d7c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8012d80:	00cb      	lsls	r3, r1, #3
 8012d82:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d86:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8012d8a:	0648      	lsls	r0, r1, #25
 8012d8c:	ea43 0302 	orr.w	r3, r3, r2
 8012d90:	bf44      	itt	mi
 8012d92:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d96:	b21b      	sxthmi	r3, r3
 8012d98:	1b5d      	subs	r5, r3, r5
 8012d9a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012d9e:	e7b5      	b.n	8012d0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08012da0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8012da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012da4:	461e      	mov	r6, r3
 8012da6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012da8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012dac:	4604      	mov	r4, r0
 8012dae:	4617      	mov	r7, r2
 8012db0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012db4:	f7f2 fbd6 	bl	8005564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012db8:	4605      	mov	r5, r0
 8012dba:	b918      	cbnz	r0, 8012dc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8012dbc:	6030      	str	r0, [r6, #0]
 8012dbe:	4628      	mov	r0, r5
 8012dc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012dc4:	683b      	ldr	r3, [r7, #0]
 8012dc6:	4601      	mov	r1, r0
 8012dc8:	68db      	ldr	r3, [r3, #12]
 8012dca:	4638      	mov	r0, r7
 8012dcc:	4798      	blx	r3
 8012dce:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012dd2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012dd6:	4602      	mov	r2, r0
 8012dd8:	6030      	str	r0, [r6, #0]
 8012dda:	d213      	bcs.n	8012e04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8012ddc:	4643      	mov	r3, r8
 8012dde:	4639      	mov	r1, r7
 8012de0:	4620      	mov	r0, r4
 8012de2:	f7ff fe3b 	bl	8012a5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012de6:	6030      	str	r0, [r6, #0]
 8012de8:	6833      	ldr	r3, [r6, #0]
 8012dea:	b143      	cbz	r3, 8012dfe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012dec:	7b5a      	ldrb	r2, [r3, #13]
 8012dee:	7a9b      	ldrb	r3, [r3, #10]
 8012df0:	0052      	lsls	r2, r2, #1
 8012df2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012df6:	4313      	orrs	r3, r2
 8012df8:	bf0c      	ite	eq
 8012dfa:	2301      	moveq	r3, #1
 8012dfc:	2300      	movne	r3, #0
 8012dfe:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012e02:	e7dc      	b.n	8012dbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012e04:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012e08:	b29b      	uxth	r3, r3
 8012e0a:	2b7f      	cmp	r3, #127	; 0x7f
 8012e0c:	d804      	bhi.n	8012e18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8012e0e:	4639      	mov	r1, r7
 8012e10:	4620      	mov	r0, r4
 8012e12:	f7ff fd17 	bl	8012844 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012e16:	e7e6      	b.n	8012de6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012e18:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012e1c:	2b00      	cmp	r3, #0
 8012e1e:	d0e3      	beq.n	8012de8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012e20:	f640 1302 	movw	r3, #2306	; 0x902
 8012e24:	429d      	cmp	r5, r3
 8012e26:	d1df      	bne.n	8012de8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012e28:	4601      	mov	r1, r0
 8012e2a:	4620      	mov	r0, r4
 8012e2c:	f7ff fcdb 	bl	80127e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012e30:	e7d9      	b.n	8012de6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08012e32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8012e32:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012e36:	461e      	mov	r6, r3
 8012e38:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012e3a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012e3e:	4604      	mov	r4, r0
 8012e40:	4617      	mov	r7, r2
 8012e42:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8012e46:	f7f2 fb8d 	bl	8005564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012e4a:	4605      	mov	r5, r0
 8012e4c:	b918      	cbnz	r0, 8012e56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8012e4e:	6030      	str	r0, [r6, #0]
 8012e50:	4628      	mov	r0, r5
 8012e52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012e56:	683b      	ldr	r3, [r7, #0]
 8012e58:	4601      	mov	r1, r0
 8012e5a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8012e5e:	4638      	mov	r0, r7
 8012e60:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012e64:	47c8      	blx	r9
 8012e66:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8012e6a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012e6e:	4602      	mov	r2, r0
 8012e70:	6030      	str	r0, [r6, #0]
 8012e72:	d213      	bcs.n	8012e9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8012e74:	4643      	mov	r3, r8
 8012e76:	4639      	mov	r1, r7
 8012e78:	4620      	mov	r0, r4
 8012e7a:	f7ff fdef 	bl	8012a5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012e7e:	6030      	str	r0, [r6, #0]
 8012e80:	6833      	ldr	r3, [r6, #0]
 8012e82:	b143      	cbz	r3, 8012e96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8012e84:	7b5a      	ldrb	r2, [r3, #13]
 8012e86:	7a9b      	ldrb	r3, [r3, #10]
 8012e88:	0052      	lsls	r2, r2, #1
 8012e8a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8012e8e:	4313      	orrs	r3, r2
 8012e90:	bf0c      	ite	eq
 8012e92:	2301      	moveq	r3, #1
 8012e94:	2300      	movne	r3, #0
 8012e96:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8012e9a:	e7d9      	b.n	8012e50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8012e9c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8012ea0:	b29b      	uxth	r3, r3
 8012ea2:	2b7f      	cmp	r3, #127	; 0x7f
 8012ea4:	d804      	bhi.n	8012eb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8012ea6:	4639      	mov	r1, r7
 8012ea8:	4620      	mov	r0, r4
 8012eaa:	f7ff fccb 	bl	8012844 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012eae:	e7e6      	b.n	8012e7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8012eb0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8012eb4:	2b00      	cmp	r3, #0
 8012eb6:	d0e3      	beq.n	8012e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012eb8:	f640 1302 	movw	r3, #2306	; 0x902
 8012ebc:	429d      	cmp	r5, r3
 8012ebe:	d1df      	bne.n	8012e80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8012ec0:	4601      	mov	r1, r0
 8012ec2:	4620      	mov	r0, r4
 8012ec4:	f7ff fc8f 	bl	80127e6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8012ec8:	e7d9      	b.n	8012e7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08012eca <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8012eca:	b510      	push	{r4, lr}
 8012ecc:	4604      	mov	r4, r0
 8012ece:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8012ed2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012ed4:	b1f1      	cbz	r1, 8012f14 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012ed6:	2b0a      	cmp	r3, #10
 8012ed8:	d02f      	beq.n	8012f3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012eda:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8012edc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8012ee0:	3901      	subs	r1, #1
 8012ee2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8012ee4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8012ee8:	1c51      	adds	r1, r2, #1
 8012eea:	b289      	uxth	r1, r1
 8012eec:	2901      	cmp	r1, #1
 8012eee:	bf84      	itt	hi
 8012ef0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012ef4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8012ef6:	f103 0201 	add.w	r2, r3, #1
 8012efa:	8722      	strh	r2, [r4, #56]	; 0x38
 8012efc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012efe:	bf98      	it	ls
 8012f00:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8012f02:	4413      	add	r3, r2
 8012f04:	b29b      	uxth	r3, r3
 8012f06:	2b09      	cmp	r3, #9
 8012f08:	bf88      	it	hi
 8012f0a:	3b0a      	subhi	r3, #10
 8012f0c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012f10:	8458      	strh	r0, [r3, #34]	; 0x22
 8012f12:	e7dc      	b.n	8012ece <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012f14:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012f16:	2b0a      	cmp	r3, #10
 8012f18:	d00f      	beq.n	8012f3a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012f1a:	4620      	mov	r0, r4
 8012f1c:	f7ff fc11 	bl	8012742 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8012f20:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012f22:	1c5a      	adds	r2, r3, #1
 8012f24:	8722      	strh	r2, [r4, #56]	; 0x38
 8012f26:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012f28:	4413      	add	r3, r2
 8012f2a:	b29b      	uxth	r3, r3
 8012f2c:	2b09      	cmp	r3, #9
 8012f2e:	bf88      	it	hi
 8012f30:	3b0a      	subhi	r3, #10
 8012f32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012f36:	8458      	strh	r0, [r3, #34]	; 0x22
 8012f38:	e7ec      	b.n	8012f14 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012f3a:	bd10      	pop	{r4, pc}

08012f3c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012f3c:	b538      	push	{r3, r4, r5, lr}
 8012f3e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012f40:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012f44:	4604      	mov	r4, r0
 8012f46:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8012f48:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8012f4a:	3a01      	subs	r2, #1
 8012f4c:	8702      	strh	r2, [r0, #56]	; 0x38
 8012f4e:	1c5a      	adds	r2, r3, #1
 8012f50:	b292      	uxth	r2, r2
 8012f52:	2a09      	cmp	r2, #9
 8012f54:	bf86      	itte	hi
 8012f56:	3b09      	subhi	r3, #9
 8012f58:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8012f5a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8012f5c:	f7ff ffb5 	bl	8012eca <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8012f60:	8c23      	ldrh	r3, [r4, #32]
 8012f62:	2b01      	cmp	r3, #1
 8012f64:	bf9c      	itt	ls
 8012f66:	3301      	addls	r3, #1
 8012f68:	8423      	strhls	r3, [r4, #32]
 8012f6a:	8be3      	ldrh	r3, [r4, #30]
 8012f6c:	b90b      	cbnz	r3, 8012f72 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8012f6e:	2302      	movs	r3, #2
 8012f70:	83e3      	strh	r3, [r4, #30]
 8012f72:	8be3      	ldrh	r3, [r4, #30]
 8012f74:	3b01      	subs	r3, #1
 8012f76:	b29b      	uxth	r3, r3
 8012f78:	83e3      	strh	r3, [r4, #30]
 8012f7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012f7e:	4628      	mov	r0, r5
 8012f80:	8365      	strh	r5, [r4, #26]
 8012f82:	bd38      	pop	{r3, r4, r5, pc}

08012f84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8012f84:	428a      	cmp	r2, r1
 8012f86:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f8a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8012f8c:	d931      	bls.n	8012ff2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8012f8e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8012f90:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8012f94:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8012f98:	19ee      	adds	r6, r5, r7
 8012f9a:	1a54      	subs	r4, r2, r1
 8012f9c:	3e01      	subs	r6, #1
 8012f9e:	fa1f fe84 	uxth.w	lr, r4
 8012fa2:	b2b4      	uxth	r4, r6
 8012fa4:	eba4 090e 	sub.w	r9, r4, lr
 8012fa8:	fa1f f989 	uxth.w	r9, r9
 8012fac:	2c09      	cmp	r4, #9
 8012fae:	4626      	mov	r6, r4
 8012fb0:	bf88      	it	hi
 8012fb2:	f1a4 060a 	subhi.w	r6, r4, #10
 8012fb6:	f1bc 0f00 	cmp.w	ip, #0
 8012fba:	bf08      	it	eq
 8012fbc:	f04f 0c02 	moveq.w	ip, #2
 8012fc0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012fc4:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012fc8:	fa1f fc8c 	uxth.w	ip, ip
 8012fcc:	3c01      	subs	r4, #1
 8012fce:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8012fd2:	b2a4      	uxth	r4, r4
 8012fd4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8012fd8:	454c      	cmp	r4, r9
 8012fda:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8012fde:	d1e5      	bne.n	8012fac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8012fe0:	eba5 050e 	sub.w	r5, r5, lr
 8012fe4:	eb0e 0408 	add.w	r4, lr, r8
 8012fe8:	8705      	strh	r5, [r0, #56]	; 0x38
 8012fea:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8012fee:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8012ff2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8012ff4:	1a64      	subs	r4, r4, r1
 8012ff6:	4439      	add	r1, r7
 8012ff8:	b289      	uxth	r1, r1
 8012ffa:	2909      	cmp	r1, #9
 8012ffc:	bf88      	it	hi
 8012ffe:	390a      	subhi	r1, #10
 8013000:	8704      	strh	r4, [r0, #56]	; 0x38
 8013002:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013004:	250a      	movs	r5, #10
 8013006:	b18a      	cbz	r2, 801302c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013008:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801300a:	3a01      	subs	r2, #1
 801300c:	b292      	uxth	r2, r2
 801300e:	3101      	adds	r1, #1
 8013010:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013014:	8701      	strh	r1, [r0, #56]	; 0x38
 8013016:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013018:	b901      	cbnz	r1, 801301c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801301a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801301c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801301e:	3901      	subs	r1, #1
 8013020:	b289      	uxth	r1, r1
 8013022:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013024:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013028:	844c      	strh	r4, [r1, #34]	; 0x22
 801302a:	e7ec      	b.n	8013006 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801302c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013030:	f7ff bf4b 	b.w	8012eca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08013034 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013034:	b570      	push	{r4, r5, r6, lr}
 8013036:	2500      	movs	r5, #0
 8013038:	4295      	cmp	r5, r2
 801303a:	d011      	beq.n	8013060 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801303c:	8bc4      	ldrh	r4, [r0, #30]
 801303e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8013042:	4414      	add	r4, r2
 8013044:	3c01      	subs	r4, #1
 8013046:	1b64      	subs	r4, r4, r5
 8013048:	b2a4      	uxth	r4, r4
 801304a:	2c01      	cmp	r4, #1
 801304c:	bf88      	it	hi
 801304e:	3c02      	subhi	r4, #2
 8013050:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013054:	8b64      	ldrh	r4, [r4, #26]
 8013056:	42b4      	cmp	r4, r6
 8013058:	d117      	bne.n	801308a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801305a:	3501      	adds	r5, #1
 801305c:	b2ad      	uxth	r5, r5
 801305e:	e7eb      	b.n	8013038 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013060:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013064:	2400      	movs	r4, #0
 8013066:	4413      	add	r3, r2
 8013068:	b2a2      	uxth	r2, r4
 801306a:	429a      	cmp	r2, r3
 801306c:	da0f      	bge.n	801308e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801306e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013070:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013074:	4432      	add	r2, r6
 8013076:	b292      	uxth	r2, r2
 8013078:	2a09      	cmp	r2, #9
 801307a:	bf88      	it	hi
 801307c:	3a0a      	subhi	r2, #10
 801307e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013082:	3401      	adds	r4, #1
 8013084:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8013086:	42aa      	cmp	r2, r5
 8013088:	d0ee      	beq.n	8013068 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801308a:	2000      	movs	r0, #0
 801308c:	bd70      	pop	{r4, r5, r6, pc}
 801308e:	2001      	movs	r0, #1
 8013090:	e7fc      	b.n	801308c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08013092 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8013092:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013096:	4605      	mov	r5, r0
 8013098:	4616      	mov	r6, r2
 801309a:	1c8c      	adds	r4, r1, #2
 801309c:	8809      	ldrh	r1, [r1, #0]
 801309e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80130a2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80130a6:	42b3      	cmp	r3, r6
 80130a8:	d124      	bne.n	80130f4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80130aa:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80130ae:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80130b2:	f001 070f 	and.w	r7, r1, #15
 80130b6:	f8cd 8000 	str.w	r8, [sp]
 80130ba:	464b      	mov	r3, r9
 80130bc:	4652      	mov	r2, sl
 80130be:	4621      	mov	r1, r4
 80130c0:	4628      	mov	r0, r5
 80130c2:	f7ff ffb7 	bl	8013034 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80130c6:	4683      	mov	fp, r0
 80130c8:	b168      	cbz	r0, 80130e6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80130ca:	eb0a 0109 	add.w	r1, sl, r9
 80130ce:	4441      	add	r1, r8
 80130d0:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80130d4:	463a      	mov	r2, r7
 80130d6:	4649      	mov	r1, r9
 80130d8:	4628      	mov	r0, r5
 80130da:	f7ff ff53 	bl	8012f84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80130de:	4658      	mov	r0, fp
 80130e0:	b003      	add	sp, #12
 80130e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130e6:	eb07 010a 	add.w	r1, r7, sl
 80130ea:	4449      	add	r1, r9
 80130ec:	4441      	add	r1, r8
 80130ee:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80130f2:	e7d2      	b.n	801309a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80130f4:	f04f 0b00 	mov.w	fp, #0
 80130f8:	e7f1      	b.n	80130de <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080130fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80130fa:	b570      	push	{r4, r5, r6, lr}
 80130fc:	8810      	ldrh	r0, [r2, #0]
 80130fe:	4298      	cmp	r0, r3
 8013100:	d817      	bhi.n	8013132 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013102:	1e48      	subs	r0, r1, #1
 8013104:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013108:	4298      	cmp	r0, r3
 801310a:	d312      	bcc.n	8013132 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801310c:	2400      	movs	r4, #0
 801310e:	428c      	cmp	r4, r1
 8013110:	d20f      	bcs.n	8013132 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013112:	1860      	adds	r0, r4, r1
 8013114:	1040      	asrs	r0, r0, #1
 8013116:	0085      	lsls	r5, r0, #2
 8013118:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801311c:	42b3      	cmp	r3, r6
 801311e:	d902      	bls.n	8013126 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013120:	3001      	adds	r0, #1
 8013122:	b284      	uxth	r4, r0
 8013124:	e7f3      	b.n	801310e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013126:	d201      	bcs.n	801312c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013128:	b281      	uxth	r1, r0
 801312a:	e7f0      	b.n	801310e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801312c:	442a      	add	r2, r5
 801312e:	8850      	ldrh	r0, [r2, #2]
 8013130:	bd70      	pop	{r4, r5, r6, pc}
 8013132:	2000      	movs	r0, #0
 8013134:	e7fc      	b.n	8013130 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08013136 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8013136:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801313a:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801313c:	886f      	ldrh	r7, [r5, #2]
 801313e:	4604      	mov	r4, r0
 8013140:	087f      	lsrs	r7, r7, #1
 8013142:	260b      	movs	r6, #11
 8013144:	3e01      	subs	r6, #1
 8013146:	d013      	beq.n	8013170 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013148:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801314a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801314e:	462a      	mov	r2, r5
 8013150:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013154:	4639      	mov	r1, r7
 8013156:	4643      	mov	r3, r8
 8013158:	4620      	mov	r0, r4
 801315a:	f7ff ffce 	bl	80130fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801315e:	b138      	cbz	r0, 8013170 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013160:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013164:	4642      	mov	r2, r8
 8013166:	4620      	mov	r0, r4
 8013168:	f7ff ff93 	bl	8013092 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801316c:	2800      	cmp	r0, #0
 801316e:	d1e9      	bne.n	8013144 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013170:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013174 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013174:	b570      	push	{r4, r5, r6, lr}
 8013176:	694a      	ldr	r2, [r1, #20]
 8013178:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801317a:	684b      	ldr	r3, [r1, #4]
 801317c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801317e:	1b54      	subs	r4, r2, r5
 8013180:	f000 8106 	beq.w	8013390 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8013184:	1b9b      	subs	r3, r3, r6
 8013186:	d003      	beq.n	8013190 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013188:	4363      	muls	r3, r4
 801318a:	2210      	movs	r2, #16
 801318c:	fb93 f3f2 	sdiv	r3, r3, r2
 8013190:	680c      	ldr	r4, [r1, #0]
 8013192:	698a      	ldr	r2, [r1, #24]
 8013194:	1b65      	subs	r5, r4, r5
 8013196:	f000 80fd 	beq.w	8013394 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801319a:	1b92      	subs	r2, r2, r6
 801319c:	d003      	beq.n	80131a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801319e:	436a      	muls	r2, r5
 80131a0:	2410      	movs	r4, #16
 80131a2:	fb92 f2f4 	sdiv	r2, r2, r4
 80131a6:	1a9b      	subs	r3, r3, r2
 80131a8:	ee07 3a90 	vmov	s15, r3
 80131ac:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80133d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80131b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80131b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80131b8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80131bc:	460a      	mov	r2, r1
 80131be:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80131c2:	4603      	mov	r3, r0
 80131c4:	f100 040c 	add.w	r4, r0, #12
 80131c8:	eeb1 6a43 	vneg.f32	s12, s6
 80131cc:	edd2 7a02 	vldr	s15, [r2, #8]
 80131d0:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80131d4:	3214      	adds	r2, #20
 80131d6:	ece3 6a01 	vstmia	r3!, {s13}
 80131da:	ed52 7a02 	vldr	s15, [r2, #-8]
 80131de:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80131e2:	429c      	cmp	r4, r3
 80131e4:	edc3 7a02 	vstr	s15, [r3, #8]
 80131e8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80131ec:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80131f0:	edc3 7a05 	vstr	s15, [r3, #20]
 80131f4:	d1ea      	bne.n	80131cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80131f6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80131f8:	698b      	ldr	r3, [r1, #24]
 80131fa:	edd0 4a02 	vldr	s9, [r0, #8]
 80131fe:	edd0 3a00 	vldr	s7, [r0]
 8013202:	edd0 6a01 	vldr	s13, [r0, #4]
 8013206:	ed90 5a05 	vldr	s10, [r0, #20]
 801320a:	ed90 2a03 	vldr	s4, [r0, #12]
 801320e:	edd0 5a04 	vldr	s11, [r0, #16]
 8013212:	ed90 1a07 	vldr	s2, [r0, #28]
 8013216:	edd0 2a06 	vldr	s5, [r0, #24]
 801321a:	1a9b      	subs	r3, r3, r2
 801321c:	ee07 3a90 	vmov	s15, r3
 8013220:	684b      	ldr	r3, [r1, #4]
 8013222:	1a9b      	subs	r3, r3, r2
 8013224:	ee07 3a10 	vmov	s14, r3
 8013228:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801322c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013230:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013234:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013238:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801323c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013240:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013244:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8013248:	eee6 7a87 	vfma.f32	s15, s13, s14
 801324c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013250:	ee67 7a83 	vmul.f32	s15, s15, s6
 8013254:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8013258:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801325a:	694a      	ldr	r2, [r1, #20]
 801325c:	1b13      	subs	r3, r2, r4
 801325e:	ee07 3a10 	vmov	s14, r3
 8013262:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013266:	680b      	ldr	r3, [r1, #0]
 8013268:	ee27 7a04 	vmul.f32	s14, s14, s8
 801326c:	1b1b      	subs	r3, r3, r4
 801326e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013272:	ee07 3a10 	vmov	s14, r3
 8013276:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801327a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801327e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8013282:	ee64 4a86 	vmul.f32	s9, s9, s12
 8013286:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801328a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801328c:	698b      	ldr	r3, [r1, #24]
 801328e:	1a9b      	subs	r3, r3, r2
 8013290:	ee06 3a90 	vmov	s13, r3
 8013294:	684b      	ldr	r3, [r1, #4]
 8013296:	1a9b      	subs	r3, r3, r2
 8013298:	ee07 3a10 	vmov	s14, r3
 801329c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80132a0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80132a4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80132a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80132ac:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80132b0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80132b4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80132b8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80132bc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80132be:	694a      	ldr	r2, [r1, #20]
 80132c0:	1b13      	subs	r3, r2, r4
 80132c2:	ee07 3a10 	vmov	s14, r3
 80132c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80132ca:	680b      	ldr	r3, [r1, #0]
 80132cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80132d0:	1b1b      	subs	r3, r3, r4
 80132d2:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80132d6:	ee07 3a10 	vmov	s14, r3
 80132da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80132de:	ee27 7a04 	vmul.f32	s14, s14, s8
 80132e2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80132e6:	edd0 5a08 	vldr	s11, [r0, #32]
 80132ea:	ee25 5a06 	vmul.f32	s10, s10, s12
 80132ee:	ee31 1a65 	vsub.f32	s2, s2, s11
 80132f2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80132f6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80132f8:	698b      	ldr	r3, [r1, #24]
 80132fa:	1a9b      	subs	r3, r3, r2
 80132fc:	ee07 3a10 	vmov	s14, r3
 8013300:	684b      	ldr	r3, [r1, #4]
 8013302:	1a9b      	subs	r3, r3, r2
 8013304:	ee01 3a90 	vmov	s3, r3
 8013308:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801330c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013310:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013314:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013318:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801331c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013320:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013324:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013328:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801332c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801332e:	694a      	ldr	r2, [r1, #20]
 8013330:	1b13      	subs	r3, r2, r4
 8013332:	ee03 3a10 	vmov	s6, r3
 8013336:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801333a:	680b      	ldr	r3, [r1, #0]
 801333c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013340:	1b1b      	subs	r3, r3, r4
 8013342:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8013346:	ee03 3a10 	vmov	s6, r3
 801334a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801334e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8013352:	eee1 5a04 	vfma.f32	s11, s2, s8
 8013356:	ee25 6a86 	vmul.f32	s12, s11, s12
 801335a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801335e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8013362:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8013366:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801336a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801336e:	dd13      	ble.n	8013398 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8013370:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013374:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8013378:	63c3      	str	r3, [r0, #60]	; 0x3c
 801337a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801337e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013386:	dd15      	ble.n	80133b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013388:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801338c:	6403      	str	r3, [r0, #64]	; 0x40
 801338e:	bd70      	pop	{r4, r5, r6, pc}
 8013390:	4623      	mov	r3, r4
 8013392:	e6fd      	b.n	8013190 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013394:	462a      	mov	r2, r5
 8013396:	e706      	b.n	80131a6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013398:	d502      	bpl.n	80133a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801339a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801339e:	e7e9      	b.n	8013374 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80133a0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80133a4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80133a8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80133ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133b0:	dade      	bge.n	8013370 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80133b2:	e7f2      	b.n	801339a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80133b4:	d502      	bpl.n	80133bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80133b6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80133ba:	e7e7      	b.n	801338c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80133bc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80133c0:	eee3 4a86 	vfma.f32	s9, s7, s12
 80133c4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80133c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133cc:	dadc      	bge.n	8013388 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80133ce:	e7f2      	b.n	80133b6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80133d0:	3d800000 	.word	0x3d800000

080133d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80133d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80133d8:	2714      	movs	r7, #20
 80133da:	435f      	muls	r7, r3
 80133dc:	eb02 0c07 	add.w	ip, r2, r7
 80133e0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80133e4:	f115 0e0f 	adds.w	lr, r5, #15
 80133e8:	f100 80a2 	bmi.w	8013530 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80133ec:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80133f0:	9c08      	ldr	r4, [sp, #32]
 80133f2:	f8c0 e014 	str.w	lr, [r0, #20]
 80133f6:	2614      	movs	r6, #20
 80133f8:	4366      	muls	r6, r4
 80133fa:	eb02 0806 	add.w	r8, r2, r6
 80133fe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8013402:	f115 040f 	adds.w	r4, r5, #15
 8013406:	f100 809f 	bmi.w	8013548 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801340a:	1124      	asrs	r4, r4, #4
 801340c:	eba4 040e 	sub.w	r4, r4, lr
 8013410:	6184      	str	r4, [r0, #24]
 8013412:	2c00      	cmp	r4, #0
 8013414:	f000 808a 	beq.w	801352c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013418:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801341c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013420:	5995      	ldr	r5, [r2, r6]
 8013422:	eba4 0809 	sub.w	r8, r4, r9
 8013426:	59d4      	ldr	r4, [r2, r7]
 8013428:	eba5 0a04 	sub.w	sl, r5, r4
 801342c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013430:	fb0e fe05 	mul.w	lr, lr, r5
 8013434:	fb0a ee19 	mls	lr, sl, r9, lr
 8013438:	fb08 e404 	mla	r4, r8, r4, lr
 801343c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013440:	3c01      	subs	r4, #1
 8013442:	19a4      	adds	r4, r4, r6
 8013444:	f100 808c 	bmi.w	8013560 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8013448:	fb94 fef6 	sdiv	lr, r4, r6
 801344c:	f8c0 e000 	str.w	lr, [r0]
 8013450:	fb06 441e 	mls	r4, r6, lr, r4
 8013454:	6104      	str	r4, [r0, #16]
 8013456:	2d00      	cmp	r5, #0
 8013458:	f2c0 8095 	blt.w	8013586 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801345c:	fb95 f4f6 	sdiv	r4, r5, r6
 8013460:	6044      	str	r4, [r0, #4]
 8013462:	fb06 5514 	mls	r5, r6, r4, r5
 8013466:	6085      	str	r5, [r0, #8]
 8013468:	60c6      	str	r6, [r0, #12]
 801346a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801346e:	6945      	ldr	r5, [r0, #20]
 8013470:	59d2      	ldr	r2, [r2, r7]
 8013472:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80135a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8013476:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801347a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801347e:	ee07 4a10 	vmov	s14, r4
 8013482:	6804      	ldr	r4, [r0, #0]
 8013484:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013488:	ee07 2a90 	vmov	s15, r2
 801348c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013490:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013494:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013498:	ee27 7a26 	vmul.f32	s14, s14, s13
 801349c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80134a0:	edd3 6a00 	vldr	s13, [r3]
 80134a4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80134a8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80134ac:	eee6 6a27 	vfma.f32	s13, s12, s15
 80134b0:	edc0 6a07 	vstr	s13, [r0, #28]
 80134b4:	edd0 6a01 	vldr	s13, [r0, #4]
 80134b8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80134bc:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80134c0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80134c4:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80134c8:	ed80 6a08 	vstr	s12, [r0, #32]
 80134cc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80134ce:	6242      	str	r2, [r0, #36]	; 0x24
 80134d0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80134d4:	ed93 6a03 	vldr	s12, [r3, #12]
 80134d8:	eea5 6a87 	vfma.f32	s12, s11, s14
 80134dc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80134e0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80134e4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80134e8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80134ec:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80134f0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80134f4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80134f8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80134fa:	6302      	str	r2, [r0, #48]	; 0x30
 80134fc:	ed93 6a06 	vldr	s12, [r3, #24]
 8013500:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8013504:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013508:	eeb0 7a46 	vmov.f32	s14, s12
 801350c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013510:	eea6 7a27 	vfma.f32	s14, s12, s15
 8013514:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013518:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801351c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013520:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013524:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8013528:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801352a:	63c3      	str	r3, [r0, #60]	; 0x3c
 801352c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013530:	f1c5 0501 	rsb	r5, r5, #1
 8013534:	f015 050f 	ands.w	r5, r5, #15
 8013538:	bf18      	it	ne
 801353a:	2501      	movne	r5, #1
 801353c:	2410      	movs	r4, #16
 801353e:	fb9e fef4 	sdiv	lr, lr, r4
 8013542:	ebae 0e05 	sub.w	lr, lr, r5
 8013546:	e753      	b.n	80133f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013548:	f1c5 0501 	rsb	r5, r5, #1
 801354c:	f015 050f 	ands.w	r5, r5, #15
 8013550:	bf18      	it	ne
 8013552:	2501      	movne	r5, #1
 8013554:	f04f 0910 	mov.w	r9, #16
 8013558:	fb94 f4f9 	sdiv	r4, r4, r9
 801355c:	1b64      	subs	r4, r4, r5
 801355e:	e755      	b.n	801340c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8013560:	4264      	negs	r4, r4
 8013562:	fb94 fef6 	sdiv	lr, r4, r6
 8013566:	f1ce 0800 	rsb	r8, lr, #0
 801356a:	fb06 441e 	mls	r4, r6, lr, r4
 801356e:	f8c0 8000 	str.w	r8, [r0]
 8013572:	6104      	str	r4, [r0, #16]
 8013574:	2c00      	cmp	r4, #0
 8013576:	f43f af6e 	beq.w	8013456 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801357a:	ea6f 0e0e 	mvn.w	lr, lr
 801357e:	f8c0 e000 	str.w	lr, [r0]
 8013582:	1b34      	subs	r4, r6, r4
 8013584:	e766      	b.n	8013454 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8013586:	426d      	negs	r5, r5
 8013588:	fb95 f4f6 	sdiv	r4, r5, r6
 801358c:	f1c4 0e00 	rsb	lr, r4, #0
 8013590:	fb06 5514 	mls	r5, r6, r4, r5
 8013594:	f8c0 e004 	str.w	lr, [r0, #4]
 8013598:	6085      	str	r5, [r0, #8]
 801359a:	2d00      	cmp	r5, #0
 801359c:	f43f af64 	beq.w	8013468 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80135a0:	43e4      	mvns	r4, r4
 80135a2:	6044      	str	r4, [r0, #4]
 80135a4:	1b75      	subs	r5, r6, r5
 80135a6:	e75e      	b.n	8013466 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80135a8:	3d800000 	.word	0x3d800000

080135ac <_ZN8touchgfx7Unicode6strlenEPKt>:
 80135ac:	4602      	mov	r2, r0
 80135ae:	b148      	cbz	r0, 80135c4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80135b0:	2300      	movs	r3, #0
 80135b2:	b298      	uxth	r0, r3
 80135b4:	3301      	adds	r3, #1
 80135b6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80135ba:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80135be:	2900      	cmp	r1, #0
 80135c0:	d1f7      	bne.n	80135b2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80135c2:	4770      	bx	lr
 80135c4:	4770      	bx	lr

080135c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80135c6:	b530      	push	{r4, r5, lr}
 80135c8:	4604      	mov	r4, r0
 80135ca:	b159      	cbz	r1, 80135e4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 80135cc:	b148      	cbz	r0, 80135e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80135ce:	2300      	movs	r3, #0
 80135d0:	b298      	uxth	r0, r3
 80135d2:	4282      	cmp	r2, r0
 80135d4:	d905      	bls.n	80135e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 80135d6:	5ccd      	ldrb	r5, [r1, r3]
 80135d8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 80135dc:	3301      	adds	r3, #1
 80135de:	2d00      	cmp	r5, #0
 80135e0:	d1f6      	bne.n	80135d0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80135e2:	bd30      	pop	{r4, r5, pc}
 80135e4:	4608      	mov	r0, r1
 80135e6:	e7fc      	b.n	80135e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080135e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80135e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80135ea:	b08b      	sub	sp, #44	; 0x2c
 80135ec:	468c      	mov	ip, r1
 80135ee:	2100      	movs	r1, #0
 80135f0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80135f4:	4604      	mov	r4, r0
 80135f6:	261f      	movs	r6, #31
 80135f8:	af01      	add	r7, sp, #4
 80135fa:	fb94 fef3 	sdiv	lr, r4, r3
 80135fe:	fb03 441e 	mls	r4, r3, lr, r4
 8013602:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013606:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801360a:	b2ec      	uxtb	r4, r5
 801360c:	2d09      	cmp	r5, #9
 801360e:	bfd4      	ite	le
 8013610:	3430      	addle	r4, #48	; 0x30
 8013612:	3457      	addgt	r4, #87	; 0x57
 8013614:	b2e4      	uxtb	r4, r4
 8013616:	55bc      	strb	r4, [r7, r6]
 8013618:	4674      	mov	r4, lr
 801361a:	1e71      	subs	r1, r6, #1
 801361c:	b974      	cbnz	r4, 801363c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801361e:	2800      	cmp	r0, #0
 8013620:	da05      	bge.n	801362e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8013622:	ab0a      	add	r3, sp, #40	; 0x28
 8013624:	4419      	add	r1, r3
 8013626:	232d      	movs	r3, #45	; 0x2d
 8013628:	f801 3c24 	strb.w	r3, [r1, #-36]
 801362c:	1eb1      	subs	r1, r6, #2
 801362e:	3101      	adds	r1, #1
 8013630:	4439      	add	r1, r7
 8013632:	4660      	mov	r0, ip
 8013634:	f7ff ffc7 	bl	80135c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013638:	b00b      	add	sp, #44	; 0x2c
 801363a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801363c:	460e      	mov	r6, r1
 801363e:	e7dc      	b.n	80135fa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08013640 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8013640:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013642:	b08b      	sub	sp, #44	; 0x2c
 8013644:	468c      	mov	ip, r1
 8013646:	2100      	movs	r1, #0
 8013648:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801364c:	ae01      	add	r6, sp, #4
 801364e:	211f      	movs	r1, #31
 8013650:	fbb0 f7f3 	udiv	r7, r0, r3
 8013654:	fb03 0517 	mls	r5, r3, r7, r0
 8013658:	b2ec      	uxtb	r4, r5
 801365a:	2d09      	cmp	r5, #9
 801365c:	bfd4      	ite	le
 801365e:	3430      	addle	r4, #48	; 0x30
 8013660:	3457      	addgt	r4, #87	; 0x57
 8013662:	b2e4      	uxtb	r4, r4
 8013664:	558c      	strb	r4, [r1, r6]
 8013666:	4638      	mov	r0, r7
 8013668:	1e4c      	subs	r4, r1, #1
 801366a:	b92f      	cbnz	r7, 8013678 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801366c:	4431      	add	r1, r6
 801366e:	4660      	mov	r0, ip
 8013670:	f7ff ffa9 	bl	80135c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013674:	b00b      	add	sp, #44	; 0x2c
 8013676:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013678:	4621      	mov	r1, r4
 801367a:	e7e9      	b.n	8013650 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801367c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801367c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013680:	4691      	mov	r9, r2
 8013682:	b085      	sub	sp, #20
 8013684:	6802      	ldr	r2, [r0, #0]
 8013686:	9201      	str	r2, [sp, #4]
 8013688:	4688      	mov	r8, r1
 801368a:	4683      	mov	fp, r0
 801368c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013690:	9103      	str	r1, [sp, #12]
 8013692:	4610      	mov	r0, r2
 8013694:	461c      	mov	r4, r3
 8013696:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801369a:	9302      	str	r3, [sp, #8]
 801369c:	f7ff ff86 	bl	80135ac <_ZN8touchgfx7Unicode6strlenEPKt>
 80136a0:	f1b8 0f00 	cmp.w	r8, #0
 80136a4:	bf0c      	ite	eq
 80136a6:	4684      	moveq	ip, r0
 80136a8:	f100 0c01 	addne.w	ip, r0, #1
 80136ac:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 80136b0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80136b4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80136b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80136b8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80136bc:	9903      	ldr	r1, [sp, #12]
 80136be:	fa1f fc8c 	uxth.w	ip, ip
 80136c2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80136c6:	d041      	beq.n	801374c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80136c8:	d834      	bhi.n	8013734 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80136ca:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80136ce:	d059      	beq.n	8013784 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80136d0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80136d4:	d03a      	beq.n	801374c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80136d6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80136da:	d034      	beq.n	8013746 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80136dc:	2400      	movs	r4, #0
 80136de:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80136e2:	3a01      	subs	r2, #1
 80136e4:	b169      	cbz	r1, 8013702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80136e6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80136e8:	458c      	cmp	ip, r1
 80136ea:	da09      	bge.n	8013700 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80136ec:	eba1 010c 	sub.w	r1, r1, ip
 80136f0:	b289      	uxth	r1, r1
 80136f2:	b933      	cbnz	r3, 8013702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80136f4:	2e00      	cmp	r6, #0
 80136f6:	d051      	beq.n	801379c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80136f8:	2800      	cmp	r0, #0
 80136fa:	d04f      	beq.n	801379c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80136fc:	440c      	add	r4, r1
 80136fe:	b2a4      	uxth	r4, r4
 8013700:	2100      	movs	r1, #0
 8013702:	682b      	ldr	r3, [r5, #0]
 8013704:	4293      	cmp	r3, r2
 8013706:	da07      	bge.n	8013718 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013708:	f1b8 0f00 	cmp.w	r8, #0
 801370c:	d004      	beq.n	8013718 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801370e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013712:	682b      	ldr	r3, [r5, #0]
 8013714:	3301      	adds	r3, #1
 8013716:	602b      	str	r3, [r5, #0]
 8013718:	2730      	movs	r7, #48	; 0x30
 801371a:	2c00      	cmp	r4, #0
 801371c:	d04e      	beq.n	80137bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801371e:	682e      	ldr	r6, [r5, #0]
 8013720:	3c01      	subs	r4, #1
 8013722:	42b2      	cmp	r2, r6
 8013724:	b2a4      	uxth	r4, r4
 8013726:	dd49      	ble.n	80137bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013728:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801372c:	682b      	ldr	r3, [r5, #0]
 801372e:	3301      	adds	r3, #1
 8013730:	602b      	str	r3, [r5, #0]
 8013732:	e7f2      	b.n	801371a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013734:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013738:	d01d      	beq.n	8013776 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801373a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801373e:	d002      	beq.n	8013746 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013740:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013744:	e7c9      	b.n	80136da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013746:	4684      	mov	ip, r0
 8013748:	f04f 0800 	mov.w	r8, #0
 801374c:	2c00      	cmp	r4, #0
 801374e:	d0c6      	beq.n	80136de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013750:	b947      	cbnz	r7, 8013764 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013752:	2801      	cmp	r0, #1
 8013754:	d106      	bne.n	8013764 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013756:	8814      	ldrh	r4, [r2, #0]
 8013758:	2c30      	cmp	r4, #48	; 0x30
 801375a:	bf02      	ittt	eq
 801375c:	3202      	addeq	r2, #2
 801375e:	f8cb 2000 	streq.w	r2, [fp]
 8013762:	4638      	moveq	r0, r7
 8013764:	45bc      	cmp	ip, r7
 8013766:	da14      	bge.n	8013792 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013768:	b2bf      	uxth	r7, r7
 801376a:	eba7 040c 	sub.w	r4, r7, ip
 801376e:	b2a4      	uxth	r4, r4
 8013770:	46bc      	mov	ip, r7
 8013772:	2600      	movs	r6, #0
 8013774:	e7b3      	b.n	80136de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013776:	4684      	mov	ip, r0
 8013778:	b16c      	cbz	r4, 8013796 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801377a:	42b8      	cmp	r0, r7
 801377c:	dd00      	ble.n	8013780 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801377e:	b2b8      	uxth	r0, r7
 8013780:	2400      	movs	r4, #0
 8013782:	e003      	b.n	801378c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013784:	f04f 0c01 	mov.w	ip, #1
 8013788:	2400      	movs	r4, #0
 801378a:	4660      	mov	r0, ip
 801378c:	4626      	mov	r6, r4
 801378e:	46a0      	mov	r8, r4
 8013790:	e7a5      	b.n	80136de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013792:	2400      	movs	r4, #0
 8013794:	e7ed      	b.n	8013772 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013796:	4626      	mov	r6, r4
 8013798:	46a0      	mov	r8, r4
 801379a:	e7a0      	b.n	80136de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801379c:	2900      	cmp	r1, #0
 801379e:	d0b0      	beq.n	8013702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80137a0:	2720      	movs	r7, #32
 80137a2:	682e      	ldr	r6, [r5, #0]
 80137a4:	2900      	cmp	r1, #0
 80137a6:	d0ac      	beq.n	8013702 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80137a8:	3901      	subs	r1, #1
 80137aa:	4296      	cmp	r6, r2
 80137ac:	b289      	uxth	r1, r1
 80137ae:	daa7      	bge.n	8013700 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80137b0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80137b4:	682b      	ldr	r3, [r5, #0]
 80137b6:	3301      	adds	r3, #1
 80137b8:	602b      	str	r3, [r5, #0]
 80137ba:	e7f2      	b.n	80137a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80137bc:	b188      	cbz	r0, 80137e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80137be:	682b      	ldr	r3, [r5, #0]
 80137c0:	3801      	subs	r0, #1
 80137c2:	429a      	cmp	r2, r3
 80137c4:	b280      	uxth	r0, r0
 80137c6:	dd0c      	ble.n	80137e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80137c8:	f8db 3000 	ldr.w	r3, [fp]
 80137cc:	1c9c      	adds	r4, r3, #2
 80137ce:	f8cb 4000 	str.w	r4, [fp]
 80137d2:	881c      	ldrh	r4, [r3, #0]
 80137d4:	682b      	ldr	r3, [r5, #0]
 80137d6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80137da:	682b      	ldr	r3, [r5, #0]
 80137dc:	3301      	adds	r3, #1
 80137de:	602b      	str	r3, [r5, #0]
 80137e0:	e7ec      	b.n	80137bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80137e2:	2620      	movs	r6, #32
 80137e4:	b151      	cbz	r1, 80137fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80137e6:	6828      	ldr	r0, [r5, #0]
 80137e8:	3901      	subs	r1, #1
 80137ea:	4282      	cmp	r2, r0
 80137ec:	b289      	uxth	r1, r1
 80137ee:	dd05      	ble.n	80137fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80137f0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80137f4:	682b      	ldr	r3, [r5, #0]
 80137f6:	3301      	adds	r3, #1
 80137f8:	602b      	str	r3, [r5, #0]
 80137fa:	e7f3      	b.n	80137e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80137fc:	b005      	add	sp, #20
 80137fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013802 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013802:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013806:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801380a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801380e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013812:	2400      	movs	r4, #0
 8013814:	8014      	strh	r4, [r2, #0]
 8013816:	701c      	strb	r4, [r3, #0]
 8013818:	f888 4000 	strb.w	r4, [r8]
 801381c:	f88c 4000 	strb.w	r4, [ip]
 8013820:	f88e 4000 	strb.w	r4, [lr]
 8013824:	703c      	strb	r4, [r7, #0]
 8013826:	6804      	ldr	r4, [r0, #0]
 8013828:	b1a4      	cbz	r4, 8013854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801382a:	8824      	ldrh	r4, [r4, #0]
 801382c:	f04f 0901 	mov.w	r9, #1
 8013830:	b314      	cbz	r4, 8013878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013832:	2c2b      	cmp	r4, #43	; 0x2b
 8013834:	d001      	beq.n	801383a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013836:	2c20      	cmp	r4, #32
 8013838:	d110      	bne.n	801385c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801383a:	8014      	strh	r4, [r2, #0]
 801383c:	6804      	ldr	r4, [r0, #0]
 801383e:	b10c      	cbz	r4, 8013844 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013840:	3402      	adds	r4, #2
 8013842:	6004      	str	r4, [r0, #0]
 8013844:	680c      	ldr	r4, [r1, #0]
 8013846:	b10c      	cbz	r4, 801384c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013848:	3401      	adds	r4, #1
 801384a:	600c      	str	r4, [r1, #0]
 801384c:	6804      	ldr	r4, [r0, #0]
 801384e:	b17c      	cbz	r4, 8013870 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013850:	8824      	ldrh	r4, [r4, #0]
 8013852:	e7ed      	b.n	8013830 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013854:	680c      	ldr	r4, [r1, #0]
 8013856:	b17c      	cbz	r4, 8013878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013858:	7824      	ldrb	r4, [r4, #0]
 801385a:	e7e7      	b.n	801382c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801385c:	2c2d      	cmp	r4, #45	; 0x2d
 801385e:	d102      	bne.n	8013866 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013860:	f883 9000 	strb.w	r9, [r3]
 8013864:	e7ea      	b.n	801383c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013866:	2c23      	cmp	r4, #35	; 0x23
 8013868:	d107      	bne.n	801387a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801386a:	f888 9000 	strb.w	r9, [r8]
 801386e:	e7e5      	b.n	801383c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013870:	680c      	ldr	r4, [r1, #0]
 8013872:	b10c      	cbz	r4, 8013878 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013874:	7824      	ldrb	r4, [r4, #0]
 8013876:	e7db      	b.n	8013830 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013878:	2400      	movs	r4, #0
 801387a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801387e:	2b09      	cmp	r3, #9
 8013880:	d901      	bls.n	8013886 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013882:	2c2a      	cmp	r4, #42	; 0x2a
 8013884:	d122      	bne.n	80138cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013886:	2301      	movs	r3, #1
 8013888:	2c30      	cmp	r4, #48	; 0x30
 801388a:	f88e 3000 	strb.w	r3, [lr]
 801388e:	d10d      	bne.n	80138ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013890:	f88c 3000 	strb.w	r3, [ip]
 8013894:	6803      	ldr	r3, [r0, #0]
 8013896:	b10b      	cbz	r3, 801389c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013898:	3302      	adds	r3, #2
 801389a:	6003      	str	r3, [r0, #0]
 801389c:	680b      	ldr	r3, [r1, #0]
 801389e:	b10b      	cbz	r3, 80138a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80138a0:	3301      	adds	r3, #1
 80138a2:	600b      	str	r3, [r1, #0]
 80138a4:	6803      	ldr	r3, [r0, #0]
 80138a6:	2b00      	cmp	r3, #0
 80138a8:	d02f      	beq.n	801390a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80138aa:	881c      	ldrh	r4, [r3, #0]
 80138ac:	2c2a      	cmp	r4, #42	; 0x2a
 80138ae:	d135      	bne.n	801391c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80138b0:	f04f 33ff 	mov.w	r3, #4294967295
 80138b4:	6033      	str	r3, [r6, #0]
 80138b6:	6803      	ldr	r3, [r0, #0]
 80138b8:	b10b      	cbz	r3, 80138be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80138ba:	3302      	adds	r3, #2
 80138bc:	6003      	str	r3, [r0, #0]
 80138be:	680b      	ldr	r3, [r1, #0]
 80138c0:	b10b      	cbz	r3, 80138c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80138c2:	3301      	adds	r3, #1
 80138c4:	600b      	str	r3, [r1, #0]
 80138c6:	6803      	ldr	r3, [r0, #0]
 80138c8:	b31b      	cbz	r3, 8013912 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80138ca:	881c      	ldrh	r4, [r3, #0]
 80138cc:	2c2e      	cmp	r4, #46	; 0x2e
 80138ce:	d11a      	bne.n	8013906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80138d0:	2301      	movs	r3, #1
 80138d2:	703b      	strb	r3, [r7, #0]
 80138d4:	6803      	ldr	r3, [r0, #0]
 80138d6:	b10b      	cbz	r3, 80138dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80138d8:	3302      	adds	r3, #2
 80138da:	6003      	str	r3, [r0, #0]
 80138dc:	680b      	ldr	r3, [r1, #0]
 80138de:	b10b      	cbz	r3, 80138e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80138e0:	3301      	adds	r3, #1
 80138e2:	600b      	str	r3, [r1, #0]
 80138e4:	6803      	ldr	r3, [r0, #0]
 80138e6:	2b00      	cmp	r3, #0
 80138e8:	d036      	beq.n	8013958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80138ea:	881b      	ldrh	r3, [r3, #0]
 80138ec:	2b2a      	cmp	r3, #42	; 0x2a
 80138ee:	d137      	bne.n	8013960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80138f0:	f04f 33ff 	mov.w	r3, #4294967295
 80138f4:	602b      	str	r3, [r5, #0]
 80138f6:	6803      	ldr	r3, [r0, #0]
 80138f8:	b10b      	cbz	r3, 80138fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80138fa:	3302      	adds	r3, #2
 80138fc:	6003      	str	r3, [r0, #0]
 80138fe:	680b      	ldr	r3, [r1, #0]
 8013900:	b10b      	cbz	r3, 8013906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013902:	3301      	adds	r3, #1
 8013904:	600b      	str	r3, [r1, #0]
 8013906:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801390a:	680c      	ldr	r4, [r1, #0]
 801390c:	b134      	cbz	r4, 801391c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801390e:	7824      	ldrb	r4, [r4, #0]
 8013910:	e7cc      	b.n	80138ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013912:	680b      	ldr	r3, [r1, #0]
 8013914:	2b00      	cmp	r3, #0
 8013916:	d0f6      	beq.n	8013906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013918:	781c      	ldrb	r4, [r3, #0]
 801391a:	e7d7      	b.n	80138cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801391c:	2300      	movs	r3, #0
 801391e:	6033      	str	r3, [r6, #0]
 8013920:	220a      	movs	r2, #10
 8013922:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013926:	fa1f f38c 	uxth.w	r3, ip
 801392a:	2b09      	cmp	r3, #9
 801392c:	d8ce      	bhi.n	80138cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801392e:	6833      	ldr	r3, [r6, #0]
 8013930:	fb02 c303 	mla	r3, r2, r3, ip
 8013934:	6033      	str	r3, [r6, #0]
 8013936:	6803      	ldr	r3, [r0, #0]
 8013938:	b10b      	cbz	r3, 801393e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801393a:	3302      	adds	r3, #2
 801393c:	6003      	str	r3, [r0, #0]
 801393e:	680b      	ldr	r3, [r1, #0]
 8013940:	b10b      	cbz	r3, 8013946 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013942:	3301      	adds	r3, #1
 8013944:	600b      	str	r3, [r1, #0]
 8013946:	6803      	ldr	r3, [r0, #0]
 8013948:	b10b      	cbz	r3, 801394e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801394a:	881c      	ldrh	r4, [r3, #0]
 801394c:	e7e9      	b.n	8013922 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801394e:	680c      	ldr	r4, [r1, #0]
 8013950:	2c00      	cmp	r4, #0
 8013952:	d0e6      	beq.n	8013922 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013954:	7824      	ldrb	r4, [r4, #0]
 8013956:	e7e4      	b.n	8013922 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013958:	680b      	ldr	r3, [r1, #0]
 801395a:	b10b      	cbz	r3, 8013960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801395c:	781b      	ldrb	r3, [r3, #0]
 801395e:	e7c5      	b.n	80138ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013960:	2200      	movs	r2, #0
 8013962:	602a      	str	r2, [r5, #0]
 8013964:	240a      	movs	r4, #10
 8013966:	3b30      	subs	r3, #48	; 0x30
 8013968:	b29e      	uxth	r6, r3
 801396a:	2e09      	cmp	r6, #9
 801396c:	682a      	ldr	r2, [r5, #0]
 801396e:	d813      	bhi.n	8013998 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013970:	fb04 3302 	mla	r3, r4, r2, r3
 8013974:	602b      	str	r3, [r5, #0]
 8013976:	6803      	ldr	r3, [r0, #0]
 8013978:	b10b      	cbz	r3, 801397e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801397a:	3302      	adds	r3, #2
 801397c:	6003      	str	r3, [r0, #0]
 801397e:	680b      	ldr	r3, [r1, #0]
 8013980:	b10b      	cbz	r3, 8013986 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013982:	3301      	adds	r3, #1
 8013984:	600b      	str	r3, [r1, #0]
 8013986:	6803      	ldr	r3, [r0, #0]
 8013988:	b10b      	cbz	r3, 801398e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801398a:	881b      	ldrh	r3, [r3, #0]
 801398c:	e7eb      	b.n	8013966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801398e:	680b      	ldr	r3, [r1, #0]
 8013990:	2b00      	cmp	r3, #0
 8013992:	d0e8      	beq.n	8013966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013994:	781b      	ldrb	r3, [r3, #0]
 8013996:	e7e6      	b.n	8013966 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013998:	2a06      	cmp	r2, #6
 801399a:	bfa8      	it	ge
 801399c:	2206      	movge	r2, #6
 801399e:	602a      	str	r2, [r5, #0]
 80139a0:	e7b1      	b.n	8013906 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080139a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80139a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139a6:	b0a3      	sub	sp, #140	; 0x8c
 80139a8:	2600      	movs	r6, #0
 80139aa:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 80139ae:	4607      	mov	r7, r0
 80139b0:	4688      	mov	r8, r1
 80139b2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80139b6:	4631      	mov	r1, r6
 80139b8:	2242      	movs	r2, #66	; 0x42
 80139ba:	4648      	mov	r0, r9
 80139bc:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80139be:	960d      	str	r6, [sp, #52]	; 0x34
 80139c0:	f00d ffc0 	bl	8021944 <memset>
 80139c4:	b15f      	cbz	r7, 80139de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80139c6:	f108 3aff 	add.w	sl, r8, #4294967295
 80139ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80139cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139ce:	b152      	cbz	r2, 80139e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80139d0:	8812      	ldrh	r2, [r2, #0]
 80139d2:	b10a      	cbz	r2, 80139d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80139d4:	459a      	cmp	sl, r3
 80139d6:	dc2e      	bgt.n	8013a36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80139d8:	2200      	movs	r2, #0
 80139da:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80139de:	4638      	mov	r0, r7
 80139e0:	b023      	add	sp, #140	; 0x8c
 80139e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80139e6:	9a08      	ldr	r2, [sp, #32]
 80139e8:	2a00      	cmp	r2, #0
 80139ea:	d0f5      	beq.n	80139d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80139ec:	7812      	ldrb	r2, [r2, #0]
 80139ee:	e7f0      	b.n	80139d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80139f0:	2d00      	cmp	r5, #0
 80139f2:	d0ea      	beq.n	80139ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80139f4:	782a      	ldrb	r2, [r5, #0]
 80139f6:	b142      	cbz	r2, 8013a0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80139f8:	2a25      	cmp	r2, #37	; 0x25
 80139fa:	d001      	beq.n	8013a00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80139fc:	459a      	cmp	sl, r3
 80139fe:	dc08      	bgt.n	8013a12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013a00:	f1bb 0f00 	cmp.w	fp, #0
 8013a04:	d121      	bne.n	8013a4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013a06:	2d00      	cmp	r5, #0
 8013a08:	d0df      	beq.n	80139ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013a0a:	782a      	ldrb	r2, [r5, #0]
 8013a0c:	f04f 0b00 	mov.w	fp, #0
 8013a10:	e01d      	b.n	8013a4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013a12:	f1bb 0f00 	cmp.w	fp, #0
 8013a16:	d078      	beq.n	8013b0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013a18:	f8bb 2000 	ldrh.w	r2, [fp]
 8013a1c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013a20:	f1bb 0f00 	cmp.w	fp, #0
 8013a24:	d002      	beq.n	8013a2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013a26:	f10b 0202 	add.w	r2, fp, #2
 8013a2a:	9209      	str	r2, [sp, #36]	; 0x24
 8013a2c:	b10d      	cbz	r5, 8013a32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013a2e:	3501      	adds	r5, #1
 8013a30:	9508      	str	r5, [sp, #32]
 8013a32:	3301      	adds	r3, #1
 8013a34:	930d      	str	r3, [sp, #52]	; 0x34
 8013a36:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013a3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013a3c:	f1bb 0f00 	cmp.w	fp, #0
 8013a40:	d0d6      	beq.n	80139f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013a42:	f8bb 2000 	ldrh.w	r2, [fp]
 8013a46:	2a00      	cmp	r2, #0
 8013a48:	d1d6      	bne.n	80139f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013a4a:	f8bb 2000 	ldrh.w	r2, [fp]
 8013a4e:	2a00      	cmp	r2, #0
 8013a50:	d0bb      	beq.n	80139ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013a52:	459a      	cmp	sl, r3
 8013a54:	ddb9      	ble.n	80139ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013a56:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013a5a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013a5e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013a62:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013a66:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013a6a:	960e      	str	r6, [sp, #56]	; 0x38
 8013a6c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013a70:	960f      	str	r6, [sp, #60]	; 0x3c
 8013a72:	f1bb 0f00 	cmp.w	fp, #0
 8013a76:	d002      	beq.n	8013a7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013a78:	f10b 0302 	add.w	r3, fp, #2
 8013a7c:	9309      	str	r3, [sp, #36]	; 0x24
 8013a7e:	b10d      	cbz	r5, 8013a84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013a80:	1c6b      	adds	r3, r5, #1
 8013a82:	9308      	str	r3, [sp, #32]
 8013a84:	ab0f      	add	r3, sp, #60	; 0x3c
 8013a86:	9305      	str	r3, [sp, #20]
 8013a88:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013a8c:	9304      	str	r3, [sp, #16]
 8013a8e:	ab0e      	add	r3, sp, #56	; 0x38
 8013a90:	9303      	str	r3, [sp, #12]
 8013a92:	ab0c      	add	r3, sp, #48	; 0x30
 8013a94:	9302      	str	r3, [sp, #8]
 8013a96:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013a9a:	9301      	str	r3, [sp, #4]
 8013a9c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013aa0:	9300      	str	r3, [sp, #0]
 8013aa2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013aa6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013aaa:	a908      	add	r1, sp, #32
 8013aac:	a809      	add	r0, sp, #36	; 0x24
 8013aae:	f7ff fea8 	bl	8013802 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013ab2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ab4:	2b00      	cmp	r3, #0
 8013ab6:	bfbe      	ittt	lt
 8013ab8:	6823      	ldrlt	r3, [r4, #0]
 8013aba:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013abe:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013ac0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013ac2:	bfb8      	it	lt
 8013ac4:	3404      	addlt	r4, #4
 8013ac6:	2b00      	cmp	r3, #0
 8013ac8:	bfb8      	it	lt
 8013aca:	6823      	ldrlt	r3, [r4, #0]
 8013acc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013ad0:	bfbe      	ittt	lt
 8013ad2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013ad6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013ad8:	3404      	addlt	r4, #4
 8013ada:	b1d9      	cbz	r1, 8013b14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013adc:	880b      	ldrh	r3, [r1, #0]
 8013ade:	2b69      	cmp	r3, #105	; 0x69
 8013ae0:	d01f      	beq.n	8013b22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013ae2:	d82f      	bhi.n	8013b44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013ae4:	2b58      	cmp	r3, #88	; 0x58
 8013ae6:	d01c      	beq.n	8013b22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013ae8:	d818      	bhi.n	8013b1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013aea:	2b25      	cmp	r3, #37	; 0x25
 8013aec:	d034      	beq.n	8013b58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013aee:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013af2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013af4:	f1bb 0f00 	cmp.w	fp, #0
 8013af8:	f000 80b8 	beq.w	8013c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013afc:	f8bb 5000 	ldrh.w	r5, [fp]
 8013b00:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013b04:	3301      	adds	r3, #1
 8013b06:	930d      	str	r3, [sp, #52]	; 0x34
 8013b08:	e029      	b.n	8013b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013b0a:	b10d      	cbz	r5, 8013b10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013b0c:	782a      	ldrb	r2, [r5, #0]
 8013b0e:	e785      	b.n	8013a1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013b10:	462a      	mov	r2, r5
 8013b12:	e783      	b.n	8013a1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013b14:	2a00      	cmp	r2, #0
 8013b16:	d0ea      	beq.n	8013aee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013b18:	7813      	ldrb	r3, [r2, #0]
 8013b1a:	e7e0      	b.n	8013ade <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013b1c:	3b63      	subs	r3, #99	; 0x63
 8013b1e:	2b01      	cmp	r3, #1
 8013b20:	d8e5      	bhi.n	8013aee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013b22:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013b26:	b329      	cbz	r1, 8013b74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013b28:	880b      	ldrh	r3, [r1, #0]
 8013b2a:	2b69      	cmp	r3, #105	; 0x69
 8013b2c:	d063      	beq.n	8013bf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013b2e:	d825      	bhi.n	8013b7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013b30:	2b63      	cmp	r3, #99	; 0x63
 8013b32:	d038      	beq.n	8013ba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013b34:	2b64      	cmp	r3, #100	; 0x64
 8013b36:	d05e      	beq.n	8013bf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013b38:	2b58      	cmp	r3, #88	; 0x58
 8013b3a:	d07b      	beq.n	8013c34 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013b3c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013b40:	4625      	mov	r5, r4
 8013b42:	e036      	b.n	8013bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013b44:	2b73      	cmp	r3, #115	; 0x73
 8013b46:	d0ec      	beq.n	8013b22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013b48:	d802      	bhi.n	8013b50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013b4a:	2b6f      	cmp	r3, #111	; 0x6f
 8013b4c:	d1cf      	bne.n	8013aee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013b4e:	e7e8      	b.n	8013b22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013b50:	2b75      	cmp	r3, #117	; 0x75
 8013b52:	d0e6      	beq.n	8013b22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013b54:	2b78      	cmp	r3, #120	; 0x78
 8013b56:	e7f9      	b.n	8013b4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013b58:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013b5a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013b5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b60:	b10b      	cbz	r3, 8013b66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013b62:	3302      	adds	r3, #2
 8013b64:	9309      	str	r3, [sp, #36]	; 0x24
 8013b66:	9b08      	ldr	r3, [sp, #32]
 8013b68:	2b00      	cmp	r3, #0
 8013b6a:	f43f af2e 	beq.w	80139ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b6e:	3301      	adds	r3, #1
 8013b70:	9308      	str	r3, [sp, #32]
 8013b72:	e72a      	b.n	80139ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013b74:	2a00      	cmp	r2, #0
 8013b76:	d0e1      	beq.n	8013b3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013b78:	7813      	ldrb	r3, [r2, #0]
 8013b7a:	e7d6      	b.n	8013b2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013b7c:	2b73      	cmp	r3, #115	; 0x73
 8013b7e:	d036      	beq.n	8013bee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013b80:	d807      	bhi.n	8013b92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013b82:	2b6f      	cmp	r3, #111	; 0x6f
 8013b84:	d1da      	bne.n	8013b3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013b86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013b88:	1d25      	adds	r5, r4, #4
 8013b8a:	eba8 0202 	sub.w	r2, r8, r2
 8013b8e:	2308      	movs	r3, #8
 8013b90:	e04a      	b.n	8013c28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013b92:	2b75      	cmp	r3, #117	; 0x75
 8013b94:	d043      	beq.n	8013c1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013b96:	2b78      	cmp	r3, #120	; 0x78
 8013b98:	d1d0      	bne.n	8013b3c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013b9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013b9c:	1d25      	adds	r5, r4, #4
 8013b9e:	eba8 0202 	sub.w	r2, r8, r2
 8013ba2:	2310      	movs	r3, #16
 8013ba4:	e040      	b.n	8013c28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013ba6:	6823      	ldr	r3, [r4, #0]
 8013ba8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013bac:	1d25      	adds	r5, r4, #4
 8013bae:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013bb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013bb4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013bb8:	2b00      	cmp	r3, #0
 8013bba:	d052      	beq.n	8013c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013bbc:	881a      	ldrh	r2, [r3, #0]
 8013bbe:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013bc2:	a80d      	add	r0, sp, #52	; 0x34
 8013bc4:	9005      	str	r0, [sp, #20]
 8013bc6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013bca:	9004      	str	r0, [sp, #16]
 8013bcc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013bce:	9003      	str	r0, [sp, #12]
 8013bd0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013bd4:	9002      	str	r0, [sp, #8]
 8013bd6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013bd8:	9001      	str	r0, [sp, #4]
 8013bda:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013bde:	9000      	str	r0, [sp, #0]
 8013be0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013be4:	a810      	add	r0, sp, #64	; 0x40
 8013be6:	f7ff fd49 	bl	801367c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013bea:	462c      	mov	r4, r5
 8013bec:	e7b7      	b.n	8013b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013bee:	6823      	ldr	r3, [r4, #0]
 8013bf0:	1d25      	adds	r5, r4, #4
 8013bf2:	9310      	str	r3, [sp, #64]	; 0x40
 8013bf4:	e7dd      	b.n	8013bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013bf6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013bf8:	6820      	ldr	r0, [r4, #0]
 8013bfa:	eba8 0202 	sub.w	r2, r8, r2
 8013bfe:	230a      	movs	r3, #10
 8013c00:	b292      	uxth	r2, r2
 8013c02:	4649      	mov	r1, r9
 8013c04:	f7ff fcf0 	bl	80135e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8013c08:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013c0c:	2b2d      	cmp	r3, #45	; 0x2d
 8013c0e:	f104 0504 	add.w	r5, r4, #4
 8013c12:	d1ce      	bne.n	8013bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013c14:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013c18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013c1a:	3302      	adds	r3, #2
 8013c1c:	e7e9      	b.n	8013bf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013c1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013c20:	1d25      	adds	r5, r4, #4
 8013c22:	eba8 0202 	sub.w	r2, r8, r2
 8013c26:	230a      	movs	r3, #10
 8013c28:	b292      	uxth	r2, r2
 8013c2a:	4649      	mov	r1, r9
 8013c2c:	6820      	ldr	r0, [r4, #0]
 8013c2e:	f7ff fd07 	bl	8013640 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8013c32:	e7be      	b.n	8013bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013c34:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013c36:	6820      	ldr	r0, [r4, #0]
 8013c38:	eba8 0202 	sub.w	r2, r8, r2
 8013c3c:	b292      	uxth	r2, r2
 8013c3e:	2310      	movs	r3, #16
 8013c40:	4649      	mov	r1, r9
 8013c42:	f7ff fcfd 	bl	8013640 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8013c46:	1d25      	adds	r5, r4, #4
 8013c48:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013c4c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013c50:	2b00      	cmp	r3, #0
 8013c52:	d0ae      	beq.n	8013bb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013c54:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013c58:	2919      	cmp	r1, #25
 8013c5a:	d8f7      	bhi.n	8013c4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013c5c:	3b20      	subs	r3, #32
 8013c5e:	8013      	strh	r3, [r2, #0]
 8013c60:	e7f4      	b.n	8013c4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013c62:	9a08      	ldr	r2, [sp, #32]
 8013c64:	2a00      	cmp	r2, #0
 8013c66:	d0aa      	beq.n	8013bbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013c68:	7812      	ldrb	r2, [r2, #0]
 8013c6a:	e7a8      	b.n	8013bbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013c6c:	2d00      	cmp	r5, #0
 8013c6e:	f43f af47 	beq.w	8013b00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8013c72:	782d      	ldrb	r5, [r5, #0]
 8013c74:	e744      	b.n	8013b00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08013c76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8013c76:	b507      	push	{r0, r1, r2, lr}
 8013c78:	9300      	str	r3, [sp, #0]
 8013c7a:	4613      	mov	r3, r2
 8013c7c:	2200      	movs	r2, #0
 8013c7e:	f7ff fe90 	bl	80139a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8013c82:	b003      	add	sp, #12
 8013c84:	f85d fb04 	ldr.w	pc, [sp], #4

08013c88 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013c88:	b40c      	push	{r2, r3}
 8013c8a:	b507      	push	{r0, r1, r2, lr}
 8013c8c:	ab04      	add	r3, sp, #16
 8013c8e:	f853 2b04 	ldr.w	r2, [r3], #4
 8013c92:	9301      	str	r3, [sp, #4]
 8013c94:	f7ff ffef 	bl	8013c76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013c98:	b003      	add	sp, #12
 8013c9a:	f85d eb04 	ldr.w	lr, [sp], #4
 8013c9e:	b002      	add	sp, #8
 8013ca0:	4770      	bx	lr
	...

08013ca4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013ca4:	4b01      	ldr	r3, [pc, #4]	; (8013cac <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8013ca6:	6018      	str	r0, [r3, #0]
 8013ca8:	4770      	bx	lr
 8013caa:	bf00      	nop
 8013cac:	20015034 	.word	0x20015034

08013cb0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013cb0:	4b06      	ldr	r3, [pc, #24]	; (8013ccc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8013cb2:	881a      	ldrh	r2, [r3, #0]
 8013cb4:	4282      	cmp	r2, r0
 8013cb6:	d807      	bhi.n	8013cc8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8013cb8:	4b05      	ldr	r3, [pc, #20]	; (8013cd0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8013cba:	881b      	ldrh	r3, [r3, #0]
 8013cbc:	4413      	add	r3, r2
 8013cbe:	4298      	cmp	r0, r3
 8013cc0:	bfac      	ite	ge
 8013cc2:	2000      	movge	r0, #0
 8013cc4:	2001      	movlt	r0, #1
 8013cc6:	4770      	bx	lr
 8013cc8:	2000      	movs	r0, #0
 8013cca:	4770      	bx	lr
 8013ccc:	20015054 	.word	0x20015054
 8013cd0:	20015058 	.word	0x20015058

08013cd4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013cd4:	b508      	push	{r3, lr}
 8013cd6:	4601      	mov	r1, r0
 8013cd8:	f7ff ffea 	bl	8013cb0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013cdc:	b118      	cbz	r0, 8013ce6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013cde:	4b02      	ldr	r3, [pc, #8]	; (8013ce8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013ce0:	681b      	ldr	r3, [r3, #0]
 8013ce2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8013ce6:	bd08      	pop	{r3, pc}
 8013ce8:	20015038 	.word	0x20015038

08013cec <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013cec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013cee:	4c24      	ldr	r4, [pc, #144]	; (8013d80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013cf0:	6823      	ldr	r3, [r4, #0]
 8013cf2:	2b00      	cmp	r3, #0
 8013cf4:	d042      	beq.n	8013d7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013cf6:	4a23      	ldr	r2, [pc, #140]	; (8013d84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8013cf8:	4d23      	ldr	r5, [pc, #140]	; (8013d88 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8013cfa:	8811      	ldrh	r1, [r2, #0]
 8013cfc:	f8b5 c000 	ldrh.w	ip, [r5]
 8013d00:	4822      	ldr	r0, [pc, #136]	; (8013d8c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8013d02:	4461      	add	r1, ip
 8013d04:	1c4a      	adds	r2, r1, #1
 8013d06:	f022 0201 	bic.w	r2, r2, #1
 8013d0a:	008f      	lsls	r7, r1, #2
 8013d0c:	0412      	lsls	r2, r2, #16
 8013d0e:	19de      	adds	r6, r3, r7
 8013d10:	0c12      	lsrs	r2, r2, #16
 8013d12:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8013d16:	6006      	str	r6, [r0, #0]
 8013d18:	4e1d      	ldr	r6, [pc, #116]	; (8013d90 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8013d1a:	19da      	adds	r2, r3, r7
 8013d1c:	6032      	str	r2, [r6, #0]
 8013d1e:	220e      	movs	r2, #14
 8013d20:	fb02 f20c 	mul.w	r2, r2, ip
 8013d24:	3203      	adds	r2, #3
 8013d26:	f022 0203 	bic.w	r2, r2, #3
 8013d2a:	443a      	add	r2, r7
 8013d2c:	4f19      	ldr	r7, [pc, #100]	; (8013d94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8013d2e:	4413      	add	r3, r2
 8013d30:	603b      	str	r3, [r7, #0]
 8013d32:	4f19      	ldr	r7, [pc, #100]	; (8013d98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8013d34:	2300      	movs	r3, #0
 8013d36:	803b      	strh	r3, [r7, #0]
 8013d38:	4f18      	ldr	r7, [pc, #96]	; (8013d9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013d3a:	683f      	ldr	r7, [r7, #0]
 8013d3c:	1aba      	subs	r2, r7, r2
 8013d3e:	4f18      	ldr	r7, [pc, #96]	; (8013da0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8013d40:	603a      	str	r2, [r7, #0]
 8013d42:	4a18      	ldr	r2, [pc, #96]	; (8013da4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8013d44:	469c      	mov	ip, r3
 8013d46:	8013      	strh	r3, [r2, #0]
 8013d48:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8013d4c:	428b      	cmp	r3, r1
 8013d4e:	d10d      	bne.n	8013d6c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8013d50:	882d      	ldrh	r5, [r5, #0]
 8013d52:	6830      	ldr	r0, [r6, #0]
 8013d54:	2300      	movs	r3, #0
 8013d56:	240e      	movs	r4, #14
 8013d58:	429d      	cmp	r5, r3
 8013d5a:	d90f      	bls.n	8013d7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013d5c:	fb04 0203 	mla	r2, r4, r3, r0
 8013d60:	3301      	adds	r3, #1
 8013d62:	7b11      	ldrb	r1, [r2, #12]
 8013d64:	f36f 1145 	bfc	r1, #5, #1
 8013d68:	7311      	strb	r1, [r2, #12]
 8013d6a:	e7f5      	b.n	8013d58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8013d6c:	6822      	ldr	r2, [r4, #0]
 8013d6e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8013d72:	6802      	ldr	r2, [r0, #0]
 8013d74:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8013d78:	3301      	adds	r3, #1
 8013d7a:	e7e7      	b.n	8013d4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8013d7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013d7e:	bf00      	nop
 8013d80:	20015038 	.word	0x20015038
 8013d84:	20015054 	.word	0x20015054
 8013d88:	20015058 	.word	0x20015058
 8013d8c:	2001504c 	.word	0x2001504c
 8013d90:	2001503c 	.word	0x2001503c
 8013d94:	20015044 	.word	0x20015044
 8013d98:	20015056 	.word	0x20015056
 8013d9c:	20015040 	.word	0x20015040
 8013da0:	20015050 	.word	0x20015050
 8013da4:	20015048 	.word	0x20015048

08013da8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8013da8:	4b06      	ldr	r3, [pc, #24]	; (8013dc4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8013daa:	681b      	ldr	r3, [r3, #0]
 8013dac:	b943      	cbnz	r3, 8013dc0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013dae:	b139      	cbz	r1, 8013dc0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013db0:	4b05      	ldr	r3, [pc, #20]	; (8013dc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8013db2:	801a      	strh	r2, [r3, #0]
 8013db4:	4b05      	ldr	r3, [pc, #20]	; (8013dcc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8013db6:	6019      	str	r1, [r3, #0]
 8013db8:	4b05      	ldr	r3, [pc, #20]	; (8013dd0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8013dba:	6018      	str	r0, [r3, #0]
 8013dbc:	f7ff bf96 	b.w	8013cec <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013dc0:	4770      	bx	lr
 8013dc2:	bf00      	nop
 8013dc4:	20015044 	.word	0x20015044
 8013dc8:	20015058 	.word	0x20015058
 8013dcc:	20015040 	.word	0x20015040
 8013dd0:	20015038 	.word	0x20015038

08013dd4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013dd4:	b470      	push	{r4, r5, r6}
 8013dd6:	4c07      	ldr	r4, [pc, #28]	; (8013df4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013dd8:	6826      	ldr	r6, [r4, #0]
 8013dda:	4605      	mov	r5, r0
 8013ddc:	4610      	mov	r0, r2
 8013dde:	9a03      	ldr	r2, [sp, #12]
 8013de0:	b936      	cbnz	r6, 8013df0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013de2:	6025      	str	r5, [r4, #0]
 8013de4:	4c04      	ldr	r4, [pc, #16]	; (8013df8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013de6:	8021      	strh	r1, [r4, #0]
 8013de8:	bc70      	pop	{r4, r5, r6}
 8013dea:	4619      	mov	r1, r3
 8013dec:	f7ff bfdc 	b.w	8013da8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013df0:	bc70      	pop	{r4, r5, r6}
 8013df2:	4770      	bx	lr
 8013df4:	2001505c 	.word	0x2001505c
 8013df8:	20015054 	.word	0x20015054

08013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013dfc:	4a12      	ldr	r2, [pc, #72]	; (8013e48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8013dfe:	8803      	ldrh	r3, [r0, #0]
 8013e00:	8812      	ldrh	r2, [r2, #0]
 8013e02:	4293      	cmp	r3, r2
 8013e04:	d207      	bcs.n	8013e16 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8013e06:	4a11      	ldr	r2, [pc, #68]	; (8013e4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013e08:	6812      	ldr	r2, [r2, #0]
 8013e0a:	2114      	movs	r1, #20
 8013e0c:	fb01 2303 	mla	r3, r1, r3, r2
 8013e10:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013e14:	4770      	bx	lr
 8013e16:	490e      	ldr	r1, [pc, #56]	; (8013e50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013e18:	8809      	ldrh	r1, [r1, #0]
 8013e1a:	4411      	add	r1, r2
 8013e1c:	428b      	cmp	r3, r1
 8013e1e:	da04      	bge.n	8013e2a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8013e20:	1a9b      	subs	r3, r3, r2
 8013e22:	4a0c      	ldr	r2, [pc, #48]	; (8013e54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013e24:	210e      	movs	r1, #14
 8013e26:	6812      	ldr	r2, [r2, #0]
 8013e28:	e7f0      	b.n	8013e0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8013e2a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013e2e:	4293      	cmp	r3, r2
 8013e30:	d108      	bne.n	8013e44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8013e32:	4b09      	ldr	r3, [pc, #36]	; (8013e58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8013e34:	781b      	ldrb	r3, [r3, #0]
 8013e36:	b91b      	cbnz	r3, 8013e40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8013e38:	4b08      	ldr	r3, [pc, #32]	; (8013e5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8013e3a:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013e3e:	4770      	bx	lr
 8013e40:	4b07      	ldr	r3, [pc, #28]	; (8013e60 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8013e42:	e7fa      	b.n	8013e3a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8013e44:	2000      	movs	r0, #0
 8013e46:	4770      	bx	lr
 8013e48:	20015054 	.word	0x20015054
 8013e4c:	2001505c 	.word	0x2001505c
 8013e50:	20015058 	.word	0x20015058
 8013e54:	2001503c 	.word	0x2001503c
 8013e58:	20014fcc 	.word	0x20014fcc
 8013e5c:	20014fce 	.word	0x20014fce
 8013e60:	20014fd0 	.word	0x20014fd0

08013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8013e64:	4a12      	ldr	r2, [pc, #72]	; (8013eb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8013e66:	8803      	ldrh	r3, [r0, #0]
 8013e68:	8812      	ldrh	r2, [r2, #0]
 8013e6a:	4293      	cmp	r3, r2
 8013e6c:	d207      	bcs.n	8013e7e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8013e6e:	4a11      	ldr	r2, [pc, #68]	; (8013eb4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8013e70:	6812      	ldr	r2, [r2, #0]
 8013e72:	2114      	movs	r1, #20
 8013e74:	fb01 2303 	mla	r3, r1, r3, r2
 8013e78:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8013e7c:	4770      	bx	lr
 8013e7e:	490e      	ldr	r1, [pc, #56]	; (8013eb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013e80:	8809      	ldrh	r1, [r1, #0]
 8013e82:	4411      	add	r1, r2
 8013e84:	428b      	cmp	r3, r1
 8013e86:	da04      	bge.n	8013e92 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8013e88:	1a9b      	subs	r3, r3, r2
 8013e8a:	4a0c      	ldr	r2, [pc, #48]	; (8013ebc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8013e8c:	210e      	movs	r1, #14
 8013e8e:	6812      	ldr	r2, [r2, #0]
 8013e90:	e7f0      	b.n	8013e74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013e92:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013e96:	4293      	cmp	r3, r2
 8013e98:	d108      	bne.n	8013eac <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8013e9a:	4b09      	ldr	r3, [pc, #36]	; (8013ec0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013e9c:	781b      	ldrb	r3, [r3, #0]
 8013e9e:	b91b      	cbnz	r3, 8013ea8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013ea0:	4b08      	ldr	r3, [pc, #32]	; (8013ec4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013ea2:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013ea6:	4770      	bx	lr
 8013ea8:	4b07      	ldr	r3, [pc, #28]	; (8013ec8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8013eaa:	e7fa      	b.n	8013ea2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8013eac:	2000      	movs	r0, #0
 8013eae:	4770      	bx	lr
 8013eb0:	20015054 	.word	0x20015054
 8013eb4:	2001505c 	.word	0x2001505c
 8013eb8:	20015058 	.word	0x20015058
 8013ebc:	2001503c 	.word	0x2001503c
 8013ec0:	20014fcc 	.word	0x20014fcc
 8013ec4:	20014fd0 	.word	0x20014fd0
 8013ec8:	20014fce 	.word	0x20014fce

08013ecc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013ecc:	b510      	push	{r4, lr}
 8013ece:	4a1f      	ldr	r2, [pc, #124]	; (8013f4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8013ed0:	880b      	ldrh	r3, [r1, #0]
 8013ed2:	8812      	ldrh	r2, [r2, #0]
 8013ed4:	4293      	cmp	r3, r2
 8013ed6:	d213      	bcs.n	8013f00 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013ed8:	4a1d      	ldr	r2, [pc, #116]	; (8013f50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8013eda:	6812      	ldr	r2, [r2, #0]
 8013edc:	2114      	movs	r1, #20
 8013ede:	fb01 2303 	mla	r3, r1, r3, r2
 8013ee2:	8a1a      	ldrh	r2, [r3, #16]
 8013ee4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013ee8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013eec:	8a5b      	ldrh	r3, [r3, #18]
 8013eee:	8004      	strh	r4, [r0, #0]
 8013ef0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013ef4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013ef8:	8041      	strh	r1, [r0, #2]
 8013efa:	8082      	strh	r2, [r0, #4]
 8013efc:	80c3      	strh	r3, [r0, #6]
 8013efe:	e00e      	b.n	8013f1e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013f00:	4914      	ldr	r1, [pc, #80]	; (8013f54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8013f02:	8809      	ldrh	r1, [r1, #0]
 8013f04:	4411      	add	r1, r2
 8013f06:	428b      	cmp	r3, r1
 8013f08:	da0a      	bge.n	8013f20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8013f0a:	1a9b      	subs	r3, r3, r2
 8013f0c:	4a12      	ldr	r2, [pc, #72]	; (8013f58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013f0e:	6812      	ldr	r2, [r2, #0]
 8013f10:	210e      	movs	r1, #14
 8013f12:	fb01 2303 	mla	r3, r1, r3, r2
 8013f16:	681a      	ldr	r2, [r3, #0]
 8013f18:	6002      	str	r2, [r0, #0]
 8013f1a:	685a      	ldr	r2, [r3, #4]
 8013f1c:	6042      	str	r2, [r0, #4]
 8013f1e:	bd10      	pop	{r4, pc}
 8013f20:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8013f24:	4293      	cmp	r3, r2
 8013f26:	d10b      	bne.n	8013f40 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8013f28:	4b0c      	ldr	r3, [pc, #48]	; (8013f5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013f2a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013f2e:	4b0c      	ldr	r3, [pc, #48]	; (8013f60 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013f30:	8081      	strh	r1, [r0, #4]
 8013f32:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013f36:	80c2      	strh	r2, [r0, #6]
 8013f38:	2300      	movs	r3, #0
 8013f3a:	8003      	strh	r3, [r0, #0]
 8013f3c:	8043      	strh	r3, [r0, #2]
 8013f3e:	e7ee      	b.n	8013f1e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8013f40:	2300      	movs	r3, #0
 8013f42:	8003      	strh	r3, [r0, #0]
 8013f44:	8043      	strh	r3, [r0, #2]
 8013f46:	8083      	strh	r3, [r0, #4]
 8013f48:	e7d8      	b.n	8013efc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013f4a:	bf00      	nop
 8013f4c:	20015054 	.word	0x20015054
 8013f50:	2001505c 	.word	0x2001505c
 8013f54:	20015058 	.word	0x20015058
 8013f58:	2001503c 	.word	0x2001503c
 8013f5c:	20014fc8 	.word	0x20014fc8
 8013f60:	20014fca 	.word	0x20014fca

08013f64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013f64:	4a17      	ldr	r2, [pc, #92]	; (8013fc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8013f66:	8803      	ldrh	r3, [r0, #0]
 8013f68:	8812      	ldrh	r2, [r2, #0]
 8013f6a:	4293      	cmp	r3, r2
 8013f6c:	d213      	bcs.n	8013f96 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8013f6e:	4a16      	ldr	r2, [pc, #88]	; (8013fc8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8013f70:	6812      	ldr	r2, [r2, #0]
 8013f72:	2114      	movs	r1, #20
 8013f74:	fb01 2303 	mla	r3, r1, r3, r2
 8013f78:	8a1a      	ldrh	r2, [r3, #16]
 8013f7a:	8919      	ldrh	r1, [r3, #8]
 8013f7c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013f80:	428a      	cmp	r2, r1
 8013f82:	db1d      	blt.n	8013fc0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013f84:	8a58      	ldrh	r0, [r3, #18]
 8013f86:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013f8a:	895b      	ldrh	r3, [r3, #10]
 8013f8c:	4298      	cmp	r0, r3
 8013f8e:	bfac      	ite	ge
 8013f90:	2000      	movge	r0, #0
 8013f92:	2001      	movlt	r0, #1
 8013f94:	4770      	bx	lr
 8013f96:	490d      	ldr	r1, [pc, #52]	; (8013fcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013f98:	8809      	ldrh	r1, [r1, #0]
 8013f9a:	4411      	add	r1, r2
 8013f9c:	428b      	cmp	r3, r1
 8013f9e:	da0d      	bge.n	8013fbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8013fa0:	1a9b      	subs	r3, r3, r2
 8013fa2:	4a0b      	ldr	r2, [pc, #44]	; (8013fd0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013fa4:	6812      	ldr	r2, [r2, #0]
 8013fa6:	210e      	movs	r1, #14
 8013fa8:	fb01 2303 	mla	r3, r1, r3, r2
 8013fac:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013fb0:	891a      	ldrh	r2, [r3, #8]
 8013fb2:	4291      	cmp	r1, r2
 8013fb4:	db04      	blt.n	8013fc0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013fb6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013fba:	e7e6      	b.n	8013f8a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8013fbc:	2000      	movs	r0, #0
 8013fbe:	4770      	bx	lr
 8013fc0:	2001      	movs	r0, #1
 8013fc2:	4770      	bx	lr
 8013fc4:	20015054 	.word	0x20015054
 8013fc8:	2001505c 	.word	0x2001505c
 8013fcc:	20015058 	.word	0x20015058
 8013fd0:	2001503c 	.word	0x2001503c

08013fd4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013fd4:	4a12      	ldr	r2, [pc, #72]	; (8014020 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013fd6:	8803      	ldrh	r3, [r0, #0]
 8013fd8:	8811      	ldrh	r1, [r2, #0]
 8013fda:	428b      	cmp	r3, r1
 8013fdc:	d20b      	bcs.n	8013ff6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8013fde:	4a11      	ldr	r2, [pc, #68]	; (8014024 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013fe0:	6812      	ldr	r2, [r2, #0]
 8013fe2:	b112      	cbz	r2, 8013fea <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013fe4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013fe8:	b9c0      	cbnz	r0, 801401c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013fea:	4a0f      	ldr	r2, [pc, #60]	; (8014028 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013fec:	6811      	ldr	r1, [r2, #0]
 8013fee:	2214      	movs	r2, #20
 8013ff0:	4353      	muls	r3, r2
 8013ff2:	58c8      	ldr	r0, [r1, r3]
 8013ff4:	4770      	bx	lr
 8013ff6:	4a0d      	ldr	r2, [pc, #52]	; (801402c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013ff8:	8812      	ldrh	r2, [r2, #0]
 8013ffa:	440a      	add	r2, r1
 8013ffc:	4293      	cmp	r3, r2
 8013ffe:	da04      	bge.n	801400a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014000:	4a08      	ldr	r2, [pc, #32]	; (8014024 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014002:	6812      	ldr	r2, [r2, #0]
 8014004:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014008:	4770      	bx	lr
 801400a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801400e:	4293      	cmp	r3, r2
 8014010:	d103      	bne.n	801401a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014012:	4b07      	ldr	r3, [pc, #28]	; (8014030 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014014:	681b      	ldr	r3, [r3, #0]
 8014016:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8014018:	4770      	bx	lr
 801401a:	2000      	movs	r0, #0
 801401c:	4770      	bx	lr
 801401e:	bf00      	nop
 8014020:	20015054 	.word	0x20015054
 8014024:	20015038 	.word	0x20015038
 8014028:	2001505c 	.word	0x2001505c
 801402c:	20015058 	.word	0x20015058
 8014030:	20014fd4 	.word	0x20014fd4

08014034 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014034:	4b24      	ldr	r3, [pc, #144]	; (80140c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8014036:	8802      	ldrh	r2, [r0, #0]
 8014038:	8818      	ldrh	r0, [r3, #0]
 801403a:	4282      	cmp	r2, r0
 801403c:	d221      	bcs.n	8014082 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801403e:	4b23      	ldr	r3, [pc, #140]	; (80140cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014040:	6819      	ldr	r1, [r3, #0]
 8014042:	2314      	movs	r3, #20
 8014044:	fb03 1302 	mla	r3, r3, r2, r1
 8014048:	6858      	ldr	r0, [r3, #4]
 801404a:	2800      	cmp	r0, #0
 801404c:	d03a      	beq.n	80140c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801404e:	4920      	ldr	r1, [pc, #128]	; (80140d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014050:	6809      	ldr	r1, [r1, #0]
 8014052:	2900      	cmp	r1, #0
 8014054:	d036      	beq.n	80140c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014056:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801405a:	2900      	cmp	r1, #0
 801405c:	d032      	beq.n	80140c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801405e:	891a      	ldrh	r2, [r3, #8]
 8014060:	8958      	ldrh	r0, [r3, #10]
 8014062:	4350      	muls	r0, r2
 8014064:	7c5a      	ldrb	r2, [r3, #17]
 8014066:	7cdb      	ldrb	r3, [r3, #19]
 8014068:	0952      	lsrs	r2, r2, #5
 801406a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801406e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014072:	2b0b      	cmp	r3, #11
 8014074:	bf18      	it	ne
 8014076:	0040      	lslne	r0, r0, #1
 8014078:	3003      	adds	r0, #3
 801407a:	f020 0003 	bic.w	r0, r0, #3
 801407e:	4408      	add	r0, r1
 8014080:	4770      	bx	lr
 8014082:	4b14      	ldr	r3, [pc, #80]	; (80140d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014084:	881b      	ldrh	r3, [r3, #0]
 8014086:	4403      	add	r3, r0
 8014088:	429a      	cmp	r2, r3
 801408a:	da1a      	bge.n	80140c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801408c:	4b12      	ldr	r3, [pc, #72]	; (80140d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801408e:	681b      	ldr	r3, [r3, #0]
 8014090:	1a10      	subs	r0, r2, r0
 8014092:	210e      	movs	r1, #14
 8014094:	fb01 3000 	mla	r0, r1, r0, r3
 8014098:	7b03      	ldrb	r3, [r0, #12]
 801409a:	f003 031f 	and.w	r3, r3, #31
 801409e:	2b0b      	cmp	r3, #11
 80140a0:	d10b      	bne.n	80140ba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80140a2:	8903      	ldrh	r3, [r0, #8]
 80140a4:	8940      	ldrh	r0, [r0, #10]
 80140a6:	4358      	muls	r0, r3
 80140a8:	4b09      	ldr	r3, [pc, #36]	; (80140d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80140aa:	6819      	ldr	r1, [r3, #0]
 80140ac:	3003      	adds	r0, #3
 80140ae:	f020 0303 	bic.w	r3, r0, #3
 80140b2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80140b6:	4418      	add	r0, r3
 80140b8:	4770      	bx	lr
 80140ba:	2b0d      	cmp	r3, #13
 80140bc:	d101      	bne.n	80140c2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80140be:	300d      	adds	r0, #13
 80140c0:	4770      	bx	lr
 80140c2:	2000      	movs	r0, #0
 80140c4:	4770      	bx	lr
 80140c6:	bf00      	nop
 80140c8:	20015054 	.word	0x20015054
 80140cc:	2001505c 	.word	0x2001505c
 80140d0:	20015038 	.word	0x20015038
 80140d4:	20015058 	.word	0x20015058
 80140d8:	2001503c 	.word	0x2001503c

080140dc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80140dc:	b510      	push	{r4, lr}
 80140de:	4a17      	ldr	r2, [pc, #92]	; (801413c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80140e0:	8803      	ldrh	r3, [r0, #0]
 80140e2:	8812      	ldrh	r2, [r2, #0]
 80140e4:	4293      	cmp	r3, r2
 80140e6:	d20c      	bcs.n	8014102 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80140e8:	4a15      	ldr	r2, [pc, #84]	; (8014140 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80140ea:	6812      	ldr	r2, [r2, #0]
 80140ec:	2114      	movs	r1, #20
 80140ee:	fb01 2303 	mla	r3, r1, r3, r2
 80140f2:	7c58      	ldrb	r0, [r3, #17]
 80140f4:	0942      	lsrs	r2, r0, #5
 80140f6:	7cd8      	ldrb	r0, [r3, #19]
 80140f8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80140fc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014100:	bd10      	pop	{r4, pc}
 8014102:	4910      	ldr	r1, [pc, #64]	; (8014144 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014104:	8809      	ldrh	r1, [r1, #0]
 8014106:	4411      	add	r1, r2
 8014108:	428b      	cmp	r3, r1
 801410a:	da09      	bge.n	8014120 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801410c:	1a9b      	subs	r3, r3, r2
 801410e:	4a0e      	ldr	r2, [pc, #56]	; (8014148 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014110:	6812      	ldr	r2, [r2, #0]
 8014112:	210e      	movs	r1, #14
 8014114:	fb01 2303 	mla	r3, r1, r3, r2
 8014118:	7b18      	ldrb	r0, [r3, #12]
 801411a:	f000 001f 	and.w	r0, r0, #31
 801411e:	e7ef      	b.n	8014100 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014120:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014124:	4293      	cmp	r3, r2
 8014126:	d106      	bne.n	8014136 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8014128:	f7ee fde8 	bl	8002cfc <_ZN8touchgfx3HAL3lcdEv>
 801412c:	6803      	ldr	r3, [r0, #0]
 801412e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014134:	4718      	bx	r3
 8014136:	2000      	movs	r0, #0
 8014138:	e7e2      	b.n	8014100 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801413a:	bf00      	nop
 801413c:	20015054 	.word	0x20015054
 8014140:	2001505c 	.word	0x2001505c
 8014144:	20015058 	.word	0x20015058
 8014148:	2001503c 	.word	0x2001503c

0801414c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801414c:	2010      	movs	r0, #16
 801414e:	4770      	bx	lr

08014150 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014150:	2000      	movs	r0, #0
 8014152:	4770      	bx	lr

08014154 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014154:	4b02      	ldr	r3, [pc, #8]	; (8014160 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8014156:	8818      	ldrh	r0, [r3, #0]
 8014158:	0040      	lsls	r0, r0, #1
 801415a:	b280      	uxth	r0, r0
 801415c:	4770      	bx	lr
 801415e:	bf00      	nop
 8014160:	20014fce 	.word	0x20014fce

08014164 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014164:	2bff      	cmp	r3, #255	; 0xff
 8014166:	d050      	beq.n	801420a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014168:	2a0b      	cmp	r2, #11
 801416a:	d04a      	beq.n	8014202 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801416c:	d80e      	bhi.n	801418c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801416e:	2a03      	cmp	r2, #3
 8014170:	d03f      	beq.n	80141f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014172:	d804      	bhi.n	801417e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014174:	2a01      	cmp	r2, #1
 8014176:	d03e      	beq.n	80141f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8014178:	d93f      	bls.n	80141fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801417a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801417c:	4770      	bx	lr
 801417e:	2a09      	cmp	r2, #9
 8014180:	d03f      	beq.n	8014202 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014182:	d83c      	bhi.n	80141fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014184:	2a08      	cmp	r2, #8
 8014186:	d03a      	beq.n	80141fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014188:	2000      	movs	r0, #0
 801418a:	4770      	bx	lr
 801418c:	2a2f      	cmp	r2, #47	; 0x2f
 801418e:	d024      	beq.n	80141da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014190:	d80d      	bhi.n	80141ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014192:	2a2d      	cmp	r2, #45	; 0x2d
 8014194:	d014      	beq.n	80141c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8014196:	d826      	bhi.n	80141e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014198:	2a2c      	cmp	r2, #44	; 0x2c
 801419a:	d1f5      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801419c:	684b      	ldr	r3, [r1, #4]
 801419e:	781b      	ldrb	r3, [r3, #0]
 80141a0:	2b01      	cmp	r3, #1
 80141a2:	d018      	beq.n	80141d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80141a4:	d323      	bcc.n	80141ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80141a6:	2b02      	cmp	r3, #2
 80141a8:	d1ee      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80141aa:	6880      	ldr	r0, [r0, #8]
 80141ac:	4770      	bx	lr
 80141ae:	2a31      	cmp	r2, #49	; 0x31
 80141b0:	d004      	beq.n	80141bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80141b2:	d328      	bcc.n	8014206 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80141b4:	2a32      	cmp	r2, #50	; 0x32
 80141b6:	d026      	beq.n	8014206 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80141b8:	2a33      	cmp	r2, #51	; 0x33
 80141ba:	d1e5      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80141bc:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80141be:	4770      	bx	lr
 80141c0:	684b      	ldr	r3, [r1, #4]
 80141c2:	781b      	ldrb	r3, [r3, #0]
 80141c4:	2b01      	cmp	r3, #1
 80141c6:	d004      	beq.n	80141d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80141c8:	d30b      	bcc.n	80141e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80141ca:	2b02      	cmp	r3, #2
 80141cc:	d1dc      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80141ce:	6900      	ldr	r0, [r0, #16]
 80141d0:	4770      	bx	lr
 80141d2:	6a00      	ldr	r0, [r0, #32]
 80141d4:	4770      	bx	lr
 80141d6:	6980      	ldr	r0, [r0, #24]
 80141d8:	4770      	bx	lr
 80141da:	684b      	ldr	r3, [r1, #4]
 80141dc:	781b      	ldrb	r3, [r3, #0]
 80141de:	2b00      	cmp	r3, #0
 80141e0:	d1d2      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80141e2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80141e4:	4770      	bx	lr
 80141e6:	684b      	ldr	r3, [r1, #4]
 80141e8:	781b      	ldrb	r3, [r3, #0]
 80141ea:	2b00      	cmp	r3, #0
 80141ec:	d1cc      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80141ee:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80141f0:	4770      	bx	lr
 80141f2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80141f4:	4770      	bx	lr
 80141f6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80141f8:	4770      	bx	lr
 80141fa:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80141fc:	4770      	bx	lr
 80141fe:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014200:	4770      	bx	lr
 8014202:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8014204:	4770      	bx	lr
 8014206:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8014208:	4770      	bx	lr
 801420a:	2a0b      	cmp	r2, #11
 801420c:	d049      	beq.n	80142a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801420e:	d80e      	bhi.n	801422e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8014210:	2a03      	cmp	r2, #3
 8014212:	d040      	beq.n	8014296 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8014214:	d804      	bhi.n	8014220 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8014216:	2a01      	cmp	r2, #1
 8014218:	d03f      	beq.n	801429a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801421a:	d940      	bls.n	801429e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801421c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801421e:	4770      	bx	lr
 8014220:	2a09      	cmp	r2, #9
 8014222:	d03e      	beq.n	80142a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014224:	d801      	bhi.n	801422a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8014226:	2a08      	cmp	r2, #8
 8014228:	d1ae      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801422a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801422c:	4770      	bx	lr
 801422e:	2a2f      	cmp	r2, #47	; 0x2f
 8014230:	d024      	beq.n	801427c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014232:	d80d      	bhi.n	8014250 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014234:	2a2d      	cmp	r2, #45	; 0x2d
 8014236:	d014      	beq.n	8014262 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8014238:	d826      	bhi.n	8014288 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801423a:	2a2c      	cmp	r2, #44	; 0x2c
 801423c:	d1a4      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801423e:	684b      	ldr	r3, [r1, #4]
 8014240:	781b      	ldrb	r3, [r3, #0]
 8014242:	2b01      	cmp	r3, #1
 8014244:	d018      	beq.n	8014278 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8014246:	d324      	bcc.n	8014292 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8014248:	2b02      	cmp	r3, #2
 801424a:	d19d      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801424c:	68c0      	ldr	r0, [r0, #12]
 801424e:	4770      	bx	lr
 8014250:	2a31      	cmp	r2, #49	; 0x31
 8014252:	d004      	beq.n	801425e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014254:	d327      	bcc.n	80142a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014256:	2a32      	cmp	r2, #50	; 0x32
 8014258:	d025      	beq.n	80142a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801425a:	2a33      	cmp	r2, #51	; 0x33
 801425c:	d194      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801425e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014260:	4770      	bx	lr
 8014262:	684b      	ldr	r3, [r1, #4]
 8014264:	781b      	ldrb	r3, [r3, #0]
 8014266:	2b01      	cmp	r3, #1
 8014268:	d004      	beq.n	8014274 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801426a:	d30b      	bcc.n	8014284 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801426c:	2b02      	cmp	r3, #2
 801426e:	d18b      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014270:	6940      	ldr	r0, [r0, #20]
 8014272:	4770      	bx	lr
 8014274:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014276:	4770      	bx	lr
 8014278:	69c0      	ldr	r0, [r0, #28]
 801427a:	4770      	bx	lr
 801427c:	684b      	ldr	r3, [r1, #4]
 801427e:	781b      	ldrb	r3, [r3, #0]
 8014280:	2b00      	cmp	r3, #0
 8014282:	d181      	bne.n	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014284:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014286:	4770      	bx	lr
 8014288:	684b      	ldr	r3, [r1, #4]
 801428a:	781b      	ldrb	r3, [r3, #0]
 801428c:	2b00      	cmp	r3, #0
 801428e:	f47f af7b 	bne.w	8014188 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014292:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014294:	4770      	bx	lr
 8014296:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014298:	4770      	bx	lr
 801429a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801429c:	4770      	bx	lr
 801429e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80142a0:	4770      	bx	lr
 80142a2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80142a4:	4770      	bx	lr
 80142a6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80142a8:	4770      	bx	lr

080142aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80142aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142ae:	b087      	sub	sp, #28
 80142b0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80142b2:	9205      	str	r2, [sp, #20]
 80142b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80142b8:	9202      	str	r2, [sp, #8]
 80142ba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80142be:	9101      	str	r1, [sp, #4]
 80142c0:	6841      	ldr	r1, [r0, #4]
 80142c2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80142c6:	fb01 2404 	mla	r4, r1, r4, r2
 80142ca:	6802      	ldr	r2, [r0, #0]
 80142cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80142d0:	f8de 2000 	ldr.w	r2, [lr]
 80142d4:	9203      	str	r2, [sp, #12]
 80142d6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80142da:	3204      	adds	r2, #4
 80142dc:	9204      	str	r2, [sp, #16]
 80142de:	9a02      	ldr	r2, [sp, #8]
 80142e0:	43d6      	mvns	r6, r2
 80142e2:	b2f6      	uxtb	r6, r6
 80142e4:	9a01      	ldr	r2, [sp, #4]
 80142e6:	2a00      	cmp	r2, #0
 80142e8:	dc03      	bgt.n	80142f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80142ea:	9a05      	ldr	r2, [sp, #20]
 80142ec:	2a00      	cmp	r2, #0
 80142ee:	f340 8129 	ble.w	8014544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80142f2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80142f4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80142f8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80142fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014300:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014302:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014306:	2b00      	cmp	r3, #0
 8014308:	dd0e      	ble.n	8014328 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801430a:	1408      	asrs	r0, r1, #16
 801430c:	d405      	bmi.n	801431a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801430e:	4560      	cmp	r0, ip
 8014310:	da03      	bge.n	801431a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014312:	1410      	asrs	r0, r2, #16
 8014314:	d401      	bmi.n	801431a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014316:	42b8      	cmp	r0, r7
 8014318:	db07      	blt.n	801432a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801431a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801431c:	4401      	add	r1, r0
 801431e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014320:	3b01      	subs	r3, #1
 8014322:	4402      	add	r2, r0
 8014324:	3402      	adds	r4, #2
 8014326:	e7ee      	b.n	8014306 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014328:	d071      	beq.n	801440e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801432a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801432c:	1e58      	subs	r0, r3, #1
 801432e:	fb05 1500 	mla	r5, r5, r0, r1
 8014332:	142d      	asrs	r5, r5, #16
 8014334:	d45f      	bmi.n	80143f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014336:	4565      	cmp	r5, ip
 8014338:	da5d      	bge.n	80143f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801433a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801433c:	fb05 2000 	mla	r0, r5, r0, r2
 8014340:	1400      	asrs	r0, r0, #16
 8014342:	d458      	bmi.n	80143f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014344:	42b8      	cmp	r0, r7
 8014346:	da56      	bge.n	80143f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014348:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801434c:	4699      	mov	r9, r3
 801434e:	46a2      	mov	sl, r4
 8014350:	f1b9 0f00 	cmp.w	r9, #0
 8014354:	dd57      	ble.n	8014406 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014356:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801435a:	9803      	ldr	r0, [sp, #12]
 801435c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014360:	140d      	asrs	r5, r1, #16
 8014362:	fb07 000c 	mla	r0, r7, ip, r0
 8014366:	f109 39ff 	add.w	r9, r9, #4294967295
 801436a:	5d40      	ldrb	r0, [r0, r5]
 801436c:	9d04      	ldr	r5, [sp, #16]
 801436e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014372:	f8ba 5000 	ldrh.w	r5, [sl]
 8014376:	122f      	asrs	r7, r5, #8
 8014378:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801437c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014380:	fb17 f706 	smulbb	r7, r7, r6
 8014384:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014388:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801438c:	00ed      	lsls	r5, r5, #3
 801438e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014392:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014396:	10c7      	asrs	r7, r0, #3
 8014398:	b2ed      	uxtb	r5, r5
 801439a:	00c0      	lsls	r0, r0, #3
 801439c:	fb18 f806 	smulbb	r8, r8, r6
 80143a0:	fb15 f506 	smulbb	r5, r5, r6
 80143a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80143a8:	b2c0      	uxtb	r0, r0
 80143aa:	fa1f fc8c 	uxth.w	ip, ip
 80143ae:	fb07 870b 	mla	r7, r7, fp, r8
 80143b2:	fb00 500b 	mla	r0, r0, fp, r5
 80143b6:	b280      	uxth	r0, r0
 80143b8:	b2bf      	uxth	r7, r7
 80143ba:	f10c 0501 	add.w	r5, ip, #1
 80143be:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80143c2:	f107 0801 	add.w	r8, r7, #1
 80143c6:	1c45      	adds	r5, r0, #1
 80143c8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80143cc:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80143d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80143d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80143d6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80143da:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80143de:	ea45 0c0c 	orr.w	ip, r5, ip
 80143e2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80143e6:	4401      	add	r1, r0
 80143e8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80143ea:	ea4c 0c08 	orr.w	ip, ip, r8
 80143ee:	f82a cb02 	strh.w	ip, [sl], #2
 80143f2:	4402      	add	r2, r0
 80143f4:	e7ac      	b.n	8014350 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80143f6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80143fa:	f04f 0800 	mov.w	r8, #0
 80143fe:	eb03 0008 	add.w	r0, r3, r8
 8014402:	2800      	cmp	r0, #0
 8014404:	dc41      	bgt.n	801448a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014406:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801440a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801440e:	9b01      	ldr	r3, [sp, #4]
 8014410:	2b00      	cmp	r3, #0
 8014412:	f340 8097 	ble.w	8014544 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014416:	ee30 0a04 	vadd.f32	s0, s0, s8
 801441a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801441e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014422:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014424:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014428:	ee31 1a05 	vadd.f32	s2, s2, s10
 801442c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014430:	eef0 6a62 	vmov.f32	s13, s5
 8014434:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014438:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801443c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014440:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014444:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014448:	eef0 6a43 	vmov.f32	s13, s6
 801444c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014450:	ee12 2a90 	vmov	r2, s5
 8014454:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014458:	fb92 f3f3 	sdiv	r3, r2, r3
 801445c:	ee13 2a10 	vmov	r2, s6
 8014460:	9313      	str	r3, [sp, #76]	; 0x4c
 8014462:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014464:	fb92 f3f3 	sdiv	r3, r2, r3
 8014468:	9314      	str	r3, [sp, #80]	; 0x50
 801446a:	9b01      	ldr	r3, [sp, #4]
 801446c:	9a05      	ldr	r2, [sp, #20]
 801446e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014472:	3b01      	subs	r3, #1
 8014474:	9301      	str	r3, [sp, #4]
 8014476:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801447a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801447c:	eeb0 3a67 	vmov.f32	s6, s15
 8014480:	bf08      	it	eq
 8014482:	4613      	moveq	r3, r2
 8014484:	eef0 2a47 	vmov.f32	s5, s14
 8014488:	e72c      	b.n	80142e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801448a:	140f      	asrs	r7, r1, #16
 801448c:	d453      	bmi.n	8014536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801448e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014492:	42bd      	cmp	r5, r7
 8014494:	dd4f      	ble.n	8014536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014496:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801449a:	d44c      	bmi.n	8014536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801449c:	f8de 000c 	ldr.w	r0, [lr, #12]
 80144a0:	4560      	cmp	r0, ip
 80144a2:	dd48      	ble.n	8014536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80144a4:	9803      	ldr	r0, [sp, #12]
 80144a6:	b22d      	sxth	r5, r5
 80144a8:	fb0c 0505 	mla	r5, ip, r5, r0
 80144ac:	5de8      	ldrb	r0, [r5, r7]
 80144ae:	9d04      	ldr	r5, [sp, #16]
 80144b0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80144b4:	f06f 0501 	mvn.w	r5, #1
 80144b8:	fb05 fb08 	mul.w	fp, r5, r8
 80144bc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80144c0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80144c4:	122f      	asrs	r7, r5, #8
 80144c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80144ca:	fb17 f706 	smulbb	r7, r7, r6
 80144ce:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80144d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80144d6:	00ed      	lsls	r5, r5, #3
 80144d8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80144dc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80144e0:	10c7      	asrs	r7, r0, #3
 80144e2:	b2ed      	uxtb	r5, r5
 80144e4:	00c0      	lsls	r0, r0, #3
 80144e6:	fb19 f906 	smulbb	r9, r9, r6
 80144ea:	fb15 f506 	smulbb	r5, r5, r6
 80144ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80144f2:	b2c0      	uxtb	r0, r0
 80144f4:	fa1f fc8c 	uxth.w	ip, ip
 80144f8:	fb07 970a 	mla	r7, r7, sl, r9
 80144fc:	fb00 500a 	mla	r0, r0, sl, r5
 8014500:	b2bf      	uxth	r7, r7
 8014502:	b280      	uxth	r0, r0
 8014504:	f10c 0501 	add.w	r5, ip, #1
 8014508:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801450c:	f107 0901 	add.w	r9, r7, #1
 8014510:	1c45      	adds	r5, r0, #1
 8014512:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014516:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801451a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801451e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014522:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014526:	ea45 0c0c 	orr.w	ip, r5, ip
 801452a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801452e:	ea4c 0c09 	orr.w	ip, ip, r9
 8014532:	f824 c00b 	strh.w	ip, [r4, fp]
 8014536:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014538:	4401      	add	r1, r0
 801453a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801453c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014540:	4402      	add	r2, r0
 8014542:	e75c      	b.n	80143fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014544:	b007      	add	sp, #28
 8014546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801454a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801454a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801454e:	b085      	sub	sp, #20
 8014550:	4693      	mov	fp, r2
 8014552:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014554:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014556:	6870      	ldr	r0, [r6, #4]
 8014558:	9100      	str	r1, [sp, #0]
 801455a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801455e:	fb00 2404 	mla	r4, r0, r4, r2
 8014562:	6832      	ldr	r2, [r6, #0]
 8014564:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014568:	682a      	ldr	r2, [r5, #0]
 801456a:	9201      	str	r2, [sp, #4]
 801456c:	686a      	ldr	r2, [r5, #4]
 801456e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014572:	3204      	adds	r2, #4
 8014574:	9202      	str	r2, [sp, #8]
 8014576:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801457a:	9a00      	ldr	r2, [sp, #0]
 801457c:	2a00      	cmp	r2, #0
 801457e:	dc03      	bgt.n	8014588 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014580:	f1bb 0f00 	cmp.w	fp, #0
 8014584:	f340 80a0 	ble.w	80146c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014588:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801458a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801458e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014592:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014596:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014598:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801459c:	2b00      	cmp	r3, #0
 801459e:	dd0c      	ble.n	80145ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80145a0:	1406      	asrs	r6, r0, #16
 80145a2:	d405      	bmi.n	80145b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80145a4:	454e      	cmp	r6, r9
 80145a6:	da03      	bge.n	80145b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80145a8:	1416      	asrs	r6, r2, #16
 80145aa:	d401      	bmi.n	80145b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80145ac:	4546      	cmp	r6, r8
 80145ae:	db05      	blt.n	80145bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80145b0:	4470      	add	r0, lr
 80145b2:	4462      	add	r2, ip
 80145b4:	3b01      	subs	r3, #1
 80145b6:	3402      	adds	r4, #2
 80145b8:	e7f0      	b.n	801459c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80145ba:	d00f      	beq.n	80145dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80145bc:	1e5e      	subs	r6, r3, #1
 80145be:	fb0e 0706 	mla	r7, lr, r6, r0
 80145c2:	143f      	asrs	r7, r7, #16
 80145c4:	d541      	bpl.n	801464a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80145c6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80145ca:	4698      	mov	r8, r3
 80145cc:	9603      	str	r6, [sp, #12]
 80145ce:	f1b8 0f00 	cmp.w	r8, #0
 80145d2:	dc59      	bgt.n	8014688 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80145d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80145d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80145dc:	9b00      	ldr	r3, [sp, #0]
 80145de:	2b00      	cmp	r3, #0
 80145e0:	dd72      	ble.n	80146c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80145e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80145e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80145ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80145ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80145f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80145f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80145f8:	eeb0 6a62 	vmov.f32	s12, s5
 80145fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014600:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014604:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014608:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801460c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014610:	eeb0 6a43 	vmov.f32	s12, s6
 8014614:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014618:	ee12 2a90 	vmov	r2, s5
 801461c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014620:	fb92 fef3 	sdiv	lr, r2, r3
 8014624:	ee13 2a10 	vmov	r2, s6
 8014628:	fb92 fcf3 	sdiv	ip, r2, r3
 801462c:	9b00      	ldr	r3, [sp, #0]
 801462e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014632:	3b01      	subs	r3, #1
 8014634:	9300      	str	r3, [sp, #0]
 8014636:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801463a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801463c:	eeb0 3a67 	vmov.f32	s6, s15
 8014640:	bf08      	it	eq
 8014642:	465b      	moveq	r3, fp
 8014644:	eef0 2a47 	vmov.f32	s5, s14
 8014648:	e797      	b.n	801457a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801464a:	454f      	cmp	r7, r9
 801464c:	dabb      	bge.n	80145c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801464e:	fb0c 2606 	mla	r6, ip, r6, r2
 8014652:	1436      	asrs	r6, r6, #16
 8014654:	d4b7      	bmi.n	80145c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014656:	4546      	cmp	r6, r8
 8014658:	dab5      	bge.n	80145c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801465a:	461e      	mov	r6, r3
 801465c:	46a0      	mov	r8, r4
 801465e:	2e00      	cmp	r6, #0
 8014660:	ddb8      	ble.n	80145d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014662:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014666:	9901      	ldr	r1, [sp, #4]
 8014668:	1417      	asrs	r7, r2, #16
 801466a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801466e:	fb0a 1707 	mla	r7, sl, r7, r1
 8014672:	9902      	ldr	r1, [sp, #8]
 8014674:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014678:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801467c:	f828 7b02 	strh.w	r7, [r8], #2
 8014680:	4470      	add	r0, lr
 8014682:	4462      	add	r2, ip
 8014684:	3e01      	subs	r6, #1
 8014686:	e7ea      	b.n	801465e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014688:	ea5f 4920 	movs.w	r9, r0, asr #16
 801468c:	d417      	bmi.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801468e:	68ae      	ldr	r6, [r5, #8]
 8014690:	454e      	cmp	r6, r9
 8014692:	dd14      	ble.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014694:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014698:	d411      	bmi.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801469a:	68ef      	ldr	r7, [r5, #12]
 801469c:	4557      	cmp	r7, sl
 801469e:	dd0e      	ble.n	80146be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80146a0:	9f01      	ldr	r7, [sp, #4]
 80146a2:	b236      	sxth	r6, r6
 80146a4:	fb0a 7606 	mla	r6, sl, r6, r7
 80146a8:	9f02      	ldr	r7, [sp, #8]
 80146aa:	f816 6009 	ldrb.w	r6, [r6, r9]
 80146ae:	f06f 0101 	mvn.w	r1, #1
 80146b2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80146b6:	fb01 f608 	mul.w	r6, r1, r8
 80146ba:	9903      	ldr	r1, [sp, #12]
 80146bc:	538f      	strh	r7, [r1, r6]
 80146be:	4470      	add	r0, lr
 80146c0:	4462      	add	r2, ip
 80146c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80146c6:	e782      	b.n	80145ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80146c8:	b005      	add	sp, #20
 80146ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080146ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80146ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146d2:	b087      	sub	sp, #28
 80146d4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80146d6:	9205      	str	r2, [sp, #20]
 80146d8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80146dc:	9203      	str	r2, [sp, #12]
 80146de:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80146e2:	9102      	str	r1, [sp, #8]
 80146e4:	6861      	ldr	r1, [r4, #4]
 80146e6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80146ea:	fb01 2000 	mla	r0, r1, r0, r2
 80146ee:	6822      	ldr	r2, [r4, #0]
 80146f0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80146f4:	9200      	str	r2, [sp, #0]
 80146f6:	f8dc 2000 	ldr.w	r2, [ip]
 80146fa:	9204      	str	r2, [sp, #16]
 80146fc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014700:	3204      	adds	r2, #4
 8014702:	9201      	str	r2, [sp, #4]
 8014704:	9a03      	ldr	r2, [sp, #12]
 8014706:	43d5      	mvns	r5, r2
 8014708:	b2ed      	uxtb	r5, r5
 801470a:	9a02      	ldr	r2, [sp, #8]
 801470c:	2a00      	cmp	r2, #0
 801470e:	dc03      	bgt.n	8014718 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014710:	9a05      	ldr	r2, [sp, #20]
 8014712:	2a00      	cmp	r2, #0
 8014714:	f340 812c 	ble.w	8014970 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014718:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801471a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801471e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014722:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014726:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014728:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801472c:	2b00      	cmp	r3, #0
 801472e:	dd10      	ble.n	8014752 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014730:	140c      	asrs	r4, r1, #16
 8014732:	d405      	bmi.n	8014740 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014734:	4574      	cmp	r4, lr
 8014736:	da03      	bge.n	8014740 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014738:	1414      	asrs	r4, r2, #16
 801473a:	d401      	bmi.n	8014740 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801473c:	42bc      	cmp	r4, r7
 801473e:	db09      	blt.n	8014754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014740:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014742:	9800      	ldr	r0, [sp, #0]
 8014744:	4421      	add	r1, r4
 8014746:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014748:	3002      	adds	r0, #2
 801474a:	4422      	add	r2, r4
 801474c:	3b01      	subs	r3, #1
 801474e:	9000      	str	r0, [sp, #0]
 8014750:	e7ec      	b.n	801472c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014752:	d071      	beq.n	8014838 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014754:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014756:	1e5c      	subs	r4, r3, #1
 8014758:	fb06 1604 	mla	r6, r6, r4, r1
 801475c:	1436      	asrs	r6, r6, #16
 801475e:	d45d      	bmi.n	801481c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014760:	4576      	cmp	r6, lr
 8014762:	da5b      	bge.n	801481c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014764:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014766:	fb06 2404 	mla	r4, r6, r4, r2
 801476a:	1424      	asrs	r4, r4, #16
 801476c:	d456      	bmi.n	801481c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801476e:	42bc      	cmp	r4, r7
 8014770:	da54      	bge.n	801481c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014772:	f8dd 9000 	ldr.w	r9, [sp]
 8014776:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801477a:	4698      	mov	r8, r3
 801477c:	f1b8 0f00 	cmp.w	r8, #0
 8014780:	dd54      	ble.n	801482c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014782:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014786:	9804      	ldr	r0, [sp, #16]
 8014788:	1414      	asrs	r4, r2, #16
 801478a:	fb07 0404 	mla	r4, r7, r4, r0
 801478e:	140e      	asrs	r6, r1, #16
 8014790:	9801      	ldr	r0, [sp, #4]
 8014792:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014796:	f8b9 4000 	ldrh.w	r4, [r9]
 801479a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801479e:	eb00 0b0e 	add.w	fp, r0, lr
 80147a2:	1227      	asrs	r7, r4, #8
 80147a4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80147a8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80147ac:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80147b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80147b2:	fb16 f60a 	smulbb	r6, r6, sl
 80147b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80147ba:	fb07 6705 	mla	r7, r7, r5, r6
 80147be:	10e6      	asrs	r6, r4, #3
 80147c0:	00e4      	lsls	r4, r4, #3
 80147c2:	b2e4      	uxtb	r4, r4
 80147c4:	fb1b fb0a 	smulbb	fp, fp, sl
 80147c8:	fb14 f405 	smulbb	r4, r4, r5
 80147cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80147d0:	b2bf      	uxth	r7, r7
 80147d2:	fb06 b605 	mla	r6, r6, r5, fp
 80147d6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80147da:	b2b6      	uxth	r6, r6
 80147dc:	fa1f fe8e 	uxth.w	lr, lr
 80147e0:	1c7c      	adds	r4, r7, #1
 80147e2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80147e6:	f106 0b01 	add.w	fp, r6, #1
 80147ea:	f10e 0401 	add.w	r4, lr, #1
 80147ee:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80147f2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80147f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80147fa:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80147fe:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014802:	4327      	orrs	r7, r4
 8014804:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014808:	4401      	add	r1, r0
 801480a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801480c:	ea47 070b 	orr.w	r7, r7, fp
 8014810:	f829 7b02 	strh.w	r7, [r9], #2
 8014814:	4402      	add	r2, r0
 8014816:	f108 38ff 	add.w	r8, r8, #4294967295
 801481a:	e7af      	b.n	801477c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801481c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014820:	f04f 0e00 	mov.w	lr, #0
 8014824:	eb03 040e 	add.w	r4, r3, lr
 8014828:	2c00      	cmp	r4, #0
 801482a:	dc43      	bgt.n	80148b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801482c:	9a00      	ldr	r2, [sp, #0]
 801482e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014832:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014836:	9300      	str	r3, [sp, #0]
 8014838:	9b02      	ldr	r3, [sp, #8]
 801483a:	2b00      	cmp	r3, #0
 801483c:	f340 8098 	ble.w	8014970 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014840:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014844:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014848:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801484c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801484e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014852:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014856:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801485a:	eef0 6a62 	vmov.f32	s13, s5
 801485e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014862:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014866:	ee77 2a62 	vsub.f32	s5, s14, s5
 801486a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801486e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014872:	eef0 6a43 	vmov.f32	s13, s6
 8014876:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801487a:	ee12 2a90 	vmov	r2, s5
 801487e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014882:	fb92 f3f3 	sdiv	r3, r2, r3
 8014886:	ee13 2a10 	vmov	r2, s6
 801488a:	9313      	str	r3, [sp, #76]	; 0x4c
 801488c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801488e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014892:	9314      	str	r3, [sp, #80]	; 0x50
 8014894:	9b02      	ldr	r3, [sp, #8]
 8014896:	9a05      	ldr	r2, [sp, #20]
 8014898:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801489c:	3b01      	subs	r3, #1
 801489e:	9302      	str	r3, [sp, #8]
 80148a0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80148a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148a6:	eeb0 3a67 	vmov.f32	s6, s15
 80148aa:	bf08      	it	eq
 80148ac:	4613      	moveq	r3, r2
 80148ae:	eef0 2a47 	vmov.f32	s5, s14
 80148b2:	e72a      	b.n	801470a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80148b4:	140f      	asrs	r7, r1, #16
 80148b6:	d454      	bmi.n	8014962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80148b8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80148bc:	42be      	cmp	r6, r7
 80148be:	dd50      	ble.n	8014962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80148c0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80148c4:	d44d      	bmi.n	8014962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80148c6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80148ca:	4544      	cmp	r4, r8
 80148cc:	dd49      	ble.n	8014962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80148ce:	9c04      	ldr	r4, [sp, #16]
 80148d0:	b236      	sxth	r6, r6
 80148d2:	fb08 4606 	mla	r6, r8, r6, r4
 80148d6:	f06f 0001 	mvn.w	r0, #1
 80148da:	f816 8007 	ldrb.w	r8, [r6, r7]
 80148de:	9c01      	ldr	r4, [sp, #4]
 80148e0:	fb00 fa0e 	mul.w	sl, r0, lr
 80148e4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80148e8:	9800      	ldr	r0, [sp, #0]
 80148ea:	eb04 0b08 	add.w	fp, r4, r8
 80148ee:	f830 400a 	ldrh.w	r4, [r0, sl]
 80148f2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80148f6:	9801      	ldr	r0, [sp, #4]
 80148f8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80148fc:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014900:	9800      	ldr	r0, [sp, #0]
 8014902:	1227      	asrs	r7, r4, #8
 8014904:	fb16 f609 	smulbb	r6, r6, r9
 8014908:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801490c:	fb07 6705 	mla	r7, r7, r5, r6
 8014910:	10e6      	asrs	r6, r4, #3
 8014912:	00e4      	lsls	r4, r4, #3
 8014914:	b2e4      	uxtb	r4, r4
 8014916:	fb1b fb09 	smulbb	fp, fp, r9
 801491a:	fb14 f405 	smulbb	r4, r4, r5
 801491e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014922:	b2bf      	uxth	r7, r7
 8014924:	fb06 b605 	mla	r6, r6, r5, fp
 8014928:	fb08 4809 	mla	r8, r8, r9, r4
 801492c:	b2b6      	uxth	r6, r6
 801492e:	fa1f f888 	uxth.w	r8, r8
 8014932:	1c7c      	adds	r4, r7, #1
 8014934:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014938:	f106 0b01 	add.w	fp, r6, #1
 801493c:	f108 0401 	add.w	r4, r8, #1
 8014940:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8014944:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014948:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801494c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014950:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014954:	4327      	orrs	r7, r4
 8014956:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801495a:	ea47 070b 	orr.w	r7, r7, fp
 801495e:	f820 700a 	strh.w	r7, [r0, sl]
 8014962:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014964:	4401      	add	r1, r0
 8014966:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014968:	f10e 3eff 	add.w	lr, lr, #4294967295
 801496c:	4402      	add	r2, r0
 801496e:	e759      	b.n	8014824 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014970:	b007      	add	sp, #28
 8014972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014978 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014978:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801497c:	b085      	sub	sp, #20
 801497e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014982:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014984:	9203      	str	r2, [sp, #12]
 8014986:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801498a:	6870      	ldr	r0, [r6, #4]
 801498c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801498e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8014992:	686f      	ldr	r7, [r5, #4]
 8014994:	9101      	str	r1, [sp, #4]
 8014996:	fb00 2404 	mla	r4, r0, r4, r2
 801499a:	6832      	ldr	r2, [r6, #0]
 801499c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80149a0:	682a      	ldr	r2, [r5, #0]
 80149a2:	9202      	str	r2, [sp, #8]
 80149a4:	3704      	adds	r7, #4
 80149a6:	9a01      	ldr	r2, [sp, #4]
 80149a8:	2a00      	cmp	r2, #0
 80149aa:	dc03      	bgt.n	80149b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80149ac:	9a03      	ldr	r2, [sp, #12]
 80149ae:	2a00      	cmp	r2, #0
 80149b0:	f340 80cc 	ble.w	8014b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80149b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80149b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80149ba:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80149be:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80149c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80149c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80149c8:	2b00      	cmp	r3, #0
 80149ca:	dd0d      	ble.n	80149e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149cc:	1406      	asrs	r6, r0, #16
 80149ce:	d405      	bmi.n	80149dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80149d0:	454e      	cmp	r6, r9
 80149d2:	da03      	bge.n	80149dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80149d4:	1416      	asrs	r6, r2, #16
 80149d6:	d401      	bmi.n	80149dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80149d8:	4546      	cmp	r6, r8
 80149da:	db06      	blt.n	80149ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149dc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80149de:	4460      	add	r0, ip
 80149e0:	4432      	add	r2, r6
 80149e2:	3b01      	subs	r3, #1
 80149e4:	3402      	adds	r4, #2
 80149e6:	e7ef      	b.n	80149c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80149e8:	d00f      	beq.n	8014a0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80149ea:	1e5e      	subs	r6, r3, #1
 80149ec:	fb0c 0e06 	mla	lr, ip, r6, r0
 80149f0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80149f4:	d543      	bpl.n	8014a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80149f6:	4698      	mov	r8, r3
 80149f8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80149fc:	f1b8 0f00 	cmp.w	r8, #0
 8014a00:	dc71      	bgt.n	8014ae6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8014a02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a0a:	9b01      	ldr	r3, [sp, #4]
 8014a0c:	2b00      	cmp	r3, #0
 8014a0e:	f340 809d 	ble.w	8014b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8014a12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a28:	eeb0 6a62 	vmov.f32	s12, s5
 8014a2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a34:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a38:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014a3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a40:	eeb0 6a43 	vmov.f32	s12, s6
 8014a44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a48:	ee12 2a90 	vmov	r2, s5
 8014a4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a50:	fb92 fcf3 	sdiv	ip, r2, r3
 8014a54:	ee13 2a10 	vmov	r2, s6
 8014a58:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a5c:	9312      	str	r3, [sp, #72]	; 0x48
 8014a5e:	9b01      	ldr	r3, [sp, #4]
 8014a60:	9a03      	ldr	r2, [sp, #12]
 8014a62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a66:	3b01      	subs	r3, #1
 8014a68:	9301      	str	r3, [sp, #4]
 8014a6a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014a6e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014a70:	eeb0 3a67 	vmov.f32	s6, s15
 8014a74:	bf08      	it	eq
 8014a76:	4613      	moveq	r3, r2
 8014a78:	eef0 2a47 	vmov.f32	s5, s14
 8014a7c:	e793      	b.n	80149a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8014a7e:	45ce      	cmp	lr, r9
 8014a80:	dab9      	bge.n	80149f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a82:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014a84:	fb01 2606 	mla	r6, r1, r6, r2
 8014a88:	1436      	asrs	r6, r6, #16
 8014a8a:	d4b4      	bmi.n	80149f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a8c:	4546      	cmp	r6, r8
 8014a8e:	dab2      	bge.n	80149f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a90:	4698      	mov	r8, r3
 8014a92:	46a2      	mov	sl, r4
 8014a94:	f1b8 0f00 	cmp.w	r8, #0
 8014a98:	ddb3      	ble.n	8014a02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014a9a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014a9e:	9902      	ldr	r1, [sp, #8]
 8014aa0:	1416      	asrs	r6, r2, #16
 8014aa2:	fb09 1606 	mla	r6, r9, r6, r1
 8014aa6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014aaa:	492a      	ldr	r1, [pc, #168]	; (8014b54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014aac:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014ab0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014ab4:	eb07 0b0e 	add.w	fp, r7, lr
 8014ab8:	4460      	add	r0, ip
 8014aba:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8014abe:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8014ac2:	00f6      	lsls	r6, r6, #3
 8014ac4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014ac8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014acc:	ea49 0606 	orr.w	r6, r9, r6
 8014ad0:	f817 900e 	ldrb.w	r9, [r7, lr]
 8014ad4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014ad6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014ada:	f82a 6b02 	strh.w	r6, [sl], #2
 8014ade:	440a      	add	r2, r1
 8014ae0:	f108 38ff 	add.w	r8, r8, #4294967295
 8014ae4:	e7d6      	b.n	8014a94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014ae6:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014aea:	d429      	bmi.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014aec:	68ae      	ldr	r6, [r5, #8]
 8014aee:	454e      	cmp	r6, r9
 8014af0:	dd26      	ble.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014af2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8014af6:	d423      	bmi.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014af8:	68e9      	ldr	r1, [r5, #12]
 8014afa:	4559      	cmp	r1, fp
 8014afc:	dd20      	ble.n	8014b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014afe:	9902      	ldr	r1, [sp, #8]
 8014b00:	fa0f fe86 	sxth.w	lr, r6
 8014b04:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8014b08:	f06f 0101 	mvn.w	r1, #1
 8014b0c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8014b10:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014b14:	eb07 060e 	add.w	r6, r7, lr
 8014b18:	fb01 f908 	mul.w	r9, r1, r8
 8014b1c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014b20:	7876      	ldrb	r6, [r6, #1]
 8014b22:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8014b26:	00f6      	lsls	r6, r6, #3
 8014b28:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8014b2c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014b30:	ea4b 0606 	orr.w	r6, fp, r6
 8014b34:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8014b38:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8014b3c:	f82a 6009 	strh.w	r6, [sl, r9]
 8014b40:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014b42:	4460      	add	r0, ip
 8014b44:	440a      	add	r2, r1
 8014b46:	f108 38ff 	add.w	r8, r8, #4294967295
 8014b4a:	e757      	b.n	80149fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014b4c:	b005      	add	sp, #20
 8014b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b52:	bf00      	nop
 8014b54:	fffff800 	.word	0xfffff800

08014b58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b5c:	b087      	sub	sp, #28
 8014b5e:	468b      	mov	fp, r1
 8014b60:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014b62:	9204      	str	r2, [sp, #16]
 8014b64:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014b68:	9205      	str	r2, [sp, #20]
 8014b6a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014b6e:	6841      	ldr	r1, [r0, #4]
 8014b70:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014b74:	fb01 2404 	mla	r4, r1, r4, r2
 8014b78:	6802      	ldr	r2, [r0, #0]
 8014b7a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014b7e:	f8dc 2000 	ldr.w	r2, [ip]
 8014b82:	9201      	str	r2, [sp, #4]
 8014b84:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014b88:	3204      	adds	r2, #4
 8014b8a:	9202      	str	r2, [sp, #8]
 8014b8c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014b90:	f1bb 0f00 	cmp.w	fp, #0
 8014b94:	dc03      	bgt.n	8014b9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014b96:	9a04      	ldr	r2, [sp, #16]
 8014b98:	2a00      	cmp	r2, #0
 8014b9a:	f340 8138 	ble.w	8014e0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014b9e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014ba0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014ba4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014ba8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014bac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014bae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014bb2:	2b00      	cmp	r3, #0
 8014bb4:	dd0e      	ble.n	8014bd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014bb6:	1402      	asrs	r2, r0, #16
 8014bb8:	d405      	bmi.n	8014bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014bba:	42ba      	cmp	r2, r7
 8014bbc:	da03      	bge.n	8014bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014bbe:	140a      	asrs	r2, r1, #16
 8014bc0:	d401      	bmi.n	8014bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014bc2:	42b2      	cmp	r2, r6
 8014bc4:	db07      	blt.n	8014bd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014bc6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014bc8:	4410      	add	r0, r2
 8014bca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014bcc:	3b01      	subs	r3, #1
 8014bce:	4411      	add	r1, r2
 8014bd0:	3402      	adds	r4, #2
 8014bd2:	e7ee      	b.n	8014bb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014bd4:	d019      	beq.n	8014c0a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014bd6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014bd8:	1e5a      	subs	r2, r3, #1
 8014bda:	fb05 0502 	mla	r5, r5, r2, r0
 8014bde:	142d      	asrs	r5, r5, #16
 8014be0:	d409      	bmi.n	8014bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014be2:	42bd      	cmp	r5, r7
 8014be4:	da07      	bge.n	8014bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014be6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014be8:	fb05 1202 	mla	r2, r5, r2, r1
 8014bec:	1412      	asrs	r2, r2, #16
 8014bee:	d402      	bmi.n	8014bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014bf0:	42b2      	cmp	r2, r6
 8014bf2:	f2c0 80ac 	blt.w	8014d4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8014bf6:	f04f 0e00 	mov.w	lr, #0
 8014bfa:	eb03 020e 	add.w	r2, r3, lr
 8014bfe:	2a00      	cmp	r2, #0
 8014c00:	dc3e      	bgt.n	8014c80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014c02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014c0a:	f1bb 0f00 	cmp.w	fp, #0
 8014c0e:	f340 80fe 	ble.w	8014e0e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014c12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014c16:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014c1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c20:	f1bb 0b01 	subs.w	fp, fp, #1
 8014c24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014c2c:	eeb0 6a62 	vmov.f32	s12, s5
 8014c30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014c34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c38:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014c3c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8014c40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c44:	eeb0 6a43 	vmov.f32	s12, s6
 8014c48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c4c:	ee12 2a90 	vmov	r2, s5
 8014c50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c54:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c58:	ee13 2a10 	vmov	r2, s6
 8014c5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014c60:	9313      	str	r3, [sp, #76]	; 0x4c
 8014c62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c64:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c68:	9a04      	ldr	r2, [sp, #16]
 8014c6a:	9314      	str	r3, [sp, #80]	; 0x50
 8014c6c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014c70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c72:	eeb0 3a67 	vmov.f32	s6, s15
 8014c76:	bf08      	it	eq
 8014c78:	4613      	moveq	r3, r2
 8014c7a:	eef0 2a47 	vmov.f32	s5, s14
 8014c7e:	e787      	b.n	8014b90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014c80:	1406      	asrs	r6, r0, #16
 8014c82:	d45d      	bmi.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014c84:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014c88:	42b5      	cmp	r5, r6
 8014c8a:	dd59      	ble.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014c8c:	140f      	asrs	r7, r1, #16
 8014c8e:	d457      	bmi.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014c90:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014c94:	42ba      	cmp	r2, r7
 8014c96:	dd53      	ble.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014c98:	9a01      	ldr	r2, [sp, #4]
 8014c9a:	b22d      	sxth	r5, r5
 8014c9c:	fb07 2505 	mla	r5, r7, r5, r2
 8014ca0:	5daa      	ldrb	r2, [r5, r6]
 8014ca2:	9d02      	ldr	r5, [sp, #8]
 8014ca4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014ca8:	0e2e      	lsrs	r6, r5, #24
 8014caa:	d049      	beq.n	8014d40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014cac:	f06f 0201 	mvn.w	r2, #1
 8014cb0:	fb02 f20e 	mul.w	r2, r2, lr
 8014cb4:	9203      	str	r2, [sp, #12]
 8014cb6:	f834 8002 	ldrh.w	r8, [r4, r2]
 8014cba:	9a05      	ldr	r2, [sp, #20]
 8014cbc:	4356      	muls	r6, r2
 8014cbe:	1c72      	adds	r2, r6, #1
 8014cc0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014cc4:	1212      	asrs	r2, r2, #8
 8014cc6:	fa1f f982 	uxth.w	r9, r2
 8014cca:	ea4f 2728 	mov.w	r7, r8, asr #8
 8014cce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014cd2:	43d2      	mvns	r2, r2
 8014cd4:	b2d2      	uxtb	r2, r2
 8014cd6:	fb16 f609 	smulbb	r6, r6, r9
 8014cda:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014cde:	fb07 6702 	mla	r7, r7, r2, r6
 8014ce2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014ce6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014cea:	b2ed      	uxtb	r5, r5
 8014cec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014cf0:	fa5f f888 	uxtb.w	r8, r8
 8014cf4:	fb15 f509 	smulbb	r5, r5, r9
 8014cf8:	fb08 5502 	mla	r5, r8, r2, r5
 8014cfc:	b2bf      	uxth	r7, r7
 8014cfe:	fb1a fa09 	smulbb	sl, sl, r9
 8014d02:	b2ad      	uxth	r5, r5
 8014d04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014d08:	fb06 a602 	mla	r6, r6, r2, sl
 8014d0c:	1c7a      	adds	r2, r7, #1
 8014d0e:	f105 0a01 	add.w	sl, r5, #1
 8014d12:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014d16:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014d1a:	b2b6      	uxth	r6, r6
 8014d1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014d20:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014d24:	ea4a 0707 	orr.w	r7, sl, r7
 8014d28:	f106 0a01 	add.w	sl, r6, #1
 8014d2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014d30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014d34:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014d38:	9a03      	ldr	r2, [sp, #12]
 8014d3a:	ea47 070a 	orr.w	r7, r7, sl
 8014d3e:	52a7      	strh	r7, [r4, r2]
 8014d40:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014d42:	4410      	add	r0, r2
 8014d44:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014d46:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014d4a:	4411      	add	r1, r2
 8014d4c:	e755      	b.n	8014bfa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014d4e:	f04f 0800 	mov.w	r8, #0
 8014d52:	eba3 0208 	sub.w	r2, r3, r8
 8014d56:	2a00      	cmp	r2, #0
 8014d58:	f77f af53 	ble.w	8014c02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014d5c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8014d60:	9f01      	ldr	r7, [sp, #4]
 8014d62:	140a      	asrs	r2, r1, #16
 8014d64:	1405      	asrs	r5, r0, #16
 8014d66:	fb06 7202 	mla	r2, r6, r2, r7
 8014d6a:	5d52      	ldrb	r2, [r2, r5]
 8014d6c:	9d02      	ldr	r5, [sp, #8]
 8014d6e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014d72:	0e2e      	lsrs	r6, r5, #24
 8014d74:	d044      	beq.n	8014e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8014d76:	9a05      	ldr	r2, [sp, #20]
 8014d78:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014d7c:	4356      	muls	r6, r2
 8014d7e:	1c72      	adds	r2, r6, #1
 8014d80:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014d84:	1212      	asrs	r2, r2, #8
 8014d86:	fa1f f982 	uxth.w	r9, r2
 8014d8a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014d8e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014d92:	43d2      	mvns	r2, r2
 8014d94:	b2d2      	uxtb	r2, r2
 8014d96:	fb16 f609 	smulbb	r6, r6, r9
 8014d9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014d9e:	fb07 6702 	mla	r7, r7, r2, r6
 8014da2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014da6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014daa:	b2ed      	uxtb	r5, r5
 8014dac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014db0:	fa5f fe8e 	uxtb.w	lr, lr
 8014db4:	fb15 f509 	smulbb	r5, r5, r9
 8014db8:	fb0e 5502 	mla	r5, lr, r2, r5
 8014dbc:	b2bf      	uxth	r7, r7
 8014dbe:	fb1a fa09 	smulbb	sl, sl, r9
 8014dc2:	b2ad      	uxth	r5, r5
 8014dc4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014dc8:	fb06 a602 	mla	r6, r6, r2, sl
 8014dcc:	1c7a      	adds	r2, r7, #1
 8014dce:	f105 0a01 	add.w	sl, r5, #1
 8014dd2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014dd6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014dda:	b2b6      	uxth	r6, r6
 8014ddc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014de0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014de4:	ea4a 0707 	orr.w	r7, sl, r7
 8014de8:	f106 0a01 	add.w	sl, r6, #1
 8014dec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014df0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014df4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014df8:	ea47 070a 	orr.w	r7, r7, sl
 8014dfc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014e00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014e02:	4410      	add	r0, r2
 8014e04:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014e06:	f108 0801 	add.w	r8, r8, #1
 8014e0a:	4411      	add	r1, r2
 8014e0c:	e7a1      	b.n	8014d52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8014e0e:	b007      	add	sp, #28
 8014e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e18:	b085      	sub	sp, #20
 8014e1a:	468b      	mov	fp, r1
 8014e1c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014e1e:	9203      	str	r2, [sp, #12]
 8014e20:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014e24:	6841      	ldr	r1, [r0, #4]
 8014e26:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8014e2a:	fb01 2404 	mla	r4, r1, r4, r2
 8014e2e:	6802      	ldr	r2, [r0, #0]
 8014e30:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014e34:	f8de 2000 	ldr.w	r2, [lr]
 8014e38:	9200      	str	r2, [sp, #0]
 8014e3a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014e3e:	3204      	adds	r2, #4
 8014e40:	9201      	str	r2, [sp, #4]
 8014e42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014e46:	f1bb 0f00 	cmp.w	fp, #0
 8014e4a:	dc03      	bgt.n	8014e54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014e4c:	9a03      	ldr	r2, [sp, #12]
 8014e4e:	2a00      	cmp	r2, #0
 8014e50:	f340 8153 	ble.w	80150fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014e54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e56:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014e5a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014e5e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014e62:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014e64:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014e68:	2b00      	cmp	r3, #0
 8014e6a:	dd0e      	ble.n	8014e8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014e6c:	1408      	asrs	r0, r1, #16
 8014e6e:	d405      	bmi.n	8014e7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014e70:	42b8      	cmp	r0, r7
 8014e72:	da03      	bge.n	8014e7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014e74:	1410      	asrs	r0, r2, #16
 8014e76:	d401      	bmi.n	8014e7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014e78:	42b0      	cmp	r0, r6
 8014e7a:	db07      	blt.n	8014e8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014e7c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014e7e:	4401      	add	r1, r0
 8014e80:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014e82:	3b01      	subs	r3, #1
 8014e84:	4402      	add	r2, r0
 8014e86:	3402      	adds	r4, #2
 8014e88:	e7ee      	b.n	8014e68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014e8a:	d017      	beq.n	8014ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014e8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014e8e:	1e58      	subs	r0, r3, #1
 8014e90:	fb05 1500 	mla	r5, r5, r0, r1
 8014e94:	142d      	asrs	r5, r5, #16
 8014e96:	d409      	bmi.n	8014eac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014e98:	42bd      	cmp	r5, r7
 8014e9a:	da07      	bge.n	8014eac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014e9c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014e9e:	fb05 2000 	mla	r0, r5, r0, r2
 8014ea2:	1400      	asrs	r0, r0, #16
 8014ea4:	d402      	bmi.n	8014eac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014ea6:	42b0      	cmp	r0, r6
 8014ea8:	f2c0 80bc 	blt.w	8015024 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014eac:	2600      	movs	r6, #0
 8014eae:	1998      	adds	r0, r3, r6
 8014eb0:	2800      	cmp	r0, #0
 8014eb2:	dc3e      	bgt.n	8014f32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014eb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014eb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ebc:	f1bb 0f00 	cmp.w	fp, #0
 8014ec0:	f340 811b 	ble.w	80150fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014ec4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ec8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014ecc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ed0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014ed2:	f1bb 0b01 	subs.w	fp, fp, #1
 8014ed6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014eda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ede:	eeb0 6a62 	vmov.f32	s12, s5
 8014ee2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014ee6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014eea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014eee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014ef2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ef6:	eeb0 6a43 	vmov.f32	s12, s6
 8014efa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014efe:	ee12 2a90 	vmov	r2, s5
 8014f02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f06:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f0a:	ee13 2a10 	vmov	r2, s6
 8014f0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014f12:	9311      	str	r3, [sp, #68]	; 0x44
 8014f14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f16:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f1a:	9a03      	ldr	r2, [sp, #12]
 8014f1c:	9312      	str	r3, [sp, #72]	; 0x48
 8014f1e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014f22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f24:	eeb0 3a67 	vmov.f32	s6, s15
 8014f28:	bf08      	it	eq
 8014f2a:	4613      	moveq	r3, r2
 8014f2c:	eef0 2a47 	vmov.f32	s5, s14
 8014f30:	e789      	b.n	8014e46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014f32:	140f      	asrs	r7, r1, #16
 8014f34:	d426      	bmi.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f36:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014f3a:	42bd      	cmp	r5, r7
 8014f3c:	dd22      	ble.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f3e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014f42:	d41f      	bmi.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f44:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014f48:	4560      	cmp	r0, ip
 8014f4a:	dd1b      	ble.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f4c:	9800      	ldr	r0, [sp, #0]
 8014f4e:	b22d      	sxth	r5, r5
 8014f50:	fb0c 0505 	mla	r5, ip, r5, r0
 8014f54:	5de8      	ldrb	r0, [r5, r7]
 8014f56:	9d01      	ldr	r5, [sp, #4]
 8014f58:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014f5c:	0e07      	lsrs	r7, r0, #24
 8014f5e:	2fff      	cmp	r7, #255	; 0xff
 8014f60:	d116      	bne.n	8014f90 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014f62:	f06f 0501 	mvn.w	r5, #1
 8014f66:	fb05 f706 	mul.w	r7, r5, r6
 8014f6a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8014f6e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014f72:	0945      	lsrs	r5, r0, #5
 8014f74:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014f78:	ea4c 0505 	orr.w	r5, ip, r5
 8014f7c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014f80:	4305      	orrs	r5, r0
 8014f82:	53e5      	strh	r5, [r4, r7]
 8014f84:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014f86:	4401      	add	r1, r0
 8014f88:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014f8a:	3e01      	subs	r6, #1
 8014f8c:	4402      	add	r2, r0
 8014f8e:	e78e      	b.n	8014eae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014f90:	b2fd      	uxtb	r5, r7
 8014f92:	2f00      	cmp	r7, #0
 8014f94:	d0f6      	beq.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014f96:	f06f 0701 	mvn.w	r7, #1
 8014f9a:	4377      	muls	r7, r6
 8014f9c:	fa1f f985 	uxth.w	r9, r5
 8014fa0:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014fa4:	9702      	str	r7, [sp, #8]
 8014fa6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014faa:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014fae:	43ed      	mvns	r5, r5
 8014fb0:	b2ed      	uxtb	r5, r5
 8014fb2:	fb17 f709 	smulbb	r7, r7, r9
 8014fb6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014fba:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014fbe:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014fc2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014fc6:	b2c0      	uxtb	r0, r0
 8014fc8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014fcc:	fa5f f888 	uxtb.w	r8, r8
 8014fd0:	fb10 f009 	smulbb	r0, r0, r9
 8014fd4:	fb08 0005 	mla	r0, r8, r5, r0
 8014fd8:	b280      	uxth	r0, r0
 8014fda:	fa1f fc8c 	uxth.w	ip, ip
 8014fde:	fb1a fa09 	smulbb	sl, sl, r9
 8014fe2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014fe6:	fb07 a705 	mla	r7, r7, r5, sl
 8014fea:	f100 0a01 	add.w	sl, r0, #1
 8014fee:	f10c 0501 	add.w	r5, ip, #1
 8014ff2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014ff6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014ffa:	b2bf      	uxth	r7, r7
 8014ffc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015000:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015004:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015008:	f107 0a01 	add.w	sl, r7, #1
 801500c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015010:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015014:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015018:	9802      	ldr	r0, [sp, #8]
 801501a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801501e:	f824 c000 	strh.w	ip, [r4, r0]
 8015022:	e7af      	b.n	8014f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015024:	f04f 0800 	mov.w	r8, #0
 8015028:	eba3 0008 	sub.w	r0, r3, r8
 801502c:	2800      	cmp	r0, #0
 801502e:	f77f af41 	ble.w	8014eb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015032:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015036:	9f00      	ldr	r7, [sp, #0]
 8015038:	1410      	asrs	r0, r2, #16
 801503a:	140d      	asrs	r5, r1, #16
 801503c:	fb06 7000 	mla	r0, r6, r0, r7
 8015040:	5d40      	ldrb	r0, [r0, r5]
 8015042:	9d01      	ldr	r5, [sp, #4]
 8015044:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015048:	0e2e      	lsrs	r6, r5, #24
 801504a:	2eff      	cmp	r6, #255	; 0xff
 801504c:	d112      	bne.n	8015074 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801504e:	482c      	ldr	r0, [pc, #176]	; (8015100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015050:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015054:	0968      	lsrs	r0, r5, #5
 8015056:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801505a:	4330      	orrs	r0, r6
 801505c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015060:	4328      	orrs	r0, r5
 8015062:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8015066:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015068:	4401      	add	r1, r0
 801506a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801506c:	f108 0801 	add.w	r8, r8, #1
 8015070:	4402      	add	r2, r0
 8015072:	e7d9      	b.n	8015028 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015074:	b2f0      	uxtb	r0, r6
 8015076:	2e00      	cmp	r6, #0
 8015078:	d0f5      	beq.n	8015066 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801507a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801507e:	fa1f f980 	uxth.w	r9, r0
 8015082:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015086:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801508a:	43c0      	mvns	r0, r0
 801508c:	b2c0      	uxtb	r0, r0
 801508e:	fb16 f609 	smulbb	r6, r6, r9
 8015092:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015096:	fb07 6700 	mla	r7, r7, r0, r6
 801509a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801509e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80150a2:	b2ed      	uxtb	r5, r5
 80150a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80150a8:	fa5f fc8c 	uxtb.w	ip, ip
 80150ac:	fb15 f509 	smulbb	r5, r5, r9
 80150b0:	fb0c 5500 	mla	r5, ip, r0, r5
 80150b4:	b2bf      	uxth	r7, r7
 80150b6:	fb1a fa09 	smulbb	sl, sl, r9
 80150ba:	b2ad      	uxth	r5, r5
 80150bc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80150c0:	fb06 a600 	mla	r6, r6, r0, sl
 80150c4:	1c78      	adds	r0, r7, #1
 80150c6:	f105 0a01 	add.w	sl, r5, #1
 80150ca:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80150ce:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80150d2:	b2b6      	uxth	r6, r6
 80150d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80150d8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80150dc:	ea4a 0707 	orr.w	r7, sl, r7
 80150e0:	f106 0a01 	add.w	sl, r6, #1
 80150e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80150e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80150ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80150f0:	ea47 070a 	orr.w	r7, r7, sl
 80150f4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80150f8:	e7b5      	b.n	8015066 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80150fa:	b005      	add	sp, #20
 80150fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015100:	fffff800 	.word	0xfffff800

08015104 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015108:	b087      	sub	sp, #28
 801510a:	468b      	mov	fp, r1
 801510c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801510e:	9204      	str	r2, [sp, #16]
 8015110:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015114:	9205      	str	r2, [sp, #20]
 8015116:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801511a:	6861      	ldr	r1, [r4, #4]
 801511c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015120:	fb01 2000 	mla	r0, r1, r0, r2
 8015124:	6822      	ldr	r2, [r4, #0]
 8015126:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801512a:	f8de 2000 	ldr.w	r2, [lr]
 801512e:	9201      	str	r2, [sp, #4]
 8015130:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015134:	9202      	str	r2, [sp, #8]
 8015136:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801513a:	f1bb 0f00 	cmp.w	fp, #0
 801513e:	dc03      	bgt.n	8015148 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015140:	9a04      	ldr	r2, [sp, #16]
 8015142:	2a00      	cmp	r2, #0
 8015144:	f340 8142 	ble.w	80153cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015148:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801514a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801514e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015152:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015156:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015158:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801515c:	2b00      	cmp	r3, #0
 801515e:	dd0e      	ble.n	801517e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015160:	140c      	asrs	r4, r1, #16
 8015162:	d405      	bmi.n	8015170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015164:	42bc      	cmp	r4, r7
 8015166:	da03      	bge.n	8015170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015168:	1414      	asrs	r4, r2, #16
 801516a:	d401      	bmi.n	8015170 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801516c:	42b4      	cmp	r4, r6
 801516e:	db07      	blt.n	8015180 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015170:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015172:	4421      	add	r1, r4
 8015174:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015176:	3b01      	subs	r3, #1
 8015178:	4422      	add	r2, r4
 801517a:	3002      	adds	r0, #2
 801517c:	e7ee      	b.n	801515c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801517e:	d019      	beq.n	80151b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015180:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015182:	1e5c      	subs	r4, r3, #1
 8015184:	fb05 1504 	mla	r5, r5, r4, r1
 8015188:	142d      	asrs	r5, r5, #16
 801518a:	d409      	bmi.n	80151a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801518c:	42bd      	cmp	r5, r7
 801518e:	da07      	bge.n	80151a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015190:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015192:	fb05 2404 	mla	r4, r5, r4, r2
 8015196:	1424      	asrs	r4, r4, #16
 8015198:	d402      	bmi.n	80151a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801519a:	42b4      	cmp	r4, r6
 801519c:	f2c0 80b1 	blt.w	8015302 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80151a0:	f04f 0800 	mov.w	r8, #0
 80151a4:	eb03 0408 	add.w	r4, r3, r8
 80151a8:	2c00      	cmp	r4, #0
 80151aa:	dc3e      	bgt.n	801522a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80151ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80151b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80151b4:	f1bb 0f00 	cmp.w	fp, #0
 80151b8:	f340 8108 	ble.w	80153cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80151bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80151c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80151c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80151c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80151ca:	f1bb 0b01 	subs.w	fp, fp, #1
 80151ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80151d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80151d6:	eeb0 6a62 	vmov.f32	s12, s5
 80151da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80151de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80151e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80151e6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80151ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80151ee:	eeb0 6a43 	vmov.f32	s12, s6
 80151f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80151f6:	ee12 2a90 	vmov	r2, s5
 80151fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80151fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8015202:	ee13 2a10 	vmov	r2, s6
 8015206:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801520a:	9313      	str	r3, [sp, #76]	; 0x4c
 801520c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801520e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015212:	9a04      	ldr	r2, [sp, #16]
 8015214:	9314      	str	r3, [sp, #80]	; 0x50
 8015216:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801521a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801521c:	eeb0 3a67 	vmov.f32	s6, s15
 8015220:	bf08      	it	eq
 8015222:	4613      	moveq	r3, r2
 8015224:	eef0 2a47 	vmov.f32	s5, s14
 8015228:	e787      	b.n	801513a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801522a:	140e      	asrs	r6, r1, #16
 801522c:	d462      	bmi.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801522e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015232:	42b5      	cmp	r5, r6
 8015234:	dd5e      	ble.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015236:	1417      	asrs	r7, r2, #16
 8015238:	d45c      	bmi.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801523a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801523e:	42bc      	cmp	r4, r7
 8015240:	dd58      	ble.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015242:	b22d      	sxth	r5, r5
 8015244:	fb07 6505 	mla	r5, r7, r5, r6
 8015248:	9c02      	ldr	r4, [sp, #8]
 801524a:	5d66      	ldrb	r6, [r4, r5]
 801524c:	2e00      	cmp	r6, #0
 801524e:	d051      	beq.n	80152f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015250:	9c01      	ldr	r4, [sp, #4]
 8015252:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015256:	f06f 0401 	mvn.w	r4, #1
 801525a:	fb04 f408 	mul.w	r4, r4, r8
 801525e:	9403      	str	r4, [sp, #12]
 8015260:	5b05      	ldrh	r5, [r0, r4]
 8015262:	9c05      	ldr	r4, [sp, #20]
 8015264:	4366      	muls	r6, r4
 8015266:	1c74      	adds	r4, r6, #1
 8015268:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801526c:	1224      	asrs	r4, r4, #8
 801526e:	b2a7      	uxth	r7, r4
 8015270:	122e      	asrs	r6, r5, #8
 8015272:	43e4      	mvns	r4, r4
 8015274:	b2e4      	uxtb	r4, r4
 8015276:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801527a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801527e:	fb16 f604 	smulbb	r6, r6, r4
 8015282:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015286:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801528a:	00ed      	lsls	r5, r5, #3
 801528c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015290:	b2ed      	uxtb	r5, r5
 8015292:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015296:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801529a:	fb15 f504 	smulbb	r5, r5, r4
 801529e:	fa5f f989 	uxtb.w	r9, r9
 80152a2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80152a6:	fb09 5507 	mla	r5, r9, r7, r5
 80152aa:	fb1a fa04 	smulbb	sl, sl, r4
 80152ae:	fa1f fc8c 	uxth.w	ip, ip
 80152b2:	b2ad      	uxth	r5, r5
 80152b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80152b8:	fb06 a607 	mla	r6, r6, r7, sl
 80152bc:	f10c 0401 	add.w	r4, ip, #1
 80152c0:	f105 0a01 	add.w	sl, r5, #1
 80152c4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80152c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80152cc:	b2b6      	uxth	r6, r6
 80152ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80152d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80152d6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80152da:	f106 0a01 	add.w	sl, r6, #1
 80152de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80152e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80152e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80152ea:	9c03      	ldr	r4, [sp, #12]
 80152ec:	ea4c 0c0a 	orr.w	ip, ip, sl
 80152f0:	f820 c004 	strh.w	ip, [r0, r4]
 80152f4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80152f6:	4421      	add	r1, r4
 80152f8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80152fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80152fe:	4422      	add	r2, r4
 8015300:	e750      	b.n	80151a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015302:	f04f 0900 	mov.w	r9, #0
 8015306:	eba3 0409 	sub.w	r4, r3, r9
 801530a:	2c00      	cmp	r4, #0
 801530c:	f77f af4e 	ble.w	80151ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015310:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015314:	140d      	asrs	r5, r1, #16
 8015316:	1414      	asrs	r4, r2, #16
 8015318:	fb06 5404 	mla	r4, r6, r4, r5
 801531c:	9d02      	ldr	r5, [sp, #8]
 801531e:	5d2e      	ldrb	r6, [r5, r4]
 8015320:	2e00      	cmp	r6, #0
 8015322:	d04c      	beq.n	80153be <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015324:	9d01      	ldr	r5, [sp, #4]
 8015326:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801532a:	9c05      	ldr	r4, [sp, #20]
 801532c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015330:	4366      	muls	r6, r4
 8015332:	1c74      	adds	r4, r6, #1
 8015334:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015338:	1224      	asrs	r4, r4, #8
 801533a:	b2a7      	uxth	r7, r4
 801533c:	122e      	asrs	r6, r5, #8
 801533e:	43e4      	mvns	r4, r4
 8015340:	b2e4      	uxtb	r4, r4
 8015342:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015346:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801534a:	fb16 f604 	smulbb	r6, r6, r4
 801534e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015352:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015356:	00ed      	lsls	r5, r5, #3
 8015358:	fb0c 6c07 	mla	ip, ip, r7, r6
 801535c:	b2ed      	uxtb	r5, r5
 801535e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015362:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015366:	fb15 f504 	smulbb	r5, r5, r4
 801536a:	fa5f f888 	uxtb.w	r8, r8
 801536e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015372:	fb08 5507 	mla	r5, r8, r7, r5
 8015376:	fb1a fa04 	smulbb	sl, sl, r4
 801537a:	fa1f fc8c 	uxth.w	ip, ip
 801537e:	b2ad      	uxth	r5, r5
 8015380:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015384:	fb06 a607 	mla	r6, r6, r7, sl
 8015388:	f10c 0401 	add.w	r4, ip, #1
 801538c:	f105 0a01 	add.w	sl, r5, #1
 8015390:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015394:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015398:	b2b6      	uxth	r6, r6
 801539a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801539e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80153a2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80153a6:	f106 0a01 	add.w	sl, r6, #1
 80153aa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80153ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80153b2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80153b6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80153ba:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80153be:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80153c0:	4421      	add	r1, r4
 80153c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80153c4:	f109 0901 	add.w	r9, r9, #1
 80153c8:	4422      	add	r2, r4
 80153ca:	e79c      	b.n	8015306 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80153cc:	b007      	add	sp, #28
 80153ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80153d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153d6:	b085      	sub	sp, #20
 80153d8:	468b      	mov	fp, r1
 80153da:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80153dc:	9203      	str	r2, [sp, #12]
 80153de:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80153e2:	6861      	ldr	r1, [r4, #4]
 80153e4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80153e8:	fb01 2000 	mla	r0, r1, r0, r2
 80153ec:	6822      	ldr	r2, [r4, #0]
 80153ee:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80153f2:	f8d8 2000 	ldr.w	r2, [r8]
 80153f6:	9200      	str	r2, [sp, #0]
 80153f8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80153fc:	9201      	str	r2, [sp, #4]
 80153fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015402:	f1bb 0f00 	cmp.w	fp, #0
 8015406:	dc03      	bgt.n	8015410 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015408:	9a03      	ldr	r2, [sp, #12]
 801540a:	2a00      	cmp	r2, #0
 801540c:	f340 8146 	ble.w	801569c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015410:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015412:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015416:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801541a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801541e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015420:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015424:	2b00      	cmp	r3, #0
 8015426:	dd0e      	ble.n	8015446 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015428:	140c      	asrs	r4, r1, #16
 801542a:	d405      	bmi.n	8015438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801542c:	42bc      	cmp	r4, r7
 801542e:	da03      	bge.n	8015438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015430:	1414      	asrs	r4, r2, #16
 8015432:	d401      	bmi.n	8015438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015434:	42b4      	cmp	r4, r6
 8015436:	db07      	blt.n	8015448 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015438:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801543a:	4421      	add	r1, r4
 801543c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801543e:	3b01      	subs	r3, #1
 8015440:	4422      	add	r2, r4
 8015442:	3002      	adds	r0, #2
 8015444:	e7ee      	b.n	8015424 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015446:	d017      	beq.n	8015478 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015448:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801544a:	1e5c      	subs	r4, r3, #1
 801544c:	fb05 1504 	mla	r5, r5, r4, r1
 8015450:	142d      	asrs	r5, r5, #16
 8015452:	d409      	bmi.n	8015468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015454:	42bd      	cmp	r5, r7
 8015456:	da07      	bge.n	8015468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015458:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801545a:	fb05 2404 	mla	r4, r5, r4, r2
 801545e:	1424      	asrs	r4, r4, #16
 8015460:	d402      	bmi.n	8015468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015462:	42b4      	cmp	r4, r6
 8015464:	f2c0 80b3 	blt.w	80155ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015468:	2600      	movs	r6, #0
 801546a:	199c      	adds	r4, r3, r6
 801546c:	2c00      	cmp	r4, #0
 801546e:	dc3e      	bgt.n	80154ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015470:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015474:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015478:	f1bb 0f00 	cmp.w	fp, #0
 801547c:	f340 810e 	ble.w	801569c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015480:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015484:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015488:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801548c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801548e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015492:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015496:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801549a:	eeb0 6a62 	vmov.f32	s12, s5
 801549e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80154a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80154aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80154ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80154b2:	eeb0 6a43 	vmov.f32	s12, s6
 80154b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80154ba:	ee12 2a90 	vmov	r2, s5
 80154be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80154c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80154c6:	ee13 2a10 	vmov	r2, s6
 80154ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80154ce:	9311      	str	r3, [sp, #68]	; 0x44
 80154d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80154d6:	9a03      	ldr	r2, [sp, #12]
 80154d8:	9312      	str	r3, [sp, #72]	; 0x48
 80154da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80154de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154e0:	eeb0 3a67 	vmov.f32	s6, s15
 80154e4:	bf08      	it	eq
 80154e6:	4613      	moveq	r3, r2
 80154e8:	eef0 2a47 	vmov.f32	s5, s14
 80154ec:	e789      	b.n	8015402 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80154ee:	140f      	asrs	r7, r1, #16
 80154f0:	d418      	bmi.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80154f2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80154f6:	42bd      	cmp	r5, r7
 80154f8:	dd14      	ble.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80154fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80154fe:	d411      	bmi.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015500:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015504:	4564      	cmp	r4, ip
 8015506:	dd0d      	ble.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015508:	b22d      	sxth	r5, r5
 801550a:	fb0c 7505 	mla	r5, ip, r5, r7
 801550e:	9c01      	ldr	r4, [sp, #4]
 8015510:	5d64      	ldrb	r4, [r4, r5]
 8015512:	2cff      	cmp	r4, #255	; 0xff
 8015514:	d10c      	bne.n	8015530 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015516:	9c00      	ldr	r4, [sp, #0]
 8015518:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801551c:	f06f 0401 	mvn.w	r4, #1
 8015520:	4374      	muls	r4, r6
 8015522:	5305      	strh	r5, [r0, r4]
 8015524:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015526:	4421      	add	r1, r4
 8015528:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801552a:	3e01      	subs	r6, #1
 801552c:	4422      	add	r2, r4
 801552e:	e79c      	b.n	801546a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015530:	2c00      	cmp	r4, #0
 8015532:	d0f7      	beq.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015534:	9f00      	ldr	r7, [sp, #0]
 8015536:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801553a:	f06f 0501 	mvn.w	r5, #1
 801553e:	4375      	muls	r5, r6
 8015540:	9502      	str	r5, [sp, #8]
 8015542:	5b45      	ldrh	r5, [r0, r5]
 8015544:	fa1f fc84 	uxth.w	ip, r4
 8015548:	122f      	asrs	r7, r5, #8
 801554a:	43e4      	mvns	r4, r4
 801554c:	b2e4      	uxtb	r4, r4
 801554e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015552:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015556:	fb17 f704 	smulbb	r7, r7, r4
 801555a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801555e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015562:	00ed      	lsls	r5, r5, #3
 8015564:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015568:	b2ed      	uxtb	r5, r5
 801556a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801556e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015572:	fb15 f504 	smulbb	r5, r5, r4
 8015576:	fa5f f989 	uxtb.w	r9, r9
 801557a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801557e:	fb09 550c 	mla	r5, r9, ip, r5
 8015582:	fb1a fa04 	smulbb	sl, sl, r4
 8015586:	fa1f fe8e 	uxth.w	lr, lr
 801558a:	b2ad      	uxth	r5, r5
 801558c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015590:	fb07 a70c 	mla	r7, r7, ip, sl
 8015594:	f10e 0401 	add.w	r4, lr, #1
 8015598:	f105 0a01 	add.w	sl, r5, #1
 801559c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80155a0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80155a4:	b2bf      	uxth	r7, r7
 80155a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80155aa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80155ae:	ea4a 0e0e 	orr.w	lr, sl, lr
 80155b2:	f107 0a01 	add.w	sl, r7, #1
 80155b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80155ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80155be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80155c2:	9c02      	ldr	r4, [sp, #8]
 80155c4:	ea4e 0e0a 	orr.w	lr, lr, sl
 80155c8:	f820 e004 	strh.w	lr, [r0, r4]
 80155cc:	e7aa      	b.n	8015524 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80155ce:	f04f 0900 	mov.w	r9, #0
 80155d2:	eba3 0409 	sub.w	r4, r3, r9
 80155d6:	2c00      	cmp	r4, #0
 80155d8:	f77f af4a 	ble.w	8015470 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80155dc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80155e0:	1414      	asrs	r4, r2, #16
 80155e2:	140d      	asrs	r5, r1, #16
 80155e4:	fb06 5504 	mla	r5, r6, r4, r5
 80155e8:	9c01      	ldr	r4, [sp, #4]
 80155ea:	5d64      	ldrb	r4, [r4, r5]
 80155ec:	2cff      	cmp	r4, #255	; 0xff
 80155ee:	d10b      	bne.n	8015608 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80155f0:	9c00      	ldr	r4, [sp, #0]
 80155f2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80155f6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80155fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80155fc:	4421      	add	r1, r4
 80155fe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015600:	f109 0901 	add.w	r9, r9, #1
 8015604:	4422      	add	r2, r4
 8015606:	e7e4      	b.n	80155d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015608:	2c00      	cmp	r4, #0
 801560a:	d0f6      	beq.n	80155fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801560c:	9e00      	ldr	r6, [sp, #0]
 801560e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015612:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015616:	b2a7      	uxth	r7, r4
 8015618:	122e      	asrs	r6, r5, #8
 801561a:	43e4      	mvns	r4, r4
 801561c:	b2e4      	uxtb	r4, r4
 801561e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015622:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015626:	fb16 f604 	smulbb	r6, r6, r4
 801562a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801562e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015632:	00ed      	lsls	r5, r5, #3
 8015634:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015638:	b2ed      	uxtb	r5, r5
 801563a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801563e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015642:	fb15 f504 	smulbb	r5, r5, r4
 8015646:	fa5f fe8e 	uxtb.w	lr, lr
 801564a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801564e:	fb0e 5507 	mla	r5, lr, r7, r5
 8015652:	fb1a fa04 	smulbb	sl, sl, r4
 8015656:	fa1f fc8c 	uxth.w	ip, ip
 801565a:	b2ad      	uxth	r5, r5
 801565c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015660:	fb06 a607 	mla	r6, r6, r7, sl
 8015664:	f10c 0401 	add.w	r4, ip, #1
 8015668:	f105 0a01 	add.w	sl, r5, #1
 801566c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015670:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015674:	b2b6      	uxth	r6, r6
 8015676:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801567a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801567e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015682:	f106 0a01 	add.w	sl, r6, #1
 8015686:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801568a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801568e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015692:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015696:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801569a:	e7ae      	b.n	80155fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801569c:	b005      	add	sp, #20
 801569e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080156a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156a6:	b085      	sub	sp, #20
 80156a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80156aa:	9203      	str	r2, [sp, #12]
 80156ac:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80156b0:	9201      	str	r2, [sp, #4]
 80156b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80156b6:	9100      	str	r1, [sp, #0]
 80156b8:	6841      	ldr	r1, [r0, #4]
 80156ba:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80156be:	fb01 2404 	mla	r4, r1, r4, r2
 80156c2:	6802      	ldr	r2, [r0, #0]
 80156c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80156c8:	f8de 2000 	ldr.w	r2, [lr]
 80156cc:	9202      	str	r2, [sp, #8]
 80156ce:	9a01      	ldr	r2, [sp, #4]
 80156d0:	43d6      	mvns	r6, r2
 80156d2:	b2f6      	uxtb	r6, r6
 80156d4:	9a00      	ldr	r2, [sp, #0]
 80156d6:	2a00      	cmp	r2, #0
 80156d8:	dc03      	bgt.n	80156e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80156da:	9a03      	ldr	r2, [sp, #12]
 80156dc:	2a00      	cmp	r2, #0
 80156de:	f340 8124 	ble.w	801592a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80156e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80156e4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80156e8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80156ec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80156f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80156f2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80156f6:	2b00      	cmp	r3, #0
 80156f8:	dd0e      	ble.n	8015718 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80156fa:	1408      	asrs	r0, r1, #16
 80156fc:	d405      	bmi.n	801570a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80156fe:	4560      	cmp	r0, ip
 8015700:	da03      	bge.n	801570a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015702:	1410      	asrs	r0, r2, #16
 8015704:	d401      	bmi.n	801570a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015706:	42b8      	cmp	r0, r7
 8015708:	db07      	blt.n	801571a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801570a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801570c:	4401      	add	r1, r0
 801570e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015710:	3b01      	subs	r3, #1
 8015712:	4402      	add	r2, r0
 8015714:	3402      	adds	r4, #2
 8015716:	e7ee      	b.n	80156f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015718:	d06e      	beq.n	80157f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801571a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801571c:	1e58      	subs	r0, r3, #1
 801571e:	fb05 1500 	mla	r5, r5, r0, r1
 8015722:	142d      	asrs	r5, r5, #16
 8015724:	d45c      	bmi.n	80157e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015726:	4565      	cmp	r5, ip
 8015728:	da5a      	bge.n	80157e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801572a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801572c:	fb05 2000 	mla	r0, r5, r0, r2
 8015730:	1400      	asrs	r0, r0, #16
 8015732:	d455      	bmi.n	80157e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015734:	42b8      	cmp	r0, r7
 8015736:	da53      	bge.n	80157e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015738:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801573c:	4699      	mov	r9, r3
 801573e:	46a2      	mov	sl, r4
 8015740:	f1b9 0f00 	cmp.w	r9, #0
 8015744:	dd54      	ble.n	80157f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015746:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801574a:	140d      	asrs	r5, r1, #16
 801574c:	1410      	asrs	r0, r2, #16
 801574e:	fb07 5000 	mla	r0, r7, r0, r5
 8015752:	9d02      	ldr	r5, [sp, #8]
 8015754:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015758:	f8ba 5000 	ldrh.w	r5, [sl]
 801575c:	122f      	asrs	r7, r5, #8
 801575e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015762:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015766:	fb17 f706 	smulbb	r7, r7, r6
 801576a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801576e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015772:	00ed      	lsls	r5, r5, #3
 8015774:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015778:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801577c:	10c7      	asrs	r7, r0, #3
 801577e:	b2ed      	uxtb	r5, r5
 8015780:	00c0      	lsls	r0, r0, #3
 8015782:	fb18 f806 	smulbb	r8, r8, r6
 8015786:	fb15 f506 	smulbb	r5, r5, r6
 801578a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801578e:	b2c0      	uxtb	r0, r0
 8015790:	fa1f fc8c 	uxth.w	ip, ip
 8015794:	fb07 870b 	mla	r7, r7, fp, r8
 8015798:	fb00 500b 	mla	r0, r0, fp, r5
 801579c:	b280      	uxth	r0, r0
 801579e:	b2bf      	uxth	r7, r7
 80157a0:	f10c 0501 	add.w	r5, ip, #1
 80157a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80157a8:	f107 0801 	add.w	r8, r7, #1
 80157ac:	1c45      	adds	r5, r0, #1
 80157ae:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80157b2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80157b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80157b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80157bc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80157c0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80157c4:	ea45 0c0c 	orr.w	ip, r5, ip
 80157c8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80157cc:	4401      	add	r1, r0
 80157ce:	9812      	ldr	r0, [sp, #72]	; 0x48
 80157d0:	ea4c 0c08 	orr.w	ip, ip, r8
 80157d4:	f82a cb02 	strh.w	ip, [sl], #2
 80157d8:	4402      	add	r2, r0
 80157da:	f109 39ff 	add.w	r9, r9, #4294967295
 80157de:	e7af      	b.n	8015740 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80157e0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80157e4:	f04f 0800 	mov.w	r8, #0
 80157e8:	eb03 0008 	add.w	r0, r3, r8
 80157ec:	2800      	cmp	r0, #0
 80157ee:	dc41      	bgt.n	8015874 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80157f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80157f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80157f8:	9b00      	ldr	r3, [sp, #0]
 80157fa:	2b00      	cmp	r3, #0
 80157fc:	f340 8095 	ble.w	801592a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015800:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015804:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015808:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801580c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801580e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015812:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015816:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801581a:	eef0 6a62 	vmov.f32	s13, s5
 801581e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015822:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015826:	ee77 2a62 	vsub.f32	s5, s14, s5
 801582a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801582e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015832:	eef0 6a43 	vmov.f32	s13, s6
 8015836:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801583a:	ee12 2a90 	vmov	r2, s5
 801583e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015842:	fb92 f3f3 	sdiv	r3, r2, r3
 8015846:	ee13 2a10 	vmov	r2, s6
 801584a:	9311      	str	r3, [sp, #68]	; 0x44
 801584c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801584e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015852:	9312      	str	r3, [sp, #72]	; 0x48
 8015854:	9b00      	ldr	r3, [sp, #0]
 8015856:	9a03      	ldr	r2, [sp, #12]
 8015858:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801585c:	3b01      	subs	r3, #1
 801585e:	9300      	str	r3, [sp, #0]
 8015860:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015864:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015866:	eeb0 3a67 	vmov.f32	s6, s15
 801586a:	bf08      	it	eq
 801586c:	4613      	moveq	r3, r2
 801586e:	eef0 2a47 	vmov.f32	s5, s14
 8015872:	e72f      	b.n	80156d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015874:	140f      	asrs	r7, r1, #16
 8015876:	d451      	bmi.n	801591c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015878:	f8de 5008 	ldr.w	r5, [lr, #8]
 801587c:	42bd      	cmp	r5, r7
 801587e:	dd4d      	ble.n	801591c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015880:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015884:	d44a      	bmi.n	801591c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015886:	f8de 000c 	ldr.w	r0, [lr, #12]
 801588a:	4560      	cmp	r0, ip
 801588c:	dd46      	ble.n	801591c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801588e:	b22d      	sxth	r5, r5
 8015890:	fb0c 7505 	mla	r5, ip, r5, r7
 8015894:	9802      	ldr	r0, [sp, #8]
 8015896:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801589a:	f06f 0501 	mvn.w	r5, #1
 801589e:	fb05 fb08 	mul.w	fp, r5, r8
 80158a2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80158a6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80158aa:	122f      	asrs	r7, r5, #8
 80158ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80158b0:	fb17 f706 	smulbb	r7, r7, r6
 80158b4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80158b8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80158bc:	00ed      	lsls	r5, r5, #3
 80158be:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80158c2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80158c6:	10c7      	asrs	r7, r0, #3
 80158c8:	b2ed      	uxtb	r5, r5
 80158ca:	00c0      	lsls	r0, r0, #3
 80158cc:	fb19 f906 	smulbb	r9, r9, r6
 80158d0:	fb15 f506 	smulbb	r5, r5, r6
 80158d4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80158d8:	b2c0      	uxtb	r0, r0
 80158da:	fa1f fc8c 	uxth.w	ip, ip
 80158de:	fb07 970a 	mla	r7, r7, sl, r9
 80158e2:	fb00 500a 	mla	r0, r0, sl, r5
 80158e6:	b2bf      	uxth	r7, r7
 80158e8:	b280      	uxth	r0, r0
 80158ea:	f10c 0501 	add.w	r5, ip, #1
 80158ee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80158f2:	f107 0901 	add.w	r9, r7, #1
 80158f6:	1c45      	adds	r5, r0, #1
 80158f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80158fc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015900:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015904:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015908:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801590c:	ea45 0c0c 	orr.w	ip, r5, ip
 8015910:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015914:	ea4c 0c09 	orr.w	ip, ip, r9
 8015918:	f824 c00b 	strh.w	ip, [r4, fp]
 801591c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801591e:	4401      	add	r1, r0
 8015920:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015922:	f108 38ff 	add.w	r8, r8, #4294967295
 8015926:	4402      	add	r2, r0
 8015928:	e75e      	b.n	80157e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801592a:	b005      	add	sp, #20
 801592c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015930 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015934:	b085      	sub	sp, #20
 8015936:	4693      	mov	fp, r2
 8015938:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801593a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801593c:	6870      	ldr	r0, [r6, #4]
 801593e:	9101      	str	r1, [sp, #4]
 8015940:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015944:	fb00 2404 	mla	r4, r0, r4, r2
 8015948:	6832      	ldr	r2, [r6, #0]
 801594a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801594e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015952:	682a      	ldr	r2, [r5, #0]
 8015954:	9202      	str	r2, [sp, #8]
 8015956:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801595a:	9a01      	ldr	r2, [sp, #4]
 801595c:	2a00      	cmp	r2, #0
 801595e:	dc03      	bgt.n	8015968 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015960:	f1bb 0f00 	cmp.w	fp, #0
 8015964:	f340 809a 	ble.w	8015a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015968:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801596a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801596e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015972:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015976:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015978:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801597c:	2b00      	cmp	r3, #0
 801597e:	dd0c      	ble.n	801599a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015980:	1406      	asrs	r6, r0, #16
 8015982:	d405      	bmi.n	8015990 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015984:	454e      	cmp	r6, r9
 8015986:	da03      	bge.n	8015990 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015988:	1416      	asrs	r6, r2, #16
 801598a:	d401      	bmi.n	8015990 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801598c:	4546      	cmp	r6, r8
 801598e:	db05      	blt.n	801599c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015990:	4470      	add	r0, lr
 8015992:	4462      	add	r2, ip
 8015994:	3b01      	subs	r3, #1
 8015996:	3402      	adds	r4, #2
 8015998:	e7f0      	b.n	801597c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801599a:	d00f      	beq.n	80159bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801599c:	1e5e      	subs	r6, r3, #1
 801599e:	fb0e 0706 	mla	r7, lr, r6, r0
 80159a2:	143f      	asrs	r7, r7, #16
 80159a4:	d541      	bpl.n	8015a2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80159a6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80159aa:	4698      	mov	r8, r3
 80159ac:	9603      	str	r6, [sp, #12]
 80159ae:	f1b8 0f00 	cmp.w	r8, #0
 80159b2:	dc56      	bgt.n	8015a62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80159b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80159bc:	9b01      	ldr	r3, [sp, #4]
 80159be:	2b00      	cmp	r3, #0
 80159c0:	dd6c      	ble.n	8015a9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80159c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80159ca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80159ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80159d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159d8:	eeb0 6a62 	vmov.f32	s12, s5
 80159dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80159e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80159e8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80159ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80159f0:	eeb0 6a43 	vmov.f32	s12, s6
 80159f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80159f8:	ee12 2a90 	vmov	r2, s5
 80159fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a00:	fb92 fef3 	sdiv	lr, r2, r3
 8015a04:	ee13 2a10 	vmov	r2, s6
 8015a08:	fb92 fcf3 	sdiv	ip, r2, r3
 8015a0c:	9b01      	ldr	r3, [sp, #4]
 8015a0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a12:	3b01      	subs	r3, #1
 8015a14:	9301      	str	r3, [sp, #4]
 8015a16:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015a1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a1c:	eeb0 3a67 	vmov.f32	s6, s15
 8015a20:	bf08      	it	eq
 8015a22:	465b      	moveq	r3, fp
 8015a24:	eef0 2a47 	vmov.f32	s5, s14
 8015a28:	e797      	b.n	801595a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015a2a:	454f      	cmp	r7, r9
 8015a2c:	dabb      	bge.n	80159a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015a2e:	fb0c 2606 	mla	r6, ip, r6, r2
 8015a32:	1436      	asrs	r6, r6, #16
 8015a34:	d4b7      	bmi.n	80159a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015a36:	4546      	cmp	r6, r8
 8015a38:	dab5      	bge.n	80159a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015a3a:	461e      	mov	r6, r3
 8015a3c:	46a0      	mov	r8, r4
 8015a3e:	2e00      	cmp	r6, #0
 8015a40:	ddb8      	ble.n	80159b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015a42:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015a46:	9902      	ldr	r1, [sp, #8]
 8015a48:	1417      	asrs	r7, r2, #16
 8015a4a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015a4e:	fb0a 9707 	mla	r7, sl, r7, r9
 8015a52:	4470      	add	r0, lr
 8015a54:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015a58:	f828 7b02 	strh.w	r7, [r8], #2
 8015a5c:	4462      	add	r2, ip
 8015a5e:	3e01      	subs	r6, #1
 8015a60:	e7ed      	b.n	8015a3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8015a62:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015a66:	d414      	bmi.n	8015a92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015a68:	68ae      	ldr	r6, [r5, #8]
 8015a6a:	454e      	cmp	r6, r9
 8015a6c:	dd11      	ble.n	8015a92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015a6e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015a72:	d40e      	bmi.n	8015a92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015a74:	68ef      	ldr	r7, [r5, #12]
 8015a76:	4557      	cmp	r7, sl
 8015a78:	dd0b      	ble.n	8015a92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015a7a:	b236      	sxth	r6, r6
 8015a7c:	fb0a 9606 	mla	r6, sl, r6, r9
 8015a80:	9f02      	ldr	r7, [sp, #8]
 8015a82:	f06f 0101 	mvn.w	r1, #1
 8015a86:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015a8a:	fb01 f608 	mul.w	r6, r1, r8
 8015a8e:	9903      	ldr	r1, [sp, #12]
 8015a90:	538f      	strh	r7, [r1, r6]
 8015a92:	4470      	add	r0, lr
 8015a94:	4462      	add	r2, ip
 8015a96:	f108 38ff 	add.w	r8, r8, #4294967295
 8015a9a:	e788      	b.n	80159ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015a9c:	b005      	add	sp, #20
 8015a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015aa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015aa2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015aa6:	b087      	sub	sp, #28
 8015aa8:	468b      	mov	fp, r1
 8015aaa:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015aac:	9203      	str	r2, [sp, #12]
 8015aae:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015ab2:	9204      	str	r2, [sp, #16]
 8015ab4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8015ab8:	6841      	ldr	r1, [r0, #4]
 8015aba:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8015abe:	fb01 2505 	mla	r5, r1, r5, r2
 8015ac2:	6802      	ldr	r2, [r0, #0]
 8015ac4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015ac8:	f8d9 2000 	ldr.w	r2, [r9]
 8015acc:	9201      	str	r2, [sp, #4]
 8015ace:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015ad2:	f1bb 0f00 	cmp.w	fp, #0
 8015ad6:	dc03      	bgt.n	8015ae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015ad8:	9a03      	ldr	r2, [sp, #12]
 8015ada:	2a00      	cmp	r2, #0
 8015adc:	f340 8159 	ble.w	8015d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015ae0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015ae2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015ae6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015aea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015aee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015af0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015af4:	2b00      	cmp	r3, #0
 8015af6:	dd0e      	ble.n	8015b16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015af8:	1402      	asrs	r2, r0, #16
 8015afa:	d405      	bmi.n	8015b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015afc:	42ba      	cmp	r2, r7
 8015afe:	da03      	bge.n	8015b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b00:	140a      	asrs	r2, r1, #16
 8015b02:	d401      	bmi.n	8015b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015b04:	42b2      	cmp	r2, r6
 8015b06:	db07      	blt.n	8015b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015b08:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015b0a:	4410      	add	r0, r2
 8015b0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015b0e:	3b01      	subs	r3, #1
 8015b10:	4411      	add	r1, r2
 8015b12:	3502      	adds	r5, #2
 8015b14:	e7ee      	b.n	8015af4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015b16:	d017      	beq.n	8015b48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015b18:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015b1a:	1e5a      	subs	r2, r3, #1
 8015b1c:	fb04 0402 	mla	r4, r4, r2, r0
 8015b20:	1424      	asrs	r4, r4, #16
 8015b22:	d409      	bmi.n	8015b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b24:	42bc      	cmp	r4, r7
 8015b26:	da07      	bge.n	8015b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b28:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015b2a:	fb04 1202 	mla	r2, r4, r2, r1
 8015b2e:	1412      	asrs	r2, r2, #16
 8015b30:	d402      	bmi.n	8015b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b32:	42b2      	cmp	r2, r6
 8015b34:	f2c0 80bf 	blt.w	8015cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015b38:	2700      	movs	r7, #0
 8015b3a:	19da      	adds	r2, r3, r7
 8015b3c:	2a00      	cmp	r2, #0
 8015b3e:	dc3e      	bgt.n	8015bbe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015b40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b44:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8015b48:	f1bb 0f00 	cmp.w	fp, #0
 8015b4c:	f340 8121 	ble.w	8015d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015b50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b54:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b58:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b5e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015b62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015b6a:	eeb0 6a62 	vmov.f32	s12, s5
 8015b6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015b72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015b7a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015b7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015b82:	eeb0 6a43 	vmov.f32	s12, s6
 8015b86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015b8a:	ee12 2a90 	vmov	r2, s5
 8015b8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015b92:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b96:	ee13 2a10 	vmov	r2, s6
 8015b9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b9e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015ba0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ba2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ba6:	9a03      	ldr	r2, [sp, #12]
 8015ba8:	9314      	str	r3, [sp, #80]	; 0x50
 8015baa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015bae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015bb0:	eeb0 3a67 	vmov.f32	s6, s15
 8015bb4:	bf08      	it	eq
 8015bb6:	4613      	moveq	r3, r2
 8015bb8:	eef0 2a47 	vmov.f32	s5, s14
 8015bbc:	e789      	b.n	8015ad2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015bbe:	1406      	asrs	r6, r0, #16
 8015bc0:	d42d      	bmi.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015bc2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8015bc6:	42b4      	cmp	r4, r6
 8015bc8:	dd29      	ble.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015bca:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8015bce:	d426      	bmi.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015bd0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015bd4:	4562      	cmp	r2, ip
 8015bd6:	dd22      	ble.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015bd8:	b224      	sxth	r4, r4
 8015bda:	9a01      	ldr	r2, [sp, #4]
 8015bdc:	fb0c 6404 	mla	r4, ip, r4, r6
 8015be0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8015be4:	0e22      	lsrs	r2, r4, #24
 8015be6:	d01a      	beq.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015be8:	9e04      	ldr	r6, [sp, #16]
 8015bea:	4372      	muls	r2, r6
 8015bec:	1c56      	adds	r6, r2, #1
 8015bee:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015bf2:	1212      	asrs	r2, r2, #8
 8015bf4:	0a26      	lsrs	r6, r4, #8
 8015bf6:	2aff      	cmp	r2, #255	; 0xff
 8015bf8:	9605      	str	r6, [sp, #20]
 8015bfa:	d116      	bne.n	8015c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8015bfc:	f06f 0201 	mvn.w	r2, #1
 8015c00:	fb02 fc07 	mul.w	ip, r2, r7
 8015c04:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015c08:	0962      	lsrs	r2, r4, #5
 8015c0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015c0e:	f026 0607 	bic.w	r6, r6, #7
 8015c12:	4316      	orrs	r6, r2
 8015c14:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015c18:	4326      	orrs	r6, r4
 8015c1a:	f825 600c 	strh.w	r6, [r5, ip]
 8015c1e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015c20:	4410      	add	r0, r2
 8015c22:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015c24:	3f01      	subs	r7, #1
 8015c26:	4411      	add	r1, r2
 8015c28:	e787      	b.n	8015b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015c2a:	f06f 0601 	mvn.w	r6, #1
 8015c2e:	437e      	muls	r6, r7
 8015c30:	fa1f fa82 	uxth.w	sl, r2
 8015c34:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015c38:	9602      	str	r6, [sp, #8]
 8015c3a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015c3e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8015c42:	43d2      	mvns	r2, r2
 8015c44:	b2d2      	uxtb	r2, r2
 8015c46:	fb1c fc0a 	smulbb	ip, ip, sl
 8015c4a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015c4e:	fb0e ce02 	mla	lr, lr, r2, ip
 8015c52:	b2e4      	uxtb	r4, r4
 8015c54:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015c58:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015c5c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015c60:	fa5f f888 	uxtb.w	r8, r8
 8015c64:	fb14 f40a 	smulbb	r4, r4, sl
 8015c68:	fb08 4402 	mla	r4, r8, r2, r4
 8015c6c:	fa1f fe8e 	uxth.w	lr, lr
 8015c70:	fb16 f60a 	smulbb	r6, r6, sl
 8015c74:	b2a4      	uxth	r4, r4
 8015c76:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015c7a:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015c7e:	f10e 0201 	add.w	r2, lr, #1
 8015c82:	1c66      	adds	r6, r4, #1
 8015c84:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015c88:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015c8c:	fa1f fc8c 	uxth.w	ip, ip
 8015c90:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015c94:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015c98:	ea46 0e0e 	orr.w	lr, r6, lr
 8015c9c:	f10c 0601 	add.w	r6, ip, #1
 8015ca0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015ca4:	0976      	lsrs	r6, r6, #5
 8015ca6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015caa:	9a02      	ldr	r2, [sp, #8]
 8015cac:	ea4e 0e06 	orr.w	lr, lr, r6
 8015cb0:	f825 e002 	strh.w	lr, [r5, r2]
 8015cb4:	e7b3      	b.n	8015c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015cb6:	f04f 0800 	mov.w	r8, #0
 8015cba:	eba3 0208 	sub.w	r2, r3, r8
 8015cbe:	2a00      	cmp	r2, #0
 8015cc0:	f77f af3e 	ble.w	8015b40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015cc4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8015cc8:	1404      	asrs	r4, r0, #16
 8015cca:	140a      	asrs	r2, r1, #16
 8015ccc:	fb06 4202 	mla	r2, r6, r2, r4
 8015cd0:	9c01      	ldr	r4, [sp, #4]
 8015cd2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8015cd6:	0e22      	lsrs	r2, r4, #24
 8015cd8:	d016      	beq.n	8015d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015cda:	9e04      	ldr	r6, [sp, #16]
 8015cdc:	4372      	muls	r2, r6
 8015cde:	1c56      	adds	r6, r2, #1
 8015ce0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015ce4:	1212      	asrs	r2, r2, #8
 8015ce6:	2aff      	cmp	r2, #255	; 0xff
 8015ce8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8015cec:	d113      	bne.n	8015d16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8015cee:	0962      	lsrs	r2, r4, #5
 8015cf0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8015cf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015cf8:	f026 0607 	bic.w	r6, r6, #7
 8015cfc:	4316      	orrs	r6, r2
 8015cfe:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015d02:	4326      	orrs	r6, r4
 8015d04:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8015d08:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015d0a:	4410      	add	r0, r2
 8015d0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015d0e:	f108 0801 	add.w	r8, r8, #1
 8015d12:	4411      	add	r1, r2
 8015d14:	e7d1      	b.n	8015cba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8015d16:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015d1a:	fa1f fa82 	uxth.w	sl, r2
 8015d1e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015d22:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015d26:	43d2      	mvns	r2, r2
 8015d28:	b2d2      	uxtb	r2, r2
 8015d2a:	fb17 f70a 	smulbb	r7, r7, sl
 8015d2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015d32:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015d36:	b2e4      	uxtb	r4, r4
 8015d38:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015d3c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015d40:	fa5f fe8e 	uxtb.w	lr, lr
 8015d44:	fb14 f40a 	smulbb	r4, r4, sl
 8015d48:	fb0e 4402 	mla	r4, lr, r2, r4
 8015d4c:	b2f6      	uxtb	r6, r6
 8015d4e:	fa1f fc8c 	uxth.w	ip, ip
 8015d52:	fb16 f60a 	smulbb	r6, r6, sl
 8015d56:	b2a4      	uxth	r4, r4
 8015d58:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015d5c:	fb07 6702 	mla	r7, r7, r2, r6
 8015d60:	f10c 0201 	add.w	r2, ip, #1
 8015d64:	1c66      	adds	r6, r4, #1
 8015d66:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015d6a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015d6e:	b2bf      	uxth	r7, r7
 8015d70:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015d74:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015d78:	ea46 0c0c 	orr.w	ip, r6, ip
 8015d7c:	1c7e      	adds	r6, r7, #1
 8015d7e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015d82:	0976      	lsrs	r6, r6, #5
 8015d84:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015d88:	ea4c 0c06 	orr.w	ip, ip, r6
 8015d8c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8015d90:	e7ba      	b.n	8015d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015d92:	b007      	add	sp, #28
 8015d94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015d98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d9c:	b085      	sub	sp, #20
 8015d9e:	468b      	mov	fp, r1
 8015da0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015da2:	9203      	str	r2, [sp, #12]
 8015da4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015da8:	6841      	ldr	r1, [r0, #4]
 8015daa:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015dae:	fb01 2404 	mla	r4, r1, r4, r2
 8015db2:	6802      	ldr	r2, [r0, #0]
 8015db4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015db8:	f8d8 2000 	ldr.w	r2, [r8]
 8015dbc:	9201      	str	r2, [sp, #4]
 8015dbe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015dc2:	f1bb 0f00 	cmp.w	fp, #0
 8015dc6:	dc03      	bgt.n	8015dd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015dc8:	9a03      	ldr	r2, [sp, #12]
 8015dca:	2a00      	cmp	r2, #0
 8015dcc:	f340 814f 	ble.w	801606e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015dd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015dd2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015dd6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015dda:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015dde:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015de0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015de4:	2b00      	cmp	r3, #0
 8015de6:	dd0e      	ble.n	8015e06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015de8:	1408      	asrs	r0, r1, #16
 8015dea:	d405      	bmi.n	8015df8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015dec:	42b8      	cmp	r0, r7
 8015dee:	da03      	bge.n	8015df8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015df0:	1410      	asrs	r0, r2, #16
 8015df2:	d401      	bmi.n	8015df8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015df4:	42b0      	cmp	r0, r6
 8015df6:	db07      	blt.n	8015e08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015df8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015dfa:	4401      	add	r1, r0
 8015dfc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015dfe:	3b01      	subs	r3, #1
 8015e00:	4402      	add	r2, r0
 8015e02:	3402      	adds	r4, #2
 8015e04:	e7ee      	b.n	8015de4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015e06:	d017      	beq.n	8015e38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015e08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015e0a:	1e58      	subs	r0, r3, #1
 8015e0c:	fb05 1500 	mla	r5, r5, r0, r1
 8015e10:	142d      	asrs	r5, r5, #16
 8015e12:	d409      	bmi.n	8015e28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015e14:	42bd      	cmp	r5, r7
 8015e16:	da07      	bge.n	8015e28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015e18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015e1a:	fb05 2000 	mla	r0, r5, r0, r2
 8015e1e:	1400      	asrs	r0, r0, #16
 8015e20:	d402      	bmi.n	8015e28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015e22:	42b0      	cmp	r0, r6
 8015e24:	f2c0 80ba 	blt.w	8015f9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015e28:	2600      	movs	r6, #0
 8015e2a:	1998      	adds	r0, r3, r6
 8015e2c:	2800      	cmp	r0, #0
 8015e2e:	dc3e      	bgt.n	8015eae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015e30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e34:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015e38:	f1bb 0f00 	cmp.w	fp, #0
 8015e3c:	f340 8117 	ble.w	801606e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015e40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015e4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015e52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e5a:	eeb0 6a62 	vmov.f32	s12, s5
 8015e5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015e6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e72:	eeb0 6a43 	vmov.f32	s12, s6
 8015e76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e7a:	ee12 2a90 	vmov	r2, s5
 8015e7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015e82:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e86:	ee13 2a10 	vmov	r2, s6
 8015e8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e8e:	9311      	str	r3, [sp, #68]	; 0x44
 8015e90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015e92:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e96:	9a03      	ldr	r2, [sp, #12]
 8015e98:	9312      	str	r3, [sp, #72]	; 0x48
 8015e9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015e9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ea0:	eeb0 3a67 	vmov.f32	s6, s15
 8015ea4:	bf08      	it	eq
 8015ea6:	4613      	moveq	r3, r2
 8015ea8:	eef0 2a47 	vmov.f32	s5, s14
 8015eac:	e789      	b.n	8015dc2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015eae:	140f      	asrs	r7, r1, #16
 8015eb0:	d424      	bmi.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015eb2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015eb6:	42bd      	cmp	r5, r7
 8015eb8:	dd20      	ble.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015eba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015ebe:	d41d      	bmi.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015ec0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8015ec4:	4560      	cmp	r0, ip
 8015ec6:	dd19      	ble.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015ec8:	b22d      	sxth	r5, r5
 8015eca:	fb0c 7505 	mla	r5, ip, r5, r7
 8015ece:	9801      	ldr	r0, [sp, #4]
 8015ed0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8015ed4:	0e07      	lsrs	r7, r0, #24
 8015ed6:	2fff      	cmp	r7, #255	; 0xff
 8015ed8:	d116      	bne.n	8015f08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015eda:	f06f 0501 	mvn.w	r5, #1
 8015ede:	fb05 f706 	mul.w	r7, r5, r6
 8015ee2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015ee6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015eea:	0945      	lsrs	r5, r0, #5
 8015eec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015ef0:	ea4c 0505 	orr.w	r5, ip, r5
 8015ef4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015ef8:	4305      	orrs	r5, r0
 8015efa:	53e5      	strh	r5, [r4, r7]
 8015efc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015efe:	4401      	add	r1, r0
 8015f00:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015f02:	3e01      	subs	r6, #1
 8015f04:	4402      	add	r2, r0
 8015f06:	e790      	b.n	8015e2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015f08:	b2fd      	uxtb	r5, r7
 8015f0a:	2f00      	cmp	r7, #0
 8015f0c:	d0f6      	beq.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015f0e:	f06f 0701 	mvn.w	r7, #1
 8015f12:	4377      	muls	r7, r6
 8015f14:	fa1f f985 	uxth.w	r9, r5
 8015f18:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015f1c:	9702      	str	r7, [sp, #8]
 8015f1e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015f22:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015f26:	43ed      	mvns	r5, r5
 8015f28:	b2ed      	uxtb	r5, r5
 8015f2a:	fb17 f709 	smulbb	r7, r7, r9
 8015f2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f32:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015f36:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015f3a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015f3e:	b2c0      	uxtb	r0, r0
 8015f40:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015f44:	fa5f fe8e 	uxtb.w	lr, lr
 8015f48:	fb10 f009 	smulbb	r0, r0, r9
 8015f4c:	fb0e 0005 	mla	r0, lr, r5, r0
 8015f50:	b280      	uxth	r0, r0
 8015f52:	fa1f fc8c 	uxth.w	ip, ip
 8015f56:	fb1a fa09 	smulbb	sl, sl, r9
 8015f5a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015f5e:	fb07 a705 	mla	r7, r7, r5, sl
 8015f62:	f100 0a01 	add.w	sl, r0, #1
 8015f66:	f10c 0501 	add.w	r5, ip, #1
 8015f6a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015f6e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015f72:	b2bf      	uxth	r7, r7
 8015f74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015f78:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015f7c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015f80:	f107 0a01 	add.w	sl, r7, #1
 8015f84:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015f88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f8c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f90:	9802      	ldr	r0, [sp, #8]
 8015f92:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015f96:	f824 c000 	strh.w	ip, [r4, r0]
 8015f9a:	e7af      	b.n	8015efc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015f9c:	f04f 0e00 	mov.w	lr, #0
 8015fa0:	eba3 000e 	sub.w	r0, r3, lr
 8015fa4:	2800      	cmp	r0, #0
 8015fa6:	f77f af43 	ble.w	8015e30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015faa:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015fae:	140d      	asrs	r5, r1, #16
 8015fb0:	1410      	asrs	r0, r2, #16
 8015fb2:	fb06 5000 	mla	r0, r6, r0, r5
 8015fb6:	9d01      	ldr	r5, [sp, #4]
 8015fb8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015fbc:	0e2e      	lsrs	r6, r5, #24
 8015fbe:	2eff      	cmp	r6, #255	; 0xff
 8015fc0:	d112      	bne.n	8015fe8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015fc2:	482c      	ldr	r0, [pc, #176]	; (8016074 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015fc4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015fc8:	0968      	lsrs	r0, r5, #5
 8015fca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015fce:	4330      	orrs	r0, r6
 8015fd0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015fd4:	4328      	orrs	r0, r5
 8015fd6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8015fda:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015fdc:	4401      	add	r1, r0
 8015fde:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015fe0:	f10e 0e01 	add.w	lr, lr, #1
 8015fe4:	4402      	add	r2, r0
 8015fe6:	e7db      	b.n	8015fa0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015fe8:	b2f0      	uxtb	r0, r6
 8015fea:	2e00      	cmp	r6, #0
 8015fec:	d0f5      	beq.n	8015fda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015fee:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015ff2:	fa1f f980 	uxth.w	r9, r0
 8015ff6:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015ffa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015ffe:	43c0      	mvns	r0, r0
 8016000:	b2c0      	uxtb	r0, r0
 8016002:	fb16 f609 	smulbb	r6, r6, r9
 8016006:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801600a:	fb07 6700 	mla	r7, r7, r0, r6
 801600e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016012:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016016:	b2ed      	uxtb	r5, r5
 8016018:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801601c:	fa5f fc8c 	uxtb.w	ip, ip
 8016020:	fb15 f509 	smulbb	r5, r5, r9
 8016024:	fb0c 5500 	mla	r5, ip, r0, r5
 8016028:	b2bf      	uxth	r7, r7
 801602a:	fb1a fa09 	smulbb	sl, sl, r9
 801602e:	b2ad      	uxth	r5, r5
 8016030:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016034:	fb06 a600 	mla	r6, r6, r0, sl
 8016038:	1c78      	adds	r0, r7, #1
 801603a:	f105 0a01 	add.w	sl, r5, #1
 801603e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016042:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016046:	b2b6      	uxth	r6, r6
 8016048:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801604c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016050:	ea4a 0707 	orr.w	r7, sl, r7
 8016054:	f106 0a01 	add.w	sl, r6, #1
 8016058:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801605c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016060:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016064:	ea47 070a 	orr.w	r7, r7, sl
 8016068:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801606c:	e7b5      	b.n	8015fda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801606e:	b005      	add	sp, #20
 8016070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016074:	fffff800 	.word	0xfffff800

08016078 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801607c:	b087      	sub	sp, #28
 801607e:	468b      	mov	fp, r1
 8016080:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016082:	9203      	str	r2, [sp, #12]
 8016084:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016088:	9204      	str	r2, [sp, #16]
 801608a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801608e:	6841      	ldr	r1, [r0, #4]
 8016090:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016094:	fb01 2404 	mla	r4, r1, r4, r2
 8016098:	6802      	ldr	r2, [r0, #0]
 801609a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801609e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80160a2:	3201      	adds	r2, #1
 80160a4:	f022 0201 	bic.w	r2, r2, #1
 80160a8:	9200      	str	r2, [sp, #0]
 80160aa:	f8d9 2000 	ldr.w	r2, [r9]
 80160ae:	9201      	str	r2, [sp, #4]
 80160b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80160b4:	f1bb 0f00 	cmp.w	fp, #0
 80160b8:	dc03      	bgt.n	80160c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80160ba:	9a03      	ldr	r2, [sp, #12]
 80160bc:	2a00      	cmp	r2, #0
 80160be:	f340 8169 	ble.w	8016394 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80160c2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80160c4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80160c8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80160cc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80160d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80160d2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80160d6:	2b00      	cmp	r3, #0
 80160d8:	dd0e      	ble.n	80160f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80160da:	1402      	asrs	r2, r0, #16
 80160dc:	d405      	bmi.n	80160ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160de:	42ba      	cmp	r2, r7
 80160e0:	da03      	bge.n	80160ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160e2:	140a      	asrs	r2, r1, #16
 80160e4:	d401      	bmi.n	80160ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80160e6:	42b2      	cmp	r2, r6
 80160e8:	db07      	blt.n	80160fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80160ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80160ec:	4410      	add	r0, r2
 80160ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80160f0:	3b01      	subs	r3, #1
 80160f2:	4411      	add	r1, r2
 80160f4:	3402      	adds	r4, #2
 80160f6:	e7ee      	b.n	80160d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80160f8:	d017      	beq.n	801612a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80160fa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80160fc:	1e5a      	subs	r2, r3, #1
 80160fe:	fb05 0502 	mla	r5, r5, r2, r0
 8016102:	142d      	asrs	r5, r5, #16
 8016104:	d409      	bmi.n	801611a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016106:	42bd      	cmp	r5, r7
 8016108:	da07      	bge.n	801611a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801610a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801610c:	fb05 1202 	mla	r2, r5, r2, r1
 8016110:	1412      	asrs	r2, r2, #16
 8016112:	d402      	bmi.n	801611a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016114:	42b2      	cmp	r2, r6
 8016116:	f2c0 80c7 	blt.w	80162a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801611a:	2700      	movs	r7, #0
 801611c:	19da      	adds	r2, r3, r7
 801611e:	2a00      	cmp	r2, #0
 8016120:	dc3e      	bgt.n	80161a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016122:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016126:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801612a:	f1bb 0f00 	cmp.w	fp, #0
 801612e:	f340 8131 	ble.w	8016394 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016132:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016136:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801613a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801613e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016140:	f1bb 0b01 	subs.w	fp, fp, #1
 8016144:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016148:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801614c:	eeb0 6a62 	vmov.f32	s12, s5
 8016150:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016154:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016158:	ee77 2a62 	vsub.f32	s5, s14, s5
 801615c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016160:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016164:	eeb0 6a43 	vmov.f32	s12, s6
 8016168:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801616c:	ee12 2a90 	vmov	r2, s5
 8016170:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016174:	fb92 f3f3 	sdiv	r3, r2, r3
 8016178:	ee13 2a10 	vmov	r2, s6
 801617c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016180:	9313      	str	r3, [sp, #76]	; 0x4c
 8016182:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016184:	fb92 f3f3 	sdiv	r3, r2, r3
 8016188:	9a03      	ldr	r2, [sp, #12]
 801618a:	9314      	str	r3, [sp, #80]	; 0x50
 801618c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016190:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016192:	eeb0 3a67 	vmov.f32	s6, s15
 8016196:	bf08      	it	eq
 8016198:	4613      	moveq	r3, r2
 801619a:	eef0 2a47 	vmov.f32	s5, s14
 801619e:	e789      	b.n	80160b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80161a0:	1405      	asrs	r5, r0, #16
 80161a2:	d435      	bmi.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161a4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80161a8:	42aa      	cmp	r2, r5
 80161aa:	dd31      	ble.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161ac:	140e      	asrs	r6, r1, #16
 80161ae:	d42f      	bmi.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161b0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80161b4:	42b2      	cmp	r2, r6
 80161b6:	dd2b      	ble.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161b8:	9a00      	ldr	r2, [sp, #0]
 80161ba:	fb06 5502 	mla	r5, r6, r2, r5
 80161be:	086a      	lsrs	r2, r5, #1
 80161c0:	9e01      	ldr	r6, [sp, #4]
 80161c2:	5cb2      	ldrb	r2, [r6, r2]
 80161c4:	07ee      	lsls	r6, r5, #31
 80161c6:	bf54      	ite	pl
 80161c8:	f002 020f 	andpl.w	r2, r2, #15
 80161cc:	1112      	asrmi	r2, r2, #4
 80161ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80161d2:	b2d2      	uxtb	r2, r2
 80161d4:	b1e2      	cbz	r2, 8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80161d6:	9d04      	ldr	r5, [sp, #16]
 80161d8:	436a      	muls	r2, r5
 80161da:	1c55      	adds	r5, r2, #1
 80161dc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80161e0:	4d6e      	ldr	r5, [pc, #440]	; (801639c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80161e2:	682d      	ldr	r5, [r5, #0]
 80161e4:	1212      	asrs	r2, r2, #8
 80161e6:	0a2e      	lsrs	r6, r5, #8
 80161e8:	2aff      	cmp	r2, #255	; 0xff
 80161ea:	9605      	str	r6, [sp, #20]
 80161ec:	d116      	bne.n	801621c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80161ee:	f06f 0201 	mvn.w	r2, #1
 80161f2:	fb02 fc07 	mul.w	ip, r2, r7
 80161f6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80161fa:	096a      	lsrs	r2, r5, #5
 80161fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016200:	f026 0607 	bic.w	r6, r6, #7
 8016204:	4316      	orrs	r6, r2
 8016206:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801620a:	432e      	orrs	r6, r5
 801620c:	f824 600c 	strh.w	r6, [r4, ip]
 8016210:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016212:	4410      	add	r0, r2
 8016214:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016216:	3f01      	subs	r7, #1
 8016218:	4411      	add	r1, r2
 801621a:	e77f      	b.n	801611c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801621c:	f06f 0601 	mvn.w	r6, #1
 8016220:	437e      	muls	r6, r7
 8016222:	fa1f fa82 	uxth.w	sl, r2
 8016226:	f834 8006 	ldrh.w	r8, [r4, r6]
 801622a:	9602      	str	r6, [sp, #8]
 801622c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016230:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016234:	43d2      	mvns	r2, r2
 8016236:	b2d2      	uxtb	r2, r2
 8016238:	fb1c fc0a 	smulbb	ip, ip, sl
 801623c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016240:	fb0e ce02 	mla	lr, lr, r2, ip
 8016244:	b2ed      	uxtb	r5, r5
 8016246:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801624a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801624e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016252:	fa5f f888 	uxtb.w	r8, r8
 8016256:	fb15 f50a 	smulbb	r5, r5, sl
 801625a:	fb08 5502 	mla	r5, r8, r2, r5
 801625e:	fa1f fe8e 	uxth.w	lr, lr
 8016262:	fb16 f60a 	smulbb	r6, r6, sl
 8016266:	b2ad      	uxth	r5, r5
 8016268:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801626c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016270:	f10e 0201 	add.w	r2, lr, #1
 8016274:	1c6e      	adds	r6, r5, #1
 8016276:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801627a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801627e:	fa1f fc8c 	uxth.w	ip, ip
 8016282:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016286:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801628a:	ea46 0e0e 	orr.w	lr, r6, lr
 801628e:	f10c 0601 	add.w	r6, ip, #1
 8016292:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016296:	0976      	lsrs	r6, r6, #5
 8016298:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801629c:	9a02      	ldr	r2, [sp, #8]
 801629e:	ea4e 0e06 	orr.w	lr, lr, r6
 80162a2:	f824 e002 	strh.w	lr, [r4, r2]
 80162a6:	e7b3      	b.n	8016210 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80162a8:	f04f 0800 	mov.w	r8, #0
 80162ac:	eba3 0208 	sub.w	r2, r3, r8
 80162b0:	2a00      	cmp	r2, #0
 80162b2:	f77f af36 	ble.w	8016122 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80162b6:	9e00      	ldr	r6, [sp, #0]
 80162b8:	1402      	asrs	r2, r0, #16
 80162ba:	140d      	asrs	r5, r1, #16
 80162bc:	fb06 2505 	mla	r5, r6, r5, r2
 80162c0:	086a      	lsrs	r2, r5, #1
 80162c2:	9e01      	ldr	r6, [sp, #4]
 80162c4:	5cb2      	ldrb	r2, [r6, r2]
 80162c6:	07ed      	lsls	r5, r5, #31
 80162c8:	bf54      	ite	pl
 80162ca:	f002 020f 	andpl.w	r2, r2, #15
 80162ce:	1112      	asrmi	r2, r2, #4
 80162d0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80162d4:	b2d2      	uxtb	r2, r2
 80162d6:	b1c2      	cbz	r2, 801630a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80162d8:	9d04      	ldr	r5, [sp, #16]
 80162da:	436a      	muls	r2, r5
 80162dc:	1c55      	adds	r5, r2, #1
 80162de:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80162e2:	4d2e      	ldr	r5, [pc, #184]	; (801639c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80162e4:	1212      	asrs	r2, r2, #8
 80162e6:	682e      	ldr	r6, [r5, #0]
 80162e8:	2aff      	cmp	r2, #255	; 0xff
 80162ea:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80162ee:	d113      	bne.n	8016318 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80162f0:	0972      	lsrs	r2, r6, #5
 80162f2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80162f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80162fa:	f025 0507 	bic.w	r5, r5, #7
 80162fe:	4315      	orrs	r5, r2
 8016300:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016304:	4335      	orrs	r5, r6
 8016306:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801630a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801630c:	4410      	add	r0, r2
 801630e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016310:	f108 0801 	add.w	r8, r8, #1
 8016314:	4411      	add	r1, r2
 8016316:	e7c9      	b.n	80162ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016318:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801631c:	fa1f fa82 	uxth.w	sl, r2
 8016320:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016324:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016328:	43d2      	mvns	r2, r2
 801632a:	b2d2      	uxtb	r2, r2
 801632c:	fb17 f70a 	smulbb	r7, r7, sl
 8016330:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016334:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016338:	b2f6      	uxtb	r6, r6
 801633a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801633e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016342:	fa5f fe8e 	uxtb.w	lr, lr
 8016346:	fb16 f60a 	smulbb	r6, r6, sl
 801634a:	fb0e 6602 	mla	r6, lr, r2, r6
 801634e:	b2ed      	uxtb	r5, r5
 8016350:	fa1f fc8c 	uxth.w	ip, ip
 8016354:	fb15 f50a 	smulbb	r5, r5, sl
 8016358:	b2b6      	uxth	r6, r6
 801635a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801635e:	fb07 5702 	mla	r7, r7, r2, r5
 8016362:	f10c 0201 	add.w	r2, ip, #1
 8016366:	1c75      	adds	r5, r6, #1
 8016368:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801636c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016370:	b2bf      	uxth	r7, r7
 8016372:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016376:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801637a:	ea45 0c0c 	orr.w	ip, r5, ip
 801637e:	1c7d      	adds	r5, r7, #1
 8016380:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016384:	096d      	lsrs	r5, r5, #5
 8016386:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801638a:	ea4c 0c05 	orr.w	ip, ip, r5
 801638e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016392:	e7ba      	b.n	801630a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016394:	b007      	add	sp, #28
 8016396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801639a:	bf00      	nop
 801639c:	20014fdc 	.word	0x20014fdc

080163a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80163a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163a4:	b087      	sub	sp, #28
 80163a6:	f8df 830c 	ldr.w	r8, [pc, #780]	; 80166b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80163aa:	9815      	ldr	r0, [sp, #84]	; 0x54
 80163ac:	9205      	str	r2, [sp, #20]
 80163ae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80163b2:	9101      	str	r1, [sp, #4]
 80163b4:	6841      	ldr	r1, [r0, #4]
 80163b6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 80163ba:	fb01 2404 	mla	r4, r1, r4, r2
 80163be:	6802      	ldr	r2, [r0, #0]
 80163c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80163c4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80163c8:	3201      	adds	r2, #1
 80163ca:	f022 0201 	bic.w	r2, r2, #1
 80163ce:	9202      	str	r2, [sp, #8]
 80163d0:	f8db 2000 	ldr.w	r2, [fp]
 80163d4:	9203      	str	r2, [sp, #12]
 80163d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80163da:	9a01      	ldr	r2, [sp, #4]
 80163dc:	2a00      	cmp	r2, #0
 80163de:	dc03      	bgt.n	80163e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80163e0:	9a05      	ldr	r2, [sp, #20]
 80163e2:	2a00      	cmp	r2, #0
 80163e4:	f340 8162 	ble.w	80166ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80163e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80163ea:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80163ee:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80163f2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80163f6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80163f8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80163fc:	2b00      	cmp	r3, #0
 80163fe:	dd0e      	ble.n	801641e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016400:	1402      	asrs	r2, r0, #16
 8016402:	d405      	bmi.n	8016410 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016404:	42ba      	cmp	r2, r7
 8016406:	da03      	bge.n	8016410 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016408:	140a      	asrs	r2, r1, #16
 801640a:	d401      	bmi.n	8016410 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801640c:	42b2      	cmp	r2, r6
 801640e:	db07      	blt.n	8016420 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016410:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016412:	4410      	add	r0, r2
 8016414:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016416:	3b01      	subs	r3, #1
 8016418:	4411      	add	r1, r2
 801641a:	3402      	adds	r4, #2
 801641c:	e7ee      	b.n	80163fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801641e:	d017      	beq.n	8016450 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016420:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016422:	1e5a      	subs	r2, r3, #1
 8016424:	fb05 0502 	mla	r5, r5, r2, r0
 8016428:	142d      	asrs	r5, r5, #16
 801642a:	d409      	bmi.n	8016440 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801642c:	42bd      	cmp	r5, r7
 801642e:	da07      	bge.n	8016440 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016430:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016432:	fb05 1202 	mla	r2, r5, r2, r1
 8016436:	1412      	asrs	r2, r2, #16
 8016438:	d402      	bmi.n	8016440 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801643a:	42b2      	cmp	r2, r6
 801643c:	f2c0 80c3 	blt.w	80165c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016440:	2500      	movs	r5, #0
 8016442:	195a      	adds	r2, r3, r5
 8016444:	2a00      	cmp	r2, #0
 8016446:	dc3f      	bgt.n	80164c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016448:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801644c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016450:	9b01      	ldr	r3, [sp, #4]
 8016452:	2b00      	cmp	r3, #0
 8016454:	f340 812a 	ble.w	80166ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016458:	ee30 0a04 	vadd.f32	s0, s0, s8
 801645c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016460:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016464:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016466:	ee31 1a05 	vadd.f32	s2, s2, s10
 801646a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801646e:	eeb0 6a62 	vmov.f32	s12, s5
 8016472:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016476:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801647a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801647e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016482:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016486:	eeb0 6a43 	vmov.f32	s12, s6
 801648a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801648e:	ee12 2a90 	vmov	r2, s5
 8016492:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016496:	fb92 f3f3 	sdiv	r3, r2, r3
 801649a:	ee13 2a10 	vmov	r2, s6
 801649e:	9313      	str	r3, [sp, #76]	; 0x4c
 80164a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80164a6:	9314      	str	r3, [sp, #80]	; 0x50
 80164a8:	9b01      	ldr	r3, [sp, #4]
 80164aa:	9a05      	ldr	r2, [sp, #20]
 80164ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80164b0:	3b01      	subs	r3, #1
 80164b2:	9301      	str	r3, [sp, #4]
 80164b4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80164b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80164ba:	eeb0 3a67 	vmov.f32	s6, s15
 80164be:	bf08      	it	eq
 80164c0:	4613      	moveq	r3, r2
 80164c2:	eef0 2a47 	vmov.f32	s5, s14
 80164c6:	e788      	b.n	80163da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80164c8:	1406      	asrs	r6, r0, #16
 80164ca:	d42c      	bmi.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80164cc:	f8db 2008 	ldr.w	r2, [fp, #8]
 80164d0:	42b2      	cmp	r2, r6
 80164d2:	dd28      	ble.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80164d4:	140f      	asrs	r7, r1, #16
 80164d6:	d426      	bmi.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80164d8:	f8db 200c 	ldr.w	r2, [fp, #12]
 80164dc:	42ba      	cmp	r2, r7
 80164de:	dd22      	ble.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80164e0:	9a02      	ldr	r2, [sp, #8]
 80164e2:	fb07 6602 	mla	r6, r7, r2, r6
 80164e6:	0872      	lsrs	r2, r6, #1
 80164e8:	9f03      	ldr	r7, [sp, #12]
 80164ea:	5cba      	ldrb	r2, [r7, r2]
 80164ec:	07f6      	lsls	r6, r6, #31
 80164ee:	bf54      	ite	pl
 80164f0:	f002 020f 	andpl.w	r2, r2, #15
 80164f4:	1112      	asrmi	r2, r2, #4
 80164f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80164fa:	b2d2      	uxtb	r2, r2
 80164fc:	2aff      	cmp	r2, #255	; 0xff
 80164fe:	d118      	bne.n	8016532 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016500:	f8d8 2000 	ldr.w	r2, [r8]
 8016504:	f06f 0601 	mvn.w	r6, #1
 8016508:	fb06 f705 	mul.w	r7, r6, r5
 801650c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016510:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016514:	0956      	lsrs	r6, r2, #5
 8016516:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801651a:	ea4c 0606 	orr.w	r6, ip, r6
 801651e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016522:	4316      	orrs	r6, r2
 8016524:	53e6      	strh	r6, [r4, r7]
 8016526:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016528:	4410      	add	r0, r2
 801652a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801652c:	3d01      	subs	r5, #1
 801652e:	4411      	add	r1, r2
 8016530:	e787      	b.n	8016442 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016532:	2a00      	cmp	r2, #0
 8016534:	d0f7      	beq.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016536:	f06f 0601 	mvn.w	r6, #1
 801653a:	436e      	muls	r6, r5
 801653c:	f8d8 c000 	ldr.w	ip, [r8]
 8016540:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016544:	9604      	str	r6, [sp, #16]
 8016546:	fa1f f982 	uxth.w	r9, r2
 801654a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801654e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016552:	43d2      	mvns	r2, r2
 8016554:	b2d2      	uxtb	r2, r2
 8016556:	fb16 f609 	smulbb	r6, r6, r9
 801655a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801655e:	fb07 6702 	mla	r7, r7, r2, r6
 8016562:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016566:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801656a:	fa5f fc8c 	uxtb.w	ip, ip
 801656e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016572:	fa5f fe8e 	uxtb.w	lr, lr
 8016576:	fb1c fc09 	smulbb	ip, ip, r9
 801657a:	fb0e cc02 	mla	ip, lr, r2, ip
 801657e:	b2bf      	uxth	r7, r7
 8016580:	fb1a fa09 	smulbb	sl, sl, r9
 8016584:	fa1f fc8c 	uxth.w	ip, ip
 8016588:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801658c:	fb06 a602 	mla	r6, r6, r2, sl
 8016590:	1c7a      	adds	r2, r7, #1
 8016592:	f10c 0a01 	add.w	sl, ip, #1
 8016596:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801659a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801659e:	b2b6      	uxth	r6, r6
 80165a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80165a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80165a8:	ea4a 0707 	orr.w	r7, sl, r7
 80165ac:	f106 0a01 	add.w	sl, r6, #1
 80165b0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80165b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80165b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80165bc:	9a04      	ldr	r2, [sp, #16]
 80165be:	ea47 070a 	orr.w	r7, r7, sl
 80165c2:	52a7      	strh	r7, [r4, r2]
 80165c4:	e7af      	b.n	8016526 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80165c6:	f04f 0e00 	mov.w	lr, #0
 80165ca:	eba3 020e 	sub.w	r2, r3, lr
 80165ce:	2a00      	cmp	r2, #0
 80165d0:	f77f af3a 	ble.w	8016448 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80165d4:	9e02      	ldr	r6, [sp, #8]
 80165d6:	1402      	asrs	r2, r0, #16
 80165d8:	140d      	asrs	r5, r1, #16
 80165da:	fb06 2505 	mla	r5, r6, r5, r2
 80165de:	086a      	lsrs	r2, r5, #1
 80165e0:	9e03      	ldr	r6, [sp, #12]
 80165e2:	5cb2      	ldrb	r2, [r6, r2]
 80165e4:	07ed      	lsls	r5, r5, #31
 80165e6:	bf54      	ite	pl
 80165e8:	f002 020f 	andpl.w	r2, r2, #15
 80165ec:	1112      	asrmi	r2, r2, #4
 80165ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80165f2:	b2d2      	uxtb	r2, r2
 80165f4:	2aff      	cmp	r2, #255	; 0xff
 80165f6:	d115      	bne.n	8016624 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80165f8:	f8d8 5000 	ldr.w	r5, [r8]
 80165fc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016600:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016604:	096a      	lsrs	r2, r5, #5
 8016606:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801660a:	4332      	orrs	r2, r6
 801660c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016610:	432a      	orrs	r2, r5
 8016612:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016616:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016618:	4410      	add	r0, r2
 801661a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801661c:	f10e 0e01 	add.w	lr, lr, #1
 8016620:	4411      	add	r1, r2
 8016622:	e7d2      	b.n	80165ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016624:	2a00      	cmp	r2, #0
 8016626:	d0f6      	beq.n	8016616 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016628:	f8d8 7000 	ldr.w	r7, [r8]
 801662c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016630:	fa1f f982 	uxth.w	r9, r2
 8016634:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016638:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801663c:	43d2      	mvns	r2, r2
 801663e:	b2d2      	uxtb	r2, r2
 8016640:	fb15 f509 	smulbb	r5, r5, r9
 8016644:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016648:	fb06 5602 	mla	r6, r6, r2, r5
 801664c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016650:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016654:	b2ff      	uxtb	r7, r7
 8016656:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801665a:	fa5f fc8c 	uxtb.w	ip, ip
 801665e:	fb17 f709 	smulbb	r7, r7, r9
 8016662:	fb0c 7702 	mla	r7, ip, r2, r7
 8016666:	b2b6      	uxth	r6, r6
 8016668:	fb1a fa09 	smulbb	sl, sl, r9
 801666c:	b2bf      	uxth	r7, r7
 801666e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016672:	fb05 a502 	mla	r5, r5, r2, sl
 8016676:	1c72      	adds	r2, r6, #1
 8016678:	f107 0a01 	add.w	sl, r7, #1
 801667c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016680:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016684:	b2ad      	uxth	r5, r5
 8016686:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801668a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801668e:	ea4a 0606 	orr.w	r6, sl, r6
 8016692:	f105 0a01 	add.w	sl, r5, #1
 8016696:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801669a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801669e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80166a2:	ea46 060a 	orr.w	r6, r6, sl
 80166a6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80166aa:	e7b4      	b.n	8016616 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80166ac:	b007      	add	sp, #28
 80166ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166b2:	bf00      	nop
 80166b4:	20014fdc 	.word	0x20014fdc

080166b8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80166b8:	4770      	bx	lr

080166ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80166ba:	4770      	bx	lr

080166bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80166bc:	4770      	bx	lr

080166be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 80166be:	4770      	bx	lr

080166c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80166c0:	4770      	bx	lr

080166c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80166c2:	4770      	bx	lr

080166c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80166c4:	4770      	bx	lr

080166c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80166c6:	4770      	bx	lr

080166c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80166c8:	4770      	bx	lr

080166ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80166ca:	4770      	bx	lr

080166cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80166cc:	4770      	bx	lr

080166ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80166ce:	4770      	bx	lr

080166d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80166d0:	4770      	bx	lr

080166d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80166d2:	4770      	bx	lr

080166d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80166d4:	4770      	bx	lr

080166d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80166d6:	4770      	bx	lr

080166d8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80166d8:	4770      	bx	lr

080166da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80166da:	4770      	bx	lr

080166dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80166dc:	4770      	bx	lr

080166de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80166de:	4770      	bx	lr

080166e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80166e0:	4770      	bx	lr

080166e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80166e2:	4770      	bx	lr

080166e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80166e4:	4770      	bx	lr

080166e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80166e6:	4770      	bx	lr

080166e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80166e8:	4770      	bx	lr

080166ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80166ea:	4770      	bx	lr

080166ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80166ec:	4770      	bx	lr

080166ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80166ee:	4770      	bx	lr

080166f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80166f0:	4770      	bx	lr

080166f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80166f2:	4770      	bx	lr

080166f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80166f4:	4770      	bx	lr

080166f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80166f6:	4770      	bx	lr

080166f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80166f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80166fc:	b088      	sub	sp, #32
 80166fe:	ac08      	add	r4, sp, #32
 8016700:	4606      	mov	r6, r0
 8016702:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016706:	4620      	mov	r0, r4
 8016708:	4688      	mov	r8, r1
 801670a:	4691      	mov	r9, r2
 801670c:	f7fd fc62 	bl	8013fd4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016710:	6833      	ldr	r3, [r6, #0]
 8016712:	4605      	mov	r5, r0
 8016714:	4620      	mov	r0, r4
 8016716:	699f      	ldr	r7, [r3, #24]
 8016718:	f7fd fb70 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801671c:	4682      	mov	sl, r0
 801671e:	4620      	mov	r0, r4
 8016720:	f7fd fba0 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016724:	9500      	str	r5, [sp, #0]
 8016726:	e9cd a001 	strd	sl, r0, [sp, #4]
 801672a:	464b      	mov	r3, r9
 801672c:	a806      	add	r0, sp, #24
 801672e:	4642      	mov	r2, r8
 8016730:	4631      	mov	r1, r6
 8016732:	47b8      	blx	r7
 8016734:	4628      	mov	r0, r5
 8016736:	b008      	add	sp, #32
 8016738:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801673c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801673c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016740:	2300      	movs	r3, #0
 8016742:	9300      	str	r3, [sp, #0]
 8016744:	4b3d      	ldr	r3, [pc, #244]	; (801683c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016746:	781b      	ldrb	r3, [r3, #0]
 8016748:	2b00      	cmp	r3, #0
 801674a:	d137      	bne.n	80167bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801674c:	4a3c      	ldr	r2, [pc, #240]	; (8016840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801674e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016752:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016756:	2b00      	cmp	r3, #0
 8016758:	d132      	bne.n	80167c0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801675a:	4b3a      	ldr	r3, [pc, #232]	; (8016844 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801675c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016760:	6808      	ldr	r0, [r1, #0]
 8016762:	6849      	ldr	r1, [r1, #4]
 8016764:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016768:	ac02      	add	r4, sp, #8
 801676a:	ab02      	add	r3, sp, #8
 801676c:	c303      	stmia	r3!, {r0, r1}
 801676e:	4669      	mov	r1, sp
 8016770:	4620      	mov	r0, r4
 8016772:	f7fa f81f 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016776:	4668      	mov	r0, sp
 8016778:	f7f9 ffd8 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801677c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016780:	f8bd 2000 	ldrh.w	r2, [sp]
 8016784:	4d30      	ldr	r5, [pc, #192]	; (8016848 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016786:	4413      	add	r3, r2
 8016788:	f8ad 3008 	strh.w	r3, [sp, #8]
 801678c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016790:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016794:	6828      	ldr	r0, [r5, #0]
 8016796:	4413      	add	r3, r2
 8016798:	f8ad 300a 	strh.w	r3, [sp, #10]
 801679c:	6803      	ldr	r3, [r0, #0]
 801679e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80167a0:	4798      	blx	r3
 80167a2:	f010 0f01 	tst.w	r0, #1
 80167a6:	462f      	mov	r7, r5
 80167a8:	d00c      	beq.n	80167c4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80167aa:	6828      	ldr	r0, [r5, #0]
 80167ac:	6803      	ldr	r3, [r0, #0]
 80167ae:	e894 0006 	ldmia.w	r4, {r1, r2}
 80167b2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80167b4:	4798      	blx	r3
 80167b6:	b004      	add	sp, #16
 80167b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80167bc:	4a21      	ldr	r2, [pc, #132]	; (8016844 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80167be:	e7c6      	b.n	801674e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 80167c0:	4b1f      	ldr	r3, [pc, #124]	; (8016840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80167c2:	e7cb      	b.n	801675c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80167c4:	6838      	ldr	r0, [r7, #0]
 80167c6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80167ca:	6803      	ldr	r3, [r0, #0]
 80167cc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80167d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80167d2:	4798      	blx	r3
 80167d4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80167d8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80167dc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80167e0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80167e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80167e8:	6838      	ldr	r0, [r7, #0]
 80167ea:	6803      	ldr	r3, [r0, #0]
 80167ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80167ee:	4798      	blx	r3
 80167f0:	4a13      	ldr	r2, [pc, #76]	; (8016840 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80167f2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80167f6:	8813      	ldrh	r3, [r2, #0]
 80167f8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80167fc:	fb03 1404 	mla	r4, r3, r4, r1
 8016800:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016804:	435d      	muls	r5, r3
 8016806:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801680a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801680e:	4691      	mov	r9, r2
 8016810:	6838      	ldr	r0, [r7, #0]
 8016812:	42ac      	cmp	r4, r5
 8016814:	6803      	ldr	r3, [r0, #0]
 8016816:	d20e      	bcs.n	8016836 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016818:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801681c:	4632      	mov	r2, r6
 801681e:	4643      	mov	r3, r8
 8016820:	4621      	mov	r1, r4
 8016822:	47d0      	blx	sl
 8016824:	f8b9 3000 	ldrh.w	r3, [r9]
 8016828:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801682c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016830:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016834:	e7ec      	b.n	8016810 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016836:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016838:	4798      	blx	r3
 801683a:	e7bc      	b.n	80167b6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801683c:	20014fcc 	.word	0x20014fcc
 8016840:	20014fce 	.word	0x20014fce
 8016844:	20014fd0 	.word	0x20014fd0
 8016848:	20014fd4 	.word	0x20014fd4

0801684c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801684c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016850:	b08b      	sub	sp, #44	; 0x2c
 8016852:	460f      	mov	r7, r1
 8016854:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016858:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801685c:	4616      	mov	r6, r2
 801685e:	f1bb 0f00 	cmp.w	fp, #0
 8016862:	d04a      	beq.n	80168fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016864:	6810      	ldr	r0, [r2, #0]
 8016866:	6851      	ldr	r1, [r2, #4]
 8016868:	ad06      	add	r5, sp, #24
 801686a:	c503      	stmia	r5!, {r0, r1}
 801686c:	6818      	ldr	r0, [r3, #0]
 801686e:	6859      	ldr	r1, [r3, #4]
 8016870:	ad08      	add	r5, sp, #32
 8016872:	c503      	stmia	r5!, {r0, r1}
 8016874:	a806      	add	r0, sp, #24
 8016876:	f7f9 ff59 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801687a:	4631      	mov	r1, r6
 801687c:	a808      	add	r0, sp, #32
 801687e:	f7f9 ff99 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016882:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016886:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801688a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801688e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016892:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016896:	fb16 2103 	smlabb	r1, r6, r3, r2
 801689a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801689e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80168a2:	4f5f      	ldr	r7, [pc, #380]	; (8016a20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80168a4:	440a      	add	r2, r1
 80168a6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80168aa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80168ae:	6838      	ldr	r0, [r7, #0]
 80168b0:	4413      	add	r3, r2
 80168b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80168b6:	6803      	ldr	r3, [r0, #0]
 80168b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80168ba:	4798      	blx	r3
 80168bc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80168c0:	46b9      	mov	r9, r7
 80168c2:	d11d      	bne.n	8016900 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80168c4:	b9fc      	cbnz	r4, 8016906 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80168c6:	f010 0f01 	tst.w	r0, #1
 80168ca:	d01c      	beq.n	8016906 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80168cc:	f8d9 0000 	ldr.w	r0, [r9]
 80168d0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80168d4:	6801      	ldr	r1, [r0, #0]
 80168d6:	f8cd b00c 	str.w	fp, [sp, #12]
 80168da:	2700      	movs	r7, #0
 80168dc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80168e0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80168e4:	9402      	str	r4, [sp, #8]
 80168e6:	b2ad      	uxth	r5, r5
 80168e8:	fa1f f488 	uxth.w	r4, r8
 80168ec:	9501      	str	r5, [sp, #4]
 80168ee:	9400      	str	r4, [sp, #0]
 80168f0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80168f2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80168f6:	4631      	mov	r1, r6
 80168f8:	47a0      	blx	r4
 80168fa:	b00b      	add	sp, #44	; 0x2c
 80168fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016900:	f010 0f04 	tst.w	r0, #4
 8016904:	e7e1      	b.n	80168ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8016906:	f8d9 0000 	ldr.w	r0, [r9]
 801690a:	6803      	ldr	r3, [r0, #0]
 801690c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801690e:	4798      	blx	r3
 8016910:	4b44      	ldr	r3, [pc, #272]	; (8016a24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8016912:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016916:	881a      	ldrh	r2, [r3, #0]
 8016918:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801691c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016920:	fb02 1404 	mla	r4, r2, r4, r1
 8016924:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016928:	469a      	mov	sl, r3
 801692a:	fb05 f502 	mul.w	r5, r5, r2
 801692e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016932:	d059      	beq.n	80169e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016934:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016938:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801693c:	fa1f f28b 	uxth.w	r2, fp
 8016940:	fa1f f989 	uxth.w	r9, r9
 8016944:	469e      	mov	lr, r3
 8016946:	42ac      	cmp	r4, r5
 8016948:	d264      	bcs.n	8016a14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801694a:	eb04 0a07 	add.w	sl, r4, r7
 801694e:	4554      	cmp	r4, sl
 8016950:	d23d      	bcs.n	80169ce <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8016952:	8821      	ldrh	r1, [r4, #0]
 8016954:	f836 3b02 	ldrh.w	r3, [r6], #2
 8016958:	1208      	asrs	r0, r1, #8
 801695a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801695e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016962:	fb10 f009 	smulbb	r0, r0, r9
 8016966:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801696a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801696e:	00c9      	lsls	r1, r1, #3
 8016970:	fb0c 0c02 	mla	ip, ip, r2, r0
 8016974:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016978:	10d8      	asrs	r0, r3, #3
 801697a:	b2c9      	uxtb	r1, r1
 801697c:	00db      	lsls	r3, r3, #3
 801697e:	fa1f fc8c 	uxth.w	ip, ip
 8016982:	fb1b fb09 	smulbb	fp, fp, r9
 8016986:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801698a:	b2db      	uxtb	r3, r3
 801698c:	fb11 f109 	smulbb	r1, r1, r9
 8016990:	fb00 b002 	mla	r0, r0, r2, fp
 8016994:	fb03 1302 	mla	r3, r3, r2, r1
 8016998:	f10c 0b01 	add.w	fp, ip, #1
 801699c:	b29b      	uxth	r3, r3
 801699e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80169a2:	b280      	uxth	r0, r0
 80169a4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80169a8:	f103 0c01 	add.w	ip, r3, #1
 80169ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80169b0:	1c43      	adds	r3, r0, #1
 80169b2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80169b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80169ba:	0940      	lsrs	r0, r0, #5
 80169bc:	ea4c 0c0b 	orr.w	ip, ip, fp
 80169c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80169c4:	ea4c 0c00 	orr.w	ip, ip, r0
 80169c8:	f824 cb02 	strh.w	ip, [r4], #2
 80169cc:	e7bf      	b.n	801694e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80169ce:	f8be 3000 	ldrh.w	r3, [lr]
 80169d2:	eba3 0308 	sub.w	r3, r3, r8
 80169d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80169da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80169de:	eba3 0308 	sub.w	r3, r3, r8
 80169e2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80169e6:	e7ae      	b.n	8016946 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80169e8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80169ec:	f8d9 0000 	ldr.w	r0, [r9]
 80169f0:	42ac      	cmp	r4, r5
 80169f2:	6803      	ldr	r3, [r0, #0]
 80169f4:	d20e      	bcs.n	8016a14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80169f6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80169fa:	4632      	mov	r2, r6
 80169fc:	463b      	mov	r3, r7
 80169fe:	4621      	mov	r1, r4
 8016a00:	47c0      	blx	r8
 8016a02:	f8ba 3000 	ldrh.w	r3, [sl]
 8016a06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016a0a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016a0e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016a12:	e7eb      	b.n	80169ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8016a14:	4b02      	ldr	r3, [pc, #8]	; (8016a20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016a16:	6818      	ldr	r0, [r3, #0]
 8016a18:	6803      	ldr	r3, [r0, #0]
 8016a1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016a1c:	4798      	blx	r3
 8016a1e:	e76c      	b.n	80168fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8016a20:	20014fd4 	.word	0x20014fd4
 8016a24:	20014fce 	.word	0x20014fce

08016a28 <_ZN8touchgfx8LCD16bppD0Ev>:
 8016a28:	b510      	push	{r4, lr}
 8016a2a:	2184      	movs	r1, #132	; 0x84
 8016a2c:	4604      	mov	r4, r0
 8016a2e:	f00a fe3d 	bl	80216ac <_ZdlPvj>
 8016a32:	4620      	mov	r0, r4
 8016a34:	bd10      	pop	{r4, pc}

08016a36 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8016a36:	b510      	push	{r4, lr}
 8016a38:	2104      	movs	r1, #4
 8016a3a:	4604      	mov	r4, r0
 8016a3c:	f00a fe36 	bl	80216ac <_ZdlPvj>
 8016a40:	4620      	mov	r0, r4
 8016a42:	bd10      	pop	{r4, pc}

08016a44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8016a44:	b510      	push	{r4, lr}
 8016a46:	2104      	movs	r1, #4
 8016a48:	4604      	mov	r4, r0
 8016a4a:	f00a fe2f 	bl	80216ac <_ZdlPvj>
 8016a4e:	4620      	mov	r0, r4
 8016a50:	bd10      	pop	{r4, pc}

08016a52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8016a52:	b510      	push	{r4, lr}
 8016a54:	f640 0144 	movw	r1, #2116	; 0x844
 8016a58:	4604      	mov	r4, r0
 8016a5a:	f00a fe27 	bl	80216ac <_ZdlPvj>
 8016a5e:	4620      	mov	r0, r4
 8016a60:	bd10      	pop	{r4, pc}

08016a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016a62:	b510      	push	{r4, lr}
 8016a64:	2104      	movs	r1, #4
 8016a66:	4604      	mov	r4, r0
 8016a68:	f00a fe20 	bl	80216ac <_ZdlPvj>
 8016a6c:	4620      	mov	r0, r4
 8016a6e:	bd10      	pop	{r4, pc}

08016a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016a70:	b510      	push	{r4, lr}
 8016a72:	2104      	movs	r1, #4
 8016a74:	4604      	mov	r4, r0
 8016a76:	f00a fe19 	bl	80216ac <_ZdlPvj>
 8016a7a:	4620      	mov	r0, r4
 8016a7c:	bd10      	pop	{r4, pc}

08016a7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016a7e:	b510      	push	{r4, lr}
 8016a80:	2104      	movs	r1, #4
 8016a82:	4604      	mov	r4, r0
 8016a84:	f00a fe12 	bl	80216ac <_ZdlPvj>
 8016a88:	4620      	mov	r0, r4
 8016a8a:	bd10      	pop	{r4, pc}

08016a8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016a8c:	b510      	push	{r4, lr}
 8016a8e:	2104      	movs	r1, #4
 8016a90:	4604      	mov	r4, r0
 8016a92:	f00a fe0b 	bl	80216ac <_ZdlPvj>
 8016a96:	4620      	mov	r0, r4
 8016a98:	bd10      	pop	{r4, pc}

08016a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016a9a:	b510      	push	{r4, lr}
 8016a9c:	2104      	movs	r1, #4
 8016a9e:	4604      	mov	r4, r0
 8016aa0:	f00a fe04 	bl	80216ac <_ZdlPvj>
 8016aa4:	4620      	mov	r0, r4
 8016aa6:	bd10      	pop	{r4, pc}

08016aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016aa8:	b510      	push	{r4, lr}
 8016aaa:	2104      	movs	r1, #4
 8016aac:	4604      	mov	r4, r0
 8016aae:	f00a fdfd 	bl	80216ac <_ZdlPvj>
 8016ab2:	4620      	mov	r0, r4
 8016ab4:	bd10      	pop	{r4, pc}

08016ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016ab6:	b510      	push	{r4, lr}
 8016ab8:	2104      	movs	r1, #4
 8016aba:	4604      	mov	r4, r0
 8016abc:	f00a fdf6 	bl	80216ac <_ZdlPvj>
 8016ac0:	4620      	mov	r0, r4
 8016ac2:	bd10      	pop	{r4, pc}

08016ac4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8016ac4:	b510      	push	{r4, lr}
 8016ac6:	2104      	movs	r1, #4
 8016ac8:	4604      	mov	r4, r0
 8016aca:	f00a fdef 	bl	80216ac <_ZdlPvj>
 8016ace:	4620      	mov	r0, r4
 8016ad0:	bd10      	pop	{r4, pc}

08016ad2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016ad2:	b510      	push	{r4, lr}
 8016ad4:	2104      	movs	r1, #4
 8016ad6:	4604      	mov	r4, r0
 8016ad8:	f00a fde8 	bl	80216ac <_ZdlPvj>
 8016adc:	4620      	mov	r0, r4
 8016ade:	bd10      	pop	{r4, pc}

08016ae0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016ae0:	b510      	push	{r4, lr}
 8016ae2:	2104      	movs	r1, #4
 8016ae4:	4604      	mov	r4, r0
 8016ae6:	f00a fde1 	bl	80216ac <_ZdlPvj>
 8016aea:	4620      	mov	r0, r4
 8016aec:	bd10      	pop	{r4, pc}

08016aee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016aee:	b510      	push	{r4, lr}
 8016af0:	2104      	movs	r1, #4
 8016af2:	4604      	mov	r4, r0
 8016af4:	f00a fdda 	bl	80216ac <_ZdlPvj>
 8016af8:	4620      	mov	r0, r4
 8016afa:	bd10      	pop	{r4, pc}

08016afc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016afc:	b510      	push	{r4, lr}
 8016afe:	2104      	movs	r1, #4
 8016b00:	4604      	mov	r4, r0
 8016b02:	f00a fdd3 	bl	80216ac <_ZdlPvj>
 8016b06:	4620      	mov	r0, r4
 8016b08:	bd10      	pop	{r4, pc}

08016b0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016b0a:	b510      	push	{r4, lr}
 8016b0c:	2104      	movs	r1, #4
 8016b0e:	4604      	mov	r4, r0
 8016b10:	f00a fdcc 	bl	80216ac <_ZdlPvj>
 8016b14:	4620      	mov	r0, r4
 8016b16:	bd10      	pop	{r4, pc}

08016b18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8016b18:	b510      	push	{r4, lr}
 8016b1a:	2104      	movs	r1, #4
 8016b1c:	4604      	mov	r4, r0
 8016b1e:	f00a fdc5 	bl	80216ac <_ZdlPvj>
 8016b22:	4620      	mov	r0, r4
 8016b24:	bd10      	pop	{r4, pc}

08016b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016b26:	b510      	push	{r4, lr}
 8016b28:	2104      	movs	r1, #4
 8016b2a:	4604      	mov	r4, r0
 8016b2c:	f00a fdbe 	bl	80216ac <_ZdlPvj>
 8016b30:	4620      	mov	r0, r4
 8016b32:	bd10      	pop	{r4, pc}

08016b34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016b34:	b510      	push	{r4, lr}
 8016b36:	2104      	movs	r1, #4
 8016b38:	4604      	mov	r4, r0
 8016b3a:	f00a fdb7 	bl	80216ac <_ZdlPvj>
 8016b3e:	4620      	mov	r0, r4
 8016b40:	bd10      	pop	{r4, pc}

08016b42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016b42:	b510      	push	{r4, lr}
 8016b44:	2104      	movs	r1, #4
 8016b46:	4604      	mov	r4, r0
 8016b48:	f00a fdb0 	bl	80216ac <_ZdlPvj>
 8016b4c:	4620      	mov	r0, r4
 8016b4e:	bd10      	pop	{r4, pc}

08016b50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016b50:	b510      	push	{r4, lr}
 8016b52:	2104      	movs	r1, #4
 8016b54:	4604      	mov	r4, r0
 8016b56:	f00a fda9 	bl	80216ac <_ZdlPvj>
 8016b5a:	4620      	mov	r0, r4
 8016b5c:	bd10      	pop	{r4, pc}

08016b5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016b5e:	b510      	push	{r4, lr}
 8016b60:	2104      	movs	r1, #4
 8016b62:	4604      	mov	r4, r0
 8016b64:	f00a fda2 	bl	80216ac <_ZdlPvj>
 8016b68:	4620      	mov	r0, r4
 8016b6a:	bd10      	pop	{r4, pc}

08016b6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016b6c:	b510      	push	{r4, lr}
 8016b6e:	2104      	movs	r1, #4
 8016b70:	4604      	mov	r4, r0
 8016b72:	f00a fd9b 	bl	80216ac <_ZdlPvj>
 8016b76:	4620      	mov	r0, r4
 8016b78:	bd10      	pop	{r4, pc}

08016b7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016b7a:	b510      	push	{r4, lr}
 8016b7c:	2104      	movs	r1, #4
 8016b7e:	4604      	mov	r4, r0
 8016b80:	f00a fd94 	bl	80216ac <_ZdlPvj>
 8016b84:	4620      	mov	r0, r4
 8016b86:	bd10      	pop	{r4, pc}

08016b88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016b88:	b510      	push	{r4, lr}
 8016b8a:	2104      	movs	r1, #4
 8016b8c:	4604      	mov	r4, r0
 8016b8e:	f00a fd8d 	bl	80216ac <_ZdlPvj>
 8016b92:	4620      	mov	r0, r4
 8016b94:	bd10      	pop	{r4, pc}

08016b96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016b96:	b510      	push	{r4, lr}
 8016b98:	2104      	movs	r1, #4
 8016b9a:	4604      	mov	r4, r0
 8016b9c:	f00a fd86 	bl	80216ac <_ZdlPvj>
 8016ba0:	4620      	mov	r0, r4
 8016ba2:	bd10      	pop	{r4, pc}

08016ba4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016ba4:	b510      	push	{r4, lr}
 8016ba6:	2104      	movs	r1, #4
 8016ba8:	4604      	mov	r4, r0
 8016baa:	f00a fd7f 	bl	80216ac <_ZdlPvj>
 8016bae:	4620      	mov	r0, r4
 8016bb0:	bd10      	pop	{r4, pc}

08016bb2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016bb2:	b510      	push	{r4, lr}
 8016bb4:	2104      	movs	r1, #4
 8016bb6:	4604      	mov	r4, r0
 8016bb8:	f00a fd78 	bl	80216ac <_ZdlPvj>
 8016bbc:	4620      	mov	r0, r4
 8016bbe:	bd10      	pop	{r4, pc}

08016bc0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016bc0:	b510      	push	{r4, lr}
 8016bc2:	2104      	movs	r1, #4
 8016bc4:	4604      	mov	r4, r0
 8016bc6:	f00a fd71 	bl	80216ac <_ZdlPvj>
 8016bca:	4620      	mov	r0, r4
 8016bcc:	bd10      	pop	{r4, pc}

08016bce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8016bce:	b510      	push	{r4, lr}
 8016bd0:	2104      	movs	r1, #4
 8016bd2:	4604      	mov	r4, r0
 8016bd4:	f00a fd6a 	bl	80216ac <_ZdlPvj>
 8016bd8:	4620      	mov	r0, r4
 8016bda:	bd10      	pop	{r4, pc}

08016bdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8016bdc:	b510      	push	{r4, lr}
 8016bde:	2104      	movs	r1, #4
 8016be0:	4604      	mov	r4, r0
 8016be2:	f00a fd63 	bl	80216ac <_ZdlPvj>
 8016be6:	4620      	mov	r0, r4
 8016be8:	bd10      	pop	{r4, pc}
	...

08016bec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bf0:	b08f      	sub	sp, #60	; 0x3c
 8016bf2:	461c      	mov	r4, r3
 8016bf4:	9205      	str	r2, [sp, #20]
 8016bf6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016bfa:	9100      	str	r1, [sp, #0]
 8016bfc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016bfe:	9201      	str	r2, [sp, #4]
 8016c00:	2a00      	cmp	r2, #0
 8016c02:	f000 8115 	beq.w	8016e30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8016c06:	6820      	ldr	r0, [r4, #0]
 8016c08:	6861      	ldr	r1, [r4, #4]
 8016c0a:	aa0a      	add	r2, sp, #40	; 0x28
 8016c0c:	c203      	stmia	r2!, {r0, r1}
 8016c0e:	6818      	ldr	r0, [r3, #0]
 8016c10:	6859      	ldr	r1, [r3, #4]
 8016c12:	aa0c      	add	r2, sp, #48	; 0x30
 8016c14:	c203      	stmia	r2!, {r0, r1}
 8016c16:	a80a      	add	r0, sp, #40	; 0x28
 8016c18:	f7f9 fd88 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c1c:	4621      	mov	r1, r4
 8016c1e:	a80c      	add	r0, sp, #48	; 0x30
 8016c20:	f7f9 fdc8 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c24:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8016c28:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 8016c2c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8016c30:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8016c34:	bfde      	ittt	le
 8016c36:	b2b3      	uxthle	r3, r6
 8016c38:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8016c3c:	fb92 f3f3 	sdivle	r3, r2, r3
 8016c40:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8016c44:	bfc8      	it	gt
 8016c46:	2301      	movgt	r3, #1
 8016c48:	fb92 f1f3 	sdiv	r1, r2, r3
 8016c4c:	fa1f fc81 	uxth.w	ip, r1
 8016c50:	fb0c 2413 	mls	r4, ip, r3, r2
 8016c54:	fb14 f406 	smulbb	r4, r4, r6
 8016c58:	441d      	add	r5, r3
 8016c5a:	4404      	add	r4, r0
 8016c5c:	4661      	mov	r1, ip
 8016c5e:	3d01      	subs	r5, #1
 8016c60:	b2a4      	uxth	r4, r4
 8016c62:	fb95 f5f3 	sdiv	r5, r5, r3
 8016c66:	b131      	cbz	r1, 8016c76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8016c68:	9b05      	ldr	r3, [sp, #20]
 8016c6a:	9900      	ldr	r1, [sp, #0]
 8016c6c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016c70:	ba1b      	rev	r3, r3
 8016c72:	4419      	add	r1, r3
 8016c74:	9100      	str	r1, [sp, #0]
 8016c76:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016c7a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 8016c7e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8016c82:	4418      	add	r0, r3
 8016c84:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8016c88:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 8016c8c:	441a      	add	r2, r3
 8016c8e:	4b6a      	ldr	r3, [pc, #424]	; (8016e38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016c90:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8016c94:	6818      	ldr	r0, [r3, #0]
 8016c96:	6803      	ldr	r3, [r0, #0]
 8016c98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c9a:	4798      	blx	r3
 8016c9c:	4967      	ldr	r1, [pc, #412]	; (8016e3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8016c9e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8016ca2:	880b      	ldrh	r3, [r1, #0]
 8016ca4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 8016ca8:	9109      	str	r1, [sp, #36]	; 0x24
 8016caa:	fb03 c202 	mla	r2, r3, r2, ip
 8016cae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016cb2:	4373      	muls	r3, r6
 8016cb4:	b2ad      	uxth	r5, r5
 8016cb6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016cba:	00ad      	lsls	r5, r5, #2
 8016cbc:	9306      	str	r3, [sp, #24]
 8016cbe:	1d2b      	adds	r3, r5, #4
 8016cc0:	9307      	str	r3, [sp, #28]
 8016cc2:	9b01      	ldr	r3, [sp, #4]
 8016cc4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016cc8:	9103      	str	r1, [sp, #12]
 8016cca:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 8016cce:	2c00      	cmp	r4, #0
 8016cd0:	bf0c      	ite	eq
 8016cd2:	46c6      	moveq	lr, r8
 8016cd4:	f04f 0e00 	movne.w	lr, #0
 8016cd8:	2300      	movs	r3, #0
 8016cda:	b292      	uxth	r2, r2
 8016cdc:	fa1f fe8e 	uxth.w	lr, lr
 8016ce0:	9302      	str	r3, [sp, #8]
 8016ce2:	9204      	str	r2, [sp, #16]
 8016ce4:	9a06      	ldr	r2, [sp, #24]
 8016ce6:	4282      	cmp	r2, r0
 8016ce8:	f240 809d 	bls.w	8016e26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8016cec:	b963      	cbnz	r3, 8016d08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8016cee:	9b00      	ldr	r3, [sp, #0]
 8016cf0:	781a      	ldrb	r2, [r3, #0]
 8016cf2:	0993      	lsrs	r3, r2, #6
 8016cf4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8016cf8:	9202      	str	r2, [sp, #8]
 8016cfa:	1e5a      	subs	r2, r3, #1
 8016cfc:	2a02      	cmp	r2, #2
 8016cfe:	d815      	bhi.n	8016d2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8016d00:	9a00      	ldr	r2, [sp, #0]
 8016d02:	3201      	adds	r2, #1
 8016d04:	9200      	str	r2, [sp, #0]
 8016d06:	b29b      	uxth	r3, r3
 8016d08:	b1b4      	cbz	r4, 8016d38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8016d0a:	429c      	cmp	r4, r3
 8016d0c:	bf95      	itete	ls
 8016d0e:	1b1c      	subls	r4, r3, r4
 8016d10:	1ae4      	subhi	r4, r4, r3
 8016d12:	fa1f fa84 	uxthls.w	sl, r4
 8016d16:	b2a4      	uxthhi	r4, r4
 8016d18:	bf87      	ittee	hi
 8016d1a:	4671      	movhi	r1, lr
 8016d1c:	f04f 0a00 	movhi.w	sl, #0
 8016d20:	fa1f f188 	uxthls.w	r1, r8
 8016d24:	2400      	movls	r4, #0
 8016d26:	4653      	mov	r3, sl
 8016d28:	468e      	mov	lr, r1
 8016d2a:	e7db      	b.n	8016ce4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8016d2c:	9a00      	ldr	r2, [sp, #0]
 8016d2e:	9b00      	ldr	r3, [sp, #0]
 8016d30:	3202      	adds	r2, #2
 8016d32:	785b      	ldrb	r3, [r3, #1]
 8016d34:	9200      	str	r2, [sp, #0]
 8016d36:	e7e7      	b.n	8016d08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8016d38:	2202      	movs	r2, #2
 8016d3a:	4615      	mov	r5, r2
 8016d3c:	9907      	ldr	r1, [sp, #28]
 8016d3e:	9a02      	ldr	r2, [sp, #8]
 8016d40:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016d44:	9905      	ldr	r1, [sp, #20]
 8016d46:	4573      	cmp	r3, lr
 8016d48:	f831 c002 	ldrh.w	ip, [r1, r2]
 8016d4c:	9a01      	ldr	r2, [sp, #4]
 8016d4e:	bf2b      	itete	cs
 8016d50:	eba3 0a0e 	subcs.w	sl, r3, lr
 8016d54:	ebae 0103 	subcc.w	r1, lr, r3
 8016d58:	46f1      	movcs	r9, lr
 8016d5a:	4699      	movcc	r9, r3
 8016d5c:	bf27      	ittee	cs
 8016d5e:	fa1f fa8a 	uxthcs.w	sl, sl
 8016d62:	4621      	movcs	r1, r4
 8016d64:	b289      	uxthcc	r1, r1
 8016d66:	46a2      	movcc	sl, r4
 8016d68:	2aff      	cmp	r2, #255	; 0xff
 8016d6a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016d6e:	d105      	bne.n	8016d7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8016d70:	4481      	add	r9, r0
 8016d72:	4581      	cmp	r9, r0
 8016d74:	d045      	beq.n	8016e02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8016d76:	f820 cb02 	strh.w	ip, [r0], #2
 8016d7a:	e7fa      	b.n	8016d72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8016d7c:	9d03      	ldr	r5, [sp, #12]
 8016d7e:	ea4f 222c 	mov.w	r2, ip, asr #8
 8016d82:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8016d86:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016d8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d8e:	436a      	muls	r2, r5
 8016d90:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016d94:	fa5f fc8c 	uxtb.w	ip, ip
 8016d98:	9208      	str	r2, [sp, #32]
 8016d9a:	fb0b fb05 	mul.w	fp, fp, r5
 8016d9e:	fb0c fc05 	mul.w	ip, ip, r5
 8016da2:	4481      	add	r9, r0
 8016da4:	4581      	cmp	r9, r0
 8016da6:	d02c      	beq.n	8016e02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8016da8:	8802      	ldrh	r2, [r0, #0]
 8016daa:	9d04      	ldr	r5, [sp, #16]
 8016dac:	9f04      	ldr	r7, [sp, #16]
 8016dae:	1216      	asrs	r6, r2, #8
 8016db0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016db4:	fb16 f605 	smulbb	r6, r6, r5
 8016db8:	9d08      	ldr	r5, [sp, #32]
 8016dba:	442e      	add	r6, r5
 8016dbc:	10d5      	asrs	r5, r2, #3
 8016dbe:	00d2      	lsls	r2, r2, #3
 8016dc0:	b2d2      	uxtb	r2, r2
 8016dc2:	fb12 f207 	smulbb	r2, r2, r7
 8016dc6:	b2b6      	uxth	r6, r6
 8016dc8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016dcc:	4462      	add	r2, ip
 8016dce:	fb15 f507 	smulbb	r5, r5, r7
 8016dd2:	b292      	uxth	r2, r2
 8016dd4:	1c77      	adds	r7, r6, #1
 8016dd6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016dda:	1c57      	adds	r7, r2, #1
 8016ddc:	445d      	add	r5, fp
 8016dde:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8016de2:	b2ad      	uxth	r5, r5
 8016de4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016de8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016dec:	4316      	orrs	r6, r2
 8016dee:	1c6a      	adds	r2, r5, #1
 8016df0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8016df4:	096d      	lsrs	r5, r5, #5
 8016df6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016dfa:	432e      	orrs	r6, r5
 8016dfc:	f820 6b02 	strh.w	r6, [r0], #2
 8016e00:	e7d0      	b.n	8016da4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8016e02:	4573      	cmp	r3, lr
 8016e04:	d38f      	bcc.n	8016d26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8016e06:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8016e0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016e0c:	fa1f f188 	uxth.w	r1, r8
 8016e10:	1a64      	subs	r4, r4, r1
 8016e12:	881b      	ldrh	r3, [r3, #0]
 8016e14:	b2a4      	uxth	r4, r4
 8016e16:	2c00      	cmp	r4, #0
 8016e18:	eba3 0308 	sub.w	r3, r3, r8
 8016e1c:	bf18      	it	ne
 8016e1e:	2100      	movne	r1, #0
 8016e20:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016e24:	e77f      	b.n	8016d26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8016e26:	4b04      	ldr	r3, [pc, #16]	; (8016e38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8016e28:	6818      	ldr	r0, [r3, #0]
 8016e2a:	6803      	ldr	r3, [r0, #0]
 8016e2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016e2e:	4798      	blx	r3
 8016e30:	b00f      	add	sp, #60	; 0x3c
 8016e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016e36:	bf00      	nop
 8016e38:	20014fd4 	.word	0x20014fd4
 8016e3c:	20014fce 	.word	0x20014fce

08016e40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8016e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e44:	b09f      	sub	sp, #124	; 0x7c
 8016e46:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8016e4a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8016e4e:	9209      	str	r2, [sp, #36]	; 0x24
 8016e50:	461d      	mov	r5, r3
 8016e52:	4604      	mov	r4, r0
 8016e54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016e56:	2a00      	cmp	r2, #0
 8016e58:	f000 81eb 	beq.w	8017232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8016e5c:	6828      	ldr	r0, [r5, #0]
 8016e5e:	6869      	ldr	r1, [r5, #4]
 8016e60:	aa1a      	add	r2, sp, #104	; 0x68
 8016e62:	c203      	stmia	r2!, {r0, r1}
 8016e64:	6818      	ldr	r0, [r3, #0]
 8016e66:	6859      	ldr	r1, [r3, #4]
 8016e68:	aa1c      	add	r2, sp, #112	; 0x70
 8016e6a:	c203      	stmia	r2!, {r0, r1}
 8016e6c:	a81a      	add	r0, sp, #104	; 0x68
 8016e6e:	f7f9 fc5d 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016e72:	4629      	mov	r1, r5
 8016e74:	a81c      	add	r0, sp, #112	; 0x70
 8016e76:	f7f9 fc9d 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016e7a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8016e7e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 8016e82:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 8016e86:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8016e8a:	bfd7      	itett	le
 8016e8c:	b29a      	uxthle	r2, r3
 8016e8e:	2201      	movgt	r2, #1
 8016e90:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8016e94:	fb91 f2f2 	sdivle	r2, r1, r2
 8016e98:	9202      	str	r2, [sp, #8]
 8016e9a:	9802      	ldr	r0, [sp, #8]
 8016e9c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8016ea0:	fb92 f0f0 	sdiv	r0, r2, r0
 8016ea4:	b280      	uxth	r0, r0
 8016ea6:	9010      	str	r0, [sp, #64]	; 0x40
 8016ea8:	9902      	ldr	r1, [sp, #8]
 8016eaa:	9802      	ldr	r0, [sp, #8]
 8016eac:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8016eae:	4488      	add	r8, r1
 8016eb0:	fb05 2510 	mls	r5, r5, r0, r2
 8016eb4:	fb15 f503 	smulbb	r5, r5, r3
 8016eb8:	f108 38ff 	add.w	r8, r8, #4294967295
 8016ebc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8016ec0:	fb98 f8f1 	sdiv	r8, r8, r1
 8016ec4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8016ec8:	440d      	add	r5, r1
 8016eca:	4419      	add	r1, r3
 8016ecc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8016ed0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8016ed4:	441a      	add	r2, r3
 8016ed6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8016eda:	9304      	str	r3, [sp, #16]
 8016edc:	4b95      	ldr	r3, [pc, #596]	; (8017134 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016ede:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8016ee2:	6818      	ldr	r0, [r3, #0]
 8016ee4:	6803      	ldr	r3, [r0, #0]
 8016ee6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016ee8:	4798      	blx	r3
 8016eea:	4b93      	ldr	r3, [pc, #588]	; (8017138 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016eec:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8016ef0:	881a      	ldrh	r2, [r3, #0]
 8016ef2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8016ef6:	9318      	str	r3, [sp, #96]	; 0x60
 8016ef8:	fb02 7101 	mla	r1, r2, r1, r7
 8016efc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016f00:	4356      	muls	r6, r2
 8016f02:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8016f06:	f108 0801 	add.w	r8, r8, #1
 8016f0a:	920a      	str	r2, [sp, #40]	; 0x28
 8016f0c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016f0e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8016f12:	930f      	str	r3, [sp, #60]	; 0x3c
 8016f14:	fa1f f888 	uxth.w	r8, r8
 8016f18:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8016f1c:	f108 0204 	add.w	r2, r8, #4
 8016f20:	9211      	str	r2, [sp, #68]	; 0x44
 8016f22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016f24:	4b85      	ldr	r3, [pc, #532]	; (801713c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016f26:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 8016f2a:	b2ad      	uxth	r5, r5
 8016f2c:	9215      	str	r2, [sp, #84]	; 0x54
 8016f2e:	2d00      	cmp	r5, #0
 8016f30:	9a04      	ldr	r2, [sp, #16]
 8016f32:	f04f 0100 	mov.w	r1, #0
 8016f36:	bf18      	it	ne
 8016f38:	2200      	movne	r2, #0
 8016f3a:	1b1b      	subs	r3, r3, r4
 8016f3c:	b292      	uxth	r2, r2
 8016f3e:	910d      	str	r1, [sp, #52]	; 0x34
 8016f40:	9319      	str	r3, [sp, #100]	; 0x64
 8016f42:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016f44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016f46:	fa11 f383 	uxtah	r3, r1, r3
 8016f4a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016f4c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016f50:	3304      	adds	r3, #4
 8016f52:	9306      	str	r3, [sp, #24]
 8016f54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016f56:	4283      	cmp	r3, r0
 8016f58:	f240 8166 	bls.w	8017228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8016f5c:	9902      	ldr	r1, [sp, #8]
 8016f5e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8016f62:	fbb5 f3f3 	udiv	r3, r5, r3
 8016f66:	1acb      	subs	r3, r1, r3
 8016f68:	b29b      	uxth	r3, r3
 8016f6a:	9316      	str	r3, [sp, #88]	; 0x58
 8016f6c:	9b06      	ldr	r3, [sp, #24]
 8016f6e:	9e06      	ldr	r6, [sp, #24]
 8016f70:	7859      	ldrb	r1, [r3, #1]
 8016f72:	789b      	ldrb	r3, [r3, #2]
 8016f74:	7836      	ldrb	r6, [r6, #0]
 8016f76:	9612      	str	r6, [sp, #72]	; 0x48
 8016f78:	021b      	lsls	r3, r3, #8
 8016f7a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8016f7e:	9906      	ldr	r1, [sp, #24]
 8016f80:	78c9      	ldrb	r1, [r1, #3]
 8016f82:	430b      	orrs	r3, r1
 8016f84:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8016f86:	3601      	adds	r6, #1
 8016f88:	4419      	add	r1, r3
 8016f8a:	9605      	str	r6, [sp, #20]
 8016f8c:	1c4e      	adds	r6, r1, #1
 8016f8e:	9603      	str	r6, [sp, #12]
 8016f90:	7849      	ldrb	r1, [r1, #1]
 8016f92:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016f94:	0209      	lsls	r1, r1, #8
 8016f96:	5cf3      	ldrb	r3, [r6, r3]
 8016f98:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 8016f9c:	4319      	orrs	r1, r3
 8016f9e:	b28b      	uxth	r3, r1
 8016fa0:	930c      	str	r3, [sp, #48]	; 0x30
 8016fa2:	2300      	movs	r3, #0
 8016fa4:	f04f 0a01 	mov.w	sl, #1
 8016fa8:	9307      	str	r3, [sp, #28]
 8016faa:	469c      	mov	ip, r3
 8016fac:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8016fb0:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8016fb4:	46d3      	mov	fp, sl
 8016fb6:	4657      	mov	r7, sl
 8016fb8:	930e      	str	r3, [sp, #56]	; 0x38
 8016fba:	2d00      	cmp	r5, #0
 8016fbc:	d07e      	beq.n	80170bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8016fbe:	42af      	cmp	r7, r5
 8016fc0:	d26e      	bcs.n	80170a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8016fc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016fc4:	9201      	str	r2, [sp, #4]
 8016fc6:	1bed      	subs	r5, r5, r7
 8016fc8:	4283      	cmp	r3, r0
 8016fca:	b2ad      	uxth	r5, r5
 8016fcc:	d802      	bhi.n	8016fd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8016fce:	e073      	b.n	80170b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8016fd0:	2b00      	cmp	r3, #0
 8016fd2:	d15f      	bne.n	8017094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8016fd4:	9b03      	ldr	r3, [sp, #12]
 8016fd6:	785b      	ldrb	r3, [r3, #1]
 8016fd8:	f1cb 0207 	rsb	r2, fp, #7
 8016fdc:	4093      	lsls	r3, r2
 8016fde:	005b      	lsls	r3, r3, #1
 8016fe0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8016fe4:	9b03      	ldr	r3, [sp, #12]
 8016fe6:	781b      	ldrb	r3, [r3, #0]
 8016fe8:	fa43 f30b 	asr.w	r3, r3, fp
 8016fec:	b2db      	uxtb	r3, r3
 8016fee:	4313      	orrs	r3, r2
 8016ff0:	f10b 0201 	add.w	r2, fp, #1
 8016ff4:	fa5f fb82 	uxtb.w	fp, r2
 8016ff8:	9a03      	ldr	r2, [sp, #12]
 8016ffa:	f1bb 0f08 	cmp.w	fp, #8
 8016ffe:	bf15      	itete	ne
 8017000:	3201      	addne	r2, #1
 8017002:	3202      	addeq	r2, #2
 8017004:	9203      	strne	r2, [sp, #12]
 8017006:	9203      	streq	r2, [sp, #12]
 8017008:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801700a:	b29f      	uxth	r7, r3
 801700c:	bf08      	it	eq
 801700e:	f04f 0b00 	moveq.w	fp, #0
 8017012:	42ba      	cmp	r2, r7
 8017014:	d309      	bcc.n	801702a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017016:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801701a:	2301      	movs	r3, #1
 801701c:	9a05      	ldr	r2, [sp, #20]
 801701e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 8017022:	d30e      	bcc.n	8017042 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8017024:	469a      	mov	sl, r3
 8017026:	2600      	movs	r6, #0
 8017028:	e035      	b.n	8017096 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801702a:	9b05      	ldr	r3, [sp, #20]
 801702c:	429f      	cmp	r7, r3
 801702e:	d318      	bcc.n	8017062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8017030:	eb04 030a 	add.w	r3, r4, sl
 8017034:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 8017038:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801703c:	f10a 0301 	add.w	r3, sl, #1
 8017040:	b29b      	uxth	r3, r3
 8017042:	9a05      	ldr	r2, [sp, #20]
 8017044:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8017048:	990c      	ldr	r1, [sp, #48]	; 0x30
 801704a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801704e:	7116      	strb	r6, [r2, #4]
 8017050:	f10a 0601 	add.w	r6, sl, #1
 8017054:	80d1      	strh	r1, [r2, #6]
 8017056:	7156      	strb	r6, [r2, #5]
 8017058:	9a05      	ldr	r2, [sp, #20]
 801705a:	3201      	adds	r2, #1
 801705c:	b292      	uxth	r2, r2
 801705e:	9205      	str	r2, [sp, #20]
 8017060:	e7e0      	b.n	8017024 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8017062:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8017066:	463a      	mov	r2, r7
 8017068:	795b      	ldrb	r3, [r3, #5]
 801706a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801706e:	4426      	add	r6, r4
 8017070:	9919      	ldr	r1, [sp, #100]	; 0x64
 8017072:	eb01 0c06 	add.w	ip, r1, r6
 8017076:	f1bc 0f00 	cmp.w	ip, #0
 801707a:	dd07      	ble.n	801708c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801707c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017080:	f892 c004 	ldrb.w	ip, [r2, #4]
 8017084:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8017088:	88d2      	ldrh	r2, [r2, #6]
 801708a:	e7f1      	b.n	8017070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801708c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8017090:	b29b      	uxth	r3, r3
 8017092:	e7c3      	b.n	801701c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8017094:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017096:	970c      	str	r7, [sp, #48]	; 0x30
 8017098:	9a01      	ldr	r2, [sp, #4]
 801709a:	46b4      	mov	ip, r6
 801709c:	461f      	mov	r7, r3
 801709e:	e78c      	b.n	8016fba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80170a0:	1b7b      	subs	r3, r7, r5
 80170a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80170a6:	9201      	str	r2, [sp, #4]
 80170a8:	eb0c 0605 	add.w	r6, ip, r5
 80170ac:	b29b      	uxth	r3, r3
 80170ae:	b2b6      	uxth	r6, r6
 80170b0:	2500      	movs	r5, #0
 80170b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80170b4:	4282      	cmp	r2, r0
 80170b6:	d88b      	bhi.n	8016fd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80170b8:	9a01      	ldr	r2, [sp, #4]
 80170ba:	e74b      	b.n	8016f54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 80170bc:	4297      	cmp	r7, r2
 80170be:	d332      	bcc.n	8017126 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 80170c0:	1abb      	subs	r3, r7, r2
 80170c2:	b29b      	uxth	r3, r3
 80170c4:	9208      	str	r2, [sp, #32]
 80170c6:	9501      	str	r5, [sp, #4]
 80170c8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80170ca:	29ff      	cmp	r1, #255	; 0xff
 80170cc:	9908      	ldr	r1, [sp, #32]
 80170ce:	eb0c 0601 	add.w	r6, ip, r1
 80170d2:	d135      	bne.n	8017140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 80170d4:	f1a0 0e02 	sub.w	lr, r0, #2
 80170d8:	b2b6      	uxth	r6, r6
 80170da:	45b4      	cmp	ip, r6
 80170dc:	f040 808c 	bne.w	80171f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 80170e0:	9908      	ldr	r1, [sp, #32]
 80170e2:	4297      	cmp	r7, r2
 80170e4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80170e8:	d3e2      	bcc.n	80170b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 80170ea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80170ec:	9904      	ldr	r1, [sp, #16]
 80170ee:	8812      	ldrh	r2, [r2, #0]
 80170f0:	1a52      	subs	r2, r2, r1
 80170f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80170f6:	9a07      	ldr	r2, [sp, #28]
 80170f8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80170fa:	3201      	adds	r2, #1
 80170fc:	428a      	cmp	r2, r1
 80170fe:	9207      	str	r2, [sp, #28]
 8017100:	f040 8087 	bne.w	8017212 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8017104:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8017108:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801710c:	9b04      	ldr	r3, [sp, #16]
 801710e:	1bed      	subs	r5, r5, r7
 8017110:	b2ad      	uxth	r5, r5
 8017112:	2d00      	cmp	r5, #0
 8017114:	bf08      	it	eq
 8017116:	461a      	moveq	r2, r3
 8017118:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801711a:	bf18      	it	ne
 801711c:	2200      	movne	r2, #0
 801711e:	3301      	adds	r3, #1
 8017120:	930d      	str	r3, [sp, #52]	; 0x34
 8017122:	b292      	uxth	r2, r2
 8017124:	e70d      	b.n	8016f42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8017126:	1bd1      	subs	r1, r2, r7
 8017128:	b28b      	uxth	r3, r1
 801712a:	9301      	str	r3, [sp, #4]
 801712c:	9708      	str	r7, [sp, #32]
 801712e:	462b      	mov	r3, r5
 8017130:	e7ca      	b.n	80170c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8017132:	bf00      	nop
 8017134:	20014fd4 	.word	0x20014fd4
 8017138:	20014fce 	.word	0x20014fce
 801713c:	fffff7fb 	.word	0xfffff7fb
 8017140:	b2b6      	uxth	r6, r6
 8017142:	900b      	str	r0, [sp, #44]	; 0x2c
 8017144:	45b4      	cmp	ip, r6
 8017146:	d0cb      	beq.n	80170e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8017148:	f10c 0101 	add.w	r1, ip, #1
 801714c:	44a4      	add	ip, r4
 801714e:	9117      	str	r1, [sp, #92]	; 0x5c
 8017150:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8017154:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017156:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801715a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801715c:	f8b1 c000 	ldrh.w	ip, [r1]
 8017160:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017162:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8017166:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801716a:	fb1e fe01 	smulbb	lr, lr, r1
 801716e:	ea4f 2825 	mov.w	r8, r5, asr #8
 8017172:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8017174:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017178:	fb08 e801 	mla	r8, r8, r1, lr
 801717c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8017180:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017182:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017186:	fb19 f901 	smulbb	r9, r9, r1
 801718a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801718e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8017190:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8017194:	fb0e 9e01 	mla	lr, lr, r1, r9
 8017198:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801719c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801719e:	fa5f fc8c 	uxtb.w	ip, ip
 80171a2:	fb1c fc01 	smulbb	ip, ip, r1
 80171a6:	00ed      	lsls	r5, r5, #3
 80171a8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80171aa:	b2ed      	uxtb	r5, r5
 80171ac:	fb05 c501 	mla	r5, r5, r1, ip
 80171b0:	fa1f f888 	uxth.w	r8, r8
 80171b4:	fa1f fe8e 	uxth.w	lr, lr
 80171b8:	b2ad      	uxth	r5, r5
 80171ba:	f108 0c01 	add.w	ip, r8, #1
 80171be:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80171c2:	f10e 0901 	add.w	r9, lr, #1
 80171c6:	f105 0c01 	add.w	ip, r5, #1
 80171ca:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80171ce:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 80171d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80171d6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80171da:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80171de:	ea4c 0808 	orr.w	r8, ip, r8
 80171e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80171e4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 80171e8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80171ec:	ea48 0809 	orr.w	r8, r8, r9
 80171f0:	f821 8b02 	strh.w	r8, [r1], #2
 80171f4:	910b      	str	r1, [sp, #44]	; 0x2c
 80171f6:	e7a5      	b.n	8017144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80171f8:	f10c 0801 	add.w	r8, ip, #1
 80171fc:	44a4      	add	ip, r4
 80171fe:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017200:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 8017204:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8017208:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801720c:	fa1f fc88 	uxth.w	ip, r8
 8017210:	e763      	b.n	80170da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8017212:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017216:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801721a:	1aad      	subs	r5, r5, r2
 801721c:	b2ad      	uxth	r5, r5
 801721e:	2d00      	cmp	r5, #0
 8017220:	bf18      	it	ne
 8017222:	2200      	movne	r2, #0
 8017224:	9201      	str	r2, [sp, #4]
 8017226:	e744      	b.n	80170b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8017228:	4b03      	ldr	r3, [pc, #12]	; (8017238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801722a:	6818      	ldr	r0, [r3, #0]
 801722c:	6803      	ldr	r3, [r0, #0]
 801722e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017230:	4798      	blx	r3
 8017232:	b01f      	add	sp, #124	; 0x7c
 8017234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017238:	20014fd4 	.word	0x20014fd4

0801723c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801723c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017240:	b08f      	sub	sp, #60	; 0x3c
 8017242:	461c      	mov	r4, r3
 8017244:	9203      	str	r2, [sp, #12]
 8017246:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801724a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801724c:	9202      	str	r2, [sp, #8]
 801724e:	460f      	mov	r7, r1
 8017250:	2a00      	cmp	r2, #0
 8017252:	f000 8128 	beq.w	80174a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8017256:	6820      	ldr	r0, [r4, #0]
 8017258:	6861      	ldr	r1, [r4, #4]
 801725a:	aa0a      	add	r2, sp, #40	; 0x28
 801725c:	c203      	stmia	r2!, {r0, r1}
 801725e:	6818      	ldr	r0, [r3, #0]
 8017260:	6859      	ldr	r1, [r3, #4]
 8017262:	aa0c      	add	r2, sp, #48	; 0x30
 8017264:	c203      	stmia	r2!, {r0, r1}
 8017266:	a80a      	add	r0, sp, #40	; 0x28
 8017268:	f7f9 fa60 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801726c:	4621      	mov	r1, r4
 801726e:	a80c      	add	r0, sp, #48	; 0x30
 8017270:	f7f9 faa0 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017274:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017278:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801727c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 8017280:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8017284:	bfde      	ittt	le
 8017286:	b2b3      	uxthle	r3, r6
 8017288:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801728c:	fb92 f3f3 	sdivle	r3, r2, r3
 8017290:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017294:	bfc8      	it	gt
 8017296:	2301      	movgt	r3, #1
 8017298:	fb92 f1f3 	sdiv	r1, r2, r3
 801729c:	fa1f fc81 	uxth.w	ip, r1
 80172a0:	fb0c 2413 	mls	r4, ip, r3, r2
 80172a4:	fb14 f406 	smulbb	r4, r4, r6
 80172a8:	441d      	add	r5, r3
 80172aa:	4404      	add	r4, r0
 80172ac:	4661      	mov	r1, ip
 80172ae:	3d01      	subs	r5, #1
 80172b0:	b2a4      	uxth	r4, r4
 80172b2:	fb95 f5f3 	sdiv	r5, r5, r3
 80172b6:	b121      	cbz	r1, 80172c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 80172b8:	9b03      	ldr	r3, [sp, #12]
 80172ba:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80172be:	ba1b      	rev	r3, r3
 80172c0:	441f      	add	r7, r3
 80172c2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80172c6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80172ca:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80172ce:	4418      	add	r0, r3
 80172d0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80172d4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 80172d8:	441a      	add	r2, r3
 80172da:	4b74      	ldr	r3, [pc, #464]	; (80174ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80172dc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80172e0:	6818      	ldr	r0, [r3, #0]
 80172e2:	6803      	ldr	r3, [r0, #0]
 80172e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80172e6:	4798      	blx	r3
 80172e8:	4a71      	ldr	r2, [pc, #452]	; (80174b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80172ea:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80172ee:	8813      	ldrh	r3, [r2, #0]
 80172f0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 80172f4:	9209      	str	r2, [sp, #36]	; 0x24
 80172f6:	fb03 c101 	mla	r1, r3, r1, ip
 80172fa:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80172fe:	4373      	muls	r3, r6
 8017300:	b2ad      	uxth	r5, r5
 8017302:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017306:	00ad      	lsls	r5, r5, #2
 8017308:	2c00      	cmp	r4, #0
 801730a:	9304      	str	r3, [sp, #16]
 801730c:	f105 0304 	add.w	r3, r5, #4
 8017310:	9305      	str	r3, [sp, #20]
 8017312:	bf0c      	ite	eq
 8017314:	46c8      	moveq	r8, r9
 8017316:	f04f 0800 	movne.w	r8, #0
 801731a:	2300      	movs	r3, #0
 801731c:	fa1f f888 	uxth.w	r8, r8
 8017320:	9301      	str	r3, [sp, #4]
 8017322:	9a04      	ldr	r2, [sp, #16]
 8017324:	4282      	cmp	r2, r0
 8017326:	f240 80b9 	bls.w	801749c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801732a:	b95b      	cbnz	r3, 8017344 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801732c:	783a      	ldrb	r2, [r7, #0]
 801732e:	0993      	lsrs	r3, r2, #6
 8017330:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8017334:	9201      	str	r2, [sp, #4]
 8017336:	1e5a      	subs	r2, r3, #1
 8017338:	2a02      	cmp	r2, #2
 801733a:	bf8d      	iteet	hi
 801733c:	787b      	ldrbhi	r3, [r7, #1]
 801733e:	3701      	addls	r7, #1
 8017340:	b29b      	uxthls	r3, r3
 8017342:	3702      	addhi	r7, #2
 8017344:	b184      	cbz	r4, 8017368 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8017346:	429c      	cmp	r4, r3
 8017348:	bf95      	itete	ls
 801734a:	1b1c      	subls	r4, r3, r4
 801734c:	1ae4      	subhi	r4, r4, r3
 801734e:	fa1f fa84 	uxthls.w	sl, r4
 8017352:	b2a4      	uxthhi	r4, r4
 8017354:	bf87      	ittee	hi
 8017356:	46c4      	movhi	ip, r8
 8017358:	f04f 0a00 	movhi.w	sl, #0
 801735c:	fa1f fc89 	uxthls.w	ip, r9
 8017360:	2400      	movls	r4, #0
 8017362:	4653      	mov	r3, sl
 8017364:	46e0      	mov	r8, ip
 8017366:	e7dc      	b.n	8017322 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8017368:	2204      	movs	r2, #4
 801736a:	4615      	mov	r5, r2
 801736c:	9905      	ldr	r1, [sp, #20]
 801736e:	9a01      	ldr	r2, [sp, #4]
 8017370:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017374:	9903      	ldr	r1, [sp, #12]
 8017376:	588a      	ldr	r2, [r1, r2]
 8017378:	4543      	cmp	r3, r8
 801737a:	bf27      	ittee	cs
 801737c:	eba3 0a08 	subcs.w	sl, r3, r8
 8017380:	46c6      	movcs	lr, r8
 8017382:	eba8 0c03 	subcc.w	ip, r8, r3
 8017386:	469e      	movcc	lr, r3
 8017388:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801738c:	bf27      	ittee	cs
 801738e:	fa1f fa8a 	uxthcs.w	sl, sl
 8017392:	46a4      	movcs	ip, r4
 8017394:	fa1f fc8c 	uxthcc.w	ip, ip
 8017398:	46a2      	movcc	sl, r4
 801739a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801739e:	2900      	cmp	r1, #0
 80173a0:	d066      	beq.n	8017470 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80173a2:	29ff      	cmp	r1, #255	; 0xff
 80173a4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80173a8:	d114      	bne.n	80173d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80173aa:	9d02      	ldr	r5, [sp, #8]
 80173ac:	2dff      	cmp	r5, #255	; 0xff
 80173ae:	d111      	bne.n	80173d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80173b0:	0951      	lsrs	r1, r2, #5
 80173b2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80173b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80173ba:	f026 0607 	bic.w	r6, r6, #7
 80173be:	430e      	orrs	r6, r1
 80173c0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80173c4:	4316      	orrs	r6, r2
 80173c6:	b2b6      	uxth	r6, r6
 80173c8:	4486      	add	lr, r0
 80173ca:	4586      	cmp	lr, r0
 80173cc:	d051      	beq.n	8017472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80173ce:	f820 6b02 	strh.w	r6, [r0], #2
 80173d2:	e7fa      	b.n	80173ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80173d4:	9d02      	ldr	r5, [sp, #8]
 80173d6:	4369      	muls	r1, r5
 80173d8:	1c4d      	adds	r5, r1, #1
 80173da:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80173de:	122d      	asrs	r5, r5, #8
 80173e0:	ea6f 0b05 	mvn.w	fp, r5
 80173e4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80173e8:	b2ad      	uxth	r5, r5
 80173ea:	b2f6      	uxtb	r6, r6
 80173ec:	b2d2      	uxtb	r2, r2
 80173ee:	fb11 f105 	smulbb	r1, r1, r5
 80173f2:	fb16 f605 	smulbb	r6, r6, r5
 80173f6:	fb12 f205 	smulbb	r2, r2, r5
 80173fa:	b289      	uxth	r1, r1
 80173fc:	b2b6      	uxth	r6, r6
 80173fe:	b292      	uxth	r2, r2
 8017400:	9106      	str	r1, [sp, #24]
 8017402:	9607      	str	r6, [sp, #28]
 8017404:	9208      	str	r2, [sp, #32]
 8017406:	4486      	add	lr, r0
 8017408:	fa5f fb8b 	uxtb.w	fp, fp
 801740c:	4586      	cmp	lr, r0
 801740e:	d030      	beq.n	8017472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017410:	8802      	ldrh	r2, [r0, #0]
 8017412:	9906      	ldr	r1, [sp, #24]
 8017414:	1216      	asrs	r6, r2, #8
 8017416:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801741a:	10d5      	asrs	r5, r2, #3
 801741c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017420:	fb06 160b 	mla	r6, r6, fp, r1
 8017424:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017428:	9907      	ldr	r1, [sp, #28]
 801742a:	00d2      	lsls	r2, r2, #3
 801742c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017430:	fb05 150b 	mla	r5, r5, fp, r1
 8017434:	b2d2      	uxtb	r2, r2
 8017436:	9908      	ldr	r1, [sp, #32]
 8017438:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801743c:	b2b6      	uxth	r6, r6
 801743e:	fb02 120b 	mla	r2, r2, fp, r1
 8017442:	b292      	uxth	r2, r2
 8017444:	1c71      	adds	r1, r6, #1
 8017446:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801744a:	1c51      	adds	r1, r2, #1
 801744c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017450:	b2ad      	uxth	r5, r5
 8017452:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017456:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801745a:	4316      	orrs	r6, r2
 801745c:	1c6a      	adds	r2, r5, #1
 801745e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017462:	096d      	lsrs	r5, r5, #5
 8017464:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017468:	432e      	orrs	r6, r5
 801746a:	f820 6b02 	strh.w	r6, [r0], #2
 801746e:	e7cd      	b.n	801740c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8017470:	4470      	add	r0, lr
 8017472:	4543      	cmp	r3, r8
 8017474:	f4ff af75 	bcc.w	8017362 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8017478:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801747c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801747e:	fa1f fc89 	uxth.w	ip, r9
 8017482:	eba4 040c 	sub.w	r4, r4, ip
 8017486:	881b      	ldrh	r3, [r3, #0]
 8017488:	b2a4      	uxth	r4, r4
 801748a:	2c00      	cmp	r4, #0
 801748c:	eba3 0309 	sub.w	r3, r3, r9
 8017490:	bf18      	it	ne
 8017492:	f04f 0c00 	movne.w	ip, #0
 8017496:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801749a:	e762      	b.n	8017362 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801749c:	4b03      	ldr	r3, [pc, #12]	; (80174ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801749e:	6818      	ldr	r0, [r3, #0]
 80174a0:	6803      	ldr	r3, [r0, #0]
 80174a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80174a4:	4798      	blx	r3
 80174a6:	b00f      	add	sp, #60	; 0x3c
 80174a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174ac:	20014fd4 	.word	0x20014fd4
 80174b0:	20014fce 	.word	0x20014fce

080174b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80174b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174b8:	b093      	sub	sp, #76	; 0x4c
 80174ba:	461c      	mov	r4, r3
 80174bc:	9205      	str	r2, [sp, #20]
 80174be:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 80174c2:	9101      	str	r1, [sp, #4]
 80174c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80174c6:	9202      	str	r2, [sp, #8]
 80174c8:	2a00      	cmp	r2, #0
 80174ca:	f000 812c 	beq.w	8017726 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80174ce:	6820      	ldr	r0, [r4, #0]
 80174d0:	6861      	ldr	r1, [r4, #4]
 80174d2:	aa0e      	add	r2, sp, #56	; 0x38
 80174d4:	c203      	stmia	r2!, {r0, r1}
 80174d6:	6818      	ldr	r0, [r3, #0]
 80174d8:	6859      	ldr	r1, [r3, #4]
 80174da:	aa10      	add	r2, sp, #64	; 0x40
 80174dc:	c203      	stmia	r2!, {r0, r1}
 80174de:	a80e      	add	r0, sp, #56	; 0x38
 80174e0:	f7f9 f924 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174e4:	4621      	mov	r1, r4
 80174e6:	a810      	add	r0, sp, #64	; 0x40
 80174e8:	f7f9 f964 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80174ec:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80174f0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80174f4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80174f8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80174fc:	bfde      	ittt	le
 80174fe:	b2b3      	uxthle	r3, r6
 8017500:	f44f 6280 	movle.w	r2, #1024	; 0x400
 8017504:	fb92 f3f3 	sdivle	r3, r2, r3
 8017508:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801750c:	bfc8      	it	gt
 801750e:	2301      	movgt	r3, #1
 8017510:	fb92 f1f3 	sdiv	r1, r2, r3
 8017514:	fa1f fc81 	uxth.w	ip, r1
 8017518:	fb0c 2413 	mls	r4, ip, r3, r2
 801751c:	fb14 f406 	smulbb	r4, r4, r6
 8017520:	441d      	add	r5, r3
 8017522:	4404      	add	r4, r0
 8017524:	4661      	mov	r1, ip
 8017526:	3d01      	subs	r5, #1
 8017528:	b2a4      	uxth	r4, r4
 801752a:	fb95 f5f3 	sdiv	r5, r5, r3
 801752e:	b131      	cbz	r1, 801753e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8017530:	9b05      	ldr	r3, [sp, #20]
 8017532:	9901      	ldr	r1, [sp, #4]
 8017534:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8017538:	ba1b      	rev	r3, r3
 801753a:	4419      	add	r1, r3
 801753c:	9101      	str	r1, [sp, #4]
 801753e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017542:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8017546:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801754a:	4418      	add	r0, r3
 801754c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 8017550:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 8017554:	441a      	add	r2, r3
 8017556:	4b75      	ldr	r3, [pc, #468]	; (801772c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8017558:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801755c:	6818      	ldr	r0, [r3, #0]
 801755e:	6803      	ldr	r3, [r0, #0]
 8017560:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017562:	4798      	blx	r3
 8017564:	4972      	ldr	r1, [pc, #456]	; (8017730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8017566:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801756a:	880b      	ldrh	r3, [r1, #0]
 801756c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017570:	910d      	str	r1, [sp, #52]	; 0x34
 8017572:	fb03 c202 	mla	r2, r3, r2, ip
 8017576:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801757a:	4373      	muls	r3, r6
 801757c:	b2ad      	uxth	r5, r5
 801757e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017582:	00ad      	lsls	r5, r5, #2
 8017584:	9308      	str	r3, [sp, #32]
 8017586:	1d2b      	adds	r3, r5, #4
 8017588:	9309      	str	r3, [sp, #36]	; 0x24
 801758a:	9b02      	ldr	r3, [sp, #8]
 801758c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017590:	9106      	str	r1, [sp, #24]
 8017592:	43da      	mvns	r2, r3
 8017594:	2c00      	cmp	r4, #0
 8017596:	bf0c      	ite	eq
 8017598:	46dc      	moveq	ip, fp
 801759a:	f04f 0c00 	movne.w	ip, #0
 801759e:	2300      	movs	r3, #0
 80175a0:	b2d2      	uxtb	r2, r2
 80175a2:	fa1f fc8c 	uxth.w	ip, ip
 80175a6:	9303      	str	r3, [sp, #12]
 80175a8:	9207      	str	r2, [sp, #28]
 80175aa:	9a08      	ldr	r2, [sp, #32]
 80175ac:	4282      	cmp	r2, r0
 80175ae:	f240 80b5 	bls.w	801771c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80175b2:	b963      	cbnz	r3, 80175ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80175b4:	9b01      	ldr	r3, [sp, #4]
 80175b6:	781a      	ldrb	r2, [r3, #0]
 80175b8:	0993      	lsrs	r3, r2, #6
 80175ba:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80175be:	9203      	str	r2, [sp, #12]
 80175c0:	1e5a      	subs	r2, r3, #1
 80175c2:	2a02      	cmp	r2, #2
 80175c4:	d815      	bhi.n	80175f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 80175c6:	9a01      	ldr	r2, [sp, #4]
 80175c8:	3201      	adds	r2, #1
 80175ca:	9201      	str	r2, [sp, #4]
 80175cc:	b29b      	uxth	r3, r3
 80175ce:	b1b4      	cbz	r4, 80175fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 80175d0:	429c      	cmp	r4, r3
 80175d2:	bf95      	itete	ls
 80175d4:	1b1c      	subls	r4, r3, r4
 80175d6:	1ae4      	subhi	r4, r4, r3
 80175d8:	fa1f f884 	uxthls.w	r8, r4
 80175dc:	b2a4      	uxthhi	r4, r4
 80175de:	bf87      	ittee	hi
 80175e0:	4666      	movhi	r6, ip
 80175e2:	f04f 0800 	movhi.w	r8, #0
 80175e6:	fa1f f68b 	uxthls.w	r6, fp
 80175ea:	2400      	movls	r4, #0
 80175ec:	4643      	mov	r3, r8
 80175ee:	46b4      	mov	ip, r6
 80175f0:	e7db      	b.n	80175aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 80175f2:	9a01      	ldr	r2, [sp, #4]
 80175f4:	9b01      	ldr	r3, [sp, #4]
 80175f6:	3202      	adds	r2, #2
 80175f8:	785b      	ldrb	r3, [r3, #1]
 80175fa:	9201      	str	r2, [sp, #4]
 80175fc:	e7e7      	b.n	80175ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 80175fe:	2203      	movs	r2, #3
 8017600:	4615      	mov	r5, r2
 8017602:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017604:	9a03      	ldr	r2, [sp, #12]
 8017606:	fb15 1202 	smlabb	r2, r5, r2, r1
 801760a:	9905      	ldr	r1, [sp, #20]
 801760c:	4563      	cmp	r3, ip
 801760e:	eb01 0502 	add.w	r5, r1, r2
 8017612:	9902      	ldr	r1, [sp, #8]
 8017614:	bf29      	itett	cs
 8017616:	eba3 080c 	subcs.w	r8, r3, ip
 801761a:	ebac 0603 	subcc.w	r6, ip, r3
 801761e:	fa1f f888 	uxthcs.w	r8, r8
 8017622:	46e1      	movcs	r9, ip
 8017624:	bf2f      	iteee	cs
 8017626:	4626      	movcs	r6, r4
 8017628:	b2b6      	uxthcc	r6, r6
 801762a:	4699      	movcc	r9, r3
 801762c:	46a0      	movcc	r8, r4
 801762e:	29ff      	cmp	r1, #255	; 0xff
 8017630:	d04a      	beq.n	80176c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8017632:	9f06      	ldr	r7, [sp, #24]
 8017634:	78a9      	ldrb	r1, [r5, #2]
 8017636:	9004      	str	r0, [sp, #16]
 8017638:	4379      	muls	r1, r7
 801763a:	910a      	str	r1, [sp, #40]	; 0x28
 801763c:	7869      	ldrb	r1, [r5, #1]
 801763e:	4379      	muls	r1, r7
 8017640:	910b      	str	r1, [sp, #44]	; 0x2c
 8017642:	9905      	ldr	r1, [sp, #20]
 8017644:	5c8a      	ldrb	r2, [r1, r2]
 8017646:	437a      	muls	r2, r7
 8017648:	920c      	str	r2, [sp, #48]	; 0x30
 801764a:	46ca      	mov	sl, r9
 801764c:	f1ba 0f00 	cmp.w	sl, #0
 8017650:	d03d      	beq.n	80176ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8017652:	9a04      	ldr	r2, [sp, #16]
 8017654:	9f07      	ldr	r7, [sp, #28]
 8017656:	8812      	ldrh	r2, [r2, #0]
 8017658:	1215      	asrs	r5, r2, #8
 801765a:	46be      	mov	lr, r7
 801765c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017660:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017662:	10d1      	asrs	r1, r2, #3
 8017664:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017668:	fb05 750e 	mla	r5, r5, lr, r7
 801766c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017670:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8017672:	00d2      	lsls	r2, r2, #3
 8017674:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8017678:	fb01 710e 	mla	r1, r1, lr, r7
 801767c:	b2d2      	uxtb	r2, r2
 801767e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8017680:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017684:	b2ad      	uxth	r5, r5
 8017686:	fb02 720e 	mla	r2, r2, lr, r7
 801768a:	b292      	uxth	r2, r2
 801768c:	f105 0e01 	add.w	lr, r5, #1
 8017690:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017694:	f102 0e01 	add.w	lr, r2, #1
 8017698:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801769c:	b289      	uxth	r1, r1
 801769e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80176a2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80176a6:	4315      	orrs	r5, r2
 80176a8:	1c4a      	adds	r2, r1, #1
 80176aa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80176ae:	0949      	lsrs	r1, r1, #5
 80176b0:	9a04      	ldr	r2, [sp, #16]
 80176b2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80176b6:	430d      	orrs	r5, r1
 80176b8:	f822 5b02 	strh.w	r5, [r2], #2
 80176bc:	f10a 3aff 	add.w	sl, sl, #4294967295
 80176c0:	9204      	str	r2, [sp, #16]
 80176c2:	fa1f fa8a 	uxth.w	sl, sl
 80176c6:	e7c1      	b.n	801764c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 80176c8:	4649      	mov	r1, r9
 80176ca:	4686      	mov	lr, r0
 80176cc:	b999      	cbnz	r1, 80176f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80176ce:	4563      	cmp	r3, ip
 80176d0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 80176d4:	d38a      	bcc.n	80175ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80176d6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 80176da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80176dc:	fa1f f68b 	uxth.w	r6, fp
 80176e0:	1ba4      	subs	r4, r4, r6
 80176e2:	881b      	ldrh	r3, [r3, #0]
 80176e4:	b2a4      	uxth	r4, r4
 80176e6:	2c00      	cmp	r4, #0
 80176e8:	eba3 030b 	sub.w	r3, r3, fp
 80176ec:	bf18      	it	ne
 80176ee:	2600      	movne	r6, #0
 80176f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80176f4:	e77a      	b.n	80175ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 80176f6:	78aa      	ldrb	r2, [r5, #2]
 80176f8:	4f0e      	ldr	r7, [pc, #56]	; (8017734 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 80176fa:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 80176fe:	786a      	ldrb	r2, [r5, #1]
 8017700:	00d2      	lsls	r2, r2, #3
 8017702:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017706:	ea4a 0202 	orr.w	r2, sl, r2
 801770a:	f895 a000 	ldrb.w	sl, [r5]
 801770e:	3901      	subs	r1, #1
 8017710:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8017714:	f82e 2b02 	strh.w	r2, [lr], #2
 8017718:	b289      	uxth	r1, r1
 801771a:	e7d7      	b.n	80176cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801771c:	4b03      	ldr	r3, [pc, #12]	; (801772c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801771e:	6818      	ldr	r0, [r3, #0]
 8017720:	6803      	ldr	r3, [r0, #0]
 8017722:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017724:	4798      	blx	r3
 8017726:	b013      	add	sp, #76	; 0x4c
 8017728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801772c:	20014fd4 	.word	0x20014fd4
 8017730:	20014fce 	.word	0x20014fce
 8017734:	fffff800 	.word	0xfffff800

08017738 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8017738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801773c:	b09d      	sub	sp, #116	; 0x74
 801773e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 8017742:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 8017746:	920e      	str	r2, [sp, #56]	; 0x38
 8017748:	461c      	mov	r4, r3
 801774a:	4683      	mov	fp, r0
 801774c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801774e:	2a00      	cmp	r2, #0
 8017750:	f000 81e0 	beq.w	8017b14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8017754:	6820      	ldr	r0, [r4, #0]
 8017756:	6861      	ldr	r1, [r4, #4]
 8017758:	aa18      	add	r2, sp, #96	; 0x60
 801775a:	c203      	stmia	r2!, {r0, r1}
 801775c:	6818      	ldr	r0, [r3, #0]
 801775e:	6859      	ldr	r1, [r3, #4]
 8017760:	aa1a      	add	r2, sp, #104	; 0x68
 8017762:	c203      	stmia	r2!, {r0, r1}
 8017764:	a818      	add	r0, sp, #96	; 0x60
 8017766:	f7f8 ffe1 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801776a:	4621      	mov	r1, r4
 801776c:	a81a      	add	r0, sp, #104	; 0x68
 801776e:	f7f9 f821 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017772:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 8017776:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801777a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801777e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8017782:	bfd7      	itett	le
 8017784:	b29a      	uxthle	r2, r3
 8017786:	2201      	movgt	r2, #1
 8017788:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801778c:	fb91 f2f2 	sdivle	r2, r1, r2
 8017790:	9202      	str	r2, [sp, #8]
 8017792:	9802      	ldr	r0, [sp, #8]
 8017794:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 8017798:	fb92 f0f0 	sdiv	r0, r2, r0
 801779c:	b280      	uxth	r0, r0
 801779e:	900f      	str	r0, [sp, #60]	; 0x3c
 80177a0:	9902      	ldr	r1, [sp, #8]
 80177a2:	9802      	ldr	r0, [sp, #8]
 80177a4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80177a6:	440c      	add	r4, r1
 80177a8:	fb05 2510 	mls	r5, r5, r0, r2
 80177ac:	fb15 f503 	smulbb	r5, r5, r3
 80177b0:	3c01      	subs	r4, #1
 80177b2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 80177b6:	fb94 f4f1 	sdiv	r4, r4, r1
 80177ba:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 80177be:	440d      	add	r5, r1
 80177c0:	4419      	add	r1, r3
 80177c2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 80177c6:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 80177ca:	441a      	add	r2, r3
 80177cc:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 80177d0:	9306      	str	r3, [sp, #24]
 80177d2:	4bb3      	ldr	r3, [pc, #716]	; (8017aa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 80177d4:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 80177d8:	6818      	ldr	r0, [r3, #0]
 80177da:	6803      	ldr	r3, [r0, #0]
 80177dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80177de:	4798      	blx	r3
 80177e0:	4bb0      	ldr	r3, [pc, #704]	; (8017aa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 80177e2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 80177e6:	881a      	ldrh	r2, [r3, #0]
 80177e8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 80177ec:	9316      	str	r3, [sp, #88]	; 0x58
 80177ee:	fb02 7101 	mla	r1, r2, r1, r7
 80177f2:	3401      	adds	r4, #1
 80177f4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 80177f8:	b2a4      	uxth	r4, r4
 80177fa:	4356      	muls	r6, r2
 80177fc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8017800:	00a4      	lsls	r4, r4, #2
 8017802:	920a      	str	r2, [sp, #40]	; 0x28
 8017804:	1d22      	adds	r2, r4, #4
 8017806:	b2ad      	uxth	r5, r5
 8017808:	9213      	str	r2, [sp, #76]	; 0x4c
 801780a:	4ba7      	ldr	r3, [pc, #668]	; (8017aa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801780c:	9a06      	ldr	r2, [sp, #24]
 801780e:	2d00      	cmp	r5, #0
 8017810:	bf0c      	ite	eq
 8017812:	4611      	moveq	r1, r2
 8017814:	2100      	movne	r1, #0
 8017816:	2200      	movs	r2, #0
 8017818:	eba3 030b 	sub.w	r3, r3, fp
 801781c:	b289      	uxth	r1, r1
 801781e:	920d      	str	r2, [sp, #52]	; 0x34
 8017820:	9317      	str	r3, [sp, #92]	; 0x5c
 8017822:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017824:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017826:	fa12 f383 	uxtah	r3, r2, r3
 801782a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801782c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017830:	3304      	adds	r3, #4
 8017832:	9308      	str	r3, [sp, #32]
 8017834:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017836:	4543      	cmp	r3, r8
 8017838:	f240 8167 	bls.w	8017b0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801783c:	9a02      	ldr	r2, [sp, #8]
 801783e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 8017842:	fbb5 f3f3 	udiv	r3, r5, r3
 8017846:	1ad3      	subs	r3, r2, r3
 8017848:	b29b      	uxth	r3, r3
 801784a:	9314      	str	r3, [sp, #80]	; 0x50
 801784c:	9b08      	ldr	r3, [sp, #32]
 801784e:	9808      	ldr	r0, [sp, #32]
 8017850:	785a      	ldrb	r2, [r3, #1]
 8017852:	789b      	ldrb	r3, [r3, #2]
 8017854:	7800      	ldrb	r0, [r0, #0]
 8017856:	9010      	str	r0, [sp, #64]	; 0x40
 8017858:	021b      	lsls	r3, r3, #8
 801785a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801785e:	9a08      	ldr	r2, [sp, #32]
 8017860:	78d2      	ldrb	r2, [r2, #3]
 8017862:	4313      	orrs	r3, r2
 8017864:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017866:	3001      	adds	r0, #1
 8017868:	441a      	add	r2, r3
 801786a:	9007      	str	r0, [sp, #28]
 801786c:	1c50      	adds	r0, r2, #1
 801786e:	9005      	str	r0, [sp, #20]
 8017870:	7852      	ldrb	r2, [r2, #1]
 8017872:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017874:	0212      	lsls	r2, r2, #8
 8017876:	5cc3      	ldrb	r3, [r0, r3]
 8017878:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801787c:	431a      	orrs	r2, r3
 801787e:	b293      	uxth	r3, r2
 8017880:	930b      	str	r3, [sp, #44]	; 0x2c
 8017882:	2300      	movs	r3, #0
 8017884:	9309      	str	r3, [sp, #36]	; 0x24
 8017886:	2301      	movs	r3, #1
 8017888:	9301      	str	r3, [sp, #4]
 801788a:	9304      	str	r3, [sp, #16]
 801788c:	2300      	movs	r3, #0
 801788e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 8017892:	9303      	str	r3, [sp, #12]
 8017894:	f04f 0e01 	mov.w	lr, #1
 8017898:	2d00      	cmp	r5, #0
 801789a:	d07c      	beq.n	8017996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801789c:	45ae      	cmp	lr, r5
 801789e:	d26b      	bcs.n	8017978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 80178a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80178a2:	eba5 050e 	sub.w	r5, r5, lr
 80178a6:	4543      	cmp	r3, r8
 80178a8:	b2ad      	uxth	r5, r5
 80178aa:	460c      	mov	r4, r1
 80178ac:	d802      	bhi.n	80178b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 80178ae:	e070      	b.n	8017992 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 80178b0:	2b00      	cmp	r3, #0
 80178b2:	d15c      	bne.n	801796e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80178b4:	9b05      	ldr	r3, [sp, #20]
 80178b6:	9a04      	ldr	r2, [sp, #16]
 80178b8:	785b      	ldrb	r3, [r3, #1]
 80178ba:	9904      	ldr	r1, [sp, #16]
 80178bc:	f1c2 0207 	rsb	r2, r2, #7
 80178c0:	4093      	lsls	r3, r2
 80178c2:	005b      	lsls	r3, r3, #1
 80178c4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 80178c8:	9b05      	ldr	r3, [sp, #20]
 80178ca:	781b      	ldrb	r3, [r3, #0]
 80178cc:	410b      	asrs	r3, r1
 80178ce:	3101      	adds	r1, #1
 80178d0:	b2c9      	uxtb	r1, r1
 80178d2:	2908      	cmp	r1, #8
 80178d4:	9104      	str	r1, [sp, #16]
 80178d6:	9905      	ldr	r1, [sp, #20]
 80178d8:	bf0a      	itet	eq
 80178da:	3102      	addeq	r1, #2
 80178dc:	3101      	addne	r1, #1
 80178de:	9105      	streq	r1, [sp, #20]
 80178e0:	b2db      	uxtb	r3, r3
 80178e2:	bf0a      	itet	eq
 80178e4:	2100      	moveq	r1, #0
 80178e6:	9105      	strne	r1, [sp, #20]
 80178e8:	9104      	streq	r1, [sp, #16]
 80178ea:	4313      	orrs	r3, r2
 80178ec:	9910      	ldr	r1, [sp, #64]	; 0x40
 80178ee:	b29a      	uxth	r2, r3
 80178f0:	4291      	cmp	r1, r2
 80178f2:	d30a      	bcc.n	801790a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 80178f4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 80178f8:	2301      	movs	r3, #1
 80178fa:	9907      	ldr	r1, [sp, #28]
 80178fc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8017900:	d30f      	bcc.n	8017922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017902:	2100      	movs	r1, #0
 8017904:	9301      	str	r3, [sp, #4]
 8017906:	9103      	str	r1, [sp, #12]
 8017908:	e032      	b.n	8017970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801790a:	9b07      	ldr	r3, [sp, #28]
 801790c:	429a      	cmp	r2, r3
 801790e:	d318      	bcc.n	8017942 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8017910:	9b01      	ldr	r3, [sp, #4]
 8017912:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 8017916:	445b      	add	r3, fp
 8017918:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801791c:	9b01      	ldr	r3, [sp, #4]
 801791e:	3301      	adds	r3, #1
 8017920:	b29b      	uxth	r3, r3
 8017922:	9907      	ldr	r1, [sp, #28]
 8017924:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 8017928:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801792c:	7108      	strb	r0, [r1, #4]
 801792e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017930:	80c8      	strh	r0, [r1, #6]
 8017932:	9801      	ldr	r0, [sp, #4]
 8017934:	3001      	adds	r0, #1
 8017936:	7148      	strb	r0, [r1, #5]
 8017938:	9907      	ldr	r1, [sp, #28]
 801793a:	3101      	adds	r1, #1
 801793c:	b289      	uxth	r1, r1
 801793e:	9107      	str	r1, [sp, #28]
 8017940:	e7df      	b.n	8017902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8017942:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8017946:	4611      	mov	r1, r2
 8017948:	795b      	ldrb	r3, [r3, #5]
 801794a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801794e:	4458      	add	r0, fp
 8017950:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8017952:	4406      	add	r6, r0
 8017954:	2e00      	cmp	r6, #0
 8017956:	dd06      	ble.n	8017966 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8017958:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801795c:	790e      	ldrb	r6, [r1, #4]
 801795e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8017962:	88c9      	ldrh	r1, [r1, #6]
 8017964:	e7f4      	b.n	8017950 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8017966:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801796a:	b29b      	uxth	r3, r3
 801796c:	e7c5      	b.n	80178fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801796e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017970:	920b      	str	r2, [sp, #44]	; 0x2c
 8017972:	4621      	mov	r1, r4
 8017974:	469e      	mov	lr, r3
 8017976:	e78f      	b.n	8017898 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8017978:	9a03      	ldr	r2, [sp, #12]
 801797a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801797e:	442a      	add	r2, r5
 8017980:	ebae 0305 	sub.w	r3, lr, r5
 8017984:	b292      	uxth	r2, r2
 8017986:	b29b      	uxth	r3, r3
 8017988:	9203      	str	r2, [sp, #12]
 801798a:	2500      	movs	r5, #0
 801798c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801798e:	4542      	cmp	r2, r8
 8017990:	d88e      	bhi.n	80178b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8017992:	4621      	mov	r1, r4
 8017994:	e74e      	b.n	8017834 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8017996:	458e      	cmp	lr, r1
 8017998:	bf29      	itett	cs
 801799a:	ebae 0301 	subcs.w	r3, lr, r1
 801799e:	eba1 040e 	subcc.w	r4, r1, lr
 80179a2:	b29b      	uxthcs	r3, r3
 80179a4:	910c      	strcs	r1, [sp, #48]	; 0x30
 80179a6:	bf2f      	iteee	cs
 80179a8:	462c      	movcs	r4, r5
 80179aa:	b2a4      	uxthcc	r4, r4
 80179ac:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 80179b0:	462b      	movcc	r3, r5
 80179b2:	f04f 0900 	mov.w	r9, #0
 80179b6:	9a03      	ldr	r2, [sp, #12]
 80179b8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80179ba:	444a      	add	r2, r9
 80179bc:	4548      	cmp	r0, r9
 80179be:	b292      	uxth	r2, r2
 80179c0:	d074      	beq.n	8017aac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 80179c2:	445a      	add	r2, fp
 80179c4:	2004      	movs	r0, #4
 80179c6:	4605      	mov	r5, r0
 80179c8:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 80179cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80179ce:	fb15 0202 	smlabb	r2, r5, r2, r0
 80179d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80179d4:	5880      	ldr	r0, [r0, r2]
 80179d6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 80179da:	d014      	beq.n	8017a06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80179dc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80179e0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 80179e4:	d112      	bne.n	8017a0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80179e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80179e8:	2aff      	cmp	r2, #255	; 0xff
 80179ea:	d10f      	bne.n	8017a0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 80179ec:	0942      	lsrs	r2, r0, #5
 80179ee:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80179f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80179f6:	f025 0507 	bic.w	r5, r5, #7
 80179fa:	4315      	orrs	r5, r2
 80179fc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017a00:	4305      	orrs	r5, r0
 8017a02:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8017a06:	f109 0901 	add.w	r9, r9, #1
 8017a0a:	e7d4      	b.n	80179b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8017a0c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8017a10:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8017a14:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 8017a18:	9215      	str	r2, [sp, #84]	; 0x54
 8017a1a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017a1c:	fb02 fa0a 	mul.w	sl, r2, sl
 8017a20:	f10a 0201 	add.w	r2, sl, #1
 8017a24:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8017a28:	ea4f 272c 	mov.w	r7, ip, asr #8
 8017a2c:	1212      	asrs	r2, r2, #8
 8017a2e:	fa1f fa82 	uxth.w	sl, r2
 8017a32:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8017a36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017a3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017a3e:	43d2      	mvns	r2, r2
 8017a40:	b2d2      	uxtb	r2, r2
 8017a42:	fb16 f60a 	smulbb	r6, r6, sl
 8017a46:	fa5f fc8c 	uxtb.w	ip, ip
 8017a4a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017a4e:	b2c0      	uxtb	r0, r0
 8017a50:	fb07 6702 	mla	r7, r7, r2, r6
 8017a54:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8017a58:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8017a5a:	fb10 f00a 	smulbb	r0, r0, sl
 8017a5e:	fb0c 0002 	mla	r0, ip, r2, r0
 8017a62:	b2ed      	uxtb	r5, r5
 8017a64:	b2bf      	uxth	r7, r7
 8017a66:	fb15 f50a 	smulbb	r5, r5, sl
 8017a6a:	b280      	uxth	r0, r0
 8017a6c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017a70:	fb06 5602 	mla	r6, r6, r2, r5
 8017a74:	1c7a      	adds	r2, r7, #1
 8017a76:	1c45      	adds	r5, r0, #1
 8017a78:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017a7c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017a80:	b2b6      	uxth	r6, r6
 8017a82:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017a86:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017a8a:	432f      	orrs	r7, r5
 8017a8c:	1c75      	adds	r5, r6, #1
 8017a8e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017a92:	096d      	lsrs	r5, r5, #5
 8017a94:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017a98:	432f      	orrs	r7, r5
 8017a9a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8017a9e:	e7b2      	b.n	8017a06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8017aa0:	20014fd4 	.word	0x20014fd4
 8017aa4:	20014fce 	.word	0x20014fce
 8017aa8:	fffff7fb 	.word	0xfffff7fb
 8017aac:	9203      	str	r2, [sp, #12]
 8017aae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017ab0:	458e      	cmp	lr, r1
 8017ab2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017ab6:	f4ff af68 	bcc.w	801798a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8017aba:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017abc:	9906      	ldr	r1, [sp, #24]
 8017abe:	8812      	ldrh	r2, [r2, #0]
 8017ac0:	1a52      	subs	r2, r2, r1
 8017ac2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8017ac6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017ac8:	9914      	ldr	r1, [sp, #80]	; 0x50
 8017aca:	3201      	adds	r2, #1
 8017acc:	428a      	cmp	r2, r1
 8017ace:	9209      	str	r2, [sp, #36]	; 0x24
 8017ad0:	d111      	bne.n	8017af6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8017ad2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 8017ad6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8017ada:	9b06      	ldr	r3, [sp, #24]
 8017adc:	eba5 0509 	sub.w	r5, r5, r9
 8017ae0:	b2ad      	uxth	r5, r5
 8017ae2:	2d00      	cmp	r5, #0
 8017ae4:	bf08      	it	eq
 8017ae6:	4619      	moveq	r1, r3
 8017ae8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017aea:	bf18      	it	ne
 8017aec:	2100      	movne	r1, #0
 8017aee:	3301      	adds	r3, #1
 8017af0:	930d      	str	r3, [sp, #52]	; 0x34
 8017af2:	b289      	uxth	r1, r1
 8017af4:	e695      	b.n	8017822 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8017af6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8017afa:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017afe:	1b2d      	subs	r5, r5, r4
 8017b00:	b2ad      	uxth	r5, r5
 8017b02:	2d00      	cmp	r5, #0
 8017b04:	bf18      	it	ne
 8017b06:	2400      	movne	r4, #0
 8017b08:	e740      	b.n	801798c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8017b0a:	4b04      	ldr	r3, [pc, #16]	; (8017b1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8017b0c:	6818      	ldr	r0, [r3, #0]
 8017b0e:	6803      	ldr	r3, [r0, #0]
 8017b10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b12:	4798      	blx	r3
 8017b14:	b01d      	add	sp, #116	; 0x74
 8017b16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b1a:	bf00      	nop
 8017b1c:	20014fd4 	.word	0x20014fd4

08017b20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b24:	b09f      	sub	sp, #124	; 0x7c
 8017b26:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 8017b2a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 8017b2e:	920a      	str	r2, [sp, #40]	; 0x28
 8017b30:	461d      	mov	r5, r3
 8017b32:	4604      	mov	r4, r0
 8017b34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017b36:	2a00      	cmp	r2, #0
 8017b38:	f000 81fa 	beq.w	8017f30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8017b3c:	6828      	ldr	r0, [r5, #0]
 8017b3e:	6869      	ldr	r1, [r5, #4]
 8017b40:	aa1a      	add	r2, sp, #104	; 0x68
 8017b42:	c203      	stmia	r2!, {r0, r1}
 8017b44:	6818      	ldr	r0, [r3, #0]
 8017b46:	6859      	ldr	r1, [r3, #4]
 8017b48:	aa1c      	add	r2, sp, #112	; 0x70
 8017b4a:	c203      	stmia	r2!, {r0, r1}
 8017b4c:	a81a      	add	r0, sp, #104	; 0x68
 8017b4e:	f7f8 fded 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b52:	4629      	mov	r1, r5
 8017b54:	a81c      	add	r0, sp, #112	; 0x70
 8017b56:	f7f8 fe2d 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b5a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 8017b5e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 8017b62:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 8017b66:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8017b6a:	bfd7      	itett	le
 8017b6c:	b29a      	uxthle	r2, r3
 8017b6e:	2201      	movgt	r2, #1
 8017b70:	f44f 6180 	movle.w	r1, #1024	; 0x400
 8017b74:	fb91 f2f2 	sdivle	r2, r1, r2
 8017b78:	9201      	str	r2, [sp, #4]
 8017b7a:	9801      	ldr	r0, [sp, #4]
 8017b7c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 8017b80:	fb92 f0f0 	sdiv	r0, r2, r0
 8017b84:	b280      	uxth	r0, r0
 8017b86:	9010      	str	r0, [sp, #64]	; 0x40
 8017b88:	9901      	ldr	r1, [sp, #4]
 8017b8a:	9801      	ldr	r0, [sp, #4]
 8017b8c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017b8e:	440e      	add	r6, r1
 8017b90:	fb05 2510 	mls	r5, r5, r0, r2
 8017b94:	fb15 f503 	smulbb	r5, r5, r3
 8017b98:	3e01      	subs	r6, #1
 8017b9a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8017b9e:	fb96 f6f1 	sdiv	r6, r6, r1
 8017ba2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 8017ba6:	440d      	add	r5, r1
 8017ba8:	4419      	add	r1, r3
 8017baa:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 8017bae:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 8017bb2:	441a      	add	r2, r3
 8017bb4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 8017bb8:	9304      	str	r3, [sp, #16]
 8017bba:	4b96      	ldr	r3, [pc, #600]	; (8017e14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8017bbc:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8017bc0:	6818      	ldr	r0, [r3, #0]
 8017bc2:	6803      	ldr	r3, [r0, #0]
 8017bc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017bc6:	4798      	blx	r3
 8017bc8:	4b93      	ldr	r3, [pc, #588]	; (8017e18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017bca:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8017bce:	881a      	ldrh	r2, [r3, #0]
 8017bd0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8017bd4:	9318      	str	r3, [sp, #96]	; 0x60
 8017bd6:	fb02 c101 	mla	r1, r2, r1, ip
 8017bda:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8017bde:	4357      	muls	r7, r2
 8017be0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8017be4:	3601      	adds	r6, #1
 8017be6:	920b      	str	r2, [sp, #44]	; 0x2c
 8017be8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017bea:	4b8c      	ldr	r3, [pc, #560]	; (8017e1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8017bec:	b2b6      	uxth	r6, r6
 8017bee:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8017bf2:	1d32      	adds	r2, r6, #4
 8017bf4:	9206      	str	r2, [sp, #24]
 8017bf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017bf8:	43d2      	mvns	r2, r2
 8017bfa:	b2d2      	uxtb	r2, r2
 8017bfc:	b2ad      	uxth	r5, r5
 8017bfe:	9215      	str	r2, [sp, #84]	; 0x54
 8017c00:	9a04      	ldr	r2, [sp, #16]
 8017c02:	2d00      	cmp	r5, #0
 8017c04:	bf0c      	ite	eq
 8017c06:	4611      	moveq	r1, r2
 8017c08:	2100      	movne	r1, #0
 8017c0a:	2200      	movs	r2, #0
 8017c0c:	1b1b      	subs	r3, r3, r4
 8017c0e:	b289      	uxth	r1, r1
 8017c10:	920d      	str	r2, [sp, #52]	; 0x34
 8017c12:	9319      	str	r3, [sp, #100]	; 0x64
 8017c14:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017c16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c18:	fa12 f383 	uxtah	r3, r2, r3
 8017c1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017c1e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017c22:	3304      	adds	r3, #4
 8017c24:	9307      	str	r3, [sp, #28]
 8017c26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017c28:	455b      	cmp	r3, fp
 8017c2a:	f240 817c 	bls.w	8017f26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8017c2e:	9a01      	ldr	r2, [sp, #4]
 8017c30:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8017c34:	fbb5 f3f3 	udiv	r3, r5, r3
 8017c38:	1ad3      	subs	r3, r2, r3
 8017c3a:	b29b      	uxth	r3, r3
 8017c3c:	9316      	str	r3, [sp, #88]	; 0x58
 8017c3e:	9b07      	ldr	r3, [sp, #28]
 8017c40:	9807      	ldr	r0, [sp, #28]
 8017c42:	785a      	ldrb	r2, [r3, #1]
 8017c44:	789b      	ldrb	r3, [r3, #2]
 8017c46:	7800      	ldrb	r0, [r0, #0]
 8017c48:	9011      	str	r0, [sp, #68]	; 0x44
 8017c4a:	021b      	lsls	r3, r3, #8
 8017c4c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017c50:	9a07      	ldr	r2, [sp, #28]
 8017c52:	78d2      	ldrb	r2, [r2, #3]
 8017c54:	4313      	orrs	r3, r2
 8017c56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8017c58:	3001      	adds	r0, #1
 8017c5a:	441a      	add	r2, r3
 8017c5c:	9005      	str	r0, [sp, #20]
 8017c5e:	1c50      	adds	r0, r2, #1
 8017c60:	9003      	str	r0, [sp, #12]
 8017c62:	7852      	ldrb	r2, [r2, #1]
 8017c64:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017c66:	0212      	lsls	r2, r2, #8
 8017c68:	5cc3      	ldrb	r3, [r0, r3]
 8017c6a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 8017c6e:	431a      	orrs	r2, r3
 8017c70:	b293      	uxth	r3, r2
 8017c72:	930c      	str	r3, [sp, #48]	; 0x30
 8017c74:	2300      	movs	r3, #0
 8017c76:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 8017c7a:	9308      	str	r3, [sp, #32]
 8017c7c:	461a      	mov	r2, r3
 8017c7e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8017c82:	930e      	str	r3, [sp, #56]	; 0x38
 8017c84:	f04f 0801 	mov.w	r8, #1
 8017c88:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8017c8c:	f8cd 8008 	str.w	r8, [sp, #8]
 8017c90:	46c4      	mov	ip, r8
 8017c92:	930f      	str	r3, [sp, #60]	; 0x3c
 8017c94:	2d00      	cmp	r5, #0
 8017c96:	d07c      	beq.n	8017d92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8017c98:	45ac      	cmp	ip, r5
 8017c9a:	d26c      	bcs.n	8017d76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8017c9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017c9e:	eba5 050c 	sub.w	r5, r5, ip
 8017ca2:	455b      	cmp	r3, fp
 8017ca4:	b2ad      	uxth	r5, r5
 8017ca6:	4608      	mov	r0, r1
 8017ca8:	d802      	bhi.n	8017cb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8017caa:	e070      	b.n	8017d8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8017cac:	2b00      	cmp	r3, #0
 8017cae:	d15c      	bne.n	8017d6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8017cb0:	9b03      	ldr	r3, [sp, #12]
 8017cb2:	9a02      	ldr	r2, [sp, #8]
 8017cb4:	785b      	ldrb	r3, [r3, #1]
 8017cb6:	9902      	ldr	r1, [sp, #8]
 8017cb8:	f1c2 0207 	rsb	r2, r2, #7
 8017cbc:	4093      	lsls	r3, r2
 8017cbe:	005b      	lsls	r3, r3, #1
 8017cc0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8017cc4:	9b03      	ldr	r3, [sp, #12]
 8017cc6:	781b      	ldrb	r3, [r3, #0]
 8017cc8:	410b      	asrs	r3, r1
 8017cca:	3101      	adds	r1, #1
 8017ccc:	b2c9      	uxtb	r1, r1
 8017cce:	2908      	cmp	r1, #8
 8017cd0:	9102      	str	r1, [sp, #8]
 8017cd2:	9903      	ldr	r1, [sp, #12]
 8017cd4:	bf0a      	itet	eq
 8017cd6:	3102      	addeq	r1, #2
 8017cd8:	3101      	addne	r1, #1
 8017cda:	9103      	streq	r1, [sp, #12]
 8017cdc:	b2db      	uxtb	r3, r3
 8017cde:	bf0a      	itet	eq
 8017ce0:	2100      	moveq	r1, #0
 8017ce2:	9103      	strne	r1, [sp, #12]
 8017ce4:	9102      	streq	r1, [sp, #8]
 8017ce6:	4313      	orrs	r3, r2
 8017ce8:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017cea:	b29a      	uxth	r2, r3
 8017cec:	4291      	cmp	r1, r2
 8017cee:	d30a      	bcc.n	8017d06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8017cf0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8017cf4:	2301      	movs	r3, #1
 8017cf6:	9905      	ldr	r1, [sp, #20]
 8017cf8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8017cfc:	d30f      	bcc.n	8017d1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8017cfe:	2100      	movs	r1, #0
 8017d00:	4698      	mov	r8, r3
 8017d02:	9100      	str	r1, [sp, #0]
 8017d04:	e032      	b.n	8017d6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8017d06:	9b05      	ldr	r3, [sp, #20]
 8017d08:	429a      	cmp	r2, r3
 8017d0a:	d318      	bcc.n	8017d3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8017d0c:	eb04 0308 	add.w	r3, r4, r8
 8017d10:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8017d14:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 8017d18:	f108 0301 	add.w	r3, r8, #1
 8017d1c:	b29b      	uxth	r3, r3
 8017d1e:	9905      	ldr	r1, [sp, #20]
 8017d20:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8017d24:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017d28:	710e      	strb	r6, [r1, #4]
 8017d2a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8017d2c:	80ce      	strh	r6, [r1, #6]
 8017d2e:	f108 0601 	add.w	r6, r8, #1
 8017d32:	714e      	strb	r6, [r1, #5]
 8017d34:	9905      	ldr	r1, [sp, #20]
 8017d36:	3101      	adds	r1, #1
 8017d38:	b289      	uxth	r1, r1
 8017d3a:	9105      	str	r1, [sp, #20]
 8017d3c:	e7df      	b.n	8017cfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8017d3e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8017d42:	4611      	mov	r1, r2
 8017d44:	795b      	ldrb	r3, [r3, #5]
 8017d46:	f603 0604 	addw	r6, r3, #2052	; 0x804
 8017d4a:	4426      	add	r6, r4
 8017d4c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8017d4e:	4437      	add	r7, r6
 8017d50:	2f00      	cmp	r7, #0
 8017d52:	dd06      	ble.n	8017d62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8017d54:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8017d58:	790f      	ldrb	r7, [r1, #4]
 8017d5a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8017d5e:	88c9      	ldrh	r1, [r1, #6]
 8017d60:	e7f4      	b.n	8017d4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8017d62:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 8017d66:	b29b      	uxth	r3, r3
 8017d68:	e7c5      	b.n	8017cf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8017d6a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017d6c:	920c      	str	r2, [sp, #48]	; 0x30
 8017d6e:	4601      	mov	r1, r0
 8017d70:	9a00      	ldr	r2, [sp, #0]
 8017d72:	469c      	mov	ip, r3
 8017d74:	e78e      	b.n	8017c94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8017d76:	1957      	adds	r7, r2, r5
 8017d78:	ebac 0305 	sub.w	r3, ip, r5
 8017d7c:	b2ba      	uxth	r2, r7
 8017d7e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017d82:	9200      	str	r2, [sp, #0]
 8017d84:	b29b      	uxth	r3, r3
 8017d86:	2500      	movs	r5, #0
 8017d88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017d8a:	455a      	cmp	r2, fp
 8017d8c:	d88e      	bhi.n	8017cac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8017d8e:	4601      	mov	r1, r0
 8017d90:	e749      	b.n	8017c26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8017d92:	458c      	cmp	ip, r1
 8017d94:	bf2c      	ite	cs
 8017d96:	4628      	movcs	r0, r5
 8017d98:	462b      	movcc	r3, r5
 8017d9a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017d9c:	bf27      	ittee	cs
 8017d9e:	9109      	strcs	r1, [sp, #36]	; 0x24
 8017da0:	ebac 0301 	subcs.w	r3, ip, r1
 8017da4:	eba1 000c 	subcc.w	r0, r1, ip
 8017da8:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8017dac:	bf2c      	ite	cs
 8017dae:	b29b      	uxthcs	r3, r3
 8017db0:	b280      	uxthcc	r0, r0
 8017db2:	2dff      	cmp	r5, #255	; 0xff
 8017db4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8017db6:	eb02 0705 	add.w	r7, r2, r5
 8017dba:	b2bd      	uxth	r5, r7
 8017dbc:	9500      	str	r5, [sp, #0]
 8017dbe:	d12f      	bne.n	8017e20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8017dc0:	465e      	mov	r6, fp
 8017dc2:	9d00      	ldr	r5, [sp, #0]
 8017dc4:	42aa      	cmp	r2, r5
 8017dc6:	f040 8084 	bne.w	8017ed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8017dca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017dcc:	458c      	cmp	ip, r1
 8017dce:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017dd2:	d3d8      	bcc.n	8017d86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8017dd4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017dd6:	9904      	ldr	r1, [sp, #16]
 8017dd8:	8812      	ldrh	r2, [r2, #0]
 8017dda:	1a52      	subs	r2, r2, r1
 8017ddc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8017de0:	9a08      	ldr	r2, [sp, #32]
 8017de2:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017de4:	3201      	adds	r2, #1
 8017de6:	428a      	cmp	r2, r1
 8017de8:	9208      	str	r2, [sp, #32]
 8017dea:	f040 8092 	bne.w	8017f12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8017dee:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8017df2:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 8017df6:	9b04      	ldr	r3, [sp, #16]
 8017df8:	eba5 050c 	sub.w	r5, r5, ip
 8017dfc:	b2ad      	uxth	r5, r5
 8017dfe:	2d00      	cmp	r5, #0
 8017e00:	bf08      	it	eq
 8017e02:	4619      	moveq	r1, r3
 8017e04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017e06:	bf18      	it	ne
 8017e08:	2100      	movne	r1, #0
 8017e0a:	3301      	adds	r3, #1
 8017e0c:	930d      	str	r3, [sp, #52]	; 0x34
 8017e0e:	b289      	uxth	r1, r1
 8017e10:	e700      	b.n	8017c14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8017e12:	bf00      	nop
 8017e14:	20014fd4 	.word	0x20014fd4
 8017e18:	20014fce 	.word	0x20014fce
 8017e1c:	fffff7fb 	.word	0xfffff7fb
 8017e20:	46d9      	mov	r9, fp
 8017e22:	9d00      	ldr	r5, [sp, #0]
 8017e24:	42aa      	cmp	r2, r5
 8017e26:	d0d0      	beq.n	8017dca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8017e28:	1c55      	adds	r5, r2, #1
 8017e2a:	4422      	add	r2, r4
 8017e2c:	9517      	str	r5, [sp, #92]	; 0x5c
 8017e2e:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8017e32:	9a06      	ldr	r2, [sp, #24]
 8017e34:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017e38:	4472      	add	r2, lr
 8017e3a:	9212      	str	r2, [sp, #72]	; 0x48
 8017e3c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8017e3e:	f8b9 2000 	ldrh.w	r2, [r9]
 8017e42:	f897 a002 	ldrb.w	sl, [r7, #2]
 8017e46:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8017e48:	1216      	asrs	r6, r2, #8
 8017e4a:	fb1a fa07 	smulbb	sl, sl, r7
 8017e4e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017e52:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017e54:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017e58:	fb06 a607 	mla	r6, r6, r7, sl
 8017e5c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8017e5e:	f897 a001 	ldrb.w	sl, [r7, #1]
 8017e62:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8017e64:	10d5      	asrs	r5, r2, #3
 8017e66:	fb1a fa07 	smulbb	sl, sl, r7
 8017e6a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017e6e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017e70:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017e74:	fb05 a507 	mla	r5, r5, r7, sl
 8017e78:	9f06      	ldr	r7, [sp, #24]
 8017e7a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8017e7e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8017e80:	00d2      	lsls	r2, r2, #3
 8017e82:	fb1e fe07 	smulbb	lr, lr, r7
 8017e86:	b2d2      	uxtb	r2, r2
 8017e88:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017e8a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017e8e:	b2b6      	uxth	r6, r6
 8017e90:	fb02 e207 	mla	r2, r2, r7, lr
 8017e94:	b292      	uxth	r2, r2
 8017e96:	b2ad      	uxth	r5, r5
 8017e98:	f106 0a01 	add.w	sl, r6, #1
 8017e9c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017ea0:	f102 0e01 	add.w	lr, r2, #1
 8017ea4:	f105 0a01 	add.w	sl, r5, #1
 8017ea8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8017eac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017eb0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017eb4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017eb8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017ebc:	ea4e 0606 	orr.w	r6, lr, r6
 8017ec0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017ec4:	ea46 060a 	orr.w	r6, r6, sl
 8017ec8:	f829 6b02 	strh.w	r6, [r9], #2
 8017ecc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8017ed0:	e7a7      	b.n	8017e22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8017ed2:	f102 0e01 	add.w	lr, r2, #1
 8017ed6:	4422      	add	r2, r4
 8017ed8:	9f06      	ldr	r7, [sp, #24]
 8017eda:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8017ede:	9a06      	ldr	r2, [sp, #24]
 8017ee0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017ee4:	eb02 0a05 	add.w	sl, r2, r5
 8017ee8:	4a13      	ldr	r2, [pc, #76]	; (8017f38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8017eea:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8017eee:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8017ef2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017ef6:	00d2      	lsls	r2, r2, #3
 8017ef8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017efc:	ea49 0202 	orr.w	r2, r9, r2
 8017f00:	f817 9005 	ldrb.w	r9, [r7, r5]
 8017f04:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8017f08:	f826 2b02 	strh.w	r2, [r6], #2
 8017f0c:	fa1f f28e 	uxth.w	r2, lr
 8017f10:	e757      	b.n	8017dc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8017f12:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017f16:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 8017f1a:	1a2d      	subs	r5, r5, r0
 8017f1c:	b2ad      	uxth	r5, r5
 8017f1e:	2d00      	cmp	r5, #0
 8017f20:	bf18      	it	ne
 8017f22:	2000      	movne	r0, #0
 8017f24:	e730      	b.n	8017d88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8017f26:	4b05      	ldr	r3, [pc, #20]	; (8017f3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8017f28:	6818      	ldr	r0, [r3, #0]
 8017f2a:	6803      	ldr	r3, [r0, #0]
 8017f2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f2e:	4798      	blx	r3
 8017f30:	b01f      	add	sp, #124	; 0x7c
 8017f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f36:	bf00      	nop
 8017f38:	fffff800 	.word	0xfffff800
 8017f3c:	20014fd4 	.word	0x20014fd4

08017f40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f44:	b091      	sub	sp, #68	; 0x44
 8017f46:	469b      	mov	fp, r3
 8017f48:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8017f4c:	4616      	mov	r6, r2
 8017f4e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8017f52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017f56:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8017f5a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017f5e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017f62:	4604      	mov	r4, r0
 8017f64:	460d      	mov	r5, r1
 8017f66:	4640      	mov	r0, r8
 8017f68:	4659      	mov	r1, fp
 8017f6a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017f6e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8017f72:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8017f76:	f7f4 ff81 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 8017f7a:	4631      	mov	r1, r6
 8017f7c:	4640      	mov	r0, r8
 8017f7e:	f7f4 ff7d 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 8017f82:	4b74      	ldr	r3, [pc, #464]	; (8018154 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017f84:	8818      	ldrh	r0, [r3, #0]
 8017f86:	4b74      	ldr	r3, [pc, #464]	; (8018158 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017f88:	8819      	ldrh	r1, [r3, #0]
 8017f8a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017f8e:	2b00      	cmp	r3, #0
 8017f90:	b202      	sxth	r2, r0
 8017f92:	b20e      	sxth	r6, r1
 8017f94:	da07      	bge.n	8017fa6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017f96:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017f9a:	4463      	add	r3, ip
 8017f9c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017fa0:	2300      	movs	r3, #0
 8017fa2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017fa6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017faa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017fae:	1ad2      	subs	r2, r2, r3
 8017fb0:	4594      	cmp	ip, r2
 8017fb2:	bfc4      	itt	gt
 8017fb4:	1ac2      	subgt	r2, r0, r3
 8017fb6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8017fba:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017fbe:	2a00      	cmp	r2, #0
 8017fc0:	da07      	bge.n	8017fd2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017fc2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017fc6:	4462      	add	r2, ip
 8017fc8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017fcc:	2200      	movs	r2, #0
 8017fce:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017fd2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017fd6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017fda:	eba6 060a 	sub.w	r6, r6, sl
 8017fde:	42b2      	cmp	r2, r6
 8017fe0:	bfc4      	itt	gt
 8017fe2:	eba1 020a 	subgt.w	r2, r1, sl
 8017fe6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8017fea:	4a5c      	ldr	r2, [pc, #368]	; (801815c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017fec:	7812      	ldrb	r2, [r2, #0]
 8017fee:	b9a2      	cbnz	r2, 801801a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017ff0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017ff4:	4286      	cmp	r6, r0
 8017ff6:	4640      	mov	r0, r8
 8017ff8:	9303      	str	r3, [sp, #12]
 8017ffa:	bf14      	ite	ne
 8017ffc:	2600      	movne	r6, #0
 8017ffe:	2601      	moveq	r6, #1
 8018000:	f7f4 ff7f 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018004:	9b03      	ldr	r3, [sp, #12]
 8018006:	b160      	cbz	r0, 8018022 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8018008:	2300      	movs	r3, #0
 801800a:	8023      	strh	r3, [r4, #0]
 801800c:	8063      	strh	r3, [r4, #2]
 801800e:	80a3      	strh	r3, [r4, #4]
 8018010:	4620      	mov	r0, r4
 8018012:	80e3      	strh	r3, [r4, #6]
 8018014:	b011      	add	sp, #68	; 0x44
 8018016:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801801a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801801e:	428e      	cmp	r6, r1
 8018020:	e7e9      	b.n	8017ff6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8018022:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8018026:	9205      	str	r2, [sp, #20]
 8018028:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801802c:	9206      	str	r2, [sp, #24]
 801802e:	f8bb 2000 	ldrh.w	r2, [fp]
 8018032:	900e      	str	r0, [sp, #56]	; 0x38
 8018034:	1a9b      	subs	r3, r3, r2
 8018036:	b21b      	sxth	r3, r3
 8018038:	9303      	str	r3, [sp, #12]
 801803a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801803e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8018042:	ebaa 0a03 	sub.w	sl, sl, r3
 8018046:	fa0f f38a 	sxth.w	r3, sl
 801804a:	9304      	str	r3, [sp, #16]
 801804c:	9b03      	ldr	r3, [sp, #12]
 801804e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8018052:	9b04      	ldr	r3, [sp, #16]
 8018054:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018058:	9b05      	ldr	r3, [sp, #20]
 801805a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801805e:	a90e      	add	r1, sp, #56	; 0x38
 8018060:	9b06      	ldr	r3, [sp, #24]
 8018062:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018066:	a80c      	add	r0, sp, #48	; 0x30
 8018068:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801806c:	f7f8 fba2 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018070:	4640      	mov	r0, r8
 8018072:	f7f8 fb5b 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018076:	a80e      	add	r0, sp, #56	; 0x38
 8018078:	f7f8 fb58 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801807c:	4b38      	ldr	r3, [pc, #224]	; (8018160 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801807e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8018082:	881b      	ldrh	r3, [r3, #0]
 8018084:	9307      	str	r3, [sp, #28]
 8018086:	682b      	ldr	r3, [r5, #0]
 8018088:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8018164 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801808c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801808e:	4628      	mov	r0, r5
 8018090:	4798      	blx	r3
 8018092:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8018096:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801809a:	4681      	mov	r9, r0
 801809c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80180a0:	f8db 0000 	ldr.w	r0, [fp]
 80180a4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80180a6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80180aa:	6803      	ldr	r3, [r0, #0]
 80180ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80180ae:	4798      	blx	r3
 80180b0:	4607      	mov	r7, r0
 80180b2:	f8db 0000 	ldr.w	r0, [fp]
 80180b6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80180ba:	6803      	ldr	r3, [r0, #0]
 80180bc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80180c0:	9109      	str	r1, [sp, #36]	; 0x24
 80180c2:	9208      	str	r2, [sp, #32]
 80180c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80180c6:	4798      	blx	r3
 80180c8:	f010 0f01 	tst.w	r0, #1
 80180cc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80180d0:	d012      	beq.n	80180f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80180d2:	f8db 0000 	ldr.w	r0, [fp]
 80180d6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 80180da:	6803      	ldr	r3, [r0, #0]
 80180dc:	9200      	str	r2, [sp, #0]
 80180de:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80180e0:	e898 0006 	ldmia.w	r8, {r1, r2}
 80180e4:	462b      	mov	r3, r5
 80180e6:	47b0      	blx	r6
 80180e8:	9b03      	ldr	r3, [sp, #12]
 80180ea:	8023      	strh	r3, [r4, #0]
 80180ec:	9b04      	ldr	r3, [sp, #16]
 80180ee:	8063      	strh	r3, [r4, #2]
 80180f0:	9b05      	ldr	r3, [sp, #20]
 80180f2:	80a3      	strh	r3, [r4, #4]
 80180f4:	9b06      	ldr	r3, [sp, #24]
 80180f6:	e78b      	b.n	8018010 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80180f8:	fb09 f202 	mul.w	r2, r9, r2
 80180fc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8018100:	440f      	add	r7, r1
 8018102:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8018106:	b166      	cbz	r6, 8018122 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8018108:	9a07      	ldr	r2, [sp, #28]
 801810a:	4592      	cmp	sl, r2
 801810c:	d109      	bne.n	8018122 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801810e:	f8db 0000 	ldr.w	r0, [fp]
 8018112:	6802      	ldr	r2, [r0, #0]
 8018114:	fb09 f303 	mul.w	r3, r9, r3
 8018118:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801811a:	4629      	mov	r1, r5
 801811c:	463a      	mov	r2, r7
 801811e:	47b0      	blx	r6
 8018120:	e7e2      	b.n	80180e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018122:	fb0a f303 	mul.w	r3, sl, r3
 8018126:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8018164 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801812a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801812e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8018132:	4545      	cmp	r5, r8
 8018134:	d2d8      	bcs.n	80180e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018136:	f8db 0000 	ldr.w	r0, [fp]
 801813a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801813e:	6802      	ldr	r2, [r0, #0]
 8018140:	4629      	mov	r1, r5
 8018142:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8018146:	005b      	lsls	r3, r3, #1
 8018148:	463a      	mov	r2, r7
 801814a:	47d0      	blx	sl
 801814c:	444f      	add	r7, r9
 801814e:	4435      	add	r5, r6
 8018150:	e7ef      	b.n	8018132 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8018152:	bf00      	nop
 8018154:	20014fc8 	.word	0x20014fc8
 8018158:	20014fca 	.word	0x20014fca
 801815c:	20014fcc 	.word	0x20014fcc
 8018160:	20014fce 	.word	0x20014fce
 8018164:	20014fd4 	.word	0x20014fd4

08018168 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8018168:	b5f0      	push	{r4, r5, r6, r7, lr}
 801816a:	4606      	mov	r6, r0
 801816c:	b087      	sub	sp, #28
 801816e:	460c      	mov	r4, r1
 8018170:	4617      	mov	r7, r2
 8018172:	461d      	mov	r5, r3
 8018174:	b333      	cbz	r3, 80181c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018176:	4608      	mov	r0, r1
 8018178:	f7f4 fec3 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801817c:	bb10      	cbnz	r0, 80181c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801817e:	6820      	ldr	r0, [r4, #0]
 8018180:	6861      	ldr	r1, [r4, #4]
 8018182:	4c1c      	ldr	r4, [pc, #112]	; (80181f4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8018184:	ab04      	add	r3, sp, #16
 8018186:	c303      	stmia	r3!, {r0, r1}
 8018188:	a804      	add	r0, sp, #16
 801818a:	f7f8 facf 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801818e:	6820      	ldr	r0, [r4, #0]
 8018190:	6803      	ldr	r3, [r0, #0]
 8018192:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018194:	4798      	blx	r3
 8018196:	2dff      	cmp	r5, #255	; 0xff
 8018198:	d016      	beq.n	80181c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801819a:	f010 0f08 	tst.w	r0, #8
 801819e:	6820      	ldr	r0, [r4, #0]
 80181a0:	d015      	beq.n	80181ce <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80181a2:	2400      	movs	r4, #0
 80181a4:	6801      	ldr	r1, [r0, #0]
 80181a6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80181aa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80181ae:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80181b2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80181b6:	9401      	str	r4, [sp, #4]
 80181b8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80181bc:	9400      	str	r4, [sp, #0]
 80181be:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 80181c0:	4639      	mov	r1, r7
 80181c2:	47a0      	blx	r4
 80181c4:	b007      	add	sp, #28
 80181c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80181c8:	f010 0f02 	tst.w	r0, #2
 80181cc:	e7e7      	b.n	801819e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80181ce:	6803      	ldr	r3, [r0, #0]
 80181d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80181d2:	4798      	blx	r3
 80181d4:	4b08      	ldr	r3, [pc, #32]	; (80181f8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80181d6:	881a      	ldrh	r2, [r3, #0]
 80181d8:	6833      	ldr	r3, [r6, #0]
 80181da:	e9cd 7500 	strd	r7, r5, [sp]
 80181de:	4601      	mov	r1, r0
 80181e0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80181e2:	4630      	mov	r0, r6
 80181e4:	ab04      	add	r3, sp, #16
 80181e6:	47a8      	blx	r5
 80181e8:	6820      	ldr	r0, [r4, #0]
 80181ea:	6803      	ldr	r3, [r0, #0]
 80181ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80181ee:	4798      	blx	r3
 80181f0:	e7e8      	b.n	80181c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80181f2:	bf00      	nop
 80181f4:	20014fd4 	.word	0x20014fd4
 80181f8:	20014fce 	.word	0x20014fce

080181fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80181fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018200:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8018204:	9e08      	ldr	r6, [sp, #32]
 8018206:	4688      	mov	r8, r1
 8018208:	4614      	mov	r4, r2
 801820a:	461d      	mov	r5, r3
 801820c:	2f00      	cmp	r7, #0
 801820e:	f000 80a9 	beq.w	8018364 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018212:	4618      	mov	r0, r3
 8018214:	f7f4 fe75 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018218:	2800      	cmp	r0, #0
 801821a:	f040 80a3 	bne.w	8018364 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801821e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018222:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018226:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801822a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801822e:	fb04 1303 	mla	r3, r4, r3, r1
 8018232:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8018236:	4365      	muls	r5, r4
 8018238:	2fff      	cmp	r7, #255	; 0xff
 801823a:	eba4 0200 	sub.w	r2, r4, r0
 801823e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8018242:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8018246:	d04a      	beq.n	80182de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8018248:	b2bc      	uxth	r4, r7
 801824a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801824e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8018252:	fa5f f788 	uxtb.w	r7, r8
 8018256:	b2f3      	uxtb	r3, r6
 8018258:	0040      	lsls	r0, r0, #1
 801825a:	fb0e fe04 	mul.w	lr, lr, r4
 801825e:	4367      	muls	r7, r4
 8018260:	4363      	muls	r3, r4
 8018262:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8018266:	fa1f fc8c 	uxth.w	ip, ip
 801826a:	42a9      	cmp	r1, r5
 801826c:	d27a      	bcs.n	8018364 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801826e:	eb01 0900 	add.w	r9, r1, r0
 8018272:	4549      	cmp	r1, r9
 8018274:	d231      	bcs.n	80182da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8018276:	880a      	ldrh	r2, [r1, #0]
 8018278:	1214      	asrs	r4, r2, #8
 801827a:	10d6      	asrs	r6, r2, #3
 801827c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8018280:	00d2      	lsls	r2, r2, #3
 8018282:	b2d2      	uxtb	r2, r2
 8018284:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018288:	fb14 f40c 	smulbb	r4, r4, ip
 801828c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018290:	4474      	add	r4, lr
 8018292:	fb12 f20c 	smulbb	r2, r2, ip
 8018296:	b2a4      	uxth	r4, r4
 8018298:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801829c:	441a      	add	r2, r3
 801829e:	b292      	uxth	r2, r2
 80182a0:	f104 0a01 	add.w	sl, r4, #1
 80182a4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80182a8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80182ac:	fb16 f60c 	smulbb	r6, r6, ip
 80182b0:	f102 0a01 	add.w	sl, r2, #1
 80182b4:	443e      	add	r6, r7
 80182b6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80182ba:	b2b6      	uxth	r6, r6
 80182bc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80182c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80182c4:	4322      	orrs	r2, r4
 80182c6:	1c74      	adds	r4, r6, #1
 80182c8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80182cc:	0976      	lsrs	r6, r6, #5
 80182ce:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80182d2:	4332      	orrs	r2, r6
 80182d4:	f821 2b02 	strh.w	r2, [r1], #2
 80182d8:	e7cb      	b.n	8018272 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80182da:	4441      	add	r1, r8
 80182dc:	e7c5      	b.n	801826a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80182de:	4f22      	ldr	r7, [pc, #136]	; (8018368 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80182e0:	0973      	lsrs	r3, r6, #5
 80182e2:	ea08 0707 	and.w	r7, r8, r7
 80182e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80182ea:	433b      	orrs	r3, r7
 80182ec:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80182f0:	4333      	orrs	r3, r6
 80182f2:	07e7      	lsls	r7, r4, #31
 80182f4:	b29b      	uxth	r3, r3
 80182f6:	d50b      	bpl.n	8018310 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80182f8:	0040      	lsls	r0, r0, #1
 80182fa:	0052      	lsls	r2, r2, #1
 80182fc:	42a9      	cmp	r1, r5
 80182fe:	d231      	bcs.n	8018364 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018300:	180c      	adds	r4, r1, r0
 8018302:	42a1      	cmp	r1, r4
 8018304:	d202      	bcs.n	801830c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8018306:	f821 3b02 	strh.w	r3, [r1], #2
 801830a:	e7fa      	b.n	8018302 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801830c:	4411      	add	r1, r2
 801830e:	e7f5      	b.n	80182fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8018310:	078e      	lsls	r6, r1, #30
 8018312:	d008      	beq.n	8018326 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8018314:	0066      	lsls	r6, r4, #1
 8018316:	460a      	mov	r2, r1
 8018318:	42aa      	cmp	r2, r5
 801831a:	d202      	bcs.n	8018322 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801831c:	8013      	strh	r3, [r2, #0]
 801831e:	4432      	add	r2, r6
 8018320:	e7fa      	b.n	8018318 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8018322:	3102      	adds	r1, #2
 8018324:	3801      	subs	r0, #1
 8018326:	07c2      	lsls	r2, r0, #31
 8018328:	d50b      	bpl.n	8018342 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801832a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801832e:	3a01      	subs	r2, #1
 8018330:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8018334:	0066      	lsls	r6, r4, #1
 8018336:	42aa      	cmp	r2, r5
 8018338:	d202      	bcs.n	8018340 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801833a:	8013      	strh	r3, [r2, #0]
 801833c:	4432      	add	r2, r6
 801833e:	e7fa      	b.n	8018336 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8018340:	3801      	subs	r0, #1
 8018342:	b178      	cbz	r0, 8018364 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018344:	1040      	asrs	r0, r0, #1
 8018346:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801834a:	0080      	lsls	r0, r0, #2
 801834c:	0064      	lsls	r4, r4, #1
 801834e:	42a9      	cmp	r1, r5
 8018350:	d208      	bcs.n	8018364 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018352:	180e      	adds	r6, r1, r0
 8018354:	460a      	mov	r2, r1
 8018356:	42b2      	cmp	r2, r6
 8018358:	d202      	bcs.n	8018360 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801835a:	f842 3b04 	str.w	r3, [r2], #4
 801835e:	e7fa      	b.n	8018356 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8018360:	4421      	add	r1, r4
 8018362:	e7f4      	b.n	801834e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8018364:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018368:	00fff800 	.word	0x00fff800

0801836c <_ZN8touchgfx8LCD16bppC1Ev>:
 801836c:	2200      	movs	r2, #0
 801836e:	4912      	ldr	r1, [pc, #72]	; (80183b8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8018370:	6042      	str	r2, [r0, #4]
 8018372:	6001      	str	r1, [r0, #0]
 8018374:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8018378:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801837c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8018380:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8018384:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8018388:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801838c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8018390:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8018394:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8018398:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801839c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80183a0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80183a4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80183a8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80183ac:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 80183b0:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80183b4:	4770      	bx	lr
 80183b6:	bf00      	nop
 80183b8:	080251c8 	.word	0x080251c8

080183bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80183bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183c0:	460d      	mov	r5, r1
 80183c2:	b08d      	sub	sp, #52	; 0x34
 80183c4:	4604      	mov	r4, r0
 80183c6:	6808      	ldr	r0, [r1, #0]
 80183c8:	6849      	ldr	r1, [r1, #4]
 80183ca:	4699      	mov	r9, r3
 80183cc:	ab08      	add	r3, sp, #32
 80183ce:	c303      	stmia	r3!, {r0, r1}
 80183d0:	6810      	ldr	r0, [r2, #0]
 80183d2:	6851      	ldr	r1, [r2, #4]
 80183d4:	ab0a      	add	r3, sp, #40	; 0x28
 80183d6:	c303      	stmia	r3!, {r0, r1}
 80183d8:	a808      	add	r0, sp, #32
 80183da:	f7f8 f9a7 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183de:	4629      	mov	r1, r5
 80183e0:	a80a      	add	r0, sp, #40	; 0x28
 80183e2:	f7f8 f9e7 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80183e6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80183ea:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80183ee:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80183f2:	4d63      	ldr	r5, [pc, #396]	; (8018580 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80183f4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80183f8:	6828      	ldr	r0, [r5, #0]
 80183fa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80183fe:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018402:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018406:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801840a:	440a      	add	r2, r1
 801840c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018410:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8018414:	4413      	add	r3, r2
 8018416:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801841a:	6803      	ldr	r3, [r0, #0]
 801841c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801841e:	4798      	blx	r3
 8018420:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018424:	d119      	bne.n	801845a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8018426:	f010 0f20 	tst.w	r0, #32
 801842a:	6828      	ldr	r0, [r5, #0]
 801842c:	d018      	beq.n	8018460 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801842e:	2500      	movs	r5, #0
 8018430:	6801      	ldr	r1, [r0, #0]
 8018432:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8018436:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801843a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801843e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8018442:	9502      	str	r5, [sp, #8]
 8018444:	b2b6      	uxth	r6, r6
 8018446:	fa1f f588 	uxth.w	r5, r8
 801844a:	9601      	str	r6, [sp, #4]
 801844c:	9500      	str	r5, [sp, #0]
 801844e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8018450:	4621      	mov	r1, r4
 8018452:	47a8      	blx	r5
 8018454:	b00d      	add	sp, #52	; 0x34
 8018456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801845a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801845e:	e7e4      	b.n	801842a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8018460:	6803      	ldr	r3, [r0, #0]
 8018462:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018464:	4798      	blx	r3
 8018466:	4947      	ldr	r1, [pc, #284]	; (8018584 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8018468:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801846c:	880b      	ldrh	r3, [r1, #0]
 801846e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8018472:	fb03 5202 	mla	r2, r3, r2, r5
 8018476:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801847a:	4373      	muls	r3, r6
 801847c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018480:	9307      	str	r3, [sp, #28]
 8018482:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018486:	9306      	str	r3, [sp, #24]
 8018488:	468a      	mov	sl, r1
 801848a:	9b07      	ldr	r3, [sp, #28]
 801848c:	4298      	cmp	r0, r3
 801848e:	d270      	bcs.n	8018572 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8018490:	9b06      	ldr	r3, [sp, #24]
 8018492:	4621      	mov	r1, r4
 8018494:	eb00 0b03 	add.w	fp, r0, r3
 8018498:	4558      	cmp	r0, fp
 801849a:	d25d      	bcs.n	8018558 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801849c:	f851 4b04 	ldr.w	r4, [r1], #4
 80184a0:	0e23      	lsrs	r3, r4, #24
 80184a2:	d014      	beq.n	80184ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80184a4:	2bff      	cmp	r3, #255	; 0xff
 80184a6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80184aa:	d112      	bne.n	80184d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80184ac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80184b0:	d10f      	bne.n	80184d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80184b2:	0963      	lsrs	r3, r4, #5
 80184b4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80184b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80184bc:	f02c 0c07 	bic.w	ip, ip, #7
 80184c0:	ea43 0c0c 	orr.w	ip, r3, ip
 80184c4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80184c8:	ea4c 0404 	orr.w	r4, ip, r4
 80184cc:	8004      	strh	r4, [r0, #0]
 80184ce:	3002      	adds	r0, #2
 80184d0:	e7e2      	b.n	8018498 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80184d2:	fb09 f303 	mul.w	r3, r9, r3
 80184d6:	8807      	ldrh	r7, [r0, #0]
 80184d8:	1c5a      	adds	r2, r3, #1
 80184da:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80184de:	1212      	asrs	r2, r2, #8
 80184e0:	123e      	asrs	r6, r7, #8
 80184e2:	b293      	uxth	r3, r2
 80184e4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80184e8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80184ec:	43d2      	mvns	r2, r2
 80184ee:	b2d2      	uxtb	r2, r2
 80184f0:	10fd      	asrs	r5, r7, #3
 80184f2:	fb1e fe03 	smulbb	lr, lr, r3
 80184f6:	00ff      	lsls	r7, r7, #3
 80184f8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80184fc:	fb06 e602 	mla	r6, r6, r2, lr
 8018500:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018504:	b2ff      	uxtb	r7, r7
 8018506:	fa5f fc8c 	uxtb.w	ip, ip
 801850a:	b2e4      	uxtb	r4, r4
 801850c:	b2b6      	uxth	r6, r6
 801850e:	fb1c fc03 	smulbb	ip, ip, r3
 8018512:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018516:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801851a:	fb14 f403 	smulbb	r4, r4, r3
 801851e:	fb05 c502 	mla	r5, r5, r2, ip
 8018522:	f106 0e01 	add.w	lr, r6, #1
 8018526:	fb07 4702 	mla	r7, r7, r2, r4
 801852a:	b2ad      	uxth	r5, r5
 801852c:	b2bf      	uxth	r7, r7
 801852e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8018532:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8018536:	f105 0c01 	add.w	ip, r5, #1
 801853a:	1c7e      	adds	r6, r7, #1
 801853c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018540:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018544:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018548:	096d      	lsrs	r5, r5, #5
 801854a:	ea46 060e 	orr.w	r6, r6, lr
 801854e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018552:	432e      	orrs	r6, r5
 8018554:	8006      	strh	r6, [r0, #0]
 8018556:	e7ba      	b.n	80184ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018558:	f8ba 3000 	ldrh.w	r3, [sl]
 801855c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8018560:	eba3 0308 	sub.w	r3, r3, r8
 8018564:	eba4 0408 	sub.w	r4, r4, r8
 8018568:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801856c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8018570:	e78b      	b.n	801848a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8018572:	4b03      	ldr	r3, [pc, #12]	; (8018580 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018574:	6818      	ldr	r0, [r3, #0]
 8018576:	6803      	ldr	r3, [r0, #0]
 8018578:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801857a:	4798      	blx	r3
 801857c:	e76a      	b.n	8018454 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801857e:	bf00      	nop
 8018580:	20014fd4 	.word	0x20014fd4
 8018584:	20014fce 	.word	0x20014fce

08018588 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8018588:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801858c:	460c      	mov	r4, r1
 801858e:	b085      	sub	sp, #20
 8018590:	6810      	ldr	r0, [r2, #0]
 8018592:	6851      	ldr	r1, [r2, #4]
 8018594:	466d      	mov	r5, sp
 8018596:	c503      	stmia	r5!, {r0, r1}
 8018598:	6818      	ldr	r0, [r3, #0]
 801859a:	6859      	ldr	r1, [r3, #4]
 801859c:	4616      	mov	r6, r2
 801859e:	c503      	stmia	r5!, {r0, r1}
 80185a0:	4668      	mov	r0, sp
 80185a2:	f7f8 f8c3 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80185a6:	4631      	mov	r1, r6
 80185a8:	a802      	add	r0, sp, #8
 80185aa:	f7f8 f903 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80185ae:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80185b2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80185b6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80185ba:	4d28      	ldr	r5, [pc, #160]	; (801865c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80185bc:	4e28      	ldr	r6, [pc, #160]	; (8018660 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80185be:	6828      	ldr	r0, [r5, #0]
 80185c0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80185c4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80185c8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80185cc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80185d0:	f8bd 1000 	ldrh.w	r1, [sp]
 80185d4:	440a      	add	r2, r1
 80185d6:	f8ad 2008 	strh.w	r2, [sp, #8]
 80185da:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80185de:	4413      	add	r3, r2
 80185e0:	f8ad 300a 	strh.w	r3, [sp, #10]
 80185e4:	6803      	ldr	r3, [r0, #0]
 80185e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80185e8:	4798      	blx	r3
 80185ea:	8833      	ldrh	r3, [r6, #0]
 80185ec:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80185f0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80185f4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8018664 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80185f8:	fb03 1202 	mla	r2, r3, r2, r1
 80185fc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018600:	fb08 f303 	mul.w	r3, r8, r3
 8018604:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018608:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801860c:	4298      	cmp	r0, r3
 801860e:	d21d      	bcs.n	801864c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8018610:	eb00 080c 	add.w	r8, r0, ip
 8018614:	4540      	cmp	r0, r8
 8018616:	d20f      	bcs.n	8018638 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8018618:	f854 1b04 	ldr.w	r1, [r4], #4
 801861c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8018620:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8018624:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018628:	ea42 0209 	orr.w	r2, r2, r9
 801862c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8018630:	430a      	orrs	r2, r1
 8018632:	f820 2b02 	strh.w	r2, [r0], #2
 8018636:	e7ed      	b.n	8018614 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8018638:	8832      	ldrh	r2, [r6, #0]
 801863a:	1bd2      	subs	r2, r2, r7
 801863c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018640:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8018644:	1bd2      	subs	r2, r2, r7
 8018646:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801864a:	e7df      	b.n	801860c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801864c:	6828      	ldr	r0, [r5, #0]
 801864e:	6803      	ldr	r3, [r0, #0]
 8018650:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018652:	4798      	blx	r3
 8018654:	b005      	add	sp, #20
 8018656:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801865a:	bf00      	nop
 801865c:	20014fd4 	.word	0x20014fd4
 8018660:	20014fce 	.word	0x20014fce
 8018664:	fffff800 	.word	0xfffff800

08018668 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8018668:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801866c:	460e      	mov	r6, r1
 801866e:	b08e      	sub	sp, #56	; 0x38
 8018670:	4604      	mov	r4, r0
 8018672:	6808      	ldr	r0, [r1, #0]
 8018674:	6849      	ldr	r1, [r1, #4]
 8018676:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8018850 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801867a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8018854 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801867e:	461d      	mov	r5, r3
 8018680:	ab0a      	add	r3, sp, #40	; 0x28
 8018682:	c303      	stmia	r3!, {r0, r1}
 8018684:	6810      	ldr	r0, [r2, #0]
 8018686:	6851      	ldr	r1, [r2, #4]
 8018688:	ab0c      	add	r3, sp, #48	; 0x30
 801868a:	c303      	stmia	r3!, {r0, r1}
 801868c:	a80a      	add	r0, sp, #40	; 0x28
 801868e:	f7f8 f84d 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018692:	4631      	mov	r1, r6
 8018694:	a80c      	add	r0, sp, #48	; 0x30
 8018696:	f7f8 f88d 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801869a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801869e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80186a2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80186a6:	f8d8 0000 	ldr.w	r0, [r8]
 80186aa:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80186ae:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80186b2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80186b6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80186ba:	440c      	add	r4, r1
 80186bc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80186c0:	440a      	add	r2, r1
 80186c2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80186c6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80186ca:	4413      	add	r3, r2
 80186cc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80186d0:	6803      	ldr	r3, [r0, #0]
 80186d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80186d4:	4798      	blx	r3
 80186d6:	2dff      	cmp	r5, #255	; 0xff
 80186d8:	d124      	bne.n	8018724 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80186da:	f010 0f01 	tst.w	r0, #1
 80186de:	f8d8 0000 	ldr.w	r0, [r8]
 80186e2:	d022      	beq.n	801872a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80186e4:	2100      	movs	r1, #0
 80186e6:	f8d0 c000 	ldr.w	ip, [r0]
 80186ea:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80186ee:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80186f2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80186f6:	f04f 0e01 	mov.w	lr, #1
 80186fa:	f8cd e018 	str.w	lr, [sp, #24]
 80186fe:	f8b9 e000 	ldrh.w	lr, [r9]
 8018702:	9503      	str	r5, [sp, #12]
 8018704:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8018708:	b2b6      	uxth	r6, r6
 801870a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801870e:	9102      	str	r1, [sp, #8]
 8018710:	b2bf      	uxth	r7, r7
 8018712:	9601      	str	r6, [sp, #4]
 8018714:	9700      	str	r7, [sp, #0]
 8018716:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801871a:	4621      	mov	r1, r4
 801871c:	47a8      	blx	r5
 801871e:	b00e      	add	sp, #56	; 0x38
 8018720:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018724:	f010 0f04 	tst.w	r0, #4
 8018728:	e7d9      	b.n	80186de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801872a:	6803      	ldr	r3, [r0, #0]
 801872c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801872e:	4798      	blx	r3
 8018730:	f8b9 3000 	ldrh.w	r3, [r9]
 8018734:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8018738:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801873c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8018740:	fb03 1202 	mla	r2, r3, r2, r1
 8018744:	ebac 0c07 	sub.w	ip, ip, r7
 8018748:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801874c:	435e      	muls	r6, r3
 801874e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8018752:	2dff      	cmp	r5, #255	; 0xff
 8018754:	eba3 0707 	sub.w	r7, r3, r7
 8018758:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801875c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018760:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8018764:	d049      	beq.n	80187fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8018766:	43eb      	mvns	r3, r5
 8018768:	fa1f f985 	uxth.w	r9, r5
 801876c:	b2db      	uxtb	r3, r3
 801876e:	42b0      	cmp	r0, r6
 8018770:	d266      	bcs.n	8018840 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018772:	eb00 0a0e 	add.w	sl, r0, lr
 8018776:	4550      	cmp	r0, sl
 8018778:	4621      	mov	r1, r4
 801877a:	f104 0403 	add.w	r4, r4, #3
 801877e:	d25b      	bcs.n	8018838 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8018780:	8802      	ldrh	r2, [r0, #0]
 8018782:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018786:	ea4f 2822 	mov.w	r8, r2, asr #8
 801878a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801878e:	fb11 f109 	smulbb	r1, r1, r9
 8018792:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8018796:	10d5      	asrs	r5, r2, #3
 8018798:	fb08 1803 	mla	r8, r8, r3, r1
 801879c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80187a0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80187a4:	fb11 f109 	smulbb	r1, r1, r9
 80187a8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80187ac:	fb05 1503 	mla	r5, r5, r3, r1
 80187b0:	00d2      	lsls	r2, r2, #3
 80187b2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80187b6:	b2d2      	uxtb	r2, r2
 80187b8:	fb11 f109 	smulbb	r1, r1, r9
 80187bc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80187c0:	fa1f f888 	uxth.w	r8, r8
 80187c4:	fb02 1203 	mla	r2, r2, r3, r1
 80187c8:	b292      	uxth	r2, r2
 80187ca:	f108 0101 	add.w	r1, r8, #1
 80187ce:	b2ad      	uxth	r5, r5
 80187d0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80187d4:	1c51      	adds	r1, r2, #1
 80187d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80187da:	1c69      	adds	r1, r5, #1
 80187dc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80187e0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80187e4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80187e8:	096d      	lsrs	r5, r5, #5
 80187ea:	ea42 0208 	orr.w	r2, r2, r8
 80187ee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80187f2:	432a      	orrs	r2, r5
 80187f4:	f820 2b02 	strh.w	r2, [r0], #2
 80187f8:	e7bd      	b.n	8018776 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80187fa:	4a14      	ldr	r2, [pc, #80]	; (801884c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80187fc:	42b0      	cmp	r0, r6
 80187fe:	d21f      	bcs.n	8018840 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018800:	eb00 050e 	add.w	r5, r0, lr
 8018804:	42a8      	cmp	r0, r5
 8018806:	4621      	mov	r1, r4
 8018808:	f104 0403 	add.w	r4, r4, #3
 801880c:	d210      	bcs.n	8018830 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801880e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8018812:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8018816:	00db      	lsls	r3, r3, #3
 8018818:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801881c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018820:	430b      	orrs	r3, r1
 8018822:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8018826:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801882a:	f820 3b02 	strh.w	r3, [r0], #2
 801882e:	e7e9      	b.n	8018804 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018830:	4438      	add	r0, r7
 8018832:	eb01 040c 	add.w	r4, r1, ip
 8018836:	e7e1      	b.n	80187fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018838:	4438      	add	r0, r7
 801883a:	eb01 040c 	add.w	r4, r1, ip
 801883e:	e796      	b.n	801876e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8018840:	4b03      	ldr	r3, [pc, #12]	; (8018850 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8018842:	6818      	ldr	r0, [r3, #0]
 8018844:	6803      	ldr	r3, [r0, #0]
 8018846:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018848:	4798      	blx	r3
 801884a:	e768      	b.n	801871e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801884c:	fffff800 	.word	0xfffff800
 8018850:	20014fd4 	.word	0x20014fd4
 8018854:	20014fce 	.word	0x20014fce

08018858 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018858:	b4f0      	push	{r4, r5, r6, r7}
 801885a:	4616      	mov	r6, r2
 801885c:	2e01      	cmp	r6, #1
 801885e:	461c      	mov	r4, r3
 8018860:	460d      	mov	r5, r1
 8018862:	9a04      	ldr	r2, [sp, #16]
 8018864:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018868:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801886c:	d012      	beq.n	8018894 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801886e:	d303      	bcc.n	8018878 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8018870:	2e02      	cmp	r6, #2
 8018872:	d00a      	beq.n	801888a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8018874:	bcf0      	pop	{r4, r5, r6, r7}
 8018876:	4770      	bx	lr
 8018878:	6805      	ldr	r5, [r0, #0]
 801887a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801887e:	68ed      	ldr	r5, [r5, #12]
 8018880:	4613      	mov	r3, r2
 8018882:	46ac      	mov	ip, r5
 8018884:	4622      	mov	r2, r4
 8018886:	bcf0      	pop	{r4, r5, r6, r7}
 8018888:	4760      	bx	ip
 801888a:	4621      	mov	r1, r4
 801888c:	4628      	mov	r0, r5
 801888e:	bcf0      	pop	{r4, r5, r6, r7}
 8018890:	f7ff bd94 	b.w	80183bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018894:	4621      	mov	r1, r4
 8018896:	4628      	mov	r0, r5
 8018898:	bcf0      	pop	{r4, r5, r6, r7}
 801889a:	f7ff bee5 	b.w	8018668 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080188a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80188a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188a4:	4681      	mov	r9, r0
 80188a6:	b093      	sub	sp, #76	; 0x4c
 80188a8:	6810      	ldr	r0, [r2, #0]
 80188aa:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80188ae:	4f6d      	ldr	r7, [pc, #436]	; (8018a64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80188b0:	4688      	mov	r8, r1
 80188b2:	6851      	ldr	r1, [r2, #4]
 80188b4:	ac0e      	add	r4, sp, #56	; 0x38
 80188b6:	c403      	stmia	r4!, {r0, r1}
 80188b8:	6818      	ldr	r0, [r3, #0]
 80188ba:	6859      	ldr	r1, [r3, #4]
 80188bc:	ac10      	add	r4, sp, #64	; 0x40
 80188be:	4616      	mov	r6, r2
 80188c0:	c403      	stmia	r4!, {r0, r1}
 80188c2:	a80e      	add	r0, sp, #56	; 0x38
 80188c4:	f7f7 ff32 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80188c8:	4631      	mov	r1, r6
 80188ca:	a810      	add	r0, sp, #64	; 0x40
 80188cc:	f7f7 ff72 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80188d0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80188d4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80188d8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80188dc:	4e62      	ldr	r6, [pc, #392]	; (8018a68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80188de:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80188e2:	6830      	ldr	r0, [r6, #0]
 80188e4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80188e8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80188ec:	4489      	add	r9, r1
 80188ee:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80188f2:	440a      	add	r2, r1
 80188f4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80188f8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80188fc:	4413      	add	r3, r2
 80188fe:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8018902:	6803      	ldr	r3, [r0, #0]
 8018904:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018906:	4798      	blx	r3
 8018908:	f010 0f80 	tst.w	r0, #128	; 0x80
 801890c:	6830      	ldr	r0, [r6, #0]
 801890e:	d01d      	beq.n	801894c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018910:	2200      	movs	r2, #0
 8018912:	6801      	ldr	r1, [r0, #0]
 8018914:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8018918:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801891c:	220b      	movs	r2, #11
 801891e:	9207      	str	r2, [sp, #28]
 8018920:	883a      	ldrh	r2, [r7, #0]
 8018922:	9206      	str	r2, [sp, #24]
 8018924:	2201      	movs	r2, #1
 8018926:	e9cd a204 	strd	sl, r2, [sp, #16]
 801892a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801892e:	9203      	str	r2, [sp, #12]
 8018930:	b2a4      	uxth	r4, r4
 8018932:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8018936:	9200      	str	r2, [sp, #0]
 8018938:	b2ad      	uxth	r5, r5
 801893a:	9502      	str	r5, [sp, #8]
 801893c:	9401      	str	r4, [sp, #4]
 801893e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8018940:	4642      	mov	r2, r8
 8018942:	4649      	mov	r1, r9
 8018944:	47a0      	blx	r4
 8018946:	b013      	add	sp, #76	; 0x4c
 8018948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801894c:	6803      	ldr	r3, [r0, #0]
 801894e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018950:	4798      	blx	r3
 8018952:	883b      	ldrh	r3, [r7, #0]
 8018954:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8018958:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801895c:	fb03 1202 	mla	r2, r3, r2, r1
 8018960:	435d      	muls	r5, r3
 8018962:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018966:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801896a:	920c      	str	r2, [sp, #48]	; 0x30
 801896c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8018970:	1b12      	subs	r2, r2, r4
 8018972:	920d      	str	r2, [sp, #52]	; 0x34
 8018974:	0062      	lsls	r2, r4, #1
 8018976:	1b1c      	subs	r4, r3, r4
 8018978:	0063      	lsls	r3, r4, #1
 801897a:	920a      	str	r2, [sp, #40]	; 0x28
 801897c:	930b      	str	r3, [sp, #44]	; 0x2c
 801897e:	f04f 0e04 	mov.w	lr, #4
 8018982:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018984:	4298      	cmp	r0, r3
 8018986:	d266      	bcs.n	8018a56 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8018988:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801898a:	eb00 0b03 	add.w	fp, r0, r3
 801898e:	4558      	cmp	r0, fp
 8018990:	d25c      	bcs.n	8018a4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8018992:	f819 3b01 	ldrb.w	r3, [r9], #1
 8018996:	fb1e e303 	smlabb	r3, lr, r3, lr
 801899a:	f858 2003 	ldr.w	r2, [r8, r3]
 801899e:	0e11      	lsrs	r1, r2, #24
 80189a0:	d012      	beq.n	80189c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80189a2:	29ff      	cmp	r1, #255	; 0xff
 80189a4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80189a8:	d110      	bne.n	80189cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80189aa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80189ae:	d10d      	bne.n	80189cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80189b0:	0953      	lsrs	r3, r2, #5
 80189b2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80189b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80189ba:	f027 0707 	bic.w	r7, r7, #7
 80189be:	431f      	orrs	r7, r3
 80189c0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80189c4:	433a      	orrs	r2, r7
 80189c6:	8002      	strh	r2, [r0, #0]
 80189c8:	3002      	adds	r0, #2
 80189ca:	e7e0      	b.n	801898e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80189cc:	fb0a f101 	mul.w	r1, sl, r1
 80189d0:	8806      	ldrh	r6, [r0, #0]
 80189d2:	1c4b      	adds	r3, r1, #1
 80189d4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80189d8:	1235      	asrs	r5, r6, #8
 80189da:	10f4      	asrs	r4, r6, #3
 80189dc:	121b      	asrs	r3, r3, #8
 80189de:	00f6      	lsls	r6, r6, #3
 80189e0:	b299      	uxth	r1, r3
 80189e2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80189e6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80189ea:	b2f6      	uxtb	r6, r6
 80189ec:	43db      	mvns	r3, r3
 80189ee:	b2d2      	uxtb	r2, r2
 80189f0:	b2db      	uxtb	r3, r3
 80189f2:	fb1c fc01 	smulbb	ip, ip, r1
 80189f6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80189fa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80189fe:	fb12 f201 	smulbb	r2, r2, r1
 8018a02:	fb05 c503 	mla	r5, r5, r3, ip
 8018a06:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8018a0a:	b2ff      	uxtb	r7, r7
 8018a0c:	fb06 2203 	mla	r2, r6, r3, r2
 8018a10:	b2ad      	uxth	r5, r5
 8018a12:	fb17 f701 	smulbb	r7, r7, r1
 8018a16:	b292      	uxth	r2, r2
 8018a18:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018a1c:	fb04 7403 	mla	r4, r4, r3, r7
 8018a20:	f105 0c01 	add.w	ip, r5, #1
 8018a24:	1c57      	adds	r7, r2, #1
 8018a26:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018a2a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018a2e:	b2a4      	uxth	r4, r4
 8018a30:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018a34:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018a38:	433d      	orrs	r5, r7
 8018a3a:	1c67      	adds	r7, r4, #1
 8018a3c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8018a40:	0964      	lsrs	r4, r4, #5
 8018a42:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8018a46:	4325      	orrs	r5, r4
 8018a48:	8005      	strh	r5, [r0, #0]
 8018a4a:	e7bd      	b.n	80189c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018a4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018a4e:	4418      	add	r0, r3
 8018a50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018a52:	4499      	add	r9, r3
 8018a54:	e795      	b.n	8018982 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8018a56:	4b04      	ldr	r3, [pc, #16]	; (8018a68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018a58:	6818      	ldr	r0, [r3, #0]
 8018a5a:	6803      	ldr	r3, [r0, #0]
 8018a5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018a5e:	4798      	blx	r3
 8018a60:	e771      	b.n	8018946 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8018a62:	bf00      	nop
 8018a64:	20014fce 	.word	0x20014fce
 8018a68:	20014fd4 	.word	0x20014fd4

08018a6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8018a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a70:	b087      	sub	sp, #28
 8018a72:	4680      	mov	r8, r0
 8018a74:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8018a78:	460d      	mov	r5, r1
 8018a7a:	4614      	mov	r4, r2
 8018a7c:	2e00      	cmp	r6, #0
 8018a7e:	f000 80b9 	beq.w	8018bf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8018a82:	6810      	ldr	r0, [r2, #0]
 8018a84:	6851      	ldr	r1, [r2, #4]
 8018a86:	af02      	add	r7, sp, #8
 8018a88:	c703      	stmia	r7!, {r0, r1}
 8018a8a:	6818      	ldr	r0, [r3, #0]
 8018a8c:	6859      	ldr	r1, [r3, #4]
 8018a8e:	af04      	add	r7, sp, #16
 8018a90:	c703      	stmia	r7!, {r0, r1}
 8018a92:	a802      	add	r0, sp, #8
 8018a94:	f7f7 fe4a 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018a98:	4621      	mov	r1, r4
 8018a9a:	a804      	add	r0, sp, #16
 8018a9c:	f7f7 fe8a 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018aa0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018aa4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018aa8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8018aac:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8018ab0:	fb14 2103 	smlabb	r1, r4, r3, r2
 8018ab4:	eb08 0401 	add.w	r4, r8, r1
 8018ab8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018abc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018ac0:	440a      	add	r2, r1
 8018ac2:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018ac6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018aca:	4413      	add	r3, r2
 8018acc:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018ad0:	4b4a      	ldr	r3, [pc, #296]	; (8018bfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018ad2:	6818      	ldr	r0, [r3, #0]
 8018ad4:	6803      	ldr	r3, [r0, #0]
 8018ad6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018ad8:	4798      	blx	r3
 8018ada:	4b49      	ldr	r3, [pc, #292]	; (8018c00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018adc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018ae0:	881a      	ldrh	r2, [r3, #0]
 8018ae2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8018ae6:	2eff      	cmp	r6, #255	; 0xff
 8018ae8:	fb02 c101 	mla	r1, r2, r1, ip
 8018aec:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018af0:	fb02 f207 	mul.w	r2, r2, r7
 8018af4:	f105 0104 	add.w	r1, r5, #4
 8018af8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018afc:	461d      	mov	r5, r3
 8018afe:	d05a      	beq.n	8018bb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018b00:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8018b04:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018b08:	b2b6      	uxth	r6, r6
 8018b0a:	fa1f fe8e 	uxth.w	lr, lr
 8018b0e:	9301      	str	r3, [sp, #4]
 8018b10:	4282      	cmp	r2, r0
 8018b12:	d96a      	bls.n	8018bea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018b14:	eb00 0b0a 	add.w	fp, r0, sl
 8018b18:	4583      	cmp	fp, r0
 8018b1a:	d940      	bls.n	8018b9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018b1c:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018b20:	8805      	ldrh	r5, [r0, #0]
 8018b22:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018b26:	122f      	asrs	r7, r5, #8
 8018b28:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018b2c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018b30:	fb17 f70e 	smulbb	r7, r7, lr
 8018b34:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018b38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018b3c:	00ed      	lsls	r5, r5, #3
 8018b3e:	fb0c 7c06 	mla	ip, ip, r6, r7
 8018b42:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018b46:	10df      	asrs	r7, r3, #3
 8018b48:	b2ed      	uxtb	r5, r5
 8018b4a:	00db      	lsls	r3, r3, #3
 8018b4c:	fa1f fc8c 	uxth.w	ip, ip
 8018b50:	fb19 f90e 	smulbb	r9, r9, lr
 8018b54:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018b58:	b2db      	uxtb	r3, r3
 8018b5a:	fb15 f50e 	smulbb	r5, r5, lr
 8018b5e:	fb07 9706 	mla	r7, r7, r6, r9
 8018b62:	fb03 5306 	mla	r3, r3, r6, r5
 8018b66:	f10c 0901 	add.w	r9, ip, #1
 8018b6a:	b29b      	uxth	r3, r3
 8018b6c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018b70:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8018b74:	f103 0c01 	add.w	ip, r3, #1
 8018b78:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018b7c:	b2bf      	uxth	r7, r7
 8018b7e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018b82:	ea4c 0c09 	orr.w	ip, ip, r9
 8018b86:	f107 0901 	add.w	r9, r7, #1
 8018b8a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018b8e:	097f      	lsrs	r7, r7, #5
 8018b90:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018b94:	ea4c 0c07 	orr.w	ip, ip, r7
 8018b98:	f820 cb02 	strh.w	ip, [r0], #2
 8018b9c:	e7bc      	b.n	8018b18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018b9e:	9b01      	ldr	r3, [sp, #4]
 8018ba0:	881b      	ldrh	r3, [r3, #0]
 8018ba2:	eba3 0308 	sub.w	r3, r3, r8
 8018ba6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018baa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018bae:	eba3 0308 	sub.w	r3, r3, r8
 8018bb2:	441c      	add	r4, r3
 8018bb4:	e7ac      	b.n	8018b10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8018bb6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018bba:	4282      	cmp	r2, r0
 8018bbc:	d915      	bls.n	8018bea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018bbe:	eb00 060a 	add.w	r6, r0, sl
 8018bc2:	4286      	cmp	r6, r0
 8018bc4:	d906      	bls.n	8018bd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018bc6:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018bca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018bce:	f820 3b02 	strh.w	r3, [r0], #2
 8018bd2:	e7f6      	b.n	8018bc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018bd4:	882b      	ldrh	r3, [r5, #0]
 8018bd6:	eba3 0308 	sub.w	r3, r3, r8
 8018bda:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018bde:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018be2:	eba3 0308 	sub.w	r3, r3, r8
 8018be6:	441c      	add	r4, r3
 8018be8:	e7e7      	b.n	8018bba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018bea:	4b04      	ldr	r3, [pc, #16]	; (8018bfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018bec:	6818      	ldr	r0, [r3, #0]
 8018bee:	6803      	ldr	r3, [r0, #0]
 8018bf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018bf2:	4798      	blx	r3
 8018bf4:	b007      	add	sp, #28
 8018bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bfa:	bf00      	nop
 8018bfc:	20014fd4 	.word	0x20014fd4
 8018c00:	20014fce 	.word	0x20014fce

08018c04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018c04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c08:	b091      	sub	sp, #68	; 0x44
 8018c0a:	4680      	mov	r8, r0
 8018c0c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8018c10:	460f      	mov	r7, r1
 8018c12:	4614      	mov	r4, r2
 8018c14:	2d00      	cmp	r5, #0
 8018c16:	d051      	beq.n	8018cbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018c18:	6810      	ldr	r0, [r2, #0]
 8018c1a:	6851      	ldr	r1, [r2, #4]
 8018c1c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018e20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018c20:	ae0c      	add	r6, sp, #48	; 0x30
 8018c22:	c603      	stmia	r6!, {r0, r1}
 8018c24:	6818      	ldr	r0, [r3, #0]
 8018c26:	6859      	ldr	r1, [r3, #4]
 8018c28:	ae0e      	add	r6, sp, #56	; 0x38
 8018c2a:	c603      	stmia	r6!, {r0, r1}
 8018c2c:	a80c      	add	r0, sp, #48	; 0x30
 8018c2e:	f7f7 fd7d 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018c32:	4621      	mov	r1, r4
 8018c34:	a80e      	add	r0, sp, #56	; 0x38
 8018c36:	f7f7 fdbd 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018c3a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8018c3e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018c42:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018c46:	f8d9 0000 	ldr.w	r0, [r9]
 8018c4a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8018c4e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8018c52:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018c56:	eb08 0401 	add.w	r4, r8, r1
 8018c5a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8018c5e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8018e24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018c62:	440a      	add	r2, r1
 8018c64:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8018c68:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8018c6c:	4413      	add	r3, r2
 8018c6e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8018c72:	6803      	ldr	r3, [r0, #0]
 8018c74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018c76:	4798      	blx	r3
 8018c78:	f010 0f80 	tst.w	r0, #128	; 0x80
 8018c7c:	f8d9 0000 	ldr.w	r0, [r9]
 8018c80:	d01f      	beq.n	8018cc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018c82:	2200      	movs	r2, #0
 8018c84:	6801      	ldr	r1, [r0, #0]
 8018c86:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018c8a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018c8e:	220b      	movs	r2, #11
 8018c90:	9207      	str	r2, [sp, #28]
 8018c92:	f8b8 2000 	ldrh.w	r2, [r8]
 8018c96:	9206      	str	r2, [sp, #24]
 8018c98:	2201      	movs	r2, #1
 8018c9a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018c9e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8018ca2:	9203      	str	r2, [sp, #12]
 8018ca4:	fa1f f28a 	uxth.w	r2, sl
 8018ca8:	9202      	str	r2, [sp, #8]
 8018caa:	b2b6      	uxth	r6, r6
 8018cac:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018cb0:	9200      	str	r2, [sp, #0]
 8018cb2:	9601      	str	r6, [sp, #4]
 8018cb4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8018cb6:	463a      	mov	r2, r7
 8018cb8:	4621      	mov	r1, r4
 8018cba:	47a8      	blx	r5
 8018cbc:	b011      	add	sp, #68	; 0x44
 8018cbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018cc2:	6803      	ldr	r3, [r0, #0]
 8018cc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018cc6:	4798      	blx	r3
 8018cc8:	f8b8 2000 	ldrh.w	r2, [r8]
 8018ccc:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018cd0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8018cd4:	2dff      	cmp	r5, #255	; 0xff
 8018cd6:	fb02 1303 	mla	r3, r2, r3, r1
 8018cda:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018cde:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018ce2:	fb0a fa02 	mul.w	sl, sl, r2
 8018ce6:	d062      	beq.n	8018dae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018ce8:	ea6f 0c05 	mvn.w	ip, r5
 8018cec:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018cf0:	930a      	str	r3, [sp, #40]	; 0x28
 8018cf2:	b2ad      	uxth	r5, r5
 8018cf4:	fa5f fc8c 	uxtb.w	ip, ip
 8018cf8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018cfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018cfe:	4298      	cmp	r0, r3
 8018d00:	f080 8085 	bcs.w	8018e0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018d04:	eb00 0b09 	add.w	fp, r0, r9
 8018d08:	4558      	cmp	r0, fp
 8018d0a:	d246      	bcs.n	8018d9a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018d0c:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018d10:	2303      	movs	r3, #3
 8018d12:	2204      	movs	r2, #4
 8018d14:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018d18:	eb07 0a0e 	add.w	sl, r7, lr
 8018d1c:	8803      	ldrh	r3, [r0, #0]
 8018d1e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8018d22:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018d26:	1219      	asrs	r1, r3, #8
 8018d28:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018d2c:	fb18 f805 	smulbb	r8, r8, r5
 8018d30:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018d34:	10da      	asrs	r2, r3, #3
 8018d36:	fb01 810c 	mla	r1, r1, ip, r8
 8018d3a:	00db      	lsls	r3, r3, #3
 8018d3c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018d40:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018d44:	b2db      	uxtb	r3, r3
 8018d46:	fb18 f805 	smulbb	r8, r8, r5
 8018d4a:	fb1e fe05 	smulbb	lr, lr, r5
 8018d4e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8018d52:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8018d56:	b289      	uxth	r1, r1
 8018d58:	fb02 820c 	mla	r2, r2, ip, r8
 8018d5c:	fb03 e30c 	mla	r3, r3, ip, lr
 8018d60:	b292      	uxth	r2, r2
 8018d62:	b29b      	uxth	r3, r3
 8018d64:	f101 0801 	add.w	r8, r1, #1
 8018d68:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018d6c:	f103 0e01 	add.w	lr, r3, #1
 8018d70:	f102 0801 	add.w	r8, r2, #1
 8018d74:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018d78:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018d7c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8018d80:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018d84:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018d88:	ea4e 0101 	orr.w	r1, lr, r1
 8018d8c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018d90:	ea41 0108 	orr.w	r1, r1, r8
 8018d94:	f820 1b02 	strh.w	r1, [r0], #2
 8018d98:	e7b6      	b.n	8018d08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018d9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018d9c:	881b      	ldrh	r3, [r3, #0]
 8018d9e:	1b9b      	subs	r3, r3, r6
 8018da0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018da4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018da8:	1b9b      	subs	r3, r3, r6
 8018daa:	441c      	add	r4, r3
 8018dac:	e7a6      	b.n	8018cfc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018dae:	491b      	ldr	r1, [pc, #108]	; (8018e1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018db0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018db4:	2203      	movs	r2, #3
 8018db6:	2504      	movs	r5, #4
 8018db8:	4550      	cmp	r0, sl
 8018dba:	d228      	bcs.n	8018e0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018dbc:	eb00 0c09 	add.w	ip, r0, r9
 8018dc0:	4560      	cmp	r0, ip
 8018dc2:	4623      	mov	r3, r4
 8018dc4:	d219      	bcs.n	8018dfa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8018dc6:	f893 e000 	ldrb.w	lr, [r3]
 8018dca:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018dce:	eb07 0b0e 	add.w	fp, r7, lr
 8018dd2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018dd6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018dda:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018dde:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018de2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018de6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018dea:	ea43 030b 	orr.w	r3, r3, fp
 8018dee:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8018df2:	3401      	adds	r4, #1
 8018df4:	f820 3b02 	strh.w	r3, [r0], #2
 8018df8:	e7e2      	b.n	8018dc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018dfa:	f8b8 3000 	ldrh.w	r3, [r8]
 8018dfe:	1b9b      	subs	r3, r3, r6
 8018e00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018e04:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018e08:	1b9b      	subs	r3, r3, r6
 8018e0a:	441c      	add	r4, r3
 8018e0c:	e7d4      	b.n	8018db8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018e0e:	4b04      	ldr	r3, [pc, #16]	; (8018e20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018e10:	6818      	ldr	r0, [r3, #0]
 8018e12:	6803      	ldr	r3, [r0, #0]
 8018e14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018e16:	4798      	blx	r3
 8018e18:	e750      	b.n	8018cbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018e1a:	bf00      	nop
 8018e1c:	fffff800 	.word	0xfffff800
 8018e20:	20014fd4 	.word	0x20014fd4
 8018e24:	20014fce 	.word	0x20014fce

08018e28 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018e28:	b4f0      	push	{r4, r5, r6, r7}
 8018e2a:	460c      	mov	r4, r1
 8018e2c:	4611      	mov	r1, r2
 8018e2e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8018e32:	780f      	ldrb	r7, [r1, #0]
 8018e34:	784e      	ldrb	r6, [r1, #1]
 8018e36:	2f01      	cmp	r7, #1
 8018e38:	461a      	mov	r2, r3
 8018e3a:	9b04      	ldr	r3, [sp, #16]
 8018e3c:	d036      	beq.n	8018eac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8018e3e:	d31e      	bcc.n	8018e7e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8018e40:	2f02      	cmp	r7, #2
 8018e42:	d14a      	bne.n	8018eda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8018e44:	2e03      	cmp	r6, #3
 8018e46:	d848      	bhi.n	8018eda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8018e48:	e8df f006 	tbb	[pc, r6]
 8018e4c:	16140702 	.word	0x16140702
 8018e50:	9504      	str	r5, [sp, #16]
 8018e52:	4620      	mov	r0, r4
 8018e54:	bcf0      	pop	{r4, r5, r6, r7}
 8018e56:	f7ff be09 	b.w	8018a6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8018e5a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8018e5c:	2800      	cmp	r0, #0
 8018e5e:	d03c      	beq.n	8018eda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8018e60:	6806      	ldr	r6, [r0, #0]
 8018e62:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018e66:	68b5      	ldr	r5, [r6, #8]
 8018e68:	4613      	mov	r3, r2
 8018e6a:	46ac      	mov	ip, r5
 8018e6c:	460a      	mov	r2, r1
 8018e6e:	4621      	mov	r1, r4
 8018e70:	bcf0      	pop	{r4, r5, r6, r7}
 8018e72:	4760      	bx	ip
 8018e74:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8018e76:	e7f1      	b.n	8018e5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018e78:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8018e7c:	e7ee      	b.n	8018e5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018e7e:	2e03      	cmp	r6, #3
 8018e80:	d82b      	bhi.n	8018eda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8018e82:	e8df f006 	tbb	[pc, r6]
 8018e86:	0702      	.short	0x0702
 8018e88:	100e      	.short	0x100e
 8018e8a:	9504      	str	r5, [sp, #16]
 8018e8c:	4620      	mov	r0, r4
 8018e8e:	bcf0      	pop	{r4, r5, r6, r7}
 8018e90:	f7ff bd06 	b.w	80188a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018e94:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8018e96:	b300      	cbz	r0, 8018eda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8018e98:	6806      	ldr	r6, [r0, #0]
 8018e9a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018e9e:	68f5      	ldr	r5, [r6, #12]
 8018ea0:	e7e2      	b.n	8018e68 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018ea2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8018ea4:	e7f7      	b.n	8018e96 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8018ea6:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8018eaa:	e7f4      	b.n	8018e96 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8018eac:	2e03      	cmp	r6, #3
 8018eae:	d814      	bhi.n	8018eda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8018eb0:	e8df f006 	tbb	[pc, r6]
 8018eb4:	100e0702 	.word	0x100e0702
 8018eb8:	9504      	str	r5, [sp, #16]
 8018eba:	4620      	mov	r0, r4
 8018ebc:	bcf0      	pop	{r4, r5, r6, r7}
 8018ebe:	f7ff bea1 	b.w	8018c04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8018ec2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8018ec4:	b148      	cbz	r0, 8018eda <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8018ec6:	6806      	ldr	r6, [r0, #0]
 8018ec8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018ecc:	6935      	ldr	r5, [r6, #16]
 8018ece:	e7cb      	b.n	8018e68 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018ed0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8018ed2:	e7f7      	b.n	8018ec4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8018ed4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8018ed8:	e7f4      	b.n	8018ec4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8018eda:	bcf0      	pop	{r4, r5, r6, r7}
 8018edc:	4770      	bx	lr
	...

08018ee0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018ee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ee4:	4604      	mov	r4, r0
 8018ee6:	b087      	sub	sp, #28
 8018ee8:	6810      	ldr	r0, [r2, #0]
 8018eea:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8018eee:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8019128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8018ef2:	460e      	mov	r6, r1
 8018ef4:	6851      	ldr	r1, [r2, #4]
 8018ef6:	ad02      	add	r5, sp, #8
 8018ef8:	c503      	stmia	r5!, {r0, r1}
 8018efa:	6818      	ldr	r0, [r3, #0]
 8018efc:	6859      	ldr	r1, [r3, #4]
 8018efe:	ad04      	add	r5, sp, #16
 8018f00:	4617      	mov	r7, r2
 8018f02:	c503      	stmia	r5!, {r0, r1}
 8018f04:	a802      	add	r0, sp, #8
 8018f06:	f7f7 fc11 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018f0a:	4639      	mov	r1, r7
 8018f0c:	a804      	add	r0, sp, #16
 8018f0e:	f7f7 fc51 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018f12:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018f16:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018f1a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8018f1e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018f22:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018f26:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018f2a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8018f2e:	440e      	add	r6, r1
 8018f30:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018f34:	440a      	add	r2, r1
 8018f36:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018f3a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018f3e:	4413      	add	r3, r2
 8018f40:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018f44:	4b77      	ldr	r3, [pc, #476]	; (8019124 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018f46:	6818      	ldr	r0, [r3, #0]
 8018f48:	6803      	ldr	r3, [r0, #0]
 8018f4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018f4c:	4798      	blx	r3
 8018f4e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018f52:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018f56:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018f5a:	fb0b 2303 	mla	r3, fp, r3, r2
 8018f5e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018f62:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018f66:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018f6a:	fb05 f50b 	mul.w	r5, r5, fp
 8018f6e:	9300      	str	r3, [sp, #0]
 8018f70:	d069      	beq.n	8019046 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018f72:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018f76:	4558      	cmp	r0, fp
 8018f78:	f080 80cc 	bcs.w	8019114 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018f7c:	9b00      	ldr	r3, [sp, #0]
 8018f7e:	18c3      	adds	r3, r0, r3
 8018f80:	9301      	str	r3, [sp, #4]
 8018f82:	4631      	mov	r1, r6
 8018f84:	9b01      	ldr	r3, [sp, #4]
 8018f86:	4298      	cmp	r0, r3
 8018f88:	d24f      	bcs.n	801902a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018f8a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018f8e:	2a00      	cmp	r2, #0
 8018f90:	d048      	beq.n	8019024 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018f92:	fb0a f202 	mul.w	r2, sl, r2
 8018f96:	1c53      	adds	r3, r2, #1
 8018f98:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018f9c:	121b      	asrs	r3, r3, #8
 8018f9e:	d041      	beq.n	8019024 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018fa0:	8802      	ldrh	r2, [r0, #0]
 8018fa2:	f8b4 c000 	ldrh.w	ip, [r4]
 8018fa6:	b29e      	uxth	r6, r3
 8018fa8:	1215      	asrs	r5, r2, #8
 8018faa:	43db      	mvns	r3, r3
 8018fac:	b2db      	uxtb	r3, r3
 8018fae:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018fb2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018fb6:	fb15 f503 	smulbb	r5, r5, r3
 8018fba:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018fbe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018fc2:	00d2      	lsls	r2, r2, #3
 8018fc4:	fb07 5706 	mla	r7, r7, r6, r5
 8018fc8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018fcc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018fd0:	b2d2      	uxtb	r2, r2
 8018fd2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018fd6:	b2bf      	uxth	r7, r7
 8018fd8:	fb1e fe03 	smulbb	lr, lr, r3
 8018fdc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018fe0:	fa5f fc8c 	uxtb.w	ip, ip
 8018fe4:	fb12 f203 	smulbb	r2, r2, r3
 8018fe8:	fb05 e506 	mla	r5, r5, r6, lr
 8018fec:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018ff0:	f107 0e01 	add.w	lr, r7, #1
 8018ff4:	fa1f fc8c 	uxth.w	ip, ip
 8018ff8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018ffc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8019000:	f10c 0701 	add.w	r7, ip, #1
 8019004:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019008:	b2ad      	uxth	r5, r5
 801900a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801900e:	ea47 070e 	orr.w	r7, r7, lr
 8019012:	f105 0e01 	add.w	lr, r5, #1
 8019016:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801901a:	096d      	lsrs	r5, r5, #5
 801901c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019020:	432f      	orrs	r7, r5
 8019022:	8007      	strh	r7, [r0, #0]
 8019024:	3002      	adds	r0, #2
 8019026:	3402      	adds	r4, #2
 8019028:	e7ac      	b.n	8018f84 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801902a:	f8b9 3000 	ldrh.w	r3, [r9]
 801902e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019032:	eba3 0308 	sub.w	r3, r3, r8
 8019036:	eba6 0608 	sub.w	r6, r6, r8
 801903a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801903e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019042:	440e      	add	r6, r1
 8019044:	e797      	b.n	8018f76 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8019046:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801904a:	42a8      	cmp	r0, r5
 801904c:	d262      	bcs.n	8019114 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801904e:	9b00      	ldr	r3, [sp, #0]
 8019050:	4631      	mov	r1, r6
 8019052:	eb00 0b03 	add.w	fp, r0, r3
 8019056:	4558      	cmp	r0, fp
 8019058:	d24e      	bcs.n	80190f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801905a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801905e:	b12b      	cbz	r3, 801906c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019060:	2bff      	cmp	r3, #255	; 0xff
 8019062:	f8b4 e000 	ldrh.w	lr, [r4]
 8019066:	d104      	bne.n	8019072 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8019068:	f8a0 e000 	strh.w	lr, [r0]
 801906c:	3002      	adds	r0, #2
 801906e:	3402      	adds	r4, #2
 8019070:	e7f1      	b.n	8019056 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8019072:	8802      	ldrh	r2, [r0, #0]
 8019074:	b29f      	uxth	r7, r3
 8019076:	1216      	asrs	r6, r2, #8
 8019078:	43db      	mvns	r3, r3
 801907a:	b2db      	uxtb	r3, r3
 801907c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019080:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019084:	fb16 f603 	smulbb	r6, r6, r3
 8019088:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801908c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019090:	00d2      	lsls	r2, r2, #3
 8019092:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019096:	b2d2      	uxtb	r2, r2
 8019098:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801909c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80190a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80190a4:	fb1a fa03 	smulbb	sl, sl, r3
 80190a8:	fa1f fc8c 	uxth.w	ip, ip
 80190ac:	fb12 f303 	smulbb	r3, r2, r3
 80190b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80190b4:	fa5f fe8e 	uxtb.w	lr, lr
 80190b8:	fb06 a607 	mla	r6, r6, r7, sl
 80190bc:	f10c 0201 	add.w	r2, ip, #1
 80190c0:	fb0e 3307 	mla	r3, lr, r7, r3
 80190c4:	b2b6      	uxth	r6, r6
 80190c6:	b29b      	uxth	r3, r3
 80190c8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80190cc:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80190d0:	f106 0a01 	add.w	sl, r6, #1
 80190d4:	f103 0c01 	add.w	ip, r3, #1
 80190d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80190dc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80190e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80190e4:	0976      	lsrs	r6, r6, #5
 80190e6:	ea4c 0c02 	orr.w	ip, ip, r2
 80190ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80190ee:	ea4c 0c06 	orr.w	ip, ip, r6
 80190f2:	f8a0 c000 	strh.w	ip, [r0]
 80190f6:	e7b9      	b.n	801906c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80190f8:	f8b9 3000 	ldrh.w	r3, [r9]
 80190fc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019100:	eba3 0308 	sub.w	r3, r3, r8
 8019104:	eba6 0608 	sub.w	r6, r6, r8
 8019108:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801910c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019110:	440e      	add	r6, r1
 8019112:	e79a      	b.n	801904a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8019114:	4b03      	ldr	r3, [pc, #12]	; (8019124 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8019116:	6818      	ldr	r0, [r3, #0]
 8019118:	6803      	ldr	r3, [r0, #0]
 801911a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801911c:	4798      	blx	r3
 801911e:	b007      	add	sp, #28
 8019120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019124:	20014fd4 	.word	0x20014fd4
 8019128:	20014fce 	.word	0x20014fce

0801912c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801912c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019130:	b089      	sub	sp, #36	; 0x24
 8019132:	4682      	mov	sl, r0
 8019134:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8019138:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801913a:	460f      	mov	r7, r1
 801913c:	4691      	mov	r9, r2
 801913e:	4698      	mov	r8, r3
 8019140:	2e00      	cmp	r6, #0
 8019142:	d03d      	beq.n	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8019144:	4608      	mov	r0, r1
 8019146:	f7fa fe59 	bl	8013dfc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801914a:	4605      	mov	r5, r0
 801914c:	4638      	mov	r0, r7
 801914e:	f7fa fe89 	bl	8013e64 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019152:	f8ad 000e 	strh.w	r0, [sp, #14]
 8019156:	4638      	mov	r0, r7
 8019158:	f8ad 9008 	strh.w	r9, [sp, #8]
 801915c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019160:	f8ad 800a 	strh.w	r8, [sp, #10]
 8019164:	f7fa ff36 	bl	8013fd4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019168:	4605      	mov	r5, r0
 801916a:	4638      	mov	r0, r7
 801916c:	f7fa ff62 	bl	8014034 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8019170:	4681      	mov	r9, r0
 8019172:	4638      	mov	r0, r7
 8019174:	f7fa ffb2 	bl	80140dc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019178:	280b      	cmp	r0, #11
 801917a:	d821      	bhi.n	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801917c:	e8df f000 	tbb	[pc, r0]
 8019180:	2006aebe 	.word	0x2006aebe
 8019184:	20202020 	.word	0x20202020
 8019188:	b5202020 	.word	0xb5202020
 801918c:	4bb0      	ldr	r3, [pc, #704]	; (8019450 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801918e:	6818      	ldr	r0, [r3, #0]
 8019190:	6803      	ldr	r3, [r0, #0]
 8019192:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019194:	4798      	blx	r3
 8019196:	2eff      	cmp	r6, #255	; 0xff
 8019198:	d101      	bne.n	801919e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801919a:	0683      	lsls	r3, r0, #26
 801919c:	d506      	bpl.n	80191ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801919e:	4633      	mov	r3, r6
 80191a0:	4622      	mov	r2, r4
 80191a2:	a902      	add	r1, sp, #8
 80191a4:	4628      	mov	r0, r5
 80191a6:	f7ff f909 	bl	80183bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80191aa:	e009      	b.n	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80191ac:	4638      	mov	r0, r7
 80191ae:	f7fa fed9 	bl	8013f64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80191b2:	b940      	cbnz	r0, 80191c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80191b4:	4623      	mov	r3, r4
 80191b6:	aa02      	add	r2, sp, #8
 80191b8:	4629      	mov	r1, r5
 80191ba:	4650      	mov	r0, sl
 80191bc:	f7ff f9e4 	bl	8018588 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80191c0:	b009      	add	sp, #36	; 0x24
 80191c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191c6:	f10d 0818 	add.w	r8, sp, #24
 80191ca:	4639      	mov	r1, r7
 80191cc:	4640      	mov	r0, r8
 80191ce:	f7fa fe7d 	bl	8013ecc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80191d2:	e898 0003 	ldmia.w	r8, {r0, r1}
 80191d6:	af04      	add	r7, sp, #16
 80191d8:	e887 0003 	stmia.w	r7, {r0, r1}
 80191dc:	4638      	mov	r0, r7
 80191de:	4621      	mov	r1, r4
 80191e0:	f7f3 fe4c 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 80191e4:	4638      	mov	r0, r7
 80191e6:	f7f3 fe8c 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80191ea:	2800      	cmp	r0, #0
 80191ec:	d1d7      	bne.n	801919e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80191ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80191f2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80191f6:	4293      	cmp	r3, r2
 80191f8:	dd12      	ble.n	8019220 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80191fa:	1a9b      	subs	r3, r3, r2
 80191fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019200:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019204:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019208:	f8ad 201a 	strh.w	r2, [sp, #26]
 801920c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019210:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019214:	4642      	mov	r2, r8
 8019216:	4633      	mov	r3, r6
 8019218:	a902      	add	r1, sp, #8
 801921a:	4628      	mov	r0, r5
 801921c:	f7ff f8ce 	bl	80183bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019220:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019224:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019228:	4293      	cmp	r3, r2
 801922a:	dd12      	ble.n	8019252 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801922c:	1a9b      	subs	r3, r3, r2
 801922e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019232:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019236:	f8ad 2018 	strh.w	r2, [sp, #24]
 801923a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801923e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019242:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019246:	23ff      	movs	r3, #255	; 0xff
 8019248:	4642      	mov	r2, r8
 801924a:	a902      	add	r1, sp, #8
 801924c:	4628      	mov	r0, r5
 801924e:	f7ff f8b5 	bl	80183bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019252:	463b      	mov	r3, r7
 8019254:	aa02      	add	r2, sp, #8
 8019256:	4629      	mov	r1, r5
 8019258:	4650      	mov	r0, sl
 801925a:	f7ff f995 	bl	8018588 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801925e:	88a2      	ldrh	r2, [r4, #4]
 8019260:	8823      	ldrh	r3, [r4, #0]
 8019262:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019266:	4413      	add	r3, r2
 8019268:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801926c:	440a      	add	r2, r1
 801926e:	b29b      	uxth	r3, r3
 8019270:	b292      	uxth	r2, r2
 8019272:	b211      	sxth	r1, r2
 8019274:	b218      	sxth	r0, r3
 8019276:	4288      	cmp	r0, r1
 8019278:	dd12      	ble.n	80192a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801927a:	1a9b      	subs	r3, r3, r2
 801927c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019280:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8019284:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019288:	f8ad 301c 	strh.w	r3, [sp, #28]
 801928c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019290:	23ff      	movs	r3, #255	; 0xff
 8019292:	4642      	mov	r2, r8
 8019294:	a902      	add	r1, sp, #8
 8019296:	4628      	mov	r0, r5
 8019298:	f8ad 601a 	strh.w	r6, [sp, #26]
 801929c:	f7ff f88e 	bl	80183bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80192a0:	88e2      	ldrh	r2, [r4, #6]
 80192a2:	8863      	ldrh	r3, [r4, #2]
 80192a4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80192a8:	4413      	add	r3, r2
 80192aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80192ae:	440a      	add	r2, r1
 80192b0:	b29b      	uxth	r3, r3
 80192b2:	b292      	uxth	r2, r2
 80192b4:	b211      	sxth	r1, r2
 80192b6:	b218      	sxth	r0, r3
 80192b8:	4288      	cmp	r0, r1
 80192ba:	dd81      	ble.n	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80192bc:	1a9b      	subs	r3, r3, r2
 80192be:	f9b4 6000 	ldrsh.w	r6, [r4]
 80192c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80192c6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80192ca:	f8ad 6018 	strh.w	r6, [sp, #24]
 80192ce:	f8ad 101a 	strh.w	r1, [sp, #26]
 80192d2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80192d6:	23ff      	movs	r3, #255	; 0xff
 80192d8:	4642      	mov	r2, r8
 80192da:	e762      	b.n	80191a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80192dc:	4633      	mov	r3, r6
 80192de:	4622      	mov	r2, r4
 80192e0:	a902      	add	r1, sp, #8
 80192e2:	4628      	mov	r0, r5
 80192e4:	f7ff f9c0 	bl	8018668 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80192e8:	e76a      	b.n	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80192ea:	e9cd 4600 	strd	r4, r6, [sp]
 80192ee:	ab02      	add	r3, sp, #8
 80192f0:	464a      	mov	r2, r9
 80192f2:	4629      	mov	r1, r5
 80192f4:	4650      	mov	r0, sl
 80192f6:	f7ff fd97 	bl	8018e28 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80192fa:	e761      	b.n	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80192fc:	4638      	mov	r0, r7
 80192fe:	f7fa fe31 	bl	8013f64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019302:	b950      	cbnz	r0, 801931a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8019304:	e9cd 6000 	strd	r6, r0, [sp]
 8019308:	f8da 3000 	ldr.w	r3, [sl]
 801930c:	aa02      	add	r2, sp, #8
 801930e:	68de      	ldr	r6, [r3, #12]
 8019310:	4629      	mov	r1, r5
 8019312:	4623      	mov	r3, r4
 8019314:	4650      	mov	r0, sl
 8019316:	47b0      	blx	r6
 8019318:	e752      	b.n	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801931a:	f10d 0818 	add.w	r8, sp, #24
 801931e:	4639      	mov	r1, r7
 8019320:	4640      	mov	r0, r8
 8019322:	f7fa fdd3 	bl	8013ecc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019326:	e898 0003 	ldmia.w	r8, {r0, r1}
 801932a:	af04      	add	r7, sp, #16
 801932c:	e887 0003 	stmia.w	r7, {r0, r1}
 8019330:	4638      	mov	r0, r7
 8019332:	4621      	mov	r1, r4
 8019334:	f7f3 fda2 	bl	800ce7c <_ZN8touchgfx4RectaNERKS0_>
 8019338:	4638      	mov	r0, r7
 801933a:	f7f3 fde2 	bl	800cf02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801933e:	b138      	cbz	r0, 8019350 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8019340:	9600      	str	r6, [sp, #0]
 8019342:	4623      	mov	r3, r4
 8019344:	aa02      	add	r2, sp, #8
 8019346:	4649      	mov	r1, r9
 8019348:	4628      	mov	r0, r5
 801934a:	f7ff fdc9 	bl	8018ee0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801934e:	e737      	b.n	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8019350:	e9cd 6000 	strd	r6, r0, [sp]
 8019354:	f8da 3000 	ldr.w	r3, [sl]
 8019358:	aa02      	add	r2, sp, #8
 801935a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801935e:	4629      	mov	r1, r5
 8019360:	463b      	mov	r3, r7
 8019362:	4650      	mov	r0, sl
 8019364:	47d8      	blx	fp
 8019366:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801936a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801936e:	4293      	cmp	r3, r2
 8019370:	dd13      	ble.n	801939a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8019372:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019376:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801937a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801937e:	1a9b      	subs	r3, r3, r2
 8019380:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019384:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019388:	f8ad 301e 	strh.w	r3, [sp, #30]
 801938c:	9600      	str	r6, [sp, #0]
 801938e:	4643      	mov	r3, r8
 8019390:	aa02      	add	r2, sp, #8
 8019392:	4649      	mov	r1, r9
 8019394:	4628      	mov	r0, r5
 8019396:	f7ff fda3 	bl	8018ee0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801939a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801939e:	f9b4 2000 	ldrsh.w	r2, [r4]
 80193a2:	4293      	cmp	r3, r2
 80193a4:	dd13      	ble.n	80193ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80193a6:	1a9b      	subs	r3, r3, r2
 80193a8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80193ac:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80193b0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80193b4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80193b8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80193bc:	f8ad 101e 	strh.w	r1, [sp, #30]
 80193c0:	9600      	str	r6, [sp, #0]
 80193c2:	4643      	mov	r3, r8
 80193c4:	aa02      	add	r2, sp, #8
 80193c6:	4649      	mov	r1, r9
 80193c8:	4628      	mov	r0, r5
 80193ca:	f7ff fd89 	bl	8018ee0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80193ce:	88a2      	ldrh	r2, [r4, #4]
 80193d0:	8823      	ldrh	r3, [r4, #0]
 80193d2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80193d6:	4413      	add	r3, r2
 80193d8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80193dc:	440a      	add	r2, r1
 80193de:	b29b      	uxth	r3, r3
 80193e0:	b292      	uxth	r2, r2
 80193e2:	b211      	sxth	r1, r2
 80193e4:	b218      	sxth	r0, r3
 80193e6:	4288      	cmp	r0, r1
 80193e8:	dd13      	ble.n	8019412 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80193ea:	1a9b      	subs	r3, r3, r2
 80193ec:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80193f0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80193f4:	f8ad 1018 	strh.w	r1, [sp, #24]
 80193f8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80193fc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019400:	9600      	str	r6, [sp, #0]
 8019402:	4643      	mov	r3, r8
 8019404:	aa02      	add	r2, sp, #8
 8019406:	4649      	mov	r1, r9
 8019408:	4628      	mov	r0, r5
 801940a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801940e:	f7ff fd67 	bl	8018ee0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019412:	88e2      	ldrh	r2, [r4, #6]
 8019414:	8863      	ldrh	r3, [r4, #2]
 8019416:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801941a:	4413      	add	r3, r2
 801941c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8019420:	440a      	add	r2, r1
 8019422:	b29b      	uxth	r3, r3
 8019424:	b292      	uxth	r2, r2
 8019426:	b211      	sxth	r1, r2
 8019428:	b218      	sxth	r0, r3
 801942a:	4288      	cmp	r0, r1
 801942c:	f77f aec8 	ble.w	80191c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8019430:	f9b4 7000 	ldrsh.w	r7, [r4]
 8019434:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019438:	f8ad 7018 	strh.w	r7, [sp, #24]
 801943c:	1a9b      	subs	r3, r3, r2
 801943e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019442:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019446:	f8ad 001c 	strh.w	r0, [sp, #28]
 801944a:	9600      	str	r6, [sp, #0]
 801944c:	4643      	mov	r3, r8
 801944e:	e779      	b.n	8019344 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8019450:	20014fd4 	.word	0x20014fd4

08019454 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8019454:	b180      	cbz	r0, 8019478 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8019456:	2903      	cmp	r1, #3
 8019458:	d81c      	bhi.n	8019494 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801945a:	e8df f001 	tbb	[pc, r1]
 801945e:	1d02      	.short	0x1d02
 8019460:	1f08      	.short	0x1f08
 8019462:	4b10      	ldr	r3, [pc, #64]	; (80194a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019464:	8818      	ldrh	r0, [r3, #0]
 8019466:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801946a:	4240      	negs	r0, r0
 801946c:	4770      	bx	lr
 801946e:	4b0d      	ldr	r3, [pc, #52]	; (80194a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019470:	8818      	ldrh	r0, [r3, #0]
 8019472:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019476:	4770      	bx	lr
 8019478:	2903      	cmp	r1, #3
 801947a:	d80b      	bhi.n	8019494 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801947c:	a301      	add	r3, pc, #4	; (adr r3, 8019484 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801947e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019482:	bf00      	nop
 8019484:	08019499 	.word	0x08019499
 8019488:	0801946f 	.word	0x0801946f
 801948c:	0801949d 	.word	0x0801949d
 8019490:	08019463 	.word	0x08019463
 8019494:	2000      	movs	r0, #0
 8019496:	4770      	bx	lr
 8019498:	2001      	movs	r0, #1
 801949a:	4770      	bx	lr
 801949c:	f04f 30ff 	mov.w	r0, #4294967295
 80194a0:	4770      	bx	lr
 80194a2:	bf00      	nop
 80194a4:	20014fce 	.word	0x20014fce

080194a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80194a8:	b180      	cbz	r0, 80194cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80194aa:	2903      	cmp	r1, #3
 80194ac:	d81c      	bhi.n	80194e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80194ae:	e8df f001 	tbb	[pc, r1]
 80194b2:	021d      	.short	0x021d
 80194b4:	071f      	.short	0x071f
 80194b6:	4b10      	ldr	r3, [pc, #64]	; (80194f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80194b8:	8818      	ldrh	r0, [r3, #0]
 80194ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80194be:	4770      	bx	lr
 80194c0:	4b0d      	ldr	r3, [pc, #52]	; (80194f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80194c2:	8818      	ldrh	r0, [r3, #0]
 80194c4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80194c8:	4240      	negs	r0, r0
 80194ca:	4770      	bx	lr
 80194cc:	2903      	cmp	r1, #3
 80194ce:	d80b      	bhi.n	80194e8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80194d0:	a301      	add	r3, pc, #4	; (adr r3, 80194d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80194d2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80194d6:	bf00      	nop
 80194d8:	080194b7 	.word	0x080194b7
 80194dc:	080194f1 	.word	0x080194f1
 80194e0:	080194c1 	.word	0x080194c1
 80194e4:	080194ed 	.word	0x080194ed
 80194e8:	2000      	movs	r0, #0
 80194ea:	4770      	bx	lr
 80194ec:	2001      	movs	r0, #1
 80194ee:	4770      	bx	lr
 80194f0:	f04f 30ff 	mov.w	r0, #4294967295
 80194f4:	4770      	bx	lr
 80194f6:	bf00      	nop
 80194f8:	20014fce 	.word	0x20014fce

080194fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80194fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019500:	b099      	sub	sp, #100	; 0x64
 8019502:	910b      	str	r1, [sp, #44]	; 0x2c
 8019504:	a914      	add	r1, sp, #80	; 0x50
 8019506:	e881 000c 	stmia.w	r1, {r2, r3}
 801950a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801950e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8019512:	f891 900d 	ldrb.w	r9, [r1, #13]
 8019516:	9309      	str	r3, [sp, #36]	; 0x24
 8019518:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801951c:	9310      	str	r3, [sp, #64]	; 0x40
 801951e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8019522:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8019526:	930c      	str	r3, [sp, #48]	; 0x30
 8019528:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801952c:	798f      	ldrb	r7, [r1, #6]
 801952e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8019532:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8019536:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801953a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801953e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8019542:	431f      	orrs	r7, r3
 8019544:	f000 8195 	beq.w	8019872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019548:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801954c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8019550:	f891 9007 	ldrb.w	r9, [r1, #7]
 8019554:	ea59 0903 	orrs.w	r9, r9, r3
 8019558:	f000 818b 	beq.w	8019872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801955c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8019560:	b29b      	uxth	r3, r3
 8019562:	2d00      	cmp	r5, #0
 8019564:	f000 812e 	beq.w	80197c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8019568:	1aed      	subs	r5, r5, r3
 801956a:	b2ad      	uxth	r5, r5
 801956c:	042b      	lsls	r3, r5, #16
 801956e:	d502      	bpl.n	8019576 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8019570:	1b64      	subs	r4, r4, r5
 8019572:	b224      	sxth	r4, r4
 8019574:	2500      	movs	r5, #0
 8019576:	f9b2 1000 	ldrsh.w	r1, [r2]
 801957a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801957e:	428c      	cmp	r4, r1
 8019580:	b28b      	uxth	r3, r1
 8019582:	bfbf      	itttt	lt
 8019584:	18ed      	addlt	r5, r5, r3
 8019586:	1b2c      	sublt	r4, r5, r4
 8019588:	b2a5      	uxthlt	r5, r4
 801958a:	460c      	movlt	r4, r1
 801958c:	8891      	ldrh	r1, [r2, #4]
 801958e:	440b      	add	r3, r1
 8019590:	b21b      	sxth	r3, r3
 8019592:	930f      	str	r3, [sp, #60]	; 0x3c
 8019594:	88d3      	ldrh	r3, [r2, #6]
 8019596:	8852      	ldrh	r2, [r2, #2]
 8019598:	4413      	add	r3, r2
 801959a:	b21b      	sxth	r3, r3
 801959c:	930d      	str	r3, [sp, #52]	; 0x34
 801959e:	4bbe      	ldr	r3, [pc, #760]	; (8019898 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80195a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80195a2:	f893 b000 	ldrb.w	fp, [r3]
 80195a6:	f10b 3cff 	add.w	ip, fp, #4294967295
 80195aa:	f1dc 0300 	rsbs	r3, ip, #0
 80195ae:	eb43 030c 	adc.w	r3, r3, ip
 80195b2:	930e      	str	r3, [sp, #56]	; 0x38
 80195b4:	4621      	mov	r1, r4
 80195b6:	4653      	mov	r3, sl
 80195b8:	a814      	add	r0, sp, #80	; 0x50
 80195ba:	f7f6 ff2c 	bl	8010416 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80195be:	4621      	mov	r1, r4
 80195c0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80195c4:	4653      	mov	r3, sl
 80195c6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80195c8:	a814      	add	r0, sp, #80	; 0x50
 80195ca:	f7f6 ff41 	bl	8010450 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80195ce:	a918      	add	r1, sp, #96	; 0x60
 80195d0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80195d4:	a817      	add	r0, sp, #92	; 0x5c
 80195d6:	f7f7 f867 	bl	80106a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80195da:	f1ba 0f00 	cmp.w	sl, #0
 80195de:	f040 80f4 	bne.w	80197ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80195e2:	f1bb 0f01 	cmp.w	fp, #1
 80195e6:	f040 80f8 	bne.w	80197da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80195ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195ec:	2b00      	cmp	r3, #0
 80195ee:	f040 8145 	bne.w	801987c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80195f2:	b2ba      	uxth	r2, r7
 80195f4:	b905      	cbnz	r5, 80195f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80195f6:	b16e      	cbz	r6, 8019614 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80195f8:	fb06 5302 	mla	r3, r6, r2, r5
 80195fc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80195fe:	fb08 f303 	mul.w	r3, r8, r3
 8019602:	4631      	mov	r1, r6
 8019604:	f003 0607 	and.w	r6, r3, #7
 8019608:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801960c:	9328      	str	r3, [sp, #160]	; 0xa0
 801960e:	eba9 0301 	sub.w	r3, r9, r1
 8019612:	930a      	str	r3, [sp, #40]	; 0x28
 8019614:	4651      	mov	r1, sl
 8019616:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019618:	f7ff ff1c 	bl	8019454 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801961c:	4681      	mov	r9, r0
 801961e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019620:	f7ff ff42 	bl	80194a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8019624:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019626:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019628:	eba3 0a01 	sub.w	sl, r3, r1
 801962c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801962e:	459a      	cmp	sl, r3
 8019630:	bfa8      	it	ge
 8019632:	469a      	movge	sl, r3
 8019634:	f1ba 0f00 	cmp.w	sl, #0
 8019638:	4683      	mov	fp, r0
 801963a:	f340 811a 	ble.w	8019872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801963e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019640:	1b64      	subs	r4, r4, r5
 8019642:	1b1c      	subs	r4, r3, r4
 8019644:	42bc      	cmp	r4, r7
 8019646:	bfd4      	ite	le
 8019648:	ebc5 0504 	rsble	r5, r5, r4
 801964c:	ebc5 0507 	rsbgt	r5, r5, r7
 8019650:	2d00      	cmp	r5, #0
 8019652:	f340 810e 	ble.w	8019872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019656:	1b52      	subs	r2, r2, r5
 8019658:	fb08 f302 	mul.w	r3, r8, r2
 801965c:	930f      	str	r3, [sp, #60]	; 0x3c
 801965e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019660:	2b00      	cmp	r3, #0
 8019662:	f040 8116 	bne.w	8019892 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8019666:	4b8d      	ldr	r3, [pc, #564]	; (801989c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8019668:	6818      	ldr	r0, [r3, #0]
 801966a:	6803      	ldr	r3, [r0, #0]
 801966c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801966e:	4798      	blx	r3
 8019670:	2301      	movs	r3, #1
 8019672:	fa03 f308 	lsl.w	r3, r3, r8
 8019676:	4a8a      	ldr	r2, [pc, #552]	; (80198a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8019678:	3b01      	subs	r3, #1
 801967a:	b2db      	uxtb	r3, r3
 801967c:	8811      	ldrh	r1, [r2, #0]
 801967e:	930e      	str	r3, [sp, #56]	; 0x38
 8019680:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8019684:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8019688:	fb01 2303 	mla	r3, r1, r3, r2
 801968c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019690:	930a      	str	r3, [sp, #40]	; 0x28
 8019692:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019694:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8019698:	9313      	str	r3, [sp, #76]	; 0x4c
 801969a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801969c:	0a19      	lsrs	r1, r3, #8
 801969e:	b2cb      	uxtb	r3, r1
 80196a0:	9312      	str	r3, [sp, #72]	; 0x48
 80196a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80196a4:	b2db      	uxtb	r3, r3
 80196a6:	9311      	str	r3, [sp, #68]	; 0x44
 80196a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80196aa:	095a      	lsrs	r2, r3, #5
 80196ac:	4b7d      	ldr	r3, [pc, #500]	; (80198a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80196ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80196b2:	400b      	ands	r3, r1
 80196b4:	4313      	orrs	r3, r2
 80196b6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80196b8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80196bc:	4313      	orrs	r3, r2
 80196be:	b29b      	uxth	r3, r3
 80196c0:	9310      	str	r3, [sp, #64]	; 0x40
 80196c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80196c4:	781a      	ldrb	r2, [r3, #0]
 80196c6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80196ca:	4132      	asrs	r2, r6
 80196cc:	fb05 b919 	mls	r9, r5, r9, fp
 80196d0:	fb03 fb05 	mul.w	fp, r3, r5
 80196d4:	b2d2      	uxtb	r2, r2
 80196d6:	930d      	str	r3, [sp, #52]	; 0x34
 80196d8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80196dc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80196e0:	f0c0 80f5 	bcc.w	80198ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80196e4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80196e8:	46ae      	mov	lr, r5
 80196ea:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80196ee:	f0c0 80dd 	bcc.w	80198ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80196f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80196f4:	4013      	ands	r3, r2
 80196f6:	d055      	beq.n	80197a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80196f8:	20ff      	movs	r0, #255	; 0xff
 80196fa:	990e      	ldr	r1, [sp, #56]	; 0x38
 80196fc:	fb90 f1f1 	sdiv	r1, r0, r1
 8019700:	434b      	muls	r3, r1
 8019702:	2bfe      	cmp	r3, #254	; 0xfe
 8019704:	dd03      	ble.n	801970e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8019706:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019708:	4281      	cmp	r1, r0
 801970a:	f000 80cd 	beq.w	80198a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801970e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019710:	f8bc 4000 	ldrh.w	r4, [ip]
 8019714:	fb11 f303 	smulbb	r3, r1, r3
 8019718:	b29b      	uxth	r3, r3
 801971a:	1c59      	adds	r1, r3, #1
 801971c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019720:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019724:	b29f      	uxth	r7, r3
 8019726:	43db      	mvns	r3, r3
 8019728:	b2db      	uxtb	r3, r3
 801972a:	9309      	str	r3, [sp, #36]	; 0x24
 801972c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801972e:	1220      	asrs	r0, r4, #8
 8019730:	fb13 f907 	smulbb	r9, r3, r7
 8019734:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019738:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801973a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801973e:	fb00 9003 	mla	r0, r0, r3, r9
 8019742:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019744:	10e1      	asrs	r1, r4, #3
 8019746:	fb13 f907 	smulbb	r9, r3, r7
 801974a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801974e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019750:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8019754:	fb01 9103 	mla	r1, r1, r3, r9
 8019758:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801975a:	00e4      	lsls	r4, r4, #3
 801975c:	fb13 f707 	smulbb	r7, r3, r7
 8019760:	b2e4      	uxtb	r4, r4
 8019762:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019764:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019768:	fb04 7403 	mla	r4, r4, r3, r7
 801976c:	b280      	uxth	r0, r0
 801976e:	b2a4      	uxth	r4, r4
 8019770:	1c43      	adds	r3, r0, #1
 8019772:	f104 0901 	add.w	r9, r4, #1
 8019776:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801977a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801977e:	b289      	uxth	r1, r1
 8019780:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8019784:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019788:	ea49 0000 	orr.w	r0, r9, r0
 801978c:	f101 0901 	add.w	r9, r1, #1
 8019790:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8019794:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019798:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801979c:	ea40 0009 	orr.w	r0, r0, r9
 80197a0:	f8ac 0000 	strh.w	r0, [ip]
 80197a4:	4446      	add	r6, r8
 80197a6:	b2b6      	uxth	r6, r6
 80197a8:	2e07      	cmp	r6, #7
 80197aa:	bf81      	itttt	hi
 80197ac:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80197ae:	785a      	ldrbhi	r2, [r3, #1]
 80197b0:	3301      	addhi	r3, #1
 80197b2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 80197b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80197b6:	bf9a      	itte	ls
 80197b8:	fa42 f208 	asrls.w	r2, r2, r8
 80197bc:	b2d2      	uxtbls	r2, r2
 80197be:	2600      	movhi	r6, #0
 80197c0:	449c      	add	ip, r3
 80197c2:	e792      	b.n	80196ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80197c4:	441c      	add	r4, r3
 80197c6:	b224      	sxth	r4, r4
 80197c8:	e6d5      	b.n	8019576 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80197ca:	f1ba 0f01 	cmp.w	sl, #1
 80197ce:	f47f af0c 	bne.w	80195ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80197d2:	f1bb 0f01 	cmp.w	fp, #1
 80197d6:	f47f af08 	bne.w	80195ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80197da:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801989c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80197de:	f8db 0000 	ldr.w	r0, [fp]
 80197e2:	6803      	ldr	r3, [r0, #0]
 80197e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80197e6:	4798      	blx	r3
 80197e8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80197ec:	465a      	mov	r2, fp
 80197ee:	d006      	beq.n	80197fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80197f0:	f1b8 0f04 	cmp.w	r8, #4
 80197f4:	d140      	bne.n	8019878 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80197f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197f8:	3300      	adds	r3, #0
 80197fa:	bf18      	it	ne
 80197fc:	2301      	movne	r3, #1
 80197fe:	0580      	lsls	r0, r0, #22
 8019800:	d56e      	bpl.n	80198e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8019802:	f1b8 0f08 	cmp.w	r8, #8
 8019806:	d16b      	bne.n	80198e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8019808:	2b00      	cmp	r3, #0
 801980a:	bf0c      	ite	eq
 801980c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8019810:	f44f 7180 	movne.w	r1, #256	; 0x100
 8019814:	2d00      	cmp	r5, #0
 8019816:	f47f aee8 	bne.w	80195ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801981a:	2e00      	cmp	r6, #0
 801981c:	f47f aee5 	bne.w	80195ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019820:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019822:	19e3      	adds	r3, r4, r7
 8019824:	4283      	cmp	r3, r0
 8019826:	f73f aee0 	bgt.w	80195ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801982a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801982c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801982e:	444b      	add	r3, r9
 8019830:	4283      	cmp	r3, r0
 8019832:	f73f aeda 	bgt.w	80195ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019836:	6810      	ldr	r0, [r2, #0]
 8019838:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801983c:	6804      	ldr	r4, [r0, #0]
 801983e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8019842:	b2bf      	uxth	r7, r7
 8019844:	f1b8 0f08 	cmp.w	r8, #8
 8019848:	f04f 0500 	mov.w	r5, #0
 801984c:	bf18      	it	ne
 801984e:	3701      	addne	r7, #1
 8019850:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019854:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019856:	9104      	str	r1, [sp, #16]
 8019858:	bf18      	it	ne
 801985a:	f027 0701 	bicne.w	r7, r7, #1
 801985e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019860:	bf18      	it	ne
 8019862:	b2bf      	uxthne	r7, r7
 8019864:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8019868:	e9cd 7900 	strd	r7, r9, [sp]
 801986c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801986e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8019870:	47a0      	blx	r4
 8019872:	b019      	add	sp, #100	; 0x64
 8019874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019878:	2300      	movs	r3, #0
 801987a:	e7c0      	b.n	80197fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801987c:	2208      	movs	r2, #8
 801987e:	fb92 f3f8 	sdiv	r3, r2, r8
 8019882:	1e5a      	subs	r2, r3, #1
 8019884:	443a      	add	r2, r7
 8019886:	fb92 f2f3 	sdiv	r2, r2, r3
 801988a:	fb12 f203 	smulbb	r2, r2, r3
 801988e:	b292      	uxth	r2, r2
 8019890:	e6b0      	b.n	80195f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8019892:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019894:	e6ec      	b.n	8019670 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8019896:	bf00      	nop
 8019898:	20014fcc 	.word	0x20014fcc
 801989c:	20014fd4 	.word	0x20014fd4
 80198a0:	20014fce 	.word	0x20014fce
 80198a4:	00fff800 	.word	0x00fff800
 80198a8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80198aa:	e779      	b.n	80197a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80198ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80198ae:	b153      	cbz	r3, 80198c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80198b0:	441e      	add	r6, r3
 80198b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80198b4:	b2b6      	uxth	r6, r6
 80198b6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 80198ba:	f006 0607 	and.w	r6, r6, #7
 80198be:	781a      	ldrb	r2, [r3, #0]
 80198c0:	9328      	str	r3, [sp, #160]	; 0xa0
 80198c2:	4132      	asrs	r2, r6
 80198c4:	b2d2      	uxtb	r2, r2
 80198c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80198c8:	445b      	add	r3, fp
 80198ca:	930a      	str	r3, [sp, #40]	; 0x28
 80198cc:	e706      	b.n	80196dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80198ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80198d0:	2b00      	cmp	r3, #0
 80198d2:	d1ce      	bne.n	8019872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80198d4:	4b05      	ldr	r3, [pc, #20]	; (80198ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80198d6:	6818      	ldr	r0, [r3, #0]
 80198d8:	6803      	ldr	r3, [r0, #0]
 80198da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80198dc:	4798      	blx	r3
 80198de:	e7c8      	b.n	8019872 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80198e0:	2b00      	cmp	r3, #0
 80198e2:	f43f ae82 	beq.w	80195ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80198e6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80198ea:	e793      	b.n	8019814 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80198ec:	20014fd4 	.word	0x20014fd4

080198f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80198f0:	b538      	push	{r3, r4, r5, lr}
 80198f2:	4c15      	ldr	r4, [pc, #84]	; (8019948 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80198f4:	7823      	ldrb	r3, [r4, #0]
 80198f6:	f3bf 8f5b 	dmb	ish
 80198fa:	07da      	lsls	r2, r3, #31
 80198fc:	4605      	mov	r5, r0
 80198fe:	d40b      	bmi.n	8019918 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019900:	4620      	mov	r0, r4
 8019902:	f007 fed5 	bl	80216b0 <__cxa_guard_acquire>
 8019906:	b138      	cbz	r0, 8019918 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8019908:	4620      	mov	r0, r4
 801990a:	f007 fedd 	bl	80216c8 <__cxa_guard_release>
 801990e:	4a0f      	ldr	r2, [pc, #60]	; (801994c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019910:	490f      	ldr	r1, [pc, #60]	; (8019950 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8019912:	4810      	ldr	r0, [pc, #64]	; (8019954 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8019914:	f007 fec5 	bl	80216a2 <__aeabi_atexit>
 8019918:	4c0f      	ldr	r4, [pc, #60]	; (8019958 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801991a:	7823      	ldrb	r3, [r4, #0]
 801991c:	f3bf 8f5b 	dmb	ish
 8019920:	07db      	lsls	r3, r3, #31
 8019922:	d40b      	bmi.n	801993c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8019924:	4620      	mov	r0, r4
 8019926:	f007 fec3 	bl	80216b0 <__cxa_guard_acquire>
 801992a:	b138      	cbz	r0, 801993c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801992c:	4620      	mov	r0, r4
 801992e:	f007 fecb 	bl	80216c8 <__cxa_guard_release>
 8019932:	4a06      	ldr	r2, [pc, #24]	; (801994c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8019934:	4909      	ldr	r1, [pc, #36]	; (801995c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8019936:	480a      	ldr	r0, [pc, #40]	; (8019960 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019938:	f007 feb3 	bl	80216a2 <__aeabi_atexit>
 801993c:	4b05      	ldr	r3, [pc, #20]	; (8019954 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801993e:	612b      	str	r3, [r5, #16]
 8019940:	4b07      	ldr	r3, [pc, #28]	; (8019960 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019942:	616b      	str	r3, [r5, #20]
 8019944:	bd38      	pop	{r3, r4, r5, pc}
 8019946:	bf00      	nop
 8019948:	200150ac 	.word	0x200150ac
 801994c:	20000000 	.word	0x20000000
 8019950:	080166f3 	.word	0x080166f3
 8019954:	200000d0 	.word	0x200000d0
 8019958:	200150b0 	.word	0x200150b0
 801995c:	080166f1 	.word	0x080166f1
 8019960:	200000d4 	.word	0x200000d4

08019964 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019964:	b538      	push	{r3, r4, r5, lr}
 8019966:	4c15      	ldr	r4, [pc, #84]	; (80199bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019968:	7823      	ldrb	r3, [r4, #0]
 801996a:	f3bf 8f5b 	dmb	ish
 801996e:	07da      	lsls	r2, r3, #31
 8019970:	4605      	mov	r5, r0
 8019972:	d40b      	bmi.n	801998c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019974:	4620      	mov	r0, r4
 8019976:	f007 fe9b 	bl	80216b0 <__cxa_guard_acquire>
 801997a:	b138      	cbz	r0, 801998c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801997c:	4620      	mov	r0, r4
 801997e:	f007 fea3 	bl	80216c8 <__cxa_guard_release>
 8019982:	4a0f      	ldr	r2, [pc, #60]	; (80199c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019984:	490f      	ldr	r1, [pc, #60]	; (80199c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019986:	4810      	ldr	r0, [pc, #64]	; (80199c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019988:	f007 fe8b 	bl	80216a2 <__aeabi_atexit>
 801998c:	4c0f      	ldr	r4, [pc, #60]	; (80199cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801998e:	7823      	ldrb	r3, [r4, #0]
 8019990:	f3bf 8f5b 	dmb	ish
 8019994:	07db      	lsls	r3, r3, #31
 8019996:	d40b      	bmi.n	80199b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019998:	4620      	mov	r0, r4
 801999a:	f007 fe89 	bl	80216b0 <__cxa_guard_acquire>
 801999e:	b138      	cbz	r0, 80199b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80199a0:	4620      	mov	r0, r4
 80199a2:	f007 fe91 	bl	80216c8 <__cxa_guard_release>
 80199a6:	4a06      	ldr	r2, [pc, #24]	; (80199c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80199a8:	4909      	ldr	r1, [pc, #36]	; (80199d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80199aa:	480a      	ldr	r0, [pc, #40]	; (80199d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80199ac:	f007 fe79 	bl	80216a2 <__aeabi_atexit>
 80199b0:	4b05      	ldr	r3, [pc, #20]	; (80199c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80199b2:	60ab      	str	r3, [r5, #8]
 80199b4:	4b07      	ldr	r3, [pc, #28]	; (80199d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80199b6:	60eb      	str	r3, [r5, #12]
 80199b8:	bd38      	pop	{r3, r4, r5, pc}
 80199ba:	bf00      	nop
 80199bc:	20015084 	.word	0x20015084
 80199c0:	20000000 	.word	0x20000000
 80199c4:	080166f7 	.word	0x080166f7
 80199c8:	200000a8 	.word	0x200000a8
 80199cc:	20015088 	.word	0x20015088
 80199d0:	080166f5 	.word	0x080166f5
 80199d4:	200000ac 	.word	0x200000ac

080199d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80199d8:	b510      	push	{r4, lr}
 80199da:	4604      	mov	r4, r0
 80199dc:	f7ff ff88 	bl	80198f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80199e0:	4620      	mov	r0, r4
 80199e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80199e6:	f7ff bfbd 	b.w	8019964 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080199ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80199ec:	b538      	push	{r3, r4, r5, lr}
 80199ee:	4c15      	ldr	r4, [pc, #84]	; (8019a44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80199f0:	7823      	ldrb	r3, [r4, #0]
 80199f2:	f3bf 8f5b 	dmb	ish
 80199f6:	07da      	lsls	r2, r3, #31
 80199f8:	4605      	mov	r5, r0
 80199fa:	d40b      	bmi.n	8019a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80199fc:	4620      	mov	r0, r4
 80199fe:	f007 fe57 	bl	80216b0 <__cxa_guard_acquire>
 8019a02:	b138      	cbz	r0, 8019a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8019a04:	4620      	mov	r0, r4
 8019a06:	f007 fe5f 	bl	80216c8 <__cxa_guard_release>
 8019a0a:	4a0f      	ldr	r2, [pc, #60]	; (8019a48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019a0c:	490f      	ldr	r1, [pc, #60]	; (8019a4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8019a0e:	4810      	ldr	r0, [pc, #64]	; (8019a50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019a10:	f007 fe47 	bl	80216a2 <__aeabi_atexit>
 8019a14:	4c0f      	ldr	r4, [pc, #60]	; (8019a54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8019a16:	7823      	ldrb	r3, [r4, #0]
 8019a18:	f3bf 8f5b 	dmb	ish
 8019a1c:	07db      	lsls	r3, r3, #31
 8019a1e:	d40b      	bmi.n	8019a38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019a20:	4620      	mov	r0, r4
 8019a22:	f007 fe45 	bl	80216b0 <__cxa_guard_acquire>
 8019a26:	b138      	cbz	r0, 8019a38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8019a28:	4620      	mov	r0, r4
 8019a2a:	f007 fe4d 	bl	80216c8 <__cxa_guard_release>
 8019a2e:	4a06      	ldr	r2, [pc, #24]	; (8019a48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8019a30:	4909      	ldr	r1, [pc, #36]	; (8019a58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8019a32:	480a      	ldr	r0, [pc, #40]	; (8019a5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019a34:	f007 fe35 	bl	80216a2 <__aeabi_atexit>
 8019a38:	4b05      	ldr	r3, [pc, #20]	; (8019a50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8019a3a:	622b      	str	r3, [r5, #32]
 8019a3c:	4b07      	ldr	r3, [pc, #28]	; (8019a5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8019a3e:	626b      	str	r3, [r5, #36]	; 0x24
 8019a40:	bd38      	pop	{r3, r4, r5, pc}
 8019a42:	bf00      	nop
 8019a44:	200150b4 	.word	0x200150b4
 8019a48:	20000000 	.word	0x20000000
 8019a4c:	080166eb 	.word	0x080166eb
 8019a50:	200000d8 	.word	0x200000d8
 8019a54:	200150b8 	.word	0x200150b8
 8019a58:	080166e9 	.word	0x080166e9
 8019a5c:	200000dc 	.word	0x200000dc

08019a60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019a60:	b538      	push	{r3, r4, r5, lr}
 8019a62:	4c15      	ldr	r4, [pc, #84]	; (8019ab8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019a64:	7823      	ldrb	r3, [r4, #0]
 8019a66:	f3bf 8f5b 	dmb	ish
 8019a6a:	07da      	lsls	r2, r3, #31
 8019a6c:	4605      	mov	r5, r0
 8019a6e:	d40b      	bmi.n	8019a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019a70:	4620      	mov	r0, r4
 8019a72:	f007 fe1d 	bl	80216b0 <__cxa_guard_acquire>
 8019a76:	b138      	cbz	r0, 8019a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019a78:	4620      	mov	r0, r4
 8019a7a:	f007 fe25 	bl	80216c8 <__cxa_guard_release>
 8019a7e:	4a0f      	ldr	r2, [pc, #60]	; (8019abc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019a80:	490f      	ldr	r1, [pc, #60]	; (8019ac0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019a82:	4810      	ldr	r0, [pc, #64]	; (8019ac4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019a84:	f007 fe0d 	bl	80216a2 <__aeabi_atexit>
 8019a88:	4c0f      	ldr	r4, [pc, #60]	; (8019ac8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8019a8a:	7823      	ldrb	r3, [r4, #0]
 8019a8c:	f3bf 8f5b 	dmb	ish
 8019a90:	07db      	lsls	r3, r3, #31
 8019a92:	d40b      	bmi.n	8019aac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019a94:	4620      	mov	r0, r4
 8019a96:	f007 fe0b 	bl	80216b0 <__cxa_guard_acquire>
 8019a9a:	b138      	cbz	r0, 8019aac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019a9c:	4620      	mov	r0, r4
 8019a9e:	f007 fe13 	bl	80216c8 <__cxa_guard_release>
 8019aa2:	4a06      	ldr	r2, [pc, #24]	; (8019abc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019aa4:	4909      	ldr	r1, [pc, #36]	; (8019acc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019aa6:	480a      	ldr	r0, [pc, #40]	; (8019ad0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019aa8:	f007 fdfb 	bl	80216a2 <__aeabi_atexit>
 8019aac:	4b05      	ldr	r3, [pc, #20]	; (8019ac4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019aae:	61ab      	str	r3, [r5, #24]
 8019ab0:	4b07      	ldr	r3, [pc, #28]	; (8019ad0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019ab2:	61eb      	str	r3, [r5, #28]
 8019ab4:	bd38      	pop	{r3, r4, r5, pc}
 8019ab6:	bf00      	nop
 8019ab8:	2001508c 	.word	0x2001508c
 8019abc:	20000000 	.word	0x20000000
 8019ac0:	080166ef 	.word	0x080166ef
 8019ac4:	200000b0 	.word	0x200000b0
 8019ac8:	20015090 	.word	0x20015090
 8019acc:	080166ed 	.word	0x080166ed
 8019ad0:	200000b4 	.word	0x200000b4

08019ad4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019ad4:	b510      	push	{r4, lr}
 8019ad6:	4604      	mov	r4, r0
 8019ad8:	f7ff ff88 	bl	80199ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019adc:	4620      	mov	r0, r4
 8019ade:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019ae2:	f7ff bfbd 	b.w	8019a60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019ae8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019ae8:	b538      	push	{r3, r4, r5, lr}
 8019aea:	4c15      	ldr	r4, [pc, #84]	; (8019b40 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019aec:	7823      	ldrb	r3, [r4, #0]
 8019aee:	f3bf 8f5b 	dmb	ish
 8019af2:	07da      	lsls	r2, r3, #31
 8019af4:	4605      	mov	r5, r0
 8019af6:	d40b      	bmi.n	8019b10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019af8:	4620      	mov	r0, r4
 8019afa:	f007 fdd9 	bl	80216b0 <__cxa_guard_acquire>
 8019afe:	b138      	cbz	r0, 8019b10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019b00:	4620      	mov	r0, r4
 8019b02:	f007 fde1 	bl	80216c8 <__cxa_guard_release>
 8019b06:	4a0f      	ldr	r2, [pc, #60]	; (8019b44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019b08:	490f      	ldr	r1, [pc, #60]	; (8019b48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019b0a:	4810      	ldr	r0, [pc, #64]	; (8019b4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019b0c:	f007 fdc9 	bl	80216a2 <__aeabi_atexit>
 8019b10:	4c0f      	ldr	r4, [pc, #60]	; (8019b50 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8019b12:	7823      	ldrb	r3, [r4, #0]
 8019b14:	f3bf 8f5b 	dmb	ish
 8019b18:	07db      	lsls	r3, r3, #31
 8019b1a:	d40b      	bmi.n	8019b34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019b1c:	4620      	mov	r0, r4
 8019b1e:	f007 fdc7 	bl	80216b0 <__cxa_guard_acquire>
 8019b22:	b138      	cbz	r0, 8019b34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019b24:	4620      	mov	r0, r4
 8019b26:	f007 fdcf 	bl	80216c8 <__cxa_guard_release>
 8019b2a:	4a06      	ldr	r2, [pc, #24]	; (8019b44 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019b2c:	4909      	ldr	r1, [pc, #36]	; (8019b54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8019b2e:	480a      	ldr	r0, [pc, #40]	; (8019b58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019b30:	f007 fdb7 	bl	80216a2 <__aeabi_atexit>
 8019b34:	4b05      	ldr	r3, [pc, #20]	; (8019b4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019b36:	632b      	str	r3, [r5, #48]	; 0x30
 8019b38:	4b07      	ldr	r3, [pc, #28]	; (8019b58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019b3a:	636b      	str	r3, [r5, #52]	; 0x34
 8019b3c:	bd38      	pop	{r3, r4, r5, pc}
 8019b3e:	bf00      	nop
 8019b40:	200150c4 	.word	0x200150c4
 8019b44:	20000000 	.word	0x20000000
 8019b48:	080166e3 	.word	0x080166e3
 8019b4c:	200000e8 	.word	0x200000e8
 8019b50:	200150c8 	.word	0x200150c8
 8019b54:	080166e1 	.word	0x080166e1
 8019b58:	200000ec 	.word	0x200000ec

08019b5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8019b5c:	b538      	push	{r3, r4, r5, lr}
 8019b5e:	4c15      	ldr	r4, [pc, #84]	; (8019bb4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019b60:	7823      	ldrb	r3, [r4, #0]
 8019b62:	f3bf 8f5b 	dmb	ish
 8019b66:	07da      	lsls	r2, r3, #31
 8019b68:	4605      	mov	r5, r0
 8019b6a:	d40b      	bmi.n	8019b84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019b6c:	4620      	mov	r0, r4
 8019b6e:	f007 fd9f 	bl	80216b0 <__cxa_guard_acquire>
 8019b72:	b138      	cbz	r0, 8019b84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019b74:	4620      	mov	r0, r4
 8019b76:	f007 fda7 	bl	80216c8 <__cxa_guard_release>
 8019b7a:	4a0f      	ldr	r2, [pc, #60]	; (8019bb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019b7c:	490f      	ldr	r1, [pc, #60]	; (8019bbc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8019b7e:	4810      	ldr	r0, [pc, #64]	; (8019bc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019b80:	f007 fd8f 	bl	80216a2 <__aeabi_atexit>
 8019b84:	4c0f      	ldr	r4, [pc, #60]	; (8019bc4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019b86:	7823      	ldrb	r3, [r4, #0]
 8019b88:	f3bf 8f5b 	dmb	ish
 8019b8c:	07db      	lsls	r3, r3, #31
 8019b8e:	d40b      	bmi.n	8019ba8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019b90:	4620      	mov	r0, r4
 8019b92:	f007 fd8d 	bl	80216b0 <__cxa_guard_acquire>
 8019b96:	b138      	cbz	r0, 8019ba8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019b98:	4620      	mov	r0, r4
 8019b9a:	f007 fd95 	bl	80216c8 <__cxa_guard_release>
 8019b9e:	4a06      	ldr	r2, [pc, #24]	; (8019bb8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019ba0:	4909      	ldr	r1, [pc, #36]	; (8019bc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019ba2:	480a      	ldr	r0, [pc, #40]	; (8019bcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019ba4:	f007 fd7d 	bl	80216a2 <__aeabi_atexit>
 8019ba8:	4b05      	ldr	r3, [pc, #20]	; (8019bc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019baa:	62ab      	str	r3, [r5, #40]	; 0x28
 8019bac:	4b07      	ldr	r3, [pc, #28]	; (8019bcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019bae:	62eb      	str	r3, [r5, #44]	; 0x2c
 8019bb0:	bd38      	pop	{r3, r4, r5, pc}
 8019bb2:	bf00      	nop
 8019bb4:	20015094 	.word	0x20015094
 8019bb8:	20000000 	.word	0x20000000
 8019bbc:	080166e7 	.word	0x080166e7
 8019bc0:	200000b8 	.word	0x200000b8
 8019bc4:	20015098 	.word	0x20015098
 8019bc8:	080166e5 	.word	0x080166e5
 8019bcc:	200000bc 	.word	0x200000bc

08019bd0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019bd0:	b510      	push	{r4, lr}
 8019bd2:	4604      	mov	r4, r0
 8019bd4:	f7ff ff88 	bl	8019ae8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019bd8:	4620      	mov	r0, r4
 8019bda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019bde:	f7ff bfbd 	b.w	8019b5c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019be4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019be4:	b538      	push	{r3, r4, r5, lr}
 8019be6:	4c15      	ldr	r4, [pc, #84]	; (8019c3c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019be8:	7823      	ldrb	r3, [r4, #0]
 8019bea:	f3bf 8f5b 	dmb	ish
 8019bee:	07da      	lsls	r2, r3, #31
 8019bf0:	4605      	mov	r5, r0
 8019bf2:	d40b      	bmi.n	8019c0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019bf4:	4620      	mov	r0, r4
 8019bf6:	f007 fd5b 	bl	80216b0 <__cxa_guard_acquire>
 8019bfa:	b138      	cbz	r0, 8019c0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019bfc:	4620      	mov	r0, r4
 8019bfe:	f007 fd63 	bl	80216c8 <__cxa_guard_release>
 8019c02:	4a0f      	ldr	r2, [pc, #60]	; (8019c40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019c04:	490f      	ldr	r1, [pc, #60]	; (8019c44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019c06:	4810      	ldr	r0, [pc, #64]	; (8019c48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019c08:	f007 fd4b 	bl	80216a2 <__aeabi_atexit>
 8019c0c:	4c0f      	ldr	r4, [pc, #60]	; (8019c4c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8019c0e:	7823      	ldrb	r3, [r4, #0]
 8019c10:	f3bf 8f5b 	dmb	ish
 8019c14:	07db      	lsls	r3, r3, #31
 8019c16:	d40b      	bmi.n	8019c30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019c18:	4620      	mov	r0, r4
 8019c1a:	f007 fd49 	bl	80216b0 <__cxa_guard_acquire>
 8019c1e:	b138      	cbz	r0, 8019c30 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019c20:	4620      	mov	r0, r4
 8019c22:	f007 fd51 	bl	80216c8 <__cxa_guard_release>
 8019c26:	4a06      	ldr	r2, [pc, #24]	; (8019c40 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019c28:	4909      	ldr	r1, [pc, #36]	; (8019c50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019c2a:	480a      	ldr	r0, [pc, #40]	; (8019c54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019c2c:	f007 fd39 	bl	80216a2 <__aeabi_atexit>
 8019c30:	4b05      	ldr	r3, [pc, #20]	; (8019c48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019c32:	652b      	str	r3, [r5, #80]	; 0x50
 8019c34:	4b07      	ldr	r3, [pc, #28]	; (8019c54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019c36:	656b      	str	r3, [r5, #84]	; 0x54
 8019c38:	bd38      	pop	{r3, r4, r5, pc}
 8019c3a:	bf00      	nop
 8019c3c:	200150cc 	.word	0x200150cc
 8019c40:	20000000 	.word	0x20000000
 8019c44:	080166d3 	.word	0x080166d3
 8019c48:	200000f0 	.word	0x200000f0
 8019c4c:	200150d0 	.word	0x200150d0
 8019c50:	080166d1 	.word	0x080166d1
 8019c54:	200000f4 	.word	0x200000f4

08019c58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019c58:	b538      	push	{r3, r4, r5, lr}
 8019c5a:	4c15      	ldr	r4, [pc, #84]	; (8019cb0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019c5c:	7823      	ldrb	r3, [r4, #0]
 8019c5e:	f3bf 8f5b 	dmb	ish
 8019c62:	07da      	lsls	r2, r3, #31
 8019c64:	4605      	mov	r5, r0
 8019c66:	d40b      	bmi.n	8019c80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019c68:	4620      	mov	r0, r4
 8019c6a:	f007 fd21 	bl	80216b0 <__cxa_guard_acquire>
 8019c6e:	b138      	cbz	r0, 8019c80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019c70:	4620      	mov	r0, r4
 8019c72:	f007 fd29 	bl	80216c8 <__cxa_guard_release>
 8019c76:	4a0f      	ldr	r2, [pc, #60]	; (8019cb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019c78:	490f      	ldr	r1, [pc, #60]	; (8019cb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8019c7a:	4810      	ldr	r0, [pc, #64]	; (8019cbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019c7c:	f007 fd11 	bl	80216a2 <__aeabi_atexit>
 8019c80:	4c0f      	ldr	r4, [pc, #60]	; (8019cc0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019c82:	7823      	ldrb	r3, [r4, #0]
 8019c84:	f3bf 8f5b 	dmb	ish
 8019c88:	07db      	lsls	r3, r3, #31
 8019c8a:	d40b      	bmi.n	8019ca4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019c8c:	4620      	mov	r0, r4
 8019c8e:	f007 fd0f 	bl	80216b0 <__cxa_guard_acquire>
 8019c92:	b138      	cbz	r0, 8019ca4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019c94:	4620      	mov	r0, r4
 8019c96:	f007 fd17 	bl	80216c8 <__cxa_guard_release>
 8019c9a:	4a06      	ldr	r2, [pc, #24]	; (8019cb4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019c9c:	4909      	ldr	r1, [pc, #36]	; (8019cc4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019c9e:	480a      	ldr	r0, [pc, #40]	; (8019cc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019ca0:	f007 fcff 	bl	80216a2 <__aeabi_atexit>
 8019ca4:	4b05      	ldr	r3, [pc, #20]	; (8019cbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019ca6:	64ab      	str	r3, [r5, #72]	; 0x48
 8019ca8:	4b07      	ldr	r3, [pc, #28]	; (8019cc8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019caa:	64eb      	str	r3, [r5, #76]	; 0x4c
 8019cac:	bd38      	pop	{r3, r4, r5, pc}
 8019cae:	bf00      	nop
 8019cb0:	200150d4 	.word	0x200150d4
 8019cb4:	20000000 	.word	0x20000000
 8019cb8:	080166d7 	.word	0x080166d7
 8019cbc:	200000f8 	.word	0x200000f8
 8019cc0:	200150d8 	.word	0x200150d8
 8019cc4:	080166d5 	.word	0x080166d5
 8019cc8:	200000fc 	.word	0x200000fc

08019ccc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019ccc:	b538      	push	{r3, r4, r5, lr}
 8019cce:	4c15      	ldr	r4, [pc, #84]	; (8019d24 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019cd0:	7823      	ldrb	r3, [r4, #0]
 8019cd2:	f3bf 8f5b 	dmb	ish
 8019cd6:	07da      	lsls	r2, r3, #31
 8019cd8:	4605      	mov	r5, r0
 8019cda:	d40b      	bmi.n	8019cf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019cdc:	4620      	mov	r0, r4
 8019cde:	f007 fce7 	bl	80216b0 <__cxa_guard_acquire>
 8019ce2:	b138      	cbz	r0, 8019cf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019ce4:	4620      	mov	r0, r4
 8019ce6:	f007 fcef 	bl	80216c8 <__cxa_guard_release>
 8019cea:	4a0f      	ldr	r2, [pc, #60]	; (8019d28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019cec:	490f      	ldr	r1, [pc, #60]	; (8019d2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019cee:	4810      	ldr	r0, [pc, #64]	; (8019d30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019cf0:	f007 fcd7 	bl	80216a2 <__aeabi_atexit>
 8019cf4:	4c0f      	ldr	r4, [pc, #60]	; (8019d34 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8019cf6:	7823      	ldrb	r3, [r4, #0]
 8019cf8:	f3bf 8f5b 	dmb	ish
 8019cfc:	07db      	lsls	r3, r3, #31
 8019cfe:	d40b      	bmi.n	8019d18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019d00:	4620      	mov	r0, r4
 8019d02:	f007 fcd5 	bl	80216b0 <__cxa_guard_acquire>
 8019d06:	b138      	cbz	r0, 8019d18 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019d08:	4620      	mov	r0, r4
 8019d0a:	f007 fcdd 	bl	80216c8 <__cxa_guard_release>
 8019d0e:	4a06      	ldr	r2, [pc, #24]	; (8019d28 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019d10:	4909      	ldr	r1, [pc, #36]	; (8019d38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019d12:	480a      	ldr	r0, [pc, #40]	; (8019d3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019d14:	f007 fcc5 	bl	80216a2 <__aeabi_atexit>
 8019d18:	4b05      	ldr	r3, [pc, #20]	; (8019d30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019d1a:	642b      	str	r3, [r5, #64]	; 0x40
 8019d1c:	4b07      	ldr	r3, [pc, #28]	; (8019d3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019d1e:	646b      	str	r3, [r5, #68]	; 0x44
 8019d20:	bd38      	pop	{r3, r4, r5, pc}
 8019d22:	bf00      	nop
 8019d24:	2001509c 	.word	0x2001509c
 8019d28:	20000000 	.word	0x20000000
 8019d2c:	080166db 	.word	0x080166db
 8019d30:	200000c0 	.word	0x200000c0
 8019d34:	200150a0 	.word	0x200150a0
 8019d38:	080166d9 	.word	0x080166d9
 8019d3c:	200000c4 	.word	0x200000c4

08019d40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019d40:	b538      	push	{r3, r4, r5, lr}
 8019d42:	4c15      	ldr	r4, [pc, #84]	; (8019d98 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019d44:	7823      	ldrb	r3, [r4, #0]
 8019d46:	f3bf 8f5b 	dmb	ish
 8019d4a:	07da      	lsls	r2, r3, #31
 8019d4c:	4605      	mov	r5, r0
 8019d4e:	d40b      	bmi.n	8019d68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019d50:	4620      	mov	r0, r4
 8019d52:	f007 fcad 	bl	80216b0 <__cxa_guard_acquire>
 8019d56:	b138      	cbz	r0, 8019d68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019d58:	4620      	mov	r0, r4
 8019d5a:	f007 fcb5 	bl	80216c8 <__cxa_guard_release>
 8019d5e:	4a0f      	ldr	r2, [pc, #60]	; (8019d9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019d60:	490f      	ldr	r1, [pc, #60]	; (8019da0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019d62:	4810      	ldr	r0, [pc, #64]	; (8019da4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019d64:	f007 fc9d 	bl	80216a2 <__aeabi_atexit>
 8019d68:	4c0f      	ldr	r4, [pc, #60]	; (8019da8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8019d6a:	7823      	ldrb	r3, [r4, #0]
 8019d6c:	f3bf 8f5b 	dmb	ish
 8019d70:	07db      	lsls	r3, r3, #31
 8019d72:	d40b      	bmi.n	8019d8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019d74:	4620      	mov	r0, r4
 8019d76:	f007 fc9b 	bl	80216b0 <__cxa_guard_acquire>
 8019d7a:	b138      	cbz	r0, 8019d8c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019d7c:	4620      	mov	r0, r4
 8019d7e:	f007 fca3 	bl	80216c8 <__cxa_guard_release>
 8019d82:	4a06      	ldr	r2, [pc, #24]	; (8019d9c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019d84:	4909      	ldr	r1, [pc, #36]	; (8019dac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019d86:	480a      	ldr	r0, [pc, #40]	; (8019db0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019d88:	f007 fc8b 	bl	80216a2 <__aeabi_atexit>
 8019d8c:	4b05      	ldr	r3, [pc, #20]	; (8019da4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019d8e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019d90:	4b07      	ldr	r3, [pc, #28]	; (8019db0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019d92:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019d94:	bd38      	pop	{r3, r4, r5, pc}
 8019d96:	bf00      	nop
 8019d98:	200150bc 	.word	0x200150bc
 8019d9c:	20000000 	.word	0x20000000
 8019da0:	080166df 	.word	0x080166df
 8019da4:	200000e0 	.word	0x200000e0
 8019da8:	200150c0 	.word	0x200150c0
 8019dac:	080166dd 	.word	0x080166dd
 8019db0:	200000e4 	.word	0x200000e4

08019db4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019db4:	b510      	push	{r4, lr}
 8019db6:	4604      	mov	r4, r0
 8019db8:	f7ff ff14 	bl	8019be4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8019dbc:	4620      	mov	r0, r4
 8019dbe:	f7ff ff85 	bl	8019ccc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019dc2:	4620      	mov	r0, r4
 8019dc4:	f7ff ff48 	bl	8019c58 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019dc8:	4620      	mov	r0, r4
 8019dca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019dce:	f7ff bfb7 	b.w	8019d40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019dd4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019dd4:	b538      	push	{r3, r4, r5, lr}
 8019dd6:	4c15      	ldr	r4, [pc, #84]	; (8019e2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019dd8:	7823      	ldrb	r3, [r4, #0]
 8019dda:	f3bf 8f5b 	dmb	ish
 8019dde:	07da      	lsls	r2, r3, #31
 8019de0:	4605      	mov	r5, r0
 8019de2:	d40b      	bmi.n	8019dfc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019de4:	4620      	mov	r0, r4
 8019de6:	f007 fc63 	bl	80216b0 <__cxa_guard_acquire>
 8019dea:	b138      	cbz	r0, 8019dfc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019dec:	4620      	mov	r0, r4
 8019dee:	f007 fc6b 	bl	80216c8 <__cxa_guard_release>
 8019df2:	4a0f      	ldr	r2, [pc, #60]	; (8019e30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019df4:	490f      	ldr	r1, [pc, #60]	; (8019e34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8019df6:	4810      	ldr	r0, [pc, #64]	; (8019e38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019df8:	f007 fc53 	bl	80216a2 <__aeabi_atexit>
 8019dfc:	4c0f      	ldr	r4, [pc, #60]	; (8019e3c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8019dfe:	7823      	ldrb	r3, [r4, #0]
 8019e00:	f3bf 8f5b 	dmb	ish
 8019e04:	07db      	lsls	r3, r3, #31
 8019e06:	d40b      	bmi.n	8019e20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019e08:	4620      	mov	r0, r4
 8019e0a:	f007 fc51 	bl	80216b0 <__cxa_guard_acquire>
 8019e0e:	b138      	cbz	r0, 8019e20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019e10:	4620      	mov	r0, r4
 8019e12:	f007 fc59 	bl	80216c8 <__cxa_guard_release>
 8019e16:	4a06      	ldr	r2, [pc, #24]	; (8019e30 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019e18:	4909      	ldr	r1, [pc, #36]	; (8019e40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019e1a:	480a      	ldr	r0, [pc, #40]	; (8019e44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019e1c:	f007 fc41 	bl	80216a2 <__aeabi_atexit>
 8019e20:	4b05      	ldr	r3, [pc, #20]	; (8019e38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019e22:	662b      	str	r3, [r5, #96]	; 0x60
 8019e24:	4b07      	ldr	r3, [pc, #28]	; (8019e44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019e26:	666b      	str	r3, [r5, #100]	; 0x64
 8019e28:	bd38      	pop	{r3, r4, r5, pc}
 8019e2a:	bf00      	nop
 8019e2c:	200150a4 	.word	0x200150a4
 8019e30:	20000000 	.word	0x20000000
 8019e34:	080166cb 	.word	0x080166cb
 8019e38:	200000c8 	.word	0x200000c8
 8019e3c:	200150a8 	.word	0x200150a8
 8019e40:	080166c9 	.word	0x080166c9
 8019e44:	200000cc 	.word	0x200000cc

08019e48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019e48:	b538      	push	{r3, r4, r5, lr}
 8019e4a:	4c15      	ldr	r4, [pc, #84]	; (8019ea0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8019e4c:	7823      	ldrb	r3, [r4, #0]
 8019e4e:	f3bf 8f5b 	dmb	ish
 8019e52:	07da      	lsls	r2, r3, #31
 8019e54:	4605      	mov	r5, r0
 8019e56:	d40b      	bmi.n	8019e70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019e58:	4620      	mov	r0, r4
 8019e5a:	f007 fc29 	bl	80216b0 <__cxa_guard_acquire>
 8019e5e:	b138      	cbz	r0, 8019e70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019e60:	4620      	mov	r0, r4
 8019e62:	f007 fc31 	bl	80216c8 <__cxa_guard_release>
 8019e66:	4a0f      	ldr	r2, [pc, #60]	; (8019ea4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019e68:	490f      	ldr	r1, [pc, #60]	; (8019ea8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8019e6a:	4810      	ldr	r0, [pc, #64]	; (8019eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019e6c:	f007 fc19 	bl	80216a2 <__aeabi_atexit>
 8019e70:	4c0f      	ldr	r4, [pc, #60]	; (8019eb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019e72:	7823      	ldrb	r3, [r4, #0]
 8019e74:	f3bf 8f5b 	dmb	ish
 8019e78:	07db      	lsls	r3, r3, #31
 8019e7a:	d40b      	bmi.n	8019e94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019e7c:	4620      	mov	r0, r4
 8019e7e:	f007 fc17 	bl	80216b0 <__cxa_guard_acquire>
 8019e82:	b138      	cbz	r0, 8019e94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019e84:	4620      	mov	r0, r4
 8019e86:	f007 fc1f 	bl	80216c8 <__cxa_guard_release>
 8019e8a:	4a06      	ldr	r2, [pc, #24]	; (8019ea4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019e8c:	4909      	ldr	r1, [pc, #36]	; (8019eb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8019e8e:	480a      	ldr	r0, [pc, #40]	; (8019eb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019e90:	f007 fc07 	bl	80216a2 <__aeabi_atexit>
 8019e94:	4b05      	ldr	r3, [pc, #20]	; (8019eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019e96:	65ab      	str	r3, [r5, #88]	; 0x58
 8019e98:	4b07      	ldr	r3, [pc, #28]	; (8019eb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019e9a:	65eb      	str	r3, [r5, #92]	; 0x5c
 8019e9c:	bd38      	pop	{r3, r4, r5, pc}
 8019e9e:	bf00      	nop
 8019ea0:	2001507c 	.word	0x2001507c
 8019ea4:	20000000 	.word	0x20000000
 8019ea8:	080166cf 	.word	0x080166cf
 8019eac:	200000a0 	.word	0x200000a0
 8019eb0:	20015080 	.word	0x20015080
 8019eb4:	080166cd 	.word	0x080166cd
 8019eb8:	200000a4 	.word	0x200000a4

08019ebc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019ebc:	b510      	push	{r4, lr}
 8019ebe:	4604      	mov	r4, r0
 8019ec0:	f7ff ff88 	bl	8019dd4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019ec4:	4620      	mov	r0, r4
 8019ec6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019eca:	f7ff bfbd 	b.w	8019e48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019ed0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019ed0:	b538      	push	{r3, r4, r5, lr}
 8019ed2:	4c15      	ldr	r4, [pc, #84]	; (8019f28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019ed4:	7823      	ldrb	r3, [r4, #0]
 8019ed6:	f3bf 8f5b 	dmb	ish
 8019eda:	07da      	lsls	r2, r3, #31
 8019edc:	4605      	mov	r5, r0
 8019ede:	d40b      	bmi.n	8019ef8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019ee0:	4620      	mov	r0, r4
 8019ee2:	f007 fbe5 	bl	80216b0 <__cxa_guard_acquire>
 8019ee6:	b138      	cbz	r0, 8019ef8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019ee8:	4620      	mov	r0, r4
 8019eea:	f007 fbed 	bl	80216c8 <__cxa_guard_release>
 8019eee:	4a0f      	ldr	r2, [pc, #60]	; (8019f2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019ef0:	490f      	ldr	r1, [pc, #60]	; (8019f30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019ef2:	4810      	ldr	r0, [pc, #64]	; (8019f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019ef4:	f007 fbd5 	bl	80216a2 <__aeabi_atexit>
 8019ef8:	4c0f      	ldr	r4, [pc, #60]	; (8019f38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019efa:	7823      	ldrb	r3, [r4, #0]
 8019efc:	f3bf 8f5b 	dmb	ish
 8019f00:	07db      	lsls	r3, r3, #31
 8019f02:	d40b      	bmi.n	8019f1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019f04:	4620      	mov	r0, r4
 8019f06:	f007 fbd3 	bl	80216b0 <__cxa_guard_acquire>
 8019f0a:	b138      	cbz	r0, 8019f1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019f0c:	4620      	mov	r0, r4
 8019f0e:	f007 fbdb 	bl	80216c8 <__cxa_guard_release>
 8019f12:	4a06      	ldr	r2, [pc, #24]	; (8019f2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019f14:	4909      	ldr	r1, [pc, #36]	; (8019f3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019f16:	480a      	ldr	r0, [pc, #40]	; (8019f40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019f18:	f007 fbc3 	bl	80216a2 <__aeabi_atexit>
 8019f1c:	4b05      	ldr	r3, [pc, #20]	; (8019f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019f1e:	672b      	str	r3, [r5, #112]	; 0x70
 8019f20:	4b07      	ldr	r3, [pc, #28]	; (8019f40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019f22:	676b      	str	r3, [r5, #116]	; 0x74
 8019f24:	bd38      	pop	{r3, r4, r5, pc}
 8019f26:	bf00      	nop
 8019f28:	20015074 	.word	0x20015074
 8019f2c:	20000000 	.word	0x20000000
 8019f30:	080166c3 	.word	0x080166c3
 8019f34:	20000098 	.word	0x20000098
 8019f38:	20015078 	.word	0x20015078
 8019f3c:	080166c1 	.word	0x080166c1
 8019f40:	2000009c 	.word	0x2000009c

08019f44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019f44:	b538      	push	{r3, r4, r5, lr}
 8019f46:	4c15      	ldr	r4, [pc, #84]	; (8019f9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019f48:	7823      	ldrb	r3, [r4, #0]
 8019f4a:	f3bf 8f5b 	dmb	ish
 8019f4e:	07da      	lsls	r2, r3, #31
 8019f50:	4605      	mov	r5, r0
 8019f52:	d40b      	bmi.n	8019f6c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019f54:	4620      	mov	r0, r4
 8019f56:	f007 fbab 	bl	80216b0 <__cxa_guard_acquire>
 8019f5a:	b138      	cbz	r0, 8019f6c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019f5c:	4620      	mov	r0, r4
 8019f5e:	f007 fbb3 	bl	80216c8 <__cxa_guard_release>
 8019f62:	4a0f      	ldr	r2, [pc, #60]	; (8019fa0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019f64:	490f      	ldr	r1, [pc, #60]	; (8019fa4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019f66:	4810      	ldr	r0, [pc, #64]	; (8019fa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019f68:	f007 fb9b 	bl	80216a2 <__aeabi_atexit>
 8019f6c:	4c0f      	ldr	r4, [pc, #60]	; (8019fac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8019f6e:	7823      	ldrb	r3, [r4, #0]
 8019f70:	f3bf 8f5b 	dmb	ish
 8019f74:	07db      	lsls	r3, r3, #31
 8019f76:	d40b      	bmi.n	8019f90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019f78:	4620      	mov	r0, r4
 8019f7a:	f007 fb99 	bl	80216b0 <__cxa_guard_acquire>
 8019f7e:	b138      	cbz	r0, 8019f90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019f80:	4620      	mov	r0, r4
 8019f82:	f007 fba1 	bl	80216c8 <__cxa_guard_release>
 8019f86:	4a06      	ldr	r2, [pc, #24]	; (8019fa0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019f88:	4909      	ldr	r1, [pc, #36]	; (8019fb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019f8a:	480a      	ldr	r0, [pc, #40]	; (8019fb4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019f8c:	f007 fb89 	bl	80216a2 <__aeabi_atexit>
 8019f90:	4b05      	ldr	r3, [pc, #20]	; (8019fa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019f92:	66ab      	str	r3, [r5, #104]	; 0x68
 8019f94:	4b07      	ldr	r3, [pc, #28]	; (8019fb4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019f96:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019f98:	bd38      	pop	{r3, r4, r5, pc}
 8019f9a:	bf00      	nop
 8019f9c:	2001506c 	.word	0x2001506c
 8019fa0:	20000000 	.word	0x20000000
 8019fa4:	080166c7 	.word	0x080166c7
 8019fa8:	20000090 	.word	0x20000090
 8019fac:	20015070 	.word	0x20015070
 8019fb0:	080166c5 	.word	0x080166c5
 8019fb4:	20000094 	.word	0x20000094

08019fb8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019fb8:	b510      	push	{r4, lr}
 8019fba:	4604      	mov	r4, r0
 8019fbc:	f7ff ff88 	bl	8019ed0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019fc0:	4620      	mov	r0, r4
 8019fc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019fc6:	f7ff bfbd 	b.w	8019f44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019fca <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019fca:	b510      	push	{r4, lr}
 8019fcc:	4604      	mov	r4, r0
 8019fce:	f7ff fff3 	bl	8019fb8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019fd2:	4620      	mov	r0, r4
 8019fd4:	f7ff ff72 	bl	8019ebc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019fd8:	4620      	mov	r0, r4
 8019fda:	f7ff fdf9 	bl	8019bd0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8019fde:	4620      	mov	r0, r4
 8019fe0:	f7ff fcfa 	bl	80199d8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019fe4:	4620      	mov	r0, r4
 8019fe6:	f7ff fd75 	bl	8019ad4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019fea:	4620      	mov	r0, r4
 8019fec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019ff0:	f7ff bee0 	b.w	8019db4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019ff4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019ff4:	b538      	push	{r3, r4, r5, lr}
 8019ff6:	4c0b      	ldr	r4, [pc, #44]	; (801a024 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019ff8:	7823      	ldrb	r3, [r4, #0]
 8019ffa:	f3bf 8f5b 	dmb	ish
 8019ffe:	07db      	lsls	r3, r3, #31
 801a000:	4605      	mov	r5, r0
 801a002:	d40b      	bmi.n	801a01c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801a004:	4620      	mov	r0, r4
 801a006:	f007 fb53 	bl	80216b0 <__cxa_guard_acquire>
 801a00a:	b138      	cbz	r0, 801a01c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801a00c:	4620      	mov	r0, r4
 801a00e:	f007 fb5b 	bl	80216c8 <__cxa_guard_release>
 801a012:	4a05      	ldr	r2, [pc, #20]	; (801a028 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801a014:	4905      	ldr	r1, [pc, #20]	; (801a02c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801a016:	4806      	ldr	r0, [pc, #24]	; (801a030 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801a018:	f007 fb43 	bl	80216a2 <__aeabi_atexit>
 801a01c:	4b04      	ldr	r3, [pc, #16]	; (801a030 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801a01e:	67ab      	str	r3, [r5, #120]	; 0x78
 801a020:	bd38      	pop	{r3, r4, r5, pc}
 801a022:	bf00      	nop
 801a024:	20015060 	.word	0x20015060
 801a028:	20000000 	.word	0x20000000
 801a02c:	080166bf 	.word	0x080166bf
 801a030:	20000088 	.word	0x20000088

0801a034 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801a034:	b538      	push	{r3, r4, r5, lr}
 801a036:	4c0b      	ldr	r4, [pc, #44]	; (801a064 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801a038:	7823      	ldrb	r3, [r4, #0]
 801a03a:	f3bf 8f5b 	dmb	ish
 801a03e:	07db      	lsls	r3, r3, #31
 801a040:	4605      	mov	r5, r0
 801a042:	d40b      	bmi.n	801a05c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801a044:	4620      	mov	r0, r4
 801a046:	f007 fb33 	bl	80216b0 <__cxa_guard_acquire>
 801a04a:	b138      	cbz	r0, 801a05c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801a04c:	4620      	mov	r0, r4
 801a04e:	f007 fb3b 	bl	80216c8 <__cxa_guard_release>
 801a052:	4a05      	ldr	r2, [pc, #20]	; (801a068 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801a054:	4905      	ldr	r1, [pc, #20]	; (801a06c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801a056:	4806      	ldr	r0, [pc, #24]	; (801a070 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a058:	f007 fb23 	bl	80216a2 <__aeabi_atexit>
 801a05c:	4b04      	ldr	r3, [pc, #16]	; (801a070 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801a05e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801a060:	bd38      	pop	{r3, r4, r5, pc}
 801a062:	bf00      	nop
 801a064:	20015064 	.word	0x20015064
 801a068:	20000000 	.word	0x20000000
 801a06c:	080166bd 	.word	0x080166bd
 801a070:	2000008c 	.word	0x2000008c

0801a074 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801a074:	b570      	push	{r4, r5, r6, lr}
 801a076:	4d0d      	ldr	r5, [pc, #52]	; (801a0ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801a078:	4c0d      	ldr	r4, [pc, #52]	; (801a0b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801a07a:	782b      	ldrb	r3, [r5, #0]
 801a07c:	f3bf 8f5b 	dmb	ish
 801a080:	f013 0f01 	tst.w	r3, #1
 801a084:	4606      	mov	r6, r0
 801a086:	d10d      	bne.n	801a0a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801a088:	4628      	mov	r0, r5
 801a08a:	f007 fb11 	bl	80216b0 <__cxa_guard_acquire>
 801a08e:	b148      	cbz	r0, 801a0a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801a090:	4b08      	ldr	r3, [pc, #32]	; (801a0b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801a092:	6023      	str	r3, [r4, #0]
 801a094:	4628      	mov	r0, r5
 801a096:	f007 fb17 	bl	80216c8 <__cxa_guard_release>
 801a09a:	4a07      	ldr	r2, [pc, #28]	; (801a0b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801a09c:	4907      	ldr	r1, [pc, #28]	; (801a0bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801a09e:	4620      	mov	r0, r4
 801a0a0:	f007 faff 	bl	80216a2 <__aeabi_atexit>
 801a0a4:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801a0a8:	bd70      	pop	{r4, r5, r6, pc}
 801a0aa:	bf00      	nop
 801a0ac:	20015068 	.word	0x20015068
 801a0b0:	200150dc 	.word	0x200150dc
 801a0b4:	08024f7c 	.word	0x08024f7c
 801a0b8:	20000000 	.word	0x20000000
 801a0bc:	080166bb 	.word	0x080166bb

0801a0c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801a0c0:	b510      	push	{r4, lr}
 801a0c2:	4604      	mov	r4, r0
 801a0c4:	f7ff ff96 	bl	8019ff4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801a0c8:	4620      	mov	r0, r4
 801a0ca:	f7ff ffb3 	bl	801a034 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801a0ce:	4620      	mov	r0, r4
 801a0d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a0d4:	f7ff bfce 	b.w	801a074 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801a0d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801a0d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0dc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801a0e0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801a0e4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801a0e8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801a0ec:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801a0f0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801a0f4:	8808      	ldrh	r0, [r1, #0]
 801a0f6:	fb05 4c0e 	mla	ip, r5, lr, r4
 801a0fa:	2d00      	cmp	r5, #0
 801a0fc:	eb02 0a0c 	add.w	sl, r2, ip
 801a100:	f2c0 80b0 	blt.w	801a264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a104:	45ab      	cmp	fp, r5
 801a106:	f340 80ad 	ble.w	801a264 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801a10a:	2c00      	cmp	r4, #0
 801a10c:	f2c0 80a8 	blt.w	801a260 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a110:	45a6      	cmp	lr, r4
 801a112:	f340 80a5 	ble.w	801a260 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801a116:	f812 200c 	ldrb.w	r2, [r2, ip]
 801a11a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801a11e:	1c62      	adds	r2, r4, #1
 801a120:	f100 80a3 	bmi.w	801a26a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a124:	4596      	cmp	lr, r2
 801a126:	f340 80a0 	ble.w	801a26a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a12a:	f1b9 0f00 	cmp.w	r9, #0
 801a12e:	f000 809c 	beq.w	801a26a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801a132:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a136:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a13a:	3501      	adds	r5, #1
 801a13c:	f100 8099 	bmi.w	801a272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a140:	45ab      	cmp	fp, r5
 801a142:	f340 8096 	ble.w	801a272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a146:	2f00      	cmp	r7, #0
 801a148:	f000 8093 	beq.w	801a272 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801a14c:	2c00      	cmp	r4, #0
 801a14e:	f2c0 808e 	blt.w	801a26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a152:	45a6      	cmp	lr, r4
 801a154:	f340 808b 	ble.w	801a26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801a158:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801a15c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801a160:	3401      	adds	r4, #1
 801a162:	f100 8089 	bmi.w	801a278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a166:	45a6      	cmp	lr, r4
 801a168:	f340 8086 	ble.w	801a278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a16c:	f1b9 0f00 	cmp.w	r9, #0
 801a170:	f000 8082 	beq.w	801a278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801a174:	44d6      	add	lr, sl
 801a176:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a17a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801a17e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801a182:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a186:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801a18a:	fb19 fe07 	smulbb	lr, r9, r7
 801a18e:	ea44 0808 	orr.w	r8, r4, r8
 801a192:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801a196:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801a19a:	f1c7 0210 	rsb	r2, r7, #16
 801a19e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801a1a2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a1a6:	ea44 0c0c 	orr.w	ip, r4, ip
 801a1aa:	eba2 0209 	sub.w	r2, r2, r9
 801a1ae:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801a1b2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801a1b6:	fb04 f40c 	mul.w	r4, r4, ip
 801a1ba:	fb02 4808 	mla	r8, r2, r8, r4
 801a1be:	041a      	lsls	r2, r3, #16
 801a1c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a1c4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a1c8:	4313      	orrs	r3, r2
 801a1ca:	042a      	lsls	r2, r5, #16
 801a1cc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a1d0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a1d4:	fb0e 8303 	mla	r3, lr, r3, r8
 801a1d8:	432a      	orrs	r2, r5
 801a1da:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801a1de:	fb07 3202 	mla	r2, r7, r2, r3
 801a1e2:	0d53      	lsrs	r3, r2, #21
 801a1e4:	0952      	lsrs	r2, r2, #5
 801a1e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a1ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a1ee:	431a      	orrs	r2, r3
 801a1f0:	b293      	uxth	r3, r2
 801a1f2:	b2b4      	uxth	r4, r6
 801a1f4:	1202      	asrs	r2, r0, #8
 801a1f6:	43f6      	mvns	r6, r6
 801a1f8:	b2f6      	uxtb	r6, r6
 801a1fa:	121d      	asrs	r5, r3, #8
 801a1fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801a200:	fb12 f206 	smulbb	r2, r2, r6
 801a204:	10c7      	asrs	r7, r0, #3
 801a206:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a20a:	00c0      	lsls	r0, r0, #3
 801a20c:	fb05 2504 	mla	r5, r5, r4, r2
 801a210:	b2c0      	uxtb	r0, r0
 801a212:	10da      	asrs	r2, r3, #3
 801a214:	00db      	lsls	r3, r3, #3
 801a216:	b2db      	uxtb	r3, r3
 801a218:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a21c:	fb10 f006 	smulbb	r0, r0, r6
 801a220:	b2ad      	uxth	r5, r5
 801a222:	fb03 0004 	mla	r0, r3, r4, r0
 801a226:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a22a:	fb17 f706 	smulbb	r7, r7, r6
 801a22e:	b280      	uxth	r0, r0
 801a230:	1c6b      	adds	r3, r5, #1
 801a232:	fb02 7204 	mla	r2, r2, r4, r7
 801a236:	b292      	uxth	r2, r2
 801a238:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a23c:	1c43      	adds	r3, r0, #1
 801a23e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a242:	1c50      	adds	r0, r2, #1
 801a244:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a248:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a24c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a250:	0952      	lsrs	r2, r2, #5
 801a252:	432b      	orrs	r3, r5
 801a254:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a258:	4313      	orrs	r3, r2
 801a25a:	800b      	strh	r3, [r1, #0]
 801a25c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a260:	4680      	mov	r8, r0
 801a262:	e75c      	b.n	801a11e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801a264:	4684      	mov	ip, r0
 801a266:	4680      	mov	r8, r0
 801a268:	e767      	b.n	801a13a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a26a:	4684      	mov	ip, r0
 801a26c:	e765      	b.n	801a13a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801a26e:	4605      	mov	r5, r0
 801a270:	e776      	b.n	801a160 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801a272:	4603      	mov	r3, r0
 801a274:	4605      	mov	r5, r0
 801a276:	e782      	b.n	801a17e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801a278:	4603      	mov	r3, r0
 801a27a:	e780      	b.n	801a17e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801a27c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a27c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a280:	b099      	sub	sp, #100	; 0x64
 801a282:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801a286:	9215      	str	r2, [sp, #84]	; 0x54
 801a288:	9309      	str	r3, [sp, #36]	; 0x24
 801a28a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801a28c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801a290:	930d      	str	r3, [sp, #52]	; 0x34
 801a292:	910c      	str	r1, [sp, #48]	; 0x30
 801a294:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801a298:	9016      	str	r0, [sp, #88]	; 0x58
 801a29a:	6850      	ldr	r0, [r2, #4]
 801a29c:	6812      	ldr	r2, [r2, #0]
 801a29e:	fb00 1303 	mla	r3, r0, r3, r1
 801a2a2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801a2a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a2a8:	681b      	ldr	r3, [r3, #0]
 801a2aa:	930b      	str	r3, [sp, #44]	; 0x2c
 801a2ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a2ae:	685e      	ldr	r6, [r3, #4]
 801a2b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a2b2:	43db      	mvns	r3, r3
 801a2b4:	b2db      	uxtb	r3, r3
 801a2b6:	3604      	adds	r6, #4
 801a2b8:	930a      	str	r3, [sp, #40]	; 0x28
 801a2ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a2bc:	2b00      	cmp	r3, #0
 801a2be:	dc03      	bgt.n	801a2c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a2c0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801a2c2:	2b00      	cmp	r3, #0
 801a2c4:	f340 8225 	ble.w	801a712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a2c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a2ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a2ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a2d2:	1e48      	subs	r0, r1, #1
 801a2d4:	1e57      	subs	r7, r2, #1
 801a2d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2d8:	2b00      	cmp	r3, #0
 801a2da:	f340 80e3 	ble.w	801a4a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a2de:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801a2e2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a2e6:	d406      	bmi.n	801a2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a2e8:	4584      	cmp	ip, r0
 801a2ea:	da04      	bge.n	801a2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a2ec:	2b00      	cmp	r3, #0
 801a2ee:	db02      	blt.n	801a2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a2f0:	42bb      	cmp	r3, r7
 801a2f2:	f2c0 80d8 	blt.w	801a4a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801a2f6:	f11c 0c01 	adds.w	ip, ip, #1
 801a2fa:	f100 80c9 	bmi.w	801a490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a2fe:	4561      	cmp	r1, ip
 801a300:	f2c0 80c6 	blt.w	801a490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a304:	3301      	adds	r3, #1
 801a306:	f100 80c3 	bmi.w	801a490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a30a:	429a      	cmp	r2, r3
 801a30c:	f2c0 80c0 	blt.w	801a490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a310:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a314:	4647      	mov	r7, r8
 801a316:	f1bb 0f00 	cmp.w	fp, #0
 801a31a:	f340 80e3 	ble.w	801a4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801a31e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801a320:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a322:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a326:	689b      	ldr	r3, [r3, #8]
 801a328:	ea5f 422a 	movs.w	r2, sl, asr #16
 801a32c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a330:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801a334:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a338:	f100 8121 	bmi.w	801a57e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a33c:	f103 39ff 	add.w	r9, r3, #4294967295
 801a340:	454a      	cmp	r2, r9
 801a342:	f280 811c 	bge.w	801a57e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a346:	f1bc 0f00 	cmp.w	ip, #0
 801a34a:	f2c0 8118 	blt.w	801a57e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a34e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801a352:	45cc      	cmp	ip, r9
 801a354:	f280 8113 	bge.w	801a57e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a358:	b21b      	sxth	r3, r3
 801a35a:	fb0c 2203 	mla	r2, ip, r3, r2
 801a35e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a360:	eb04 0902 	add.w	r9, r4, r2
 801a364:	5ca2      	ldrb	r2, [r4, r2]
 801a366:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801a36a:	2800      	cmp	r0, #0
 801a36c:	f000 80fe 	beq.w	801a56c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a370:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a374:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801a378:	9211      	str	r2, [sp, #68]	; 0x44
 801a37a:	b151      	cbz	r1, 801a392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a37c:	eb09 0203 	add.w	r2, r9, r3
 801a380:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a384:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a388:	930f      	str	r3, [sp, #60]	; 0x3c
 801a38a:	7853      	ldrb	r3, [r2, #1]
 801a38c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a390:	9312      	str	r3, [sp, #72]	; 0x48
 801a392:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a394:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a396:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a39a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a39e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a3a2:	ea4c 0c03 	orr.w	ip, ip, r3
 801a3a6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a3a8:	041b      	lsls	r3, r3, #16
 801a3aa:	fb10 f201 	smulbb	r2, r0, r1
 801a3ae:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801a3b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a3b6:	10d2      	asrs	r2, r2, #3
 801a3b8:	4323      	orrs	r3, r4
 801a3ba:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801a3be:	4353      	muls	r3, r2
 801a3c0:	fb09 330c 	mla	r3, r9, ip, r3
 801a3c4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a3c8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a3cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a3d0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a3d4:	f1c1 0c10 	rsb	ip, r1, #16
 801a3d8:	ebac 0c00 	sub.w	ip, ip, r0
 801a3dc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a3e0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a3e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a3e6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a3e8:	0418      	lsls	r0, r3, #16
 801a3ea:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a3ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a3f2:	4318      	orrs	r0, r3
 801a3f4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a3f8:	fb02 c200 	mla	r2, r2, r0, ip
 801a3fc:	0d53      	lsrs	r3, r2, #21
 801a3fe:	0952      	lsrs	r2, r2, #5
 801a400:	8838      	ldrh	r0, [r7, #0]
 801a402:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a406:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a40a:	431a      	orrs	r2, r3
 801a40c:	b292      	uxth	r2, r2
 801a40e:	1201      	asrs	r1, r0, #8
 801a410:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801a414:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a418:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a41c:	fb11 f104 	smulbb	r1, r1, r4
 801a420:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a424:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a428:	00c0      	lsls	r0, r0, #3
 801a42a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801a42e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a432:	10d1      	asrs	r1, r2, #3
 801a434:	b2c0      	uxtb	r0, r0
 801a436:	00d2      	lsls	r2, r2, #3
 801a438:	b2d2      	uxtb	r2, r2
 801a43a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a43e:	fb1e fe04 	smulbb	lr, lr, r4
 801a442:	fb10 f004 	smulbb	r0, r0, r4
 801a446:	fa1f fc8c 	uxth.w	ip, ip
 801a44a:	fb01 e103 	mla	r1, r1, r3, lr
 801a44e:	fb02 0303 	mla	r3, r2, r3, r0
 801a452:	b29a      	uxth	r2, r3
 801a454:	f10c 0301 	add.w	r3, ip, #1
 801a458:	b289      	uxth	r1, r1
 801a45a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a45e:	1c53      	adds	r3, r2, #1
 801a460:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a464:	1c4a      	adds	r2, r1, #1
 801a466:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a46a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a46e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a472:	0949      	lsrs	r1, r1, #5
 801a474:	ea43 030c 	orr.w	r3, r3, ip
 801a478:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a47c:	430b      	orrs	r3, r1
 801a47e:	803b      	strh	r3, [r7, #0]
 801a480:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a482:	449a      	add	sl, r3
 801a484:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a486:	3702      	adds	r7, #2
 801a488:	441d      	add	r5, r3
 801a48a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a48e:	e742      	b.n	801a316 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a490:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a492:	449a      	add	sl, r3
 801a494:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a496:	441d      	add	r5, r3
 801a498:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a49a:	3b01      	subs	r3, #1
 801a49c:	9309      	str	r3, [sp, #36]	; 0x24
 801a49e:	f108 0802 	add.w	r8, r8, #2
 801a4a2:	e718      	b.n	801a2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a4a4:	d023      	beq.n	801a4ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a4a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a4a8:	9825      	ldr	r0, [sp, #148]	; 0x94
 801a4aa:	3b01      	subs	r3, #1
 801a4ac:	fb00 a003 	mla	r0, r0, r3, sl
 801a4b0:	1400      	asrs	r0, r0, #16
 801a4b2:	f53f af2d 	bmi.w	801a310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a4b6:	3901      	subs	r1, #1
 801a4b8:	4288      	cmp	r0, r1
 801a4ba:	f6bf af29 	bge.w	801a310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a4be:	9926      	ldr	r1, [sp, #152]	; 0x98
 801a4c0:	fb01 5303 	mla	r3, r1, r3, r5
 801a4c4:	141b      	asrs	r3, r3, #16
 801a4c6:	f53f af23 	bmi.w	801a310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a4ca:	3a01      	subs	r2, #1
 801a4cc:	4293      	cmp	r3, r2
 801a4ce:	f6bf af1f 	bge.w	801a310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a4d2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801a4d6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801a4da:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801a4de:	f1be 0f00 	cmp.w	lr, #0
 801a4e2:	dc6c      	bgt.n	801a5be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a4e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a4e6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a4ea:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a4ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a4f0:	2b00      	cmp	r3, #0
 801a4f2:	f340 810e 	ble.w	801a712 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a4f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4fa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a4fe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a502:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a504:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a508:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a50c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a510:	eef0 6a62 	vmov.f32	s13, s5
 801a514:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a518:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a51c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a520:	ee16 aa90 	vmov	sl, s13
 801a524:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a528:	eef0 6a43 	vmov.f32	s13, s6
 801a52c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a530:	ee12 2a90 	vmov	r2, s5
 801a534:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a538:	fb92 f3f3 	sdiv	r3, r2, r3
 801a53c:	ee13 2a10 	vmov	r2, s6
 801a540:	9325      	str	r3, [sp, #148]	; 0x94
 801a542:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a544:	fb92 f3f3 	sdiv	r3, r2, r3
 801a548:	9326      	str	r3, [sp, #152]	; 0x98
 801a54a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a54c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801a54e:	3b01      	subs	r3, #1
 801a550:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a554:	930c      	str	r3, [sp, #48]	; 0x30
 801a556:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a558:	bf08      	it	eq
 801a55a:	4613      	moveq	r3, r2
 801a55c:	ee16 5a90 	vmov	r5, s13
 801a560:	9309      	str	r3, [sp, #36]	; 0x24
 801a562:	eeb0 3a67 	vmov.f32	s6, s15
 801a566:	eef0 2a47 	vmov.f32	s5, s14
 801a56a:	e6a6      	b.n	801a2ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a56c:	2900      	cmp	r1, #0
 801a56e:	f43f af10 	beq.w	801a392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a572:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a576:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a57a:	930f      	str	r3, [sp, #60]	; 0x3c
 801a57c:	e709      	b.n	801a392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a57e:	f112 0901 	adds.w	r9, r2, #1
 801a582:	f53f af7d 	bmi.w	801a480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a586:	454b      	cmp	r3, r9
 801a588:	f6ff af7a 	blt.w	801a480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a58c:	f11c 0901 	adds.w	r9, ip, #1
 801a590:	f53f af76 	bmi.w	801a480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a594:	45ce      	cmp	lr, r9
 801a596:	f6ff af73 	blt.w	801a480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a59a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a59c:	9202      	str	r2, [sp, #8]
 801a59e:	b21b      	sxth	r3, r3
 801a5a0:	fa0f f28e 	sxth.w	r2, lr
 801a5a4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a5a8:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a5ac:	9201      	str	r2, [sp, #4]
 801a5ae:	9300      	str	r3, [sp, #0]
 801a5b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a5b2:	9816      	ldr	r0, [sp, #88]	; 0x58
 801a5b4:	4633      	mov	r3, r6
 801a5b6:	4639      	mov	r1, r7
 801a5b8:	f7ff fd8e 	bl	801a0d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a5bc:	e760      	b.n	801a480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a5be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a5c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a5c2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a5c6:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a5ca:	1429      	asrs	r1, r5, #16
 801a5cc:	fb03 2101 	mla	r1, r3, r1, r2
 801a5d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a5d2:	440a      	add	r2, r1
 801a5d4:	5c61      	ldrb	r1, [r4, r1]
 801a5d6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a5da:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a5de:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a5e2:	f1bc 0f00 	cmp.w	ip, #0
 801a5e6:	f000 808c 	beq.w	801a702 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a5ea:	7857      	ldrb	r7, [r2, #1]
 801a5ec:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a5f0:	9413      	str	r4, [sp, #76]	; 0x4c
 801a5f2:	b140      	cbz	r0, 801a606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a5f4:	18d7      	adds	r7, r2, r3
 801a5f6:	5cd3      	ldrb	r3, [r2, r3]
 801a5f8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a5fc:	9310      	str	r3, [sp, #64]	; 0x40
 801a5fe:	787b      	ldrb	r3, [r7, #1]
 801a600:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a604:	9314      	str	r3, [sp, #80]	; 0x50
 801a606:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a608:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a60a:	fb1c f200 	smulbb	r2, ip, r0
 801a60e:	041f      	lsls	r7, r3, #16
 801a610:	10d2      	asrs	r2, r2, #3
 801a612:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a616:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801a61a:	431f      	orrs	r7, r3
 801a61c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a620:	9317      	str	r3, [sp, #92]	; 0x5c
 801a622:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a624:	041b      	lsls	r3, r3, #16
 801a626:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801a62a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a62e:	ea43 030b 	orr.w	r3, r3, fp
 801a632:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a634:	4353      	muls	r3, r2
 801a636:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a63a:	fb04 3707 	mla	r7, r4, r7, r3
 801a63e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a642:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801a646:	ea43 0b01 	orr.w	fp, r3, r1
 801a64a:	f1c0 0110 	rsb	r1, r0, #16
 801a64e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a650:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a652:	eba1 0c0c 	sub.w	ip, r1, ip
 801a656:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a65a:	fb0c 770b 	mla	r7, ip, fp, r7
 801a65e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a662:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801a666:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a66a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a66e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a672:	fb02 770c 	mla	r7, r2, ip, r7
 801a676:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a678:	0d79      	lsrs	r1, r7, #21
 801a67a:	097f      	lsrs	r7, r7, #5
 801a67c:	8812      	ldrh	r2, [r2, #0]
 801a67e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a682:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a686:	430f      	orrs	r7, r1
 801a688:	b2bb      	uxth	r3, r7
 801a68a:	1211      	asrs	r1, r2, #8
 801a68c:	1218      	asrs	r0, r3, #8
 801a68e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a692:	fb11 f104 	smulbb	r1, r1, r4
 801a696:	10d7      	asrs	r7, r2, #3
 801a698:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a69c:	00d2      	lsls	r2, r2, #3
 801a69e:	fb00 1009 	mla	r0, r0, r9, r1
 801a6a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a6a6:	10d9      	asrs	r1, r3, #3
 801a6a8:	b2d2      	uxtb	r2, r2
 801a6aa:	00db      	lsls	r3, r3, #3
 801a6ac:	fb17 f704 	smulbb	r7, r7, r4
 801a6b0:	fb12 f204 	smulbb	r2, r2, r4
 801a6b4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a6b8:	b2db      	uxtb	r3, r3
 801a6ba:	b280      	uxth	r0, r0
 801a6bc:	fb01 7109 	mla	r1, r1, r9, r7
 801a6c0:	fb03 2309 	mla	r3, r3, r9, r2
 801a6c4:	b29b      	uxth	r3, r3
 801a6c6:	b289      	uxth	r1, r1
 801a6c8:	1c42      	adds	r2, r0, #1
 801a6ca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a6ce:	1c4f      	adds	r7, r1, #1
 801a6d0:	1c5a      	adds	r2, r3, #1
 801a6d2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a6d6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a6da:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a6de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a6e2:	0949      	lsrs	r1, r1, #5
 801a6e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a6e6:	4310      	orrs	r0, r2
 801a6e8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a6ec:	4308      	orrs	r0, r1
 801a6ee:	f823 0b02 	strh.w	r0, [r3], #2
 801a6f2:	930e      	str	r3, [sp, #56]	; 0x38
 801a6f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a6f6:	449a      	add	sl, r3
 801a6f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a6fa:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a6fe:	441d      	add	r5, r3
 801a700:	e6ed      	b.n	801a4de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a702:	2800      	cmp	r0, #0
 801a704:	f43f af7f 	beq.w	801a606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a708:	5cd3      	ldrb	r3, [r2, r3]
 801a70a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a70e:	9310      	str	r3, [sp, #64]	; 0x40
 801a710:	e779      	b.n	801a606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a712:	b019      	add	sp, #100	; 0x64
 801a714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a718:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a71c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801a720:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a724:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801a728:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a72c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801a730:	8808      	ldrh	r0, [r1, #0]
 801a732:	fb08 470e 	mla	r7, r8, lr, r4
 801a736:	f1b8 0f00 	cmp.w	r8, #0
 801a73a:	eb02 0907 	add.w	r9, r2, r7
 801a73e:	db67      	blt.n	801a810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a740:	45c2      	cmp	sl, r8
 801a742:	dd65      	ble.n	801a810 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a744:	2c00      	cmp	r4, #0
 801a746:	db61      	blt.n	801a80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a748:	45a6      	cmp	lr, r4
 801a74a:	dd5f      	ble.n	801a80c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a74c:	5dd2      	ldrb	r2, [r2, r7]
 801a74e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a752:	1c62      	adds	r2, r4, #1
 801a754:	d45f      	bmi.n	801a816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a756:	4596      	cmp	lr, r2
 801a758:	dd5d      	ble.n	801a816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a75a:	2d00      	cmp	r5, #0
 801a75c:	d05b      	beq.n	801a816 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a75e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a762:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a766:	f118 0801 	adds.w	r8, r8, #1
 801a76a:	d458      	bmi.n	801a81e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a76c:	45c2      	cmp	sl, r8
 801a76e:	dd56      	ble.n	801a81e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a770:	2e00      	cmp	r6, #0
 801a772:	d054      	beq.n	801a81e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a774:	2c00      	cmp	r4, #0
 801a776:	db50      	blt.n	801a81a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a778:	45a6      	cmp	lr, r4
 801a77a:	dd4e      	ble.n	801a81a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a77c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a780:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a784:	3401      	adds	r4, #1
 801a786:	d407      	bmi.n	801a798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a788:	45a6      	cmp	lr, r4
 801a78a:	dd05      	ble.n	801a798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a78c:	b125      	cbz	r5, 801a798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a78e:	44ce      	add	lr, r9
 801a790:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a794:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a798:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a79c:	fb15 f406 	smulbb	r4, r5, r6
 801a7a0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a7a4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a7a8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a7ac:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a7b0:	ea43 0c0c 	orr.w	ip, r3, ip
 801a7b4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a7b8:	f1c6 0310 	rsb	r3, r6, #16
 801a7bc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a7c0:	1b5b      	subs	r3, r3, r5
 801a7c2:	ea4e 0707 	orr.w	r7, lr, r7
 801a7c6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a7ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a7ce:	437d      	muls	r5, r7
 801a7d0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a7d4:	0403      	lsls	r3, r0, #16
 801a7d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a7da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a7de:	4318      	orrs	r0, r3
 801a7e0:	0413      	lsls	r3, r2, #16
 801a7e2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a7e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a7ea:	4313      	orrs	r3, r2
 801a7ec:	fb04 c000 	mla	r0, r4, r0, ip
 801a7f0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a7f4:	fb06 0003 	mla	r0, r6, r3, r0
 801a7f8:	0d43      	lsrs	r3, r0, #21
 801a7fa:	0940      	lsrs	r0, r0, #5
 801a7fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a800:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a804:	4318      	orrs	r0, r3
 801a806:	8008      	strh	r0, [r1, #0]
 801a808:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a80c:	4684      	mov	ip, r0
 801a80e:	e7a0      	b.n	801a752 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a810:	4607      	mov	r7, r0
 801a812:	4684      	mov	ip, r0
 801a814:	e7a7      	b.n	801a766 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a816:	4607      	mov	r7, r0
 801a818:	e7a5      	b.n	801a766 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a81a:	4602      	mov	r2, r0
 801a81c:	e7b2      	b.n	801a784 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a81e:	4602      	mov	r2, r0
 801a820:	e7ba      	b.n	801a798 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a822:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a826:	b093      	sub	sp, #76	; 0x4c
 801a828:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801a82c:	920f      	str	r2, [sp, #60]	; 0x3c
 801a82e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a830:	9108      	str	r1, [sp, #32]
 801a832:	9306      	str	r3, [sp, #24]
 801a834:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801a838:	9010      	str	r0, [sp, #64]	; 0x40
 801a83a:	6850      	ldr	r0, [r2, #4]
 801a83c:	6812      	ldr	r2, [r2, #0]
 801a83e:	fb00 1303 	mla	r3, r0, r3, r1
 801a842:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a846:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a848:	681b      	ldr	r3, [r3, #0]
 801a84a:	9307      	str	r3, [sp, #28]
 801a84c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a84e:	685f      	ldr	r7, [r3, #4]
 801a850:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a854:	3704      	adds	r7, #4
 801a856:	9b08      	ldr	r3, [sp, #32]
 801a858:	2b00      	cmp	r3, #0
 801a85a:	dc03      	bgt.n	801a864 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a85c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a85e:	2b00      	cmp	r3, #0
 801a860:	f340 81b2 	ble.w	801abc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a864:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a866:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a86a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a86e:	1e48      	subs	r0, r1, #1
 801a870:	f102 3cff 	add.w	ip, r2, #4294967295
 801a874:	9b06      	ldr	r3, [sp, #24]
 801a876:	2b00      	cmp	r3, #0
 801a878:	f340 80a9 	ble.w	801a9ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a87c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a880:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a884:	d406      	bmi.n	801a894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a886:	4586      	cmp	lr, r0
 801a888:	da04      	bge.n	801a894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a88a:	2b00      	cmp	r3, #0
 801a88c:	db02      	blt.n	801a894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a88e:	4563      	cmp	r3, ip
 801a890:	f2c0 809e 	blt.w	801a9d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a894:	f11e 0e01 	adds.w	lr, lr, #1
 801a898:	f100 808f 	bmi.w	801a9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a89c:	4571      	cmp	r1, lr
 801a89e:	f2c0 808c 	blt.w	801a9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8a2:	3301      	adds	r3, #1
 801a8a4:	f100 8089 	bmi.w	801a9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8a8:	429a      	cmp	r2, r3
 801a8aa:	f2c0 8086 	blt.w	801a9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8ae:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a8b2:	46c8      	mov	r8, r9
 801a8b4:	f1bb 0f00 	cmp.w	fp, #0
 801a8b8:	f340 80a6 	ble.w	801aa08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a8bc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801a8be:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a8c0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a8c4:	689b      	ldr	r3, [r3, #8]
 801a8c6:	1422      	asrs	r2, r4, #16
 801a8c8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a8cc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a8d0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a8d4:	f100 80e3 	bmi.w	801aa9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a8d8:	f103 3aff 	add.w	sl, r3, #4294967295
 801a8dc:	4552      	cmp	r2, sl
 801a8de:	f280 80de 	bge.w	801aa9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a8e2:	f1bc 0f00 	cmp.w	ip, #0
 801a8e6:	f2c0 80da 	blt.w	801aa9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a8ea:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a8ee:	45d4      	cmp	ip, sl
 801a8f0:	f280 80d5 	bge.w	801aa9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a8f4:	b21b      	sxth	r3, r3
 801a8f6:	fb0c 2203 	mla	r2, ip, r3, r2
 801a8fa:	9d07      	ldr	r5, [sp, #28]
 801a8fc:	eb05 0a02 	add.w	sl, r5, r2
 801a900:	5caa      	ldrb	r2, [r5, r2]
 801a902:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a906:	2800      	cmp	r0, #0
 801a908:	f000 80c0 	beq.w	801aa8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a90c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a910:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a914:	920b      	str	r2, [sp, #44]	; 0x2c
 801a916:	b151      	cbz	r1, 801a92e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a918:	eb0a 0203 	add.w	r2, sl, r3
 801a91c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a920:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a924:	9309      	str	r3, [sp, #36]	; 0x24
 801a926:	7853      	ldrb	r3, [r2, #1]
 801a928:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a92c:	930c      	str	r3, [sp, #48]	; 0x30
 801a92e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a930:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a932:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a936:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a93a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a93e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a942:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a944:	041b      	lsls	r3, r3, #16
 801a946:	fb10 f201 	smulbb	r2, r0, r1
 801a94a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a94e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a952:	10d2      	asrs	r2, r2, #3
 801a954:	432b      	orrs	r3, r5
 801a956:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a95a:	4353      	muls	r3, r2
 801a95c:	fb0a 330c 	mla	r3, sl, ip, r3
 801a960:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a964:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a968:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a96c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a970:	f1c1 0c10 	rsb	ip, r1, #16
 801a974:	ebac 0c00 	sub.w	ip, ip, r0
 801a978:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a97c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a980:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a982:	0418      	lsls	r0, r3, #16
 801a984:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a988:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a98c:	4318      	orrs	r0, r3
 801a98e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a992:	fb02 c200 	mla	r2, r2, r0, ip
 801a996:	0d53      	lsrs	r3, r2, #21
 801a998:	0952      	lsrs	r2, r2, #5
 801a99a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a99e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a9a2:	431a      	orrs	r2, r3
 801a9a4:	f8a8 2000 	strh.w	r2, [r8]
 801a9a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a9aa:	441c      	add	r4, r3
 801a9ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a9ae:	f108 0802 	add.w	r8, r8, #2
 801a9b2:	441e      	add	r6, r3
 801a9b4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a9b8:	e77c      	b.n	801a8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a9ba:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a9bc:	441c      	add	r4, r3
 801a9be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a9c0:	441e      	add	r6, r3
 801a9c2:	9b06      	ldr	r3, [sp, #24]
 801a9c4:	3b01      	subs	r3, #1
 801a9c6:	9306      	str	r3, [sp, #24]
 801a9c8:	f109 0902 	add.w	r9, r9, #2
 801a9cc:	e752      	b.n	801a874 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a9ce:	d020      	beq.n	801aa12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a9d0:	9b06      	ldr	r3, [sp, #24]
 801a9d2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a9d4:	3b01      	subs	r3, #1
 801a9d6:	fb00 4003 	mla	r0, r0, r3, r4
 801a9da:	1400      	asrs	r0, r0, #16
 801a9dc:	f53f af67 	bmi.w	801a8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a9e0:	3901      	subs	r1, #1
 801a9e2:	4288      	cmp	r0, r1
 801a9e4:	f6bf af63 	bge.w	801a8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a9e8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a9ea:	fb01 6303 	mla	r3, r1, r3, r6
 801a9ee:	141b      	asrs	r3, r3, #16
 801a9f0:	f53f af5d 	bmi.w	801a8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a9f4:	3a01      	subs	r2, #1
 801a9f6:	4293      	cmp	r3, r2
 801a9f8:	f6bf af59 	bge.w	801a8ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a9fc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801aa00:	46ca      	mov	sl, r9
 801aa02:	f1b8 0f00 	cmp.w	r8, #0
 801aa06:	dc67      	bgt.n	801aad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801aa08:	9b06      	ldr	r3, [sp, #24]
 801aa0a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801aa0e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801aa12:	9b08      	ldr	r3, [sp, #32]
 801aa14:	2b00      	cmp	r3, #0
 801aa16:	f340 80d7 	ble.w	801abc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801aa1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa22:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801aa28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa30:	eeb0 6a62 	vmov.f32	s12, s5
 801aa34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa40:	ee16 4a10 	vmov	r4, s12
 801aa44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa48:	eeb0 6a43 	vmov.f32	s12, s6
 801aa4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa50:	ee12 2a90 	vmov	r2, s5
 801aa54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa58:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa5c:	ee13 2a10 	vmov	r2, s6
 801aa60:	931f      	str	r3, [sp, #124]	; 0x7c
 801aa62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801aa64:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa68:	9320      	str	r3, [sp, #128]	; 0x80
 801aa6a:	9b08      	ldr	r3, [sp, #32]
 801aa6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801aa6e:	3b01      	subs	r3, #1
 801aa70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa74:	9308      	str	r3, [sp, #32]
 801aa76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801aa78:	bf08      	it	eq
 801aa7a:	4613      	moveq	r3, r2
 801aa7c:	ee16 6a10 	vmov	r6, s12
 801aa80:	9306      	str	r3, [sp, #24]
 801aa82:	eeb0 3a67 	vmov.f32	s6, s15
 801aa86:	eef0 2a47 	vmov.f32	s5, s14
 801aa8a:	e6e4      	b.n	801a856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801aa8c:	2900      	cmp	r1, #0
 801aa8e:	f43f af4e 	beq.w	801a92e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801aa92:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801aa96:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801aa9a:	9309      	str	r3, [sp, #36]	; 0x24
 801aa9c:	e747      	b.n	801a92e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801aa9e:	f112 0a01 	adds.w	sl, r2, #1
 801aaa2:	d481      	bmi.n	801a9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aaa4:	4553      	cmp	r3, sl
 801aaa6:	f6ff af7f 	blt.w	801a9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aaaa:	f11c 0a01 	adds.w	sl, ip, #1
 801aaae:	f53f af7b 	bmi.w	801a9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aab2:	45d6      	cmp	lr, sl
 801aab4:	f6ff af78 	blt.w	801a9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aab8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801aabc:	b21b      	sxth	r3, r3
 801aabe:	fa0f f28e 	sxth.w	r2, lr
 801aac2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801aac6:	9201      	str	r2, [sp, #4]
 801aac8:	9300      	str	r3, [sp, #0]
 801aaca:	9a07      	ldr	r2, [sp, #28]
 801aacc:	9810      	ldr	r0, [sp, #64]	; 0x40
 801aace:	463b      	mov	r3, r7
 801aad0:	4641      	mov	r1, r8
 801aad2:	f7ff fe21 	bl	801a718 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801aad6:	e767      	b.n	801a9a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aad8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801aada:	9d07      	ldr	r5, [sp, #28]
 801aadc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801aae0:	1422      	asrs	r2, r4, #16
 801aae2:	1431      	asrs	r1, r6, #16
 801aae4:	fb03 2101 	mla	r1, r3, r1, r2
 801aae8:	9a07      	ldr	r2, [sp, #28]
 801aaea:	440a      	add	r2, r1
 801aaec:	5c69      	ldrb	r1, [r5, r1]
 801aaee:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801aaf2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aaf6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801aafa:	f1be 0f00 	cmp.w	lr, #0
 801aafe:	d05c      	beq.n	801abba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ab00:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ab04:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ab08:	950d      	str	r5, [sp, #52]	; 0x34
 801ab0a:	b150      	cbz	r0, 801ab22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ab0c:	eb02 0c03 	add.w	ip, r2, r3
 801ab10:	5cd3      	ldrb	r3, [r2, r3]
 801ab12:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ab16:	930a      	str	r3, [sp, #40]	; 0x28
 801ab18:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ab1c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ab20:	930e      	str	r3, [sp, #56]	; 0x38
 801ab22:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ab24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ab26:	fb1e f200 	smulbb	r2, lr, r0
 801ab2a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ab2e:	10d2      	asrs	r2, r2, #3
 801ab30:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ab34:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ab38:	ea4c 0c03 	orr.w	ip, ip, r3
 801ab3c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ab40:	9311      	str	r3, [sp, #68]	; 0x44
 801ab42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ab44:	041b      	lsls	r3, r3, #16
 801ab46:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801ab4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ab4e:	ea43 030b 	orr.w	r3, r3, fp
 801ab52:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ab54:	4353      	muls	r3, r2
 801ab56:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ab5a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ab5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ab62:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ab66:	ea43 0b01 	orr.w	fp, r3, r1
 801ab6a:	f1c0 0110 	rsb	r1, r0, #16
 801ab6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ab70:	eba1 0e0e 	sub.w	lr, r1, lr
 801ab74:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ab78:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ab7c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ab80:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801ab84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ab88:	ea4b 0e0e 	orr.w	lr, fp, lr
 801ab8c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ab90:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ab94:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ab98:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ab9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801aba0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801aba4:	ea43 0c0c 	orr.w	ip, r3, ip
 801aba8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801abaa:	f82a cb02 	strh.w	ip, [sl], #2
 801abae:	441c      	add	r4, r3
 801abb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801abb2:	f108 38ff 	add.w	r8, r8, #4294967295
 801abb6:	441e      	add	r6, r3
 801abb8:	e723      	b.n	801aa02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801abba:	2800      	cmp	r0, #0
 801abbc:	d0b1      	beq.n	801ab22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801abbe:	5cd3      	ldrb	r3, [r2, r3]
 801abc0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801abc4:	930a      	str	r3, [sp, #40]	; 0x28
 801abc6:	e7ac      	b.n	801ab22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801abc8:	b013      	add	sp, #76	; 0x4c
 801abca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801abce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801abce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abd2:	880d      	ldrh	r5, [r1, #0]
 801abd4:	b087      	sub	sp, #28
 801abd6:	10ef      	asrs	r7, r5, #3
 801abd8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801abdc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801abe0:	00ed      	lsls	r5, r5, #3
 801abe2:	9701      	str	r7, [sp, #4]
 801abe4:	b2ed      	uxtb	r5, r5
 801abe6:	9502      	str	r5, [sp, #8]
 801abe8:	9d01      	ldr	r5, [sp, #4]
 801abea:	9103      	str	r1, [sp, #12]
 801abec:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801abf0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801abf4:	9902      	ldr	r1, [sp, #8]
 801abf6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801abfa:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801abfe:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801ac02:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801ac06:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801ac0a:	022d      	lsls	r5, r5, #8
 801ac0c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801ac10:	fb06 0709 	mla	r7, r6, r9, r0
 801ac14:	430d      	orrs	r5, r1
 801ac16:	2e00      	cmp	r6, #0
 801ac18:	eb02 0c07 	add.w	ip, r2, r7
 801ac1c:	9505      	str	r5, [sp, #20]
 801ac1e:	f2c0 80b6 	blt.w	801ad8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ac22:	45b3      	cmp	fp, r6
 801ac24:	f340 80b3 	ble.w	801ad8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ac28:	2800      	cmp	r0, #0
 801ac2a:	f2c0 80ae 	blt.w	801ad8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ac2e:	4581      	cmp	r9, r0
 801ac30:	f340 80ab 	ble.w	801ad8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ac34:	5dd7      	ldrb	r7, [r2, r7]
 801ac36:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ac3a:	441f      	add	r7, r3
 801ac3c:	1c42      	adds	r2, r0, #1
 801ac3e:	f100 80a9 	bmi.w	801ad94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ac42:	4591      	cmp	r9, r2
 801ac44:	f340 80a6 	ble.w	801ad94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ac48:	2c00      	cmp	r4, #0
 801ac4a:	f000 80a3 	beq.w	801ad94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ac4e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ac52:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ac56:	441d      	add	r5, r3
 801ac58:	3601      	adds	r6, #1
 801ac5a:	f100 809f 	bmi.w	801ad9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ac5e:	45b3      	cmp	fp, r6
 801ac60:	f340 809c 	ble.w	801ad9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ac64:	f1be 0f00 	cmp.w	lr, #0
 801ac68:	f000 8098 	beq.w	801ad9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ac6c:	2800      	cmp	r0, #0
 801ac6e:	f2c0 8093 	blt.w	801ad98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801ac72:	4581      	cmp	r9, r0
 801ac74:	f340 8090 	ble.w	801ad98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801ac78:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801ac7c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ac80:	441e      	add	r6, r3
 801ac82:	3001      	adds	r0, #1
 801ac84:	f100 808d 	bmi.w	801ada2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ac88:	4581      	cmp	r9, r0
 801ac8a:	f340 808a 	ble.w	801ada2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ac8e:	2c00      	cmp	r4, #0
 801ac90:	f000 8087 	beq.w	801ada2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ac94:	44e1      	add	r9, ip
 801ac96:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ac9a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ac9e:	4413      	add	r3, r2
 801aca0:	b2a4      	uxth	r4, r4
 801aca2:	fa1f fe8e 	uxth.w	lr, lr
 801aca6:	fb04 fb0e 	mul.w	fp, r4, lr
 801acaa:	0124      	lsls	r4, r4, #4
 801acac:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801acb0:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801acb4:	eba4 040b 	sub.w	r4, r4, fp
 801acb8:	fa1f f08e 	uxth.w	r0, lr
 801acbc:	b2a2      	uxth	r2, r4
 801acbe:	78ac      	ldrb	r4, [r5, #2]
 801acc0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801acc4:	9901      	ldr	r1, [sp, #4]
 801acc6:	eba9 0900 	sub.w	r9, r9, r0
 801acca:	fa1f f989 	uxth.w	r9, r9
 801acce:	4354      	muls	r4, r2
 801acd0:	fb09 440c 	mla	r4, r9, ip, r4
 801acd4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801acd8:	fb00 440c 	mla	r4, r0, ip, r4
 801acdc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801ace0:	fa1f fe88 	uxth.w	lr, r8
 801ace4:	ea6f 0808 	mvn.w	r8, r8
 801ace8:	fa5f f888 	uxtb.w	r8, r8
 801acec:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801acf0:	fb1a fa08 	smulbb	sl, sl, r8
 801acf4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801acf8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801acfc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801ad00:	787c      	ldrb	r4, [r7, #1]
 801ad02:	782d      	ldrb	r5, [r5, #0]
 801ad04:	783f      	ldrb	r7, [r7, #0]
 801ad06:	fb02 fa0a 	mul.w	sl, r2, sl
 801ad0a:	fb09 aa04 	mla	sl, r9, r4, sl
 801ad0e:	7874      	ldrb	r4, [r6, #1]
 801ad10:	436a      	muls	r2, r5
 801ad12:	7835      	ldrb	r5, [r6, #0]
 801ad14:	fb00 aa04 	mla	sl, r0, r4, sl
 801ad18:	fb09 2207 	mla	r2, r9, r7, r2
 801ad1c:	785c      	ldrb	r4, [r3, #1]
 801ad1e:	781b      	ldrb	r3, [r3, #0]
 801ad20:	fb00 2005 	mla	r0, r0, r5, r2
 801ad24:	fb0b a404 	mla	r4, fp, r4, sl
 801ad28:	fb0b 0b03 	mla	fp, fp, r3, r0
 801ad2c:	9b02      	ldr	r3, [sp, #8]
 801ad2e:	fb11 fa08 	smulbb	sl, r1, r8
 801ad32:	fa1f fc8c 	uxth.w	ip, ip
 801ad36:	fb13 f808 	smulbb	r8, r3, r8
 801ad3a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801ad3e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801ad42:	fb04 a40e 	mla	r4, r4, lr, sl
 801ad46:	f10c 0301 	add.w	r3, ip, #1
 801ad4a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801ad4e:	fa1f fe8e 	uxth.w	lr, lr
 801ad52:	b2a4      	uxth	r4, r4
 801ad54:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ad58:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801ad5c:	f104 0a01 	add.w	sl, r4, #1
 801ad60:	f10e 0c01 	add.w	ip, lr, #1
 801ad64:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ad68:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ad6c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ad70:	0964      	lsrs	r4, r4, #5
 801ad72:	ea4c 0c03 	orr.w	ip, ip, r3
 801ad76:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ad7a:	9b03      	ldr	r3, [sp, #12]
 801ad7c:	ea4c 0c04 	orr.w	ip, ip, r4
 801ad80:	f8a3 c000 	strh.w	ip, [r3]
 801ad84:	b007      	add	sp, #28
 801ad86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad8a:	af05      	add	r7, sp, #20
 801ad8c:	e756      	b.n	801ac3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801ad8e:	ad05      	add	r5, sp, #20
 801ad90:	462f      	mov	r7, r5
 801ad92:	e761      	b.n	801ac58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801ad94:	ad05      	add	r5, sp, #20
 801ad96:	e75f      	b.n	801ac58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801ad98:	ae05      	add	r6, sp, #20
 801ad9a:	e772      	b.n	801ac82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801ad9c:	ab05      	add	r3, sp, #20
 801ad9e:	461e      	mov	r6, r3
 801ada0:	e77e      	b.n	801aca0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801ada2:	ab05      	add	r3, sp, #20
 801ada4:	e77c      	b.n	801aca0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801ada6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ada6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801adaa:	b095      	sub	sp, #84	; 0x54
 801adac:	9212      	str	r2, [sp, #72]	; 0x48
 801adae:	9309      	str	r3, [sp, #36]	; 0x24
 801adb0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801adb2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801adb6:	930f      	str	r3, [sp, #60]	; 0x3c
 801adb8:	910e      	str	r1, [sp, #56]	; 0x38
 801adba:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801adbe:	9013      	str	r0, [sp, #76]	; 0x4c
 801adc0:	6850      	ldr	r0, [r2, #4]
 801adc2:	6812      	ldr	r2, [r2, #0]
 801adc4:	fb00 1303 	mla	r3, r0, r3, r1
 801adc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801adcc:	930a      	str	r3, [sp, #40]	; 0x28
 801adce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801add0:	681b      	ldr	r3, [r3, #0]
 801add2:	930d      	str	r3, [sp, #52]	; 0x34
 801add4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801add6:	685c      	ldr	r4, [r3, #4]
 801add8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801adda:	43db      	mvns	r3, r3
 801addc:	b2db      	uxtb	r3, r3
 801adde:	3404      	adds	r4, #4
 801ade0:	930b      	str	r3, [sp, #44]	; 0x2c
 801ade2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ade4:	2b00      	cmp	r3, #0
 801ade6:	dc03      	bgt.n	801adf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ade8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801adea:	2b00      	cmp	r3, #0
 801adec:	f340 8255 	ble.w	801b29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801adf0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801adf2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801adf6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801adfa:	1e48      	subs	r0, r1, #1
 801adfc:	1e55      	subs	r5, r2, #1
 801adfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae00:	2b00      	cmp	r3, #0
 801ae02:	f340 80f9 	ble.w	801aff8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ae06:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801ae08:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ae0a:	1436      	asrs	r6, r6, #16
 801ae0c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ae10:	d406      	bmi.n	801ae20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ae12:	4286      	cmp	r6, r0
 801ae14:	da04      	bge.n	801ae20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ae16:	2b00      	cmp	r3, #0
 801ae18:	db02      	blt.n	801ae20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ae1a:	42ab      	cmp	r3, r5
 801ae1c:	f2c0 80ed 	blt.w	801affa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801ae20:	3601      	adds	r6, #1
 801ae22:	f100 80da 	bmi.w	801afda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ae26:	42b1      	cmp	r1, r6
 801ae28:	f2c0 80d7 	blt.w	801afda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ae2c:	3301      	adds	r3, #1
 801ae2e:	f100 80d4 	bmi.w	801afda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ae32:	429a      	cmp	r2, r3
 801ae34:	f2c0 80d1 	blt.w	801afda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ae38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae3a:	9311      	str	r3, [sp, #68]	; 0x44
 801ae3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ae3e:	930c      	str	r3, [sp, #48]	; 0x30
 801ae40:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ae42:	2b00      	cmp	r3, #0
 801ae44:	f340 80fa 	ble.w	801b03c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801ae48:	9826      	ldr	r0, [sp, #152]	; 0x98
 801ae4a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ae4c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ae4e:	68c6      	ldr	r6, [r0, #12]
 801ae50:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ae52:	141d      	asrs	r5, r3, #16
 801ae54:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ae58:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ae5a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ae5c:	1400      	asrs	r0, r0, #16
 801ae5e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ae62:	6892      	ldr	r2, [r2, #8]
 801ae64:	f100 813e 	bmi.w	801b0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ae68:	1e57      	subs	r7, r2, #1
 801ae6a:	42b8      	cmp	r0, r7
 801ae6c:	f280 813a 	bge.w	801b0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ae70:	2d00      	cmp	r5, #0
 801ae72:	f2c0 8137 	blt.w	801b0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ae76:	1e77      	subs	r7, r6, #1
 801ae78:	42bd      	cmp	r5, r7
 801ae7a:	f280 8133 	bge.w	801b0e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ae7e:	b212      	sxth	r2, r2
 801ae80:	fb05 0002 	mla	r0, r5, r2, r0
 801ae84:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ae86:	f815 a000 	ldrb.w	sl, [r5, r0]
 801ae8a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801ae8e:	182e      	adds	r6, r5, r0
 801ae90:	eb04 050a 	add.w	r5, r4, sl
 801ae94:	2b00      	cmp	r3, #0
 801ae96:	f000 8117 	beq.w	801b0c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801ae9a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801ae9e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801aea2:	44a4      	add	ip, r4
 801aea4:	2900      	cmp	r1, #0
 801aea6:	f000 8117 	beq.w	801b0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801aeaa:	18b0      	adds	r0, r6, r2
 801aeac:	5cb2      	ldrb	r2, [r6, r2]
 801aeae:	7840      	ldrb	r0, [r0, #1]
 801aeb0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aeb4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aeb8:	4422      	add	r2, r4
 801aeba:	4420      	add	r0, r4
 801aebc:	b29b      	uxth	r3, r3
 801aebe:	b289      	uxth	r1, r1
 801aec0:	fb03 f901 	mul.w	r9, r3, r1
 801aec4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aec8:	011b      	lsls	r3, r3, #4
 801aeca:	b289      	uxth	r1, r1
 801aecc:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801aed0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801aed4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801aed6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801aeda:	f8b6 e000 	ldrh.w	lr, [r6]
 801aede:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801aee2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801aee6:	eba3 0309 	sub.w	r3, r3, r9
 801aeea:	b29b      	uxth	r3, r3
 801aeec:	eba8 0801 	sub.w	r8, r8, r1
 801aef0:	fa1f f888 	uxth.w	r8, r8
 801aef4:	435f      	muls	r7, r3
 801aef6:	fb08 770b 	mla	r7, r8, fp, r7
 801aefa:	f892 b002 	ldrb.w	fp, [r2, #2]
 801aefe:	9310      	str	r3, [sp, #64]	; 0x40
 801af00:	fb01 770b 	mla	r7, r1, fp, r7
 801af04:	f890 b002 	ldrb.w	fp, [r0, #2]
 801af08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801af0a:	fb09 770b 	mla	r7, r9, fp, r7
 801af0e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801af12:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801af16:	fb1b fb03 	smulbb	fp, fp, r3
 801af1a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801af1e:	fb07 b706 	mla	r7, r7, r6, fp
 801af22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801af24:	f895 b001 	ldrb.w	fp, [r5, #1]
 801af28:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801af2c:	f89c c000 	ldrb.w	ip, [ip]
 801af30:	435d      	muls	r5, r3
 801af32:	fb08 550b 	mla	r5, r8, fp, r5
 801af36:	f892 b001 	ldrb.w	fp, [r2, #1]
 801af3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801af3c:	fb01 550b 	mla	r5, r1, fp, r5
 801af40:	f890 b001 	ldrb.w	fp, [r0, #1]
 801af44:	fb09 550b 	mla	r5, r9, fp, r5
 801af48:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801af4c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801af50:	fb1b fb03 	smulbb	fp, fp, r3
 801af54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801af56:	fb03 f30c 	mul.w	r3, r3, ip
 801af5a:	f892 c000 	ldrb.w	ip, [r2]
 801af5e:	fb08 330a 	mla	r3, r8, sl, r3
 801af62:	fb01 330c 	mla	r3, r1, ip, r3
 801af66:	f890 c000 	ldrb.w	ip, [r0]
 801af6a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801af6e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801af72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801af74:	fa5f fe8e 	uxtb.w	lr, lr
 801af78:	b2bf      	uxth	r7, r7
 801af7a:	fb1e fe03 	smulbb	lr, lr, r3
 801af7e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801af82:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801af86:	fb05 b506 	mla	r5, r5, r6, fp
 801af8a:	1c7b      	adds	r3, r7, #1
 801af8c:	fb0c e606 	mla	r6, ip, r6, lr
 801af90:	b2ad      	uxth	r5, r5
 801af92:	b2b6      	uxth	r6, r6
 801af94:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801af98:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801af9c:	f105 0b01 	add.w	fp, r5, #1
 801afa0:	1c77      	adds	r7, r6, #1
 801afa2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801afa6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801afaa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801afae:	096d      	lsrs	r5, r5, #5
 801afb0:	431f      	orrs	r7, r3
 801afb2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801afb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801afb8:	433d      	orrs	r5, r7
 801afba:	801d      	strh	r5, [r3, #0]
 801afbc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801afbe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801afc0:	3302      	adds	r3, #2
 801afc2:	930c      	str	r3, [sp, #48]	; 0x30
 801afc4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801afc6:	4413      	add	r3, r2
 801afc8:	931f      	str	r3, [sp, #124]	; 0x7c
 801afca:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801afcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801afce:	4413      	add	r3, r2
 801afd0:	9320      	str	r3, [sp, #128]	; 0x80
 801afd2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801afd4:	3b01      	subs	r3, #1
 801afd6:	9311      	str	r3, [sp, #68]	; 0x44
 801afd8:	e732      	b.n	801ae40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801afda:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801afdc:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801afde:	4433      	add	r3, r6
 801afe0:	931f      	str	r3, [sp, #124]	; 0x7c
 801afe2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801afe4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801afe6:	4433      	add	r3, r6
 801afe8:	9320      	str	r3, [sp, #128]	; 0x80
 801afea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afec:	3b01      	subs	r3, #1
 801afee:	9309      	str	r3, [sp, #36]	; 0x24
 801aff0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aff2:	3302      	adds	r3, #2
 801aff4:	930a      	str	r3, [sp, #40]	; 0x28
 801aff6:	e702      	b.n	801adfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801aff8:	d027      	beq.n	801b04a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801affa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801affc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801affe:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801b000:	3b01      	subs	r3, #1
 801b002:	fb00 5003 	mla	r0, r0, r3, r5
 801b006:	1400      	asrs	r0, r0, #16
 801b008:	f53f af16 	bmi.w	801ae38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b00c:	3901      	subs	r1, #1
 801b00e:	4288      	cmp	r0, r1
 801b010:	f6bf af12 	bge.w	801ae38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b014:	9922      	ldr	r1, [sp, #136]	; 0x88
 801b016:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b018:	fb01 0303 	mla	r3, r1, r3, r0
 801b01c:	141b      	asrs	r3, r3, #16
 801b01e:	f53f af0b 	bmi.w	801ae38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b022:	3a01      	subs	r2, #1
 801b024:	4293      	cmp	r3, r2
 801b026:	f6bf af07 	bge.w	801ae38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b02a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b02c:	9311      	str	r3, [sp, #68]	; 0x44
 801b02e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801b032:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b034:	930c      	str	r3, [sp, #48]	; 0x30
 801b036:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b038:	2b00      	cmp	r3, #0
 801b03a:	dc70      	bgt.n	801b11e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801b03c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b03e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b040:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b044:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b048:	930a      	str	r3, [sp, #40]	; 0x28
 801b04a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b04c:	2b00      	cmp	r3, #0
 801b04e:	f340 8124 	ble.w	801b29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b052:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b056:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b05a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b05e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b060:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b064:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b068:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b06c:	eef0 6a62 	vmov.f32	s13, s5
 801b070:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b074:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b078:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b07c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801b080:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b084:	eef0 6a43 	vmov.f32	s13, s6
 801b088:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b08c:	ee12 2a90 	vmov	r2, s5
 801b090:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b094:	fb92 f3f3 	sdiv	r3, r2, r3
 801b098:	ee13 2a10 	vmov	r2, s6
 801b09c:	9321      	str	r3, [sp, #132]	; 0x84
 801b09e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b0a0:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0a4:	9322      	str	r3, [sp, #136]	; 0x88
 801b0a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b0a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b0aa:	3b01      	subs	r3, #1
 801b0ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0b0:	930e      	str	r3, [sp, #56]	; 0x38
 801b0b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801b0b4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801b0b8:	bf08      	it	eq
 801b0ba:	4613      	moveq	r3, r2
 801b0bc:	9309      	str	r3, [sp, #36]	; 0x24
 801b0be:	eeb0 3a67 	vmov.f32	s6, s15
 801b0c2:	eef0 2a47 	vmov.f32	s5, s14
 801b0c6:	e68c      	b.n	801ade2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b0c8:	b149      	cbz	r1, 801b0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801b0ca:	5cb2      	ldrb	r2, [r6, r2]
 801b0cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b0d0:	4422      	add	r2, r4
 801b0d2:	4628      	mov	r0, r5
 801b0d4:	46ac      	mov	ip, r5
 801b0d6:	e6f1      	b.n	801aebc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b0d8:	4628      	mov	r0, r5
 801b0da:	462a      	mov	r2, r5
 801b0dc:	e6ee      	b.n	801aebc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b0de:	4628      	mov	r0, r5
 801b0e0:	462a      	mov	r2, r5
 801b0e2:	e7f7      	b.n	801b0d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801b0e4:	1c47      	adds	r7, r0, #1
 801b0e6:	f53f af69 	bmi.w	801afbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b0ea:	42ba      	cmp	r2, r7
 801b0ec:	f6ff af66 	blt.w	801afbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b0f0:	1c6f      	adds	r7, r5, #1
 801b0f2:	f53f af63 	bmi.w	801afbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b0f6:	42be      	cmp	r6, r7
 801b0f8:	f6ff af60 	blt.w	801afbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b0fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b0fe:	9002      	str	r0, [sp, #8]
 801b100:	b236      	sxth	r6, r6
 801b102:	b212      	sxth	r2, r2
 801b104:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801b108:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801b10c:	9200      	str	r2, [sp, #0]
 801b10e:	9601      	str	r6, [sp, #4]
 801b110:	4623      	mov	r3, r4
 801b112:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801b116:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b118:	f7ff fd59 	bl	801abce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801b11c:	e74e      	b.n	801afbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801b11e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b120:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b122:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801b124:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b126:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b12a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801b12c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b130:	142d      	asrs	r5, r5, #16
 801b132:	1400      	asrs	r0, r0, #16
 801b134:	fb02 5000 	mla	r0, r2, r0, r5
 801b138:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b13a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801b13e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b142:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801b146:	182e      	adds	r6, r5, r0
 801b148:	eb04 0509 	add.w	r5, r4, r9
 801b14c:	2b00      	cmp	r3, #0
 801b14e:	f000 8096 	beq.w	801b27e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801b152:	7877      	ldrb	r7, [r6, #1]
 801b154:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b158:	4427      	add	r7, r4
 801b15a:	2900      	cmp	r1, #0
 801b15c:	f000 8097 	beq.w	801b28e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801b160:	18b0      	adds	r0, r6, r2
 801b162:	5cb2      	ldrb	r2, [r6, r2]
 801b164:	7840      	ldrb	r0, [r0, #1]
 801b166:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b16a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b16e:	4422      	add	r2, r4
 801b170:	4420      	add	r0, r4
 801b172:	b29b      	uxth	r3, r3
 801b174:	b289      	uxth	r1, r1
 801b176:	fb03 f801 	mul.w	r8, r3, r1
 801b17a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801b17c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b180:	f8b6 c000 	ldrh.w	ip, [r6]
 801b184:	78be      	ldrb	r6, [r7, #2]
 801b186:	f814 9009 	ldrb.w	r9, [r4, r9]
 801b18a:	011b      	lsls	r3, r3, #4
 801b18c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801b190:	b289      	uxth	r1, r1
 801b192:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b196:	eba3 0308 	sub.w	r3, r3, r8
 801b19a:	b29b      	uxth	r3, r3
 801b19c:	ebae 0e01 	sub.w	lr, lr, r1
 801b1a0:	fa1f fe8e 	uxth.w	lr, lr
 801b1a4:	435e      	muls	r6, r3
 801b1a6:	fb0e 660b 	mla	r6, lr, fp, r6
 801b1aa:	f892 b002 	ldrb.w	fp, [r2, #2]
 801b1ae:	9310      	str	r3, [sp, #64]	; 0x40
 801b1b0:	fb01 660b 	mla	r6, r1, fp, r6
 801b1b4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801b1b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b1ba:	fb08 660b 	mla	r6, r8, fp, r6
 801b1be:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801b1c2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801b1c6:	fb1b fb03 	smulbb	fp, fp, r3
 801b1ca:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b1ce:	fb06 b60a 	mla	r6, r6, sl, fp
 801b1d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b1d4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801b1d8:	787d      	ldrb	r5, [r7, #1]
 801b1da:	783f      	ldrb	r7, [r7, #0]
 801b1dc:	435d      	muls	r5, r3
 801b1de:	fb0e 550b 	mla	r5, lr, fp, r5
 801b1e2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801b1e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b1e8:	fb01 550b 	mla	r5, r1, fp, r5
 801b1ec:	f890 b001 	ldrb.w	fp, [r0, #1]
 801b1f0:	fb08 550b 	mla	r5, r8, fp, r5
 801b1f4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b1f8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b1fc:	fb1b fb03 	smulbb	fp, fp, r3
 801b200:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b202:	437b      	muls	r3, r7
 801b204:	7817      	ldrb	r7, [r2, #0]
 801b206:	fb0e 3309 	mla	r3, lr, r9, r3
 801b20a:	fb01 3307 	mla	r3, r1, r7, r3
 801b20e:	7807      	ldrb	r7, [r0, #0]
 801b210:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b214:	fb08 3707 	mla	r7, r8, r7, r3
 801b218:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b21a:	fa5f fc8c 	uxtb.w	ip, ip
 801b21e:	fb1c fc03 	smulbb	ip, ip, r3
 801b222:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801b226:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b22a:	fb05 b50a 	mla	r5, r5, sl, fp
 801b22e:	fb07 c70a 	mla	r7, r7, sl, ip
 801b232:	b2b6      	uxth	r6, r6
 801b234:	b2ad      	uxth	r5, r5
 801b236:	b2bf      	uxth	r7, r7
 801b238:	1c73      	adds	r3, r6, #1
 801b23a:	1c7a      	adds	r2, r7, #1
 801b23c:	f105 0b01 	add.w	fp, r5, #1
 801b240:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b244:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801b248:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801b24c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b250:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b254:	096d      	lsrs	r5, r5, #5
 801b256:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b258:	4316      	orrs	r6, r2
 801b25a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b25e:	432e      	orrs	r6, r5
 801b260:	f823 6b02 	strh.w	r6, [r3], #2
 801b264:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b266:	930c      	str	r3, [sp, #48]	; 0x30
 801b268:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b26a:	4413      	add	r3, r2
 801b26c:	931f      	str	r3, [sp, #124]	; 0x7c
 801b26e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801b270:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b272:	4413      	add	r3, r2
 801b274:	9320      	str	r3, [sp, #128]	; 0x80
 801b276:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801b278:	3b01      	subs	r3, #1
 801b27a:	9311      	str	r3, [sp, #68]	; 0x44
 801b27c:	e6db      	b.n	801b036 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b27e:	b149      	cbz	r1, 801b294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801b280:	5cb2      	ldrb	r2, [r6, r2]
 801b282:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b286:	4422      	add	r2, r4
 801b288:	4628      	mov	r0, r5
 801b28a:	462f      	mov	r7, r5
 801b28c:	e771      	b.n	801b172 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b28e:	4628      	mov	r0, r5
 801b290:	462a      	mov	r2, r5
 801b292:	e76e      	b.n	801b172 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801b294:	4628      	mov	r0, r5
 801b296:	462a      	mov	r2, r5
 801b298:	e7f7      	b.n	801b28a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b29a:	b015      	add	sp, #84	; 0x54
 801b29c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b2a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801b2a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2a4:	880f      	ldrh	r7, [r1, #0]
 801b2a6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801b2aa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b2ae:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801b2b2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801b2b6:	023c      	lsls	r4, r7, #8
 801b2b8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801b2bc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801b2c0:	017c      	lsls	r4, r7, #5
 801b2c2:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801b2c6:	00ff      	lsls	r7, r7, #3
 801b2c8:	ea4b 0404 	orr.w	r4, fp, r4
 801b2cc:	b2ff      	uxtb	r7, r7
 801b2ce:	fb05 ca0e 	mla	sl, r5, lr, ip
 801b2d2:	4327      	orrs	r7, r4
 801b2d4:	2d00      	cmp	r5, #0
 801b2d6:	eb02 080a 	add.w	r8, r2, sl
 801b2da:	9701      	str	r7, [sp, #4]
 801b2dc:	db7e      	blt.n	801b3dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b2de:	45a9      	cmp	r9, r5
 801b2e0:	dd7c      	ble.n	801b3dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801b2e2:	f1bc 0f00 	cmp.w	ip, #0
 801b2e6:	db77      	blt.n	801b3d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b2e8:	45e6      	cmp	lr, ip
 801b2ea:	dd75      	ble.n	801b3d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801b2ec:	f812 700a 	ldrb.w	r7, [r2, sl]
 801b2f0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b2f4:	441f      	add	r7, r3
 801b2f6:	f11c 0201 	adds.w	r2, ip, #1
 801b2fa:	d472      	bmi.n	801b3e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b2fc:	4596      	cmp	lr, r2
 801b2fe:	dd70      	ble.n	801b3e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b300:	2800      	cmp	r0, #0
 801b302:	d06e      	beq.n	801b3e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801b304:	f898 4001 	ldrb.w	r4, [r8, #1]
 801b308:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801b30c:	441c      	add	r4, r3
 801b30e:	3501      	adds	r5, #1
 801b310:	d46b      	bmi.n	801b3ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b312:	45a9      	cmp	r9, r5
 801b314:	dd69      	ble.n	801b3ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b316:	2e00      	cmp	r6, #0
 801b318:	d067      	beq.n	801b3ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801b31a:	f1bc 0f00 	cmp.w	ip, #0
 801b31e:	db62      	blt.n	801b3e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b320:	45e6      	cmp	lr, ip
 801b322:	dd60      	ble.n	801b3e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b324:	f818 500e 	ldrb.w	r5, [r8, lr]
 801b328:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b32c:	441d      	add	r5, r3
 801b32e:	f11c 0201 	adds.w	r2, ip, #1
 801b332:	d45d      	bmi.n	801b3f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b334:	4596      	cmp	lr, r2
 801b336:	dd5b      	ble.n	801b3f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b338:	2800      	cmp	r0, #0
 801b33a:	d059      	beq.n	801b3f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b33c:	44c6      	add	lr, r8
 801b33e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b342:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b346:	4413      	add	r3, r2
 801b348:	b280      	uxth	r0, r0
 801b34a:	b2b2      	uxth	r2, r6
 801b34c:	fb00 f602 	mul.w	r6, r0, r2
 801b350:	0100      	lsls	r0, r0, #4
 801b352:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801b356:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801b35a:	1b80      	subs	r0, r0, r6
 801b35c:	fa1f fc82 	uxth.w	ip, r2
 801b360:	b282      	uxth	r2, r0
 801b362:	78a0      	ldrb	r0, [r4, #2]
 801b364:	f897 e002 	ldrb.w	lr, [r7, #2]
 801b368:	f897 9000 	ldrb.w	r9, [r7]
 801b36c:	787f      	ldrb	r7, [r7, #1]
 801b36e:	eba8 080c 	sub.w	r8, r8, ip
 801b372:	fa1f f888 	uxth.w	r8, r8
 801b376:	4350      	muls	r0, r2
 801b378:	fb08 0e0e 	mla	lr, r8, lr, r0
 801b37c:	78a8      	ldrb	r0, [r5, #2]
 801b37e:	fb0c e000 	mla	r0, ip, r0, lr
 801b382:	f893 e002 	ldrb.w	lr, [r3, #2]
 801b386:	fb06 0e0e 	mla	lr, r6, lr, r0
 801b38a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801b38e:	f894 e000 	ldrb.w	lr, [r4]
 801b392:	fb02 fe0e 	mul.w	lr, r2, lr
 801b396:	fb08 e909 	mla	r9, r8, r9, lr
 801b39a:	f895 e000 	ldrb.w	lr, [r5]
 801b39e:	fb0c 990e 	mla	r9, ip, lr, r9
 801b3a2:	f893 e000 	ldrb.w	lr, [r3]
 801b3a6:	785b      	ldrb	r3, [r3, #1]
 801b3a8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801b3ac:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b3b0:	ea4e 0e00 	orr.w	lr, lr, r0
 801b3b4:	7860      	ldrb	r0, [r4, #1]
 801b3b6:	4350      	muls	r0, r2
 801b3b8:	786a      	ldrb	r2, [r5, #1]
 801b3ba:	fb08 0007 	mla	r0, r8, r7, r0
 801b3be:	fb0c 0202 	mla	r2, ip, r2, r0
 801b3c2:	fb06 2303 	mla	r3, r6, r3, r2
 801b3c6:	095b      	lsrs	r3, r3, #5
 801b3c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b3cc:	ea4e 0303 	orr.w	r3, lr, r3
 801b3d0:	800b      	strh	r3, [r1, #0]
 801b3d2:	b003      	add	sp, #12
 801b3d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3d8:	af01      	add	r7, sp, #4
 801b3da:	e78c      	b.n	801b2f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801b3dc:	ac01      	add	r4, sp, #4
 801b3de:	4627      	mov	r7, r4
 801b3e0:	e795      	b.n	801b30e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b3e2:	ac01      	add	r4, sp, #4
 801b3e4:	e793      	b.n	801b30e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b3e6:	ad01      	add	r5, sp, #4
 801b3e8:	e7a1      	b.n	801b32e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801b3ea:	ab01      	add	r3, sp, #4
 801b3ec:	461d      	mov	r5, r3
 801b3ee:	e7ab      	b.n	801b348 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801b3f0:	ab01      	add	r3, sp, #4
 801b3f2:	e7a9      	b.n	801b348 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801b3f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b3f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3f8:	b08f      	sub	sp, #60	; 0x3c
 801b3fa:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801b3fe:	920c      	str	r2, [sp, #48]	; 0x30
 801b400:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801b402:	910a      	str	r1, [sp, #40]	; 0x28
 801b404:	9306      	str	r3, [sp, #24]
 801b406:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801b40a:	900d      	str	r0, [sp, #52]	; 0x34
 801b40c:	6850      	ldr	r0, [r2, #4]
 801b40e:	6812      	ldr	r2, [r2, #0]
 801b410:	fb00 1303 	mla	r3, r0, r3, r1
 801b414:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b418:	9307      	str	r3, [sp, #28]
 801b41a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b41c:	681b      	ldr	r3, [r3, #0]
 801b41e:	9308      	str	r3, [sp, #32]
 801b420:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b422:	685c      	ldr	r4, [r3, #4]
 801b424:	3404      	adds	r4, #4
 801b426:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b428:	2b00      	cmp	r3, #0
 801b42a:	dc03      	bgt.n	801b434 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b42c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b42e:	2b00      	cmp	r3, #0
 801b430:	f340 81d6 	ble.w	801b7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b434:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b436:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b43a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b43e:	1e48      	subs	r0, r1, #1
 801b440:	1e56      	subs	r6, r2, #1
 801b442:	9b06      	ldr	r3, [sp, #24]
 801b444:	2b00      	cmp	r3, #0
 801b446:	f340 80b7 	ble.w	801b5b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b44a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b44e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b452:	d406      	bmi.n	801b462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b454:	4287      	cmp	r7, r0
 801b456:	da04      	bge.n	801b462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b458:	2b00      	cmp	r3, #0
 801b45a:	db02      	blt.n	801b462 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b45c:	42b3      	cmp	r3, r6
 801b45e:	f2c0 80ac 	blt.w	801b5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801b462:	3701      	adds	r7, #1
 801b464:	f100 809d 	bmi.w	801b5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b468:	42b9      	cmp	r1, r7
 801b46a:	f2c0 809a 	blt.w	801b5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b46e:	3301      	adds	r3, #1
 801b470:	f100 8097 	bmi.w	801b5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b474:	429a      	cmp	r2, r3
 801b476:	f2c0 8094 	blt.w	801b5a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b47a:	9b06      	ldr	r3, [sp, #24]
 801b47c:	930b      	str	r3, [sp, #44]	; 0x2c
 801b47e:	9b07      	ldr	r3, [sp, #28]
 801b480:	9309      	str	r3, [sp, #36]	; 0x24
 801b482:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b484:	2b00      	cmp	r3, #0
 801b486:	f340 80b5 	ble.w	801b5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b48a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b48c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b48e:	68c7      	ldr	r7, [r0, #12]
 801b490:	6892      	ldr	r2, [r2, #8]
 801b492:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b496:	ea4f 4625 	mov.w	r6, r5, asr #16
 801b49a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b49e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b4a2:	f100 80fb 	bmi.w	801b69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b4a6:	f102 3cff 	add.w	ip, r2, #4294967295
 801b4aa:	4560      	cmp	r0, ip
 801b4ac:	f280 80f6 	bge.w	801b69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b4b0:	2e00      	cmp	r6, #0
 801b4b2:	f2c0 80f3 	blt.w	801b69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b4b6:	f107 3cff 	add.w	ip, r7, #4294967295
 801b4ba:	4566      	cmp	r6, ip
 801b4bc:	f280 80ee 	bge.w	801b69c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b4c0:	b212      	sxth	r2, r2
 801b4c2:	fb06 0002 	mla	r0, r6, r2, r0
 801b4c6:	9e08      	ldr	r6, [sp, #32]
 801b4c8:	1837      	adds	r7, r6, r0
 801b4ca:	5c30      	ldrb	r0, [r6, r0]
 801b4cc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b4d0:	eb04 0c08 	add.w	ip, r4, r8
 801b4d4:	2b00      	cmp	r3, #0
 801b4d6:	f000 80d3 	beq.w	801b680 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b4da:	787e      	ldrb	r6, [r7, #1]
 801b4dc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b4e0:	4426      	add	r6, r4
 801b4e2:	2900      	cmp	r1, #0
 801b4e4:	f000 80d4 	beq.w	801b690 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801b4e8:	18b8      	adds	r0, r7, r2
 801b4ea:	5cba      	ldrb	r2, [r7, r2]
 801b4ec:	7840      	ldrb	r0, [r0, #1]
 801b4ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b4f2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b4f6:	4422      	add	r2, r4
 801b4f8:	4420      	add	r0, r4
 801b4fa:	b29b      	uxth	r3, r3
 801b4fc:	b289      	uxth	r1, r1
 801b4fe:	fb03 f901 	mul.w	r9, r3, r1
 801b502:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b506:	011b      	lsls	r3, r3, #4
 801b508:	b289      	uxth	r1, r1
 801b50a:	78b7      	ldrb	r7, [r6, #2]
 801b50c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b510:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b514:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b518:	eba3 0309 	sub.w	r3, r3, r9
 801b51c:	b29b      	uxth	r3, r3
 801b51e:	ebae 0e01 	sub.w	lr, lr, r1
 801b522:	fa1f fe8e 	uxth.w	lr, lr
 801b526:	435f      	muls	r7, r3
 801b528:	fb0e 770a 	mla	r7, lr, sl, r7
 801b52c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b530:	fb01 770a 	mla	r7, r1, sl, r7
 801b534:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b538:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b53c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b540:	f896 8000 	ldrb.w	r8, [r6]
 801b544:	7876      	ldrb	r6, [r6, #1]
 801b546:	fb03 f808 	mul.w	r8, r3, r8
 801b54a:	fb0e 8807 	mla	r8, lr, r7, r8
 801b54e:	7817      	ldrb	r7, [r2, #0]
 801b550:	fb01 8807 	mla	r8, r1, r7, r8
 801b554:	7807      	ldrb	r7, [r0, #0]
 801b556:	fb09 8707 	mla	r7, r9, r7, r8
 801b55a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801b55e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b562:	ea47 070a 	orr.w	r7, r7, sl
 801b566:	4373      	muls	r3, r6
 801b568:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b56c:	fb0e 330c 	mla	r3, lr, ip, r3
 801b570:	fb01 310a 	mla	r1, r1, sl, r3
 801b574:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b578:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b57a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b57e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b582:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b586:	ea47 070a 	orr.w	r7, r7, sl
 801b58a:	801f      	strh	r7, [r3, #0]
 801b58c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b58e:	3302      	adds	r3, #2
 801b590:	9309      	str	r3, [sp, #36]	; 0x24
 801b592:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b594:	449b      	add	fp, r3
 801b596:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b598:	441d      	add	r5, r3
 801b59a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b59c:	3b01      	subs	r3, #1
 801b59e:	930b      	str	r3, [sp, #44]	; 0x2c
 801b5a0:	e76f      	b.n	801b482 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b5a2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b5a4:	449b      	add	fp, r3
 801b5a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b5a8:	441d      	add	r5, r3
 801b5aa:	9b06      	ldr	r3, [sp, #24]
 801b5ac:	3b01      	subs	r3, #1
 801b5ae:	9306      	str	r3, [sp, #24]
 801b5b0:	9b07      	ldr	r3, [sp, #28]
 801b5b2:	3302      	adds	r3, #2
 801b5b4:	9307      	str	r3, [sp, #28]
 801b5b6:	e744      	b.n	801b442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b5b8:	d023      	beq.n	801b602 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b5ba:	9b06      	ldr	r3, [sp, #24]
 801b5bc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801b5be:	3b01      	subs	r3, #1
 801b5c0:	fb00 b003 	mla	r0, r0, r3, fp
 801b5c4:	1400      	asrs	r0, r0, #16
 801b5c6:	f53f af58 	bmi.w	801b47a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b5ca:	3901      	subs	r1, #1
 801b5cc:	4288      	cmp	r0, r1
 801b5ce:	f6bf af54 	bge.w	801b47a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b5d2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801b5d4:	fb01 5303 	mla	r3, r1, r3, r5
 801b5d8:	141b      	asrs	r3, r3, #16
 801b5da:	f53f af4e 	bmi.w	801b47a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b5de:	3a01      	subs	r2, #1
 801b5e0:	4293      	cmp	r3, r2
 801b5e2:	f6bf af4a 	bge.w	801b47a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b5e6:	9b06      	ldr	r3, [sp, #24]
 801b5e8:	9309      	str	r3, [sp, #36]	; 0x24
 801b5ea:	9b07      	ldr	r3, [sp, #28]
 801b5ec:	930b      	str	r3, [sp, #44]	; 0x2c
 801b5ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b5f0:	2b00      	cmp	r3, #0
 801b5f2:	dc70      	bgt.n	801b6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b5f4:	9b06      	ldr	r3, [sp, #24]
 801b5f6:	9a07      	ldr	r2, [sp, #28]
 801b5f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b5fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b600:	9307      	str	r3, [sp, #28]
 801b602:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b604:	2b00      	cmp	r3, #0
 801b606:	f340 80eb 	ble.w	801b7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b60a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b60e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b612:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b616:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b618:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b61c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b620:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b624:	eef0 6a62 	vmov.f32	s13, s5
 801b628:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b62c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b630:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b634:	ee16 ba90 	vmov	fp, s13
 801b638:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b63c:	eef0 6a43 	vmov.f32	s13, s6
 801b640:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b644:	ee12 2a90 	vmov	r2, s5
 801b648:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b64c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b650:	ee13 2a10 	vmov	r2, s6
 801b654:	931b      	str	r3, [sp, #108]	; 0x6c
 801b656:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b658:	fb92 f3f3 	sdiv	r3, r2, r3
 801b65c:	931c      	str	r3, [sp, #112]	; 0x70
 801b65e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b660:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b662:	3b01      	subs	r3, #1
 801b664:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b668:	930a      	str	r3, [sp, #40]	; 0x28
 801b66a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b66c:	bf08      	it	eq
 801b66e:	4613      	moveq	r3, r2
 801b670:	ee16 5a90 	vmov	r5, s13
 801b674:	9306      	str	r3, [sp, #24]
 801b676:	eeb0 3a67 	vmov.f32	s6, s15
 801b67a:	eef0 2a47 	vmov.f32	s5, s14
 801b67e:	e6d2      	b.n	801b426 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b680:	b149      	cbz	r1, 801b696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b682:	5cba      	ldrb	r2, [r7, r2]
 801b684:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b688:	4422      	add	r2, r4
 801b68a:	4660      	mov	r0, ip
 801b68c:	4666      	mov	r6, ip
 801b68e:	e734      	b.n	801b4fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b690:	4660      	mov	r0, ip
 801b692:	4662      	mov	r2, ip
 801b694:	e731      	b.n	801b4fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b696:	4660      	mov	r0, ip
 801b698:	4662      	mov	r2, ip
 801b69a:	e7f7      	b.n	801b68c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801b69c:	f110 0c01 	adds.w	ip, r0, #1
 801b6a0:	f53f af74 	bmi.w	801b58c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6a4:	4562      	cmp	r2, ip
 801b6a6:	f6ff af71 	blt.w	801b58c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6aa:	f116 0c01 	adds.w	ip, r6, #1
 801b6ae:	f53f af6d 	bmi.w	801b58c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6b2:	4567      	cmp	r7, ip
 801b6b4:	f6ff af6a 	blt.w	801b58c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6b8:	b23f      	sxth	r7, r7
 801b6ba:	b212      	sxth	r2, r2
 801b6bc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b6c0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b6c4:	9200      	str	r2, [sp, #0]
 801b6c6:	9701      	str	r7, [sp, #4]
 801b6c8:	4623      	mov	r3, r4
 801b6ca:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b6ce:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b6d0:	f7ff fde6 	bl	801b2a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b6d4:	e75a      	b.n	801b58c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b6d6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b6d8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b6dc:	ea4f 462b 	mov.w	r6, fp, asr #16
 801b6e0:	1428      	asrs	r0, r5, #16
 801b6e2:	fb02 6000 	mla	r0, r2, r0, r6
 801b6e6:	9e08      	ldr	r6, [sp, #32]
 801b6e8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b6ec:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b6f0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b6f4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b6f8:	1837      	adds	r7, r6, r0
 801b6fa:	eb04 0c08 	add.w	ip, r4, r8
 801b6fe:	2b00      	cmp	r3, #0
 801b700:	d060      	beq.n	801b7c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801b702:	787e      	ldrb	r6, [r7, #1]
 801b704:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b708:	4426      	add	r6, r4
 801b70a:	2900      	cmp	r1, #0
 801b70c:	d062      	beq.n	801b7d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801b70e:	18b8      	adds	r0, r7, r2
 801b710:	5cba      	ldrb	r2, [r7, r2]
 801b712:	7840      	ldrb	r0, [r0, #1]
 801b714:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b718:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b71c:	4422      	add	r2, r4
 801b71e:	4420      	add	r0, r4
 801b720:	b29b      	uxth	r3, r3
 801b722:	b289      	uxth	r1, r1
 801b724:	fb03 f901 	mul.w	r9, r3, r1
 801b728:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b72c:	011b      	lsls	r3, r3, #4
 801b72e:	b289      	uxth	r1, r1
 801b730:	78b7      	ldrb	r7, [r6, #2]
 801b732:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b736:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b73a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b73e:	eba3 0309 	sub.w	r3, r3, r9
 801b742:	b29b      	uxth	r3, r3
 801b744:	ebae 0e01 	sub.w	lr, lr, r1
 801b748:	fa1f fe8e 	uxth.w	lr, lr
 801b74c:	435f      	muls	r7, r3
 801b74e:	fb0e 770a 	mla	r7, lr, sl, r7
 801b752:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b756:	fb01 770a 	mla	r7, r1, sl, r7
 801b75a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b75e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b762:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b766:	f896 8000 	ldrb.w	r8, [r6]
 801b76a:	7876      	ldrb	r6, [r6, #1]
 801b76c:	fb03 f808 	mul.w	r8, r3, r8
 801b770:	fb0e 8807 	mla	r8, lr, r7, r8
 801b774:	7817      	ldrb	r7, [r2, #0]
 801b776:	fb01 8807 	mla	r8, r1, r7, r8
 801b77a:	7807      	ldrb	r7, [r0, #0]
 801b77c:	fb09 8707 	mla	r7, r9, r7, r8
 801b780:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801b784:	4373      	muls	r3, r6
 801b786:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b78a:	7856      	ldrb	r6, [r2, #1]
 801b78c:	ea47 070a 	orr.w	r7, r7, sl
 801b790:	fb0e 330c 	mla	r3, lr, ip, r3
 801b794:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b798:	fb01 3306 	mla	r3, r1, r6, r3
 801b79c:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b7a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b7a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b7a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b7aa:	ea47 070a 	orr.w	r7, r7, sl
 801b7ae:	f823 7b02 	strh.w	r7, [r3], #2
 801b7b2:	930b      	str	r3, [sp, #44]	; 0x2c
 801b7b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b7b6:	449b      	add	fp, r3
 801b7b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b7ba:	441d      	add	r5, r3
 801b7bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b7be:	3b01      	subs	r3, #1
 801b7c0:	9309      	str	r3, [sp, #36]	; 0x24
 801b7c2:	e714      	b.n	801b5ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b7c4:	b149      	cbz	r1, 801b7da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b7c6:	5cba      	ldrb	r2, [r7, r2]
 801b7c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b7cc:	4422      	add	r2, r4
 801b7ce:	4660      	mov	r0, ip
 801b7d0:	4666      	mov	r6, ip
 801b7d2:	e7a5      	b.n	801b720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b7d4:	4660      	mov	r0, ip
 801b7d6:	4662      	mov	r2, ip
 801b7d8:	e7a2      	b.n	801b720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b7da:	4660      	mov	r0, ip
 801b7dc:	4662      	mov	r2, ip
 801b7de:	e7f7      	b.n	801b7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801b7e0:	b00f      	add	sp, #60	; 0x3c
 801b7e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b7e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b7e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7ea:	b085      	sub	sp, #20
 801b7ec:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801b7f0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801b7f4:	9102      	str	r1, [sp, #8]
 801b7f6:	2c00      	cmp	r4, #0
 801b7f8:	fb04 710c 	mla	r1, r4, ip, r7
 801b7fc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801b800:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801b804:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801b808:	eb02 0e01 	add.w	lr, r2, r1
 801b80c:	f2c0 8122 	blt.w	801ba54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b810:	45a0      	cmp	r8, r4
 801b812:	f340 811f 	ble.w	801ba54 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b816:	2f00      	cmp	r7, #0
 801b818:	f2c0 811a 	blt.w	801ba50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b81c:	45bc      	cmp	ip, r7
 801b81e:	f340 8117 	ble.w	801ba50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b822:	5c52      	ldrb	r2, [r2, r1]
 801b824:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b828:	1c7a      	adds	r2, r7, #1
 801b82a:	f100 8116 	bmi.w	801ba5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b82e:	4594      	cmp	ip, r2
 801b830:	f340 8113 	ble.w	801ba5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b834:	2e00      	cmp	r6, #0
 801b836:	f000 8112 	beq.w	801ba5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b83a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b83e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b842:	3401      	adds	r4, #1
 801b844:	f100 810f 	bmi.w	801ba66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b848:	45a0      	cmp	r8, r4
 801b84a:	f340 810c 	ble.w	801ba66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b84e:	2800      	cmp	r0, #0
 801b850:	f000 810c 	beq.w	801ba6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b854:	2f00      	cmp	r7, #0
 801b856:	f2c0 8104 	blt.w	801ba62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b85a:	45bc      	cmp	ip, r7
 801b85c:	f340 8101 	ble.w	801ba62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b860:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b864:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b868:	3701      	adds	r7, #1
 801b86a:	f100 8102 	bmi.w	801ba72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b86e:	45bc      	cmp	ip, r7
 801b870:	f340 80ff 	ble.w	801ba72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b874:	2e00      	cmp	r6, #0
 801b876:	f000 80fe 	beq.w	801ba76 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b87a:	44f4      	add	ip, lr
 801b87c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b880:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b884:	b2b6      	uxth	r6, r6
 801b886:	b280      	uxth	r0, r0
 801b888:	fb00 fe06 	mul.w	lr, r0, r6
 801b88c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b890:	0136      	lsls	r6, r6, #4
 801b892:	eba6 070e 	sub.w	r7, r6, lr
 801b896:	b280      	uxth	r0, r0
 801b898:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801b89c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b8a0:	b2bf      	uxth	r7, r7
 801b8a2:	1a1b      	subs	r3, r3, r0
 801b8a4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b8a8:	b29b      	uxth	r3, r3
 801b8aa:	fb0a f607 	mul.w	r6, sl, r7
 801b8ae:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b8b2:	fb0b 6603 	mla	r6, fp, r3, r6
 801b8b6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b8ba:	fb00 6609 	mla	r6, r0, r9, r6
 801b8be:	fb0e 6608 	mla	r6, lr, r8, r6
 801b8c2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b8c6:	9600      	str	r6, [sp, #0]
 801b8c8:	2e00      	cmp	r6, #0
 801b8ca:	f000 80be 	beq.w	801ba4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b8ce:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b8d2:	fb0b fc0c 	mul.w	ip, fp, ip
 801b8d6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801b8da:	fb0b f505 	mul.w	r5, fp, r5
 801b8de:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b8e2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801b8e6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b8ea:	44dc      	add	ip, fp
 801b8ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8f0:	9501      	str	r5, [sp, #4]
 801b8f2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801b8f6:	9503      	str	r5, [sp, #12]
 801b8f8:	9d01      	ldr	r5, [sp, #4]
 801b8fa:	9e02      	ldr	r6, [sp, #8]
 801b8fc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801b900:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b904:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801b908:	fb0a fc0c 	mul.w	ip, sl, ip
 801b90c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b910:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b914:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b918:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b91c:	4465      	add	r5, ip
 801b91e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b922:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b926:	fb09 fc0c 	mul.w	ip, r9, ip
 801b92a:	fb09 f904 	mul.w	r9, r9, r4
 801b92e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801b932:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b936:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801b93a:	fb08 f404 	mul.w	r4, r8, r4
 801b93e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b942:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b946:	fb08 f802 	mul.w	r8, r8, r2
 801b94a:	fb0a fa01 	mul.w	sl, sl, r1
 801b94e:	0a22      	lsrs	r2, r4, #8
 801b950:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801b954:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b958:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801b95c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b960:	4414      	add	r4, r2
 801b962:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b966:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801b96a:	0a2d      	lsrs	r5, r5, #8
 801b96c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b970:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b974:	9a03      	ldr	r2, [sp, #12]
 801b976:	8836      	ldrh	r6, [r6, #0]
 801b978:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b97c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b980:	437d      	muls	r5, r7
 801b982:	4461      	add	r1, ip
 801b984:	0a24      	lsrs	r4, r4, #8
 801b986:	fb02 5503 	mla	r5, r2, r3, r5
 801b98a:	0a09      	lsrs	r1, r1, #8
 801b98c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b990:	fb04 540e 	mla	r4, r4, lr, r5
 801b994:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b998:	fb01 4100 	mla	r1, r1, r0, r4
 801b99c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9a0:	0a09      	lsrs	r1, r1, #8
 801b9a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9a6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801b9aa:	fb07 f70a 	mul.w	r7, r7, sl
 801b9ae:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b9b2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801b9b6:	fb03 7101 	mla	r1, r3, r1, r7
 801b9ba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b9be:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b9c2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b9c6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801b9ca:	fb00 e101 	mla	r1, r0, r1, lr
 801b9ce:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801b9d2:	9a00      	ldr	r2, [sp, #0]
 801b9d4:	b287      	uxth	r7, r0
 801b9d6:	437a      	muls	r2, r7
 801b9d8:	0a09      	lsrs	r1, r1, #8
 801b9da:	1c53      	adds	r3, r2, #1
 801b9dc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b9e0:	4321      	orrs	r1, r4
 801b9e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b9e6:	1235      	asrs	r5, r6, #8
 801b9e8:	0c0a      	lsrs	r2, r1, #16
 801b9ea:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b9ee:	b2db      	uxtb	r3, r3
 801b9f0:	fb12 f207 	smulbb	r2, r2, r7
 801b9f4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b9f8:	fb05 2503 	mla	r5, r5, r3, r2
 801b9fc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ba00:	10f2      	asrs	r2, r6, #3
 801ba02:	b2c8      	uxtb	r0, r1
 801ba04:	00f6      	lsls	r6, r6, #3
 801ba06:	fb14 f407 	smulbb	r4, r4, r7
 801ba0a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ba0e:	b2f6      	uxtb	r6, r6
 801ba10:	fb10 f007 	smulbb	r0, r0, r7
 801ba14:	fb02 4203 	mla	r2, r2, r3, r4
 801ba18:	b2ad      	uxth	r5, r5
 801ba1a:	fb06 0303 	mla	r3, r6, r3, r0
 801ba1e:	b299      	uxth	r1, r3
 801ba20:	b294      	uxth	r4, r2
 801ba22:	1c6b      	adds	r3, r5, #1
 801ba24:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ba28:	1c62      	adds	r2, r4, #1
 801ba2a:	1c4b      	adds	r3, r1, #1
 801ba2c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ba30:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ba34:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ba38:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ba3c:	0952      	lsrs	r2, r2, #5
 801ba3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ba42:	432b      	orrs	r3, r5
 801ba44:	4313      	orrs	r3, r2
 801ba46:	9a02      	ldr	r2, [sp, #8]
 801ba48:	8013      	strh	r3, [r2, #0]
 801ba4a:	b005      	add	sp, #20
 801ba4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba50:	2500      	movs	r5, #0
 801ba52:	e6e9      	b.n	801b828 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ba54:	2100      	movs	r1, #0
 801ba56:	460d      	mov	r5, r1
 801ba58:	e6f3      	b.n	801b842 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ba5a:	2100      	movs	r1, #0
 801ba5c:	e6f1      	b.n	801b842 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ba5e:	4631      	mov	r1, r6
 801ba60:	e6ef      	b.n	801b842 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ba62:	2400      	movs	r4, #0
 801ba64:	e700      	b.n	801b868 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ba66:	2200      	movs	r2, #0
 801ba68:	4614      	mov	r4, r2
 801ba6a:	e70b      	b.n	801b884 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ba6c:	4602      	mov	r2, r0
 801ba6e:	4604      	mov	r4, r0
 801ba70:	e708      	b.n	801b884 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ba72:	2200      	movs	r2, #0
 801ba74:	e706      	b.n	801b884 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ba76:	4632      	mov	r2, r6
 801ba78:	e704      	b.n	801b884 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ba7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ba7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba7e:	b09f      	sub	sp, #124	; 0x7c
 801ba80:	921b      	str	r2, [sp, #108]	; 0x6c
 801ba82:	9309      	str	r3, [sp, #36]	; 0x24
 801ba84:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ba86:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ba8a:	931c      	str	r3, [sp, #112]	; 0x70
 801ba8c:	9119      	str	r1, [sp, #100]	; 0x64
 801ba8e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ba92:	901d      	str	r0, [sp, #116]	; 0x74
 801ba94:	6850      	ldr	r0, [r2, #4]
 801ba96:	6812      	ldr	r2, [r2, #0]
 801ba98:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ba9a:	fb00 1303 	mla	r3, r0, r3, r1
 801ba9e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801baa2:	930c      	str	r3, [sp, #48]	; 0x30
 801baa4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801baa6:	681b      	ldr	r3, [r3, #0]
 801baa8:	9312      	str	r3, [sp, #72]	; 0x48
 801baaa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801baac:	685e      	ldr	r6, [r3, #4]
 801baae:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801bab2:	930d      	str	r3, [sp, #52]	; 0x34
 801bab4:	3604      	adds	r6, #4
 801bab6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801bab8:	2b00      	cmp	r3, #0
 801baba:	dc03      	bgt.n	801bac4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801babc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801babe:	2b00      	cmp	r3, #0
 801bac0:	f340 8388 	ble.w	801c1d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801bac4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bac6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801baca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bace:	1e48      	subs	r0, r1, #1
 801bad0:	1e57      	subs	r7, r2, #1
 801bad2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bad4:	2b00      	cmp	r3, #0
 801bad6:	f340 8195 	ble.w	801be04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801bada:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801badc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bae0:	ea4f 4325 	mov.w	r3, r5, asr #16
 801bae4:	d406      	bmi.n	801baf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801bae6:	4584      	cmp	ip, r0
 801bae8:	da04      	bge.n	801baf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801baea:	2b00      	cmp	r3, #0
 801baec:	db02      	blt.n	801baf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801baee:	42bb      	cmp	r3, r7
 801baf0:	f2c0 8189 	blt.w	801be06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801baf4:	f11c 0c01 	adds.w	ip, ip, #1
 801baf8:	f100 8177 	bmi.w	801bdea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bafc:	4561      	cmp	r1, ip
 801bafe:	f2c0 8174 	blt.w	801bdea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bb02:	3301      	adds	r3, #1
 801bb04:	f100 8171 	bmi.w	801bdea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bb08:	429a      	cmp	r2, r3
 801bb0a:	f2c0 816e 	blt.w	801bdea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801bb0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb10:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bb12:	931a      	str	r3, [sp, #104]	; 0x68
 801bb14:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801bb16:	2b00      	cmp	r3, #0
 801bb18:	f340 8193 	ble.w	801be42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801bb1c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bb1e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb22:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bb24:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801bb28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bb2a:	141b      	asrs	r3, r3, #16
 801bb2c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801bb30:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801bb34:	f100 81d6 	bmi.w	801bee4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801bb38:	f100 38ff 	add.w	r8, r0, #4294967295
 801bb3c:	4543      	cmp	r3, r8
 801bb3e:	f280 81d1 	bge.w	801bee4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801bb42:	f1bc 0f00 	cmp.w	ip, #0
 801bb46:	f2c0 81cd 	blt.w	801bee4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801bb4a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bb4e:	45c4      	cmp	ip, r8
 801bb50:	f280 81c8 	bge.w	801bee4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801bb54:	b200      	sxth	r0, r0
 801bb56:	fb0c 3300 	mla	r3, ip, r0, r3
 801bb5a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bb5c:	eb04 0803 	add.w	r8, r4, r3
 801bb60:	5ce3      	ldrb	r3, [r4, r3]
 801bb62:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bb66:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801bb6a:	2a00      	cmp	r2, #0
 801bb6c:	f000 81af 	beq.w	801bece <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bb70:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bb74:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801bb78:	940e      	str	r4, [sp, #56]	; 0x38
 801bb7a:	0e24      	lsrs	r4, r4, #24
 801bb7c:	9415      	str	r4, [sp, #84]	; 0x54
 801bb7e:	b179      	cbz	r1, 801bba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bb80:	eb08 0c00 	add.w	ip, r8, r0
 801bb84:	f818 0000 	ldrb.w	r0, [r8, r0]
 801bb88:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bb8c:	900a      	str	r0, [sp, #40]	; 0x28
 801bb8e:	0e00      	lsrs	r0, r0, #24
 801bb90:	9013      	str	r0, [sp, #76]	; 0x4c
 801bb92:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801bb96:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bb9a:	900f      	str	r0, [sp, #60]	; 0x3c
 801bb9c:	0e00      	lsrs	r0, r0, #24
 801bb9e:	9016      	str	r0, [sp, #88]	; 0x58
 801bba0:	b292      	uxth	r2, r2
 801bba2:	b289      	uxth	r1, r1
 801bba4:	fb02 f901 	mul.w	r9, r2, r1
 801bba8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bbac:	0112      	lsls	r2, r2, #4
 801bbae:	eba2 0809 	sub.w	r8, r2, r9
 801bbb2:	b289      	uxth	r1, r1
 801bbb4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801bbb8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bbba:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bbbc:	fa1f f888 	uxth.w	r8, r8
 801bbc0:	1a52      	subs	r2, r2, r1
 801bbc2:	b292      	uxth	r2, r2
 801bbc4:	fb08 f000 	mul.w	r0, r8, r0
 801bbc8:	fb02 000e 	mla	r0, r2, lr, r0
 801bbcc:	fb01 0004 	mla	r0, r1, r4, r0
 801bbd0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bbd2:	fb09 0004 	mla	r0, r9, r4, r0
 801bbd6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801bbda:	2800      	cmp	r0, #0
 801bbdc:	f000 80fa 	beq.w	801bdd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bbe0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801bbe4:	d01b      	beq.n	801bc1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801bbe6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bbea:	fb0e fa0a 	mul.w	sl, lr, sl
 801bbee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bbf2:	fb0e fe03 	mul.w	lr, lr, r3
 801bbf6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bbfa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bbfe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bc02:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801bc06:	4453      	add	r3, sl
 801bc08:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bc0c:	0a1b      	lsrs	r3, r3, #8
 801bc0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc12:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bc16:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bc1a:	ea43 030c 	orr.w	r3, r3, ip
 801bc1e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc20:	2cff      	cmp	r4, #255	; 0xff
 801bc22:	d021      	beq.n	801bc68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801bc24:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc26:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bc2a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc2c:	fb04 fb0b 	mul.w	fp, r4, fp
 801bc30:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc32:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc36:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bc3c:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc44:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bc48:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bc4c:	44de      	add	lr, fp
 801bc4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bc52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bc56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc62:	ea4e 040a 	orr.w	r4, lr, sl
 801bc66:	940e      	str	r4, [sp, #56]	; 0x38
 801bc68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bc6a:	2cff      	cmp	r4, #255	; 0xff
 801bc6c:	d021      	beq.n	801bcb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801bc6e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bc70:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bc74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bc76:	fb04 fb0b 	mul.w	fp, r4, fp
 801bc7a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bc7c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc80:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bc82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bc86:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc8e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bc92:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bc96:	44de      	add	lr, fp
 801bc98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bc9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bca0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bca4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bca8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bcac:	ea4e 040a 	orr.w	r4, lr, sl
 801bcb0:	940a      	str	r4, [sp, #40]	; 0x28
 801bcb2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bcb4:	2cff      	cmp	r4, #255	; 0xff
 801bcb6:	d021      	beq.n	801bcfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801bcb8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bcba:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bcbe:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bcc0:	fb04 fb0b 	mul.w	fp, r4, fp
 801bcc4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bcc6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bcca:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801bccc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bcd0:	fb04 fa0a 	mul.w	sl, r4, sl
 801bcd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bcd8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bcdc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bce0:	44de      	add	lr, fp
 801bce2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bce6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bcea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bcf2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bcf6:	ea4e 040a 	orr.w	r4, lr, sl
 801bcfa:	940f      	str	r4, [sp, #60]	; 0x3c
 801bcfc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bcfe:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bd02:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801bd04:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801bd08:	fb08 fc0c 	mul.w	ip, r8, ip
 801bd0c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bd10:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bd14:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bd16:	fb01 cc0e 	mla	ip, r1, lr, ip
 801bd1a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bd1e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bd20:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bd24:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801bd28:	fb08 f80e 	mul.w	r8, r8, lr
 801bd2c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bd30:	fb02 8303 	mla	r3, r2, r3, r8
 801bd34:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bd36:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bd38:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801bd3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bd3e:	fb01 330a 	mla	r3, r1, sl, r3
 801bd42:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801bd46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bd48:	fb09 3901 	mla	r9, r9, r1, r3
 801bd4c:	4342      	muls	r2, r0
 801bd4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd52:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bd56:	883b      	ldrh	r3, [r7, #0]
 801bd58:	1c50      	adds	r0, r2, #1
 801bd5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd5e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801bd62:	ea4c 0c09 	orr.w	ip, ip, r9
 801bd66:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801bd6a:	1219      	asrs	r1, r3, #8
 801bd6c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801bd70:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801bd74:	b2c0      	uxtb	r0, r0
 801bd76:	fb12 f204 	smulbb	r2, r2, r4
 801bd7a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801bd7e:	fb01 2100 	mla	r1, r1, r0, r2
 801bd82:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801bd86:	10da      	asrs	r2, r3, #3
 801bd88:	fa5f fc8c 	uxtb.w	ip, ip
 801bd8c:	00db      	lsls	r3, r3, #3
 801bd8e:	fb1c fc04 	smulbb	ip, ip, r4
 801bd92:	b2db      	uxtb	r3, r3
 801bd94:	b289      	uxth	r1, r1
 801bd96:	fb03 c300 	mla	r3, r3, r0, ip
 801bd9a:	fa1f fc83 	uxth.w	ip, r3
 801bd9e:	1c4b      	adds	r3, r1, #1
 801bda0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801bda4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bda8:	fb1e fe04 	smulbb	lr, lr, r4
 801bdac:	f10c 0301 	add.w	r3, ip, #1
 801bdb0:	fb02 e200 	mla	r2, r2, r0, lr
 801bdb4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801bdb8:	b292      	uxth	r2, r2
 801bdba:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801bdbe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bdc2:	430b      	orrs	r3, r1
 801bdc4:	1c51      	adds	r1, r2, #1
 801bdc6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bdca:	0952      	lsrs	r2, r2, #5
 801bdcc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bdd0:	4313      	orrs	r3, r2
 801bdd2:	803b      	strh	r3, [r7, #0]
 801bdd4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bdd6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801bdd8:	441a      	add	r2, r3
 801bdda:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bddc:	9229      	str	r2, [sp, #164]	; 0xa4
 801bdde:	441d      	add	r5, r3
 801bde0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801bde2:	3b01      	subs	r3, #1
 801bde4:	3702      	adds	r7, #2
 801bde6:	931a      	str	r3, [sp, #104]	; 0x68
 801bde8:	e694      	b.n	801bb14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801bdea:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bdec:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801bdee:	441c      	add	r4, r3
 801bdf0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bdf2:	9429      	str	r4, [sp, #164]	; 0xa4
 801bdf4:	441d      	add	r5, r3
 801bdf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bdf8:	3b01      	subs	r3, #1
 801bdfa:	9309      	str	r3, [sp, #36]	; 0x24
 801bdfc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bdfe:	3302      	adds	r3, #2
 801be00:	930c      	str	r3, [sp, #48]	; 0x30
 801be02:	e666      	b.n	801bad2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801be04:	d024      	beq.n	801be50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801be06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be08:	982b      	ldr	r0, [sp, #172]	; 0xac
 801be0a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801be0c:	3b01      	subs	r3, #1
 801be0e:	fb00 4003 	mla	r0, r0, r3, r4
 801be12:	1400      	asrs	r0, r0, #16
 801be14:	f53f ae7b 	bmi.w	801bb0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801be18:	3901      	subs	r1, #1
 801be1a:	4288      	cmp	r0, r1
 801be1c:	f6bf ae77 	bge.w	801bb0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801be20:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801be22:	fb01 5303 	mla	r3, r1, r3, r5
 801be26:	141b      	asrs	r3, r3, #16
 801be28:	f53f ae71 	bmi.w	801bb0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801be2c:	3a01      	subs	r2, #1
 801be2e:	4293      	cmp	r3, r2
 801be30:	f6bf ae6d 	bge.w	801bb0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801be34:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801be38:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801be3c:	f1bb 0f00 	cmp.w	fp, #0
 801be40:	dc70      	bgt.n	801bf24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801be42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be44:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801be48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801be4a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801be4e:	930c      	str	r3, [sp, #48]	; 0x30
 801be50:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801be52:	2b00      	cmp	r3, #0
 801be54:	f340 81be 	ble.w	801c1d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801be58:	ee30 0a04 	vadd.f32	s0, s0, s8
 801be5c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801be60:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801be64:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be66:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801be6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801be6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801be72:	eef0 6a62 	vmov.f32	s13, s5
 801be76:	ee61 7a27 	vmul.f32	s15, s2, s15
 801be7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801be7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801be82:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801be86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801be8a:	eef0 6a43 	vmov.f32	s13, s6
 801be8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801be92:	ee12 2a90 	vmov	r2, s5
 801be96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801be9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801be9e:	ee13 2a10 	vmov	r2, s6
 801bea2:	932b      	str	r3, [sp, #172]	; 0xac
 801bea4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bea6:	fb92 f3f3 	sdiv	r3, r2, r3
 801beaa:	932c      	str	r3, [sp, #176]	; 0xb0
 801beac:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801beae:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801beb0:	3b01      	subs	r3, #1
 801beb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801beb6:	9319      	str	r3, [sp, #100]	; 0x64
 801beb8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801beba:	bf08      	it	eq
 801bebc:	4613      	moveq	r3, r2
 801bebe:	ee16 5a90 	vmov	r5, s13
 801bec2:	9309      	str	r3, [sp, #36]	; 0x24
 801bec4:	eeb0 3a67 	vmov.f32	s6, s15
 801bec8:	eef0 2a47 	vmov.f32	s5, s14
 801becc:	e5f3      	b.n	801bab6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bece:	2900      	cmp	r1, #0
 801bed0:	f43f ae66 	beq.w	801bba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bed4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801bed8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bedc:	900a      	str	r0, [sp, #40]	; 0x28
 801bede:	0e00      	lsrs	r0, r0, #24
 801bee0:	9013      	str	r0, [sp, #76]	; 0x4c
 801bee2:	e65d      	b.n	801bba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bee4:	f113 0801 	adds.w	r8, r3, #1
 801bee8:	f53f af74 	bmi.w	801bdd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801beec:	4540      	cmp	r0, r8
 801beee:	f6ff af71 	blt.w	801bdd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bef2:	f11c 0801 	adds.w	r8, ip, #1
 801bef6:	f53f af6d 	bmi.w	801bdd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801befa:	45c6      	cmp	lr, r8
 801befc:	f6ff af6a 	blt.w	801bdd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bf00:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801bf02:	9302      	str	r3, [sp, #8]
 801bf04:	b200      	sxth	r0, r0
 801bf06:	fa0f f38e 	sxth.w	r3, lr
 801bf0a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801bf0e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801bf12:	9301      	str	r3, [sp, #4]
 801bf14:	9000      	str	r0, [sp, #0]
 801bf16:	4633      	mov	r3, r6
 801bf18:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bf1a:	981d      	ldr	r0, [sp, #116]	; 0x74
 801bf1c:	4639      	mov	r1, r7
 801bf1e:	f7ff fc62 	bl	801b7e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801bf22:	e757      	b.n	801bdd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bf24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bf26:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801bf28:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bf2c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bf2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bf32:	1427      	asrs	r7, r4, #16
 801bf34:	142b      	asrs	r3, r5, #16
 801bf36:	fb01 7303 	mla	r3, r1, r3, r7
 801bf3a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bf3c:	18e7      	adds	r7, r4, r3
 801bf3e:	5ce3      	ldrb	r3, [r4, r3]
 801bf40:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bf44:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bf48:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bf4c:	2a00      	cmp	r2, #0
 801bf4e:	f000 8137 	beq.w	801c1c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bf52:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bf56:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bf5a:	9410      	str	r4, [sp, #64]	; 0x40
 801bf5c:	0e24      	lsrs	r4, r4, #24
 801bf5e:	9417      	str	r4, [sp, #92]	; 0x5c
 801bf60:	b170      	cbz	r0, 801bf80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bf62:	eb07 0e01 	add.w	lr, r7, r1
 801bf66:	5c79      	ldrb	r1, [r7, r1]
 801bf68:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bf6c:	910b      	str	r1, [sp, #44]	; 0x2c
 801bf6e:	0e09      	lsrs	r1, r1, #24
 801bf70:	9114      	str	r1, [sp, #80]	; 0x50
 801bf72:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bf76:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bf7a:	9111      	str	r1, [sp, #68]	; 0x44
 801bf7c:	0e09      	lsrs	r1, r1, #24
 801bf7e:	9118      	str	r1, [sp, #96]	; 0x60
 801bf80:	b292      	uxth	r2, r2
 801bf82:	b280      	uxth	r0, r0
 801bf84:	fb02 f800 	mul.w	r8, r2, r0
 801bf88:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bf8c:	0112      	lsls	r2, r2, #4
 801bf8e:	eba2 0e08 	sub.w	lr, r2, r8
 801bf92:	b280      	uxth	r0, r0
 801bf94:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801bf98:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801bf9a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bf9c:	fa1f fe8e 	uxth.w	lr, lr
 801bfa0:	1a12      	subs	r2, r2, r0
 801bfa2:	b292      	uxth	r2, r2
 801bfa4:	fb0e f101 	mul.w	r1, lr, r1
 801bfa8:	fb02 110c 	mla	r1, r2, ip, r1
 801bfac:	fb00 1104 	mla	r1, r0, r4, r1
 801bfb0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801bfb2:	fb08 1104 	mla	r1, r8, r4, r1
 801bfb6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bfba:	2900      	cmp	r1, #0
 801bfbc:	f000 80f5 	beq.w	801c1aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801bfc0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bfc4:	d019      	beq.n	801bffa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801bfc6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bfca:	fb0c fa0a 	mul.w	sl, ip, sl
 801bfce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bfd2:	fb0c fc03 	mul.w	ip, ip, r3
 801bfd6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bfda:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bfde:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bfe2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bfe6:	4453      	add	r3, sl
 801bfe8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bfec:	0a1b      	lsrs	r3, r3, #8
 801bfee:	0a3f      	lsrs	r7, r7, #8
 801bff0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bff4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bff8:	433b      	orrs	r3, r7
 801bffa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801bffc:	2cff      	cmp	r4, #255	; 0xff
 801bffe:	d020      	beq.n	801c042 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801c000:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c002:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c006:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c008:	4367      	muls	r7, r4
 801c00a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c00c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c010:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801c012:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c016:	fb04 fa0a 	mul.w	sl, r4, sl
 801c01a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c01e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c022:	44bc      	add	ip, r7
 801c024:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c028:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c02c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c030:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c034:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c038:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c03c:	ea4c 040a 	orr.w	r4, ip, sl
 801c040:	9410      	str	r4, [sp, #64]	; 0x40
 801c042:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c044:	2cff      	cmp	r4, #255	; 0xff
 801c046:	d020      	beq.n	801c08a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801c048:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c04a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c04e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c050:	4367      	muls	r7, r4
 801c052:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c054:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c058:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c05a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c05e:	fb04 fa0a 	mul.w	sl, r4, sl
 801c062:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c066:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c06a:	44bc      	add	ip, r7
 801c06c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c070:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c074:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c078:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c07c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c080:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c084:	ea4c 040a 	orr.w	r4, ip, sl
 801c088:	940b      	str	r4, [sp, #44]	; 0x2c
 801c08a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c08c:	2cff      	cmp	r4, #255	; 0xff
 801c08e:	d020      	beq.n	801c0d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801c090:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c092:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c096:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c098:	4367      	muls	r7, r4
 801c09a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c09c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c0a0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801c0a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c0a6:	fb04 fa0a 	mul.w	sl, r4, sl
 801c0aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c0ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c0b2:	44bc      	add	ip, r7
 801c0b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c0b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c0bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c0c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c0c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c0c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c0cc:	ea4c 040a 	orr.w	r4, ip, sl
 801c0d0:	9411      	str	r4, [sp, #68]	; 0x44
 801c0d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c0d4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c0d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c0da:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c0de:	fb0e f707 	mul.w	r7, lr, r7
 801c0e2:	fb02 770c 	mla	r7, r2, ip, r7
 801c0e6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c0ea:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c0ec:	fb00 770c 	mla	r7, r0, ip, r7
 801c0f0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c0f4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c0f6:	fb08 770c 	mla	r7, r8, ip, r7
 801c0fa:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801c0fe:	fb0e fe0c 	mul.w	lr, lr, ip
 801c102:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c106:	fb02 e303 	mla	r3, r2, r3, lr
 801c10a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c10c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c10e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c112:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c114:	fb00 330a 	mla	r3, r0, sl, r3
 801c118:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801c11c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c120:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c122:	f8b9 0000 	ldrh.w	r0, [r9]
 801c126:	434b      	muls	r3, r1
 801c128:	0a3f      	lsrs	r7, r7, #8
 801c12a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c12e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c132:	1c59      	adds	r1, r3, #1
 801c134:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c138:	ea47 070c 	orr.w	r7, r7, ip
 801c13c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c140:	1202      	asrs	r2, r0, #8
 801c142:	0c3b      	lsrs	r3, r7, #16
 801c144:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c148:	b2c9      	uxtb	r1, r1
 801c14a:	fb13 f304 	smulbb	r3, r3, r4
 801c14e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c152:	fb02 3201 	mla	r2, r2, r1, r3
 801c156:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c15a:	10c3      	asrs	r3, r0, #3
 801c15c:	b2ff      	uxtb	r7, r7
 801c15e:	00c0      	lsls	r0, r0, #3
 801c160:	b292      	uxth	r2, r2
 801c162:	fb1c fc04 	smulbb	ip, ip, r4
 801c166:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c16a:	b2c0      	uxtb	r0, r0
 801c16c:	fb17 f704 	smulbb	r7, r7, r4
 801c170:	fb03 c301 	mla	r3, r3, r1, ip
 801c174:	fb00 7001 	mla	r0, r0, r1, r7
 801c178:	f102 0c01 	add.w	ip, r2, #1
 801c17c:	b280      	uxth	r0, r0
 801c17e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801c182:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801c186:	1c42      	adds	r2, r0, #1
 801c188:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801c18c:	b29b      	uxth	r3, r3
 801c18e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c192:	ea42 020c 	orr.w	r2, r2, ip
 801c196:	f103 0c01 	add.w	ip, r3, #1
 801c19a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c19e:	095b      	lsrs	r3, r3, #5
 801c1a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c1a4:	431a      	orrs	r2, r3
 801c1a6:	f8a9 2000 	strh.w	r2, [r9]
 801c1aa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801c1ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c1ae:	441a      	add	r2, r3
 801c1b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c1b2:	9229      	str	r2, [sp, #164]	; 0xa4
 801c1b4:	f109 0902 	add.w	r9, r9, #2
 801c1b8:	441d      	add	r5, r3
 801c1ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c1be:	e63d      	b.n	801be3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801c1c0:	2800      	cmp	r0, #0
 801c1c2:	f43f aedd 	beq.w	801bf80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c1c6:	5c79      	ldrb	r1, [r7, r1]
 801c1c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c1cc:	910b      	str	r1, [sp, #44]	; 0x2c
 801c1ce:	0e09      	lsrs	r1, r1, #24
 801c1d0:	9114      	str	r1, [sp, #80]	; 0x50
 801c1d2:	e6d5      	b.n	801bf80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801c1d4:	b01f      	add	sp, #124	; 0x7c
 801c1d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c1da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801c1da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c1de:	b089      	sub	sp, #36	; 0x24
 801c1e0:	9101      	str	r1, [sp, #4]
 801c1e2:	9801      	ldr	r0, [sp, #4]
 801c1e4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801c1e8:	8800      	ldrh	r0, [r0, #0]
 801c1ea:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801c1ee:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801c1f2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801c1f6:	1206      	asrs	r6, r0, #8
 801c1f8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801c1fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c200:	9602      	str	r6, [sp, #8]
 801c202:	10c6      	asrs	r6, r0, #3
 801c204:	00c0      	lsls	r0, r0, #3
 801c206:	b2c0      	uxtb	r0, r0
 801c208:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c20c:	9004      	str	r0, [sp, #16]
 801c20e:	2f00      	cmp	r7, #0
 801c210:	fb07 100c 	mla	r0, r7, ip, r1
 801c214:	9603      	str	r6, [sp, #12]
 801c216:	eb02 0e00 	add.w	lr, r2, r0
 801c21a:	f2c0 810a 	blt.w	801c432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c21e:	45b8      	cmp	r8, r7
 801c220:	f340 8107 	ble.w	801c432 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801c224:	2900      	cmp	r1, #0
 801c226:	f2c0 8102 	blt.w	801c42e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c22a:	458c      	cmp	ip, r1
 801c22c:	f340 80ff 	ble.w	801c42e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801c230:	5c12      	ldrb	r2, [r2, r0]
 801c232:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801c236:	1c4a      	adds	r2, r1, #1
 801c238:	f100 80fe 	bmi.w	801c438 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c23c:	4594      	cmp	ip, r2
 801c23e:	f340 80fb 	ble.w	801c438 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801c242:	2d00      	cmp	r5, #0
 801c244:	f000 80fa 	beq.w	801c43c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801c248:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c24c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801c250:	3701      	adds	r7, #1
 801c252:	f100 80f7 	bmi.w	801c444 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c256:	45b8      	cmp	r8, r7
 801c258:	f340 80f4 	ble.w	801c444 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801c25c:	2c00      	cmp	r4, #0
 801c25e:	f000 80f4 	beq.w	801c44a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801c262:	2900      	cmp	r1, #0
 801c264:	eb0e 020c 	add.w	r2, lr, ip
 801c268:	f2c0 80ea 	blt.w	801c440 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c26c:	458c      	cmp	ip, r1
 801c26e:	f340 80e7 	ble.w	801c440 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801c272:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801c276:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801c27a:	3101      	adds	r1, #1
 801c27c:	f100 80e8 	bmi.w	801c450 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c280:	458c      	cmp	ip, r1
 801c282:	f340 80e5 	ble.w	801c450 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801c286:	2d00      	cmp	r5, #0
 801c288:	f000 80e4 	beq.w	801c454 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801c28c:	7852      	ldrb	r2, [r2, #1]
 801c28e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801c292:	0e0b      	lsrs	r3, r1, #24
 801c294:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801c298:	9300      	str	r3, [sp, #0]
 801c29a:	b2a4      	uxth	r4, r4
 801c29c:	b2ab      	uxth	r3, r5
 801c29e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801c2a2:	fb03 f904 	mul.w	r9, r3, r4
 801c2a6:	fb0a f505 	mul.w	r5, sl, r5
 801c2aa:	011b      	lsls	r3, r3, #4
 801c2ac:	eba3 0e09 	sub.w	lr, r3, r9
 801c2b0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801c2b4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801c2b8:	0a28      	lsrs	r0, r5, #8
 801c2ba:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801c2be:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801c2c2:	4405      	add	r5, r0
 801c2c4:	0a2d      	lsrs	r5, r5, #8
 801c2c6:	fb0a f303 	mul.w	r3, sl, r3
 801c2ca:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801c2ce:	9005      	str	r0, [sp, #20]
 801c2d0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801c2d4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c2d8:	0a1b      	lsrs	r3, r3, #8
 801c2da:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801c2de:	9306      	str	r3, [sp, #24]
 801c2e0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801c2e4:	fb0b f303 	mul.w	r3, fp, r3
 801c2e8:	0a1d      	lsrs	r5, r3, #8
 801c2ea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c2ee:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801c2f2:	fb0b f606 	mul.w	r6, fp, r6
 801c2f6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801c2fa:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801c2fe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c302:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c306:	fb08 f707 	mul.w	r7, r8, r7
 801c30a:	441d      	add	r5, r3
 801c30c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801c310:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801c314:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801c318:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801c31c:	fb08 fc0c 	mul.w	ip, r8, ip
 801c320:	0a1b      	lsrs	r3, r3, #8
 801c322:	9307      	str	r3, [sp, #28]
 801c324:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801c328:	0e0b      	lsrs	r3, r1, #24
 801c32a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801c32e:	435f      	muls	r7, r3
 801c330:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c334:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801c338:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801c33c:	4460      	add	r0, ip
 801c33e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c342:	b2a4      	uxth	r4, r4
 801c344:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c348:	0a2d      	lsrs	r5, r5, #8
 801c34a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801c34e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c352:	fa1f fe8e 	uxth.w	lr, lr
 801c356:	4359      	muls	r1, r3
 801c358:	1b12      	subs	r2, r2, r4
 801c35a:	9b05      	ldr	r3, [sp, #20]
 801c35c:	44bc      	add	ip, r7
 801c35e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c362:	b292      	uxth	r2, r2
 801c364:	fb05 f50e 	mul.w	r5, r5, lr
 801c368:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c36c:	fb03 5502 	mla	r5, r3, r2, r5
 801c370:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c374:	9b06      	ldr	r3, [sp, #24]
 801c376:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801c37a:	0a36      	lsrs	r6, r6, #8
 801c37c:	0a00      	lsrs	r0, r0, #8
 801c37e:	fb0c 5509 	mla	r5, ip, r9, r5
 801c382:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801c386:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c38a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c38e:	fb00 5504 	mla	r5, r0, r4, r5
 801c392:	fb0e f606 	mul.w	r6, lr, r6
 801c396:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801c39a:	0a09      	lsrs	r1, r1, #8
 801c39c:	9b07      	ldr	r3, [sp, #28]
 801c39e:	fb02 6000 	mla	r0, r2, r0, r6
 801c3a2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801c3a6:	fb09 0001 	mla	r0, r9, r1, r0
 801c3aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c3ae:	fb0e fe0b 	mul.w	lr, lr, fp
 801c3b2:	fb04 0003 	mla	r0, r4, r3, r0
 801c3b6:	fb02 e20a 	mla	r2, r2, sl, lr
 801c3ba:	9b00      	ldr	r3, [sp, #0]
 801c3bc:	fb04 2408 	mla	r4, r4, r8, r2
 801c3c0:	fb09 4903 	mla	r9, r9, r3, r4
 801c3c4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801c3c8:	9b02      	ldr	r3, [sp, #8]
 801c3ca:	9a04      	ldr	r2, [sp, #16]
 801c3cc:	fa5f f989 	uxtb.w	r9, r9
 801c3d0:	fb03 f109 	mul.w	r1, r3, r9
 801c3d4:	9b03      	ldr	r3, [sp, #12]
 801c3d6:	0a2d      	lsrs	r5, r5, #8
 801c3d8:	0a00      	lsrs	r0, r0, #8
 801c3da:	fb03 f309 	mul.w	r3, r3, r9
 801c3de:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c3e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c3e6:	4305      	orrs	r5, r0
 801c3e8:	fb02 f909 	mul.w	r9, r2, r9
 801c3ec:	1c58      	adds	r0, r3, #1
 801c3ee:	1c4a      	adds	r2, r1, #1
 801c3f0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c3f4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c3f8:	0a2b      	lsrs	r3, r5, #8
 801c3fa:	0c2a      	lsrs	r2, r5, #16
 801c3fc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c400:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801c404:	00db      	lsls	r3, r3, #3
 801c406:	0212      	lsls	r2, r2, #8
 801c408:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801c40c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c410:	4313      	orrs	r3, r2
 801c412:	f109 0201 	add.w	r2, r9, #1
 801c416:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801c41a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801c41e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c422:	431d      	orrs	r5, r3
 801c424:	9b01      	ldr	r3, [sp, #4]
 801c426:	801d      	strh	r5, [r3, #0]
 801c428:	b009      	add	sp, #36	; 0x24
 801c42a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c42e:	2000      	movs	r0, #0
 801c430:	e701      	b.n	801c236 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801c432:	2600      	movs	r6, #0
 801c434:	4630      	mov	r0, r6
 801c436:	e70b      	b.n	801c250 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c438:	2600      	movs	r6, #0
 801c43a:	e709      	b.n	801c250 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c43c:	462e      	mov	r6, r5
 801c43e:	e707      	b.n	801c250 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c440:	2700      	movs	r7, #0
 801c442:	e71a      	b.n	801c27a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c444:	2100      	movs	r1, #0
 801c446:	460f      	mov	r7, r1
 801c448:	e723      	b.n	801c292 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c44a:	4621      	mov	r1, r4
 801c44c:	4627      	mov	r7, r4
 801c44e:	e720      	b.n	801c292 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c450:	2100      	movs	r1, #0
 801c452:	e71e      	b.n	801c292 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c454:	4629      	mov	r1, r5
 801c456:	e71c      	b.n	801c292 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801c458 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c45c:	b09b      	sub	sp, #108	; 0x6c
 801c45e:	9218      	str	r2, [sp, #96]	; 0x60
 801c460:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c462:	9116      	str	r1, [sp, #88]	; 0x58
 801c464:	9307      	str	r3, [sp, #28]
 801c466:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801c46a:	9019      	str	r0, [sp, #100]	; 0x64
 801c46c:	6850      	ldr	r0, [r2, #4]
 801c46e:	6812      	ldr	r2, [r2, #0]
 801c470:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801c472:	fb00 1303 	mla	r3, r0, r3, r1
 801c476:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c47a:	930a      	str	r3, [sp, #40]	; 0x28
 801c47c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c47e:	681b      	ldr	r3, [r3, #0]
 801c480:	930f      	str	r3, [sp, #60]	; 0x3c
 801c482:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c484:	685e      	ldr	r6, [r3, #4]
 801c486:	3604      	adds	r6, #4
 801c488:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c48a:	2b00      	cmp	r3, #0
 801c48c:	dc03      	bgt.n	801c496 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c48e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c490:	2b00      	cmp	r3, #0
 801c492:	f340 8373 	ble.w	801cb7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c496:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c498:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c49c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c4a0:	1e48      	subs	r0, r1, #1
 801c4a2:	1e57      	subs	r7, r2, #1
 801c4a4:	9b07      	ldr	r3, [sp, #28]
 801c4a6:	2b00      	cmp	r3, #0
 801c4a8:	f340 8190 	ble.w	801c7cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c4ac:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c4ae:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c4b2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c4b6:	d406      	bmi.n	801c4c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c4b8:	4584      	cmp	ip, r0
 801c4ba:	da04      	bge.n	801c4c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c4bc:	2b00      	cmp	r3, #0
 801c4be:	db02      	blt.n	801c4c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c4c0:	42bb      	cmp	r3, r7
 801c4c2:	f2c0 8184 	blt.w	801c7ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801c4c6:	f11c 0c01 	adds.w	ip, ip, #1
 801c4ca:	f100 8172 	bmi.w	801c7b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c4ce:	4561      	cmp	r1, ip
 801c4d0:	f2c0 816f 	blt.w	801c7b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c4d4:	3301      	adds	r3, #1
 801c4d6:	f100 816c 	bmi.w	801c7b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c4da:	429a      	cmp	r2, r3
 801c4dc:	f2c0 8169 	blt.w	801c7b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c4e0:	9b07      	ldr	r3, [sp, #28]
 801c4e2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c4e4:	9317      	str	r3, [sp, #92]	; 0x5c
 801c4e6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c4e8:	2b00      	cmp	r3, #0
 801c4ea:	f340 818e 	ble.w	801c80a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801c4ee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c4f0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c4f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c4f6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c4fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c4fc:	141b      	asrs	r3, r3, #16
 801c4fe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c502:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c506:	f100 81d1 	bmi.w	801c8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c50a:	f101 38ff 	add.w	r8, r1, #4294967295
 801c50e:	4543      	cmp	r3, r8
 801c510:	f280 81cc 	bge.w	801c8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c514:	f1bc 0f00 	cmp.w	ip, #0
 801c518:	f2c0 81c8 	blt.w	801c8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c51c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c520:	45c4      	cmp	ip, r8
 801c522:	f280 81c3 	bge.w	801c8ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c526:	b209      	sxth	r1, r1
 801c528:	fb0c 3301 	mla	r3, ip, r1, r3
 801c52c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c52e:	eb04 0803 	add.w	r8, r4, r3
 801c532:	5ce3      	ldrb	r3, [r4, r3]
 801c534:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c538:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c53c:	2a00      	cmp	r2, #0
 801c53e:	f000 81aa 	beq.w	801c896 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801c542:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c546:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c54a:	940b      	str	r4, [sp, #44]	; 0x2c
 801c54c:	0e24      	lsrs	r4, r4, #24
 801c54e:	9412      	str	r4, [sp, #72]	; 0x48
 801c550:	b178      	cbz	r0, 801c572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c552:	eb08 0c01 	add.w	ip, r8, r1
 801c556:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c55a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c55e:	9108      	str	r1, [sp, #32]
 801c560:	0e09      	lsrs	r1, r1, #24
 801c562:	9110      	str	r1, [sp, #64]	; 0x40
 801c564:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c568:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c56c:	910c      	str	r1, [sp, #48]	; 0x30
 801c56e:	0e09      	lsrs	r1, r1, #24
 801c570:	9113      	str	r1, [sp, #76]	; 0x4c
 801c572:	b292      	uxth	r2, r2
 801c574:	b280      	uxth	r0, r0
 801c576:	fb02 f900 	mul.w	r9, r2, r0
 801c57a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c57e:	0112      	lsls	r2, r2, #4
 801c580:	eba2 0809 	sub.w	r8, r2, r9
 801c584:	b280      	uxth	r0, r0
 801c586:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801c58a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c58c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c58e:	fa1f f888 	uxth.w	r8, r8
 801c592:	1a12      	subs	r2, r2, r0
 801c594:	b292      	uxth	r2, r2
 801c596:	fb08 f101 	mul.w	r1, r8, r1
 801c59a:	fb02 110e 	mla	r1, r2, lr, r1
 801c59e:	fb00 1104 	mla	r1, r0, r4, r1
 801c5a2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c5a4:	fb09 1104 	mla	r1, r9, r4, r1
 801c5a8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c5ac:	2900      	cmp	r1, #0
 801c5ae:	f000 80f5 	beq.w	801c79c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c5b2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c5b6:	d01b      	beq.n	801c5f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c5b8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c5bc:	fb0e fa0a 	mul.w	sl, lr, sl
 801c5c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c5c4:	fb0e fe03 	mul.w	lr, lr, r3
 801c5c8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c5cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c5d0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c5d4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c5d8:	4453      	add	r3, sl
 801c5da:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c5de:	0a1b      	lsrs	r3, r3, #8
 801c5e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c5e4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c5e8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c5ec:	ea43 030c 	orr.w	r3, r3, ip
 801c5f0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c5f2:	2cff      	cmp	r4, #255	; 0xff
 801c5f4:	d021      	beq.n	801c63a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801c5f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c5f8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c5fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c5fe:	fb04 fb0b 	mul.w	fp, r4, fp
 801c602:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c604:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c608:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c60a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c60e:	fb04 fa0a 	mul.w	sl, r4, sl
 801c612:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c616:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c61a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c61e:	44de      	add	lr, fp
 801c620:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c624:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c628:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c62c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c630:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c634:	ea4e 040a 	orr.w	r4, lr, sl
 801c638:	940b      	str	r4, [sp, #44]	; 0x2c
 801c63a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c63c:	2cff      	cmp	r4, #255	; 0xff
 801c63e:	d021      	beq.n	801c684 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801c640:	9c08      	ldr	r4, [sp, #32]
 801c642:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c646:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c648:	fb04 fb0b 	mul.w	fp, r4, fp
 801c64c:	9c08      	ldr	r4, [sp, #32]
 801c64e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c652:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c654:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c658:	fb04 fa0a 	mul.w	sl, r4, sl
 801c65c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c660:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c664:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c668:	44de      	add	lr, fp
 801c66a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c66e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c672:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c676:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c67a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c67e:	ea4e 040a 	orr.w	r4, lr, sl
 801c682:	9408      	str	r4, [sp, #32]
 801c684:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c686:	2cff      	cmp	r4, #255	; 0xff
 801c688:	d021      	beq.n	801c6ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c68a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c68c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c690:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c692:	fb04 fb0b 	mul.w	fp, r4, fp
 801c696:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c698:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c69c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c69e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c6a2:	fb04 fa0a 	mul.w	sl, r4, sl
 801c6a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c6aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c6ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c6b2:	44de      	add	lr, fp
 801c6b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c6b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c6bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c6c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c6c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c6c8:	ea4e 040a 	orr.w	r4, lr, sl
 801c6cc:	940c      	str	r4, [sp, #48]	; 0x30
 801c6ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c6d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c6d4:	9c08      	ldr	r4, [sp, #32]
 801c6d6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801c6da:	fb08 fc0c 	mul.w	ip, r8, ip
 801c6de:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c6e2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c6e6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c6e8:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c6ec:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c6f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c6f2:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c6f6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c6fa:	fb08 f80e 	mul.w	r8, r8, lr
 801c6fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c702:	fb02 8303 	mla	r3, r2, r3, r8
 801c706:	9a08      	ldr	r2, [sp, #32]
 801c708:	f8b7 8000 	ldrh.w	r8, [r7]
 801c70c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c710:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c712:	fb00 330a 	mla	r3, r0, sl, r3
 801c716:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801c71a:	fb09 3900 	mla	r9, r9, r0, r3
 801c71e:	43c9      	mvns	r1, r1
 801c720:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c724:	fa5f fe81 	uxtb.w	lr, r1
 801c728:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c72c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c730:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c734:	fb02 f20e 	mul.w	r2, r2, lr
 801c738:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c73c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801c740:	ea4c 0c09 	orr.w	ip, ip, r9
 801c744:	1c53      	adds	r3, r2, #1
 801c746:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c74a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c74e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c752:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c756:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c75a:	4a63      	ldr	r2, [pc, #396]	; (801c8e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c75c:	fb00 f00e 	mul.w	r0, r0, lr
 801c760:	b2db      	uxtb	r3, r3
 801c762:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c766:	1c43      	adds	r3, r0, #1
 801c768:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c76c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c770:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c774:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c778:	b2c9      	uxtb	r1, r1
 801c77a:	00db      	lsls	r3, r3, #3
 801c77c:	fb01 f10e 	mul.w	r1, r1, lr
 801c780:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c784:	4313      	orrs	r3, r2
 801c786:	1c4a      	adds	r2, r1, #1
 801c788:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c78c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c790:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c794:	ea4c 0c03 	orr.w	ip, ip, r3
 801c798:	f8a7 c000 	strh.w	ip, [r7]
 801c79c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c79e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c7a0:	441a      	add	r2, r3
 801c7a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c7a4:	9225      	str	r2, [sp, #148]	; 0x94
 801c7a6:	441d      	add	r5, r3
 801c7a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c7aa:	3b01      	subs	r3, #1
 801c7ac:	3702      	adds	r7, #2
 801c7ae:	9317      	str	r3, [sp, #92]	; 0x5c
 801c7b0:	e699      	b.n	801c4e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c7b2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c7b4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c7b6:	441c      	add	r4, r3
 801c7b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c7ba:	9425      	str	r4, [sp, #148]	; 0x94
 801c7bc:	441d      	add	r5, r3
 801c7be:	9b07      	ldr	r3, [sp, #28]
 801c7c0:	3b01      	subs	r3, #1
 801c7c2:	9307      	str	r3, [sp, #28]
 801c7c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c7c6:	3302      	adds	r3, #2
 801c7c8:	930a      	str	r3, [sp, #40]	; 0x28
 801c7ca:	e66b      	b.n	801c4a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c7cc:	d024      	beq.n	801c818 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c7ce:	9b07      	ldr	r3, [sp, #28]
 801c7d0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c7d2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c7d4:	3b01      	subs	r3, #1
 801c7d6:	fb00 4003 	mla	r0, r0, r3, r4
 801c7da:	1400      	asrs	r0, r0, #16
 801c7dc:	f53f ae80 	bmi.w	801c4e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c7e0:	3901      	subs	r1, #1
 801c7e2:	4288      	cmp	r0, r1
 801c7e4:	f6bf ae7c 	bge.w	801c4e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c7e8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c7ea:	fb01 5303 	mla	r3, r1, r3, r5
 801c7ee:	141b      	asrs	r3, r3, #16
 801c7f0:	f53f ae76 	bmi.w	801c4e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c7f4:	3a01      	subs	r2, #1
 801c7f6:	4293      	cmp	r3, r2
 801c7f8:	f6bf ae72 	bge.w	801c4e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c7fc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c800:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801c804:	f1bb 0f00 	cmp.w	fp, #0
 801c808:	dc70      	bgt.n	801c8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c80a:	9b07      	ldr	r3, [sp, #28]
 801c80c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c810:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c812:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c816:	930a      	str	r3, [sp, #40]	; 0x28
 801c818:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c81a:	2b00      	cmp	r3, #0
 801c81c:	f340 81ae 	ble.w	801cb7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c820:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c824:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c828:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c82c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c82e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c832:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c836:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c83a:	eef0 6a62 	vmov.f32	s13, s5
 801c83e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c842:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c846:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c84a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801c84e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c852:	eef0 6a43 	vmov.f32	s13, s6
 801c856:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c85a:	ee12 2a90 	vmov	r2, s5
 801c85e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c862:	fb92 f3f3 	sdiv	r3, r2, r3
 801c866:	ee13 2a10 	vmov	r2, s6
 801c86a:	9327      	str	r3, [sp, #156]	; 0x9c
 801c86c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c86e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c872:	9328      	str	r3, [sp, #160]	; 0xa0
 801c874:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c876:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c878:	3b01      	subs	r3, #1
 801c87a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c87e:	9316      	str	r3, [sp, #88]	; 0x58
 801c880:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c882:	bf08      	it	eq
 801c884:	4613      	moveq	r3, r2
 801c886:	ee16 5a90 	vmov	r5, s13
 801c88a:	9307      	str	r3, [sp, #28]
 801c88c:	eeb0 3a67 	vmov.f32	s6, s15
 801c890:	eef0 2a47 	vmov.f32	s5, s14
 801c894:	e5f8      	b.n	801c488 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c896:	2800      	cmp	r0, #0
 801c898:	f43f ae6b 	beq.w	801c572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c89c:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c8a0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c8a4:	9108      	str	r1, [sp, #32]
 801c8a6:	0e09      	lsrs	r1, r1, #24
 801c8a8:	9110      	str	r1, [sp, #64]	; 0x40
 801c8aa:	e662      	b.n	801c572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c8ac:	f113 0801 	adds.w	r8, r3, #1
 801c8b0:	f53f af74 	bmi.w	801c79c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c8b4:	4541      	cmp	r1, r8
 801c8b6:	f6ff af71 	blt.w	801c79c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c8ba:	f11c 0801 	adds.w	r8, ip, #1
 801c8be:	f53f af6d 	bmi.w	801c79c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c8c2:	45c6      	cmp	lr, r8
 801c8c4:	f6ff af6a 	blt.w	801c79c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c8c8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c8cc:	b209      	sxth	r1, r1
 801c8ce:	fa0f f38e 	sxth.w	r3, lr
 801c8d2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c8d6:	9301      	str	r3, [sp, #4]
 801c8d8:	9100      	str	r1, [sp, #0]
 801c8da:	4633      	mov	r3, r6
 801c8dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c8de:	9819      	ldr	r0, [sp, #100]	; 0x64
 801c8e0:	4639      	mov	r1, r7
 801c8e2:	f7ff fc7a 	bl	801c1da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c8e6:	e759      	b.n	801c79c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c8e8:	fffff800 	.word	0xfffff800
 801c8ec:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c8ee:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c8f0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c8f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c8f6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c8fa:	1427      	asrs	r7, r4, #16
 801c8fc:	142b      	asrs	r3, r5, #16
 801c8fe:	fb01 7303 	mla	r3, r1, r3, r7
 801c902:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c904:	18e7      	adds	r7, r4, r3
 801c906:	5ce3      	ldrb	r3, [r4, r3]
 801c908:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c90c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c910:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c914:	2a00      	cmp	r2, #0
 801c916:	f000 8127 	beq.w	801cb68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c91a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c91e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c922:	940d      	str	r4, [sp, #52]	; 0x34
 801c924:	0e24      	lsrs	r4, r4, #24
 801c926:	9414      	str	r4, [sp, #80]	; 0x50
 801c928:	b170      	cbz	r0, 801c948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c92a:	eb07 0e01 	add.w	lr, r7, r1
 801c92e:	5c79      	ldrb	r1, [r7, r1]
 801c930:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c934:	9109      	str	r1, [sp, #36]	; 0x24
 801c936:	0e09      	lsrs	r1, r1, #24
 801c938:	9111      	str	r1, [sp, #68]	; 0x44
 801c93a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c93e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c942:	910e      	str	r1, [sp, #56]	; 0x38
 801c944:	0e09      	lsrs	r1, r1, #24
 801c946:	9115      	str	r1, [sp, #84]	; 0x54
 801c948:	b292      	uxth	r2, r2
 801c94a:	b280      	uxth	r0, r0
 801c94c:	fb02 f800 	mul.w	r8, r2, r0
 801c950:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c954:	0112      	lsls	r2, r2, #4
 801c956:	eba2 0e08 	sub.w	lr, r2, r8
 801c95a:	b280      	uxth	r0, r0
 801c95c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c960:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c962:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c964:	fa1f fe8e 	uxth.w	lr, lr
 801c968:	1a09      	subs	r1, r1, r0
 801c96a:	b289      	uxth	r1, r1
 801c96c:	fb0e f202 	mul.w	r2, lr, r2
 801c970:	fb01 220c 	mla	r2, r1, ip, r2
 801c974:	fb00 2204 	mla	r2, r0, r4, r2
 801c978:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c97a:	fb08 2204 	mla	r2, r8, r4, r2
 801c97e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c982:	2a00      	cmp	r2, #0
 801c984:	f000 80e5 	beq.w	801cb52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c988:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c98c:	d019      	beq.n	801c9c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c98e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c992:	fb0c fa0a 	mul.w	sl, ip, sl
 801c996:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c99a:	fb0c fc03 	mul.w	ip, ip, r3
 801c99e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c9a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c9a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c9aa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c9ae:	4453      	add	r3, sl
 801c9b0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c9b4:	0a1b      	lsrs	r3, r3, #8
 801c9b6:	0a3f      	lsrs	r7, r7, #8
 801c9b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c9bc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c9c0:	433b      	orrs	r3, r7
 801c9c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c9c4:	2cff      	cmp	r4, #255	; 0xff
 801c9c6:	d020      	beq.n	801ca0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c9c8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c9ca:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c9ce:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c9d0:	4367      	muls	r7, r4
 801c9d2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c9d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c9d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c9da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c9de:	fb04 fa0a 	mul.w	sl, r4, sl
 801c9e2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c9e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c9ea:	44bc      	add	ip, r7
 801c9ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c9f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c9f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c9f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c9fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ca00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ca04:	ea4c 040a 	orr.w	r4, ip, sl
 801ca08:	940d      	str	r4, [sp, #52]	; 0x34
 801ca0a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ca0c:	2cff      	cmp	r4, #255	; 0xff
 801ca0e:	d020      	beq.n	801ca52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801ca10:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ca12:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ca16:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ca18:	4367      	muls	r7, r4
 801ca1a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801ca1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ca20:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ca22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ca26:	fb04 fa0a 	mul.w	sl, r4, sl
 801ca2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ca2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ca32:	44bc      	add	ip, r7
 801ca34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ca38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ca3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ca40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ca44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ca48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ca4c:	ea4c 040a 	orr.w	r4, ip, sl
 801ca50:	9409      	str	r4, [sp, #36]	; 0x24
 801ca52:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ca54:	2cff      	cmp	r4, #255	; 0xff
 801ca56:	d020      	beq.n	801ca9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801ca58:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ca5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801ca5e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ca60:	4367      	muls	r7, r4
 801ca62:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ca64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ca68:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ca6a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ca6e:	fb04 fa0a 	mul.w	sl, r4, sl
 801ca72:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ca76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ca7a:	44bc      	add	ip, r7
 801ca7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ca80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ca84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ca88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ca8c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ca90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ca94:	ea4c 040a 	orr.w	r4, ip, sl
 801ca98:	940e      	str	r4, [sp, #56]	; 0x38
 801ca9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ca9c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801caa0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801caa2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801caa6:	fb0e f707 	mul.w	r7, lr, r7
 801caaa:	fb01 770c 	mla	r7, r1, ip, r7
 801caae:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801cab2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cab4:	fb00 770c 	mla	r7, r0, ip, r7
 801cab8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801cabc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cabe:	fb08 770c 	mla	r7, r8, ip, r7
 801cac2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801cac6:	fb0e fe0c 	mul.w	lr, lr, ip
 801caca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801cace:	fb01 e303 	mla	r3, r1, r3, lr
 801cad2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cad4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801cad8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cada:	fb00 330a 	mla	r3, r0, sl, r3
 801cade:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801cae2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801cae6:	f8b9 3000 	ldrh.w	r3, [r9]
 801caea:	43d2      	mvns	r2, r2
 801caec:	1218      	asrs	r0, r3, #8
 801caee:	b2d2      	uxtb	r2, r2
 801caf0:	10d9      	asrs	r1, r3, #3
 801caf2:	0a3f      	lsrs	r7, r7, #8
 801caf4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801caf8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cafc:	00db      	lsls	r3, r3, #3
 801cafe:	4350      	muls	r0, r2
 801cb00:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801cb04:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801cb08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cb0c:	b2db      	uxtb	r3, r3
 801cb0e:	ea47 070c 	orr.w	r7, r7, ip
 801cb12:	4351      	muls	r1, r2
 801cb14:	4353      	muls	r3, r2
 801cb16:	1c42      	adds	r2, r0, #1
 801cb18:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cb1c:	0c3a      	lsrs	r2, r7, #16
 801cb1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cb22:	4a18      	ldr	r2, [pc, #96]	; (801cb84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801cb24:	b2c0      	uxtb	r0, r0
 801cb26:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801cb2a:	1c4a      	adds	r2, r1, #1
 801cb2c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cb30:	0a3a      	lsrs	r2, r7, #8
 801cb32:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cb36:	00c9      	lsls	r1, r1, #3
 801cb38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cb3c:	4301      	orrs	r1, r0
 801cb3e:	1c58      	adds	r0, r3, #1
 801cb40:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801cb44:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cb48:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801cb4c:	4308      	orrs	r0, r1
 801cb4e:	f8a9 0000 	strh.w	r0, [r9]
 801cb52:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801cb54:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801cb56:	441a      	add	r2, r3
 801cb58:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cb5a:	9225      	str	r2, [sp, #148]	; 0x94
 801cb5c:	f109 0902 	add.w	r9, r9, #2
 801cb60:	441d      	add	r5, r3
 801cb62:	f10b 3bff 	add.w	fp, fp, #4294967295
 801cb66:	e64d      	b.n	801c804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801cb68:	2800      	cmp	r0, #0
 801cb6a:	f43f aeed 	beq.w	801c948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cb6e:	5c79      	ldrb	r1, [r7, r1]
 801cb70:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801cb74:	9109      	str	r1, [sp, #36]	; 0x24
 801cb76:	0e09      	lsrs	r1, r1, #24
 801cb78:	9111      	str	r1, [sp, #68]	; 0x44
 801cb7a:	e6e5      	b.n	801c948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801cb7c:	b01b      	add	sp, #108	; 0x6c
 801cb7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb82:	bf00      	nop
 801cb84:	fffff800 	.word	0xfffff800

0801cb88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801cb88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb8c:	b085      	sub	sp, #20
 801cb8e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801cb92:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801cb96:	9103      	str	r1, [sp, #12]
 801cb98:	fb00 7406 	mla	r4, r0, r6, r7
 801cb9c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801cba0:	2800      	cmp	r0, #0
 801cba2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801cba6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801cbaa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801cbae:	9501      	str	r5, [sp, #4]
 801cbb0:	eb03 0904 	add.w	r9, r3, r4
 801cbb4:	f2c0 8150 	blt.w	801ce58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801cbb8:	4583      	cmp	fp, r0
 801cbba:	f340 814d 	ble.w	801ce58 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801cbbe:	2f00      	cmp	r7, #0
 801cbc0:	f2c0 8146 	blt.w	801ce50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801cbc4:	42be      	cmp	r6, r7
 801cbc6:	f340 8143 	ble.w	801ce50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801cbca:	f813 c004 	ldrb.w	ip, [r3, r4]
 801cbce:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801cbd2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cbd6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801cbda:	4355      	muls	r5, r2
 801cbdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cbe0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801cbe4:	fb0c f203 	mul.w	r2, ip, r3
 801cbe8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cbec:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801cbf0:	441d      	add	r5, r3
 801cbf2:	f102 0320 	add.w	r3, r2, #32
 801cbf6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cbfa:	0a1b      	lsrs	r3, r3, #8
 801cbfc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cc00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cc04:	431c      	orrs	r4, r3
 801cc06:	1c7b      	adds	r3, r7, #1
 801cc08:	f100 812b 	bmi.w	801ce62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cc0c:	429e      	cmp	r6, r3
 801cc0e:	f340 8128 	ble.w	801ce62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801cc12:	2900      	cmp	r1, #0
 801cc14:	f000 8128 	beq.w	801ce68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801cc18:	9a01      	ldr	r2, [sp, #4]
 801cc1a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cc1e:	8855      	ldrh	r5, [r2, #2]
 801cc20:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cc24:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801cc28:	fb08 f802 	mul.w	r8, r8, r2
 801cc2c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cc30:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801cc34:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cc38:	435d      	muls	r5, r3
 801cc3a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cc3e:	44d0      	add	r8, sl
 801cc40:	f105 0a20 	add.w	sl, r5, #32
 801cc44:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801cc48:	0a2d      	lsrs	r5, r5, #8
 801cc4a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801cc4e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cc52:	432a      	orrs	r2, r5
 801cc54:	3001      	adds	r0, #1
 801cc56:	f100 810d 	bmi.w	801ce74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801cc5a:	4583      	cmp	fp, r0
 801cc5c:	f340 810a 	ble.w	801ce74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801cc60:	f1be 0f00 	cmp.w	lr, #0
 801cc64:	f000 810b 	beq.w	801ce7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801cc68:	2f00      	cmp	r7, #0
 801cc6a:	f2c0 8100 	blt.w	801ce6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801cc6e:	42be      	cmp	r6, r7
 801cc70:	f340 80fd 	ble.w	801ce6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801cc74:	9801      	ldr	r0, [sp, #4]
 801cc76:	f819 5006 	ldrb.w	r5, [r9, r6]
 801cc7a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801cc7e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cc82:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801cc86:	fb0a fa00 	mul.w	sl, sl, r0
 801cc8a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801cc8e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cc92:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801cc96:	fb05 f808 	mul.w	r8, r5, r8
 801cc9a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801cc9e:	4482      	add	sl, r0
 801cca0:	f108 0020 	add.w	r0, r8, #32
 801cca4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cca8:	0a00      	lsrs	r0, r0, #8
 801ccaa:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ccae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ccb2:	ea4b 0b00 	orr.w	fp, fp, r0
 801ccb6:	3701      	adds	r7, #1
 801ccb8:	f100 80e6 	bmi.w	801ce88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ccbc:	42be      	cmp	r6, r7
 801ccbe:	f340 80e3 	ble.w	801ce88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801ccc2:	2900      	cmp	r1, #0
 801ccc4:	f000 80e3 	beq.w	801ce8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801ccc8:	3601      	adds	r6, #1
 801ccca:	9801      	ldr	r0, [sp, #4]
 801cccc:	f819 7006 	ldrb.w	r7, [r9, r6]
 801ccd0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801ccd4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801ccd8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801ccdc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cce0:	fb09 f906 	mul.w	r9, r9, r6
 801cce4:	fb07 f800 	mul.w	r8, r7, r0
 801cce8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801ccec:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801ccf0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801ccf4:	44d1      	add	r9, sl
 801ccf6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801ccfa:	f108 0020 	add.w	r0, r8, #32
 801ccfe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cd02:	0a00      	lsrs	r0, r0, #8
 801cd04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd08:	4330      	orrs	r0, r6
 801cd0a:	b28e      	uxth	r6, r1
 801cd0c:	fa1f f98e 	uxth.w	r9, lr
 801cd10:	fb06 f809 	mul.w	r8, r6, r9
 801cd14:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801cd18:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801cd1c:	0136      	lsls	r6, r6, #4
 801cd1e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd22:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801cd26:	9601      	str	r6, [sp, #4]
 801cd28:	ea4a 0404 	orr.w	r4, sl, r4
 801cd2c:	fa1f f689 	uxth.w	r6, r9
 801cd30:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cd34:	fb11 f90e 	smulbb	r9, r1, lr
 801cd38:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801cd3c:	9602      	str	r6, [sp, #8]
 801cd3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd42:	4626      	mov	r6, r4
 801cd44:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cd48:	f1ce 0410 	rsb	r4, lr, #16
 801cd4c:	1a64      	subs	r4, r4, r1
 801cd4e:	ea4a 0202 	orr.w	r2, sl, r2
 801cd52:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801cd56:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cd5a:	434a      	muls	r2, r1
 801cd5c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801cd60:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd64:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cd68:	fb04 2406 	mla	r4, r4, r6, r2
 801cd6c:	ea4a 0000 	orr.w	r0, sl, r0
 801cd70:	fb09 4200 	mla	r2, r9, r0, r4
 801cd74:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801cd78:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cd7c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801cd80:	ea44 0b0b 	orr.w	fp, r4, fp
 801cd84:	9c01      	ldr	r4, [sp, #4]
 801cd86:	9e02      	ldr	r6, [sp, #8]
 801cd88:	9903      	ldr	r1, [sp, #12]
 801cd8a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801cd8e:	1ba4      	subs	r4, r4, r6
 801cd90:	9e01      	ldr	r6, [sp, #4]
 801cd92:	8808      	ldrh	r0, [r1, #0]
 801cd94:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801cd98:	eba6 0608 	sub.w	r6, r6, r8
 801cd9c:	b2b6      	uxth	r6, r6
 801cd9e:	b2a4      	uxth	r4, r4
 801cda0:	4373      	muls	r3, r6
 801cda2:	fb0c 3304 	mla	r3, ip, r4, r3
 801cda6:	9c02      	ldr	r4, [sp, #8]
 801cda8:	fb04 3505 	mla	r5, r4, r5, r3
 801cdac:	fb08 5707 	mla	r7, r8, r7, r5
 801cdb0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cdb4:	b289      	uxth	r1, r1
 801cdb6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801cdba:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801cdbe:	434f      	muls	r7, r1
 801cdc0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cdc4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cdc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cdcc:	1c7b      	adds	r3, r7, #1
 801cdce:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cdd2:	ea42 0e0e 	orr.w	lr, r2, lr
 801cdd6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801cdda:	fa1f f28e 	uxth.w	r2, lr
 801cdde:	1203      	asrs	r3, r0, #8
 801cde0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801cde4:	b2ff      	uxtb	r7, r7
 801cde6:	1215      	asrs	r5, r2, #8
 801cde8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801cdec:	fb13 f307 	smulbb	r3, r3, r7
 801cdf0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cdf4:	fb05 3501 	mla	r5, r5, r1, r3
 801cdf8:	10c3      	asrs	r3, r0, #3
 801cdfa:	10d4      	asrs	r4, r2, #3
 801cdfc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801ce00:	fb13 f307 	smulbb	r3, r3, r7
 801ce04:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ce08:	fb04 3401 	mla	r4, r4, r1, r3
 801ce0c:	00c3      	lsls	r3, r0, #3
 801ce0e:	00d2      	lsls	r2, r2, #3
 801ce10:	b2db      	uxtb	r3, r3
 801ce12:	fb13 f307 	smulbb	r3, r3, r7
 801ce16:	b2d2      	uxtb	r2, r2
 801ce18:	fb02 3101 	mla	r1, r2, r1, r3
 801ce1c:	b2ad      	uxth	r5, r5
 801ce1e:	b289      	uxth	r1, r1
 801ce20:	b2a4      	uxth	r4, r4
 801ce22:	1c6b      	adds	r3, r5, #1
 801ce24:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ce28:	1c62      	adds	r2, r4, #1
 801ce2a:	1c4b      	adds	r3, r1, #1
 801ce2c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ce30:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801ce34:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ce38:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ce3c:	0964      	lsrs	r4, r4, #5
 801ce3e:	432b      	orrs	r3, r5
 801ce40:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ce44:	9a03      	ldr	r2, [sp, #12]
 801ce46:	4323      	orrs	r3, r4
 801ce48:	8013      	strh	r3, [r2, #0]
 801ce4a:	b005      	add	sp, #20
 801ce4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce50:	f04f 0c00 	mov.w	ip, #0
 801ce54:	4664      	mov	r4, ip
 801ce56:	e6d6      	b.n	801cc06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801ce58:	2300      	movs	r3, #0
 801ce5a:	469c      	mov	ip, r3
 801ce5c:	461a      	mov	r2, r3
 801ce5e:	461c      	mov	r4, r3
 801ce60:	e6f8      	b.n	801cc54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ce62:	2300      	movs	r3, #0
 801ce64:	461a      	mov	r2, r3
 801ce66:	e6f5      	b.n	801cc54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ce68:	460b      	mov	r3, r1
 801ce6a:	460a      	mov	r2, r1
 801ce6c:	e6f2      	b.n	801cc54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801ce6e:	2500      	movs	r5, #0
 801ce70:	46ab      	mov	fp, r5
 801ce72:	e720      	b.n	801ccb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801ce74:	2700      	movs	r7, #0
 801ce76:	463d      	mov	r5, r7
 801ce78:	4638      	mov	r0, r7
 801ce7a:	46bb      	mov	fp, r7
 801ce7c:	e745      	b.n	801cd0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ce7e:	4677      	mov	r7, lr
 801ce80:	4675      	mov	r5, lr
 801ce82:	4670      	mov	r0, lr
 801ce84:	46f3      	mov	fp, lr
 801ce86:	e740      	b.n	801cd0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ce88:	2700      	movs	r7, #0
 801ce8a:	4638      	mov	r0, r7
 801ce8c:	e73d      	b.n	801cd0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801ce8e:	460f      	mov	r7, r1
 801ce90:	4608      	mov	r0, r1
 801ce92:	e73a      	b.n	801cd0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801ce94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ce94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce98:	b097      	sub	sp, #92	; 0x5c
 801ce9a:	9214      	str	r2, [sp, #80]	; 0x50
 801ce9c:	9308      	str	r3, [sp, #32]
 801ce9e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801cea0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801cea4:	9312      	str	r3, [sp, #72]	; 0x48
 801cea6:	9111      	str	r1, [sp, #68]	; 0x44
 801cea8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801ceac:	9015      	str	r0, [sp, #84]	; 0x54
 801ceae:	6850      	ldr	r0, [r2, #4]
 801ceb0:	6812      	ldr	r2, [r2, #0]
 801ceb2:	fb00 1303 	mla	r3, r0, r3, r1
 801ceb6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ceba:	9309      	str	r3, [sp, #36]	; 0x24
 801cebc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cebe:	681b      	ldr	r3, [r3, #0]
 801cec0:	930b      	str	r3, [sp, #44]	; 0x2c
 801cec2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cec4:	685b      	ldr	r3, [r3, #4]
 801cec6:	930c      	str	r3, [sp, #48]	; 0x30
 801cec8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801cecc:	930a      	str	r3, [sp, #40]	; 0x28
 801cece:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ced0:	2b00      	cmp	r3, #0
 801ced2:	dc03      	bgt.n	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ced4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ced6:	2b00      	cmp	r3, #0
 801ced8:	f340 83cb 	ble.w	801d672 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801cedc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cede:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cee2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cee6:	1e48      	subs	r0, r1, #1
 801cee8:	1e55      	subs	r5, r2, #1
 801ceea:	9b08      	ldr	r3, [sp, #32]
 801ceec:	2b00      	cmp	r3, #0
 801ceee:	f340 81a3 	ble.w	801d238 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801cef2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801cef4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801cef6:	1436      	asrs	r6, r6, #16
 801cef8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cefc:	d406      	bmi.n	801cf0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cefe:	4286      	cmp	r6, r0
 801cf00:	da04      	bge.n	801cf0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cf02:	2b00      	cmp	r3, #0
 801cf04:	db02      	blt.n	801cf0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cf06:	42ab      	cmp	r3, r5
 801cf08:	f2c0 8197 	blt.w	801d23a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801cf0c:	3601      	adds	r6, #1
 801cf0e:	f100 8184 	bmi.w	801d21a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cf12:	42b1      	cmp	r1, r6
 801cf14:	f2c0 8181 	blt.w	801d21a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cf18:	3301      	adds	r3, #1
 801cf1a:	f100 817e 	bmi.w	801d21a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cf1e:	429a      	cmp	r2, r3
 801cf20:	f2c0 817b 	blt.w	801d21a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cf24:	9b08      	ldr	r3, [sp, #32]
 801cf26:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801cf28:	9313      	str	r3, [sp, #76]	; 0x4c
 801cf2a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cf2e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801cf30:	2b00      	cmp	r3, #0
 801cf32:	f340 81a4 	ble.w	801d27e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cf36:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801cf38:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801cf3a:	1418      	asrs	r0, r3, #16
 801cf3c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cf3e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cf42:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801cf44:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cf48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cf4a:	142d      	asrs	r5, r5, #16
 801cf4c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cf50:	f100 81f8 	bmi.w	801d344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cf54:	f102 3eff 	add.w	lr, r2, #4294967295
 801cf58:	4575      	cmp	r5, lr
 801cf5a:	f280 81f3 	bge.w	801d344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cf5e:	2800      	cmp	r0, #0
 801cf60:	f2c0 81f0 	blt.w	801d344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cf64:	f103 3eff 	add.w	lr, r3, #4294967295
 801cf68:	4570      	cmp	r0, lr
 801cf6a:	f280 81eb 	bge.w	801d344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cf6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cf70:	b212      	sxth	r2, r2
 801cf72:	fb00 5002 	mla	r0, r0, r2, r5
 801cf76:	fa1f fe81 	uxth.w	lr, r1
 801cf7a:	eb03 0a00 	add.w	sl, r3, r0
 801cf7e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cf82:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cf86:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cf8a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cf8e:	b29b      	uxth	r3, r3
 801cf90:	f1bc 0f00 	cmp.w	ip, #0
 801cf94:	f000 81b9 	beq.w	801d30a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801cf98:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cf9c:	940d      	str	r4, [sp, #52]	; 0x34
 801cf9e:	eb0a 0b02 	add.w	fp, sl, r2
 801cfa2:	fa1f fa8c 	uxth.w	sl, ip
 801cfa6:	fb0a fe0e 	mul.w	lr, sl, lr
 801cfaa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cfae:	fa1f fa8a 	uxth.w	sl, sl
 801cfb2:	eba5 050e 	sub.w	r5, r5, lr
 801cfb6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cfba:	940e      	str	r4, [sp, #56]	; 0x38
 801cfbc:	eba3 030a 	sub.w	r3, r3, sl
 801cfc0:	b2ad      	uxth	r5, r5
 801cfc2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cfc4:	b29b      	uxth	r3, r3
 801cfc6:	fb08 f505 	mul.w	r5, r8, r5
 801cfca:	fb09 5303 	mla	r3, r9, r3, r5
 801cfce:	fb0a 3304 	mla	r3, sl, r4, r3
 801cfd2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cfd4:	fb0e 3304 	mla	r3, lr, r4, r3
 801cfd8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cfdc:	2b00      	cmp	r3, #0
 801cfde:	f000 810f 	beq.w	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cfe2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cfe4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cfe8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cfec:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cff0:	f000 8190 	beq.w	801d314 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801cff4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cff8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cffc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d000:	fb09 f000 	mul.w	r0, r9, r0
 801d004:	fb0a fe0e 	mul.w	lr, sl, lr
 801d008:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d00c:	f100 0b20 	add.w	fp, r0, #32
 801d010:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d014:	44ce      	add	lr, r9
 801d016:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d01a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d01e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d022:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d026:	ea4e 0909 	orr.w	r9, lr, r9
 801d02a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d02e:	8868      	ldrh	r0, [r5, #2]
 801d030:	d019      	beq.n	801d066 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801d032:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d036:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d03a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d03e:	fb08 f800 	mul.w	r8, r8, r0
 801d042:	fb0a fe0e 	mul.w	lr, sl, lr
 801d046:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d04a:	f108 0b20 	add.w	fp, r8, #32
 801d04e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d052:	4486      	add	lr, r0
 801d054:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d058:	0a00      	lsrs	r0, r0, #8
 801d05a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d05e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d062:	ea4e 0000 	orr.w	r0, lr, r0
 801d066:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d06a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d06e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d072:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d076:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d07a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d07e:	ea4e 0909 	orr.w	r9, lr, r9
 801d082:	ea4a 0000 	orr.w	r0, sl, r0
 801d086:	f1bc 0f00 	cmp.w	ip, #0
 801d08a:	f000 8145 	beq.w	801d318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801d08e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801d092:	3a01      	subs	r2, #1
 801d094:	0052      	lsls	r2, r2, #1
 801d096:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d098:	3202      	adds	r2, #2
 801d09a:	2cff      	cmp	r4, #255	; 0xff
 801d09c:	eb05 0e02 	add.w	lr, r5, r2
 801d0a0:	5aaa      	ldrh	r2, [r5, r2]
 801d0a2:	d018      	beq.n	801d0d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801d0a4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801d0a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d0ac:	fb04 fa02 	mul.w	sl, r4, r2
 801d0b0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0b4:	fb08 f805 	mul.w	r8, r8, r5
 801d0b8:	f10a 0520 	add.w	r5, sl, #32
 801d0bc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d0c0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d0c4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d0c8:	4442      	add	r2, r8
 801d0ca:	0a2d      	lsrs	r5, r5, #8
 801d0cc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d0d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d0d4:	432a      	orrs	r2, r5
 801d0d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801d0d8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d0dc:	2cff      	cmp	r4, #255	; 0xff
 801d0de:	d01a      	beq.n	801d116 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801d0e0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801d0e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d0e8:	fb04 fa05 	mul.w	sl, r4, r5
 801d0ec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0f0:	fb08 f80e 	mul.w	r8, r8, lr
 801d0f4:	f10a 0e20 	add.w	lr, sl, #32
 801d0f8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d0fc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d100:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d104:	4445      	add	r5, r8
 801d106:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d10a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d10e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801d112:	ea45 050e 	orr.w	r5, r5, lr
 801d116:	fb1c fe01 	smulbb	lr, ip, r1
 801d11a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d11e:	f1cc 0810 	rsb	r8, ip, #16
 801d122:	eba8 0801 	sub.w	r8, r8, r1
 801d126:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d12a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d12e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d132:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d136:	4341      	muls	r1, r0
 801d138:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d13c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d140:	ea4a 0202 	orr.w	r2, sl, r2
 801d144:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d148:	fb09 1108 	mla	r1, r9, r8, r1
 801d14c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d150:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d154:	fb0c 1102 	mla	r1, ip, r2, r1
 801d158:	ea4b 0505 	orr.w	r5, fp, r5
 801d15c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d160:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d164:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d168:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d16c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d170:	ea42 0e0e 	orr.w	lr, r2, lr
 801d174:	fa1f f28e 	uxth.w	r2, lr
 801d178:	2bff      	cmp	r3, #255	; 0xff
 801d17a:	d103      	bne.n	801d184 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801d17c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d17e:	29ff      	cmp	r1, #255	; 0xff
 801d180:	f000 80de 	beq.w	801d340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801d184:	990a      	ldr	r1, [sp, #40]	; 0x28
 801d186:	8838      	ldrh	r0, [r7, #0]
 801d188:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d18a:	434b      	muls	r3, r1
 801d18c:	f103 0c01 	add.w	ip, r3, #1
 801d190:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801d194:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d198:	fa5f fc83 	uxtb.w	ip, r3
 801d19c:	1203      	asrs	r3, r0, #8
 801d19e:	1215      	asrs	r5, r2, #8
 801d1a0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d1a4:	fb13 f30c 	smulbb	r3, r3, ip
 801d1a8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d1ac:	fb05 3501 	mla	r5, r5, r1, r3
 801d1b0:	10c3      	asrs	r3, r0, #3
 801d1b2:	10d1      	asrs	r1, r2, #3
 801d1b4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801d1b8:	fb13 f30c 	smulbb	r3, r3, ip
 801d1bc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d1c0:	fb01 3104 	mla	r1, r1, r4, r3
 801d1c4:	00c3      	lsls	r3, r0, #3
 801d1c6:	00d2      	lsls	r2, r2, #3
 801d1c8:	b2db      	uxtb	r3, r3
 801d1ca:	b2d2      	uxtb	r2, r2
 801d1cc:	fb13 f30c 	smulbb	r3, r3, ip
 801d1d0:	b2ad      	uxth	r5, r5
 801d1d2:	fb02 3304 	mla	r3, r2, r4, r3
 801d1d6:	b29a      	uxth	r2, r3
 801d1d8:	1c6b      	adds	r3, r5, #1
 801d1da:	b289      	uxth	r1, r1
 801d1dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d1e0:	1c53      	adds	r3, r2, #1
 801d1e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d1e6:	1c4a      	adds	r2, r1, #1
 801d1e8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d1ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d1f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d1f4:	0949      	lsrs	r1, r1, #5
 801d1f6:	432b      	orrs	r3, r5
 801d1f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d1fc:	430b      	orrs	r3, r1
 801d1fe:	803b      	strh	r3, [r7, #0]
 801d200:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d202:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801d204:	4413      	add	r3, r2
 801d206:	9321      	str	r3, [sp, #132]	; 0x84
 801d208:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801d20a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d20c:	441a      	add	r2, r3
 801d20e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d210:	9222      	str	r2, [sp, #136]	; 0x88
 801d212:	3b01      	subs	r3, #1
 801d214:	3702      	adds	r7, #2
 801d216:	9313      	str	r3, [sp, #76]	; 0x4c
 801d218:	e689      	b.n	801cf2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d21a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d21c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801d21e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801d220:	4433      	add	r3, r6
 801d222:	9321      	str	r3, [sp, #132]	; 0x84
 801d224:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d226:	441c      	add	r4, r3
 801d228:	9b08      	ldr	r3, [sp, #32]
 801d22a:	9422      	str	r4, [sp, #136]	; 0x88
 801d22c:	3b01      	subs	r3, #1
 801d22e:	9308      	str	r3, [sp, #32]
 801d230:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d232:	3302      	adds	r3, #2
 801d234:	9309      	str	r3, [sp, #36]	; 0x24
 801d236:	e658      	b.n	801ceea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801d238:	d028      	beq.n	801d28c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d23a:	9b08      	ldr	r3, [sp, #32]
 801d23c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801d23e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801d240:	3b01      	subs	r3, #1
 801d242:	fb00 5003 	mla	r0, r0, r3, r5
 801d246:	1400      	asrs	r0, r0, #16
 801d248:	f53f ae6c 	bmi.w	801cf24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d24c:	3901      	subs	r1, #1
 801d24e:	4288      	cmp	r0, r1
 801d250:	f6bf ae68 	bge.w	801cf24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d254:	9924      	ldr	r1, [sp, #144]	; 0x90
 801d256:	9822      	ldr	r0, [sp, #136]	; 0x88
 801d258:	fb01 0303 	mla	r3, r1, r3, r0
 801d25c:	141b      	asrs	r3, r3, #16
 801d25e:	f53f ae61 	bmi.w	801cf24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d262:	3a01      	subs	r2, #1
 801d264:	4293      	cmp	r3, r2
 801d266:	f6bf ae5d 	bge.w	801cf24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d26a:	9b08      	ldr	r3, [sp, #32]
 801d26c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801d270:	9313      	str	r3, [sp, #76]	; 0x4c
 801d272:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d276:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d278:	2b00      	cmp	r3, #0
 801d27a:	f300 8082 	bgt.w	801d382 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801d27e:	9b08      	ldr	r3, [sp, #32]
 801d280:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d284:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d286:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d28a:	9309      	str	r3, [sp, #36]	; 0x24
 801d28c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d28e:	2b00      	cmp	r3, #0
 801d290:	f340 81ef 	ble.w	801d672 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d294:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d298:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d29c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d2a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d2a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d2a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d2aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d2ae:	eef0 6a62 	vmov.f32	s13, s5
 801d2b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d2b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d2ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d2be:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801d2c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d2c6:	eef0 6a43 	vmov.f32	s13, s6
 801d2ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d2ce:	ee12 2a90 	vmov	r2, s5
 801d2d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d2d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2da:	ee13 2a10 	vmov	r2, s6
 801d2de:	9323      	str	r3, [sp, #140]	; 0x8c
 801d2e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d2e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2e6:	9324      	str	r3, [sp, #144]	; 0x90
 801d2e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801d2ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d2ec:	3b01      	subs	r3, #1
 801d2ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d2f2:	9311      	str	r3, [sp, #68]	; 0x44
 801d2f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d2f6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801d2fa:	bf08      	it	eq
 801d2fc:	4613      	moveq	r3, r2
 801d2fe:	9308      	str	r3, [sp, #32]
 801d300:	eeb0 3a67 	vmov.f32	s6, s15
 801d304:	eef0 2a47 	vmov.f32	s5, s14
 801d308:	e5e1      	b.n	801cece <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d30a:	fb08 f505 	mul.w	r5, r8, r5
 801d30e:	fb09 5303 	mla	r3, r9, r3, r5
 801d312:	e661      	b.n	801cfd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801d314:	4681      	mov	r9, r0
 801d316:	e688      	b.n	801d02a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801d318:	f1c1 0210 	rsb	r2, r1, #16
 801d31c:	4341      	muls	r1, r0
 801d31e:	fb09 1902 	mla	r9, r9, r2, r1
 801d322:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d326:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d32a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d32e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d332:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d336:	ea42 0909 	orr.w	r9, r2, r9
 801d33a:	fa1f f289 	uxth.w	r2, r9
 801d33e:	e71b      	b.n	801d178 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d340:	803a      	strh	r2, [r7, #0]
 801d342:	e75d      	b.n	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d344:	f115 0e01 	adds.w	lr, r5, #1
 801d348:	f53f af5a 	bmi.w	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d34c:	4572      	cmp	r2, lr
 801d34e:	f6ff af57 	blt.w	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d352:	f110 0e01 	adds.w	lr, r0, #1
 801d356:	f53f af53 	bmi.w	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d35a:	4573      	cmp	r3, lr
 801d35c:	f6ff af50 	blt.w	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d360:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d362:	9502      	str	r5, [sp, #8]
 801d364:	b21b      	sxth	r3, r3
 801d366:	b212      	sxth	r2, r2
 801d368:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801d36c:	9301      	str	r3, [sp, #4]
 801d36e:	9200      	str	r2, [sp, #0]
 801d370:	e9cd c405 	strd	ip, r4, [sp, #20]
 801d374:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801d378:	4639      	mov	r1, r7
 801d37a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d37c:	f7ff fc04 	bl	801cb88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801d380:	e73e      	b.n	801d200 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d382:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d384:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d388:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d38a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d38e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d390:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d394:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d396:	141f      	asrs	r7, r3, #16
 801d398:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d39a:	141b      	asrs	r3, r3, #16
 801d39c:	fb01 3707 	mla	r7, r1, r7, r3
 801d3a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d3a2:	fa1f fc82 	uxth.w	ip, r2
 801d3a6:	eb03 0a07 	add.w	sl, r3, r7
 801d3aa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d3ae:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d3b2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d3b6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d3ba:	b29b      	uxth	r3, r3
 801d3bc:	2d00      	cmp	r5, #0
 801d3be:	f000 813d 	beq.w	801d63c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801d3c2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d3c6:	940f      	str	r4, [sp, #60]	; 0x3c
 801d3c8:	eb0a 0b01 	add.w	fp, sl, r1
 801d3cc:	fa1f fa85 	uxth.w	sl, r5
 801d3d0:	fb0a fc0c 	mul.w	ip, sl, ip
 801d3d4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d3d8:	fa1f fa8a 	uxth.w	sl, sl
 801d3dc:	eba0 000c 	sub.w	r0, r0, ip
 801d3e0:	eba3 030a 	sub.w	r3, r3, sl
 801d3e4:	b280      	uxth	r0, r0
 801d3e6:	fb08 f000 	mul.w	r0, r8, r0
 801d3ea:	b29b      	uxth	r3, r3
 801d3ec:	fb09 0303 	mla	r3, r9, r3, r0
 801d3f0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d3f2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d3f6:	9410      	str	r4, [sp, #64]	; 0x40
 801d3f8:	fb0a 3300 	mla	r3, sl, r0, r3
 801d3fc:	fb0c 3304 	mla	r3, ip, r4, r3
 801d400:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d404:	2b00      	cmp	r3, #0
 801d406:	f000 810b 	beq.w	801d620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d40a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d40c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d40e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d412:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d416:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d41a:	f000 8114 	beq.w	801d646 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801d41e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d422:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d426:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d42a:	fb09 f707 	mul.w	r7, r9, r7
 801d42e:	fb0a fc0c 	mul.w	ip, sl, ip
 801d432:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d436:	f107 0b20 	add.w	fp, r7, #32
 801d43a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d43e:	44cc      	add	ip, r9
 801d440:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d444:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d448:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d44c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d450:	ea4c 0909 	orr.w	r9, ip, r9
 801d454:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d458:	8847      	ldrh	r7, [r0, #2]
 801d45a:	d019      	beq.n	801d490 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801d45c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d460:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d464:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d468:	fb08 f807 	mul.w	r8, r8, r7
 801d46c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d470:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d474:	f108 0b20 	add.w	fp, r8, #32
 801d478:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d47c:	44bc      	add	ip, r7
 801d47e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d482:	0a3f      	lsrs	r7, r7, #8
 801d484:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d488:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d48c:	ea4c 0707 	orr.w	r7, ip, r7
 801d490:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d494:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d498:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d49c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d4a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d4a4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d4a8:	ea4c 0909 	orr.w	r9, ip, r9
 801d4ac:	ea4a 0707 	orr.w	r7, sl, r7
 801d4b0:	2d00      	cmp	r5, #0
 801d4b2:	f000 80ca 	beq.w	801d64a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d4b6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d4ba:	3901      	subs	r1, #1
 801d4bc:	0049      	lsls	r1, r1, #1
 801d4be:	3102      	adds	r1, #2
 801d4c0:	eb00 0c01 	add.w	ip, r0, r1
 801d4c4:	5a41      	ldrh	r1, [r0, r1]
 801d4c6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d4c8:	28ff      	cmp	r0, #255	; 0xff
 801d4ca:	d019      	beq.n	801d500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801d4cc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d4ce:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d4d2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d4d6:	fb04 fa01 	mul.w	sl, r4, r1
 801d4da:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d4de:	fb08 f800 	mul.w	r8, r8, r0
 801d4e2:	f10a 0020 	add.w	r0, sl, #32
 801d4e6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d4ea:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d4ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d4f2:	4441      	add	r1, r8
 801d4f4:	0a00      	lsrs	r0, r0, #8
 801d4f6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d4fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d4fe:	4301      	orrs	r1, r0
 801d500:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d502:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d506:	2cff      	cmp	r4, #255	; 0xff
 801d508:	d01a      	beq.n	801d540 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801d50a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d50e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d512:	fb04 fa00 	mul.w	sl, r4, r0
 801d516:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d51a:	fb08 f80c 	mul.w	r8, r8, ip
 801d51e:	f10a 0c20 	add.w	ip, sl, #32
 801d522:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d526:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d52a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d52e:	4440      	add	r0, r8
 801d530:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d534:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d538:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d53c:	ea40 000c 	orr.w	r0, r0, ip
 801d540:	fb15 fc02 	smulbb	ip, r5, r2
 801d544:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d548:	f1c5 0810 	rsb	r8, r5, #16
 801d54c:	eba8 0802 	sub.w	r8, r8, r2
 801d550:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d554:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d558:	437a      	muls	r2, r7
 801d55a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d55e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d562:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d566:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d56a:	fb09 2208 	mla	r2, r9, r8, r2
 801d56e:	ea4a 0101 	orr.w	r1, sl, r1
 801d572:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d576:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d57a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d57e:	fb05 2201 	mla	r2, r5, r1, r2
 801d582:	ea4b 0000 	orr.w	r0, fp, r0
 801d586:	fb0c 2200 	mla	r2, ip, r0, r2
 801d58a:	0d57      	lsrs	r7, r2, #21
 801d58c:	0952      	lsrs	r2, r2, #5
 801d58e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d592:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d596:	433a      	orrs	r2, r7
 801d598:	2bff      	cmp	r3, #255	; 0xff
 801d59a:	b292      	uxth	r2, r2
 801d59c:	d102      	bne.n	801d5a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d59e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d5a0:	29ff      	cmp	r1, #255	; 0xff
 801d5a2:	d063      	beq.n	801d66c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801d5a4:	980a      	ldr	r0, [sp, #40]	; 0x28
 801d5a6:	f8be 1000 	ldrh.w	r1, [lr]
 801d5aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d5ac:	4343      	muls	r3, r0
 801d5ae:	1c58      	adds	r0, r3, #1
 801d5b0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d5b4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d5b8:	1208      	asrs	r0, r1, #8
 801d5ba:	b2db      	uxtb	r3, r3
 801d5bc:	1215      	asrs	r5, r2, #8
 801d5be:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d5c2:	fb10 f003 	smulbb	r0, r0, r3
 801d5c6:	10cf      	asrs	r7, r1, #3
 801d5c8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d5cc:	00c9      	lsls	r1, r1, #3
 801d5ce:	fb05 0504 	mla	r5, r5, r4, r0
 801d5d2:	b2c9      	uxtb	r1, r1
 801d5d4:	10d0      	asrs	r0, r2, #3
 801d5d6:	00d2      	lsls	r2, r2, #3
 801d5d8:	fb11 f103 	smulbb	r1, r1, r3
 801d5dc:	b2d2      	uxtb	r2, r2
 801d5de:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d5e2:	fb02 1204 	mla	r2, r2, r4, r1
 801d5e6:	fb17 f703 	smulbb	r7, r7, r3
 801d5ea:	b2ad      	uxth	r5, r5
 801d5ec:	b292      	uxth	r2, r2
 801d5ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d5f2:	fb00 7004 	mla	r0, r0, r4, r7
 801d5f6:	1c6b      	adds	r3, r5, #1
 801d5f8:	1c57      	adds	r7, r2, #1
 801d5fa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d5fe:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d602:	b280      	uxth	r0, r0
 801d604:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d608:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d60c:	433d      	orrs	r5, r7
 801d60e:	1c47      	adds	r7, r0, #1
 801d610:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d614:	097f      	lsrs	r7, r7, #5
 801d616:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d61a:	433d      	orrs	r5, r7
 801d61c:	f8ae 5000 	strh.w	r5, [lr]
 801d620:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d622:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801d624:	4413      	add	r3, r2
 801d626:	9321      	str	r3, [sp, #132]	; 0x84
 801d628:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801d62a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d62c:	441a      	add	r2, r3
 801d62e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d630:	9222      	str	r2, [sp, #136]	; 0x88
 801d632:	3b01      	subs	r3, #1
 801d634:	f10e 0e02 	add.w	lr, lr, #2
 801d638:	9313      	str	r3, [sp, #76]	; 0x4c
 801d63a:	e61c      	b.n	801d276 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801d63c:	fb08 f000 	mul.w	r0, r8, r0
 801d640:	fb09 0303 	mla	r3, r9, r3, r0
 801d644:	e6dc      	b.n	801d400 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801d646:	46b9      	mov	r9, r7
 801d648:	e704      	b.n	801d454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801d64a:	f1c2 0110 	rsb	r1, r2, #16
 801d64e:	437a      	muls	r2, r7
 801d650:	fb09 2901 	mla	r9, r9, r1, r2
 801d654:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d658:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d65c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d660:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d664:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d668:	4302      	orrs	r2, r0
 801d66a:	e795      	b.n	801d598 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801d66c:	f8ae 2000 	strh.w	r2, [lr]
 801d670:	e7d6      	b.n	801d620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d672:	b017      	add	sp, #92	; 0x5c
 801d674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d678 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d678:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d67c:	b085      	sub	sp, #20
 801d67e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801d682:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801d686:	9103      	str	r1, [sp, #12]
 801d688:	fb00 7406 	mla	r4, r0, r6, r7
 801d68c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d690:	2800      	cmp	r0, #0
 801d692:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801d696:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801d69a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801d69e:	9501      	str	r5, [sp, #4]
 801d6a0:	eb02 0904 	add.w	r9, r2, r4
 801d6a4:	f2c0 8141 	blt.w	801d92a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d6a8:	4583      	cmp	fp, r0
 801d6aa:	f340 813e 	ble.w	801d92a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d6ae:	2f00      	cmp	r7, #0
 801d6b0:	f2c0 8137 	blt.w	801d922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d6b4:	42be      	cmp	r6, r7
 801d6b6:	f340 8134 	ble.w	801d922 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d6ba:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d6be:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d6c2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d6c6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801d6ca:	4355      	muls	r5, r2
 801d6cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d6d0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801d6d4:	fb0c f203 	mul.w	r2, ip, r3
 801d6d8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d6dc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801d6e0:	441d      	add	r5, r3
 801d6e2:	f102 0320 	add.w	r3, r2, #32
 801d6e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d6ea:	0a1b      	lsrs	r3, r3, #8
 801d6ec:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d6f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d6f4:	431c      	orrs	r4, r3
 801d6f6:	1c7b      	adds	r3, r7, #1
 801d6f8:	f100 811c 	bmi.w	801d934 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d6fc:	429e      	cmp	r6, r3
 801d6fe:	f340 8119 	ble.w	801d934 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d702:	2900      	cmp	r1, #0
 801d704:	f000 8119 	beq.w	801d93a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d708:	9a01      	ldr	r2, [sp, #4]
 801d70a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d70e:	8855      	ldrh	r5, [r2, #2]
 801d710:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d714:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801d718:	fb08 f802 	mul.w	r8, r8, r2
 801d71c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d720:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801d724:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d728:	435d      	muls	r5, r3
 801d72a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d72e:	44d0      	add	r8, sl
 801d730:	f105 0a20 	add.w	sl, r5, #32
 801d734:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d738:	0a2d      	lsrs	r5, r5, #8
 801d73a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d73e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d742:	432a      	orrs	r2, r5
 801d744:	3001      	adds	r0, #1
 801d746:	f100 80fe 	bmi.w	801d946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d74a:	4583      	cmp	fp, r0
 801d74c:	f340 80fb 	ble.w	801d946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d750:	f1be 0f00 	cmp.w	lr, #0
 801d754:	f000 80fc 	beq.w	801d950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d758:	2f00      	cmp	r7, #0
 801d75a:	f2c0 80f1 	blt.w	801d940 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d75e:	42be      	cmp	r6, r7
 801d760:	f340 80ee 	ble.w	801d940 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d764:	9801      	ldr	r0, [sp, #4]
 801d766:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d76a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d76e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d772:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801d776:	fb0a fa00 	mul.w	sl, sl, r0
 801d77a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801d77e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d782:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d786:	fb05 f808 	mul.w	r8, r5, r8
 801d78a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801d78e:	4482      	add	sl, r0
 801d790:	f108 0020 	add.w	r0, r8, #32
 801d794:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d798:	0a00      	lsrs	r0, r0, #8
 801d79a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d79e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7a2:	ea4b 0b00 	orr.w	fp, fp, r0
 801d7a6:	3701      	adds	r7, #1
 801d7a8:	f100 80d7 	bmi.w	801d95a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d7ac:	42be      	cmp	r6, r7
 801d7ae:	f340 80d4 	ble.w	801d95a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d7b2:	2900      	cmp	r1, #0
 801d7b4:	f000 80d4 	beq.w	801d960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d7b8:	3601      	adds	r6, #1
 801d7ba:	9801      	ldr	r0, [sp, #4]
 801d7bc:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d7c0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d7c4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d7c8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801d7cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7d0:	fb09 f906 	mul.w	r9, r9, r6
 801d7d4:	fb07 f800 	mul.w	r8, r7, r0
 801d7d8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801d7dc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d7e0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801d7e4:	44d1      	add	r9, sl
 801d7e6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d7ea:	f108 0020 	add.w	r0, r8, #32
 801d7ee:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d7f2:	0a00      	lsrs	r0, r0, #8
 801d7f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7f8:	4330      	orrs	r0, r6
 801d7fa:	b28e      	uxth	r6, r1
 801d7fc:	fa1f f98e 	uxth.w	r9, lr
 801d800:	fb06 f809 	mul.w	r8, r6, r9
 801d804:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d808:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d80c:	0136      	lsls	r6, r6, #4
 801d80e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d812:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801d816:	9601      	str	r6, [sp, #4]
 801d818:	ea4a 0404 	orr.w	r4, sl, r4
 801d81c:	fa1f f689 	uxth.w	r6, r9
 801d820:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d824:	fb11 f90e 	smulbb	r9, r1, lr
 801d828:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d82c:	9602      	str	r6, [sp, #8]
 801d82e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d832:	4626      	mov	r6, r4
 801d834:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d838:	f1ce 0410 	rsb	r4, lr, #16
 801d83c:	1a64      	subs	r4, r4, r1
 801d83e:	ea4a 0202 	orr.w	r2, sl, r2
 801d842:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d846:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d84a:	434a      	muls	r2, r1
 801d84c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d850:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d854:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d858:	fb04 2406 	mla	r4, r4, r6, r2
 801d85c:	ea4a 0000 	orr.w	r0, sl, r0
 801d860:	fb09 4200 	mla	r2, r9, r0, r4
 801d864:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d868:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d86c:	9801      	ldr	r0, [sp, #4]
 801d86e:	9903      	ldr	r1, [sp, #12]
 801d870:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d874:	ea44 0b0b 	orr.w	fp, r4, fp
 801d878:	9c02      	ldr	r4, [sp, #8]
 801d87a:	8809      	ldrh	r1, [r1, #0]
 801d87c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801d880:	1b00      	subs	r0, r0, r4
 801d882:	9c01      	ldr	r4, [sp, #4]
 801d884:	eba4 0608 	sub.w	r6, r4, r8
 801d888:	b2b6      	uxth	r6, r6
 801d88a:	b280      	uxth	r0, r0
 801d88c:	4373      	muls	r3, r6
 801d88e:	fb0c 3300 	mla	r3, ip, r0, r3
 801d892:	9802      	ldr	r0, [sp, #8]
 801d894:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d898:	fb00 3505 	mla	r5, r0, r5, r3
 801d89c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d8a0:	fb08 5707 	mla	r7, r8, r7, r5
 801d8a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d8a8:	120b      	asrs	r3, r1, #8
 801d8aa:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d8ae:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d8b2:	b2ff      	uxtb	r7, r7
 801d8b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8b8:	10c8      	asrs	r0, r1, #3
 801d8ba:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d8be:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d8c2:	00c9      	lsls	r1, r1, #3
 801d8c4:	437b      	muls	r3, r7
 801d8c6:	ea42 0e0e 	orr.w	lr, r2, lr
 801d8ca:	b2c9      	uxtb	r1, r1
 801d8cc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d8d0:	fa1f f28e 	uxth.w	r2, lr
 801d8d4:	4378      	muls	r0, r7
 801d8d6:	434f      	muls	r7, r1
 801d8d8:	1c59      	adds	r1, r3, #1
 801d8da:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d8de:	1213      	asrs	r3, r2, #8
 801d8e0:	f023 0307 	bic.w	r3, r3, #7
 801d8e4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d8e8:	1c41      	adds	r1, r0, #1
 801d8ea:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d8ee:	10d1      	asrs	r1, r2, #3
 801d8f0:	f021 0103 	bic.w	r1, r1, #3
 801d8f4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d8f8:	021b      	lsls	r3, r3, #8
 801d8fa:	00c9      	lsls	r1, r1, #3
 801d8fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d900:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801d904:	430b      	orrs	r3, r1
 801d906:	1c79      	adds	r1, r7, #1
 801d908:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d90c:	00d2      	lsls	r2, r2, #3
 801d90e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d912:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d916:	431a      	orrs	r2, r3
 801d918:	9b03      	ldr	r3, [sp, #12]
 801d91a:	801a      	strh	r2, [r3, #0]
 801d91c:	b005      	add	sp, #20
 801d91e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d922:	f04f 0c00 	mov.w	ip, #0
 801d926:	4664      	mov	r4, ip
 801d928:	e6e5      	b.n	801d6f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d92a:	2300      	movs	r3, #0
 801d92c:	469c      	mov	ip, r3
 801d92e:	461a      	mov	r2, r3
 801d930:	461c      	mov	r4, r3
 801d932:	e707      	b.n	801d744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d934:	2300      	movs	r3, #0
 801d936:	461a      	mov	r2, r3
 801d938:	e704      	b.n	801d744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d93a:	460b      	mov	r3, r1
 801d93c:	460a      	mov	r2, r1
 801d93e:	e701      	b.n	801d744 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d940:	2500      	movs	r5, #0
 801d942:	46ab      	mov	fp, r5
 801d944:	e72f      	b.n	801d7a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d946:	2700      	movs	r7, #0
 801d948:	463d      	mov	r5, r7
 801d94a:	4638      	mov	r0, r7
 801d94c:	46bb      	mov	fp, r7
 801d94e:	e754      	b.n	801d7fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d950:	4677      	mov	r7, lr
 801d952:	4675      	mov	r5, lr
 801d954:	4670      	mov	r0, lr
 801d956:	46f3      	mov	fp, lr
 801d958:	e74f      	b.n	801d7fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d95a:	2700      	movs	r7, #0
 801d95c:	4638      	mov	r0, r7
 801d95e:	e74c      	b.n	801d7fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d960:	460f      	mov	r7, r1
 801d962:	4608      	mov	r0, r1
 801d964:	e749      	b.n	801d7fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d968 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d96c:	b093      	sub	sp, #76	; 0x4c
 801d96e:	9210      	str	r2, [sp, #64]	; 0x40
 801d970:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801d972:	910e      	str	r1, [sp, #56]	; 0x38
 801d974:	9306      	str	r3, [sp, #24]
 801d976:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801d97a:	9011      	str	r0, [sp, #68]	; 0x44
 801d97c:	6850      	ldr	r0, [r2, #4]
 801d97e:	6812      	ldr	r2, [r2, #0]
 801d980:	fb00 1303 	mla	r3, r0, r3, r1
 801d984:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d988:	9307      	str	r3, [sp, #28]
 801d98a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d98c:	681b      	ldr	r3, [r3, #0]
 801d98e:	9308      	str	r3, [sp, #32]
 801d990:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d992:	685b      	ldr	r3, [r3, #4]
 801d994:	9309      	str	r3, [sp, #36]	; 0x24
 801d996:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d998:	2b00      	cmp	r3, #0
 801d99a:	dc03      	bgt.n	801d9a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d99c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d99e:	2b00      	cmp	r3, #0
 801d9a0:	f340 83b4 	ble.w	801e10c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d9a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d9a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d9aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d9ae:	1e48      	subs	r0, r1, #1
 801d9b0:	1e55      	subs	r5, r2, #1
 801d9b2:	9b06      	ldr	r3, [sp, #24]
 801d9b4:	2b00      	cmp	r3, #0
 801d9b6:	f340 8163 	ble.w	801dc80 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d9ba:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801d9bc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d9be:	1436      	asrs	r6, r6, #16
 801d9c0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d9c4:	d406      	bmi.n	801d9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d9c6:	4286      	cmp	r6, r0
 801d9c8:	da04      	bge.n	801d9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d9ca:	2b00      	cmp	r3, #0
 801d9cc:	db02      	blt.n	801d9d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d9ce:	42ab      	cmp	r3, r5
 801d9d0:	f2c0 8157 	blt.w	801dc82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d9d4:	3601      	adds	r6, #1
 801d9d6:	f100 8144 	bmi.w	801dc62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d9da:	42b1      	cmp	r1, r6
 801d9dc:	f2c0 8141 	blt.w	801dc62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d9e0:	3301      	adds	r3, #1
 801d9e2:	f100 813e 	bmi.w	801dc62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d9e6:	429a      	cmp	r2, r3
 801d9e8:	f2c0 813b 	blt.w	801dc62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d9ec:	9b06      	ldr	r3, [sp, #24]
 801d9ee:	9f07      	ldr	r7, [sp, #28]
 801d9f0:	930f      	str	r3, [sp, #60]	; 0x3c
 801d9f2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d9f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d9f8:	2b00      	cmp	r3, #0
 801d9fa:	f340 8164 	ble.w	801dcc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d9fe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801da00:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801da02:	1418      	asrs	r0, r3, #16
 801da04:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801da06:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801da0a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801da0c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801da10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801da12:	142d      	asrs	r5, r5, #16
 801da14:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801da18:	f100 81ee 	bmi.w	801ddf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801da1c:	f102 3eff 	add.w	lr, r2, #4294967295
 801da20:	4575      	cmp	r5, lr
 801da22:	f280 81e9 	bge.w	801ddf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801da26:	2800      	cmp	r0, #0
 801da28:	f2c0 81e6 	blt.w	801ddf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801da2c:	f103 3eff 	add.w	lr, r3, #4294967295
 801da30:	4570      	cmp	r0, lr
 801da32:	f280 81e1 	bge.w	801ddf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801da36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801da38:	b212      	sxth	r2, r2
 801da3a:	fb00 5002 	mla	r0, r0, r2, r5
 801da3e:	fa1f fe81 	uxth.w	lr, r1
 801da42:	eb03 0a00 	add.w	sl, r3, r0
 801da46:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801da4a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801da4e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801da52:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801da56:	b29b      	uxth	r3, r3
 801da58:	f1bc 0f00 	cmp.w	ip, #0
 801da5c:	f000 8179 	beq.w	801dd52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801da60:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801da64:	940a      	str	r4, [sp, #40]	; 0x28
 801da66:	eb0a 0b02 	add.w	fp, sl, r2
 801da6a:	fa1f fa8c 	uxth.w	sl, ip
 801da6e:	fb0a fe0e 	mul.w	lr, sl, lr
 801da72:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801da76:	fa1f fa8a 	uxth.w	sl, sl
 801da7a:	eba5 050e 	sub.w	r5, r5, lr
 801da7e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801da82:	940b      	str	r4, [sp, #44]	; 0x2c
 801da84:	eba3 030a 	sub.w	r3, r3, sl
 801da88:	b2ad      	uxth	r5, r5
 801da8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801da8c:	b29b      	uxth	r3, r3
 801da8e:	fb08 f505 	mul.w	r5, r8, r5
 801da92:	fb09 5303 	mla	r3, r9, r3, r5
 801da96:	fb0a 3304 	mla	r3, sl, r4, r3
 801da9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801da9c:	fb0e 3304 	mla	r3, lr, r4, r3
 801daa0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801daa4:	2b00      	cmp	r3, #0
 801daa6:	f000 80cf 	beq.w	801dc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801daaa:	9c08      	ldr	r4, [sp, #32]
 801daac:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dab0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801dab4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801dab8:	f000 8150 	beq.w	801dd5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801dabc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801dac0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801dac4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dac8:	fb09 f000 	mul.w	r0, r9, r0
 801dacc:	fb0a fe0e 	mul.w	lr, sl, lr
 801dad0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801dad4:	f100 0b20 	add.w	fp, r0, #32
 801dad8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801dadc:	44ce      	add	lr, r9
 801dade:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801dae2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dae6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801daea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801daee:	ea4e 0909 	orr.w	r9, lr, r9
 801daf2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801daf6:	8868      	ldrh	r0, [r5, #2]
 801daf8:	d019      	beq.n	801db2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801dafa:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801dafe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801db02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801db06:	fb08 f800 	mul.w	r8, r8, r0
 801db0a:	fb0a fe0e 	mul.w	lr, sl, lr
 801db0e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801db12:	f108 0b20 	add.w	fp, r8, #32
 801db16:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801db1a:	4486      	add	lr, r0
 801db1c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801db20:	0a00      	lsrs	r0, r0, #8
 801db22:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801db26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801db2a:	ea4e 0000 	orr.w	r0, lr, r0
 801db2e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801db32:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801db36:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801db3a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801db3e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801db42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801db46:	ea4e 0909 	orr.w	r9, lr, r9
 801db4a:	ea4a 0000 	orr.w	r0, sl, r0
 801db4e:	f1bc 0f00 	cmp.w	ip, #0
 801db52:	f000 8105 	beq.w	801dd60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801db56:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801db5a:	3a01      	subs	r2, #1
 801db5c:	0052      	lsls	r2, r2, #1
 801db5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801db60:	3202      	adds	r2, #2
 801db62:	2cff      	cmp	r4, #255	; 0xff
 801db64:	eb05 0e02 	add.w	lr, r5, r2
 801db68:	5aaa      	ldrh	r2, [r5, r2]
 801db6a:	d018      	beq.n	801db9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801db6c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801db70:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db74:	fb04 fa02 	mul.w	sl, r4, r2
 801db78:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801db7c:	fb08 f805 	mul.w	r8, r8, r5
 801db80:	f10a 0520 	add.w	r5, sl, #32
 801db84:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801db88:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801db8c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801db90:	4442      	add	r2, r8
 801db92:	0a2d      	lsrs	r5, r5, #8
 801db94:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801db98:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801db9c:	432a      	orrs	r2, r5
 801db9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801dba0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801dba4:	2cff      	cmp	r4, #255	; 0xff
 801dba6:	d01a      	beq.n	801dbde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801dba8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801dbac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dbb0:	fb04 fa05 	mul.w	sl, r4, r5
 801dbb4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dbb8:	fb08 f80e 	mul.w	r8, r8, lr
 801dbbc:	f10a 0e20 	add.w	lr, sl, #32
 801dbc0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801dbc4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801dbc8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801dbcc:	4445      	add	r5, r8
 801dbce:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dbd2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801dbd6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801dbda:	ea45 050e 	orr.w	r5, r5, lr
 801dbde:	fb1c fe01 	smulbb	lr, ip, r1
 801dbe2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801dbe6:	f1cc 0810 	rsb	r8, ip, #16
 801dbea:	eba8 0801 	sub.w	r8, r8, r1
 801dbee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801dbf2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801dbf6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801dbfa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801dbfe:	4341      	muls	r1, r0
 801dc00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dc04:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dc08:	ea4a 0202 	orr.w	r2, sl, r2
 801dc0c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801dc10:	fb09 1108 	mla	r1, r9, r8, r1
 801dc14:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dc18:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801dc1c:	fb0c 1102 	mla	r1, ip, r2, r1
 801dc20:	ea4b 0505 	orr.w	r5, fp, r5
 801dc24:	fb0e 1e05 	mla	lr, lr, r5, r1
 801dc28:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801dc2c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801dc30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dc34:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801dc38:	ea42 0e0e 	orr.w	lr, r2, lr
 801dc3c:	fa1f f28e 	uxth.w	r2, lr
 801dc40:	2bff      	cmp	r3, #255	; 0xff
 801dc42:	f040 80a1 	bne.w	801dd88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801dc46:	803a      	strh	r2, [r7, #0]
 801dc48:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801dc4a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801dc4c:	4413      	add	r3, r2
 801dc4e:	931d      	str	r3, [sp, #116]	; 0x74
 801dc50:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801dc52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc54:	441a      	add	r2, r3
 801dc56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dc58:	921e      	str	r2, [sp, #120]	; 0x78
 801dc5a:	3b01      	subs	r3, #1
 801dc5c:	3702      	adds	r7, #2
 801dc5e:	930f      	str	r3, [sp, #60]	; 0x3c
 801dc60:	e6c9      	b.n	801d9f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801dc62:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801dc64:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801dc66:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801dc68:	4433      	add	r3, r6
 801dc6a:	931d      	str	r3, [sp, #116]	; 0x74
 801dc6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc6e:	441c      	add	r4, r3
 801dc70:	9b06      	ldr	r3, [sp, #24]
 801dc72:	941e      	str	r4, [sp, #120]	; 0x78
 801dc74:	3b01      	subs	r3, #1
 801dc76:	9306      	str	r3, [sp, #24]
 801dc78:	9b07      	ldr	r3, [sp, #28]
 801dc7a:	3302      	adds	r3, #2
 801dc7c:	9307      	str	r3, [sp, #28]
 801dc7e:	e698      	b.n	801d9b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801dc80:	d028      	beq.n	801dcd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dc82:	9b06      	ldr	r3, [sp, #24]
 801dc84:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801dc86:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801dc88:	3b01      	subs	r3, #1
 801dc8a:	fb00 5003 	mla	r0, r0, r3, r5
 801dc8e:	1400      	asrs	r0, r0, #16
 801dc90:	f53f aeac 	bmi.w	801d9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dc94:	3901      	subs	r1, #1
 801dc96:	4288      	cmp	r0, r1
 801dc98:	f6bf aea8 	bge.w	801d9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dc9c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801dc9e:	981e      	ldr	r0, [sp, #120]	; 0x78
 801dca0:	fb01 0303 	mla	r3, r1, r3, r0
 801dca4:	141b      	asrs	r3, r3, #16
 801dca6:	f53f aea1 	bmi.w	801d9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dcaa:	3a01      	subs	r2, #1
 801dcac:	4293      	cmp	r3, r2
 801dcae:	f6bf ae9d 	bge.w	801d9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dcb2:	9b06      	ldr	r3, [sp, #24]
 801dcb4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801dcb8:	930f      	str	r3, [sp, #60]	; 0x3c
 801dcba:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801dcbe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dcc0:	2b00      	cmp	r3, #0
 801dcc2:	f300 80b6 	bgt.w	801de32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801dcc6:	9b06      	ldr	r3, [sp, #24]
 801dcc8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801dccc:	9b07      	ldr	r3, [sp, #28]
 801dcce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801dcd2:	9307      	str	r3, [sp, #28]
 801dcd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dcd6:	2b00      	cmp	r3, #0
 801dcd8:	f340 8218 	ble.w	801e10c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801dcdc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dce0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dce4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dce8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dcea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dcee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dcf2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dcf6:	eef0 6a62 	vmov.f32	s13, s5
 801dcfa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dcfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd02:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dd06:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801dd0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dd0e:	eef0 6a43 	vmov.f32	s13, s6
 801dd12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dd16:	ee12 2a90 	vmov	r2, s5
 801dd1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dd1e:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd22:	ee13 2a10 	vmov	r2, s6
 801dd26:	931f      	str	r3, [sp, #124]	; 0x7c
 801dd28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd2a:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd2e:	9320      	str	r3, [sp, #128]	; 0x80
 801dd30:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dd32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dd34:	3b01      	subs	r3, #1
 801dd36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd3a:	930e      	str	r3, [sp, #56]	; 0x38
 801dd3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd3e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801dd42:	bf08      	it	eq
 801dd44:	4613      	moveq	r3, r2
 801dd46:	9306      	str	r3, [sp, #24]
 801dd48:	eeb0 3a67 	vmov.f32	s6, s15
 801dd4c:	eef0 2a47 	vmov.f32	s5, s14
 801dd50:	e621      	b.n	801d996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801dd52:	fb08 f505 	mul.w	r5, r8, r5
 801dd56:	fb09 5303 	mla	r3, r9, r3, r5
 801dd5a:	e6a1      	b.n	801daa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801dd5c:	4681      	mov	r9, r0
 801dd5e:	e6c8      	b.n	801daf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801dd60:	f1c1 0210 	rsb	r2, r1, #16
 801dd64:	4341      	muls	r1, r0
 801dd66:	fb09 1902 	mla	r9, r9, r2, r1
 801dd6a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801dd6e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801dd72:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dd76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dd7a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801dd7e:	ea42 0909 	orr.w	r9, r2, r9
 801dd82:	fa1f f289 	uxth.w	r2, r9
 801dd86:	e75b      	b.n	801dc40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801dd88:	f8b7 c000 	ldrh.w	ip, [r7]
 801dd8c:	43db      	mvns	r3, r3
 801dd8e:	ea4f 202c 	mov.w	r0, ip, asr #8
 801dd92:	fa5f fe83 	uxtb.w	lr, r3
 801dd96:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dd9a:	fb00 f00e 	mul.w	r0, r0, lr
 801dd9e:	1c41      	adds	r1, r0, #1
 801dda0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801dda4:	1211      	asrs	r1, r2, #8
 801dda6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ddaa:	f021 0107 	bic.w	r1, r1, #7
 801ddae:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ddb2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ddb6:	48d7      	ldr	r0, [pc, #860]	; (801e114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801ddb8:	fb05 f50e 	mul.w	r5, r5, lr
 801ddbc:	b2c9      	uxtb	r1, r1
 801ddbe:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801ddc2:	1c69      	adds	r1, r5, #1
 801ddc4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ddc8:	10d1      	asrs	r1, r2, #3
 801ddca:	f021 0103 	bic.w	r1, r1, #3
 801ddce:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801ddd2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ddd6:	b2db      	uxtb	r3, r3
 801ddd8:	00c9      	lsls	r1, r1, #3
 801ddda:	fb03 f30e 	mul.w	r3, r3, lr
 801ddde:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dde2:	4301      	orrs	r1, r0
 801dde4:	1c58      	adds	r0, r3, #1
 801dde6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801ddea:	00d2      	lsls	r2, r2, #3
 801ddec:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ddf0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ddf4:	430a      	orrs	r2, r1
 801ddf6:	e726      	b.n	801dc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801ddf8:	f115 0e01 	adds.w	lr, r5, #1
 801ddfc:	f53f af24 	bmi.w	801dc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801de00:	4572      	cmp	r2, lr
 801de02:	f6ff af21 	blt.w	801dc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801de06:	f110 0e01 	adds.w	lr, r0, #1
 801de0a:	f53f af1d 	bmi.w	801dc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801de0e:	4573      	cmp	r3, lr
 801de10:	f6ff af1a 	blt.w	801dc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801de14:	b21b      	sxth	r3, r3
 801de16:	b212      	sxth	r2, r2
 801de18:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801de1c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801de20:	9301      	str	r3, [sp, #4]
 801de22:	9200      	str	r2, [sp, #0]
 801de24:	4639      	mov	r1, r7
 801de26:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801de2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801de2c:	f7ff fc24 	bl	801d678 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801de30:	e70a      	b.n	801dc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801de32:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801de34:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801de38:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801de3a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801de3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801de40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801de44:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801de46:	141f      	asrs	r7, r3, #16
 801de48:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801de4a:	141b      	asrs	r3, r3, #16
 801de4c:	fb01 3707 	mla	r7, r1, r7, r3
 801de50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801de52:	fa1f fc82 	uxth.w	ip, r2
 801de56:	eb03 0a07 	add.w	sl, r3, r7
 801de5a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801de5e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801de62:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801de66:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801de6a:	b29b      	uxth	r3, r3
 801de6c:	2d00      	cmp	r5, #0
 801de6e:	f000 80fe 	beq.w	801e06e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801de72:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801de76:	940c      	str	r4, [sp, #48]	; 0x30
 801de78:	eb0a 0b01 	add.w	fp, sl, r1
 801de7c:	fa1f fa85 	uxth.w	sl, r5
 801de80:	fb0a fc0c 	mul.w	ip, sl, ip
 801de84:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801de88:	fa1f fa8a 	uxth.w	sl, sl
 801de8c:	eba0 000c 	sub.w	r0, r0, ip
 801de90:	eba3 030a 	sub.w	r3, r3, sl
 801de94:	b280      	uxth	r0, r0
 801de96:	fb08 f000 	mul.w	r0, r8, r0
 801de9a:	b29b      	uxth	r3, r3
 801de9c:	fb09 0303 	mla	r3, r9, r3, r0
 801dea0:	980c      	ldr	r0, [sp, #48]	; 0x30
 801dea2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801dea6:	940d      	str	r4, [sp, #52]	; 0x34
 801dea8:	fb0a 3300 	mla	r3, sl, r0, r3
 801deac:	fb0c 3304 	mla	r3, ip, r4, r3
 801deb0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801deb4:	2b00      	cmp	r3, #0
 801deb6:	f000 80cc 	beq.w	801e052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801deba:	9808      	ldr	r0, [sp, #32]
 801debc:	9c08      	ldr	r4, [sp, #32]
 801debe:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801dec2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801dec6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801deca:	f000 80d5 	beq.w	801e078 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801dece:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801ded2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ded6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801deda:	fb09 f707 	mul.w	r7, r9, r7
 801dede:	fb0a fc0c 	mul.w	ip, sl, ip
 801dee2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801dee6:	f107 0b20 	add.w	fp, r7, #32
 801deea:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801deee:	44cc      	add	ip, r9
 801def0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801def4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801def8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801defc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801df00:	ea4c 0909 	orr.w	r9, ip, r9
 801df04:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801df08:	8847      	ldrh	r7, [r0, #2]
 801df0a:	d019      	beq.n	801df40 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801df0c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801df10:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801df14:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801df18:	fb08 f807 	mul.w	r8, r8, r7
 801df1c:	fb0a fc0c 	mul.w	ip, sl, ip
 801df20:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801df24:	f108 0b20 	add.w	fp, r8, #32
 801df28:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801df2c:	44bc      	add	ip, r7
 801df2e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801df32:	0a3f      	lsrs	r7, r7, #8
 801df34:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801df38:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801df3c:	ea4c 0707 	orr.w	r7, ip, r7
 801df40:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801df44:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801df48:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801df4c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801df50:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801df54:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801df58:	ea4c 0909 	orr.w	r9, ip, r9
 801df5c:	ea4a 0707 	orr.w	r7, sl, r7
 801df60:	2d00      	cmp	r5, #0
 801df62:	f000 808b 	beq.w	801e07c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801df66:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801df6a:	3901      	subs	r1, #1
 801df6c:	0049      	lsls	r1, r1, #1
 801df6e:	3102      	adds	r1, #2
 801df70:	eb00 0c01 	add.w	ip, r0, r1
 801df74:	5a41      	ldrh	r1, [r0, r1]
 801df76:	980c      	ldr	r0, [sp, #48]	; 0x30
 801df78:	28ff      	cmp	r0, #255	; 0xff
 801df7a:	d019      	beq.n	801dfb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801df7c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801df7e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801df82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801df86:	fb04 fa01 	mul.w	sl, r4, r1
 801df8a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801df8e:	fb08 f800 	mul.w	r8, r8, r0
 801df92:	f10a 0020 	add.w	r0, sl, #32
 801df96:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801df9a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801df9e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801dfa2:	4441      	add	r1, r8
 801dfa4:	0a00      	lsrs	r0, r0, #8
 801dfa6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801dfaa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dfae:	4301      	orrs	r1, r0
 801dfb0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801dfb2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801dfb6:	2cff      	cmp	r4, #255	; 0xff
 801dfb8:	d01a      	beq.n	801dff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801dfba:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801dfbe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dfc2:	fb04 fa00 	mul.w	sl, r4, r0
 801dfc6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dfca:	fb08 f80c 	mul.w	r8, r8, ip
 801dfce:	f10a 0c20 	add.w	ip, sl, #32
 801dfd2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801dfd6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801dfda:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801dfde:	4440      	add	r0, r8
 801dfe0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dfe4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801dfe8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801dfec:	ea40 000c 	orr.w	r0, r0, ip
 801dff0:	fb15 fc02 	smulbb	ip, r5, r2
 801dff4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801dff8:	f1c5 0810 	rsb	r8, r5, #16
 801dffc:	eba8 0802 	sub.w	r8, r8, r2
 801e000:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e004:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e008:	437a      	muls	r2, r7
 801e00a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e00e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e012:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e016:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e01a:	fb09 2208 	mla	r2, r9, r8, r2
 801e01e:	ea4a 0101 	orr.w	r1, sl, r1
 801e022:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e026:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e02a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e02e:	fb05 2201 	mla	r2, r5, r1, r2
 801e032:	ea4b 0000 	orr.w	r0, fp, r0
 801e036:	fb0c 2200 	mla	r2, ip, r0, r2
 801e03a:	0d57      	lsrs	r7, r2, #21
 801e03c:	0952      	lsrs	r2, r2, #5
 801e03e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e042:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e046:	433a      	orrs	r2, r7
 801e048:	2bff      	cmp	r3, #255	; 0xff
 801e04a:	b292      	uxth	r2, r2
 801e04c:	d127      	bne.n	801e09e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801e04e:	f8ae 2000 	strh.w	r2, [lr]
 801e052:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e054:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801e056:	4413      	add	r3, r2
 801e058:	931d      	str	r3, [sp, #116]	; 0x74
 801e05a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801e05c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e05e:	441a      	add	r2, r3
 801e060:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e062:	921e      	str	r2, [sp, #120]	; 0x78
 801e064:	3b01      	subs	r3, #1
 801e066:	f10e 0e02 	add.w	lr, lr, #2
 801e06a:	930f      	str	r3, [sp, #60]	; 0x3c
 801e06c:	e627      	b.n	801dcbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e06e:	fb08 f000 	mul.w	r0, r8, r0
 801e072:	fb09 0303 	mla	r3, r9, r3, r0
 801e076:	e71b      	b.n	801deb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801e078:	46b9      	mov	r9, r7
 801e07a:	e743      	b.n	801df04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801e07c:	f1c2 0110 	rsb	r1, r2, #16
 801e080:	437a      	muls	r2, r7
 801e082:	fb09 2901 	mla	r9, r9, r1, r2
 801e086:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e08a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e08e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e092:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e096:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e09a:	4302      	orrs	r2, r0
 801e09c:	e7d4      	b.n	801e048 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801e09e:	f8be 7000 	ldrh.w	r7, [lr]
 801e0a2:	4c1c      	ldr	r4, [pc, #112]	; (801e114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e0a4:	43db      	mvns	r3, r3
 801e0a6:	1238      	asrs	r0, r7, #8
 801e0a8:	fa5f fc83 	uxtb.w	ip, r3
 801e0ac:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e0b0:	10fd      	asrs	r5, r7, #3
 801e0b2:	fb00 f00c 	mul.w	r0, r0, ip
 801e0b6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e0ba:	fb05 f10c 	mul.w	r1, r5, ip
 801e0be:	1c45      	adds	r5, r0, #1
 801e0c0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e0c4:	1215      	asrs	r5, r2, #8
 801e0c6:	f025 0507 	bic.w	r5, r5, #7
 801e0ca:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801e0ce:	1c4d      	adds	r5, r1, #1
 801e0d0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801e0d4:	10d1      	asrs	r1, r2, #3
 801e0d6:	f021 0103 	bic.w	r1, r1, #3
 801e0da:	00fb      	lsls	r3, r7, #3
 801e0dc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e0e0:	b2db      	uxtb	r3, r3
 801e0e2:	b2c0      	uxtb	r0, r0
 801e0e4:	00c9      	lsls	r1, r1, #3
 801e0e6:	fb03 f30c 	mul.w	r3, r3, ip
 801e0ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e0ee:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801e0f2:	4308      	orrs	r0, r1
 801e0f4:	1c59      	adds	r1, r3, #1
 801e0f6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e0fa:	00d2      	lsls	r2, r2, #3
 801e0fc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e100:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801e104:	4318      	orrs	r0, r3
 801e106:	f8ae 0000 	strh.w	r0, [lr]
 801e10a:	e7a2      	b.n	801e052 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e10c:	b013      	add	sp, #76	; 0x4c
 801e10e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e112:	bf00      	nop
 801e114:	fffff800 	.word	0xfffff800

0801e118 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801e118:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e11c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801e120:	fb05 4c03 	mla	ip, r5, r3, r4
 801e124:	2d00      	cmp	r5, #0
 801e126:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801e12a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801e12e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801e132:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801e136:	8808      	ldrh	r0, [r1, #0]
 801e138:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801e13c:	f2c0 80a7 	blt.w	801e28e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e140:	45aa      	cmp	sl, r5
 801e142:	f340 80a4 	ble.w	801e28e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801e146:	2c00      	cmp	r4, #0
 801e148:	f2c0 809f 	blt.w	801e28a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e14c:	42a3      	cmp	r3, r4
 801e14e:	f340 809c 	ble.w	801e28a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801e152:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801e156:	1c62      	adds	r2, r4, #1
 801e158:	f100 809c 	bmi.w	801e294 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e15c:	4293      	cmp	r3, r2
 801e15e:	f340 8099 	ble.w	801e294 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e162:	f1b9 0f00 	cmp.w	r9, #0
 801e166:	f000 8095 	beq.w	801e294 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801e16a:	f8be c002 	ldrh.w	ip, [lr, #2]
 801e16e:	3501      	adds	r5, #1
 801e170:	f100 8094 	bmi.w	801e29c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e174:	45aa      	cmp	sl, r5
 801e176:	f340 8091 	ble.w	801e29c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e17a:	2f00      	cmp	r7, #0
 801e17c:	f000 808e 	beq.w	801e29c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801e180:	2c00      	cmp	r4, #0
 801e182:	f2c0 8089 	blt.w	801e298 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e186:	42a3      	cmp	r3, r4
 801e188:	f340 8086 	ble.w	801e298 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801e18c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801e190:	3401      	adds	r4, #1
 801e192:	f100 8086 	bmi.w	801e2a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e196:	42a3      	cmp	r3, r4
 801e198:	f340 8083 	ble.w	801e2a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e19c:	f1b9 0f00 	cmp.w	r9, #0
 801e1a0:	d07f      	beq.n	801e2a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801e1a2:	3301      	adds	r3, #1
 801e1a4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801e1a8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e1ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e1b0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e1b4:	fb19 fe07 	smulbb	lr, r9, r7
 801e1b8:	ea44 0808 	orr.w	r8, r4, r8
 801e1bc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e1c0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e1c4:	f1c7 0210 	rsb	r2, r7, #16
 801e1c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e1cc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e1d0:	ea44 0c0c 	orr.w	ip, r4, ip
 801e1d4:	eba2 0209 	sub.w	r2, r2, r9
 801e1d8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e1dc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e1e0:	fb04 f40c 	mul.w	r4, r4, ip
 801e1e4:	fb02 4808 	mla	r8, r2, r8, r4
 801e1e8:	041a      	lsls	r2, r3, #16
 801e1ea:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e1ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e1f2:	4313      	orrs	r3, r2
 801e1f4:	042a      	lsls	r2, r5, #16
 801e1f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e1fa:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e1fe:	fb0e 8303 	mla	r3, lr, r3, r8
 801e202:	432a      	orrs	r2, r5
 801e204:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e208:	fb07 3202 	mla	r2, r7, r2, r3
 801e20c:	0d53      	lsrs	r3, r2, #21
 801e20e:	0952      	lsrs	r2, r2, #5
 801e210:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e214:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e218:	431a      	orrs	r2, r3
 801e21a:	b293      	uxth	r3, r2
 801e21c:	b2b4      	uxth	r4, r6
 801e21e:	1202      	asrs	r2, r0, #8
 801e220:	43f6      	mvns	r6, r6
 801e222:	b2f6      	uxtb	r6, r6
 801e224:	121d      	asrs	r5, r3, #8
 801e226:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e22a:	fb12 f206 	smulbb	r2, r2, r6
 801e22e:	10c7      	asrs	r7, r0, #3
 801e230:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e234:	00c0      	lsls	r0, r0, #3
 801e236:	fb05 2504 	mla	r5, r5, r4, r2
 801e23a:	b2c0      	uxtb	r0, r0
 801e23c:	10da      	asrs	r2, r3, #3
 801e23e:	00db      	lsls	r3, r3, #3
 801e240:	b2db      	uxtb	r3, r3
 801e242:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e246:	fb10 f006 	smulbb	r0, r0, r6
 801e24a:	b2ad      	uxth	r5, r5
 801e24c:	fb03 0004 	mla	r0, r3, r4, r0
 801e250:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e254:	fb17 f706 	smulbb	r7, r7, r6
 801e258:	b280      	uxth	r0, r0
 801e25a:	1c6b      	adds	r3, r5, #1
 801e25c:	fb02 7204 	mla	r2, r2, r4, r7
 801e260:	b292      	uxth	r2, r2
 801e262:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e266:	1c43      	adds	r3, r0, #1
 801e268:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e26c:	1c50      	adds	r0, r2, #1
 801e26e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e272:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e276:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e27a:	0952      	lsrs	r2, r2, #5
 801e27c:	432b      	orrs	r3, r5
 801e27e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e282:	4313      	orrs	r3, r2
 801e284:	800b      	strh	r3, [r1, #0]
 801e286:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e28a:	4680      	mov	r8, r0
 801e28c:	e763      	b.n	801e156 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801e28e:	4684      	mov	ip, r0
 801e290:	4680      	mov	r8, r0
 801e292:	e76c      	b.n	801e16e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e294:	4684      	mov	ip, r0
 801e296:	e76a      	b.n	801e16e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801e298:	4605      	mov	r5, r0
 801e29a:	e779      	b.n	801e190 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801e29c:	4603      	mov	r3, r0
 801e29e:	4605      	mov	r5, r0
 801e2a0:	e782      	b.n	801e1a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801e2a2:	4603      	mov	r3, r0
 801e2a4:	e780      	b.n	801e1a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801e2a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e2a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e2aa:	b093      	sub	sp, #76	; 0x4c
 801e2ac:	461d      	mov	r5, r3
 801e2ae:	9210      	str	r2, [sp, #64]	; 0x40
 801e2b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e2b2:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801e2b6:	920b      	str	r2, [sp, #44]	; 0x2c
 801e2b8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801e2bc:	910a      	str	r1, [sp, #40]	; 0x28
 801e2be:	6859      	ldr	r1, [r3, #4]
 801e2c0:	681b      	ldr	r3, [r3, #0]
 801e2c2:	9011      	str	r0, [sp, #68]	; 0x44
 801e2c4:	fb01 2707 	mla	r7, r1, r7, r2
 801e2c8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801e2cc:	9307      	str	r3, [sp, #28]
 801e2ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e2d0:	681b      	ldr	r3, [r3, #0]
 801e2d2:	9309      	str	r3, [sp, #36]	; 0x24
 801e2d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e2d6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801e2da:	43db      	mvns	r3, r3
 801e2dc:	b2db      	uxtb	r3, r3
 801e2de:	9308      	str	r3, [sp, #32]
 801e2e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e2e2:	2b00      	cmp	r3, #0
 801e2e4:	dc03      	bgt.n	801e2ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e2e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e2e8:	2b00      	cmp	r3, #0
 801e2ea:	f340 8203 	ble.w	801e6f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e2ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e2f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e2f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e2f8:	1e48      	subs	r0, r1, #1
 801e2fa:	f102 3cff 	add.w	ip, r2, #4294967295
 801e2fe:	2d00      	cmp	r5, #0
 801e300:	f340 80da 	ble.w	801e4b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801e304:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e308:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e30c:	d406      	bmi.n	801e31c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e30e:	4586      	cmp	lr, r0
 801e310:	da04      	bge.n	801e31c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e312:	2b00      	cmp	r3, #0
 801e314:	db02      	blt.n	801e31c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801e316:	4563      	cmp	r3, ip
 801e318:	f2c0 80cf 	blt.w	801e4ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e31c:	f11e 0e01 	adds.w	lr, lr, #1
 801e320:	f100 80c1 	bmi.w	801e4a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e324:	4571      	cmp	r1, lr
 801e326:	f2c0 80be 	blt.w	801e4a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e32a:	3301      	adds	r3, #1
 801e32c:	f100 80bb 	bmi.w	801e4a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e330:	429a      	cmp	r2, r3
 801e332:	f2c0 80b8 	blt.w	801e4a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e336:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801e33a:	46a9      	mov	r9, r5
 801e33c:	f1b9 0f00 	cmp.w	r9, #0
 801e340:	f340 80d8 	ble.w	801e4f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801e344:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e346:	1421      	asrs	r1, r4, #16
 801e348:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e34c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e350:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e354:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e358:	f100 8111 	bmi.w	801e57e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e35c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e360:	4551      	cmp	r1, sl
 801e362:	f280 810c 	bge.w	801e57e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e366:	2800      	cmp	r0, #0
 801e368:	f2c0 8109 	blt.w	801e57e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e36c:	f103 3aff 	add.w	sl, r3, #4294967295
 801e370:	4550      	cmp	r0, sl
 801e372:	f280 8104 	bge.w	801e57e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e376:	fa0f f38e 	sxth.w	r3, lr
 801e37a:	fb00 1103 	mla	r1, r0, r3, r1
 801e37e:	9809      	ldr	r0, [sp, #36]	; 0x24
 801e380:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801e384:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801e388:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801e38c:	f1bc 0f00 	cmp.w	ip, #0
 801e390:	d007      	beq.n	801e3a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801e392:	005b      	lsls	r3, r3, #1
 801e394:	eb0a 0003 	add.w	r0, sl, r3
 801e398:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801e39c:	930c      	str	r3, [sp, #48]	; 0x30
 801e39e:	8843      	ldrh	r3, [r0, #2]
 801e3a0:	930d      	str	r3, [sp, #52]	; 0x34
 801e3a2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801e3a6:	fb12 f30c 	smulbb	r3, r2, ip
 801e3aa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e3ae:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e3b2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e3b6:	10db      	asrs	r3, r3, #3
 801e3b8:	ea40 000e 	orr.w	r0, r0, lr
 801e3bc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e3c0:	f1cc 0e10 	rsb	lr, ip, #16
 801e3c4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e3c8:	ebae 0e02 	sub.w	lr, lr, r2
 801e3cc:	ea4a 0101 	orr.w	r1, sl, r1
 801e3d0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e3d4:	4351      	muls	r1, r2
 801e3d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e3d8:	9f08      	ldr	r7, [sp, #32]
 801e3da:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e3de:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e3e2:	0410      	lsls	r0, r2, #16
 801e3e4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e3e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e3ec:	4310      	orrs	r0, r2
 801e3ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e3f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e3f2:	0412      	lsls	r2, r2, #16
 801e3f4:	fb03 e000 	mla	r0, r3, r0, lr
 801e3f8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e3fc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801e400:	ea42 020e 	orr.w	r2, r2, lr
 801e404:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e408:	fb03 0302 	mla	r3, r3, r2, r0
 801e40c:	0d5a      	lsrs	r2, r3, #21
 801e40e:	095b      	lsrs	r3, r3, #5
 801e410:	f8b8 0000 	ldrh.w	r0, [r8]
 801e414:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e418:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e41c:	4313      	orrs	r3, r2
 801e41e:	b29b      	uxth	r3, r3
 801e420:	1201      	asrs	r1, r0, #8
 801e422:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801e426:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e42a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e42e:	fb11 f107 	smulbb	r1, r1, r7
 801e432:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e436:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e43a:	00c0      	lsls	r0, r0, #3
 801e43c:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e440:	b2c0      	uxtb	r0, r0
 801e442:	10d9      	asrs	r1, r3, #3
 801e444:	00db      	lsls	r3, r3, #3
 801e446:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e44a:	b2db      	uxtb	r3, r3
 801e44c:	fb10 f007 	smulbb	r0, r0, r7
 801e450:	fa1f fc8c 	uxth.w	ip, ip
 801e454:	fb03 0302 	mla	r3, r3, r2, r0
 801e458:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e45c:	fb1e fe07 	smulbb	lr, lr, r7
 801e460:	fb01 e102 	mla	r1, r1, r2, lr
 801e464:	b29a      	uxth	r2, r3
 801e466:	f10c 0301 	add.w	r3, ip, #1
 801e46a:	b289      	uxth	r1, r1
 801e46c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e470:	1c53      	adds	r3, r2, #1
 801e472:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e476:	1c4a      	adds	r2, r1, #1
 801e478:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e47c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e480:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e484:	0949      	lsrs	r1, r1, #5
 801e486:	ea43 030c 	orr.w	r3, r3, ip
 801e48a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e48e:	430b      	orrs	r3, r1
 801e490:	f8a8 3000 	strh.w	r3, [r8]
 801e494:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e496:	441c      	add	r4, r3
 801e498:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e49a:	f108 0802 	add.w	r8, r8, #2
 801e49e:	441e      	add	r6, r3
 801e4a0:	f109 39ff 	add.w	r9, r9, #4294967295
 801e4a4:	e74a      	b.n	801e33c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e4a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e4a8:	441c      	add	r4, r3
 801e4aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e4ac:	441e      	add	r6, r3
 801e4ae:	9b07      	ldr	r3, [sp, #28]
 801e4b0:	3302      	adds	r3, #2
 801e4b2:	3d01      	subs	r5, #1
 801e4b4:	9307      	str	r3, [sp, #28]
 801e4b6:	e722      	b.n	801e2fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e4b8:	d022      	beq.n	801e500 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e4ba:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e4bc:	1e6b      	subs	r3, r5, #1
 801e4be:	fb00 4003 	mla	r0, r0, r3, r4
 801e4c2:	1400      	asrs	r0, r0, #16
 801e4c4:	f53f af37 	bmi.w	801e336 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e4c8:	3901      	subs	r1, #1
 801e4ca:	4288      	cmp	r0, r1
 801e4cc:	f6bf af33 	bge.w	801e336 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e4d0:	9920      	ldr	r1, [sp, #128]	; 0x80
 801e4d2:	fb01 6303 	mla	r3, r1, r3, r6
 801e4d6:	141b      	asrs	r3, r3, #16
 801e4d8:	f53f af2d 	bmi.w	801e336 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e4dc:	3a01      	subs	r2, #1
 801e4de:	4293      	cmp	r3, r2
 801e4e0:	f6bf af29 	bge.w	801e336 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e4e4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e4e8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801e4ec:	46a8      	mov	r8, r5
 801e4ee:	f1b8 0f00 	cmp.w	r8, #0
 801e4f2:	dc5e      	bgt.n	801e5b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e4f4:	9b07      	ldr	r3, [sp, #28]
 801e4f6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e4fa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e4fe:	9307      	str	r3, [sp, #28]
 801e500:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e502:	2b00      	cmp	r3, #0
 801e504:	f340 80f6 	ble.w	801e6f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e508:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e50c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e510:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e514:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e516:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e51a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e51e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e522:	eef0 6a62 	vmov.f32	s13, s5
 801e526:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e52a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e52e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e532:	ee16 4a90 	vmov	r4, s13
 801e536:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e53a:	eef0 6a43 	vmov.f32	s13, s6
 801e53e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e542:	ee12 2a90 	vmov	r2, s5
 801e546:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e54a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e54e:	ee13 2a10 	vmov	r2, s6
 801e552:	931f      	str	r3, [sp, #124]	; 0x7c
 801e554:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e556:	fb92 f3f3 	sdiv	r3, r2, r3
 801e55a:	9320      	str	r3, [sp, #128]	; 0x80
 801e55c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e55e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e560:	3b01      	subs	r3, #1
 801e562:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e566:	930a      	str	r3, [sp, #40]	; 0x28
 801e568:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e56a:	ee16 6a90 	vmov	r6, s13
 801e56e:	bf14      	ite	ne
 801e570:	461d      	movne	r5, r3
 801e572:	4615      	moveq	r5, r2
 801e574:	eeb0 3a67 	vmov.f32	s6, s15
 801e578:	eef0 2a47 	vmov.f32	s5, s14
 801e57c:	e6b0      	b.n	801e2e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e57e:	f111 0a01 	adds.w	sl, r1, #1
 801e582:	d487      	bmi.n	801e494 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e584:	45d6      	cmp	lr, sl
 801e586:	db85      	blt.n	801e494 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e588:	f110 0a01 	adds.w	sl, r0, #1
 801e58c:	d482      	bmi.n	801e494 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e58e:	4553      	cmp	r3, sl
 801e590:	db80      	blt.n	801e494 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e592:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801e594:	9101      	str	r1, [sp, #4]
 801e596:	b21b      	sxth	r3, r3
 801e598:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e59c:	9300      	str	r3, [sp, #0]
 801e59e:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e5a2:	fa0f f38e 	sxth.w	r3, lr
 801e5a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e5a8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e5aa:	4641      	mov	r1, r8
 801e5ac:	f7ff fdb4 	bl	801e118 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e5b0:	e770      	b.n	801e494 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e5b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e5b4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801e5b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e5ba:	1430      	asrs	r0, r6, #16
 801e5bc:	1423      	asrs	r3, r4, #16
 801e5be:	fb01 3000 	mla	r0, r1, r0, r3
 801e5c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5c4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e5c8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e5cc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e5d0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e5d4:	8858      	ldrh	r0, [r3, #2]
 801e5d6:	f1be 0f00 	cmp.w	lr, #0
 801e5da:	d00b      	beq.n	801e5f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e5dc:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801e5e0:	3901      	subs	r1, #1
 801e5e2:	0049      	lsls	r1, r1, #1
 801e5e4:	3102      	adds	r1, #2
 801e5e6:	eb03 0b01 	add.w	fp, r3, r1
 801e5ea:	5a5b      	ldrh	r3, [r3, r1]
 801e5ec:	930e      	str	r3, [sp, #56]	; 0x38
 801e5ee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e5f2:	930f      	str	r3, [sp, #60]	; 0x3c
 801e5f4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e5f8:	fb12 f30e 	smulbb	r3, r2, lr
 801e5fc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e600:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e604:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801e608:	10db      	asrs	r3, r3, #3
 801e60a:	ea41 010c 	orr.w	r1, r1, ip
 801e60e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e612:	f1ce 0c10 	rsb	ip, lr, #16
 801e616:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e61a:	ebac 0c02 	sub.w	ip, ip, r2
 801e61e:	ea4b 0000 	orr.w	r0, fp, r0
 801e622:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e626:	4350      	muls	r0, r2
 801e628:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e62a:	9f08      	ldr	r7, [sp, #32]
 801e62c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e630:	fb0c 0c01 	mla	ip, ip, r1, r0
 801e634:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e638:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801e63c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e63e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e640:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e644:	0412      	lsls	r2, r2, #16
 801e646:	ea4b 0101 	orr.w	r1, fp, r1
 801e64a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e64e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e652:	fb03 c101 	mla	r1, r3, r1, ip
 801e656:	4302      	orrs	r2, r0
 801e658:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e65c:	fb03 1202 	mla	r2, r3, r2, r1
 801e660:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e664:	0952      	lsrs	r2, r2, #5
 801e666:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801e66a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e66e:	f8b9 2000 	ldrh.w	r2, [r9]
 801e672:	ea4b 0303 	orr.w	r3, fp, r3
 801e676:	b29b      	uxth	r3, r3
 801e678:	1211      	asrs	r1, r2, #8
 801e67a:	1218      	asrs	r0, r3, #8
 801e67c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e680:	fb11 f107 	smulbb	r1, r1, r7
 801e684:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e688:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e68c:	00d2      	lsls	r2, r2, #3
 801e68e:	fb00 100a 	mla	r0, r0, sl, r1
 801e692:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e696:	10d9      	asrs	r1, r3, #3
 801e698:	b2d2      	uxtb	r2, r2
 801e69a:	00db      	lsls	r3, r3, #3
 801e69c:	fb1c fc07 	smulbb	ip, ip, r7
 801e6a0:	fb12 f207 	smulbb	r2, r2, r7
 801e6a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e6a8:	b2db      	uxtb	r3, r3
 801e6aa:	b280      	uxth	r0, r0
 801e6ac:	fb01 c10a 	mla	r1, r1, sl, ip
 801e6b0:	fb03 230a 	mla	r3, r3, sl, r2
 801e6b4:	b29b      	uxth	r3, r3
 801e6b6:	b289      	uxth	r1, r1
 801e6b8:	1c42      	adds	r2, r0, #1
 801e6ba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e6be:	f101 0c01 	add.w	ip, r1, #1
 801e6c2:	1c5a      	adds	r2, r3, #1
 801e6c4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e6c8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e6cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e6ce:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e6d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e6d6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e6da:	4310      	orrs	r0, r2
 801e6dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e6e0:	441c      	add	r4, r3
 801e6e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e6e4:	ea40 000c 	orr.w	r0, r0, ip
 801e6e8:	f829 0b02 	strh.w	r0, [r9], #2
 801e6ec:	441e      	add	r6, r3
 801e6ee:	f108 38ff 	add.w	r8, r8, #4294967295
 801e6f2:	e6fc      	b.n	801e4ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e6f4:	b013      	add	sp, #76	; 0x4c
 801e6f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e6fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e6fa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e6fe:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e702:	fb0e 4703 	mla	r7, lr, r3, r4
 801e706:	f1be 0f00 	cmp.w	lr, #0
 801e70a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e70e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801e712:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801e716:	8808      	ldrh	r0, [r1, #0]
 801e718:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e71c:	db60      	blt.n	801e7e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e71e:	45f1      	cmp	r9, lr
 801e720:	dd5e      	ble.n	801e7e0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e722:	2c00      	cmp	r4, #0
 801e724:	db5a      	blt.n	801e7dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e726:	42a3      	cmp	r3, r4
 801e728:	dd58      	ble.n	801e7dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e72a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e72e:	1c62      	adds	r2, r4, #1
 801e730:	d459      	bmi.n	801e7e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e732:	4293      	cmp	r3, r2
 801e734:	dd57      	ble.n	801e7e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e736:	2d00      	cmp	r5, #0
 801e738:	d055      	beq.n	801e7e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e73a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e73e:	f11e 0e01 	adds.w	lr, lr, #1
 801e742:	d454      	bmi.n	801e7ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e744:	45f1      	cmp	r9, lr
 801e746:	dd52      	ble.n	801e7ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e748:	2e00      	cmp	r6, #0
 801e74a:	d050      	beq.n	801e7ee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e74c:	2c00      	cmp	r4, #0
 801e74e:	db4c      	blt.n	801e7ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e750:	42a3      	cmp	r3, r4
 801e752:	dd4a      	ble.n	801e7ea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e754:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e758:	3401      	adds	r4, #1
 801e75a:	d405      	bmi.n	801e768 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e75c:	42a3      	cmp	r3, r4
 801e75e:	dd03      	ble.n	801e768 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e760:	b115      	cbz	r5, 801e768 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e762:	3301      	adds	r3, #1
 801e764:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e768:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e76c:	fb15 f406 	smulbb	r4, r5, r6
 801e770:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e774:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e778:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e77c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e780:	ea43 0c0c 	orr.w	ip, r3, ip
 801e784:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801e788:	f1c6 0310 	rsb	r3, r6, #16
 801e78c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e790:	1b5b      	subs	r3, r3, r5
 801e792:	ea4e 0707 	orr.w	r7, lr, r7
 801e796:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e79a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e79e:	437d      	muls	r5, r7
 801e7a0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e7a4:	0403      	lsls	r3, r0, #16
 801e7a6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e7aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e7ae:	4318      	orrs	r0, r3
 801e7b0:	0413      	lsls	r3, r2, #16
 801e7b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e7b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e7ba:	4313      	orrs	r3, r2
 801e7bc:	fb04 c000 	mla	r0, r4, r0, ip
 801e7c0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e7c4:	fb06 0003 	mla	r0, r6, r3, r0
 801e7c8:	0d43      	lsrs	r3, r0, #21
 801e7ca:	0940      	lsrs	r0, r0, #5
 801e7cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e7d0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e7d4:	4318      	orrs	r0, r3
 801e7d6:	8008      	strh	r0, [r1, #0]
 801e7d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e7dc:	4684      	mov	ip, r0
 801e7de:	e7a6      	b.n	801e72e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e7e0:	4607      	mov	r7, r0
 801e7e2:	4684      	mov	ip, r0
 801e7e4:	e7ab      	b.n	801e73e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e7e6:	4607      	mov	r7, r0
 801e7e8:	e7a9      	b.n	801e73e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e7ea:	4602      	mov	r2, r0
 801e7ec:	e7b4      	b.n	801e758 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e7ee:	4602      	mov	r2, r0
 801e7f0:	e7ba      	b.n	801e768 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e7f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7f6:	b08f      	sub	sp, #60	; 0x3c
 801e7f8:	461d      	mov	r5, r3
 801e7fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e7fc:	920c      	str	r2, [sp, #48]	; 0x30
 801e7fe:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801e802:	9107      	str	r1, [sp, #28]
 801e804:	6859      	ldr	r1, [r3, #4]
 801e806:	681b      	ldr	r3, [r3, #0]
 801e808:	900d      	str	r0, [sp, #52]	; 0x34
 801e80a:	fb01 2707 	mla	r7, r1, r7, r2
 801e80e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e812:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e814:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801e818:	f8d3 8000 	ldr.w	r8, [r3]
 801e81c:	9b07      	ldr	r3, [sp, #28]
 801e81e:	2b00      	cmp	r3, #0
 801e820:	dc03      	bgt.n	801e82a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e822:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e824:	2b00      	cmp	r3, #0
 801e826:	f340 8181 	ble.w	801eb2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e82a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e82c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e830:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e834:	1e48      	subs	r0, r1, #1
 801e836:	f102 3cff 	add.w	ip, r2, #4294967295
 801e83a:	2d00      	cmp	r5, #0
 801e83c:	f340 809b 	ble.w	801e976 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e840:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e844:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e848:	d406      	bmi.n	801e858 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e84a:	4586      	cmp	lr, r0
 801e84c:	da04      	bge.n	801e858 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e84e:	2b00      	cmp	r3, #0
 801e850:	db02      	blt.n	801e858 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e852:	4563      	cmp	r3, ip
 801e854:	f2c0 8090 	blt.w	801e978 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e858:	f11e 0e01 	adds.w	lr, lr, #1
 801e85c:	f100 8084 	bmi.w	801e968 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e860:	4571      	cmp	r1, lr
 801e862:	f2c0 8081 	blt.w	801e968 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e866:	3301      	adds	r3, #1
 801e868:	d47e      	bmi.n	801e968 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e86a:	429a      	cmp	r2, r3
 801e86c:	db7c      	blt.n	801e968 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e86e:	46aa      	mov	sl, r5
 801e870:	46b9      	mov	r9, r7
 801e872:	f1ba 0f00 	cmp.w	sl, #0
 801e876:	f340 8099 	ble.w	801e9ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e87a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e87c:	1421      	asrs	r1, r4, #16
 801e87e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e882:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e886:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e88a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e88e:	f100 80d0 	bmi.w	801ea32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e892:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e896:	4559      	cmp	r1, fp
 801e898:	f280 80cb 	bge.w	801ea32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e89c:	2800      	cmp	r0, #0
 801e89e:	f2c0 80c8 	blt.w	801ea32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e8a2:	f103 3bff 	add.w	fp, r3, #4294967295
 801e8a6:	4558      	cmp	r0, fp
 801e8a8:	f280 80c3 	bge.w	801ea32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e8ac:	fa0f fe8e 	sxth.w	lr, lr
 801e8b0:	fb00 110e 	mla	r1, r0, lr, r1
 801e8b4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e8b8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e8bc:	8841      	ldrh	r1, [r0, #2]
 801e8be:	f1bc 0f00 	cmp.w	ip, #0
 801e8c2:	d00b      	beq.n	801e8dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e8c4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801e8c8:	3b01      	subs	r3, #1
 801e8ca:	005b      	lsls	r3, r3, #1
 801e8cc:	3302      	adds	r3, #2
 801e8ce:	eb00 0e03 	add.w	lr, r0, r3
 801e8d2:	5ac3      	ldrh	r3, [r0, r3]
 801e8d4:	9308      	str	r3, [sp, #32]
 801e8d6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e8da:	9309      	str	r3, [sp, #36]	; 0x24
 801e8dc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e8e0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e8e4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801e8e8:	ea40 000b 	orr.w	r0, r0, fp
 801e8ec:	fb12 f30c 	smulbb	r3, r2, ip
 801e8f0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e8f4:	10db      	asrs	r3, r3, #3
 801e8f6:	f1cc 0e10 	rsb	lr, ip, #16
 801e8fa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e8fe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e902:	ebae 0e02 	sub.w	lr, lr, r2
 801e906:	ea4b 0101 	orr.w	r1, fp, r1
 801e90a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e90e:	4351      	muls	r1, r2
 801e910:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e912:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e916:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e91a:	0410      	lsls	r0, r2, #16
 801e91c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e920:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e924:	4310      	orrs	r0, r2
 801e926:	9a08      	ldr	r2, [sp, #32]
 801e928:	9908      	ldr	r1, [sp, #32]
 801e92a:	0412      	lsls	r2, r2, #16
 801e92c:	fb03 e000 	mla	r0, r3, r0, lr
 801e930:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e934:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801e938:	ea42 020e 	orr.w	r2, r2, lr
 801e93c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e940:	fb03 0302 	mla	r3, r3, r2, r0
 801e944:	0d5a      	lsrs	r2, r3, #21
 801e946:	095b      	lsrs	r3, r3, #5
 801e948:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e94c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e950:	4313      	orrs	r3, r2
 801e952:	f8a9 3000 	strh.w	r3, [r9]
 801e956:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e958:	441c      	add	r4, r3
 801e95a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e95c:	f109 0902 	add.w	r9, r9, #2
 801e960:	441e      	add	r6, r3
 801e962:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e966:	e784      	b.n	801e872 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e968:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e96a:	441c      	add	r4, r3
 801e96c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e96e:	3d01      	subs	r5, #1
 801e970:	441e      	add	r6, r3
 801e972:	3702      	adds	r7, #2
 801e974:	e761      	b.n	801e83a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e976:	d01d      	beq.n	801e9b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e978:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e97a:	1e6b      	subs	r3, r5, #1
 801e97c:	fb00 4003 	mla	r0, r0, r3, r4
 801e980:	1400      	asrs	r0, r0, #16
 801e982:	f53f af74 	bmi.w	801e86e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e986:	3901      	subs	r1, #1
 801e988:	4288      	cmp	r0, r1
 801e98a:	f6bf af70 	bge.w	801e86e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e98e:	991c      	ldr	r1, [sp, #112]	; 0x70
 801e990:	fb01 6303 	mla	r3, r1, r3, r6
 801e994:	141b      	asrs	r3, r3, #16
 801e996:	f53f af6a 	bmi.w	801e86e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e99a:	3a01      	subs	r2, #1
 801e99c:	4293      	cmp	r3, r2
 801e99e:	f6bf af66 	bge.w	801e86e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e9a2:	46a9      	mov	r9, r5
 801e9a4:	46ba      	mov	sl, r7
 801e9a6:	f1b9 0f00 	cmp.w	r9, #0
 801e9aa:	dc5a      	bgt.n	801ea62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e9ac:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e9b0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e9b4:	9b07      	ldr	r3, [sp, #28]
 801e9b6:	2b00      	cmp	r3, #0
 801e9b8:	f340 80b8 	ble.w	801eb2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e9bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e9c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e9c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e9c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e9ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e9ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e9d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e9d6:	eef0 6a62 	vmov.f32	s13, s5
 801e9da:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e9de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e9e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e9e6:	ee16 4a90 	vmov	r4, s13
 801e9ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e9ee:	eef0 6a43 	vmov.f32	s13, s6
 801e9f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e9f6:	ee12 2a90 	vmov	r2, s5
 801e9fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e9fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea02:	ee13 2a10 	vmov	r2, s6
 801ea06:	931b      	str	r3, [sp, #108]	; 0x6c
 801ea08:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ea0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea0e:	931c      	str	r3, [sp, #112]	; 0x70
 801ea10:	9b07      	ldr	r3, [sp, #28]
 801ea12:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ea14:	3b01      	subs	r3, #1
 801ea16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea1a:	9307      	str	r3, [sp, #28]
 801ea1c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ea1e:	ee16 6a90 	vmov	r6, s13
 801ea22:	bf14      	ite	ne
 801ea24:	461d      	movne	r5, r3
 801ea26:	4615      	moveq	r5, r2
 801ea28:	eeb0 3a67 	vmov.f32	s6, s15
 801ea2c:	eef0 2a47 	vmov.f32	s5, s14
 801ea30:	e6f4      	b.n	801e81c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ea32:	f111 0b01 	adds.w	fp, r1, #1
 801ea36:	d48e      	bmi.n	801e956 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ea38:	45de      	cmp	lr, fp
 801ea3a:	db8c      	blt.n	801e956 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ea3c:	f110 0b01 	adds.w	fp, r0, #1
 801ea40:	d489      	bmi.n	801e956 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ea42:	455b      	cmp	r3, fp
 801ea44:	db87      	blt.n	801e956 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ea46:	b21b      	sxth	r3, r3
 801ea48:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801ea4c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801ea50:	9300      	str	r3, [sp, #0]
 801ea52:	4642      	mov	r2, r8
 801ea54:	fa0f f38e 	sxth.w	r3, lr
 801ea58:	4649      	mov	r1, r9
 801ea5a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ea5c:	f7ff fe4d 	bl	801e6fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801ea60:	e779      	b.n	801e956 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ea62:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ea64:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ea68:	1420      	asrs	r0, r4, #16
 801ea6a:	1431      	asrs	r1, r6, #16
 801ea6c:	fb03 0101 	mla	r1, r3, r1, r0
 801ea70:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801ea74:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801ea78:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801ea7c:	8841      	ldrh	r1, [r0, #2]
 801ea7e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ea82:	f1be 0f00 	cmp.w	lr, #0
 801ea86:	d00b      	beq.n	801eaa0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801ea88:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801ea8c:	3b01      	subs	r3, #1
 801ea8e:	005b      	lsls	r3, r3, #1
 801ea90:	3302      	adds	r3, #2
 801ea92:	eb00 0b03 	add.w	fp, r0, r3
 801ea96:	5ac3      	ldrh	r3, [r0, r3]
 801ea98:	930a      	str	r3, [sp, #40]	; 0x28
 801ea9a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ea9e:	930b      	str	r3, [sp, #44]	; 0x2c
 801eaa0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801eaa4:	fb12 f30e 	smulbb	r3, r2, lr
 801eaa8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801eaac:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801eab0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801eab4:	10db      	asrs	r3, r3, #3
 801eab6:	ea40 000c 	orr.w	r0, r0, ip
 801eaba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801eabe:	f1ce 0c10 	rsb	ip, lr, #16
 801eac2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801eac6:	ebac 0c02 	sub.w	ip, ip, r2
 801eaca:	ea4b 0101 	orr.w	r1, fp, r1
 801eace:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ead2:	4351      	muls	r1, r2
 801ead4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ead6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801eada:	fb0c 1c00 	mla	ip, ip, r0, r1
 801eade:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801eae2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801eae6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801eae8:	990a      	ldr	r1, [sp, #40]	; 0x28
 801eaea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801eaee:	0412      	lsls	r2, r2, #16
 801eaf0:	ea4b 0000 	orr.w	r0, fp, r0
 801eaf4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801eaf8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801eafc:	fb03 c000 	mla	r0, r3, r0, ip
 801eb00:	ea42 0b0b 	orr.w	fp, r2, fp
 801eb04:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801eb08:	fb03 000b 	mla	r0, r3, fp, r0
 801eb0c:	0d43      	lsrs	r3, r0, #21
 801eb0e:	0940      	lsrs	r0, r0, #5
 801eb10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eb14:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801eb18:	4318      	orrs	r0, r3
 801eb1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801eb1c:	f82a 0b02 	strh.w	r0, [sl], #2
 801eb20:	441c      	add	r4, r3
 801eb22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801eb24:	f109 39ff 	add.w	r9, r9, #4294967295
 801eb28:	441e      	add	r6, r3
 801eb2a:	e73c      	b.n	801e9a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801eb2c:	b00f      	add	sp, #60	; 0x3c
 801eb2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801eb32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801eb32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb36:	b085      	sub	sp, #20
 801eb38:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801eb3c:	9102      	str	r1, [sp, #8]
 801eb3e:	2c00      	cmp	r4, #0
 801eb40:	fb04 7103 	mla	r1, r4, r3, r7
 801eb44:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801eb48:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801eb4c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801eb50:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801eb54:	f2c0 811b 	blt.w	801ed8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801eb58:	45a6      	cmp	lr, r4
 801eb5a:	f340 8118 	ble.w	801ed8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801eb5e:	2f00      	cmp	r7, #0
 801eb60:	f2c0 8113 	blt.w	801ed8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801eb64:	42bb      	cmp	r3, r7
 801eb66:	f340 8110 	ble.w	801ed8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801eb6a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801eb6e:	1c7a      	adds	r2, r7, #1
 801eb70:	f100 8110 	bmi.w	801ed94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801eb74:	4293      	cmp	r3, r2
 801eb76:	f340 810d 	ble.w	801ed94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801eb7a:	2e00      	cmp	r6, #0
 801eb7c:	f000 810c 	beq.w	801ed98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801eb80:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801eb84:	3401      	adds	r4, #1
 801eb86:	f100 810b 	bmi.w	801eda0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801eb8a:	45a6      	cmp	lr, r4
 801eb8c:	f340 8108 	ble.w	801eda0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801eb90:	2800      	cmp	r0, #0
 801eb92:	f000 8108 	beq.w	801eda6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801eb96:	2f00      	cmp	r7, #0
 801eb98:	f2c0 8100 	blt.w	801ed9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801eb9c:	42bb      	cmp	r3, r7
 801eb9e:	f340 80fd 	ble.w	801ed9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801eba2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801eba6:	3701      	adds	r7, #1
 801eba8:	f100 8100 	bmi.w	801edac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ebac:	42bb      	cmp	r3, r7
 801ebae:	f340 80fd 	ble.w	801edac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801ebb2:	2e00      	cmp	r6, #0
 801ebb4:	f000 80fc 	beq.w	801edb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801ebb8:	3301      	adds	r3, #1
 801ebba:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801ebbe:	b2b6      	uxth	r6, r6
 801ebc0:	b280      	uxth	r0, r0
 801ebc2:	fb00 fe06 	mul.w	lr, r0, r6
 801ebc6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ebca:	0136      	lsls	r6, r6, #4
 801ebcc:	eba6 070e 	sub.w	r7, r6, lr
 801ebd0:	b280      	uxth	r0, r0
 801ebd2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ebd6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ebda:	b2bf      	uxth	r7, r7
 801ebdc:	1a1b      	subs	r3, r3, r0
 801ebde:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ebe2:	b29b      	uxth	r3, r3
 801ebe4:	fb0a f607 	mul.w	r6, sl, r7
 801ebe8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ebec:	fb0b 6603 	mla	r6, fp, r3, r6
 801ebf0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ebf4:	fb00 6609 	mla	r6, r0, r9, r6
 801ebf8:	fb0e 6608 	mla	r6, lr, r8, r6
 801ebfc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ec00:	9600      	str	r6, [sp, #0]
 801ec02:	2e00      	cmp	r6, #0
 801ec04:	f000 80be 	beq.w	801ed84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801ec08:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ec0c:	fb0b fc0c 	mul.w	ip, fp, ip
 801ec10:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ec14:	fb0b f505 	mul.w	r5, fp, r5
 801ec18:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ec1c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ec20:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ec24:	44dc      	add	ip, fp
 801ec26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec2a:	9501      	str	r5, [sp, #4]
 801ec2c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ec30:	9503      	str	r5, [sp, #12]
 801ec32:	9d01      	ldr	r5, [sp, #4]
 801ec34:	9e02      	ldr	r6, [sp, #8]
 801ec36:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ec3a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ec3e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ec42:	fb0a fc0c 	mul.w	ip, sl, ip
 801ec46:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ec4a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ec4e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ec52:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ec56:	4465      	add	r5, ip
 801ec58:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ec5c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ec60:	fb09 fc0c 	mul.w	ip, r9, ip
 801ec64:	fb09 f904 	mul.w	r9, r9, r4
 801ec68:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ec6c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ec70:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ec74:	fb08 f404 	mul.w	r4, r8, r4
 801ec78:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ec7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ec80:	fb08 f802 	mul.w	r8, r8, r2
 801ec84:	fb0a fa01 	mul.w	sl, sl, r1
 801ec88:	0a22      	lsrs	r2, r4, #8
 801ec8a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ec8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ec92:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ec96:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ec9a:	4414      	add	r4, r2
 801ec9c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801eca0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801eca4:	0a2d      	lsrs	r5, r5, #8
 801eca6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ecaa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ecae:	9a03      	ldr	r2, [sp, #12]
 801ecb0:	8836      	ldrh	r6, [r6, #0]
 801ecb2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ecb6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ecba:	437d      	muls	r5, r7
 801ecbc:	4461      	add	r1, ip
 801ecbe:	0a24      	lsrs	r4, r4, #8
 801ecc0:	fb02 5503 	mla	r5, r2, r3, r5
 801ecc4:	0a09      	lsrs	r1, r1, #8
 801ecc6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ecca:	fb04 540e 	mla	r4, r4, lr, r5
 801ecce:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ecd2:	fb01 4100 	mla	r1, r1, r0, r4
 801ecd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecda:	0a09      	lsrs	r1, r1, #8
 801ecdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ece0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ece4:	fb07 f70a 	mul.w	r7, r7, sl
 801ece8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ecec:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ecf0:	fb03 7101 	mla	r1, r3, r1, r7
 801ecf4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ecf8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ecfc:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ed00:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ed04:	fb00 e101 	mla	r1, r0, r1, lr
 801ed08:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ed0c:	9a00      	ldr	r2, [sp, #0]
 801ed0e:	b287      	uxth	r7, r0
 801ed10:	437a      	muls	r2, r7
 801ed12:	0a09      	lsrs	r1, r1, #8
 801ed14:	1c53      	adds	r3, r2, #1
 801ed16:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ed1a:	4321      	orrs	r1, r4
 801ed1c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ed20:	1235      	asrs	r5, r6, #8
 801ed22:	0c0a      	lsrs	r2, r1, #16
 801ed24:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ed28:	b2db      	uxtb	r3, r3
 801ed2a:	fb12 f207 	smulbb	r2, r2, r7
 801ed2e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ed32:	fb05 2503 	mla	r5, r5, r3, r2
 801ed36:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ed3a:	10f2      	asrs	r2, r6, #3
 801ed3c:	b2c8      	uxtb	r0, r1
 801ed3e:	00f6      	lsls	r6, r6, #3
 801ed40:	fb14 f407 	smulbb	r4, r4, r7
 801ed44:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ed48:	b2f6      	uxtb	r6, r6
 801ed4a:	fb10 f007 	smulbb	r0, r0, r7
 801ed4e:	fb02 4203 	mla	r2, r2, r3, r4
 801ed52:	b2ad      	uxth	r5, r5
 801ed54:	fb06 0303 	mla	r3, r6, r3, r0
 801ed58:	b299      	uxth	r1, r3
 801ed5a:	b294      	uxth	r4, r2
 801ed5c:	1c6b      	adds	r3, r5, #1
 801ed5e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ed62:	1c62      	adds	r2, r4, #1
 801ed64:	1c4b      	adds	r3, r1, #1
 801ed66:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ed6a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ed6e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ed72:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ed76:	0952      	lsrs	r2, r2, #5
 801ed78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed7c:	432b      	orrs	r3, r5
 801ed7e:	4313      	orrs	r3, r2
 801ed80:	9a02      	ldr	r2, [sp, #8]
 801ed82:	8013      	strh	r3, [r2, #0]
 801ed84:	b005      	add	sp, #20
 801ed86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed8a:	2500      	movs	r5, #0
 801ed8c:	e6ef      	b.n	801eb6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801ed8e:	2100      	movs	r1, #0
 801ed90:	460d      	mov	r5, r1
 801ed92:	e6f7      	b.n	801eb84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ed94:	2100      	movs	r1, #0
 801ed96:	e6f5      	b.n	801eb84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ed98:	4631      	mov	r1, r6
 801ed9a:	e6f3      	b.n	801eb84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ed9c:	2400      	movs	r4, #0
 801ed9e:	e702      	b.n	801eba6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801eda0:	2200      	movs	r2, #0
 801eda2:	4614      	mov	r4, r2
 801eda4:	e70b      	b.n	801ebbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801eda6:	4602      	mov	r2, r0
 801eda8:	4604      	mov	r4, r0
 801edaa:	e708      	b.n	801ebbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801edac:	2200      	movs	r2, #0
 801edae:	e706      	b.n	801ebbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801edb0:	4632      	mov	r2, r6
 801edb2:	e704      	b.n	801ebbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801edb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801edb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edb8:	b09d      	sub	sp, #116	; 0x74
 801edba:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801edbe:	9219      	str	r2, [sp, #100]	; 0x64
 801edc0:	9307      	str	r3, [sp, #28]
 801edc2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801edc4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801edc8:	931a      	str	r3, [sp, #104]	; 0x68
 801edca:	9117      	str	r1, [sp, #92]	; 0x5c
 801edcc:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801edd0:	901b      	str	r0, [sp, #108]	; 0x6c
 801edd2:	6850      	ldr	r0, [r2, #4]
 801edd4:	6812      	ldr	r2, [r2, #0]
 801edd6:	fb00 1303 	mla	r3, r0, r3, r1
 801edda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801edde:	930a      	str	r3, [sp, #40]	; 0x28
 801ede0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ede2:	681b      	ldr	r3, [r3, #0]
 801ede4:	9310      	str	r3, [sp, #64]	; 0x40
 801ede6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801edea:	930b      	str	r3, [sp, #44]	; 0x2c
 801edec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801edee:	2b00      	cmp	r3, #0
 801edf0:	dc03      	bgt.n	801edfa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801edf2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801edf4:	2b00      	cmp	r3, #0
 801edf6:	f340 8375 	ble.w	801f4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801edfa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801edfc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee00:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee04:	1e48      	subs	r0, r1, #1
 801ee06:	1e57      	subs	r7, r2, #1
 801ee08:	9b07      	ldr	r3, [sp, #28]
 801ee0a:	2b00      	cmp	r3, #0
 801ee0c:	f340 818e 	ble.w	801f12c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ee10:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ee14:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ee18:	d406      	bmi.n	801ee28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ee1a:	4584      	cmp	ip, r0
 801ee1c:	da04      	bge.n	801ee28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ee1e:	2b00      	cmp	r3, #0
 801ee20:	db02      	blt.n	801ee28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ee22:	42bb      	cmp	r3, r7
 801ee24:	f2c0 8183 	blt.w	801f12e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801ee28:	f11c 0c01 	adds.w	ip, ip, #1
 801ee2c:	f100 8173 	bmi.w	801f116 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ee30:	4561      	cmp	r1, ip
 801ee32:	f2c0 8170 	blt.w	801f116 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ee36:	3301      	adds	r3, #1
 801ee38:	f100 816d 	bmi.w	801f116 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ee3c:	429a      	cmp	r2, r3
 801ee3e:	f2c0 816a 	blt.w	801f116 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801ee42:	9b07      	ldr	r3, [sp, #28]
 801ee44:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ee46:	9318      	str	r3, [sp, #96]	; 0x60
 801ee48:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ee4a:	2b00      	cmp	r3, #0
 801ee4c:	f340 818c 	ble.w	801f168 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801ee50:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801ee52:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ee54:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ee58:	689b      	ldr	r3, [r3, #8]
 801ee5a:	1422      	asrs	r2, r4, #16
 801ee5c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ee60:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ee64:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ee68:	f100 81cd 	bmi.w	801f206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ee6c:	f103 38ff 	add.w	r8, r3, #4294967295
 801ee70:	4542      	cmp	r2, r8
 801ee72:	f280 81c8 	bge.w	801f206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ee76:	f1bc 0f00 	cmp.w	ip, #0
 801ee7a:	f2c0 81c4 	blt.w	801f206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ee7e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ee82:	45c4      	cmp	ip, r8
 801ee84:	f280 81bf 	bge.w	801f206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ee88:	b21b      	sxth	r3, r3
 801ee8a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ee8e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ee90:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ee94:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ee98:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ee9c:	2800      	cmp	r0, #0
 801ee9e:	f000 81a9 	beq.w	801f1f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801eea2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801eea6:	950c      	str	r5, [sp, #48]	; 0x30
 801eea8:	0e2d      	lsrs	r5, r5, #24
 801eeaa:	9513      	str	r5, [sp, #76]	; 0x4c
 801eeac:	b181      	cbz	r1, 801eed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eeae:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801eeb2:	3b01      	subs	r3, #1
 801eeb4:	009b      	lsls	r3, r3, #2
 801eeb6:	3304      	adds	r3, #4
 801eeb8:	eb08 0c03 	add.w	ip, r8, r3
 801eebc:	f858 3003 	ldr.w	r3, [r8, r3]
 801eec0:	9308      	str	r3, [sp, #32]
 801eec2:	0e1b      	lsrs	r3, r3, #24
 801eec4:	9311      	str	r3, [sp, #68]	; 0x44
 801eec6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801eeca:	930d      	str	r3, [sp, #52]	; 0x34
 801eecc:	0e1b      	lsrs	r3, r3, #24
 801eece:	9314      	str	r3, [sp, #80]	; 0x50
 801eed0:	b280      	uxth	r0, r0
 801eed2:	b289      	uxth	r1, r1
 801eed4:	fb00 f901 	mul.w	r9, r0, r1
 801eed8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801eedc:	0100      	lsls	r0, r0, #4
 801eede:	eba0 0809 	sub.w	r8, r0, r9
 801eee2:	b289      	uxth	r1, r1
 801eee4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801eee8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801eeea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eeec:	fa1f f888 	uxth.w	r8, r8
 801eef0:	1a5b      	subs	r3, r3, r1
 801eef2:	b29b      	uxth	r3, r3
 801eef4:	fb08 f000 	mul.w	r0, r8, r0
 801eef8:	fb03 000e 	mla	r0, r3, lr, r0
 801eefc:	fb01 0005 	mla	r0, r1, r5, r0
 801ef00:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ef02:	fb09 0005 	mla	r0, r9, r5, r0
 801ef06:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ef0a:	2800      	cmp	r0, #0
 801ef0c:	f000 80fa 	beq.w	801f104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ef10:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ef14:	d01b      	beq.n	801ef4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801ef16:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ef1a:	fb0e fa0a 	mul.w	sl, lr, sl
 801ef1e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ef22:	fb0e fe02 	mul.w	lr, lr, r2
 801ef26:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ef2a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ef2e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ef32:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ef36:	4452      	add	r2, sl
 801ef38:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ef3c:	0a12      	lsrs	r2, r2, #8
 801ef3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef42:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ef46:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ef4a:	ea42 020c 	orr.w	r2, r2, ip
 801ef4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ef50:	2dff      	cmp	r5, #255	; 0xff
 801ef52:	d021      	beq.n	801ef98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ef54:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ef56:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ef5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ef5c:	fb05 fb0b 	mul.w	fp, r5, fp
 801ef60:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ef62:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ef66:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ef68:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ef6c:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ef74:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ef78:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ef7c:	44de      	add	lr, fp
 801ef7e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ef82:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ef86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ef8e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef92:	ea4e 050a 	orr.w	r5, lr, sl
 801ef96:	950c      	str	r5, [sp, #48]	; 0x30
 801ef98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef9a:	2dff      	cmp	r5, #255	; 0xff
 801ef9c:	d021      	beq.n	801efe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801ef9e:	9d08      	ldr	r5, [sp, #32]
 801efa0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801efa4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801efa6:	fb05 fb0b 	mul.w	fp, r5, fp
 801efaa:	9d08      	ldr	r5, [sp, #32]
 801efac:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801efb0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801efb2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801efb6:	fb05 fa0a 	mul.w	sl, r5, sl
 801efba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801efbe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801efc2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801efc6:	44de      	add	lr, fp
 801efc8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801efcc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801efd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801efd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801efdc:	ea4e 050a 	orr.w	r5, lr, sl
 801efe0:	9508      	str	r5, [sp, #32]
 801efe2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801efe4:	2dff      	cmp	r5, #255	; 0xff
 801efe6:	d021      	beq.n	801f02c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801efe8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801efea:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801efee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eff0:	fb05 fb0b 	mul.w	fp, r5, fp
 801eff4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801eff6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801effa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801effc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f000:	fb05 fa0a 	mul.w	sl, r5, sl
 801f004:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f008:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f00c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f010:	44de      	add	lr, fp
 801f012:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f016:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f01a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f01e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f022:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f026:	ea4e 050a 	orr.w	r5, lr, sl
 801f02a:	950d      	str	r5, [sp, #52]	; 0x34
 801f02c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f02e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f032:	9d08      	ldr	r5, [sp, #32]
 801f034:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801f038:	fb08 fc0c 	mul.w	ip, r8, ip
 801f03c:	fb03 cc0e 	mla	ip, r3, lr, ip
 801f040:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f044:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f046:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f04a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f04e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f050:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f054:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f058:	fb08 f80e 	mul.w	r8, r8, lr
 801f05c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f060:	fb03 8202 	mla	r2, r3, r2, r8
 801f064:	9b08      	ldr	r3, [sp, #32]
 801f066:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f068:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801f06c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f06e:	fb01 220a 	mla	r2, r1, sl, r2
 801f072:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801f076:	fb09 2901 	mla	r9, r9, r1, r2
 801f07a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f07c:	883b      	ldrh	r3, [r7, #0]
 801f07e:	4342      	muls	r2, r0
 801f080:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f084:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f088:	1c50      	adds	r0, r2, #1
 801f08a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f08e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f092:	ea4c 0c09 	orr.w	ip, ip, r9
 801f096:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801f09a:	1219      	asrs	r1, r3, #8
 801f09c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801f0a0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801f0a4:	b2c0      	uxtb	r0, r0
 801f0a6:	fb12 f205 	smulbb	r2, r2, r5
 801f0aa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f0ae:	fb01 2100 	mla	r1, r1, r0, r2
 801f0b2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801f0b6:	10da      	asrs	r2, r3, #3
 801f0b8:	fa5f fc8c 	uxtb.w	ip, ip
 801f0bc:	00db      	lsls	r3, r3, #3
 801f0be:	fb1c fc05 	smulbb	ip, ip, r5
 801f0c2:	b2db      	uxtb	r3, r3
 801f0c4:	b289      	uxth	r1, r1
 801f0c6:	fb03 c300 	mla	r3, r3, r0, ip
 801f0ca:	fa1f fc83 	uxth.w	ip, r3
 801f0ce:	1c4b      	adds	r3, r1, #1
 801f0d0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f0d4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f0d8:	fb1e fe05 	smulbb	lr, lr, r5
 801f0dc:	f10c 0301 	add.w	r3, ip, #1
 801f0e0:	fb02 e200 	mla	r2, r2, r0, lr
 801f0e4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801f0e8:	b292      	uxth	r2, r2
 801f0ea:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f0ee:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f0f2:	430b      	orrs	r3, r1
 801f0f4:	1c51      	adds	r1, r2, #1
 801f0f6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f0fa:	0952      	lsrs	r2, r2, #5
 801f0fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f100:	4313      	orrs	r3, r2
 801f102:	803b      	strh	r3, [r7, #0]
 801f104:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f106:	441c      	add	r4, r3
 801f108:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f10a:	441e      	add	r6, r3
 801f10c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f10e:	3b01      	subs	r3, #1
 801f110:	3702      	adds	r7, #2
 801f112:	9318      	str	r3, [sp, #96]	; 0x60
 801f114:	e698      	b.n	801ee48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801f116:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f118:	441c      	add	r4, r3
 801f11a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f11c:	441e      	add	r6, r3
 801f11e:	9b07      	ldr	r3, [sp, #28]
 801f120:	3b01      	subs	r3, #1
 801f122:	9307      	str	r3, [sp, #28]
 801f124:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f126:	3302      	adds	r3, #2
 801f128:	930a      	str	r3, [sp, #40]	; 0x28
 801f12a:	e66d      	b.n	801ee08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f12c:	d023      	beq.n	801f176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801f12e:	9b07      	ldr	r3, [sp, #28]
 801f130:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801f132:	3b01      	subs	r3, #1
 801f134:	fb00 4003 	mla	r0, r0, r3, r4
 801f138:	1400      	asrs	r0, r0, #16
 801f13a:	f53f ae82 	bmi.w	801ee42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f13e:	3901      	subs	r1, #1
 801f140:	4288      	cmp	r0, r1
 801f142:	f6bf ae7e 	bge.w	801ee42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f146:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801f148:	fb01 6303 	mla	r3, r1, r3, r6
 801f14c:	141b      	asrs	r3, r3, #16
 801f14e:	f53f ae78 	bmi.w	801ee42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f152:	3a01      	subs	r2, #1
 801f154:	4293      	cmp	r3, r2
 801f156:	f6bf ae74 	bge.w	801ee42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f15a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f15e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801f162:	f1bb 0f00 	cmp.w	fp, #0
 801f166:	dc6c      	bgt.n	801f242 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f168:	9b07      	ldr	r3, [sp, #28]
 801f16a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f16e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f170:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f174:	930a      	str	r3, [sp, #40]	; 0x28
 801f176:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f178:	2b00      	cmp	r3, #0
 801f17a:	f340 81b3 	ble.w	801f4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f17e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f182:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f186:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f18a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f18c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f190:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f194:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f198:	eef0 6a62 	vmov.f32	s13, s5
 801f19c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f1a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f1a8:	ee16 4a90 	vmov	r4, s13
 801f1ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1b0:	eef0 6a43 	vmov.f32	s13, s6
 801f1b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1b8:	ee12 2a90 	vmov	r2, s5
 801f1bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1c4:	ee13 2a10 	vmov	r2, s6
 801f1c8:	9329      	str	r3, [sp, #164]	; 0xa4
 801f1ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f1cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1d0:	932a      	str	r3, [sp, #168]	; 0xa8
 801f1d2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f1d4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801f1d6:	3b01      	subs	r3, #1
 801f1d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f1dc:	9317      	str	r3, [sp, #92]	; 0x5c
 801f1de:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f1e0:	bf08      	it	eq
 801f1e2:	4613      	moveq	r3, r2
 801f1e4:	ee16 6a90 	vmov	r6, s13
 801f1e8:	9307      	str	r3, [sp, #28]
 801f1ea:	eeb0 3a67 	vmov.f32	s6, s15
 801f1ee:	eef0 2a47 	vmov.f32	s5, s14
 801f1f2:	e5fb      	b.n	801edec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f1f4:	2900      	cmp	r1, #0
 801f1f6:	f43f ae6b 	beq.w	801eed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f1fa:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f1fe:	9308      	str	r3, [sp, #32]
 801f200:	0e1b      	lsrs	r3, r3, #24
 801f202:	9311      	str	r3, [sp, #68]	; 0x44
 801f204:	e664      	b.n	801eed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f206:	f112 0801 	adds.w	r8, r2, #1
 801f20a:	f53f af7b 	bmi.w	801f104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f20e:	4543      	cmp	r3, r8
 801f210:	f6ff af78 	blt.w	801f104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f214:	f11c 0801 	adds.w	r8, ip, #1
 801f218:	f53f af74 	bmi.w	801f104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f21c:	45c6      	cmp	lr, r8
 801f21e:	f6ff af71 	blt.w	801f104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f222:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801f224:	9201      	str	r2, [sp, #4]
 801f226:	fa0f f28e 	sxth.w	r2, lr
 801f22a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801f22e:	e9cd c002 	strd	ip, r0, [sp, #8]
 801f232:	9200      	str	r2, [sp, #0]
 801f234:	b21b      	sxth	r3, r3
 801f236:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f238:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801f23a:	4639      	mov	r1, r7
 801f23c:	f7ff fc79 	bl	801eb32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801f240:	e760      	b.n	801f104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801f242:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801f244:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f246:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f24a:	1427      	asrs	r7, r4, #16
 801f24c:	1433      	asrs	r3, r6, #16
 801f24e:	fb01 7303 	mla	r3, r1, r3, r7
 801f252:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801f256:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f25a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f25e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f262:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f266:	2a00      	cmp	r2, #0
 801f268:	f000 8133 	beq.w	801f4d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801f26c:	687d      	ldr	r5, [r7, #4]
 801f26e:	950e      	str	r5, [sp, #56]	; 0x38
 801f270:	0e2d      	lsrs	r5, r5, #24
 801f272:	9515      	str	r5, [sp, #84]	; 0x54
 801f274:	b178      	cbz	r0, 801f296 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f276:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801f27a:	3901      	subs	r1, #1
 801f27c:	0089      	lsls	r1, r1, #2
 801f27e:	3104      	adds	r1, #4
 801f280:	eb07 0e01 	add.w	lr, r7, r1
 801f284:	5879      	ldr	r1, [r7, r1]
 801f286:	9109      	str	r1, [sp, #36]	; 0x24
 801f288:	0e09      	lsrs	r1, r1, #24
 801f28a:	9112      	str	r1, [sp, #72]	; 0x48
 801f28c:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f290:	910f      	str	r1, [sp, #60]	; 0x3c
 801f292:	0e09      	lsrs	r1, r1, #24
 801f294:	9116      	str	r1, [sp, #88]	; 0x58
 801f296:	b292      	uxth	r2, r2
 801f298:	b280      	uxth	r0, r0
 801f29a:	fb02 f800 	mul.w	r8, r2, r0
 801f29e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801f2a2:	0112      	lsls	r2, r2, #4
 801f2a4:	eba2 0e08 	sub.w	lr, r2, r8
 801f2a8:	b280      	uxth	r0, r0
 801f2aa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801f2ae:	9915      	ldr	r1, [sp, #84]	; 0x54
 801f2b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f2b2:	fa1f fe8e 	uxth.w	lr, lr
 801f2b6:	1a12      	subs	r2, r2, r0
 801f2b8:	b292      	uxth	r2, r2
 801f2ba:	fb0e f101 	mul.w	r1, lr, r1
 801f2be:	fb02 110c 	mla	r1, r2, ip, r1
 801f2c2:	fb00 1105 	mla	r1, r0, r5, r1
 801f2c6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f2c8:	fb08 1105 	mla	r1, r8, r5, r1
 801f2cc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801f2d0:	2900      	cmp	r1, #0
 801f2d2:	f000 80f5 	beq.w	801f4c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801f2d6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f2da:	d019      	beq.n	801f310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801f2dc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f2e0:	fb0c fa0a 	mul.w	sl, ip, sl
 801f2e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f2e8:	fb0c fc03 	mul.w	ip, ip, r3
 801f2ec:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f2f0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f2f4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f2f8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f2fc:	4453      	add	r3, sl
 801f2fe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f302:	0a1b      	lsrs	r3, r3, #8
 801f304:	0a3f      	lsrs	r7, r7, #8
 801f306:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f30a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f30e:	433b      	orrs	r3, r7
 801f310:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f312:	2dff      	cmp	r5, #255	; 0xff
 801f314:	d020      	beq.n	801f358 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801f316:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f318:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f31c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f31e:	436f      	muls	r7, r5
 801f320:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f322:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f326:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f328:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f32c:	fb05 fa0a 	mul.w	sl, r5, sl
 801f330:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f334:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f338:	44bc      	add	ip, r7
 801f33a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f33e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f342:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f346:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f34a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f34e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f352:	ea4c 050a 	orr.w	r5, ip, sl
 801f356:	950e      	str	r5, [sp, #56]	; 0x38
 801f358:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f35a:	2dff      	cmp	r5, #255	; 0xff
 801f35c:	d020      	beq.n	801f3a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801f35e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f360:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f364:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f366:	436f      	muls	r7, r5
 801f368:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f36a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f36e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f370:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f374:	fb05 fa0a 	mul.w	sl, r5, sl
 801f378:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f37c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f380:	44bc      	add	ip, r7
 801f382:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f386:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f38a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f38e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f392:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f396:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f39a:	ea4c 050a 	orr.w	r5, ip, sl
 801f39e:	9509      	str	r5, [sp, #36]	; 0x24
 801f3a0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f3a2:	2dff      	cmp	r5, #255	; 0xff
 801f3a4:	d020      	beq.n	801f3e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801f3a6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f3a8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f3ac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f3ae:	436f      	muls	r7, r5
 801f3b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f3b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f3b6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f3b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f3bc:	fb05 fa0a 	mul.w	sl, r5, sl
 801f3c0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f3c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3c8:	44bc      	add	ip, r7
 801f3ca:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f3ce:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f3d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f3d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f3da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f3de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f3e2:	ea4c 050a 	orr.w	r5, ip, sl
 801f3e6:	950f      	str	r5, [sp, #60]	; 0x3c
 801f3e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f3ea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f3ee:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f3f0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f3f4:	fb0e f707 	mul.w	r7, lr, r7
 801f3f8:	fb02 770c 	mla	r7, r2, ip, r7
 801f3fc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f400:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f402:	fb00 770c 	mla	r7, r0, ip, r7
 801f406:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f40a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f40c:	fb08 770c 	mla	r7, r8, ip, r7
 801f410:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f414:	fb0e fe0c 	mul.w	lr, lr, ip
 801f418:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f41c:	fb02 e303 	mla	r3, r2, r3, lr
 801f420:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f422:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f424:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f428:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f42a:	fb00 330a 	mla	r3, r0, sl, r3
 801f42e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801f432:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f436:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f438:	f8b9 0000 	ldrh.w	r0, [r9]
 801f43c:	4359      	muls	r1, r3
 801f43e:	0a3f      	lsrs	r7, r7, #8
 801f440:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f444:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f448:	1c4b      	adds	r3, r1, #1
 801f44a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f44e:	ea47 070c 	orr.w	r7, r7, ip
 801f452:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f456:	1202      	asrs	r2, r0, #8
 801f458:	0c3b      	lsrs	r3, r7, #16
 801f45a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f45e:	b2c9      	uxtb	r1, r1
 801f460:	fb13 f305 	smulbb	r3, r3, r5
 801f464:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f468:	fb02 3201 	mla	r2, r2, r1, r3
 801f46c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f470:	10c3      	asrs	r3, r0, #3
 801f472:	b2ff      	uxtb	r7, r7
 801f474:	00c0      	lsls	r0, r0, #3
 801f476:	b2c0      	uxtb	r0, r0
 801f478:	fb17 f705 	smulbb	r7, r7, r5
 801f47c:	fb00 7001 	mla	r0, r0, r1, r7
 801f480:	b292      	uxth	r2, r2
 801f482:	fb1c fc05 	smulbb	ip, ip, r5
 801f486:	b280      	uxth	r0, r0
 801f488:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f48c:	fb03 c301 	mla	r3, r3, r1, ip
 801f490:	1c51      	adds	r1, r2, #1
 801f492:	f100 0c01 	add.w	ip, r0, #1
 801f496:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f49a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f49e:	b29b      	uxth	r3, r3
 801f4a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f4a4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f4a8:	ea4c 0202 	orr.w	r2, ip, r2
 801f4ac:	f103 0c01 	add.w	ip, r3, #1
 801f4b0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f4b4:	095b      	lsrs	r3, r3, #5
 801f4b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f4ba:	431a      	orrs	r2, r3
 801f4bc:	f8a9 2000 	strh.w	r2, [r9]
 801f4c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f4c2:	441c      	add	r4, r3
 801f4c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f4c6:	f109 0902 	add.w	r9, r9, #2
 801f4ca:	441e      	add	r6, r3
 801f4cc:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f4d0:	e647      	b.n	801f162 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f4d2:	2800      	cmp	r0, #0
 801f4d4:	f43f aedf 	beq.w	801f296 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f4d8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f4dc:	9109      	str	r1, [sp, #36]	; 0x24
 801f4de:	0e09      	lsrs	r1, r1, #24
 801f4e0:	9112      	str	r1, [sp, #72]	; 0x48
 801f4e2:	e6d8      	b.n	801f296 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f4e4:	b01d      	add	sp, #116	; 0x74
 801f4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f4ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f4ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4ee:	b085      	sub	sp, #20
 801f4f0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801f4f4:	9102      	str	r1, [sp, #8]
 801f4f6:	2c00      	cmp	r4, #0
 801f4f8:	fb04 7103 	mla	r1, r4, r3, r7
 801f4fc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801f500:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f504:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801f508:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f50c:	f2c0 810c 	blt.w	801f728 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f510:	45a6      	cmp	lr, r4
 801f512:	f340 8109 	ble.w	801f728 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f516:	2f00      	cmp	r7, #0
 801f518:	f2c0 8104 	blt.w	801f724 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f51c:	42bb      	cmp	r3, r7
 801f51e:	f340 8101 	ble.w	801f724 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f522:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f526:	1c7a      	adds	r2, r7, #1
 801f528:	f100 8101 	bmi.w	801f72e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f52c:	4293      	cmp	r3, r2
 801f52e:	f340 80fe 	ble.w	801f72e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f532:	2e00      	cmp	r6, #0
 801f534:	f000 80fd 	beq.w	801f732 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f538:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f53c:	3401      	adds	r4, #1
 801f53e:	f100 80fc 	bmi.w	801f73a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f542:	45a6      	cmp	lr, r4
 801f544:	f340 80f9 	ble.w	801f73a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f548:	2800      	cmp	r0, #0
 801f54a:	f000 80f9 	beq.w	801f740 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f54e:	2f00      	cmp	r7, #0
 801f550:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f554:	f2c0 80ef 	blt.w	801f736 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f558:	42bb      	cmp	r3, r7
 801f55a:	f340 80ec 	ble.w	801f736 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f55e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f562:	3701      	adds	r7, #1
 801f564:	f100 80ef 	bmi.w	801f746 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f568:	42bb      	cmp	r3, r7
 801f56a:	f340 80ec 	ble.w	801f746 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f56e:	2e00      	cmp	r6, #0
 801f570:	f000 80eb 	beq.w	801f74a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f574:	6852      	ldr	r2, [r2, #4]
 801f576:	b2b6      	uxth	r6, r6
 801f578:	b280      	uxth	r0, r0
 801f57a:	fb00 fe06 	mul.w	lr, r0, r6
 801f57e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f582:	0136      	lsls	r6, r6, #4
 801f584:	eba6 070e 	sub.w	r7, r6, lr
 801f588:	b280      	uxth	r0, r0
 801f58a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801f58e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f592:	b2bf      	uxth	r7, r7
 801f594:	1a1b      	subs	r3, r3, r0
 801f596:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f59a:	b29b      	uxth	r3, r3
 801f59c:	fb07 f60a 	mul.w	r6, r7, sl
 801f5a0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f5a4:	fb0b 6603 	mla	r6, fp, r3, r6
 801f5a8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f5ac:	fb00 6609 	mla	r6, r0, r9, r6
 801f5b0:	fb0e 6608 	mla	r6, lr, r8, r6
 801f5b4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f5b8:	9600      	str	r6, [sp, #0]
 801f5ba:	2e00      	cmp	r6, #0
 801f5bc:	f000 80af 	beq.w	801f71e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f5c0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f5c4:	fb0b fc0c 	mul.w	ip, fp, ip
 801f5c8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801f5cc:	fb0b f505 	mul.w	r5, fp, r5
 801f5d0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f5d4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801f5d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f5dc:	44dc      	add	ip, fp
 801f5de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f5e2:	9501      	str	r5, [sp, #4]
 801f5e4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801f5e8:	9503      	str	r5, [sp, #12]
 801f5ea:	9d01      	ldr	r5, [sp, #4]
 801f5ec:	9e02      	ldr	r6, [sp, #8]
 801f5ee:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801f5f2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f5f6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801f5fa:	fb0a fc0c 	mul.w	ip, sl, ip
 801f5fe:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f602:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f606:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f60a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f60e:	4465      	add	r5, ip
 801f610:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f614:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801f618:	fb09 fc0c 	mul.w	ip, r9, ip
 801f61c:	fb09 f904 	mul.w	r9, r9, r4
 801f620:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801f624:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f628:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801f62c:	fb08 f404 	mul.w	r4, r8, r4
 801f630:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f634:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f638:	fb08 f802 	mul.w	r8, r8, r2
 801f63c:	fb0a fa01 	mul.w	sl, sl, r1
 801f640:	0a22      	lsrs	r2, r4, #8
 801f642:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801f646:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f64a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801f64e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f652:	4414      	add	r4, r2
 801f654:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f658:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801f65c:	0a2d      	lsrs	r5, r5, #8
 801f65e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f662:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f666:	9a03      	ldr	r2, [sp, #12]
 801f668:	8836      	ldrh	r6, [r6, #0]
 801f66a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f66e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f672:	437d      	muls	r5, r7
 801f674:	4461      	add	r1, ip
 801f676:	0a24      	lsrs	r4, r4, #8
 801f678:	fb02 5503 	mla	r5, r2, r3, r5
 801f67c:	0a09      	lsrs	r1, r1, #8
 801f67e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801f682:	fb04 540e 	mla	r4, r4, lr, r5
 801f686:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f68a:	fb01 4100 	mla	r1, r1, r0, r4
 801f68e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f692:	0a09      	lsrs	r1, r1, #8
 801f694:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f698:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801f69c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f6a0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801f6a4:	fb07 f70a 	mul.w	r7, r7, sl
 801f6a8:	fb03 7101 	mla	r1, r3, r1, r7
 801f6ac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f6b0:	9b00      	ldr	r3, [sp, #0]
 801f6b2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801f6b6:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f6ba:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801f6be:	fb00 e101 	mla	r1, r0, r1, lr
 801f6c2:	43da      	mvns	r2, r3
 801f6c4:	1233      	asrs	r3, r6, #8
 801f6c6:	b2d2      	uxtb	r2, r2
 801f6c8:	10f0      	asrs	r0, r6, #3
 801f6ca:	0a09      	lsrs	r1, r1, #8
 801f6cc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801f6d0:	00f6      	lsls	r6, r6, #3
 801f6d2:	4353      	muls	r3, r2
 801f6d4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f6d8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f6dc:	b2f6      	uxtb	r6, r6
 801f6de:	4321      	orrs	r1, r4
 801f6e0:	4350      	muls	r0, r2
 801f6e2:	4356      	muls	r6, r2
 801f6e4:	1c5a      	adds	r2, r3, #1
 801f6e6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f6ea:	0c0b      	lsrs	r3, r1, #16
 801f6ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f6f0:	1c42      	adds	r2, r0, #1
 801f6f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f6f6:	0a0a      	lsrs	r2, r1, #8
 801f6f8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f6fc:	021b      	lsls	r3, r3, #8
 801f6fe:	00d2      	lsls	r2, r2, #3
 801f700:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f704:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801f708:	4313      	orrs	r3, r2
 801f70a:	1c72      	adds	r2, r6, #1
 801f70c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f710:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f714:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f718:	4319      	orrs	r1, r3
 801f71a:	9b02      	ldr	r3, [sp, #8]
 801f71c:	8019      	strh	r1, [r3, #0]
 801f71e:	b005      	add	sp, #20
 801f720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f724:	2500      	movs	r5, #0
 801f726:	e6fe      	b.n	801f526 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f728:	2100      	movs	r1, #0
 801f72a:	460d      	mov	r5, r1
 801f72c:	e706      	b.n	801f53c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f72e:	2100      	movs	r1, #0
 801f730:	e704      	b.n	801f53c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f732:	4631      	mov	r1, r6
 801f734:	e702      	b.n	801f53c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f736:	2400      	movs	r4, #0
 801f738:	e713      	b.n	801f562 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f73a:	2200      	movs	r2, #0
 801f73c:	4614      	mov	r4, r2
 801f73e:	e71a      	b.n	801f576 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f740:	4602      	mov	r2, r0
 801f742:	4604      	mov	r4, r0
 801f744:	e717      	b.n	801f576 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f746:	2200      	movs	r2, #0
 801f748:	e715      	b.n	801f576 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f74a:	4632      	mov	r2, r6
 801f74c:	e713      	b.n	801f576 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801f750 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f754:	b09b      	sub	sp, #108	; 0x6c
 801f756:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801f75a:	9218      	str	r2, [sp, #96]	; 0x60
 801f75c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f75e:	9116      	str	r1, [sp, #88]	; 0x58
 801f760:	9307      	str	r3, [sp, #28]
 801f762:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801f766:	9019      	str	r0, [sp, #100]	; 0x64
 801f768:	6850      	ldr	r0, [r2, #4]
 801f76a:	6812      	ldr	r2, [r2, #0]
 801f76c:	fb00 1303 	mla	r3, r0, r3, r1
 801f770:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f774:	930a      	str	r3, [sp, #40]	; 0x28
 801f776:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f778:	681b      	ldr	r3, [r3, #0]
 801f77a:	930f      	str	r3, [sp, #60]	; 0x3c
 801f77c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f77e:	2b00      	cmp	r3, #0
 801f780:	dc03      	bgt.n	801f78a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f782:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f784:	2b00      	cmp	r3, #0
 801f786:	f340 8386 	ble.w	801fe96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f78a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f78c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f790:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f794:	1e48      	subs	r0, r1, #1
 801f796:	1e57      	subs	r7, r2, #1
 801f798:	9b07      	ldr	r3, [sp, #28]
 801f79a:	2b00      	cmp	r3, #0
 801f79c:	f340 8166 	ble.w	801fa6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f7a0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f7a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f7a8:	d406      	bmi.n	801f7b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f7aa:	4584      	cmp	ip, r0
 801f7ac:	da04      	bge.n	801f7b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f7ae:	2b00      	cmp	r3, #0
 801f7b0:	db02      	blt.n	801f7b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f7b2:	42bb      	cmp	r3, r7
 801f7b4:	f2c0 815b 	blt.w	801fa6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f7b8:	f11c 0c01 	adds.w	ip, ip, #1
 801f7bc:	f100 814b 	bmi.w	801fa56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f7c0:	4561      	cmp	r1, ip
 801f7c2:	f2c0 8148 	blt.w	801fa56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f7c6:	3301      	adds	r3, #1
 801f7c8:	f100 8145 	bmi.w	801fa56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f7cc:	429a      	cmp	r2, r3
 801f7ce:	f2c0 8142 	blt.w	801fa56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f7d2:	9b07      	ldr	r3, [sp, #28]
 801f7d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f7d6:	9317      	str	r3, [sp, #92]	; 0x5c
 801f7d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f7da:	2b00      	cmp	r3, #0
 801f7dc:	f340 8165 	ble.w	801faaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f7e0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801f7e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f7e4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f7e8:	689b      	ldr	r3, [r3, #8]
 801f7ea:	1422      	asrs	r2, r4, #16
 801f7ec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f7f0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f7f4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f7f8:	f100 81d5 	bmi.w	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f7fc:	f103 38ff 	add.w	r8, r3, #4294967295
 801f800:	4542      	cmp	r2, r8
 801f802:	f280 81d0 	bge.w	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f806:	f1bc 0f00 	cmp.w	ip, #0
 801f80a:	f2c0 81cc 	blt.w	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f80e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f812:	45c4      	cmp	ip, r8
 801f814:	f280 81c7 	bge.w	801fba6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f818:	b21b      	sxth	r3, r3
 801f81a:	fb0c 2203 	mla	r2, ip, r3, r2
 801f81e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f820:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f824:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f828:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f82c:	2900      	cmp	r1, #0
 801f82e:	f000 8182 	beq.w	801fb36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f832:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f836:	950b      	str	r5, [sp, #44]	; 0x2c
 801f838:	0e2d      	lsrs	r5, r5, #24
 801f83a:	9512      	str	r5, [sp, #72]	; 0x48
 801f83c:	b180      	cbz	r0, 801f860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f83e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801f842:	3b01      	subs	r3, #1
 801f844:	009b      	lsls	r3, r3, #2
 801f846:	3304      	adds	r3, #4
 801f848:	eb08 0c03 	add.w	ip, r8, r3
 801f84c:	f858 3003 	ldr.w	r3, [r8, r3]
 801f850:	9308      	str	r3, [sp, #32]
 801f852:	0e1b      	lsrs	r3, r3, #24
 801f854:	9310      	str	r3, [sp, #64]	; 0x40
 801f856:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f85a:	930c      	str	r3, [sp, #48]	; 0x30
 801f85c:	0e1b      	lsrs	r3, r3, #24
 801f85e:	9313      	str	r3, [sp, #76]	; 0x4c
 801f860:	b289      	uxth	r1, r1
 801f862:	b280      	uxth	r0, r0
 801f864:	fb01 f900 	mul.w	r9, r1, r0
 801f868:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f86c:	0109      	lsls	r1, r1, #4
 801f86e:	eba1 0809 	sub.w	r8, r1, r9
 801f872:	b280      	uxth	r0, r0
 801f874:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801f878:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f87a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f87c:	fa1f f888 	uxth.w	r8, r8
 801f880:	1a09      	subs	r1, r1, r0
 801f882:	b289      	uxth	r1, r1
 801f884:	fb08 f303 	mul.w	r3, r8, r3
 801f888:	fb01 330e 	mla	r3, r1, lr, r3
 801f88c:	fb00 3305 	mla	r3, r0, r5, r3
 801f890:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f892:	fb09 3305 	mla	r3, r9, r5, r3
 801f896:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f89a:	2b00      	cmp	r3, #0
 801f89c:	f000 80d2 	beq.w	801fa44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f8a0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f8a4:	d01b      	beq.n	801f8de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f8a6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801f8aa:	fb0e fa0a 	mul.w	sl, lr, sl
 801f8ae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f8b2:	fb0e fe02 	mul.w	lr, lr, r2
 801f8b6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f8ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f8be:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f8c2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f8c6:	4452      	add	r2, sl
 801f8c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f8cc:	0a12      	lsrs	r2, r2, #8
 801f8ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f8d2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f8d6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f8da:	ea42 020c 	orr.w	r2, r2, ip
 801f8de:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f8e0:	2dff      	cmp	r5, #255	; 0xff
 801f8e2:	d021      	beq.n	801f928 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f8e4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f8e6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f8ea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f8ec:	fb05 fb0b 	mul.w	fp, r5, fp
 801f8f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f8f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f8f6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f8f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f8fc:	fb05 fa0a 	mul.w	sl, r5, sl
 801f900:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f904:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f908:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f90c:	44de      	add	lr, fp
 801f90e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f912:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f916:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f91a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f91e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f922:	ea4e 050a 	orr.w	r5, lr, sl
 801f926:	950b      	str	r5, [sp, #44]	; 0x2c
 801f928:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f92a:	2dff      	cmp	r5, #255	; 0xff
 801f92c:	d021      	beq.n	801f972 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f92e:	9d08      	ldr	r5, [sp, #32]
 801f930:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f934:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f936:	fb05 fb0b 	mul.w	fp, r5, fp
 801f93a:	9d08      	ldr	r5, [sp, #32]
 801f93c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f940:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f942:	fb05 fa0e 	mul.w	sl, r5, lr
 801f946:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f94a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f94e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f952:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f956:	44de      	add	lr, fp
 801f958:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f95c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f960:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f964:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f968:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f96c:	ea4e 050a 	orr.w	r5, lr, sl
 801f970:	9508      	str	r5, [sp, #32]
 801f972:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f974:	2dff      	cmp	r5, #255	; 0xff
 801f976:	d021      	beq.n	801f9bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f978:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f97a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f97e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f980:	fb05 fb0b 	mul.w	fp, r5, fp
 801f984:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f986:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f98a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f98c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f990:	fb05 fa0a 	mul.w	sl, r5, sl
 801f994:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f998:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f99c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f9a0:	44de      	add	lr, fp
 801f9a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f9a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f9aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f9ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f9b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f9b6:	ea4e 050a 	orr.w	r5, lr, sl
 801f9ba:	950c      	str	r5, [sp, #48]	; 0x30
 801f9bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f9be:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f9c2:	9d08      	ldr	r5, [sp, #32]
 801f9c4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801f9c8:	fb08 fc0c 	mul.w	ip, r8, ip
 801f9cc:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f9d0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f9d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f9d6:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f9da:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f9de:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f9e0:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f9e4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f9e8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f9ec:	fb08 f80e 	mul.w	r8, r8, lr
 801f9f0:	fb01 8202 	mla	r2, r1, r2, r8
 801f9f4:	9908      	ldr	r1, [sp, #32]
 801f9f6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f9fa:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f9fc:	fb00 220a 	mla	r2, r0, sl, r2
 801fa00:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801fa04:	fb09 2900 	mla	r9, r9, r0, r2
 801fa08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fa10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa14:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801fa18:	ea4c 0c09 	orr.w	ip, ip, r9
 801fa1c:	2bff      	cmp	r3, #255	; 0xff
 801fa1e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801fa22:	f040 8091 	bne.w	801fb48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801fa26:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801fa2a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801fa2e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fa32:	f022 0207 	bic.w	r2, r2, #7
 801fa36:	431a      	orrs	r2, r3
 801fa38:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801fa3c:	ea4c 0c02 	orr.w	ip, ip, r2
 801fa40:	f8a7 c000 	strh.w	ip, [r7]
 801fa44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fa46:	441c      	add	r4, r3
 801fa48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fa4a:	441e      	add	r6, r3
 801fa4c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801fa4e:	3b01      	subs	r3, #1
 801fa50:	3702      	adds	r7, #2
 801fa52:	9317      	str	r3, [sp, #92]	; 0x5c
 801fa54:	e6c0      	b.n	801f7d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801fa56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fa58:	441c      	add	r4, r3
 801fa5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fa5c:	441e      	add	r6, r3
 801fa5e:	9b07      	ldr	r3, [sp, #28]
 801fa60:	3b01      	subs	r3, #1
 801fa62:	9307      	str	r3, [sp, #28]
 801fa64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa66:	3302      	adds	r3, #2
 801fa68:	930a      	str	r3, [sp, #40]	; 0x28
 801fa6a:	e695      	b.n	801f798 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fa6c:	d024      	beq.n	801fab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801fa6e:	9b07      	ldr	r3, [sp, #28]
 801fa70:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801fa72:	3b01      	subs	r3, #1
 801fa74:	fb00 4003 	mla	r0, r0, r3, r4
 801fa78:	1400      	asrs	r0, r0, #16
 801fa7a:	f53f aeaa 	bmi.w	801f7d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fa7e:	3901      	subs	r1, #1
 801fa80:	4288      	cmp	r0, r1
 801fa82:	f6bf aea6 	bge.w	801f7d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fa86:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fa88:	fb01 6303 	mla	r3, r1, r3, r6
 801fa8c:	141b      	asrs	r3, r3, #16
 801fa8e:	f53f aea0 	bmi.w	801f7d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fa92:	3a01      	subs	r2, #1
 801fa94:	4293      	cmp	r3, r2
 801fa96:	f6bf ae9c 	bge.w	801f7d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801fa9a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fa9e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801faa2:	f1bb 0f00 	cmp.w	fp, #0
 801faa6:	f300 809a 	bgt.w	801fbde <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801faaa:	9b07      	ldr	r3, [sp, #28]
 801faac:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fab0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fab2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fab6:	930a      	str	r3, [sp, #40]	; 0x28
 801fab8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801faba:	2b00      	cmp	r3, #0
 801fabc:	f340 81eb 	ble.w	801fe96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801fac0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fac4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fac8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801facc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801face:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fad2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fad6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fada:	eef0 6a62 	vmov.f32	s13, s5
 801fade:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fae2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fae6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801faea:	ee16 4a90 	vmov	r4, s13
 801faee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801faf2:	eef0 6a43 	vmov.f32	s13, s6
 801faf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fafa:	ee12 2a90 	vmov	r2, s5
 801fafe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fb02:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb06:	ee13 2a10 	vmov	r2, s6
 801fb0a:	9327      	str	r3, [sp, #156]	; 0x9c
 801fb0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fb0e:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb12:	9328      	str	r3, [sp, #160]	; 0xa0
 801fb14:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801fb16:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801fb18:	3b01      	subs	r3, #1
 801fb1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb1e:	9316      	str	r3, [sp, #88]	; 0x58
 801fb20:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fb22:	bf08      	it	eq
 801fb24:	4613      	moveq	r3, r2
 801fb26:	ee16 6a90 	vmov	r6, s13
 801fb2a:	9307      	str	r3, [sp, #28]
 801fb2c:	eeb0 3a67 	vmov.f32	s6, s15
 801fb30:	eef0 2a47 	vmov.f32	s5, s14
 801fb34:	e622      	b.n	801f77c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801fb36:	2800      	cmp	r0, #0
 801fb38:	f43f ae92 	beq.w	801f860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fb3c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801fb40:	9308      	str	r3, [sp, #32]
 801fb42:	0e1b      	lsrs	r3, r3, #24
 801fb44:	9310      	str	r3, [sp, #64]	; 0x40
 801fb46:	e68b      	b.n	801f860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801fb48:	8839      	ldrh	r1, [r7, #0]
 801fb4a:	4dd4      	ldr	r5, [pc, #848]	; (801fe9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801fb4c:	43db      	mvns	r3, r3
 801fb4e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801fb52:	fa5f f883 	uxtb.w	r8, r3
 801fb56:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801fb5a:	fb0e fe08 	mul.w	lr, lr, r8
 801fb5e:	10c8      	asrs	r0, r1, #3
 801fb60:	00cb      	lsls	r3, r1, #3
 801fb62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fb66:	f10e 0101 	add.w	r1, lr, #1
 801fb6a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801fb6e:	fb00 f008 	mul.w	r0, r0, r8
 801fb72:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801fb76:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801fb7a:	f100 0e01 	add.w	lr, r0, #1
 801fb7e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801fb82:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801fb86:	b2db      	uxtb	r3, r3
 801fb88:	b2c9      	uxtb	r1, r1
 801fb8a:	00d2      	lsls	r2, r2, #3
 801fb8c:	fb03 f308 	mul.w	r3, r3, r8
 801fb90:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801fb94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb98:	430a      	orrs	r2, r1
 801fb9a:	1c59      	adds	r1, r3, #1
 801fb9c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fba0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801fba4:	e748      	b.n	801fa38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801fba6:	f112 0801 	adds.w	r8, r2, #1
 801fbaa:	f53f af4b 	bmi.w	801fa44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fbae:	4543      	cmp	r3, r8
 801fbb0:	f6ff af48 	blt.w	801fa44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fbb4:	f11c 0801 	adds.w	r8, ip, #1
 801fbb8:	f53f af44 	bmi.w	801fa44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fbbc:	45c6      	cmp	lr, r8
 801fbbe:	f6ff af41 	blt.w	801fa44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fbc2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801fbc6:	fa0f f28e 	sxth.w	r2, lr
 801fbca:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801fbce:	9200      	str	r2, [sp, #0]
 801fbd0:	b21b      	sxth	r3, r3
 801fbd2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fbd4:	9819      	ldr	r0, [sp, #100]	; 0x64
 801fbd6:	4639      	mov	r1, r7
 801fbd8:	f7ff fc87 	bl	801f4ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801fbdc:	e732      	b.n	801fa44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801fbde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801fbe0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fbe2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801fbe6:	1421      	asrs	r1, r4, #16
 801fbe8:	1433      	asrs	r3, r6, #16
 801fbea:	fb07 1303 	mla	r3, r7, r3, r1
 801fbee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fbf0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801fbf4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801fbf8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fbfc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fc00:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801fc04:	2a00      	cmp	r2, #0
 801fc06:	f000 8107 	beq.w	801fe18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801fc0a:	684d      	ldr	r5, [r1, #4]
 801fc0c:	950d      	str	r5, [sp, #52]	; 0x34
 801fc0e:	0e2d      	lsrs	r5, r5, #24
 801fc10:	9514      	str	r5, [sp, #80]	; 0x50
 801fc12:	b178      	cbz	r0, 801fc34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fc14:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801fc18:	3f01      	subs	r7, #1
 801fc1a:	00bf      	lsls	r7, r7, #2
 801fc1c:	3704      	adds	r7, #4
 801fc1e:	eb01 0e07 	add.w	lr, r1, r7
 801fc22:	59c9      	ldr	r1, [r1, r7]
 801fc24:	9109      	str	r1, [sp, #36]	; 0x24
 801fc26:	0e09      	lsrs	r1, r1, #24
 801fc28:	9111      	str	r1, [sp, #68]	; 0x44
 801fc2a:	f8de 1004 	ldr.w	r1, [lr, #4]
 801fc2e:	910e      	str	r1, [sp, #56]	; 0x38
 801fc30:	0e09      	lsrs	r1, r1, #24
 801fc32:	9115      	str	r1, [sp, #84]	; 0x54
 801fc34:	b292      	uxth	r2, r2
 801fc36:	b280      	uxth	r0, r0
 801fc38:	fb02 f900 	mul.w	r9, r2, r0
 801fc3c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801fc40:	0112      	lsls	r2, r2, #4
 801fc42:	eba2 0e09 	sub.w	lr, r2, r9
 801fc46:	b280      	uxth	r0, r0
 801fc48:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801fc4c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801fc4e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801fc50:	fa1f fe8e 	uxth.w	lr, lr
 801fc54:	1a09      	subs	r1, r1, r0
 801fc56:	b289      	uxth	r1, r1
 801fc58:	fb0e f202 	mul.w	r2, lr, r2
 801fc5c:	fb01 220c 	mla	r2, r1, ip, r2
 801fc60:	fb00 2205 	mla	r2, r0, r5, r2
 801fc64:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fc66:	fb09 2205 	mla	r2, r9, r5, r2
 801fc6a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801fc6e:	2a00      	cmp	r2, #0
 801fc70:	f000 80c9 	beq.w	801fe06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801fc74:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801fc78:	d019      	beq.n	801fcae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801fc7a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801fc7e:	fb0c fa0a 	mul.w	sl, ip, sl
 801fc82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fc86:	fb0c fc03 	mul.w	ip, ip, r3
 801fc8a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fc8e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fc92:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801fc96:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801fc9a:	4453      	add	r3, sl
 801fc9c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fca0:	0a1b      	lsrs	r3, r3, #8
 801fca2:	0a3f      	lsrs	r7, r7, #8
 801fca4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801fca8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801fcac:	433b      	orrs	r3, r7
 801fcae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801fcb0:	2dff      	cmp	r5, #255	; 0xff
 801fcb2:	d020      	beq.n	801fcf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801fcb4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fcb6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fcba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801fcbc:	436f      	muls	r7, r5
 801fcbe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fcc0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801fcc4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801fcc6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fcca:	fb05 fa0a 	mul.w	sl, r5, sl
 801fcce:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fcd2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fcd6:	44bc      	add	ip, r7
 801fcd8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fcdc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fce0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fce4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fce8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fcec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fcf0:	ea4c 050a 	orr.w	r5, ip, sl
 801fcf4:	950d      	str	r5, [sp, #52]	; 0x34
 801fcf6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801fcf8:	2dff      	cmp	r5, #255	; 0xff
 801fcfa:	d020      	beq.n	801fd3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801fcfc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801fcfe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fd02:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801fd04:	436f      	muls	r7, r5
 801fd06:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801fd08:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801fd0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801fd0e:	fb05 fa0c 	mul.w	sl, r5, ip
 801fd12:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fd16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fd1a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fd1e:	44bc      	add	ip, r7
 801fd20:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fd24:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fd28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fd34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fd38:	ea4c 050a 	orr.w	r5, ip, sl
 801fd3c:	9509      	str	r5, [sp, #36]	; 0x24
 801fd3e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fd40:	2dff      	cmp	r5, #255	; 0xff
 801fd42:	d020      	beq.n	801fd86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801fd44:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fd46:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fd4a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fd4c:	436f      	muls	r7, r5
 801fd4e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fd50:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801fd54:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fd56:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fd5a:	fb05 fa0a 	mul.w	sl, r5, sl
 801fd5e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fd62:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fd66:	44bc      	add	ip, r7
 801fd68:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fd6c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fd70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd78:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fd7c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fd80:	ea4c 050a 	orr.w	r5, ip, sl
 801fd84:	950e      	str	r5, [sp, #56]	; 0x38
 801fd86:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fd88:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fd8c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801fd8e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fd92:	fb0e f707 	mul.w	r7, lr, r7
 801fd96:	fb01 770c 	mla	r7, r1, ip, r7
 801fd9a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fd9e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fda0:	fb00 770c 	mla	r7, r0, ip, r7
 801fda4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fda8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fdaa:	fb09 770c 	mla	r7, r9, ip, r7
 801fdae:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801fdb2:	fb0e fe0c 	mul.w	lr, lr, ip
 801fdb6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fdba:	fb01 e303 	mla	r3, r1, r3, lr
 801fdbe:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fdc0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801fdc4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fdc6:	fb00 330a 	mla	r3, r0, sl, r3
 801fdca:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801fdce:	fb09 3c0c 	mla	ip, r9, ip, r3
 801fdd2:	0a3f      	lsrs	r7, r7, #8
 801fdd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fdd8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801fddc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fde0:	ea47 070c 	orr.w	r7, r7, ip
 801fde4:	2aff      	cmp	r2, #255	; 0xff
 801fde6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801fdea:	d11e      	bne.n	801fe2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801fdec:	097a      	lsrs	r2, r7, #5
 801fdee:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801fdf2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fdf6:	f023 0307 	bic.w	r3, r3, #7
 801fdfa:	4313      	orrs	r3, r2
 801fdfc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801fe00:	431f      	orrs	r7, r3
 801fe02:	f8a8 7000 	strh.w	r7, [r8]
 801fe06:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fe08:	441c      	add	r4, r3
 801fe0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fe0c:	f108 0802 	add.w	r8, r8, #2
 801fe10:	441e      	add	r6, r3
 801fe12:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fe16:	e644      	b.n	801faa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801fe18:	2800      	cmp	r0, #0
 801fe1a:	f43f af0b 	beq.w	801fc34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fe1e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801fe22:	9109      	str	r1, [sp, #36]	; 0x24
 801fe24:	0e09      	lsrs	r1, r1, #24
 801fe26:	9111      	str	r1, [sp, #68]	; 0x44
 801fe28:	e704      	b.n	801fc34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fe2a:	f8b8 1000 	ldrh.w	r1, [r8]
 801fe2e:	43d2      	mvns	r2, r2
 801fe30:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801fe34:	fa5f fe82 	uxtb.w	lr, r2
 801fe38:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fe3c:	fb0c fc0e 	mul.w	ip, ip, lr
 801fe40:	10c8      	asrs	r0, r1, #3
 801fe42:	00ca      	lsls	r2, r1, #3
 801fe44:	f10c 0101 	add.w	r1, ip, #1
 801fe48:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fe4c:	0c39      	lsrs	r1, r7, #16
 801fe4e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fe52:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fe56:	4911      	ldr	r1, [pc, #68]	; (801fe9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801fe58:	fb00 f00e 	mul.w	r0, r0, lr
 801fe5c:	fa5f fc8c 	uxtb.w	ip, ip
 801fe60:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801fe64:	b2d2      	uxtb	r2, r2
 801fe66:	1c41      	adds	r1, r0, #1
 801fe68:	fb02 f20e 	mul.w	r2, r2, lr
 801fe6c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fe70:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fe74:	1c51      	adds	r1, r2, #1
 801fe76:	00c0      	lsls	r0, r0, #3
 801fe78:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fe7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fe80:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801fe84:	ea4c 0c00 	orr.w	ip, ip, r0
 801fe88:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801fe8c:	ea47 0c0c 	orr.w	ip, r7, ip
 801fe90:	f8a8 c000 	strh.w	ip, [r8]
 801fe94:	e7b7      	b.n	801fe06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801fe96:	b01b      	add	sp, #108	; 0x6c
 801fe98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe9c:	fffff800 	.word	0xfffff800

0801fea0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801fea0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fea4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801fea8:	2d00      	cmp	r5, #0
 801feaa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801feae:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801feb2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801feb6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801feba:	fb05 0e03 	mla	lr, r5, r3, r0
 801febe:	f2c0 808c 	blt.w	801ffda <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801fec2:	45a9      	cmp	r9, r5
 801fec4:	f340 8089 	ble.w	801ffda <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801fec8:	2800      	cmp	r0, #0
 801feca:	f2c0 8084 	blt.w	801ffd6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fece:	4580      	cmp	r8, r0
 801fed0:	f340 8081 	ble.w	801ffd6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fed4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fed8:	f01e 0f01 	tst.w	lr, #1
 801fedc:	5d16      	ldrb	r6, [r2, r4]
 801fede:	bf0c      	ite	eq
 801fee0:	f006 060f 	andeq.w	r6, r6, #15
 801fee4:	1136      	asrne	r6, r6, #4
 801fee6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801feea:	b2f6      	uxtb	r6, r6
 801feec:	1c44      	adds	r4, r0, #1
 801feee:	d477      	bmi.n	801ffe0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fef0:	45a0      	cmp	r8, r4
 801fef2:	dd75      	ble.n	801ffe0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fef4:	2f00      	cmp	r7, #0
 801fef6:	d075      	beq.n	801ffe4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801fef8:	f10e 0a01 	add.w	sl, lr, #1
 801fefc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801ff00:	f01a 0f01 	tst.w	sl, #1
 801ff04:	5d14      	ldrb	r4, [r2, r4]
 801ff06:	bf0c      	ite	eq
 801ff08:	f004 040f 	andeq.w	r4, r4, #15
 801ff0c:	1124      	asrne	r4, r4, #4
 801ff0e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801ff12:	b2e4      	uxtb	r4, r4
 801ff14:	3501      	adds	r5, #1
 801ff16:	d469      	bmi.n	801ffec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801ff18:	45a9      	cmp	r9, r5
 801ff1a:	dd67      	ble.n	801ffec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801ff1c:	f1bc 0f00 	cmp.w	ip, #0
 801ff20:	d067      	beq.n	801fff2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801ff22:	2800      	cmp	r0, #0
 801ff24:	db60      	blt.n	801ffe8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801ff26:	4580      	cmp	r8, r0
 801ff28:	dd5e      	ble.n	801ffe8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801ff2a:	eb03 090e 	add.w	r9, r3, lr
 801ff2e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801ff32:	f019 0f01 	tst.w	r9, #1
 801ff36:	5d55      	ldrb	r5, [r2, r5]
 801ff38:	bf0c      	ite	eq
 801ff3a:	f005 050f 	andeq.w	r5, r5, #15
 801ff3e:	112d      	asrne	r5, r5, #4
 801ff40:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801ff44:	b2ed      	uxtb	r5, r5
 801ff46:	3001      	adds	r0, #1
 801ff48:	d456      	bmi.n	801fff8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801ff4a:	4580      	cmp	r8, r0
 801ff4c:	dd54      	ble.n	801fff8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801ff4e:	2f00      	cmp	r7, #0
 801ff50:	d054      	beq.n	801fffc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801ff52:	3301      	adds	r3, #1
 801ff54:	449e      	add	lr, r3
 801ff56:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ff5a:	f01e 0f01 	tst.w	lr, #1
 801ff5e:	5cd0      	ldrb	r0, [r2, r3]
 801ff60:	bf0c      	ite	eq
 801ff62:	f000 000f 	andeq.w	r0, r0, #15
 801ff66:	1100      	asrne	r0, r0, #4
 801ff68:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ff6c:	b2c3      	uxtb	r3, r0
 801ff6e:	b2ba      	uxth	r2, r7
 801ff70:	fa1f fc8c 	uxth.w	ip, ip
 801ff74:	fb02 f00c 	mul.w	r0, r2, ip
 801ff78:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ff7c:	0112      	lsls	r2, r2, #4
 801ff7e:	fa1f fc8c 	uxth.w	ip, ip
 801ff82:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801ff86:	1a12      	subs	r2, r2, r0
 801ff88:	eba7 070c 	sub.w	r7, r7, ip
 801ff8c:	b292      	uxth	r2, r2
 801ff8e:	b2bf      	uxth	r7, r7
 801ff90:	4362      	muls	r2, r4
 801ff92:	fb06 2207 	mla	r2, r6, r7, r2
 801ff96:	fb0c 2505 	mla	r5, ip, r5, r2
 801ff9a:	fb00 5303 	mla	r3, r0, r3, r5
 801ff9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ffa2:	b1b3      	cbz	r3, 801ffd2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801ffa4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801ffa8:	435a      	muls	r2, r3
 801ffaa:	1c53      	adds	r3, r2, #1
 801ffac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ffb0:	4a2d      	ldr	r2, [pc, #180]	; (8020068 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801ffb2:	121b      	asrs	r3, r3, #8
 801ffb4:	6812      	ldr	r2, [r2, #0]
 801ffb6:	2bff      	cmp	r3, #255	; 0xff
 801ffb8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ffbc:	d120      	bne.n	8020000 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801ffbe:	4b2b      	ldr	r3, [pc, #172]	; (802006c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801ffc0:	0950      	lsrs	r0, r2, #5
 801ffc2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ffc6:	4033      	ands	r3, r6
 801ffc8:	4318      	orrs	r0, r3
 801ffca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ffce:	4302      	orrs	r2, r0
 801ffd0:	800a      	strh	r2, [r1, #0]
 801ffd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ffd6:	2600      	movs	r6, #0
 801ffd8:	e788      	b.n	801feec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801ffda:	2400      	movs	r4, #0
 801ffdc:	4626      	mov	r6, r4
 801ffde:	e799      	b.n	801ff14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ffe0:	2400      	movs	r4, #0
 801ffe2:	e797      	b.n	801ff14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ffe4:	463c      	mov	r4, r7
 801ffe6:	e795      	b.n	801ff14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801ffe8:	2500      	movs	r5, #0
 801ffea:	e7ac      	b.n	801ff46 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801ffec:	2300      	movs	r3, #0
 801ffee:	461d      	mov	r5, r3
 801fff0:	e7bd      	b.n	801ff6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fff2:	4663      	mov	r3, ip
 801fff4:	4665      	mov	r5, ip
 801fff6:	e7ba      	b.n	801ff6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fff8:	2300      	movs	r3, #0
 801fffa:	e7b8      	b.n	801ff6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fffc:	463b      	mov	r3, r7
 801fffe:	e7b6      	b.n	801ff6e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020000:	880d      	ldrh	r5, [r1, #0]
 8020002:	b29f      	uxth	r7, r3
 8020004:	122c      	asrs	r4, r5, #8
 8020006:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802000a:	43db      	mvns	r3, r3
 802000c:	b2db      	uxtb	r3, r3
 802000e:	fb10 f007 	smulbb	r0, r0, r7
 8020012:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020016:	fb04 0403 	mla	r4, r4, r3, r0
 802001a:	b2f6      	uxtb	r6, r6
 802001c:	10e8      	asrs	r0, r5, #3
 802001e:	b2d2      	uxtb	r2, r2
 8020020:	00ed      	lsls	r5, r5, #3
 8020022:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020026:	fb12 f207 	smulbb	r2, r2, r7
 802002a:	fb16 f607 	smulbb	r6, r6, r7
 802002e:	b2ed      	uxtb	r5, r5
 8020030:	b2a4      	uxth	r4, r4
 8020032:	fb00 6603 	mla	r6, r0, r3, r6
 8020036:	fb05 2303 	mla	r3, r5, r3, r2
 802003a:	b29a      	uxth	r2, r3
 802003c:	1c63      	adds	r3, r4, #1
 802003e:	b2b0      	uxth	r0, r6
 8020040:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020044:	1c53      	adds	r3, r2, #1
 8020046:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802004a:	1c42      	adds	r2, r0, #1
 802004c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020050:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020054:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020058:	0940      	lsrs	r0, r0, #5
 802005a:	4323      	orrs	r3, r4
 802005c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020060:	4303      	orrs	r3, r0
 8020062:	800b      	strh	r3, [r1, #0]
 8020064:	e7b5      	b.n	801ffd2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8020066:	bf00      	nop
 8020068:	20014fdc 	.word	0x20014fdc
 802006c:	00fff800 	.word	0x00fff800

08020070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020074:	b097      	sub	sp, #92	; 0x5c
 8020076:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802007a:	9214      	str	r2, [sp, #80]	; 0x50
 802007c:	9309      	str	r3, [sp, #36]	; 0x24
 802007e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020080:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8020084:	910d      	str	r1, [sp, #52]	; 0x34
 8020086:	930f      	str	r3, [sp, #60]	; 0x3c
 8020088:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802008c:	9015      	str	r0, [sp, #84]	; 0x54
 802008e:	6850      	ldr	r0, [r2, #4]
 8020090:	6812      	ldr	r2, [r2, #0]
 8020092:	fb00 1303 	mla	r3, r0, r3, r1
 8020096:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802009a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802009c:	689b      	ldr	r3, [r3, #8]
 802009e:	3301      	adds	r3, #1
 80200a0:	f023 0301 	bic.w	r3, r3, #1
 80200a4:	930a      	str	r3, [sp, #40]	; 0x28
 80200a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80200a8:	681f      	ldr	r7, [r3, #0]
 80200aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80200ac:	2b00      	cmp	r3, #0
 80200ae:	dc03      	bgt.n	80200b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80200b0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80200b2:	2b00      	cmp	r3, #0
 80200b4:	f340 8287 	ble.w	80205c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80200b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80200ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80200be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80200c2:	1e48      	subs	r0, r1, #1
 80200c4:	f102 3cff 	add.w	ip, r2, #4294967295
 80200c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80200ca:	2b00      	cmp	r3, #0
 80200cc:	f340 80c4 	ble.w	8020258 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80200d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80200d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80200d8:	d406      	bmi.n	80200e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80200da:	4586      	cmp	lr, r0
 80200dc:	da04      	bge.n	80200e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80200de:	2b00      	cmp	r3, #0
 80200e0:	db02      	blt.n	80200e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80200e2:	4563      	cmp	r3, ip
 80200e4:	f2c0 80b9 	blt.w	802025a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80200e8:	f11e 0e01 	adds.w	lr, lr, #1
 80200ec:	f100 80aa 	bmi.w	8020244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80200f0:	4571      	cmp	r1, lr
 80200f2:	f2c0 80a7 	blt.w	8020244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80200f6:	3301      	adds	r3, #1
 80200f8:	f100 80a4 	bmi.w	8020244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80200fc:	429a      	cmp	r2, r3
 80200fe:	f2c0 80a1 	blt.w	8020244 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020102:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020104:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8020108:	930e      	str	r3, [sp, #56]	; 0x38
 802010a:	46c8      	mov	r8, r9
 802010c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802010e:	2b00      	cmp	r3, #0
 8020110:	f340 80c3 	ble.w	802029a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020114:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020116:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802011a:	1423      	asrs	r3, r4, #16
 802011c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020120:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020124:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020128:	f100 814d 	bmi.w	80203c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802012c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020130:	455b      	cmp	r3, fp
 8020132:	f280 8148 	bge.w	80203c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020136:	2800      	cmp	r0, #0
 8020138:	f2c0 8145 	blt.w	80203c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802013c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020140:	4558      	cmp	r0, fp
 8020142:	f280 8140 	bge.w	80203c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020146:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8020148:	fb00 3305 	mla	r3, r0, r5, r3
 802014c:	0858      	lsrs	r0, r3, #1
 802014e:	07dd      	lsls	r5, r3, #31
 8020150:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020154:	bf54      	ite	pl
 8020156:	f00c 0c0f 	andpl.w	ip, ip, #15
 802015a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802015e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020162:	fa5f fc8c 	uxtb.w	ip, ip
 8020166:	2a00      	cmp	r2, #0
 8020168:	f000 80db 	beq.w	8020322 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802016c:	1c58      	adds	r0, r3, #1
 802016e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020172:	07c0      	lsls	r0, r0, #31
 8020174:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020178:	bf54      	ite	pl
 802017a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802017e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020182:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020186:	fa5f f08e 	uxtb.w	r0, lr
 802018a:	9010      	str	r0, [sp, #64]	; 0x40
 802018c:	b1c9      	cbz	r1, 80201c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802018e:	4453      	add	r3, sl
 8020190:	0858      	lsrs	r0, r3, #1
 8020192:	07dd      	lsls	r5, r3, #31
 8020194:	5c38      	ldrb	r0, [r7, r0]
 8020196:	bf54      	ite	pl
 8020198:	f000 000f 	andpl.w	r0, r0, #15
 802019c:	1100      	asrmi	r0, r0, #4
 802019e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80201a2:	3301      	adds	r3, #1
 80201a4:	b2c0      	uxtb	r0, r0
 80201a6:	900b      	str	r0, [sp, #44]	; 0x2c
 80201a8:	0858      	lsrs	r0, r3, #1
 80201aa:	07dd      	lsls	r5, r3, #31
 80201ac:	f817 e000 	ldrb.w	lr, [r7, r0]
 80201b0:	bf54      	ite	pl
 80201b2:	f00e 030f 	andpl.w	r3, lr, #15
 80201b6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80201ba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80201be:	b2db      	uxtb	r3, r3
 80201c0:	9311      	str	r3, [sp, #68]	; 0x44
 80201c2:	b292      	uxth	r2, r2
 80201c4:	b289      	uxth	r1, r1
 80201c6:	fb02 f301 	mul.w	r3, r2, r1
 80201ca:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80201ce:	0112      	lsls	r2, r2, #4
 80201d0:	b289      	uxth	r1, r1
 80201d2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80201d6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80201d8:	1ad2      	subs	r2, r2, r3
 80201da:	1a40      	subs	r0, r0, r1
 80201dc:	b292      	uxth	r2, r2
 80201de:	436a      	muls	r2, r5
 80201e0:	b280      	uxth	r0, r0
 80201e2:	fb0c 2c00 	mla	ip, ip, r0, r2
 80201e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80201e8:	fb01 c102 	mla	r1, r1, r2, ip
 80201ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80201ee:	fb03 1302 	mla	r3, r3, r2, r1
 80201f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80201f6:	b1db      	cbz	r3, 8020230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80201f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80201fa:	4353      	muls	r3, r2
 80201fc:	1c5a      	adds	r2, r3, #1
 80201fe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020202:	4ac6      	ldr	r2, [pc, #792]	; (802051c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020204:	121b      	asrs	r3, r3, #8
 8020206:	6812      	ldr	r2, [r2, #0]
 8020208:	2bff      	cmp	r3, #255	; 0xff
 802020a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802020e:	f040 8099 	bne.w	8020344 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8020212:	0953      	lsrs	r3, r2, #5
 8020214:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8020218:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802021c:	f02c 0c07 	bic.w	ip, ip, #7
 8020220:	ea43 0c0c 	orr.w	ip, r3, ip
 8020224:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020228:	ea4c 0202 	orr.w	r2, ip, r2
 802022c:	f8a8 2000 	strh.w	r2, [r8]
 8020230:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8020232:	441c      	add	r4, r3
 8020234:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020236:	441e      	add	r6, r3
 8020238:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802023a:	3b01      	subs	r3, #1
 802023c:	f108 0802 	add.w	r8, r8, #2
 8020240:	930e      	str	r3, [sp, #56]	; 0x38
 8020242:	e763      	b.n	802010c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020244:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8020246:	441c      	add	r4, r3
 8020248:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802024a:	441e      	add	r6, r3
 802024c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802024e:	3b01      	subs	r3, #1
 8020250:	9309      	str	r3, [sp, #36]	; 0x24
 8020252:	f109 0902 	add.w	r9, r9, #2
 8020256:	e737      	b.n	80200c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020258:	d024      	beq.n	80202a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802025a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802025c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802025e:	3b01      	subs	r3, #1
 8020260:	fb00 4003 	mla	r0, r0, r3, r4
 8020264:	1400      	asrs	r0, r0, #16
 8020266:	f53f af4c 	bmi.w	8020102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802026a:	3901      	subs	r1, #1
 802026c:	4288      	cmp	r0, r1
 802026e:	f6bf af48 	bge.w	8020102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020272:	9924      	ldr	r1, [sp, #144]	; 0x90
 8020274:	fb01 6303 	mla	r3, r1, r3, r6
 8020278:	141b      	asrs	r3, r3, #16
 802027a:	f53f af42 	bmi.w	8020102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802027e:	3a01      	subs	r2, #1
 8020280:	4293      	cmp	r3, r2
 8020282:	f6bf af3e 	bge.w	8020102 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020286:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802028a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802028e:	930e      	str	r3, [sp, #56]	; 0x38
 8020290:	46c8      	mov	r8, r9
 8020292:	f1bb 0f00 	cmp.w	fp, #0
 8020296:	f300 80b7 	bgt.w	8020408 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802029a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802029c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80202a0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80202a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80202a6:	2b00      	cmp	r3, #0
 80202a8:	f340 818d 	ble.w	80205c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80202ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80202b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80202b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80202b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202c6:	eef0 6a62 	vmov.f32	s13, s5
 80202ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202d6:	ee16 4a90 	vmov	r4, s13
 80202da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202de:	eef0 6a43 	vmov.f32	s13, s6
 80202e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80202e6:	ee12 2a90 	vmov	r2, s5
 80202ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80202f2:	ee13 2a10 	vmov	r2, s6
 80202f6:	9323      	str	r3, [sp, #140]	; 0x8c
 80202f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80202fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80202fe:	9324      	str	r3, [sp, #144]	; 0x90
 8020300:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020302:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020304:	3b01      	subs	r3, #1
 8020306:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802030a:	930d      	str	r3, [sp, #52]	; 0x34
 802030c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802030e:	bf08      	it	eq
 8020310:	4613      	moveq	r3, r2
 8020312:	ee16 6a90 	vmov	r6, s13
 8020316:	9309      	str	r3, [sp, #36]	; 0x24
 8020318:	eeb0 3a67 	vmov.f32	s6, s15
 802031c:	eef0 2a47 	vmov.f32	s5, s14
 8020320:	e6c3      	b.n	80200aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020322:	2900      	cmp	r1, #0
 8020324:	f43f af4d 	beq.w	80201c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020328:	eb0a 0003 	add.w	r0, sl, r3
 802032c:	0843      	lsrs	r3, r0, #1
 802032e:	07c0      	lsls	r0, r0, #31
 8020330:	5cfb      	ldrb	r3, [r7, r3]
 8020332:	bf54      	ite	pl
 8020334:	f003 030f 	andpl.w	r3, r3, #15
 8020338:	111b      	asrmi	r3, r3, #4
 802033a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802033e:	b2db      	uxtb	r3, r3
 8020340:	930b      	str	r3, [sp, #44]	; 0x2c
 8020342:	e73e      	b.n	80201c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020344:	f8b8 e000 	ldrh.w	lr, [r8]
 8020348:	fa1f fb83 	uxth.w	fp, r3
 802034c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020350:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020354:	43db      	mvns	r3, r3
 8020356:	b2db      	uxtb	r3, r3
 8020358:	fb11 f10b 	smulbb	r1, r1, fp
 802035c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020360:	fb00 1003 	mla	r0, r0, r3, r1
 8020364:	fa5f fc8c 	uxtb.w	ip, ip
 8020368:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802036c:	b2d2      	uxtb	r2, r2
 802036e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020372:	b280      	uxth	r0, r0
 8020374:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020378:	fb1c fc0b 	smulbb	ip, ip, fp
 802037c:	fa5f fe8e 	uxtb.w	lr, lr
 8020380:	fb12 fb0b 	smulbb	fp, r2, fp
 8020384:	fb01 cc03 	mla	ip, r1, r3, ip
 8020388:	fb0e bb03 	mla	fp, lr, r3, fp
 802038c:	1c43      	adds	r3, r0, #1
 802038e:	fa1f fc8c 	uxth.w	ip, ip
 8020392:	fa1f fb8b 	uxth.w	fp, fp
 8020396:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802039a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802039e:	f10c 0101 	add.w	r1, ip, #1
 80203a2:	f10b 0001 	add.w	r0, fp, #1
 80203a6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80203aa:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80203ae:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80203b2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80203b6:	4318      	orrs	r0, r3
 80203b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80203bc:	ea40 000c 	orr.w	r0, r0, ip
 80203c0:	f8a8 0000 	strh.w	r0, [r8]
 80203c4:	e734      	b.n	8020230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80203c6:	f113 0b01 	adds.w	fp, r3, #1
 80203ca:	f53f af31 	bmi.w	8020230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80203ce:	45dc      	cmp	ip, fp
 80203d0:	f6ff af2e 	blt.w	8020230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80203d4:	f110 0b01 	adds.w	fp, r0, #1
 80203d8:	f53f af2a 	bmi.w	8020230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80203dc:	45de      	cmp	lr, fp
 80203de:	f6ff af27 	blt.w	8020230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80203e2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80203e4:	9302      	str	r3, [sp, #8]
 80203e6:	fa0f f38e 	sxth.w	r3, lr
 80203ea:	9301      	str	r3, [sp, #4]
 80203ec:	fa0f f38c 	sxth.w	r3, ip
 80203f0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80203f4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80203f8:	9300      	str	r3, [sp, #0]
 80203fa:	463a      	mov	r2, r7
 80203fc:	4653      	mov	r3, sl
 80203fe:	4641      	mov	r1, r8
 8020400:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020402:	f7ff fd4d 	bl	801fea0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8020406:	e713      	b.n	8020230 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020408:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802040a:	1422      	asrs	r2, r4, #16
 802040c:	1433      	asrs	r3, r6, #16
 802040e:	fb05 2303 	mla	r3, r5, r3, r2
 8020412:	085a      	lsrs	r2, r3, #1
 8020414:	07dd      	lsls	r5, r3, #31
 8020416:	5cba      	ldrb	r2, [r7, r2]
 8020418:	bf54      	ite	pl
 802041a:	f002 020f 	andpl.w	r2, r2, #15
 802041e:	1112      	asrmi	r2, r2, #4
 8020420:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020424:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020428:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802042c:	b2d2      	uxtb	r2, r2
 802042e:	2900      	cmp	r1, #0
 8020430:	d076      	beq.n	8020520 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020432:	f103 0e01 	add.w	lr, r3, #1
 8020436:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802043a:	f01e 0f01 	tst.w	lr, #1
 802043e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020442:	bf0c      	ite	eq
 8020444:	f00c 0c0f 	andeq.w	ip, ip, #15
 8020448:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802044c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020450:	fa5f f58c 	uxtb.w	r5, ip
 8020454:	9512      	str	r5, [sp, #72]	; 0x48
 8020456:	b300      	cbz	r0, 802049a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020458:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802045a:	442b      	add	r3, r5
 802045c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020460:	07dd      	lsls	r5, r3, #31
 8020462:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020466:	bf54      	ite	pl
 8020468:	f00c 0c0f 	andpl.w	ip, ip, #15
 802046c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020470:	3301      	adds	r3, #1
 8020472:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020476:	fa5f f58c 	uxtb.w	r5, ip
 802047a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802047e:	950c      	str	r5, [sp, #48]	; 0x30
 8020480:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020484:	07dd      	lsls	r5, r3, #31
 8020486:	bf54      	ite	pl
 8020488:	f00c 0c0f 	andpl.w	ip, ip, #15
 802048c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020490:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020494:	fa5f f38c 	uxtb.w	r3, ip
 8020498:	9313      	str	r3, [sp, #76]	; 0x4c
 802049a:	b289      	uxth	r1, r1
 802049c:	b280      	uxth	r0, r0
 802049e:	fb01 f300 	mul.w	r3, r1, r0
 80204a2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80204a6:	0109      	lsls	r1, r1, #4
 80204a8:	b280      	uxth	r0, r0
 80204aa:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80204ae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80204b0:	1ac9      	subs	r1, r1, r3
 80204b2:	ebac 0c00 	sub.w	ip, ip, r0
 80204b6:	b289      	uxth	r1, r1
 80204b8:	4369      	muls	r1, r5
 80204ba:	fa1f fc8c 	uxth.w	ip, ip
 80204be:	fb02 120c 	mla	r2, r2, ip, r1
 80204c2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80204c4:	fb00 2001 	mla	r0, r0, r1, r2
 80204c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80204ca:	fb03 0302 	mla	r3, r3, r2, r0
 80204ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80204d2:	b1d3      	cbz	r3, 802050a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80204d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80204d6:	4353      	muls	r3, r2
 80204d8:	1c5a      	adds	r2, r3, #1
 80204da:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80204de:	4a0f      	ldr	r2, [pc, #60]	; (802051c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80204e0:	121b      	asrs	r3, r3, #8
 80204e2:	6812      	ldr	r2, [r2, #0]
 80204e4:	2bff      	cmp	r3, #255	; 0xff
 80204e6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80204ea:	d12d      	bne.n	8020548 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80204ec:	0953      	lsrs	r3, r2, #5
 80204ee:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80204f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80204f6:	f02c 0c07 	bic.w	ip, ip, #7
 80204fa:	ea43 0c0c 	orr.w	ip, r3, ip
 80204fe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020502:	ea4c 0202 	orr.w	r2, ip, r2
 8020506:	f8a8 2000 	strh.w	r2, [r8]
 802050a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802050c:	441c      	add	r4, r3
 802050e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020510:	f108 0802 	add.w	r8, r8, #2
 8020514:	441e      	add	r6, r3
 8020516:	f10b 3bff 	add.w	fp, fp, #4294967295
 802051a:	e6ba      	b.n	8020292 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802051c:	20014fdc 	.word	0x20014fdc
 8020520:	2800      	cmp	r0, #0
 8020522:	d0ba      	beq.n	802049a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020524:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020526:	442b      	add	r3, r5
 8020528:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802052c:	07db      	lsls	r3, r3, #31
 802052e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020532:	bf54      	ite	pl
 8020534:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020538:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802053c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020540:	fa5f f38c 	uxtb.w	r3, ip
 8020544:	930c      	str	r3, [sp, #48]	; 0x30
 8020546:	e7a8      	b.n	802049a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020548:	f8b8 e000 	ldrh.w	lr, [r8]
 802054c:	fa1f fa83 	uxth.w	sl, r3
 8020550:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020554:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020558:	43db      	mvns	r3, r3
 802055a:	b2db      	uxtb	r3, r3
 802055c:	fb11 f10a 	smulbb	r1, r1, sl
 8020560:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020564:	fb00 1003 	mla	r0, r0, r3, r1
 8020568:	b2d2      	uxtb	r2, r2
 802056a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802056e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020572:	fa5f fe8e 	uxtb.w	lr, lr
 8020576:	fb12 f20a 	smulbb	r2, r2, sl
 802057a:	fb0e 2203 	mla	r2, lr, r3, r2
 802057e:	fa5f fc8c 	uxtb.w	ip, ip
 8020582:	b280      	uxth	r0, r0
 8020584:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020588:	b292      	uxth	r2, r2
 802058a:	fb1c fc0a 	smulbb	ip, ip, sl
 802058e:	fb01 cc03 	mla	ip, r1, r3, ip
 8020592:	1c43      	adds	r3, r0, #1
 8020594:	1c51      	adds	r1, r2, #1
 8020596:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802059a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802059e:	fa1f fc8c 	uxth.w	ip, ip
 80205a2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80205a6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80205aa:	4308      	orrs	r0, r1
 80205ac:	f10c 0101 	add.w	r1, ip, #1
 80205b0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80205b4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80205b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80205bc:	ea40 000c 	orr.w	r0, r0, ip
 80205c0:	f8a8 0000 	strh.w	r0, [r8]
 80205c4:	e7a1      	b.n	802050a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80205c6:	b017      	add	sp, #92	; 0x5c
 80205c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080205cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80205cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80205d0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80205d4:	2d00      	cmp	r5, #0
 80205d6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80205da:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80205de:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80205e2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80205e6:	fb05 0e03 	mla	lr, r5, r3, r0
 80205ea:	f2c0 80b0 	blt.w	802074e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80205ee:	45a9      	cmp	r9, r5
 80205f0:	f340 80ad 	ble.w	802074e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80205f4:	2800      	cmp	r0, #0
 80205f6:	f2c0 80a8 	blt.w	802074a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80205fa:	4580      	cmp	r8, r0
 80205fc:	f340 80a5 	ble.w	802074a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8020600:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8020604:	f01e 0f01 	tst.w	lr, #1
 8020608:	5d16      	ldrb	r6, [r2, r4]
 802060a:	bf0c      	ite	eq
 802060c:	f006 060f 	andeq.w	r6, r6, #15
 8020610:	1136      	asrne	r6, r6, #4
 8020612:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8020616:	b2f6      	uxtb	r6, r6
 8020618:	1c44      	adds	r4, r0, #1
 802061a:	f100 809b 	bmi.w	8020754 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802061e:	45a0      	cmp	r8, r4
 8020620:	f340 8098 	ble.w	8020754 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020624:	2f00      	cmp	r7, #0
 8020626:	f000 8097 	beq.w	8020758 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802062a:	f10e 0a01 	add.w	sl, lr, #1
 802062e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020632:	f01a 0f01 	tst.w	sl, #1
 8020636:	5d14      	ldrb	r4, [r2, r4]
 8020638:	bf0c      	ite	eq
 802063a:	f004 040f 	andeq.w	r4, r4, #15
 802063e:	1124      	asrne	r4, r4, #4
 8020640:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020644:	b2e4      	uxtb	r4, r4
 8020646:	3501      	adds	r5, #1
 8020648:	f100 808a 	bmi.w	8020760 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802064c:	45a9      	cmp	r9, r5
 802064e:	f340 8087 	ble.w	8020760 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020652:	f1bc 0f00 	cmp.w	ip, #0
 8020656:	f000 8086 	beq.w	8020766 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802065a:	2800      	cmp	r0, #0
 802065c:	db7e      	blt.n	802075c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802065e:	4580      	cmp	r8, r0
 8020660:	dd7c      	ble.n	802075c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8020662:	eb03 090e 	add.w	r9, r3, lr
 8020666:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802066a:	f019 0f01 	tst.w	r9, #1
 802066e:	5d55      	ldrb	r5, [r2, r5]
 8020670:	bf0c      	ite	eq
 8020672:	f005 050f 	andeq.w	r5, r5, #15
 8020676:	112d      	asrne	r5, r5, #4
 8020678:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802067c:	b2ed      	uxtb	r5, r5
 802067e:	3001      	adds	r0, #1
 8020680:	d474      	bmi.n	802076c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020682:	4580      	cmp	r8, r0
 8020684:	dd72      	ble.n	802076c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020686:	2f00      	cmp	r7, #0
 8020688:	d072      	beq.n	8020770 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802068a:	3301      	adds	r3, #1
 802068c:	449e      	add	lr, r3
 802068e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020692:	f01e 0f01 	tst.w	lr, #1
 8020696:	5cd0      	ldrb	r0, [r2, r3]
 8020698:	bf0c      	ite	eq
 802069a:	f000 000f 	andeq.w	r0, r0, #15
 802069e:	1100      	asrne	r0, r0, #4
 80206a0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80206a4:	b2c3      	uxtb	r3, r0
 80206a6:	b2ba      	uxth	r2, r7
 80206a8:	fa1f fc8c 	uxth.w	ip, ip
 80206ac:	fb02 f00c 	mul.w	r0, r2, ip
 80206b0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80206b4:	0112      	lsls	r2, r2, #4
 80206b6:	fa1f fc8c 	uxth.w	ip, ip
 80206ba:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80206be:	1a12      	subs	r2, r2, r0
 80206c0:	eba7 070c 	sub.w	r7, r7, ip
 80206c4:	b292      	uxth	r2, r2
 80206c6:	b2bf      	uxth	r7, r7
 80206c8:	4362      	muls	r2, r4
 80206ca:	fb06 2207 	mla	r2, r6, r7, r2
 80206ce:	fb0c 2505 	mla	r5, ip, r5, r2
 80206d2:	fb00 5303 	mla	r3, r0, r3, r5
 80206d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80206da:	b3a3      	cbz	r3, 8020746 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80206dc:	4a25      	ldr	r2, [pc, #148]	; (8020774 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80206de:	880e      	ldrh	r6, [r1, #0]
 80206e0:	6815      	ldr	r5, [r2, #0]
 80206e2:	1234      	asrs	r4, r6, #8
 80206e4:	b29a      	uxth	r2, r3
 80206e6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80206ea:	43db      	mvns	r3, r3
 80206ec:	b2db      	uxtb	r3, r3
 80206ee:	fb10 f002 	smulbb	r0, r0, r2
 80206f2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80206f6:	fb04 0403 	mla	r4, r4, r3, r0
 80206fa:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80206fe:	10f0      	asrs	r0, r6, #3
 8020700:	b2ed      	uxtb	r5, r5
 8020702:	00f6      	lsls	r6, r6, #3
 8020704:	fb17 f702 	smulbb	r7, r7, r2
 8020708:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802070c:	fb15 f202 	smulbb	r2, r5, r2
 8020710:	b2f6      	uxtb	r6, r6
 8020712:	b2a4      	uxth	r4, r4
 8020714:	fb00 7003 	mla	r0, r0, r3, r7
 8020718:	fb06 2303 	mla	r3, r6, r3, r2
 802071c:	b29a      	uxth	r2, r3
 802071e:	1c63      	adds	r3, r4, #1
 8020720:	b280      	uxth	r0, r0
 8020722:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020726:	1c53      	adds	r3, r2, #1
 8020728:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802072c:	1c42      	adds	r2, r0, #1
 802072e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020732:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020736:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802073a:	0940      	lsrs	r0, r0, #5
 802073c:	4323      	orrs	r3, r4
 802073e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020742:	4303      	orrs	r3, r0
 8020744:	800b      	strh	r3, [r1, #0]
 8020746:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802074a:	2600      	movs	r6, #0
 802074c:	e764      	b.n	8020618 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802074e:	2400      	movs	r4, #0
 8020750:	4626      	mov	r6, r4
 8020752:	e778      	b.n	8020646 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020754:	2400      	movs	r4, #0
 8020756:	e776      	b.n	8020646 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020758:	463c      	mov	r4, r7
 802075a:	e774      	b.n	8020646 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802075c:	2500      	movs	r5, #0
 802075e:	e78e      	b.n	802067e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8020760:	2300      	movs	r3, #0
 8020762:	461d      	mov	r5, r3
 8020764:	e79f      	b.n	80206a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020766:	4663      	mov	r3, ip
 8020768:	4665      	mov	r5, ip
 802076a:	e79c      	b.n	80206a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802076c:	2300      	movs	r3, #0
 802076e:	e79a      	b.n	80206a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020770:	463b      	mov	r3, r7
 8020772:	e798      	b.n	80206a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020774:	20014fdc 	.word	0x20014fdc

08020778 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802077c:	b093      	sub	sp, #76	; 0x4c
 802077e:	461d      	mov	r5, r3
 8020780:	920c      	str	r2, [sp, #48]	; 0x30
 8020782:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020784:	9107      	str	r1, [sp, #28]
 8020786:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802078a:	9011      	str	r0, [sp, #68]	; 0x44
 802078c:	6850      	ldr	r0, [r2, #4]
 802078e:	6812      	ldr	r2, [r2, #0]
 8020790:	fb00 1303 	mla	r3, r0, r3, r1
 8020794:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020798:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802079a:	689b      	ldr	r3, [r3, #8]
 802079c:	3301      	adds	r3, #1
 802079e:	f023 0301 	bic.w	r3, r3, #1
 80207a2:	9306      	str	r3, [sp, #24]
 80207a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80207a6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80207aa:	681f      	ldr	r7, [r3, #0]
 80207ac:	9b07      	ldr	r3, [sp, #28]
 80207ae:	2b00      	cmp	r3, #0
 80207b0:	dc03      	bgt.n	80207ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80207b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80207b4:	2b00      	cmp	r3, #0
 80207b6:	f340 8267 	ble.w	8020c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80207ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80207bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80207c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80207c4:	1e48      	subs	r0, r1, #1
 80207c6:	f102 3cff 	add.w	ip, r2, #4294967295
 80207ca:	2d00      	cmp	r5, #0
 80207cc:	f340 80b8 	ble.w	8020940 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80207d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80207d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80207d8:	d406      	bmi.n	80207e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80207da:	4586      	cmp	lr, r0
 80207dc:	da04      	bge.n	80207e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80207de:	2b00      	cmp	r3, #0
 80207e0:	db02      	blt.n	80207e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80207e2:	4563      	cmp	r3, ip
 80207e4:	f2c0 80ad 	blt.w	8020942 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80207e8:	f11e 0e01 	adds.w	lr, lr, #1
 80207ec:	f100 80a0 	bmi.w	8020930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80207f0:	4571      	cmp	r1, lr
 80207f2:	f2c0 809d 	blt.w	8020930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80207f6:	3301      	adds	r3, #1
 80207f8:	f100 809a 	bmi.w	8020930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80207fc:	429a      	cmp	r2, r3
 80207fe:	f2c0 8097 	blt.w	8020930 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8020802:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8020806:	9509      	str	r5, [sp, #36]	; 0x24
 8020808:	46c8      	mov	r8, r9
 802080a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802080c:	2b00      	cmp	r3, #0
 802080e:	f340 80b6 	ble.w	802097e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8020812:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8020816:	9308      	str	r3, [sp, #32]
 8020818:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802081a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802081e:	1423      	asrs	r3, r4, #16
 8020820:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020824:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020828:	f100 813e 	bmi.w	8020aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802082c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020830:	455b      	cmp	r3, fp
 8020832:	f280 8139 	bge.w	8020aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020836:	2800      	cmp	r0, #0
 8020838:	f2c0 8136 	blt.w	8020aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802083c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020840:	4558      	cmp	r0, fp
 8020842:	f280 8131 	bge.w	8020aa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020846:	9a06      	ldr	r2, [sp, #24]
 8020848:	fb00 3302 	mla	r3, r0, r2, r3
 802084c:	0858      	lsrs	r0, r3, #1
 802084e:	07da      	lsls	r2, r3, #31
 8020850:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020854:	9a08      	ldr	r2, [sp, #32]
 8020856:	bf54      	ite	pl
 8020858:	f00c 0c0f 	andpl.w	ip, ip, #15
 802085c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020860:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020864:	fa5f fc8c 	uxtb.w	ip, ip
 8020868:	2a00      	cmp	r2, #0
 802086a:	f000 80cb 	beq.w	8020a04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802086e:	1c58      	adds	r0, r3, #1
 8020870:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020874:	07c0      	lsls	r0, r0, #31
 8020876:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802087a:	bf54      	ite	pl
 802087c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020880:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020884:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020888:	fa5f fe8e 	uxtb.w	lr, lr
 802088c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8020890:	b1b9      	cbz	r1, 80208c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020892:	4453      	add	r3, sl
 8020894:	0858      	lsrs	r0, r3, #1
 8020896:	07da      	lsls	r2, r3, #31
 8020898:	5c38      	ldrb	r0, [r7, r0]
 802089a:	bf54      	ite	pl
 802089c:	f000 000f 	andpl.w	r0, r0, #15
 80208a0:	1100      	asrmi	r0, r0, #4
 80208a2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80208a6:	b2c0      	uxtb	r0, r0
 80208a8:	900a      	str	r0, [sp, #40]	; 0x28
 80208aa:	1c58      	adds	r0, r3, #1
 80208ac:	0843      	lsrs	r3, r0, #1
 80208ae:	07c2      	lsls	r2, r0, #31
 80208b0:	5cfb      	ldrb	r3, [r7, r3]
 80208b2:	bf54      	ite	pl
 80208b4:	f003 030f 	andpl.w	r3, r3, #15
 80208b8:	111b      	asrmi	r3, r3, #4
 80208ba:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80208be:	b2db      	uxtb	r3, r3
 80208c0:	930e      	str	r3, [sp, #56]	; 0x38
 80208c2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80208c6:	b289      	uxth	r1, r1
 80208c8:	fb02 f301 	mul.w	r3, r2, r1
 80208cc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80208d0:	0112      	lsls	r2, r2, #4
 80208d2:	b289      	uxth	r1, r1
 80208d4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80208d8:	1a40      	subs	r0, r0, r1
 80208da:	fa1f fe80 	uxth.w	lr, r0
 80208de:	1ad2      	subs	r2, r2, r3
 80208e0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80208e2:	b292      	uxth	r2, r2
 80208e4:	4342      	muls	r2, r0
 80208e6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80208ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80208ec:	fb01 c102 	mla	r1, r1, r2, ip
 80208f0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80208f2:	fb03 1302 	mla	r3, r3, r2, r1
 80208f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80208fa:	2bff      	cmp	r3, #255	; 0xff
 80208fc:	f040 8093 	bne.w	8020a26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8020900:	4bbe      	ldr	r3, [pc, #760]	; (8020bfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020902:	681a      	ldr	r2, [r3, #0]
 8020904:	4bbe      	ldr	r3, [pc, #760]	; (8020c00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020906:	0951      	lsrs	r1, r2, #5
 8020908:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802090c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020910:	430b      	orrs	r3, r1
 8020912:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020916:	4313      	orrs	r3, r2
 8020918:	f8a8 3000 	strh.w	r3, [r8]
 802091c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802091e:	441c      	add	r4, r3
 8020920:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020922:	441e      	add	r6, r3
 8020924:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020926:	3b01      	subs	r3, #1
 8020928:	f108 0802 	add.w	r8, r8, #2
 802092c:	9309      	str	r3, [sp, #36]	; 0x24
 802092e:	e76c      	b.n	802080a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020930:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020932:	441c      	add	r4, r3
 8020934:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020936:	3d01      	subs	r5, #1
 8020938:	441e      	add	r6, r3
 802093a:	f109 0902 	add.w	r9, r9, #2
 802093e:	e744      	b.n	80207ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020940:	d021      	beq.n	8020986 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020942:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020944:	1e6b      	subs	r3, r5, #1
 8020946:	fb00 4003 	mla	r0, r0, r3, r4
 802094a:	1400      	asrs	r0, r0, #16
 802094c:	f53f af59 	bmi.w	8020802 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020950:	3901      	subs	r1, #1
 8020952:	4288      	cmp	r0, r1
 8020954:	f6bf af55 	bge.w	8020802 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020958:	9920      	ldr	r1, [sp, #128]	; 0x80
 802095a:	fb01 6303 	mla	r3, r1, r3, r6
 802095e:	141b      	asrs	r3, r3, #16
 8020960:	f53f af4f 	bmi.w	8020802 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020964:	3a01      	subs	r2, #1
 8020966:	4293      	cmp	r3, r2
 8020968:	f6bf af4b 	bge.w	8020802 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802096c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8020970:	9308      	str	r3, [sp, #32]
 8020972:	46a8      	mov	r8, r5
 8020974:	46ce      	mov	lr, r9
 8020976:	f1b8 0f00 	cmp.w	r8, #0
 802097a:	f300 80b5 	bgt.w	8020ae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802097e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020982:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020986:	9b07      	ldr	r3, [sp, #28]
 8020988:	2b00      	cmp	r3, #0
 802098a:	f340 817d 	ble.w	8020c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802098e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020992:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020996:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802099a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802099c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80209a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80209a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80209a8:	eef0 6a62 	vmov.f32	s13, s5
 80209ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 80209b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80209b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80209b8:	ee16 4a90 	vmov	r4, s13
 80209bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80209c0:	eef0 6a43 	vmov.f32	s13, s6
 80209c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80209c8:	ee12 2a90 	vmov	r2, s5
 80209cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80209d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80209d4:	ee13 2a10 	vmov	r2, s6
 80209d8:	931f      	str	r3, [sp, #124]	; 0x7c
 80209da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80209dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80209e0:	9320      	str	r3, [sp, #128]	; 0x80
 80209e2:	9b07      	ldr	r3, [sp, #28]
 80209e4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80209e6:	3b01      	subs	r3, #1
 80209e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80209ec:	9307      	str	r3, [sp, #28]
 80209ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80209f0:	ee16 6a90 	vmov	r6, s13
 80209f4:	bf14      	ite	ne
 80209f6:	461d      	movne	r5, r3
 80209f8:	4615      	moveq	r5, r2
 80209fa:	eeb0 3a67 	vmov.f32	s6, s15
 80209fe:	eef0 2a47 	vmov.f32	s5, s14
 8020a02:	e6d3      	b.n	80207ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020a04:	2900      	cmp	r1, #0
 8020a06:	f43f af5c 	beq.w	80208c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020a0a:	eb0a 0003 	add.w	r0, sl, r3
 8020a0e:	0843      	lsrs	r3, r0, #1
 8020a10:	07c0      	lsls	r0, r0, #31
 8020a12:	5cfb      	ldrb	r3, [r7, r3]
 8020a14:	bf54      	ite	pl
 8020a16:	f003 030f 	andpl.w	r3, r3, #15
 8020a1a:	111b      	asrmi	r3, r3, #4
 8020a1c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020a20:	b2db      	uxtb	r3, r3
 8020a22:	930a      	str	r3, [sp, #40]	; 0x28
 8020a24:	e74d      	b.n	80208c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020a26:	2b00      	cmp	r3, #0
 8020a28:	f43f af78 	beq.w	802091c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020a2c:	4a73      	ldr	r2, [pc, #460]	; (8020bfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020a2e:	f8b8 c000 	ldrh.w	ip, [r8]
 8020a32:	6810      	ldr	r0, [r2, #0]
 8020a34:	fa1f fe83 	uxth.w	lr, r3
 8020a38:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020a3c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020a40:	43db      	mvns	r3, r3
 8020a42:	b2db      	uxtb	r3, r3
 8020a44:	fb12 f20e 	smulbb	r2, r2, lr
 8020a48:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020a4c:	fb01 2103 	mla	r1, r1, r3, r2
 8020a50:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020a54:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020a58:	b2c0      	uxtb	r0, r0
 8020a5a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020a5e:	fb1b fb0e 	smulbb	fp, fp, lr
 8020a62:	b289      	uxth	r1, r1
 8020a64:	fb10 fe0e 	smulbb	lr, r0, lr
 8020a68:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020a6c:	fa5f fc8c 	uxtb.w	ip, ip
 8020a70:	fb02 b203 	mla	r2, r2, r3, fp
 8020a74:	1c48      	adds	r0, r1, #1
 8020a76:	fb0c e303 	mla	r3, ip, r3, lr
 8020a7a:	b292      	uxth	r2, r2
 8020a7c:	b29b      	uxth	r3, r3
 8020a7e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8020a82:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8020a86:	f102 0b01 	add.w	fp, r2, #1
 8020a8a:	1c59      	adds	r1, r3, #1
 8020a8c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020a90:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020a94:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020a98:	0952      	lsrs	r2, r2, #5
 8020a9a:	4301      	orrs	r1, r0
 8020a9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020aa0:	4311      	orrs	r1, r2
 8020aa2:	f8a8 1000 	strh.w	r1, [r8]
 8020aa6:	e739      	b.n	802091c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020aa8:	f113 0b01 	adds.w	fp, r3, #1
 8020aac:	f53f af36 	bmi.w	802091c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020ab0:	45dc      	cmp	ip, fp
 8020ab2:	f6ff af33 	blt.w	802091c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020ab6:	f110 0b01 	adds.w	fp, r0, #1
 8020aba:	f53f af2f 	bmi.w	802091c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020abe:	45de      	cmp	lr, fp
 8020ac0:	f6ff af2c 	blt.w	802091c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020ac4:	9a08      	ldr	r2, [sp, #32]
 8020ac6:	9302      	str	r3, [sp, #8]
 8020ac8:	fa0f f38e 	sxth.w	r3, lr
 8020acc:	9301      	str	r3, [sp, #4]
 8020ace:	fa0f f38c 	sxth.w	r3, ip
 8020ad2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020ad6:	9105      	str	r1, [sp, #20]
 8020ad8:	9300      	str	r3, [sp, #0]
 8020ada:	463a      	mov	r2, r7
 8020adc:	4653      	mov	r3, sl
 8020ade:	4641      	mov	r1, r8
 8020ae0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020ae2:	f7ff fd73 	bl	80205cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8020ae6:	e719      	b.n	802091c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020ae8:	9906      	ldr	r1, [sp, #24]
 8020aea:	1422      	asrs	r2, r4, #16
 8020aec:	1433      	asrs	r3, r6, #16
 8020aee:	fb01 2303 	mla	r3, r1, r3, r2
 8020af2:	085a      	lsrs	r2, r3, #1
 8020af4:	07d9      	lsls	r1, r3, #31
 8020af6:	5cba      	ldrb	r2, [r7, r2]
 8020af8:	bf54      	ite	pl
 8020afa:	f002 020f 	andpl.w	r2, r2, #15
 8020afe:	1112      	asrmi	r2, r2, #4
 8020b00:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020b04:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020b08:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020b0c:	b2d2      	uxtb	r2, r2
 8020b0e:	2800      	cmp	r0, #0
 8020b10:	d062      	beq.n	8020bd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8020b12:	f103 0a01 	add.w	sl, r3, #1
 8020b16:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8020b1a:	f01a 0f01 	tst.w	sl, #1
 8020b1e:	5c79      	ldrb	r1, [r7, r1]
 8020b20:	bf0c      	ite	eq
 8020b22:	f001 010f 	andeq.w	r1, r1, #15
 8020b26:	1109      	asrne	r1, r1, #4
 8020b28:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020b2c:	b2c9      	uxtb	r1, r1
 8020b2e:	910f      	str	r1, [sp, #60]	; 0x3c
 8020b30:	f1bc 0f00 	cmp.w	ip, #0
 8020b34:	d019      	beq.n	8020b6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020b36:	9908      	ldr	r1, [sp, #32]
 8020b38:	440b      	add	r3, r1
 8020b3a:	0859      	lsrs	r1, r3, #1
 8020b3c:	f013 0f01 	tst.w	r3, #1
 8020b40:	5c79      	ldrb	r1, [r7, r1]
 8020b42:	bf0c      	ite	eq
 8020b44:	f001 010f 	andeq.w	r1, r1, #15
 8020b48:	1109      	asrne	r1, r1, #4
 8020b4a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020b4e:	b2c9      	uxtb	r1, r1
 8020b50:	3301      	adds	r3, #1
 8020b52:	910b      	str	r1, [sp, #44]	; 0x2c
 8020b54:	0859      	lsrs	r1, r3, #1
 8020b56:	07db      	lsls	r3, r3, #31
 8020b58:	5c79      	ldrb	r1, [r7, r1]
 8020b5a:	bf54      	ite	pl
 8020b5c:	f001 010f 	andpl.w	r1, r1, #15
 8020b60:	1109      	asrmi	r1, r1, #4
 8020b62:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020b66:	b2c9      	uxtb	r1, r1
 8020b68:	9110      	str	r1, [sp, #64]	; 0x40
 8020b6a:	b280      	uxth	r0, r0
 8020b6c:	fa1f fc8c 	uxth.w	ip, ip
 8020b70:	fb00 f30c 	mul.w	r3, r0, ip
 8020b74:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020b78:	0100      	lsls	r0, r0, #4
 8020b7a:	fa1f fc8c 	uxth.w	ip, ip
 8020b7e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8020b82:	eba1 010c 	sub.w	r1, r1, ip
 8020b86:	fa1f fa81 	uxth.w	sl, r1
 8020b8a:	1ac0      	subs	r0, r0, r3
 8020b8c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8020b8e:	b280      	uxth	r0, r0
 8020b90:	4348      	muls	r0, r1
 8020b92:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8020b94:	fb02 020a 	mla	r2, r2, sl, r0
 8020b98:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020b9c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8020b9e:	fb03 c302 	mla	r3, r3, r2, ip
 8020ba2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020ba6:	2bff      	cmp	r3, #255	; 0xff
 8020ba8:	d12c      	bne.n	8020c04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020baa:	4b14      	ldr	r3, [pc, #80]	; (8020bfc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020bac:	681a      	ldr	r2, [r3, #0]
 8020bae:	4b14      	ldr	r3, [pc, #80]	; (8020c00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8020bb0:	0951      	lsrs	r1, r2, #5
 8020bb2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020bb6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020bba:	430b      	orrs	r3, r1
 8020bbc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020bc0:	4313      	orrs	r3, r2
 8020bc2:	f8ae 3000 	strh.w	r3, [lr]
 8020bc6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020bc8:	441c      	add	r4, r3
 8020bca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020bcc:	f10e 0e02 	add.w	lr, lr, #2
 8020bd0:	441e      	add	r6, r3
 8020bd2:	f108 38ff 	add.w	r8, r8, #4294967295
 8020bd6:	e6ce      	b.n	8020976 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8020bd8:	f1bc 0f00 	cmp.w	ip, #0
 8020bdc:	d0c5      	beq.n	8020b6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020bde:	9908      	ldr	r1, [sp, #32]
 8020be0:	440b      	add	r3, r1
 8020be2:	0859      	lsrs	r1, r3, #1
 8020be4:	07db      	lsls	r3, r3, #31
 8020be6:	5c79      	ldrb	r1, [r7, r1]
 8020be8:	bf54      	ite	pl
 8020bea:	f001 010f 	andpl.w	r1, r1, #15
 8020bee:	1109      	asrmi	r1, r1, #4
 8020bf0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020bf4:	b2c9      	uxtb	r1, r1
 8020bf6:	910b      	str	r1, [sp, #44]	; 0x2c
 8020bf8:	e7b7      	b.n	8020b6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020bfa:	bf00      	nop
 8020bfc:	20014fdc 	.word	0x20014fdc
 8020c00:	fffff800 	.word	0xfffff800
 8020c04:	2b00      	cmp	r3, #0
 8020c06:	d0de      	beq.n	8020bc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020c08:	4a21      	ldr	r2, [pc, #132]	; (8020c90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020c0a:	f8be c000 	ldrh.w	ip, [lr]
 8020c0e:	6810      	ldr	r0, [r2, #0]
 8020c10:	fa1f fa83 	uxth.w	sl, r3
 8020c14:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020c18:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8020c1c:	43db      	mvns	r3, r3
 8020c1e:	b2db      	uxtb	r3, r3
 8020c20:	fb12 f20a 	smulbb	r2, r2, sl
 8020c24:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020c28:	fb01 2103 	mla	r1, r1, r3, r2
 8020c2c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020c30:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020c34:	b2c0      	uxtb	r0, r0
 8020c36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020c3a:	fa5f fc8c 	uxtb.w	ip, ip
 8020c3e:	fb10 f00a 	smulbb	r0, r0, sl
 8020c42:	fb0c 0003 	mla	r0, ip, r3, r0
 8020c46:	b289      	uxth	r1, r1
 8020c48:	fb1b fb0a 	smulbb	fp, fp, sl
 8020c4c:	b280      	uxth	r0, r0
 8020c4e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020c52:	fb02 b203 	mla	r2, r2, r3, fp
 8020c56:	1c4b      	adds	r3, r1, #1
 8020c58:	f100 0b01 	add.w	fp, r0, #1
 8020c5c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020c60:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020c64:	b292      	uxth	r2, r2
 8020c66:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020c6a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020c6e:	ea4b 0101 	orr.w	r1, fp, r1
 8020c72:	f102 0b01 	add.w	fp, r2, #1
 8020c76:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020c7a:	0952      	lsrs	r2, r2, #5
 8020c7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020c80:	4311      	orrs	r1, r2
 8020c82:	f8ae 1000 	strh.w	r1, [lr]
 8020c86:	e79e      	b.n	8020bc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020c88:	b013      	add	sp, #76	; 0x4c
 8020c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c8e:	bf00      	nop
 8020c90:	20014fdc 	.word	0x20014fdc

08020c94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8020c94:	b570      	push	{r4, r5, r6, lr}
 8020c96:	1208      	asrs	r0, r1, #8
 8020c98:	b29e      	uxth	r6, r3
 8020c9a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8020c9e:	1213      	asrs	r3, r2, #8
 8020ca0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020ca4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8020ca8:	fb13 f305 	smulbb	r3, r3, r5
 8020cac:	fb10 f006 	smulbb	r0, r0, r6
 8020cb0:	4418      	add	r0, r3
 8020cb2:	10cc      	asrs	r4, r1, #3
 8020cb4:	10d3      	asrs	r3, r2, #3
 8020cb6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020cba:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020cbe:	fb13 f305 	smulbb	r3, r3, r5
 8020cc2:	fb14 f406 	smulbb	r4, r4, r6
 8020cc6:	00c9      	lsls	r1, r1, #3
 8020cc8:	00d2      	lsls	r2, r2, #3
 8020cca:	441c      	add	r4, r3
 8020ccc:	b2d2      	uxtb	r2, r2
 8020cce:	b2cb      	uxtb	r3, r1
 8020cd0:	fb12 f205 	smulbb	r2, r2, r5
 8020cd4:	b280      	uxth	r0, r0
 8020cd6:	fb13 f306 	smulbb	r3, r3, r6
 8020cda:	4413      	add	r3, r2
 8020cdc:	1c42      	adds	r2, r0, #1
 8020cde:	b29b      	uxth	r3, r3
 8020ce0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020ce4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8020ce8:	1c58      	adds	r0, r3, #1
 8020cea:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020cee:	b2a4      	uxth	r4, r4
 8020cf0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020cf4:	4310      	orrs	r0, r2
 8020cf6:	1c62      	adds	r2, r4, #1
 8020cf8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020cfc:	0964      	lsrs	r4, r4, #5
 8020cfe:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020d02:	4320      	orrs	r0, r4
 8020d04:	bd70      	pop	{r4, r5, r6, pc}
	...

08020d08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8020d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d0c:	b08f      	sub	sp, #60	; 0x3c
 8020d0e:	461c      	mov	r4, r3
 8020d10:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8020d14:	9004      	str	r0, [sp, #16]
 8020d16:	460d      	mov	r5, r1
 8020d18:	4616      	mov	r6, r2
 8020d1a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d1c:	2f00      	cmp	r7, #0
 8020d1e:	f000 80f6 	beq.w	8020f0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8020d22:	6820      	ldr	r0, [r4, #0]
 8020d24:	6861      	ldr	r1, [r4, #4]
 8020d26:	aa0a      	add	r2, sp, #40	; 0x28
 8020d28:	c203      	stmia	r2!, {r0, r1}
 8020d2a:	6818      	ldr	r0, [r3, #0]
 8020d2c:	6859      	ldr	r1, [r3, #4]
 8020d2e:	aa0c      	add	r2, sp, #48	; 0x30
 8020d30:	c203      	stmia	r2!, {r0, r1}
 8020d32:	a80a      	add	r0, sp, #40	; 0x28
 8020d34:	f7ef fcfa 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020d38:	4621      	mov	r1, r4
 8020d3a:	a80c      	add	r0, sp, #48	; 0x30
 8020d3c:	f7ef fd3a 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020d40:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020d44:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8020d48:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020d4c:	f002 0301 	and.w	r3, r2, #1
 8020d50:	9306      	str	r3, [sp, #24]
 8020d52:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8020d56:	f003 0101 	and.w	r1, r3, #1
 8020d5a:	9105      	str	r1, [sp, #20]
 8020d5c:	9805      	ldr	r0, [sp, #20]
 8020d5e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8020d62:	4403      	add	r3, r0
 8020d64:	fb01 2303 	mla	r3, r1, r3, r2
 8020d68:	f04f 0802 	mov.w	r8, #2
 8020d6c:	fb93 f3f8 	sdiv	r3, r3, r8
 8020d70:	441d      	add	r5, r3
 8020d72:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8020d76:	441a      	add	r2, r3
 8020d78:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8020d7c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020d80:	4419      	add	r1, r3
 8020d82:	4b64      	ldr	r3, [pc, #400]	; (8020f14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020d84:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8020d88:	6818      	ldr	r0, [r3, #0]
 8020d8a:	6803      	ldr	r3, [r0, #0]
 8020d8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020d8e:	4798      	blx	r3
 8020d90:	4a61      	ldr	r2, [pc, #388]	; (8020f18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8020d92:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8020d96:	8813      	ldrh	r3, [r2, #0]
 8020d98:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8020d9c:	2fff      	cmp	r7, #255	; 0xff
 8020d9e:	fb03 a404 	mla	r4, r3, r4, sl
 8020da2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020da6:	f106 0604 	add.w	r6, r6, #4
 8020daa:	4611      	mov	r1, r2
 8020dac:	fb03 fb0b 	mul.w	fp, r3, fp
 8020db0:	d06b      	beq.n	8020e8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8020db2:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8020db6:	9303      	str	r3, [sp, #12]
 8020db8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8020dbc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8020dc0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8020dc4:	9b07      	ldr	r3, [sp, #28]
 8020dc6:	42a3      	cmp	r3, r4
 8020dc8:	f240 809c 	bls.w	8020f04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020dcc:	9b06      	ldr	r3, [sp, #24]
 8020dce:	2b00      	cmp	r3, #0
 8020dd0:	d039      	beq.n	8020e46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8020dd2:	782b      	ldrb	r3, [r5, #0]
 8020dd4:	8822      	ldrh	r2, [r4, #0]
 8020dd6:	9804      	ldr	r0, [sp, #16]
 8020dd8:	f003 030f 	and.w	r3, r3, #15
 8020ddc:	f105 0801 	add.w	r8, r5, #1
 8020de0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020de4:	9b03      	ldr	r3, [sp, #12]
 8020de6:	9300      	str	r3, [sp, #0]
 8020de8:	463b      	mov	r3, r7
 8020dea:	f7ff ff53 	bl	8020c94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020dee:	f824 0b02 	strh.w	r0, [r4], #2
 8020df2:	f109 3bff 	add.w	fp, r9, #4294967295
 8020df6:	f1bb 0f01 	cmp.w	fp, #1
 8020dfa:	46a2      	mov	sl, r4
 8020dfc:	f104 0404 	add.w	r4, r4, #4
 8020e00:	dd24      	ble.n	8020e4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8020e02:	f898 3000 	ldrb.w	r3, [r8]
 8020e06:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020e0a:	9804      	ldr	r0, [sp, #16]
 8020e0c:	091b      	lsrs	r3, r3, #4
 8020e0e:	f1ab 0b02 	sub.w	fp, fp, #2
 8020e12:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020e16:	9b03      	ldr	r3, [sp, #12]
 8020e18:	9300      	str	r3, [sp, #0]
 8020e1a:	463b      	mov	r3, r7
 8020e1c:	f7ff ff3a 	bl	8020c94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020e20:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020e24:	f818 3b01 	ldrb.w	r3, [r8], #1
 8020e28:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020e2c:	9804      	ldr	r0, [sp, #16]
 8020e2e:	f003 030f 	and.w	r3, r3, #15
 8020e32:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020e36:	9b03      	ldr	r3, [sp, #12]
 8020e38:	9300      	str	r3, [sp, #0]
 8020e3a:	463b      	mov	r3, r7
 8020e3c:	f7ff ff2a 	bl	8020c94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020e40:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020e44:	e7d7      	b.n	8020df6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020e46:	46a8      	mov	r8, r5
 8020e48:	46cb      	mov	fp, r9
 8020e4a:	e7d4      	b.n	8020df6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8020e4c:	d10e      	bne.n	8020e6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8020e4e:	f898 3000 	ldrb.w	r3, [r8]
 8020e52:	f8ba 2000 	ldrh.w	r2, [sl]
 8020e56:	9804      	ldr	r0, [sp, #16]
 8020e58:	091b      	lsrs	r3, r3, #4
 8020e5a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8020e5e:	9b03      	ldr	r3, [sp, #12]
 8020e60:	9300      	str	r3, [sp, #0]
 8020e62:	463b      	mov	r3, r7
 8020e64:	f7ff ff16 	bl	8020c94 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020e68:	f82a 0b02 	strh.w	r0, [sl], #2
 8020e6c:	9b08      	ldr	r3, [sp, #32]
 8020e6e:	9a05      	ldr	r2, [sp, #20]
 8020e70:	881c      	ldrh	r4, [r3, #0]
 8020e72:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8020e76:	eba4 0409 	sub.w	r4, r4, r9
 8020e7a:	4413      	add	r3, r2
 8020e7c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8020e80:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020e82:	fb93 f3f2 	sdiv	r3, r3, r2
 8020e86:	441d      	add	r5, r3
 8020e88:	e79c      	b.n	8020dc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8020e8a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8020e8e:	45a3      	cmp	fp, r4
 8020e90:	d938      	bls.n	8020f04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020e92:	9b06      	ldr	r3, [sp, #24]
 8020e94:	b1f3      	cbz	r3, 8020ed4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8020e96:	782b      	ldrb	r3, [r5, #0]
 8020e98:	f003 030f 	and.w	r3, r3, #15
 8020e9c:	1c6a      	adds	r2, r5, #1
 8020e9e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020ea2:	8023      	strh	r3, [r4, #0]
 8020ea4:	f109 30ff 	add.w	r0, r9, #4294967295
 8020ea8:	3402      	adds	r4, #2
 8020eaa:	2801      	cmp	r0, #1
 8020eac:	4623      	mov	r3, r4
 8020eae:	f104 0404 	add.w	r4, r4, #4
 8020eb2:	dd12      	ble.n	8020eda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8020eb4:	7813      	ldrb	r3, [r2, #0]
 8020eb6:	091b      	lsrs	r3, r3, #4
 8020eb8:	3802      	subs	r0, #2
 8020eba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020ebe:	f824 3c04 	strh.w	r3, [r4, #-4]
 8020ec2:	f812 3b01 	ldrb.w	r3, [r2], #1
 8020ec6:	f003 030f 	and.w	r3, r3, #15
 8020eca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020ece:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020ed2:	e7ea      	b.n	8020eaa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020ed4:	462a      	mov	r2, r5
 8020ed6:	4648      	mov	r0, r9
 8020ed8:	e7e7      	b.n	8020eaa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020eda:	d106      	bne.n	8020eea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8020edc:	7812      	ldrb	r2, [r2, #0]
 8020ede:	0912      	lsrs	r2, r2, #4
 8020ee0:	3302      	adds	r3, #2
 8020ee2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020ee6:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020eea:	880c      	ldrh	r4, [r1, #0]
 8020eec:	9a05      	ldr	r2, [sp, #20]
 8020eee:	eba4 0409 	sub.w	r4, r4, r9
 8020ef2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8020ef6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8020efa:	4413      	add	r3, r2
 8020efc:	fb93 f3f8 	sdiv	r3, r3, r8
 8020f00:	441d      	add	r5, r3
 8020f02:	e7c4      	b.n	8020e8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8020f04:	4b03      	ldr	r3, [pc, #12]	; (8020f14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8020f06:	6818      	ldr	r0, [r3, #0]
 8020f08:	6803      	ldr	r3, [r0, #0]
 8020f0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020f0c:	4798      	blx	r3
 8020f0e:	b00f      	add	sp, #60	; 0x3c
 8020f10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f14:	20014fd4 	.word	0x20014fd4
 8020f18:	20014fce 	.word	0x20014fce

08020f1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8020f1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020f1e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8020f22:	2dff      	cmp	r5, #255	; 0xff
 8020f24:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8020f28:	d10c      	bne.n	8020f44 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020f2a:	2bff      	cmp	r3, #255	; 0xff
 8020f2c:	d10a      	bne.n	8020f44 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8020f2e:	4b25      	ldr	r3, [pc, #148]	; (8020fc4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8020f30:	0948      	lsrs	r0, r1, #5
 8020f32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8020f36:	403b      	ands	r3, r7
 8020f38:	4318      	orrs	r0, r3
 8020f3a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020f3e:	4308      	orrs	r0, r1
 8020f40:	b280      	uxth	r0, r0
 8020f42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020f44:	fb15 f503 	smulbb	r5, r5, r3
 8020f48:	b2ab      	uxth	r3, r5
 8020f4a:	1c5d      	adds	r5, r3, #1
 8020f4c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8020f50:	1214      	asrs	r4, r2, #8
 8020f52:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020f56:	fa1f fc85 	uxth.w	ip, r5
 8020f5a:	10d6      	asrs	r6, r2, #3
 8020f5c:	00d0      	lsls	r0, r2, #3
 8020f5e:	43ed      	mvns	r5, r5
 8020f60:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020f64:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8020f68:	b2eb      	uxtb	r3, r5
 8020f6a:	b2c0      	uxtb	r0, r0
 8020f6c:	fb12 f20c 	smulbb	r2, r2, ip
 8020f70:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8020f74:	fb04 2403 	mla	r4, r4, r3, r2
 8020f78:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8020f7c:	b2c8      	uxtb	r0, r1
 8020f7e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020f82:	b2fd      	uxtb	r5, r7
 8020f84:	fb10 f00c 	smulbb	r0, r0, ip
 8020f88:	b2a4      	uxth	r4, r4
 8020f8a:	fb02 0003 	mla	r0, r2, r3, r0
 8020f8e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8020f92:	fb15 f50c 	smulbb	r5, r5, ip
 8020f96:	fb06 5503 	mla	r5, r6, r3, r5
 8020f9a:	b283      	uxth	r3, r0
 8020f9c:	1c60      	adds	r0, r4, #1
 8020f9e:	b2ad      	uxth	r5, r5
 8020fa0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8020fa4:	1c58      	adds	r0, r3, #1
 8020fa6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020faa:	1c6b      	adds	r3, r5, #1
 8020fac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020fb0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020fb4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020fb8:	096d      	lsrs	r5, r5, #5
 8020fba:	4320      	orrs	r0, r4
 8020fbc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020fc0:	4328      	orrs	r0, r5
 8020fc2:	e7be      	b.n	8020f42 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8020fc4:	00fff800 	.word	0x00fff800

08020fc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fcc:	461c      	mov	r4, r3
 8020fce:	b08d      	sub	sp, #52	; 0x34
 8020fd0:	460d      	mov	r5, r1
 8020fd2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020fd4:	6861      	ldr	r1, [r4, #4]
 8020fd6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8020fda:	4680      	mov	r8, r0
 8020fdc:	6820      	ldr	r0, [r4, #0]
 8020fde:	4616      	mov	r6, r2
 8020fe0:	aa08      	add	r2, sp, #32
 8020fe2:	c203      	stmia	r2!, {r0, r1}
 8020fe4:	6818      	ldr	r0, [r3, #0]
 8020fe6:	6859      	ldr	r1, [r3, #4]
 8020fe8:	aa0a      	add	r2, sp, #40	; 0x28
 8020fea:	c203      	stmia	r2!, {r0, r1}
 8020fec:	a808      	add	r0, sp, #32
 8020fee:	f7ef fb9d 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ff2:	4621      	mov	r1, r4
 8020ff4:	a80a      	add	r0, sp, #40	; 0x28
 8020ff6:	f7ef fbdd 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ffa:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8020ffe:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8021002:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8021006:	f002 0301 	and.w	r3, r2, #1
 802100a:	9303      	str	r3, [sp, #12]
 802100c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8021010:	f003 0101 	and.w	r1, r3, #1
 8021014:	9102      	str	r1, [sp, #8]
 8021016:	9802      	ldr	r0, [sp, #8]
 8021018:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802101c:	4403      	add	r3, r0
 802101e:	fb01 2303 	mla	r3, r1, r3, r2
 8021022:	f04f 0a02 	mov.w	sl, #2
 8021026:	fb93 f3fa 	sdiv	r3, r3, sl
 802102a:	441d      	add	r5, r3
 802102c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8021030:	441a      	add	r2, r3
 8021032:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8021036:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802103a:	4a3f      	ldr	r2, [pc, #252]	; (8021138 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802103c:	9205      	str	r2, [sp, #20]
 802103e:	4419      	add	r1, r3
 8021040:	6810      	ldr	r0, [r2, #0]
 8021042:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8021046:	6803      	ldr	r3, [r0, #0]
 8021048:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802104a:	4798      	blx	r3
 802104c:	4b3b      	ldr	r3, [pc, #236]	; (802113c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802104e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8021052:	8819      	ldrh	r1, [r3, #0]
 8021054:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8021058:	fb01 c404 	mla	r4, r1, r4, ip
 802105c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021060:	434f      	muls	r7, r1
 8021062:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8021066:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802106a:	3604      	adds	r6, #4
 802106c:	9204      	str	r2, [sp, #16]
 802106e:	9b04      	ldr	r3, [sp, #16]
 8021070:	429c      	cmp	r4, r3
 8021072:	d258      	bcs.n	8021126 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8021074:	9b03      	ldr	r3, [sp, #12]
 8021076:	2b00      	cmp	r3, #0
 8021078:	d034      	beq.n	80210e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802107a:	782b      	ldrb	r3, [r5, #0]
 802107c:	f003 030f 	and.w	r3, r3, #15
 8021080:	1c6f      	adds	r7, r5, #1
 8021082:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021086:	0e0b      	lsrs	r3, r1, #24
 8021088:	d006      	beq.n	8021098 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802108a:	8822      	ldrh	r2, [r4, #0]
 802108c:	9300      	str	r3, [sp, #0]
 802108e:	4640      	mov	r0, r8
 8021090:	464b      	mov	r3, r9
 8021092:	f7ff ff43 	bl	8020f1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021096:	8020      	strh	r0, [r4, #0]
 8021098:	3402      	adds	r4, #2
 802109a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802109e:	f1ba 0f01 	cmp.w	sl, #1
 80210a2:	dd22      	ble.n	80210ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80210a4:	783b      	ldrb	r3, [r7, #0]
 80210a6:	091b      	lsrs	r3, r3, #4
 80210a8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80210ac:	0e0b      	lsrs	r3, r1, #24
 80210ae:	d006      	beq.n	80210be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80210b0:	8822      	ldrh	r2, [r4, #0]
 80210b2:	9300      	str	r3, [sp, #0]
 80210b4:	4640      	mov	r0, r8
 80210b6:	464b      	mov	r3, r9
 80210b8:	f7ff ff30 	bl	8020f1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80210bc:	8020      	strh	r0, [r4, #0]
 80210be:	f817 3b01 	ldrb.w	r3, [r7], #1
 80210c2:	f003 030f 	and.w	r3, r3, #15
 80210c6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80210ca:	0e0b      	lsrs	r3, r1, #24
 80210cc:	d006      	beq.n	80210dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80210ce:	8862      	ldrh	r2, [r4, #2]
 80210d0:	9300      	str	r3, [sp, #0]
 80210d2:	4640      	mov	r0, r8
 80210d4:	464b      	mov	r3, r9
 80210d6:	f7ff ff21 	bl	8020f1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80210da:	8060      	strh	r0, [r4, #2]
 80210dc:	3404      	adds	r4, #4
 80210de:	f1aa 0a02 	sub.w	sl, sl, #2
 80210e2:	e7dc      	b.n	802109e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80210e4:	462f      	mov	r7, r5
 80210e6:	46da      	mov	sl, fp
 80210e8:	e7d9      	b.n	802109e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80210ea:	d10d      	bne.n	8021108 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80210ec:	783b      	ldrb	r3, [r7, #0]
 80210ee:	091b      	lsrs	r3, r3, #4
 80210f0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80210f4:	0e0b      	lsrs	r3, r1, #24
 80210f6:	d006      	beq.n	8021106 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80210f8:	8822      	ldrh	r2, [r4, #0]
 80210fa:	9300      	str	r3, [sp, #0]
 80210fc:	4640      	mov	r0, r8
 80210fe:	464b      	mov	r3, r9
 8021100:	f7ff ff0c 	bl	8020f1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021104:	8020      	strh	r0, [r4, #0]
 8021106:	3402      	adds	r4, #2
 8021108:	9b06      	ldr	r3, [sp, #24]
 802110a:	9a02      	ldr	r2, [sp, #8]
 802110c:	881b      	ldrh	r3, [r3, #0]
 802110e:	eba3 030b 	sub.w	r3, r3, fp
 8021112:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8021116:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802111a:	4413      	add	r3, r2
 802111c:	9a07      	ldr	r2, [sp, #28]
 802111e:	fb93 f3f2 	sdiv	r3, r3, r2
 8021122:	441d      	add	r5, r3
 8021124:	e7a3      	b.n	802106e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8021126:	9b05      	ldr	r3, [sp, #20]
 8021128:	6818      	ldr	r0, [r3, #0]
 802112a:	6803      	ldr	r3, [r0, #0]
 802112c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802112e:	4798      	blx	r3
 8021130:	b00d      	add	sp, #52	; 0x34
 8021132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021136:	bf00      	nop
 8021138:	20014fd4 	.word	0x20014fd4
 802113c:	20014fce 	.word	0x20014fce

08021140 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8021140:	b570      	push	{r4, r5, r6, lr}
 8021142:	1214      	asrs	r4, r2, #8
 8021144:	788d      	ldrb	r5, [r1, #2]
 8021146:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802114a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802114e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021152:	fb15 f503 	smulbb	r5, r5, r3
 8021156:	fb04 5506 	mla	r5, r4, r6, r5
 802115a:	10d0      	asrs	r0, r2, #3
 802115c:	784c      	ldrb	r4, [r1, #1]
 802115e:	7809      	ldrb	r1, [r1, #0]
 8021160:	00d2      	lsls	r2, r2, #3
 8021162:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021166:	b2d2      	uxtb	r2, r2
 8021168:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802116c:	fb14 f403 	smulbb	r4, r4, r3
 8021170:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8021174:	fb11 f303 	smulbb	r3, r1, r3
 8021178:	fb00 4406 	mla	r4, r0, r6, r4
 802117c:	fb02 3306 	mla	r3, r2, r6, r3
 8021180:	b2ad      	uxth	r5, r5
 8021182:	b29b      	uxth	r3, r3
 8021184:	b2a4      	uxth	r4, r4
 8021186:	1c68      	adds	r0, r5, #1
 8021188:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 802118c:	1c62      	adds	r2, r4, #1
 802118e:	1c58      	adds	r0, r3, #1
 8021190:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021194:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021198:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802119c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80211a0:	0964      	lsrs	r4, r4, #5
 80211a2:	4328      	orrs	r0, r5
 80211a4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80211a8:	4320      	orrs	r0, r4
 80211aa:	bd70      	pop	{r4, r5, r6, pc}

080211ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80211ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211b0:	b08f      	sub	sp, #60	; 0x3c
 80211b2:	461c      	mov	r4, r3
 80211b4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80211b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80211ba:	4682      	mov	sl, r0
 80211bc:	460e      	mov	r6, r1
 80211be:	4615      	mov	r5, r2
 80211c0:	2f00      	cmp	r7, #0
 80211c2:	f000 8142 	beq.w	802144a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80211c6:	6820      	ldr	r0, [r4, #0]
 80211c8:	6861      	ldr	r1, [r4, #4]
 80211ca:	aa0a      	add	r2, sp, #40	; 0x28
 80211cc:	c203      	stmia	r2!, {r0, r1}
 80211ce:	6818      	ldr	r0, [r3, #0]
 80211d0:	6859      	ldr	r1, [r3, #4]
 80211d2:	aa0c      	add	r2, sp, #48	; 0x30
 80211d4:	c203      	stmia	r2!, {r0, r1}
 80211d6:	a80a      	add	r0, sp, #40	; 0x28
 80211d8:	f7ef faa8 	bl	801072c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80211dc:	4621      	mov	r1, r4
 80211de:	a80c      	add	r0, sp, #48	; 0x30
 80211e0:	f7ef fae8 	bl	80107b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80211e4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80211e8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80211ec:	f002 0301 	and.w	r3, r2, #1
 80211f0:	9306      	str	r3, [sp, #24]
 80211f2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80211f6:	f003 0101 	and.w	r1, r3, #1
 80211fa:	9105      	str	r1, [sp, #20]
 80211fc:	9805      	ldr	r0, [sp, #20]
 80211fe:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8021202:	4403      	add	r3, r0
 8021204:	fb01 2303 	mla	r3, r1, r3, r2
 8021208:	f04f 0802 	mov.w	r8, #2
 802120c:	fb93 f3f8 	sdiv	r3, r3, r8
 8021210:	441e      	add	r6, r3
 8021212:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8021216:	441a      	add	r2, r3
 8021218:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802121c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8021220:	4419      	add	r1, r3
 8021222:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8021226:	9303      	str	r3, [sp, #12]
 8021228:	4b89      	ldr	r3, [pc, #548]	; (8021450 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802122a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802122e:	6818      	ldr	r0, [r3, #0]
 8021230:	6803      	ldr	r3, [r0, #0]
 8021232:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021234:	4798      	blx	r3
 8021236:	4a87      	ldr	r2, [pc, #540]	; (8021454 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8021238:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802123c:	8813      	ldrh	r3, [r2, #0]
 802123e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8021242:	2fff      	cmp	r7, #255	; 0xff
 8021244:	fb03 9404 	mla	r4, r3, r4, r9
 8021248:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802124c:	f105 0504 	add.w	r5, r5, #4
 8021250:	4694      	mov	ip, r2
 8021252:	fb03 f30b 	mul.w	r3, r3, fp
 8021256:	d071      	beq.n	802133c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8021258:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802125c:	43f9      	mvns	r1, r7
 802125e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021262:	b2c9      	uxtb	r1, r1
 8021264:	9104      	str	r1, [sp, #16]
 8021266:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802126a:	9b07      	ldr	r3, [sp, #28]
 802126c:	42a3      	cmp	r3, r4
 802126e:	f240 80e7 	bls.w	8021440 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8021272:	9b06      	ldr	r3, [sp, #24]
 8021274:	2b00      	cmp	r3, #0
 8021276:	d03d      	beq.n	80212f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8021278:	7831      	ldrb	r1, [r6, #0]
 802127a:	9b04      	ldr	r3, [sp, #16]
 802127c:	8822      	ldrh	r2, [r4, #0]
 802127e:	9300      	str	r3, [sp, #0]
 8021280:	f001 010f 	and.w	r1, r1, #15
 8021284:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021288:	463b      	mov	r3, r7
 802128a:	4429      	add	r1, r5
 802128c:	4650      	mov	r0, sl
 802128e:	f7ff ff57 	bl	8021140 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021292:	9b03      	ldr	r3, [sp, #12]
 8021294:	f824 0b02 	strh.w	r0, [r4], #2
 8021298:	f106 0801 	add.w	r8, r6, #1
 802129c:	f103 3bff 	add.w	fp, r3, #4294967295
 80212a0:	f1bb 0f01 	cmp.w	fp, #1
 80212a4:	46a1      	mov	r9, r4
 80212a6:	f104 0404 	add.w	r4, r4, #4
 80212aa:	dd27      	ble.n	80212fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80212ac:	f898 1000 	ldrb.w	r1, [r8]
 80212b0:	9b04      	ldr	r3, [sp, #16]
 80212b2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80212b6:	9300      	str	r3, [sp, #0]
 80212b8:	0909      	lsrs	r1, r1, #4
 80212ba:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80212be:	463b      	mov	r3, r7
 80212c0:	4429      	add	r1, r5
 80212c2:	4650      	mov	r0, sl
 80212c4:	f7ff ff3c 	bl	8021140 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80212c8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80212cc:	f818 1b01 	ldrb.w	r1, [r8], #1
 80212d0:	9b04      	ldr	r3, [sp, #16]
 80212d2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80212d6:	9300      	str	r3, [sp, #0]
 80212d8:	f001 010f 	and.w	r1, r1, #15
 80212dc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80212e0:	463b      	mov	r3, r7
 80212e2:	4429      	add	r1, r5
 80212e4:	4650      	mov	r0, sl
 80212e6:	f7ff ff2b 	bl	8021140 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80212ea:	f1ab 0b02 	sub.w	fp, fp, #2
 80212ee:	f824 0c02 	strh.w	r0, [r4, #-2]
 80212f2:	e7d5      	b.n	80212a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80212f4:	46b0      	mov	r8, r6
 80212f6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80212fa:	e7d1      	b.n	80212a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80212fc:	d10f      	bne.n	802131e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80212fe:	f898 1000 	ldrb.w	r1, [r8]
 8021302:	9b04      	ldr	r3, [sp, #16]
 8021304:	f8b9 2000 	ldrh.w	r2, [r9]
 8021308:	9300      	str	r3, [sp, #0]
 802130a:	0909      	lsrs	r1, r1, #4
 802130c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021310:	463b      	mov	r3, r7
 8021312:	4429      	add	r1, r5
 8021314:	4650      	mov	r0, sl
 8021316:	f7ff ff13 	bl	8021140 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802131a:	f829 0b02 	strh.w	r0, [r9], #2
 802131e:	9b08      	ldr	r3, [sp, #32]
 8021320:	9a05      	ldr	r2, [sp, #20]
 8021322:	881c      	ldrh	r4, [r3, #0]
 8021324:	9b03      	ldr	r3, [sp, #12]
 8021326:	1ae4      	subs	r4, r4, r3
 8021328:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802132c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021330:	4413      	add	r3, r2
 8021332:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021334:	fb93 f3f2 	sdiv	r3, r3, r2
 8021338:	441e      	add	r6, r3
 802133a:	e796      	b.n	802126a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802133c:	4f46      	ldr	r7, [pc, #280]	; (8021458 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802133e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021342:	42a3      	cmp	r3, r4
 8021344:	d97c      	bls.n	8021440 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8021346:	9a06      	ldr	r2, [sp, #24]
 8021348:	2a00      	cmp	r2, #0
 802134a:	d054      	beq.n	80213f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802134c:	7830      	ldrb	r0, [r6, #0]
 802134e:	f000 000f 	and.w	r0, r0, #15
 8021352:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021356:	eb05 0e00 	add.w	lr, r5, r0
 802135a:	5c28      	ldrb	r0, [r5, r0]
 802135c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8021360:	f89e e001 	ldrb.w	lr, [lr, #1]
 8021364:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021368:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802136c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8021370:	ea42 020e 	orr.w	r2, r2, lr
 8021374:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8021378:	f824 2b02 	strh.w	r2, [r4], #2
 802137c:	9a03      	ldr	r2, [sp, #12]
 802137e:	1c71      	adds	r1, r6, #1
 8021380:	f102 3eff 	add.w	lr, r2, #4294967295
 8021384:	f1be 0f01 	cmp.w	lr, #1
 8021388:	4620      	mov	r0, r4
 802138a:	f104 0404 	add.w	r4, r4, #4
 802138e:	dd36      	ble.n	80213fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8021390:	7808      	ldrb	r0, [r1, #0]
 8021392:	0900      	lsrs	r0, r0, #4
 8021394:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021398:	eb05 0a00 	add.w	sl, r5, r0
 802139c:	f1ae 0e02 	sub.w	lr, lr, #2
 80213a0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80213a4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80213a8:	00d2      	lsls	r2, r2, #3
 80213aa:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80213ae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80213b2:	ea49 0202 	orr.w	r2, r9, r2
 80213b6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80213ba:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80213be:	f824 2c04 	strh.w	r2, [r4, #-4]
 80213c2:	f811 0b01 	ldrb.w	r0, [r1], #1
 80213c6:	f000 000f 	and.w	r0, r0, #15
 80213ca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80213ce:	eb05 0a00 	add.w	sl, r5, r0
 80213d2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80213d6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80213da:	00d2      	lsls	r2, r2, #3
 80213dc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80213e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80213e4:	ea49 0202 	orr.w	r2, r9, r2
 80213e8:	f815 9000 	ldrb.w	r9, [r5, r0]
 80213ec:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80213f0:	f824 2c02 	strh.w	r2, [r4, #-2]
 80213f4:	e7c6      	b.n	8021384 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80213f6:	4631      	mov	r1, r6
 80213f8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80213fc:	e7c2      	b.n	8021384 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80213fe:	d111      	bne.n	8021424 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8021400:	7809      	ldrb	r1, [r1, #0]
 8021402:	0909      	lsrs	r1, r1, #4
 8021404:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021408:	186c      	adds	r4, r5, r1
 802140a:	5c69      	ldrb	r1, [r5, r1]
 802140c:	78a2      	ldrb	r2, [r4, #2]
 802140e:	7864      	ldrb	r4, [r4, #1]
 8021410:	00e4      	lsls	r4, r4, #3
 8021412:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8021416:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802141a:	4322      	orrs	r2, r4
 802141c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8021420:	f820 2b02 	strh.w	r2, [r0], #2
 8021424:	9a03      	ldr	r2, [sp, #12]
 8021426:	f8bc 4000 	ldrh.w	r4, [ip]
 802142a:	9905      	ldr	r1, [sp, #20]
 802142c:	1aa4      	subs	r4, r4, r2
 802142e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8021432:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021436:	440a      	add	r2, r1
 8021438:	fb92 f2f8 	sdiv	r2, r2, r8
 802143c:	4416      	add	r6, r2
 802143e:	e780      	b.n	8021342 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8021440:	4b03      	ldr	r3, [pc, #12]	; (8021450 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021442:	6818      	ldr	r0, [r3, #0]
 8021444:	6803      	ldr	r3, [r0, #0]
 8021446:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021448:	4798      	blx	r3
 802144a:	b00f      	add	sp, #60	; 0x3c
 802144c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021450:	20014fd4 	.word	0x20014fd4
 8021454:	20014fce 	.word	0x20014fce
 8021458:	fffff800 	.word	0xfffff800

0802145c <CRC_Lock>:
 802145c:	b530      	push	{r4, r5, lr}
 802145e:	4a20      	ldr	r2, [pc, #128]	; (80214e0 <CRC_Lock+0x84>)
 8021460:	6813      	ldr	r3, [r2, #0]
 8021462:	f023 0301 	bic.w	r3, r3, #1
 8021466:	6013      	str	r3, [r2, #0]
 8021468:	4b1e      	ldr	r3, [pc, #120]	; (80214e4 <CRC_Lock+0x88>)
 802146a:	681a      	ldr	r2, [r3, #0]
 802146c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8021470:	4022      	ands	r2, r4
 8021472:	f24c 2540 	movw	r5, #49728	; 0xc240
 8021476:	42aa      	cmp	r2, r5
 8021478:	d005      	beq.n	8021486 <CRC_Lock+0x2a>
 802147a:	681b      	ldr	r3, [r3, #0]
 802147c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8021480:	4023      	ands	r3, r4
 8021482:	4293      	cmp	r3, r2
 8021484:	d124      	bne.n	80214d0 <CRC_Lock+0x74>
 8021486:	4b18      	ldr	r3, [pc, #96]	; (80214e8 <CRC_Lock+0x8c>)
 8021488:	681b      	ldr	r3, [r3, #0]
 802148a:	bb0b      	cbnz	r3, 80214d0 <CRC_Lock+0x74>
 802148c:	4b17      	ldr	r3, [pc, #92]	; (80214ec <CRC_Lock+0x90>)
 802148e:	681a      	ldr	r2, [r3, #0]
 8021490:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021494:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8021498:	d00d      	beq.n	80214b6 <CRC_Lock+0x5a>
 802149a:	681a      	ldr	r2, [r3, #0]
 802149c:	f240 4483 	movw	r4, #1155	; 0x483
 80214a0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80214a4:	42a2      	cmp	r2, r4
 80214a6:	d006      	beq.n	80214b6 <CRC_Lock+0x5a>
 80214a8:	681b      	ldr	r3, [r3, #0]
 80214aa:	f240 4285 	movw	r2, #1157	; 0x485
 80214ae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80214b2:	4293      	cmp	r3, r2
 80214b4:	d10c      	bne.n	80214d0 <CRC_Lock+0x74>
 80214b6:	4b0e      	ldr	r3, [pc, #56]	; (80214f0 <CRC_Lock+0x94>)
 80214b8:	2201      	movs	r2, #1
 80214ba:	601a      	str	r2, [r3, #0]
 80214bc:	681a      	ldr	r2, [r3, #0]
 80214be:	2a00      	cmp	r2, #0
 80214c0:	d1fc      	bne.n	80214bc <CRC_Lock+0x60>
 80214c2:	4b0c      	ldr	r3, [pc, #48]	; (80214f4 <CRC_Lock+0x98>)
 80214c4:	6018      	str	r0, [r3, #0]
 80214c6:	6818      	ldr	r0, [r3, #0]
 80214c8:	1a43      	subs	r3, r0, r1
 80214ca:	4258      	negs	r0, r3
 80214cc:	4158      	adcs	r0, r3
 80214ce:	bd30      	pop	{r4, r5, pc}
 80214d0:	4b09      	ldr	r3, [pc, #36]	; (80214f8 <CRC_Lock+0x9c>)
 80214d2:	2201      	movs	r2, #1
 80214d4:	601a      	str	r2, [r3, #0]
 80214d6:	681a      	ldr	r2, [r3, #0]
 80214d8:	2a00      	cmp	r2, #0
 80214da:	d1fc      	bne.n	80214d6 <CRC_Lock+0x7a>
 80214dc:	4b07      	ldr	r3, [pc, #28]	; (80214fc <CRC_Lock+0xa0>)
 80214de:	e7f1      	b.n	80214c4 <CRC_Lock+0x68>
 80214e0:	e0002000 	.word	0xe0002000
 80214e4:	e000ed00 	.word	0xe000ed00
 80214e8:	e0042000 	.word	0xe0042000
 80214ec:	5c001000 	.word	0x5c001000
 80214f0:	58024c08 	.word	0x58024c08
 80214f4:	58024c00 	.word	0x58024c00
 80214f8:	40023008 	.word	0x40023008
 80214fc:	40023000 	.word	0x40023000

08021500 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8021500:	6101      	str	r1, [r0, #16]
 8021502:	4770      	bx	lr

08021504 <_ZN8touchgfx8Gestures4tickEv>:
 8021504:	7b83      	ldrb	r3, [r0, #14]
 8021506:	b14b      	cbz	r3, 802151c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8021508:	8903      	ldrh	r3, [r0, #8]
 802150a:	3301      	adds	r3, #1
 802150c:	b29b      	uxth	r3, r3
 802150e:	2b07      	cmp	r3, #7
 8021510:	8103      	strh	r3, [r0, #8]
 8021512:	bf81      	itttt	hi
 8021514:	2300      	movhi	r3, #0
 8021516:	8143      	strhhi	r3, [r0, #10]
 8021518:	8183      	strhhi	r3, [r0, #12]
 802151a:	7383      	strbhi	r3, [r0, #14]
 802151c:	4770      	bx	lr
	...

08021520 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8021520:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8021524:	4698      	mov	r8, r3
 8021526:	8883      	ldrh	r3, [r0, #4]
 8021528:	f8ad 3006 	strh.w	r3, [sp, #6]
 802152c:	eba8 0303 	sub.w	r3, r8, r3
 8021530:	b21b      	sxth	r3, r3
 8021532:	4604      	mov	r4, r0
 8021534:	2b00      	cmp	r3, #0
 8021536:	4617      	mov	r7, r2
 8021538:	4a18      	ldr	r2, [pc, #96]	; (802159c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802153a:	9200      	str	r2, [sp, #0]
 802153c:	bfb8      	it	lt
 802153e:	425b      	neglt	r3, r3
 8021540:	8aa2      	ldrh	r2, [r4, #20]
 8021542:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8021546:	f8ad 800a 	strh.w	r8, [sp, #10]
 802154a:	b21b      	sxth	r3, r3
 802154c:	460e      	mov	r6, r1
 802154e:	4293      	cmp	r3, r2
 8021550:	88c1      	ldrh	r1, [r0, #6]
 8021552:	f8ad 1008 	strh.w	r1, [sp, #8]
 8021556:	f04f 0000 	mov.w	r0, #0
 802155a:	f88d 0004 	strb.w	r0, [sp, #4]
 802155e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021562:	dc07      	bgt.n	8021574 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8021564:	1a69      	subs	r1, r5, r1
 8021566:	b209      	sxth	r1, r1
 8021568:	2900      	cmp	r1, #0
 802156a:	bfb8      	it	lt
 802156c:	4249      	neglt	r1, r1
 802156e:	b209      	sxth	r1, r1
 8021570:	428a      	cmp	r2, r1
 8021572:	da10      	bge.n	8021596 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8021574:	6920      	ldr	r0, [r4, #16]
 8021576:	6803      	ldr	r3, [r0, #0]
 8021578:	4669      	mov	r1, sp
 802157a:	685b      	ldr	r3, [r3, #4]
 802157c:	4798      	blx	r3
 802157e:	eba8 0606 	sub.w	r6, r8, r6
 8021582:	2300      	movs	r3, #0
 8021584:	1bef      	subs	r7, r5, r7
 8021586:	2001      	movs	r0, #1
 8021588:	8123      	strh	r3, [r4, #8]
 802158a:	8166      	strh	r6, [r4, #10]
 802158c:	81a7      	strh	r7, [r4, #12]
 802158e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8021592:	80e5      	strh	r5, [r4, #6]
 8021594:	73a0      	strb	r0, [r4, #14]
 8021596:	b004      	add	sp, #16
 8021598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802159c:	08024ee8 	.word	0x08024ee8

080215a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80215a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80215a2:	461e      	mov	r6, r3
 80215a4:	1e4b      	subs	r3, r1, #1
 80215a6:	2b01      	cmp	r3, #1
 80215a8:	b085      	sub	sp, #20
 80215aa:	4604      	mov	r4, r0
 80215ac:	460d      	mov	r5, r1
 80215ae:	4617      	mov	r7, r2
 80215b0:	d84b      	bhi.n	802164a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80215b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80215b6:	1cd3      	adds	r3, r2, #3
 80215b8:	b29b      	uxth	r3, r3
 80215ba:	2b06      	cmp	r3, #6
 80215bc:	d916      	bls.n	80215ec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80215be:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8021660 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80215c2:	f8cd c004 	str.w	ip, [sp, #4]
 80215c6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80215ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80215ce:	6900      	ldr	r0, [r0, #16]
 80215d0:	f8ad 100c 	strh.w	r1, [sp, #12]
 80215d4:	f04f 0c00 	mov.w	ip, #0
 80215d8:	f88d c008 	strb.w	ip, [sp, #8]
 80215dc:	f8ad 200a 	strh.w	r2, [sp, #10]
 80215e0:	f8ad 300e 	strh.w	r3, [sp, #14]
 80215e4:	6803      	ldr	r3, [r0, #0]
 80215e6:	a901      	add	r1, sp, #4
 80215e8:	689b      	ldr	r3, [r3, #8]
 80215ea:	4798      	blx	r3
 80215ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80215f0:	1cd3      	adds	r3, r2, #3
 80215f2:	b29b      	uxth	r3, r3
 80215f4:	2b06      	cmp	r3, #6
 80215f6:	d916      	bls.n	8021626 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80215f8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8021660 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80215fc:	f8cd c004 	str.w	ip, [sp, #4]
 8021600:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021604:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8021608:	6920      	ldr	r0, [r4, #16]
 802160a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802160e:	f04f 0c01 	mov.w	ip, #1
 8021612:	f88d c008 	strb.w	ip, [sp, #8]
 8021616:	f8ad 200a 	strh.w	r2, [sp, #10]
 802161a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802161e:	6803      	ldr	r3, [r0, #0]
 8021620:	a901      	add	r1, sp, #4
 8021622:	689b      	ldr	r3, [r3, #8]
 8021624:	4798      	blx	r3
 8021626:	4b0d      	ldr	r3, [pc, #52]	; (802165c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8021628:	9301      	str	r3, [sp, #4]
 802162a:	6920      	ldr	r0, [r4, #16]
 802162c:	f88d 5008 	strb.w	r5, [sp, #8]
 8021630:	2300      	movs	r3, #0
 8021632:	f8ad 700a 	strh.w	r7, [sp, #10]
 8021636:	f8ad 600c 	strh.w	r6, [sp, #12]
 802163a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802163e:	6803      	ldr	r3, [r0, #0]
 8021640:	a901      	add	r1, sp, #4
 8021642:	681b      	ldr	r3, [r3, #0]
 8021644:	4798      	blx	r3
 8021646:	b005      	add	sp, #20
 8021648:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802164a:	2900      	cmp	r1, #0
 802164c:	d1eb      	bne.n	8021626 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802164e:	80a2      	strh	r2, [r4, #4]
 8021650:	80c6      	strh	r6, [r0, #6]
 8021652:	60a1      	str	r1, [r4, #8]
 8021654:	81a1      	strh	r1, [r4, #12]
 8021656:	73a1      	strb	r1, [r4, #14]
 8021658:	e7e5      	b.n	8021626 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802165a:	bf00      	nop
 802165c:	08024ed4 	.word	0x08024ed4
 8021660:	08024efc 	.word	0x08024efc

08021664 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8021664:	b570      	push	{r4, r5, r6, lr}
 8021666:	790b      	ldrb	r3, [r1, #4]
 8021668:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802166c:	2b00      	cmp	r3, #0
 802166e:	bf0c      	ite	eq
 8021670:	2301      	moveq	r3, #1
 8021672:	2300      	movne	r3, #0
 8021674:	4604      	mov	r4, r0
 8021676:	460e      	mov	r6, r1
 8021678:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802167c:	d109      	bne.n	8021692 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802167e:	b14d      	cbz	r5, 8021694 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8021680:	7933      	ldrb	r3, [r6, #4]
 8021682:	2b01      	cmp	r3, #1
 8021684:	d10c      	bne.n	80216a0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8021686:	6823      	ldr	r3, [r4, #0]
 8021688:	4620      	mov	r0, r4
 802168a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802168c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8021690:	4718      	bx	r3
 8021692:	b12d      	cbz	r5, 80216a0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8021694:	6823      	ldr	r3, [r4, #0]
 8021696:	4620      	mov	r0, r4
 8021698:	695b      	ldr	r3, [r3, #20]
 802169a:	4798      	blx	r3
 802169c:	2d00      	cmp	r5, #0
 802169e:	d1ef      	bne.n	8021680 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80216a0:	bd70      	pop	{r4, r5, r6, pc}

080216a2 <__aeabi_atexit>:
 80216a2:	460b      	mov	r3, r1
 80216a4:	4601      	mov	r1, r0
 80216a6:	4618      	mov	r0, r3
 80216a8:	f000 b8d4 	b.w	8021854 <__cxa_atexit>

080216ac <_ZdlPvj>:
 80216ac:	f000 b890 	b.w	80217d0 <_ZdlPv>

080216b0 <__cxa_guard_acquire>:
 80216b0:	6803      	ldr	r3, [r0, #0]
 80216b2:	07db      	lsls	r3, r3, #31
 80216b4:	d406      	bmi.n	80216c4 <__cxa_guard_acquire+0x14>
 80216b6:	7843      	ldrb	r3, [r0, #1]
 80216b8:	b103      	cbz	r3, 80216bc <__cxa_guard_acquire+0xc>
 80216ba:	deff      	udf	#255	; 0xff
 80216bc:	2301      	movs	r3, #1
 80216be:	7043      	strb	r3, [r0, #1]
 80216c0:	4618      	mov	r0, r3
 80216c2:	4770      	bx	lr
 80216c4:	2000      	movs	r0, #0
 80216c6:	4770      	bx	lr

080216c8 <__cxa_guard_release>:
 80216c8:	2301      	movs	r3, #1
 80216ca:	6003      	str	r3, [r0, #0]
 80216cc:	4770      	bx	lr

080216ce <__cxa_pure_virtual>:
 80216ce:	b508      	push	{r3, lr}
 80216d0:	f000 f88c 	bl	80217ec <_ZSt9terminatev>

080216d4 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj>:
 80216d4:	b510      	push	{r4, lr}
 80216d6:	4c09      	ldr	r4, [pc, #36]	; (80216fc <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj+0x28>)
 80216d8:	6001      	str	r1, [r0, #0]
 80216da:	2201      	movs	r2, #1
 80216dc:	4601      	mov	r1, r0
 80216de:	680b      	ldr	r3, [r1, #0]
 80216e0:	ea83 7393 	eor.w	r3, r3, r3, lsr #30
 80216e4:	fb04 2303 	mla	r3, r4, r3, r2
 80216e8:	3201      	adds	r2, #1
 80216ea:	f5b2 7f1c 	cmp.w	r2, #624	; 0x270
 80216ee:	f841 3f04 	str.w	r3, [r1, #4]!
 80216f2:	d1f4      	bne.n	80216de <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj+0xa>
 80216f4:	f8c0 29c0 	str.w	r2, [r0, #2496]	; 0x9c0
 80216f8:	bd10      	pop	{r4, pc}
 80216fa:	bf00      	nop
 80216fc:	6c078965 	.word	0x6c078965

08021700 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 8021700:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8021702:	460c      	mov	r4, r1
 8021704:	4605      	mov	r5, r0
 8021706:	4911      	ldr	r1, [pc, #68]	; (802174c <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4c>)
 8021708:	4620      	mov	r0, r4
 802170a:	f000 f84d 	bl	80217a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 802170e:	b930      	cbnz	r0, 802171e <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e>
 8021710:	f241 5171 	movw	r1, #5489	; 0x1571
 8021714:	4628      	mov	r0, r5
 8021716:	f7ff ffdd 	bl	80216d4 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EE4seedEj>
 802171a:	b003      	add	sp, #12
 802171c:	bd30      	pop	{r4, r5, pc}
 802171e:	490c      	ldr	r1, [pc, #48]	; (8021750 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x50>)
 8021720:	4620      	mov	r0, r4
 8021722:	f000 f841 	bl	80217a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 8021726:	2800      	cmp	r0, #0
 8021728:	d0f2      	beq.n	8021710 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10>
 802172a:	6824      	ldr	r4, [r4, #0]
 802172c:	a901      	add	r1, sp, #4
 802172e:	2200      	movs	r2, #0
 8021730:	4620      	mov	r0, r4
 8021732:	f000 fe0f 	bl	8022354 <strtoul>
 8021736:	7823      	ldrb	r3, [r4, #0]
 8021738:	4601      	mov	r1, r0
 802173a:	b11b      	cbz	r3, 8021744 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44>
 802173c:	9b01      	ldr	r3, [sp, #4]
 802173e:	781b      	ldrb	r3, [r3, #0]
 8021740:	2b00      	cmp	r3, #0
 8021742:	d0e7      	beq.n	8021714 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x14>
 8021744:	4803      	ldr	r0, [pc, #12]	; (8021754 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x54>)
 8021746:	f000 f856 	bl	80217f6 <_ZSt21__throw_runtime_errorPKc>
 802174a:	bf00      	nop
 802174c:	080245ec 	.word	0x080245ec
 8021750:	08025218 	.word	0x08025218
 8021754:	08025220 	.word	0x08025220

08021758 <_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
 8021758:	f7ff bfd2 	b.w	8021700 <_ZNSt13random_device14_M_init_pretr1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>

0802175c <_ZNSt13random_device9_M_getvalEv>:
 802175c:	b508      	push	{r3, lr}
 802175e:	f7e4 fa33 	bl	8005bc8 <_ZNSt23mersenne_twister_engineIjLj32ELj624ELj397ELj31ELj2567483615ELj11ELj4294967295ELj7ELj2636928640ELj15ELj4022730752ELj18ELj1812433253EEclEv>
 8021762:	bd08      	pop	{r3, pc}

08021764 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>:
 8021764:	b10a      	cbz	r2, 802176a <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0+0x6>
 8021766:	f000 b8df 	b.w	8021928 <memcpy>
 802176a:	4770      	bx	lr

0802176c <_ZNSt11char_traitsIcE7compareEPKcS2_j>:
 802176c:	b10a      	cbz	r2, 8021772 <_ZNSt11char_traitsIcE7compareEPKcS2_j+0x6>
 802176e:	f000 b8cb 	b.w	8021908 <memcmp>
 8021772:	4610      	mov	r0, r2
 8021774:	4770      	bx	lr

08021776 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 8021776:	f850 3b08 	ldr.w	r3, [r0], #8
 802177a:	4283      	cmp	r3, r0
 802177c:	d002      	beq.n	8021784 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 802177e:	4618      	mov	r0, r3
 8021780:	f000 b826 	b.w	80217d0 <_ZdlPv>
 8021784:	4770      	bx	lr

08021786 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 8021786:	2a01      	cmp	r2, #1
 8021788:	b410      	push	{r4}
 802178a:	d104      	bne.n	8021796 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
 802178c:	780a      	ldrb	r2, [r1, #0]
 802178e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021792:	7002      	strb	r2, [r0, #0]
 8021794:	4770      	bx	lr
 8021796:	f85d 4b04 	ldr.w	r4, [sp], #4
 802179a:	f7ff bfe3 	b.w	8021764 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>

0802179e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 802179e:	b508      	push	{r3, lr}
 80217a0:	1a52      	subs	r2, r2, r1
 80217a2:	f7ff fff0 	bl	8021786 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 80217a6:	bd08      	pop	{r3, pc}

080217a8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>:
 80217a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80217aa:	6846      	ldr	r6, [r0, #4]
 80217ac:	9101      	str	r1, [sp, #4]
 80217ae:	4605      	mov	r5, r0
 80217b0:	4608      	mov	r0, r1
 80217b2:	f7de fd6d 	bl	8000290 <strlen>
 80217b6:	4286      	cmp	r6, r0
 80217b8:	4604      	mov	r4, r0
 80217ba:	4632      	mov	r2, r6
 80217bc:	9901      	ldr	r1, [sp, #4]
 80217be:	bf28      	it	cs
 80217c0:	4602      	movcs	r2, r0
 80217c2:	6828      	ldr	r0, [r5, #0]
 80217c4:	f7ff ffd2 	bl	802176c <_ZNSt11char_traitsIcE7compareEPKcS2_j>
 80217c8:	b900      	cbnz	r0, 80217cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc+0x24>
 80217ca:	1b30      	subs	r0, r6, r4
 80217cc:	b002      	add	sp, #8
 80217ce:	bd70      	pop	{r4, r5, r6, pc}

080217d0 <_ZdlPv>:
 80217d0:	f000 b892 	b.w	80218f8 <free>

080217d4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80217d4:	b508      	push	{r3, lr}
 80217d6:	4780      	blx	r0
 80217d8:	f000 f810 	bl	80217fc <abort>

080217dc <_ZSt13get_terminatev>:
 80217dc:	4b02      	ldr	r3, [pc, #8]	; (80217e8 <_ZSt13get_terminatev+0xc>)
 80217de:	6818      	ldr	r0, [r3, #0]
 80217e0:	f3bf 8f5b 	dmb	ish
 80217e4:	4770      	bx	lr
 80217e6:	bf00      	nop
 80217e8:	20000100 	.word	0x20000100

080217ec <_ZSt9terminatev>:
 80217ec:	b508      	push	{r3, lr}
 80217ee:	f7ff fff5 	bl	80217dc <_ZSt13get_terminatev>
 80217f2:	f7ff ffef 	bl	80217d4 <_ZN10__cxxabiv111__terminateEPFvvE>

080217f6 <_ZSt21__throw_runtime_errorPKc>:
 80217f6:	b508      	push	{r3, lr}
 80217f8:	f000 f800 	bl	80217fc <abort>

080217fc <abort>:
 80217fc:	b508      	push	{r3, lr}
 80217fe:	2006      	movs	r0, #6
 8021800:	f000 fd1a 	bl	8022238 <raise>
 8021804:	2001      	movs	r0, #1
 8021806:	f7e0 fcdd 	bl	80021c4 <_exit>
	...

0802180c <__assert_func>:
 802180c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802180e:	4614      	mov	r4, r2
 8021810:	461a      	mov	r2, r3
 8021812:	4b09      	ldr	r3, [pc, #36]	; (8021838 <__assert_func+0x2c>)
 8021814:	681b      	ldr	r3, [r3, #0]
 8021816:	4605      	mov	r5, r0
 8021818:	68d8      	ldr	r0, [r3, #12]
 802181a:	b14c      	cbz	r4, 8021830 <__assert_func+0x24>
 802181c:	4b07      	ldr	r3, [pc, #28]	; (802183c <__assert_func+0x30>)
 802181e:	9100      	str	r1, [sp, #0]
 8021820:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8021824:	4906      	ldr	r1, [pc, #24]	; (8021840 <__assert_func+0x34>)
 8021826:	462b      	mov	r3, r5
 8021828:	f000 f828 	bl	802187c <fiprintf>
 802182c:	f7ff ffe6 	bl	80217fc <abort>
 8021830:	4b04      	ldr	r3, [pc, #16]	; (8021844 <__assert_func+0x38>)
 8021832:	461c      	mov	r4, r3
 8021834:	e7f3      	b.n	802181e <__assert_func+0x12>
 8021836:	bf00      	nop
 8021838:	20000104 	.word	0x20000104
 802183c:	08025252 	.word	0x08025252
 8021840:	0802525f 	.word	0x0802525f
 8021844:	0802528d 	.word	0x0802528d

08021848 <atexit>:
 8021848:	2300      	movs	r3, #0
 802184a:	4601      	mov	r1, r0
 802184c:	461a      	mov	r2, r3
 802184e:	4618      	mov	r0, r3
 8021850:	f000 be64 	b.w	802251c <__register_exitproc>

08021854 <__cxa_atexit>:
 8021854:	b510      	push	{r4, lr}
 8021856:	4c05      	ldr	r4, [pc, #20]	; (802186c <__cxa_atexit+0x18>)
 8021858:	4613      	mov	r3, r2
 802185a:	b12c      	cbz	r4, 8021868 <__cxa_atexit+0x14>
 802185c:	460a      	mov	r2, r1
 802185e:	4601      	mov	r1, r0
 8021860:	2002      	movs	r0, #2
 8021862:	f000 fe5b 	bl	802251c <__register_exitproc>
 8021866:	bd10      	pop	{r4, pc}
 8021868:	4620      	mov	r0, r4
 802186a:	e7fc      	b.n	8021866 <__cxa_atexit+0x12>
 802186c:	0802251d 	.word	0x0802251d

08021870 <__errno>:
 8021870:	4b01      	ldr	r3, [pc, #4]	; (8021878 <__errno+0x8>)
 8021872:	6818      	ldr	r0, [r3, #0]
 8021874:	4770      	bx	lr
 8021876:	bf00      	nop
 8021878:	20000104 	.word	0x20000104

0802187c <fiprintf>:
 802187c:	b40e      	push	{r1, r2, r3}
 802187e:	b503      	push	{r0, r1, lr}
 8021880:	4601      	mov	r1, r0
 8021882:	ab03      	add	r3, sp, #12
 8021884:	4805      	ldr	r0, [pc, #20]	; (802189c <fiprintf+0x20>)
 8021886:	f853 2b04 	ldr.w	r2, [r3], #4
 802188a:	6800      	ldr	r0, [r0, #0]
 802188c:	9301      	str	r3, [sp, #4]
 802188e:	f000 f96b 	bl	8021b68 <_vfiprintf_r>
 8021892:	b002      	add	sp, #8
 8021894:	f85d eb04 	ldr.w	lr, [sp], #4
 8021898:	b003      	add	sp, #12
 802189a:	4770      	bx	lr
 802189c:	20000104 	.word	0x20000104

080218a0 <__libc_init_array>:
 80218a0:	b570      	push	{r4, r5, r6, lr}
 80218a2:	4d0d      	ldr	r5, [pc, #52]	; (80218d8 <__libc_init_array+0x38>)
 80218a4:	4c0d      	ldr	r4, [pc, #52]	; (80218dc <__libc_init_array+0x3c>)
 80218a6:	1b64      	subs	r4, r4, r5
 80218a8:	10a4      	asrs	r4, r4, #2
 80218aa:	2600      	movs	r6, #0
 80218ac:	42a6      	cmp	r6, r4
 80218ae:	d109      	bne.n	80218c4 <__libc_init_array+0x24>
 80218b0:	4d0b      	ldr	r5, [pc, #44]	; (80218e0 <__libc_init_array+0x40>)
 80218b2:	4c0c      	ldr	r4, [pc, #48]	; (80218e4 <__libc_init_array+0x44>)
 80218b4:	f001 f988 	bl	8022bc8 <_init>
 80218b8:	1b64      	subs	r4, r4, r5
 80218ba:	10a4      	asrs	r4, r4, #2
 80218bc:	2600      	movs	r6, #0
 80218be:	42a6      	cmp	r6, r4
 80218c0:	d105      	bne.n	80218ce <__libc_init_array+0x2e>
 80218c2:	bd70      	pop	{r4, r5, r6, pc}
 80218c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80218c8:	4798      	blx	r3
 80218ca:	3601      	adds	r6, #1
 80218cc:	e7ee      	b.n	80218ac <__libc_init_array+0xc>
 80218ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80218d2:	4798      	blx	r3
 80218d4:	3601      	adds	r6, #1
 80218d6:	e7f2      	b.n	80218be <__libc_init_array+0x1e>
 80218d8:	0813aa5c 	.word	0x0813aa5c
 80218dc:	0813aa5c 	.word	0x0813aa5c
 80218e0:	0813aa5c 	.word	0x0813aa5c
 80218e4:	0813aa70 	.word	0x0813aa70

080218e8 <malloc>:
 80218e8:	4b02      	ldr	r3, [pc, #8]	; (80218f4 <malloc+0xc>)
 80218ea:	4601      	mov	r1, r0
 80218ec:	6818      	ldr	r0, [r3, #0]
 80218ee:	f000 b89d 	b.w	8021a2c <_malloc_r>
 80218f2:	bf00      	nop
 80218f4:	20000104 	.word	0x20000104

080218f8 <free>:
 80218f8:	4b02      	ldr	r3, [pc, #8]	; (8021904 <free+0xc>)
 80218fa:	4601      	mov	r1, r0
 80218fc:	6818      	ldr	r0, [r3, #0]
 80218fe:	f000 b829 	b.w	8021954 <_free_r>
 8021902:	bf00      	nop
 8021904:	20000104 	.word	0x20000104

08021908 <memcmp>:
 8021908:	b510      	push	{r4, lr}
 802190a:	3901      	subs	r1, #1
 802190c:	4402      	add	r2, r0
 802190e:	4290      	cmp	r0, r2
 8021910:	d101      	bne.n	8021916 <memcmp+0xe>
 8021912:	2000      	movs	r0, #0
 8021914:	e005      	b.n	8021922 <memcmp+0x1a>
 8021916:	7803      	ldrb	r3, [r0, #0]
 8021918:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 802191c:	42a3      	cmp	r3, r4
 802191e:	d001      	beq.n	8021924 <memcmp+0x1c>
 8021920:	1b18      	subs	r0, r3, r4
 8021922:	bd10      	pop	{r4, pc}
 8021924:	3001      	adds	r0, #1
 8021926:	e7f2      	b.n	802190e <memcmp+0x6>

08021928 <memcpy>:
 8021928:	440a      	add	r2, r1
 802192a:	4291      	cmp	r1, r2
 802192c:	f100 33ff 	add.w	r3, r0, #4294967295
 8021930:	d100      	bne.n	8021934 <memcpy+0xc>
 8021932:	4770      	bx	lr
 8021934:	b510      	push	{r4, lr}
 8021936:	f811 4b01 	ldrb.w	r4, [r1], #1
 802193a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802193e:	4291      	cmp	r1, r2
 8021940:	d1f9      	bne.n	8021936 <memcpy+0xe>
 8021942:	bd10      	pop	{r4, pc}

08021944 <memset>:
 8021944:	4402      	add	r2, r0
 8021946:	4603      	mov	r3, r0
 8021948:	4293      	cmp	r3, r2
 802194a:	d100      	bne.n	802194e <memset+0xa>
 802194c:	4770      	bx	lr
 802194e:	f803 1b01 	strb.w	r1, [r3], #1
 8021952:	e7f9      	b.n	8021948 <memset+0x4>

08021954 <_free_r>:
 8021954:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8021956:	2900      	cmp	r1, #0
 8021958:	d044      	beq.n	80219e4 <_free_r+0x90>
 802195a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802195e:	9001      	str	r0, [sp, #4]
 8021960:	2b00      	cmp	r3, #0
 8021962:	f1a1 0404 	sub.w	r4, r1, #4
 8021966:	bfb8      	it	lt
 8021968:	18e4      	addlt	r4, r4, r3
 802196a:	f001 f87d 	bl	8022a68 <__malloc_lock>
 802196e:	4a1e      	ldr	r2, [pc, #120]	; (80219e8 <_free_r+0x94>)
 8021970:	9801      	ldr	r0, [sp, #4]
 8021972:	6813      	ldr	r3, [r2, #0]
 8021974:	b933      	cbnz	r3, 8021984 <_free_r+0x30>
 8021976:	6063      	str	r3, [r4, #4]
 8021978:	6014      	str	r4, [r2, #0]
 802197a:	b003      	add	sp, #12
 802197c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8021980:	f001 b878 	b.w	8022a74 <__malloc_unlock>
 8021984:	42a3      	cmp	r3, r4
 8021986:	d908      	bls.n	802199a <_free_r+0x46>
 8021988:	6825      	ldr	r5, [r4, #0]
 802198a:	1961      	adds	r1, r4, r5
 802198c:	428b      	cmp	r3, r1
 802198e:	bf01      	itttt	eq
 8021990:	6819      	ldreq	r1, [r3, #0]
 8021992:	685b      	ldreq	r3, [r3, #4]
 8021994:	1949      	addeq	r1, r1, r5
 8021996:	6021      	streq	r1, [r4, #0]
 8021998:	e7ed      	b.n	8021976 <_free_r+0x22>
 802199a:	461a      	mov	r2, r3
 802199c:	685b      	ldr	r3, [r3, #4]
 802199e:	b10b      	cbz	r3, 80219a4 <_free_r+0x50>
 80219a0:	42a3      	cmp	r3, r4
 80219a2:	d9fa      	bls.n	802199a <_free_r+0x46>
 80219a4:	6811      	ldr	r1, [r2, #0]
 80219a6:	1855      	adds	r5, r2, r1
 80219a8:	42a5      	cmp	r5, r4
 80219aa:	d10b      	bne.n	80219c4 <_free_r+0x70>
 80219ac:	6824      	ldr	r4, [r4, #0]
 80219ae:	4421      	add	r1, r4
 80219b0:	1854      	adds	r4, r2, r1
 80219b2:	42a3      	cmp	r3, r4
 80219b4:	6011      	str	r1, [r2, #0]
 80219b6:	d1e0      	bne.n	802197a <_free_r+0x26>
 80219b8:	681c      	ldr	r4, [r3, #0]
 80219ba:	685b      	ldr	r3, [r3, #4]
 80219bc:	6053      	str	r3, [r2, #4]
 80219be:	4421      	add	r1, r4
 80219c0:	6011      	str	r1, [r2, #0]
 80219c2:	e7da      	b.n	802197a <_free_r+0x26>
 80219c4:	d902      	bls.n	80219cc <_free_r+0x78>
 80219c6:	230c      	movs	r3, #12
 80219c8:	6003      	str	r3, [r0, #0]
 80219ca:	e7d6      	b.n	802197a <_free_r+0x26>
 80219cc:	6825      	ldr	r5, [r4, #0]
 80219ce:	1961      	adds	r1, r4, r5
 80219d0:	428b      	cmp	r3, r1
 80219d2:	bf04      	itt	eq
 80219d4:	6819      	ldreq	r1, [r3, #0]
 80219d6:	685b      	ldreq	r3, [r3, #4]
 80219d8:	6063      	str	r3, [r4, #4]
 80219da:	bf04      	itt	eq
 80219dc:	1949      	addeq	r1, r1, r5
 80219de:	6021      	streq	r1, [r4, #0]
 80219e0:	6054      	str	r4, [r2, #4]
 80219e2:	e7ca      	b.n	802197a <_free_r+0x26>
 80219e4:	b003      	add	sp, #12
 80219e6:	bd30      	pop	{r4, r5, pc}
 80219e8:	20015920 	.word	0x20015920

080219ec <sbrk_aligned>:
 80219ec:	b570      	push	{r4, r5, r6, lr}
 80219ee:	4e0e      	ldr	r6, [pc, #56]	; (8021a28 <sbrk_aligned+0x3c>)
 80219f0:	460c      	mov	r4, r1
 80219f2:	6831      	ldr	r1, [r6, #0]
 80219f4:	4605      	mov	r5, r0
 80219f6:	b911      	cbnz	r1, 80219fe <sbrk_aligned+0x12>
 80219f8:	f000 fbe6 	bl	80221c8 <_sbrk_r>
 80219fc:	6030      	str	r0, [r6, #0]
 80219fe:	4621      	mov	r1, r4
 8021a00:	4628      	mov	r0, r5
 8021a02:	f000 fbe1 	bl	80221c8 <_sbrk_r>
 8021a06:	1c43      	adds	r3, r0, #1
 8021a08:	d00a      	beq.n	8021a20 <sbrk_aligned+0x34>
 8021a0a:	1cc4      	adds	r4, r0, #3
 8021a0c:	f024 0403 	bic.w	r4, r4, #3
 8021a10:	42a0      	cmp	r0, r4
 8021a12:	d007      	beq.n	8021a24 <sbrk_aligned+0x38>
 8021a14:	1a21      	subs	r1, r4, r0
 8021a16:	4628      	mov	r0, r5
 8021a18:	f000 fbd6 	bl	80221c8 <_sbrk_r>
 8021a1c:	3001      	adds	r0, #1
 8021a1e:	d101      	bne.n	8021a24 <sbrk_aligned+0x38>
 8021a20:	f04f 34ff 	mov.w	r4, #4294967295
 8021a24:	4620      	mov	r0, r4
 8021a26:	bd70      	pop	{r4, r5, r6, pc}
 8021a28:	20015924 	.word	0x20015924

08021a2c <_malloc_r>:
 8021a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021a30:	1ccd      	adds	r5, r1, #3
 8021a32:	f025 0503 	bic.w	r5, r5, #3
 8021a36:	3508      	adds	r5, #8
 8021a38:	2d0c      	cmp	r5, #12
 8021a3a:	bf38      	it	cc
 8021a3c:	250c      	movcc	r5, #12
 8021a3e:	2d00      	cmp	r5, #0
 8021a40:	4607      	mov	r7, r0
 8021a42:	db01      	blt.n	8021a48 <_malloc_r+0x1c>
 8021a44:	42a9      	cmp	r1, r5
 8021a46:	d905      	bls.n	8021a54 <_malloc_r+0x28>
 8021a48:	230c      	movs	r3, #12
 8021a4a:	603b      	str	r3, [r7, #0]
 8021a4c:	2600      	movs	r6, #0
 8021a4e:	4630      	mov	r0, r6
 8021a50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021a54:	4e2e      	ldr	r6, [pc, #184]	; (8021b10 <_malloc_r+0xe4>)
 8021a56:	f001 f807 	bl	8022a68 <__malloc_lock>
 8021a5a:	6833      	ldr	r3, [r6, #0]
 8021a5c:	461c      	mov	r4, r3
 8021a5e:	bb34      	cbnz	r4, 8021aae <_malloc_r+0x82>
 8021a60:	4629      	mov	r1, r5
 8021a62:	4638      	mov	r0, r7
 8021a64:	f7ff ffc2 	bl	80219ec <sbrk_aligned>
 8021a68:	1c43      	adds	r3, r0, #1
 8021a6a:	4604      	mov	r4, r0
 8021a6c:	d14d      	bne.n	8021b0a <_malloc_r+0xde>
 8021a6e:	6834      	ldr	r4, [r6, #0]
 8021a70:	4626      	mov	r6, r4
 8021a72:	2e00      	cmp	r6, #0
 8021a74:	d140      	bne.n	8021af8 <_malloc_r+0xcc>
 8021a76:	6823      	ldr	r3, [r4, #0]
 8021a78:	4631      	mov	r1, r6
 8021a7a:	4638      	mov	r0, r7
 8021a7c:	eb04 0803 	add.w	r8, r4, r3
 8021a80:	f000 fba2 	bl	80221c8 <_sbrk_r>
 8021a84:	4580      	cmp	r8, r0
 8021a86:	d13a      	bne.n	8021afe <_malloc_r+0xd2>
 8021a88:	6821      	ldr	r1, [r4, #0]
 8021a8a:	3503      	adds	r5, #3
 8021a8c:	1a6d      	subs	r5, r5, r1
 8021a8e:	f025 0503 	bic.w	r5, r5, #3
 8021a92:	3508      	adds	r5, #8
 8021a94:	2d0c      	cmp	r5, #12
 8021a96:	bf38      	it	cc
 8021a98:	250c      	movcc	r5, #12
 8021a9a:	4629      	mov	r1, r5
 8021a9c:	4638      	mov	r0, r7
 8021a9e:	f7ff ffa5 	bl	80219ec <sbrk_aligned>
 8021aa2:	3001      	adds	r0, #1
 8021aa4:	d02b      	beq.n	8021afe <_malloc_r+0xd2>
 8021aa6:	6823      	ldr	r3, [r4, #0]
 8021aa8:	442b      	add	r3, r5
 8021aaa:	6023      	str	r3, [r4, #0]
 8021aac:	e00e      	b.n	8021acc <_malloc_r+0xa0>
 8021aae:	6822      	ldr	r2, [r4, #0]
 8021ab0:	1b52      	subs	r2, r2, r5
 8021ab2:	d41e      	bmi.n	8021af2 <_malloc_r+0xc6>
 8021ab4:	2a0b      	cmp	r2, #11
 8021ab6:	d916      	bls.n	8021ae6 <_malloc_r+0xba>
 8021ab8:	1961      	adds	r1, r4, r5
 8021aba:	42a3      	cmp	r3, r4
 8021abc:	6025      	str	r5, [r4, #0]
 8021abe:	bf18      	it	ne
 8021ac0:	6059      	strne	r1, [r3, #4]
 8021ac2:	6863      	ldr	r3, [r4, #4]
 8021ac4:	bf08      	it	eq
 8021ac6:	6031      	streq	r1, [r6, #0]
 8021ac8:	5162      	str	r2, [r4, r5]
 8021aca:	604b      	str	r3, [r1, #4]
 8021acc:	4638      	mov	r0, r7
 8021ace:	f104 060b 	add.w	r6, r4, #11
 8021ad2:	f000 ffcf 	bl	8022a74 <__malloc_unlock>
 8021ad6:	f026 0607 	bic.w	r6, r6, #7
 8021ada:	1d23      	adds	r3, r4, #4
 8021adc:	1af2      	subs	r2, r6, r3
 8021ade:	d0b6      	beq.n	8021a4e <_malloc_r+0x22>
 8021ae0:	1b9b      	subs	r3, r3, r6
 8021ae2:	50a3      	str	r3, [r4, r2]
 8021ae4:	e7b3      	b.n	8021a4e <_malloc_r+0x22>
 8021ae6:	6862      	ldr	r2, [r4, #4]
 8021ae8:	42a3      	cmp	r3, r4
 8021aea:	bf0c      	ite	eq
 8021aec:	6032      	streq	r2, [r6, #0]
 8021aee:	605a      	strne	r2, [r3, #4]
 8021af0:	e7ec      	b.n	8021acc <_malloc_r+0xa0>
 8021af2:	4623      	mov	r3, r4
 8021af4:	6864      	ldr	r4, [r4, #4]
 8021af6:	e7b2      	b.n	8021a5e <_malloc_r+0x32>
 8021af8:	4634      	mov	r4, r6
 8021afa:	6876      	ldr	r6, [r6, #4]
 8021afc:	e7b9      	b.n	8021a72 <_malloc_r+0x46>
 8021afe:	230c      	movs	r3, #12
 8021b00:	603b      	str	r3, [r7, #0]
 8021b02:	4638      	mov	r0, r7
 8021b04:	f000 ffb6 	bl	8022a74 <__malloc_unlock>
 8021b08:	e7a1      	b.n	8021a4e <_malloc_r+0x22>
 8021b0a:	6025      	str	r5, [r4, #0]
 8021b0c:	e7de      	b.n	8021acc <_malloc_r+0xa0>
 8021b0e:	bf00      	nop
 8021b10:	20015920 	.word	0x20015920

08021b14 <__sfputc_r>:
 8021b14:	6893      	ldr	r3, [r2, #8]
 8021b16:	3b01      	subs	r3, #1
 8021b18:	2b00      	cmp	r3, #0
 8021b1a:	b410      	push	{r4}
 8021b1c:	6093      	str	r3, [r2, #8]
 8021b1e:	da08      	bge.n	8021b32 <__sfputc_r+0x1e>
 8021b20:	6994      	ldr	r4, [r2, #24]
 8021b22:	42a3      	cmp	r3, r4
 8021b24:	db01      	blt.n	8021b2a <__sfputc_r+0x16>
 8021b26:	290a      	cmp	r1, #10
 8021b28:	d103      	bne.n	8021b32 <__sfputc_r+0x1e>
 8021b2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021b2e:	f000 bc35 	b.w	802239c <__swbuf_r>
 8021b32:	6813      	ldr	r3, [r2, #0]
 8021b34:	1c58      	adds	r0, r3, #1
 8021b36:	6010      	str	r0, [r2, #0]
 8021b38:	7019      	strb	r1, [r3, #0]
 8021b3a:	4608      	mov	r0, r1
 8021b3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021b40:	4770      	bx	lr

08021b42 <__sfputs_r>:
 8021b42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021b44:	4606      	mov	r6, r0
 8021b46:	460f      	mov	r7, r1
 8021b48:	4614      	mov	r4, r2
 8021b4a:	18d5      	adds	r5, r2, r3
 8021b4c:	42ac      	cmp	r4, r5
 8021b4e:	d101      	bne.n	8021b54 <__sfputs_r+0x12>
 8021b50:	2000      	movs	r0, #0
 8021b52:	e007      	b.n	8021b64 <__sfputs_r+0x22>
 8021b54:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021b58:	463a      	mov	r2, r7
 8021b5a:	4630      	mov	r0, r6
 8021b5c:	f7ff ffda 	bl	8021b14 <__sfputc_r>
 8021b60:	1c43      	adds	r3, r0, #1
 8021b62:	d1f3      	bne.n	8021b4c <__sfputs_r+0xa>
 8021b64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08021b68 <_vfiprintf_r>:
 8021b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b6c:	460d      	mov	r5, r1
 8021b6e:	b09d      	sub	sp, #116	; 0x74
 8021b70:	4614      	mov	r4, r2
 8021b72:	4698      	mov	r8, r3
 8021b74:	4606      	mov	r6, r0
 8021b76:	b118      	cbz	r0, 8021b80 <_vfiprintf_r+0x18>
 8021b78:	6983      	ldr	r3, [r0, #24]
 8021b7a:	b90b      	cbnz	r3, 8021b80 <_vfiprintf_r+0x18>
 8021b7c:	f000 fe5a 	bl	8022834 <__sinit>
 8021b80:	4b89      	ldr	r3, [pc, #548]	; (8021da8 <_vfiprintf_r+0x240>)
 8021b82:	429d      	cmp	r5, r3
 8021b84:	d11b      	bne.n	8021bbe <_vfiprintf_r+0x56>
 8021b86:	6875      	ldr	r5, [r6, #4]
 8021b88:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021b8a:	07d9      	lsls	r1, r3, #31
 8021b8c:	d405      	bmi.n	8021b9a <_vfiprintf_r+0x32>
 8021b8e:	89ab      	ldrh	r3, [r5, #12]
 8021b90:	059a      	lsls	r2, r3, #22
 8021b92:	d402      	bmi.n	8021b9a <_vfiprintf_r+0x32>
 8021b94:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8021b96:	f000 fefe 	bl	8022996 <__retarget_lock_acquire_recursive>
 8021b9a:	89ab      	ldrh	r3, [r5, #12]
 8021b9c:	071b      	lsls	r3, r3, #28
 8021b9e:	d501      	bpl.n	8021ba4 <_vfiprintf_r+0x3c>
 8021ba0:	692b      	ldr	r3, [r5, #16]
 8021ba2:	b9eb      	cbnz	r3, 8021be0 <_vfiprintf_r+0x78>
 8021ba4:	4629      	mov	r1, r5
 8021ba6:	4630      	mov	r0, r6
 8021ba8:	f000 fc4a 	bl	8022440 <__swsetup_r>
 8021bac:	b1c0      	cbz	r0, 8021be0 <_vfiprintf_r+0x78>
 8021bae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021bb0:	07dc      	lsls	r4, r3, #31
 8021bb2:	d50e      	bpl.n	8021bd2 <_vfiprintf_r+0x6a>
 8021bb4:	f04f 30ff 	mov.w	r0, #4294967295
 8021bb8:	b01d      	add	sp, #116	; 0x74
 8021bba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bbe:	4b7b      	ldr	r3, [pc, #492]	; (8021dac <_vfiprintf_r+0x244>)
 8021bc0:	429d      	cmp	r5, r3
 8021bc2:	d101      	bne.n	8021bc8 <_vfiprintf_r+0x60>
 8021bc4:	68b5      	ldr	r5, [r6, #8]
 8021bc6:	e7df      	b.n	8021b88 <_vfiprintf_r+0x20>
 8021bc8:	4b79      	ldr	r3, [pc, #484]	; (8021db0 <_vfiprintf_r+0x248>)
 8021bca:	429d      	cmp	r5, r3
 8021bcc:	bf08      	it	eq
 8021bce:	68f5      	ldreq	r5, [r6, #12]
 8021bd0:	e7da      	b.n	8021b88 <_vfiprintf_r+0x20>
 8021bd2:	89ab      	ldrh	r3, [r5, #12]
 8021bd4:	0598      	lsls	r0, r3, #22
 8021bd6:	d4ed      	bmi.n	8021bb4 <_vfiprintf_r+0x4c>
 8021bd8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8021bda:	f000 fede 	bl	802299a <__retarget_lock_release_recursive>
 8021bde:	e7e9      	b.n	8021bb4 <_vfiprintf_r+0x4c>
 8021be0:	2300      	movs	r3, #0
 8021be2:	9309      	str	r3, [sp, #36]	; 0x24
 8021be4:	2320      	movs	r3, #32
 8021be6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8021bea:	f8cd 800c 	str.w	r8, [sp, #12]
 8021bee:	2330      	movs	r3, #48	; 0x30
 8021bf0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8021db4 <_vfiprintf_r+0x24c>
 8021bf4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8021bf8:	f04f 0901 	mov.w	r9, #1
 8021bfc:	4623      	mov	r3, r4
 8021bfe:	469a      	mov	sl, r3
 8021c00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8021c04:	b10a      	cbz	r2, 8021c0a <_vfiprintf_r+0xa2>
 8021c06:	2a25      	cmp	r2, #37	; 0x25
 8021c08:	d1f9      	bne.n	8021bfe <_vfiprintf_r+0x96>
 8021c0a:	ebba 0b04 	subs.w	fp, sl, r4
 8021c0e:	d00b      	beq.n	8021c28 <_vfiprintf_r+0xc0>
 8021c10:	465b      	mov	r3, fp
 8021c12:	4622      	mov	r2, r4
 8021c14:	4629      	mov	r1, r5
 8021c16:	4630      	mov	r0, r6
 8021c18:	f7ff ff93 	bl	8021b42 <__sfputs_r>
 8021c1c:	3001      	adds	r0, #1
 8021c1e:	f000 80aa 	beq.w	8021d76 <_vfiprintf_r+0x20e>
 8021c22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021c24:	445a      	add	r2, fp
 8021c26:	9209      	str	r2, [sp, #36]	; 0x24
 8021c28:	f89a 3000 	ldrb.w	r3, [sl]
 8021c2c:	2b00      	cmp	r3, #0
 8021c2e:	f000 80a2 	beq.w	8021d76 <_vfiprintf_r+0x20e>
 8021c32:	2300      	movs	r3, #0
 8021c34:	f04f 32ff 	mov.w	r2, #4294967295
 8021c38:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8021c3c:	f10a 0a01 	add.w	sl, sl, #1
 8021c40:	9304      	str	r3, [sp, #16]
 8021c42:	9307      	str	r3, [sp, #28]
 8021c44:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8021c48:	931a      	str	r3, [sp, #104]	; 0x68
 8021c4a:	4654      	mov	r4, sl
 8021c4c:	2205      	movs	r2, #5
 8021c4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021c52:	4858      	ldr	r0, [pc, #352]	; (8021db4 <_vfiprintf_r+0x24c>)
 8021c54:	f7de facc 	bl	80001f0 <memchr>
 8021c58:	9a04      	ldr	r2, [sp, #16]
 8021c5a:	b9d8      	cbnz	r0, 8021c94 <_vfiprintf_r+0x12c>
 8021c5c:	06d1      	lsls	r1, r2, #27
 8021c5e:	bf44      	itt	mi
 8021c60:	2320      	movmi	r3, #32
 8021c62:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8021c66:	0713      	lsls	r3, r2, #28
 8021c68:	bf44      	itt	mi
 8021c6a:	232b      	movmi	r3, #43	; 0x2b
 8021c6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8021c70:	f89a 3000 	ldrb.w	r3, [sl]
 8021c74:	2b2a      	cmp	r3, #42	; 0x2a
 8021c76:	d015      	beq.n	8021ca4 <_vfiprintf_r+0x13c>
 8021c78:	9a07      	ldr	r2, [sp, #28]
 8021c7a:	4654      	mov	r4, sl
 8021c7c:	2000      	movs	r0, #0
 8021c7e:	f04f 0c0a 	mov.w	ip, #10
 8021c82:	4621      	mov	r1, r4
 8021c84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021c88:	3b30      	subs	r3, #48	; 0x30
 8021c8a:	2b09      	cmp	r3, #9
 8021c8c:	d94e      	bls.n	8021d2c <_vfiprintf_r+0x1c4>
 8021c8e:	b1b0      	cbz	r0, 8021cbe <_vfiprintf_r+0x156>
 8021c90:	9207      	str	r2, [sp, #28]
 8021c92:	e014      	b.n	8021cbe <_vfiprintf_r+0x156>
 8021c94:	eba0 0308 	sub.w	r3, r0, r8
 8021c98:	fa09 f303 	lsl.w	r3, r9, r3
 8021c9c:	4313      	orrs	r3, r2
 8021c9e:	9304      	str	r3, [sp, #16]
 8021ca0:	46a2      	mov	sl, r4
 8021ca2:	e7d2      	b.n	8021c4a <_vfiprintf_r+0xe2>
 8021ca4:	9b03      	ldr	r3, [sp, #12]
 8021ca6:	1d19      	adds	r1, r3, #4
 8021ca8:	681b      	ldr	r3, [r3, #0]
 8021caa:	9103      	str	r1, [sp, #12]
 8021cac:	2b00      	cmp	r3, #0
 8021cae:	bfbb      	ittet	lt
 8021cb0:	425b      	neglt	r3, r3
 8021cb2:	f042 0202 	orrlt.w	r2, r2, #2
 8021cb6:	9307      	strge	r3, [sp, #28]
 8021cb8:	9307      	strlt	r3, [sp, #28]
 8021cba:	bfb8      	it	lt
 8021cbc:	9204      	strlt	r2, [sp, #16]
 8021cbe:	7823      	ldrb	r3, [r4, #0]
 8021cc0:	2b2e      	cmp	r3, #46	; 0x2e
 8021cc2:	d10c      	bne.n	8021cde <_vfiprintf_r+0x176>
 8021cc4:	7863      	ldrb	r3, [r4, #1]
 8021cc6:	2b2a      	cmp	r3, #42	; 0x2a
 8021cc8:	d135      	bne.n	8021d36 <_vfiprintf_r+0x1ce>
 8021cca:	9b03      	ldr	r3, [sp, #12]
 8021ccc:	1d1a      	adds	r2, r3, #4
 8021cce:	681b      	ldr	r3, [r3, #0]
 8021cd0:	9203      	str	r2, [sp, #12]
 8021cd2:	2b00      	cmp	r3, #0
 8021cd4:	bfb8      	it	lt
 8021cd6:	f04f 33ff 	movlt.w	r3, #4294967295
 8021cda:	3402      	adds	r4, #2
 8021cdc:	9305      	str	r3, [sp, #20]
 8021cde:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8021dc4 <_vfiprintf_r+0x25c>
 8021ce2:	7821      	ldrb	r1, [r4, #0]
 8021ce4:	2203      	movs	r2, #3
 8021ce6:	4650      	mov	r0, sl
 8021ce8:	f7de fa82 	bl	80001f0 <memchr>
 8021cec:	b140      	cbz	r0, 8021d00 <_vfiprintf_r+0x198>
 8021cee:	2340      	movs	r3, #64	; 0x40
 8021cf0:	eba0 000a 	sub.w	r0, r0, sl
 8021cf4:	fa03 f000 	lsl.w	r0, r3, r0
 8021cf8:	9b04      	ldr	r3, [sp, #16]
 8021cfa:	4303      	orrs	r3, r0
 8021cfc:	3401      	adds	r4, #1
 8021cfe:	9304      	str	r3, [sp, #16]
 8021d00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021d04:	482c      	ldr	r0, [pc, #176]	; (8021db8 <_vfiprintf_r+0x250>)
 8021d06:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8021d0a:	2206      	movs	r2, #6
 8021d0c:	f7de fa70 	bl	80001f0 <memchr>
 8021d10:	2800      	cmp	r0, #0
 8021d12:	d03f      	beq.n	8021d94 <_vfiprintf_r+0x22c>
 8021d14:	4b29      	ldr	r3, [pc, #164]	; (8021dbc <_vfiprintf_r+0x254>)
 8021d16:	bb1b      	cbnz	r3, 8021d60 <_vfiprintf_r+0x1f8>
 8021d18:	9b03      	ldr	r3, [sp, #12]
 8021d1a:	3307      	adds	r3, #7
 8021d1c:	f023 0307 	bic.w	r3, r3, #7
 8021d20:	3308      	adds	r3, #8
 8021d22:	9303      	str	r3, [sp, #12]
 8021d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d26:	443b      	add	r3, r7
 8021d28:	9309      	str	r3, [sp, #36]	; 0x24
 8021d2a:	e767      	b.n	8021bfc <_vfiprintf_r+0x94>
 8021d2c:	fb0c 3202 	mla	r2, ip, r2, r3
 8021d30:	460c      	mov	r4, r1
 8021d32:	2001      	movs	r0, #1
 8021d34:	e7a5      	b.n	8021c82 <_vfiprintf_r+0x11a>
 8021d36:	2300      	movs	r3, #0
 8021d38:	3401      	adds	r4, #1
 8021d3a:	9305      	str	r3, [sp, #20]
 8021d3c:	4619      	mov	r1, r3
 8021d3e:	f04f 0c0a 	mov.w	ip, #10
 8021d42:	4620      	mov	r0, r4
 8021d44:	f810 2b01 	ldrb.w	r2, [r0], #1
 8021d48:	3a30      	subs	r2, #48	; 0x30
 8021d4a:	2a09      	cmp	r2, #9
 8021d4c:	d903      	bls.n	8021d56 <_vfiprintf_r+0x1ee>
 8021d4e:	2b00      	cmp	r3, #0
 8021d50:	d0c5      	beq.n	8021cde <_vfiprintf_r+0x176>
 8021d52:	9105      	str	r1, [sp, #20]
 8021d54:	e7c3      	b.n	8021cde <_vfiprintf_r+0x176>
 8021d56:	fb0c 2101 	mla	r1, ip, r1, r2
 8021d5a:	4604      	mov	r4, r0
 8021d5c:	2301      	movs	r3, #1
 8021d5e:	e7f0      	b.n	8021d42 <_vfiprintf_r+0x1da>
 8021d60:	ab03      	add	r3, sp, #12
 8021d62:	9300      	str	r3, [sp, #0]
 8021d64:	462a      	mov	r2, r5
 8021d66:	4b16      	ldr	r3, [pc, #88]	; (8021dc0 <_vfiprintf_r+0x258>)
 8021d68:	a904      	add	r1, sp, #16
 8021d6a:	4630      	mov	r0, r6
 8021d6c:	f3af 8000 	nop.w
 8021d70:	4607      	mov	r7, r0
 8021d72:	1c78      	adds	r0, r7, #1
 8021d74:	d1d6      	bne.n	8021d24 <_vfiprintf_r+0x1bc>
 8021d76:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021d78:	07d9      	lsls	r1, r3, #31
 8021d7a:	d405      	bmi.n	8021d88 <_vfiprintf_r+0x220>
 8021d7c:	89ab      	ldrh	r3, [r5, #12]
 8021d7e:	059a      	lsls	r2, r3, #22
 8021d80:	d402      	bmi.n	8021d88 <_vfiprintf_r+0x220>
 8021d82:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8021d84:	f000 fe09 	bl	802299a <__retarget_lock_release_recursive>
 8021d88:	89ab      	ldrh	r3, [r5, #12]
 8021d8a:	065b      	lsls	r3, r3, #25
 8021d8c:	f53f af12 	bmi.w	8021bb4 <_vfiprintf_r+0x4c>
 8021d90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8021d92:	e711      	b.n	8021bb8 <_vfiprintf_r+0x50>
 8021d94:	ab03      	add	r3, sp, #12
 8021d96:	9300      	str	r3, [sp, #0]
 8021d98:	462a      	mov	r2, r5
 8021d9a:	4b09      	ldr	r3, [pc, #36]	; (8021dc0 <_vfiprintf_r+0x258>)
 8021d9c:	a904      	add	r1, sp, #16
 8021d9e:	4630      	mov	r0, r6
 8021da0:	f000 f880 	bl	8021ea4 <_printf_i>
 8021da4:	e7e4      	b.n	8021d70 <_vfiprintf_r+0x208>
 8021da6:	bf00      	nop
 8021da8:	08025460 	.word	0x08025460
 8021dac:	08025480 	.word	0x08025480
 8021db0:	08025440 	.word	0x08025440
 8021db4:	08025294 	.word	0x08025294
 8021db8:	0802529e 	.word	0x0802529e
 8021dbc:	00000000 	.word	0x00000000
 8021dc0:	08021b43 	.word	0x08021b43
 8021dc4:	0802529a 	.word	0x0802529a

08021dc8 <_printf_common>:
 8021dc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021dcc:	4616      	mov	r6, r2
 8021dce:	4699      	mov	r9, r3
 8021dd0:	688a      	ldr	r2, [r1, #8]
 8021dd2:	690b      	ldr	r3, [r1, #16]
 8021dd4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8021dd8:	4293      	cmp	r3, r2
 8021dda:	bfb8      	it	lt
 8021ddc:	4613      	movlt	r3, r2
 8021dde:	6033      	str	r3, [r6, #0]
 8021de0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8021de4:	4607      	mov	r7, r0
 8021de6:	460c      	mov	r4, r1
 8021de8:	b10a      	cbz	r2, 8021dee <_printf_common+0x26>
 8021dea:	3301      	adds	r3, #1
 8021dec:	6033      	str	r3, [r6, #0]
 8021dee:	6823      	ldr	r3, [r4, #0]
 8021df0:	0699      	lsls	r1, r3, #26
 8021df2:	bf42      	ittt	mi
 8021df4:	6833      	ldrmi	r3, [r6, #0]
 8021df6:	3302      	addmi	r3, #2
 8021df8:	6033      	strmi	r3, [r6, #0]
 8021dfa:	6825      	ldr	r5, [r4, #0]
 8021dfc:	f015 0506 	ands.w	r5, r5, #6
 8021e00:	d106      	bne.n	8021e10 <_printf_common+0x48>
 8021e02:	f104 0a19 	add.w	sl, r4, #25
 8021e06:	68e3      	ldr	r3, [r4, #12]
 8021e08:	6832      	ldr	r2, [r6, #0]
 8021e0a:	1a9b      	subs	r3, r3, r2
 8021e0c:	42ab      	cmp	r3, r5
 8021e0e:	dc26      	bgt.n	8021e5e <_printf_common+0x96>
 8021e10:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8021e14:	1e13      	subs	r3, r2, #0
 8021e16:	6822      	ldr	r2, [r4, #0]
 8021e18:	bf18      	it	ne
 8021e1a:	2301      	movne	r3, #1
 8021e1c:	0692      	lsls	r2, r2, #26
 8021e1e:	d42b      	bmi.n	8021e78 <_printf_common+0xb0>
 8021e20:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8021e24:	4649      	mov	r1, r9
 8021e26:	4638      	mov	r0, r7
 8021e28:	47c0      	blx	r8
 8021e2a:	3001      	adds	r0, #1
 8021e2c:	d01e      	beq.n	8021e6c <_printf_common+0xa4>
 8021e2e:	6823      	ldr	r3, [r4, #0]
 8021e30:	68e5      	ldr	r5, [r4, #12]
 8021e32:	6832      	ldr	r2, [r6, #0]
 8021e34:	f003 0306 	and.w	r3, r3, #6
 8021e38:	2b04      	cmp	r3, #4
 8021e3a:	bf08      	it	eq
 8021e3c:	1aad      	subeq	r5, r5, r2
 8021e3e:	68a3      	ldr	r3, [r4, #8]
 8021e40:	6922      	ldr	r2, [r4, #16]
 8021e42:	bf0c      	ite	eq
 8021e44:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021e48:	2500      	movne	r5, #0
 8021e4a:	4293      	cmp	r3, r2
 8021e4c:	bfc4      	itt	gt
 8021e4e:	1a9b      	subgt	r3, r3, r2
 8021e50:	18ed      	addgt	r5, r5, r3
 8021e52:	2600      	movs	r6, #0
 8021e54:	341a      	adds	r4, #26
 8021e56:	42b5      	cmp	r5, r6
 8021e58:	d11a      	bne.n	8021e90 <_printf_common+0xc8>
 8021e5a:	2000      	movs	r0, #0
 8021e5c:	e008      	b.n	8021e70 <_printf_common+0xa8>
 8021e5e:	2301      	movs	r3, #1
 8021e60:	4652      	mov	r2, sl
 8021e62:	4649      	mov	r1, r9
 8021e64:	4638      	mov	r0, r7
 8021e66:	47c0      	blx	r8
 8021e68:	3001      	adds	r0, #1
 8021e6a:	d103      	bne.n	8021e74 <_printf_common+0xac>
 8021e6c:	f04f 30ff 	mov.w	r0, #4294967295
 8021e70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021e74:	3501      	adds	r5, #1
 8021e76:	e7c6      	b.n	8021e06 <_printf_common+0x3e>
 8021e78:	18e1      	adds	r1, r4, r3
 8021e7a:	1c5a      	adds	r2, r3, #1
 8021e7c:	2030      	movs	r0, #48	; 0x30
 8021e7e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8021e82:	4422      	add	r2, r4
 8021e84:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021e88:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021e8c:	3302      	adds	r3, #2
 8021e8e:	e7c7      	b.n	8021e20 <_printf_common+0x58>
 8021e90:	2301      	movs	r3, #1
 8021e92:	4622      	mov	r2, r4
 8021e94:	4649      	mov	r1, r9
 8021e96:	4638      	mov	r0, r7
 8021e98:	47c0      	blx	r8
 8021e9a:	3001      	adds	r0, #1
 8021e9c:	d0e6      	beq.n	8021e6c <_printf_common+0xa4>
 8021e9e:	3601      	adds	r6, #1
 8021ea0:	e7d9      	b.n	8021e56 <_printf_common+0x8e>
	...

08021ea4 <_printf_i>:
 8021ea4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8021ea8:	7e0f      	ldrb	r7, [r1, #24]
 8021eaa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021eac:	2f78      	cmp	r7, #120	; 0x78
 8021eae:	4691      	mov	r9, r2
 8021eb0:	4680      	mov	r8, r0
 8021eb2:	460c      	mov	r4, r1
 8021eb4:	469a      	mov	sl, r3
 8021eb6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8021eba:	d807      	bhi.n	8021ecc <_printf_i+0x28>
 8021ebc:	2f62      	cmp	r7, #98	; 0x62
 8021ebe:	d80a      	bhi.n	8021ed6 <_printf_i+0x32>
 8021ec0:	2f00      	cmp	r7, #0
 8021ec2:	f000 80d8 	beq.w	8022076 <_printf_i+0x1d2>
 8021ec6:	2f58      	cmp	r7, #88	; 0x58
 8021ec8:	f000 80a3 	beq.w	8022012 <_printf_i+0x16e>
 8021ecc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021ed0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8021ed4:	e03a      	b.n	8021f4c <_printf_i+0xa8>
 8021ed6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8021eda:	2b15      	cmp	r3, #21
 8021edc:	d8f6      	bhi.n	8021ecc <_printf_i+0x28>
 8021ede:	a101      	add	r1, pc, #4	; (adr r1, 8021ee4 <_printf_i+0x40>)
 8021ee0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8021ee4:	08021f3d 	.word	0x08021f3d
 8021ee8:	08021f51 	.word	0x08021f51
 8021eec:	08021ecd 	.word	0x08021ecd
 8021ef0:	08021ecd 	.word	0x08021ecd
 8021ef4:	08021ecd 	.word	0x08021ecd
 8021ef8:	08021ecd 	.word	0x08021ecd
 8021efc:	08021f51 	.word	0x08021f51
 8021f00:	08021ecd 	.word	0x08021ecd
 8021f04:	08021ecd 	.word	0x08021ecd
 8021f08:	08021ecd 	.word	0x08021ecd
 8021f0c:	08021ecd 	.word	0x08021ecd
 8021f10:	0802205d 	.word	0x0802205d
 8021f14:	08021f81 	.word	0x08021f81
 8021f18:	0802203f 	.word	0x0802203f
 8021f1c:	08021ecd 	.word	0x08021ecd
 8021f20:	08021ecd 	.word	0x08021ecd
 8021f24:	0802207f 	.word	0x0802207f
 8021f28:	08021ecd 	.word	0x08021ecd
 8021f2c:	08021f81 	.word	0x08021f81
 8021f30:	08021ecd 	.word	0x08021ecd
 8021f34:	08021ecd 	.word	0x08021ecd
 8021f38:	08022047 	.word	0x08022047
 8021f3c:	682b      	ldr	r3, [r5, #0]
 8021f3e:	1d1a      	adds	r2, r3, #4
 8021f40:	681b      	ldr	r3, [r3, #0]
 8021f42:	602a      	str	r2, [r5, #0]
 8021f44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021f48:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021f4c:	2301      	movs	r3, #1
 8021f4e:	e0a3      	b.n	8022098 <_printf_i+0x1f4>
 8021f50:	6820      	ldr	r0, [r4, #0]
 8021f52:	6829      	ldr	r1, [r5, #0]
 8021f54:	0606      	lsls	r6, r0, #24
 8021f56:	f101 0304 	add.w	r3, r1, #4
 8021f5a:	d50a      	bpl.n	8021f72 <_printf_i+0xce>
 8021f5c:	680e      	ldr	r6, [r1, #0]
 8021f5e:	602b      	str	r3, [r5, #0]
 8021f60:	2e00      	cmp	r6, #0
 8021f62:	da03      	bge.n	8021f6c <_printf_i+0xc8>
 8021f64:	232d      	movs	r3, #45	; 0x2d
 8021f66:	4276      	negs	r6, r6
 8021f68:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021f6c:	485e      	ldr	r0, [pc, #376]	; (80220e8 <_printf_i+0x244>)
 8021f6e:	230a      	movs	r3, #10
 8021f70:	e019      	b.n	8021fa6 <_printf_i+0x102>
 8021f72:	680e      	ldr	r6, [r1, #0]
 8021f74:	602b      	str	r3, [r5, #0]
 8021f76:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021f7a:	bf18      	it	ne
 8021f7c:	b236      	sxthne	r6, r6
 8021f7e:	e7ef      	b.n	8021f60 <_printf_i+0xbc>
 8021f80:	682b      	ldr	r3, [r5, #0]
 8021f82:	6820      	ldr	r0, [r4, #0]
 8021f84:	1d19      	adds	r1, r3, #4
 8021f86:	6029      	str	r1, [r5, #0]
 8021f88:	0601      	lsls	r1, r0, #24
 8021f8a:	d501      	bpl.n	8021f90 <_printf_i+0xec>
 8021f8c:	681e      	ldr	r6, [r3, #0]
 8021f8e:	e002      	b.n	8021f96 <_printf_i+0xf2>
 8021f90:	0646      	lsls	r6, r0, #25
 8021f92:	d5fb      	bpl.n	8021f8c <_printf_i+0xe8>
 8021f94:	881e      	ldrh	r6, [r3, #0]
 8021f96:	4854      	ldr	r0, [pc, #336]	; (80220e8 <_printf_i+0x244>)
 8021f98:	2f6f      	cmp	r7, #111	; 0x6f
 8021f9a:	bf0c      	ite	eq
 8021f9c:	2308      	moveq	r3, #8
 8021f9e:	230a      	movne	r3, #10
 8021fa0:	2100      	movs	r1, #0
 8021fa2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8021fa6:	6865      	ldr	r5, [r4, #4]
 8021fa8:	60a5      	str	r5, [r4, #8]
 8021faa:	2d00      	cmp	r5, #0
 8021fac:	bfa2      	ittt	ge
 8021fae:	6821      	ldrge	r1, [r4, #0]
 8021fb0:	f021 0104 	bicge.w	r1, r1, #4
 8021fb4:	6021      	strge	r1, [r4, #0]
 8021fb6:	b90e      	cbnz	r6, 8021fbc <_printf_i+0x118>
 8021fb8:	2d00      	cmp	r5, #0
 8021fba:	d04d      	beq.n	8022058 <_printf_i+0x1b4>
 8021fbc:	4615      	mov	r5, r2
 8021fbe:	fbb6 f1f3 	udiv	r1, r6, r3
 8021fc2:	fb03 6711 	mls	r7, r3, r1, r6
 8021fc6:	5dc7      	ldrb	r7, [r0, r7]
 8021fc8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8021fcc:	4637      	mov	r7, r6
 8021fce:	42bb      	cmp	r3, r7
 8021fd0:	460e      	mov	r6, r1
 8021fd2:	d9f4      	bls.n	8021fbe <_printf_i+0x11a>
 8021fd4:	2b08      	cmp	r3, #8
 8021fd6:	d10b      	bne.n	8021ff0 <_printf_i+0x14c>
 8021fd8:	6823      	ldr	r3, [r4, #0]
 8021fda:	07de      	lsls	r6, r3, #31
 8021fdc:	d508      	bpl.n	8021ff0 <_printf_i+0x14c>
 8021fde:	6923      	ldr	r3, [r4, #16]
 8021fe0:	6861      	ldr	r1, [r4, #4]
 8021fe2:	4299      	cmp	r1, r3
 8021fe4:	bfde      	ittt	le
 8021fe6:	2330      	movle	r3, #48	; 0x30
 8021fe8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8021fec:	f105 35ff 	addle.w	r5, r5, #4294967295
 8021ff0:	1b52      	subs	r2, r2, r5
 8021ff2:	6122      	str	r2, [r4, #16]
 8021ff4:	f8cd a000 	str.w	sl, [sp]
 8021ff8:	464b      	mov	r3, r9
 8021ffa:	aa03      	add	r2, sp, #12
 8021ffc:	4621      	mov	r1, r4
 8021ffe:	4640      	mov	r0, r8
 8022000:	f7ff fee2 	bl	8021dc8 <_printf_common>
 8022004:	3001      	adds	r0, #1
 8022006:	d14c      	bne.n	80220a2 <_printf_i+0x1fe>
 8022008:	f04f 30ff 	mov.w	r0, #4294967295
 802200c:	b004      	add	sp, #16
 802200e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022012:	4835      	ldr	r0, [pc, #212]	; (80220e8 <_printf_i+0x244>)
 8022014:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8022018:	6829      	ldr	r1, [r5, #0]
 802201a:	6823      	ldr	r3, [r4, #0]
 802201c:	f851 6b04 	ldr.w	r6, [r1], #4
 8022020:	6029      	str	r1, [r5, #0]
 8022022:	061d      	lsls	r5, r3, #24
 8022024:	d514      	bpl.n	8022050 <_printf_i+0x1ac>
 8022026:	07df      	lsls	r7, r3, #31
 8022028:	bf44      	itt	mi
 802202a:	f043 0320 	orrmi.w	r3, r3, #32
 802202e:	6023      	strmi	r3, [r4, #0]
 8022030:	b91e      	cbnz	r6, 802203a <_printf_i+0x196>
 8022032:	6823      	ldr	r3, [r4, #0]
 8022034:	f023 0320 	bic.w	r3, r3, #32
 8022038:	6023      	str	r3, [r4, #0]
 802203a:	2310      	movs	r3, #16
 802203c:	e7b0      	b.n	8021fa0 <_printf_i+0xfc>
 802203e:	6823      	ldr	r3, [r4, #0]
 8022040:	f043 0320 	orr.w	r3, r3, #32
 8022044:	6023      	str	r3, [r4, #0]
 8022046:	2378      	movs	r3, #120	; 0x78
 8022048:	4828      	ldr	r0, [pc, #160]	; (80220ec <_printf_i+0x248>)
 802204a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802204e:	e7e3      	b.n	8022018 <_printf_i+0x174>
 8022050:	0659      	lsls	r1, r3, #25
 8022052:	bf48      	it	mi
 8022054:	b2b6      	uxthmi	r6, r6
 8022056:	e7e6      	b.n	8022026 <_printf_i+0x182>
 8022058:	4615      	mov	r5, r2
 802205a:	e7bb      	b.n	8021fd4 <_printf_i+0x130>
 802205c:	682b      	ldr	r3, [r5, #0]
 802205e:	6826      	ldr	r6, [r4, #0]
 8022060:	6961      	ldr	r1, [r4, #20]
 8022062:	1d18      	adds	r0, r3, #4
 8022064:	6028      	str	r0, [r5, #0]
 8022066:	0635      	lsls	r5, r6, #24
 8022068:	681b      	ldr	r3, [r3, #0]
 802206a:	d501      	bpl.n	8022070 <_printf_i+0x1cc>
 802206c:	6019      	str	r1, [r3, #0]
 802206e:	e002      	b.n	8022076 <_printf_i+0x1d2>
 8022070:	0670      	lsls	r0, r6, #25
 8022072:	d5fb      	bpl.n	802206c <_printf_i+0x1c8>
 8022074:	8019      	strh	r1, [r3, #0]
 8022076:	2300      	movs	r3, #0
 8022078:	6123      	str	r3, [r4, #16]
 802207a:	4615      	mov	r5, r2
 802207c:	e7ba      	b.n	8021ff4 <_printf_i+0x150>
 802207e:	682b      	ldr	r3, [r5, #0]
 8022080:	1d1a      	adds	r2, r3, #4
 8022082:	602a      	str	r2, [r5, #0]
 8022084:	681d      	ldr	r5, [r3, #0]
 8022086:	6862      	ldr	r2, [r4, #4]
 8022088:	2100      	movs	r1, #0
 802208a:	4628      	mov	r0, r5
 802208c:	f7de f8b0 	bl	80001f0 <memchr>
 8022090:	b108      	cbz	r0, 8022096 <_printf_i+0x1f2>
 8022092:	1b40      	subs	r0, r0, r5
 8022094:	6060      	str	r0, [r4, #4]
 8022096:	6863      	ldr	r3, [r4, #4]
 8022098:	6123      	str	r3, [r4, #16]
 802209a:	2300      	movs	r3, #0
 802209c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80220a0:	e7a8      	b.n	8021ff4 <_printf_i+0x150>
 80220a2:	6923      	ldr	r3, [r4, #16]
 80220a4:	462a      	mov	r2, r5
 80220a6:	4649      	mov	r1, r9
 80220a8:	4640      	mov	r0, r8
 80220aa:	47d0      	blx	sl
 80220ac:	3001      	adds	r0, #1
 80220ae:	d0ab      	beq.n	8022008 <_printf_i+0x164>
 80220b0:	6823      	ldr	r3, [r4, #0]
 80220b2:	079b      	lsls	r3, r3, #30
 80220b4:	d413      	bmi.n	80220de <_printf_i+0x23a>
 80220b6:	68e0      	ldr	r0, [r4, #12]
 80220b8:	9b03      	ldr	r3, [sp, #12]
 80220ba:	4298      	cmp	r0, r3
 80220bc:	bfb8      	it	lt
 80220be:	4618      	movlt	r0, r3
 80220c0:	e7a4      	b.n	802200c <_printf_i+0x168>
 80220c2:	2301      	movs	r3, #1
 80220c4:	4632      	mov	r2, r6
 80220c6:	4649      	mov	r1, r9
 80220c8:	4640      	mov	r0, r8
 80220ca:	47d0      	blx	sl
 80220cc:	3001      	adds	r0, #1
 80220ce:	d09b      	beq.n	8022008 <_printf_i+0x164>
 80220d0:	3501      	adds	r5, #1
 80220d2:	68e3      	ldr	r3, [r4, #12]
 80220d4:	9903      	ldr	r1, [sp, #12]
 80220d6:	1a5b      	subs	r3, r3, r1
 80220d8:	42ab      	cmp	r3, r5
 80220da:	dcf2      	bgt.n	80220c2 <_printf_i+0x21e>
 80220dc:	e7eb      	b.n	80220b6 <_printf_i+0x212>
 80220de:	2500      	movs	r5, #0
 80220e0:	f104 0619 	add.w	r6, r4, #25
 80220e4:	e7f5      	b.n	80220d2 <_printf_i+0x22e>
 80220e6:	bf00      	nop
 80220e8:	080252a5 	.word	0x080252a5
 80220ec:	080252b6 	.word	0x080252b6

080220f0 <srand>:
 80220f0:	b538      	push	{r3, r4, r5, lr}
 80220f2:	4b10      	ldr	r3, [pc, #64]	; (8022134 <srand+0x44>)
 80220f4:	681d      	ldr	r5, [r3, #0]
 80220f6:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80220f8:	4604      	mov	r4, r0
 80220fa:	b9b3      	cbnz	r3, 802212a <srand+0x3a>
 80220fc:	2018      	movs	r0, #24
 80220fe:	f7ff fbf3 	bl	80218e8 <malloc>
 8022102:	4602      	mov	r2, r0
 8022104:	63a8      	str	r0, [r5, #56]	; 0x38
 8022106:	b920      	cbnz	r0, 8022112 <srand+0x22>
 8022108:	4b0b      	ldr	r3, [pc, #44]	; (8022138 <srand+0x48>)
 802210a:	480c      	ldr	r0, [pc, #48]	; (802213c <srand+0x4c>)
 802210c:	2142      	movs	r1, #66	; 0x42
 802210e:	f7ff fb7d 	bl	802180c <__assert_func>
 8022112:	490b      	ldr	r1, [pc, #44]	; (8022140 <srand+0x50>)
 8022114:	4b0b      	ldr	r3, [pc, #44]	; (8022144 <srand+0x54>)
 8022116:	e9c0 1300 	strd	r1, r3, [r0]
 802211a:	4b0b      	ldr	r3, [pc, #44]	; (8022148 <srand+0x58>)
 802211c:	6083      	str	r3, [r0, #8]
 802211e:	230b      	movs	r3, #11
 8022120:	8183      	strh	r3, [r0, #12]
 8022122:	2100      	movs	r1, #0
 8022124:	2001      	movs	r0, #1
 8022126:	e9c2 0104 	strd	r0, r1, [r2, #16]
 802212a:	6bab      	ldr	r3, [r5, #56]	; 0x38
 802212c:	2200      	movs	r2, #0
 802212e:	611c      	str	r4, [r3, #16]
 8022130:	615a      	str	r2, [r3, #20]
 8022132:	bd38      	pop	{r3, r4, r5, pc}
 8022134:	20000104 	.word	0x20000104
 8022138:	080252cc 	.word	0x080252cc
 802213c:	080252e3 	.word	0x080252e3
 8022140:	abcd330e 	.word	0xabcd330e
 8022144:	e66d1234 	.word	0xe66d1234
 8022148:	0005deec 	.word	0x0005deec

0802214c <rand>:
 802214c:	4b16      	ldr	r3, [pc, #88]	; (80221a8 <rand+0x5c>)
 802214e:	b510      	push	{r4, lr}
 8022150:	681c      	ldr	r4, [r3, #0]
 8022152:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8022154:	b9b3      	cbnz	r3, 8022184 <rand+0x38>
 8022156:	2018      	movs	r0, #24
 8022158:	f7ff fbc6 	bl	80218e8 <malloc>
 802215c:	63a0      	str	r0, [r4, #56]	; 0x38
 802215e:	b928      	cbnz	r0, 802216c <rand+0x20>
 8022160:	4602      	mov	r2, r0
 8022162:	4b12      	ldr	r3, [pc, #72]	; (80221ac <rand+0x60>)
 8022164:	4812      	ldr	r0, [pc, #72]	; (80221b0 <rand+0x64>)
 8022166:	214e      	movs	r1, #78	; 0x4e
 8022168:	f7ff fb50 	bl	802180c <__assert_func>
 802216c:	4a11      	ldr	r2, [pc, #68]	; (80221b4 <rand+0x68>)
 802216e:	4b12      	ldr	r3, [pc, #72]	; (80221b8 <rand+0x6c>)
 8022170:	e9c0 2300 	strd	r2, r3, [r0]
 8022174:	4b11      	ldr	r3, [pc, #68]	; (80221bc <rand+0x70>)
 8022176:	6083      	str	r3, [r0, #8]
 8022178:	230b      	movs	r3, #11
 802217a:	8183      	strh	r3, [r0, #12]
 802217c:	2201      	movs	r2, #1
 802217e:	2300      	movs	r3, #0
 8022180:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8022184:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 8022186:	4a0e      	ldr	r2, [pc, #56]	; (80221c0 <rand+0x74>)
 8022188:	6920      	ldr	r0, [r4, #16]
 802218a:	6963      	ldr	r3, [r4, #20]
 802218c:	490d      	ldr	r1, [pc, #52]	; (80221c4 <rand+0x78>)
 802218e:	4342      	muls	r2, r0
 8022190:	fb01 2203 	mla	r2, r1, r3, r2
 8022194:	fba0 0101 	umull	r0, r1, r0, r1
 8022198:	1c43      	adds	r3, r0, #1
 802219a:	eb42 0001 	adc.w	r0, r2, r1
 802219e:	e9c4 3004 	strd	r3, r0, [r4, #16]
 80221a2:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80221a6:	bd10      	pop	{r4, pc}
 80221a8:	20000104 	.word	0x20000104
 80221ac:	080252cc 	.word	0x080252cc
 80221b0:	080252e3 	.word	0x080252e3
 80221b4:	abcd330e 	.word	0xabcd330e
 80221b8:	e66d1234 	.word	0xe66d1234
 80221bc:	0005deec 	.word	0x0005deec
 80221c0:	5851f42d 	.word	0x5851f42d
 80221c4:	4c957f2d 	.word	0x4c957f2d

080221c8 <_sbrk_r>:
 80221c8:	b538      	push	{r3, r4, r5, lr}
 80221ca:	4d06      	ldr	r5, [pc, #24]	; (80221e4 <_sbrk_r+0x1c>)
 80221cc:	2300      	movs	r3, #0
 80221ce:	4604      	mov	r4, r0
 80221d0:	4608      	mov	r0, r1
 80221d2:	602b      	str	r3, [r5, #0]
 80221d4:	f7e0 f824 	bl	8002220 <_sbrk>
 80221d8:	1c43      	adds	r3, r0, #1
 80221da:	d102      	bne.n	80221e2 <_sbrk_r+0x1a>
 80221dc:	682b      	ldr	r3, [r5, #0]
 80221de:	b103      	cbz	r3, 80221e2 <_sbrk_r+0x1a>
 80221e0:	6023      	str	r3, [r4, #0]
 80221e2:	bd38      	pop	{r3, r4, r5, pc}
 80221e4:	20015ac4 	.word	0x20015ac4

080221e8 <_raise_r>:
 80221e8:	291f      	cmp	r1, #31
 80221ea:	b538      	push	{r3, r4, r5, lr}
 80221ec:	4604      	mov	r4, r0
 80221ee:	460d      	mov	r5, r1
 80221f0:	d904      	bls.n	80221fc <_raise_r+0x14>
 80221f2:	2316      	movs	r3, #22
 80221f4:	6003      	str	r3, [r0, #0]
 80221f6:	f04f 30ff 	mov.w	r0, #4294967295
 80221fa:	bd38      	pop	{r3, r4, r5, pc}
 80221fc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80221fe:	b112      	cbz	r2, 8022206 <_raise_r+0x1e>
 8022200:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8022204:	b94b      	cbnz	r3, 802221a <_raise_r+0x32>
 8022206:	4620      	mov	r0, r4
 8022208:	f000 f830 	bl	802226c <_getpid_r>
 802220c:	462a      	mov	r2, r5
 802220e:	4601      	mov	r1, r0
 8022210:	4620      	mov	r0, r4
 8022212:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022216:	f000 b817 	b.w	8022248 <_kill_r>
 802221a:	2b01      	cmp	r3, #1
 802221c:	d00a      	beq.n	8022234 <_raise_r+0x4c>
 802221e:	1c59      	adds	r1, r3, #1
 8022220:	d103      	bne.n	802222a <_raise_r+0x42>
 8022222:	2316      	movs	r3, #22
 8022224:	6003      	str	r3, [r0, #0]
 8022226:	2001      	movs	r0, #1
 8022228:	e7e7      	b.n	80221fa <_raise_r+0x12>
 802222a:	2400      	movs	r4, #0
 802222c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8022230:	4628      	mov	r0, r5
 8022232:	4798      	blx	r3
 8022234:	2000      	movs	r0, #0
 8022236:	e7e0      	b.n	80221fa <_raise_r+0x12>

08022238 <raise>:
 8022238:	4b02      	ldr	r3, [pc, #8]	; (8022244 <raise+0xc>)
 802223a:	4601      	mov	r1, r0
 802223c:	6818      	ldr	r0, [r3, #0]
 802223e:	f7ff bfd3 	b.w	80221e8 <_raise_r>
 8022242:	bf00      	nop
 8022244:	20000104 	.word	0x20000104

08022248 <_kill_r>:
 8022248:	b538      	push	{r3, r4, r5, lr}
 802224a:	4d07      	ldr	r5, [pc, #28]	; (8022268 <_kill_r+0x20>)
 802224c:	2300      	movs	r3, #0
 802224e:	4604      	mov	r4, r0
 8022250:	4608      	mov	r0, r1
 8022252:	4611      	mov	r1, r2
 8022254:	602b      	str	r3, [r5, #0]
 8022256:	f7df ffad 	bl	80021b4 <_kill>
 802225a:	1c43      	adds	r3, r0, #1
 802225c:	d102      	bne.n	8022264 <_kill_r+0x1c>
 802225e:	682b      	ldr	r3, [r5, #0]
 8022260:	b103      	cbz	r3, 8022264 <_kill_r+0x1c>
 8022262:	6023      	str	r3, [r4, #0]
 8022264:	bd38      	pop	{r3, r4, r5, pc}
 8022266:	bf00      	nop
 8022268:	20015ac4 	.word	0x20015ac4

0802226c <_getpid_r>:
 802226c:	f7df bfa0 	b.w	80021b0 <_getpid>

08022270 <_strtoul_l.constprop.0>:
 8022270:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022274:	4f36      	ldr	r7, [pc, #216]	; (8022350 <_strtoul_l.constprop.0+0xe0>)
 8022276:	4686      	mov	lr, r0
 8022278:	460d      	mov	r5, r1
 802227a:	4628      	mov	r0, r5
 802227c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8022280:	5de6      	ldrb	r6, [r4, r7]
 8022282:	f016 0608 	ands.w	r6, r6, #8
 8022286:	d1f8      	bne.n	802227a <_strtoul_l.constprop.0+0xa>
 8022288:	2c2d      	cmp	r4, #45	; 0x2d
 802228a:	d12f      	bne.n	80222ec <_strtoul_l.constprop.0+0x7c>
 802228c:	782c      	ldrb	r4, [r5, #0]
 802228e:	2601      	movs	r6, #1
 8022290:	1c85      	adds	r5, r0, #2
 8022292:	2b00      	cmp	r3, #0
 8022294:	d057      	beq.n	8022346 <_strtoul_l.constprop.0+0xd6>
 8022296:	2b10      	cmp	r3, #16
 8022298:	d109      	bne.n	80222ae <_strtoul_l.constprop.0+0x3e>
 802229a:	2c30      	cmp	r4, #48	; 0x30
 802229c:	d107      	bne.n	80222ae <_strtoul_l.constprop.0+0x3e>
 802229e:	7828      	ldrb	r0, [r5, #0]
 80222a0:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80222a4:	2858      	cmp	r0, #88	; 0x58
 80222a6:	d149      	bne.n	802233c <_strtoul_l.constprop.0+0xcc>
 80222a8:	786c      	ldrb	r4, [r5, #1]
 80222aa:	2310      	movs	r3, #16
 80222ac:	3502      	adds	r5, #2
 80222ae:	f04f 38ff 	mov.w	r8, #4294967295
 80222b2:	2700      	movs	r7, #0
 80222b4:	fbb8 f8f3 	udiv	r8, r8, r3
 80222b8:	fb03 f908 	mul.w	r9, r3, r8
 80222bc:	ea6f 0909 	mvn.w	r9, r9
 80222c0:	4638      	mov	r0, r7
 80222c2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80222c6:	f1bc 0f09 	cmp.w	ip, #9
 80222ca:	d814      	bhi.n	80222f6 <_strtoul_l.constprop.0+0x86>
 80222cc:	4664      	mov	r4, ip
 80222ce:	42a3      	cmp	r3, r4
 80222d0:	dd22      	ble.n	8022318 <_strtoul_l.constprop.0+0xa8>
 80222d2:	2f00      	cmp	r7, #0
 80222d4:	db1d      	blt.n	8022312 <_strtoul_l.constprop.0+0xa2>
 80222d6:	4580      	cmp	r8, r0
 80222d8:	d31b      	bcc.n	8022312 <_strtoul_l.constprop.0+0xa2>
 80222da:	d101      	bne.n	80222e0 <_strtoul_l.constprop.0+0x70>
 80222dc:	45a1      	cmp	r9, r4
 80222de:	db18      	blt.n	8022312 <_strtoul_l.constprop.0+0xa2>
 80222e0:	fb00 4003 	mla	r0, r0, r3, r4
 80222e4:	2701      	movs	r7, #1
 80222e6:	f815 4b01 	ldrb.w	r4, [r5], #1
 80222ea:	e7ea      	b.n	80222c2 <_strtoul_l.constprop.0+0x52>
 80222ec:	2c2b      	cmp	r4, #43	; 0x2b
 80222ee:	bf04      	itt	eq
 80222f0:	782c      	ldrbeq	r4, [r5, #0]
 80222f2:	1c85      	addeq	r5, r0, #2
 80222f4:	e7cd      	b.n	8022292 <_strtoul_l.constprop.0+0x22>
 80222f6:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 80222fa:	f1bc 0f19 	cmp.w	ip, #25
 80222fe:	d801      	bhi.n	8022304 <_strtoul_l.constprop.0+0x94>
 8022300:	3c37      	subs	r4, #55	; 0x37
 8022302:	e7e4      	b.n	80222ce <_strtoul_l.constprop.0+0x5e>
 8022304:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8022308:	f1bc 0f19 	cmp.w	ip, #25
 802230c:	d804      	bhi.n	8022318 <_strtoul_l.constprop.0+0xa8>
 802230e:	3c57      	subs	r4, #87	; 0x57
 8022310:	e7dd      	b.n	80222ce <_strtoul_l.constprop.0+0x5e>
 8022312:	f04f 37ff 	mov.w	r7, #4294967295
 8022316:	e7e6      	b.n	80222e6 <_strtoul_l.constprop.0+0x76>
 8022318:	2f00      	cmp	r7, #0
 802231a:	da07      	bge.n	802232c <_strtoul_l.constprop.0+0xbc>
 802231c:	2322      	movs	r3, #34	; 0x22
 802231e:	f8ce 3000 	str.w	r3, [lr]
 8022322:	f04f 30ff 	mov.w	r0, #4294967295
 8022326:	b932      	cbnz	r2, 8022336 <_strtoul_l.constprop.0+0xc6>
 8022328:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802232c:	b106      	cbz	r6, 8022330 <_strtoul_l.constprop.0+0xc0>
 802232e:	4240      	negs	r0, r0
 8022330:	2a00      	cmp	r2, #0
 8022332:	d0f9      	beq.n	8022328 <_strtoul_l.constprop.0+0xb8>
 8022334:	b107      	cbz	r7, 8022338 <_strtoul_l.constprop.0+0xc8>
 8022336:	1e69      	subs	r1, r5, #1
 8022338:	6011      	str	r1, [r2, #0]
 802233a:	e7f5      	b.n	8022328 <_strtoul_l.constprop.0+0xb8>
 802233c:	2430      	movs	r4, #48	; 0x30
 802233e:	2b00      	cmp	r3, #0
 8022340:	d1b5      	bne.n	80222ae <_strtoul_l.constprop.0+0x3e>
 8022342:	2308      	movs	r3, #8
 8022344:	e7b3      	b.n	80222ae <_strtoul_l.constprop.0+0x3e>
 8022346:	2c30      	cmp	r4, #48	; 0x30
 8022348:	d0a9      	beq.n	802229e <_strtoul_l.constprop.0+0x2e>
 802234a:	230a      	movs	r3, #10
 802234c:	e7af      	b.n	80222ae <_strtoul_l.constprop.0+0x3e>
 802234e:	bf00      	nop
 8022350:	0802533f 	.word	0x0802533f

08022354 <strtoul>:
 8022354:	4613      	mov	r3, r2
 8022356:	460a      	mov	r2, r1
 8022358:	4601      	mov	r1, r0
 802235a:	4802      	ldr	r0, [pc, #8]	; (8022364 <strtoul+0x10>)
 802235c:	6800      	ldr	r0, [r0, #0]
 802235e:	f7ff bf87 	b.w	8022270 <_strtoul_l.constprop.0>
 8022362:	bf00      	nop
 8022364:	20000104 	.word	0x20000104

08022368 <time>:
 8022368:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802236a:	4b0b      	ldr	r3, [pc, #44]	; (8022398 <time+0x30>)
 802236c:	2200      	movs	r2, #0
 802236e:	4669      	mov	r1, sp
 8022370:	4604      	mov	r4, r0
 8022372:	6818      	ldr	r0, [r3, #0]
 8022374:	f000 fafc 	bl	8022970 <_gettimeofday_r>
 8022378:	2800      	cmp	r0, #0
 802237a:	bfbe      	ittt	lt
 802237c:	f04f 32ff 	movlt.w	r2, #4294967295
 8022380:	f04f 33ff 	movlt.w	r3, #4294967295
 8022384:	e9cd 2300 	strdlt	r2, r3, [sp]
 8022388:	e9dd 0100 	ldrd	r0, r1, [sp]
 802238c:	b10c      	cbz	r4, 8022392 <time+0x2a>
 802238e:	e9c4 0100 	strd	r0, r1, [r4]
 8022392:	b004      	add	sp, #16
 8022394:	bd10      	pop	{r4, pc}
 8022396:	bf00      	nop
 8022398:	20000104 	.word	0x20000104

0802239c <__swbuf_r>:
 802239c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802239e:	460e      	mov	r6, r1
 80223a0:	4614      	mov	r4, r2
 80223a2:	4605      	mov	r5, r0
 80223a4:	b118      	cbz	r0, 80223ae <__swbuf_r+0x12>
 80223a6:	6983      	ldr	r3, [r0, #24]
 80223a8:	b90b      	cbnz	r3, 80223ae <__swbuf_r+0x12>
 80223aa:	f000 fa43 	bl	8022834 <__sinit>
 80223ae:	4b21      	ldr	r3, [pc, #132]	; (8022434 <__swbuf_r+0x98>)
 80223b0:	429c      	cmp	r4, r3
 80223b2:	d12b      	bne.n	802240c <__swbuf_r+0x70>
 80223b4:	686c      	ldr	r4, [r5, #4]
 80223b6:	69a3      	ldr	r3, [r4, #24]
 80223b8:	60a3      	str	r3, [r4, #8]
 80223ba:	89a3      	ldrh	r3, [r4, #12]
 80223bc:	071a      	lsls	r2, r3, #28
 80223be:	d52f      	bpl.n	8022420 <__swbuf_r+0x84>
 80223c0:	6923      	ldr	r3, [r4, #16]
 80223c2:	b36b      	cbz	r3, 8022420 <__swbuf_r+0x84>
 80223c4:	6923      	ldr	r3, [r4, #16]
 80223c6:	6820      	ldr	r0, [r4, #0]
 80223c8:	1ac0      	subs	r0, r0, r3
 80223ca:	6963      	ldr	r3, [r4, #20]
 80223cc:	b2f6      	uxtb	r6, r6
 80223ce:	4283      	cmp	r3, r0
 80223d0:	4637      	mov	r7, r6
 80223d2:	dc04      	bgt.n	80223de <__swbuf_r+0x42>
 80223d4:	4621      	mov	r1, r4
 80223d6:	4628      	mov	r0, r5
 80223d8:	f000 f998 	bl	802270c <_fflush_r>
 80223dc:	bb30      	cbnz	r0, 802242c <__swbuf_r+0x90>
 80223de:	68a3      	ldr	r3, [r4, #8]
 80223e0:	3b01      	subs	r3, #1
 80223e2:	60a3      	str	r3, [r4, #8]
 80223e4:	6823      	ldr	r3, [r4, #0]
 80223e6:	1c5a      	adds	r2, r3, #1
 80223e8:	6022      	str	r2, [r4, #0]
 80223ea:	701e      	strb	r6, [r3, #0]
 80223ec:	6963      	ldr	r3, [r4, #20]
 80223ee:	3001      	adds	r0, #1
 80223f0:	4283      	cmp	r3, r0
 80223f2:	d004      	beq.n	80223fe <__swbuf_r+0x62>
 80223f4:	89a3      	ldrh	r3, [r4, #12]
 80223f6:	07db      	lsls	r3, r3, #31
 80223f8:	d506      	bpl.n	8022408 <__swbuf_r+0x6c>
 80223fa:	2e0a      	cmp	r6, #10
 80223fc:	d104      	bne.n	8022408 <__swbuf_r+0x6c>
 80223fe:	4621      	mov	r1, r4
 8022400:	4628      	mov	r0, r5
 8022402:	f000 f983 	bl	802270c <_fflush_r>
 8022406:	b988      	cbnz	r0, 802242c <__swbuf_r+0x90>
 8022408:	4638      	mov	r0, r7
 802240a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802240c:	4b0a      	ldr	r3, [pc, #40]	; (8022438 <__swbuf_r+0x9c>)
 802240e:	429c      	cmp	r4, r3
 8022410:	d101      	bne.n	8022416 <__swbuf_r+0x7a>
 8022412:	68ac      	ldr	r4, [r5, #8]
 8022414:	e7cf      	b.n	80223b6 <__swbuf_r+0x1a>
 8022416:	4b09      	ldr	r3, [pc, #36]	; (802243c <__swbuf_r+0xa0>)
 8022418:	429c      	cmp	r4, r3
 802241a:	bf08      	it	eq
 802241c:	68ec      	ldreq	r4, [r5, #12]
 802241e:	e7ca      	b.n	80223b6 <__swbuf_r+0x1a>
 8022420:	4621      	mov	r1, r4
 8022422:	4628      	mov	r0, r5
 8022424:	f000 f80c 	bl	8022440 <__swsetup_r>
 8022428:	2800      	cmp	r0, #0
 802242a:	d0cb      	beq.n	80223c4 <__swbuf_r+0x28>
 802242c:	f04f 37ff 	mov.w	r7, #4294967295
 8022430:	e7ea      	b.n	8022408 <__swbuf_r+0x6c>
 8022432:	bf00      	nop
 8022434:	08025460 	.word	0x08025460
 8022438:	08025480 	.word	0x08025480
 802243c:	08025440 	.word	0x08025440

08022440 <__swsetup_r>:
 8022440:	4b32      	ldr	r3, [pc, #200]	; (802250c <__swsetup_r+0xcc>)
 8022442:	b570      	push	{r4, r5, r6, lr}
 8022444:	681d      	ldr	r5, [r3, #0]
 8022446:	4606      	mov	r6, r0
 8022448:	460c      	mov	r4, r1
 802244a:	b125      	cbz	r5, 8022456 <__swsetup_r+0x16>
 802244c:	69ab      	ldr	r3, [r5, #24]
 802244e:	b913      	cbnz	r3, 8022456 <__swsetup_r+0x16>
 8022450:	4628      	mov	r0, r5
 8022452:	f000 f9ef 	bl	8022834 <__sinit>
 8022456:	4b2e      	ldr	r3, [pc, #184]	; (8022510 <__swsetup_r+0xd0>)
 8022458:	429c      	cmp	r4, r3
 802245a:	d10f      	bne.n	802247c <__swsetup_r+0x3c>
 802245c:	686c      	ldr	r4, [r5, #4]
 802245e:	89a3      	ldrh	r3, [r4, #12]
 8022460:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022464:	0719      	lsls	r1, r3, #28
 8022466:	d42c      	bmi.n	80224c2 <__swsetup_r+0x82>
 8022468:	06dd      	lsls	r5, r3, #27
 802246a:	d411      	bmi.n	8022490 <__swsetup_r+0x50>
 802246c:	2309      	movs	r3, #9
 802246e:	6033      	str	r3, [r6, #0]
 8022470:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8022474:	81a3      	strh	r3, [r4, #12]
 8022476:	f04f 30ff 	mov.w	r0, #4294967295
 802247a:	e03e      	b.n	80224fa <__swsetup_r+0xba>
 802247c:	4b25      	ldr	r3, [pc, #148]	; (8022514 <__swsetup_r+0xd4>)
 802247e:	429c      	cmp	r4, r3
 8022480:	d101      	bne.n	8022486 <__swsetup_r+0x46>
 8022482:	68ac      	ldr	r4, [r5, #8]
 8022484:	e7eb      	b.n	802245e <__swsetup_r+0x1e>
 8022486:	4b24      	ldr	r3, [pc, #144]	; (8022518 <__swsetup_r+0xd8>)
 8022488:	429c      	cmp	r4, r3
 802248a:	bf08      	it	eq
 802248c:	68ec      	ldreq	r4, [r5, #12]
 802248e:	e7e6      	b.n	802245e <__swsetup_r+0x1e>
 8022490:	0758      	lsls	r0, r3, #29
 8022492:	d512      	bpl.n	80224ba <__swsetup_r+0x7a>
 8022494:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8022496:	b141      	cbz	r1, 80224aa <__swsetup_r+0x6a>
 8022498:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802249c:	4299      	cmp	r1, r3
 802249e:	d002      	beq.n	80224a6 <__swsetup_r+0x66>
 80224a0:	4630      	mov	r0, r6
 80224a2:	f7ff fa57 	bl	8021954 <_free_r>
 80224a6:	2300      	movs	r3, #0
 80224a8:	6363      	str	r3, [r4, #52]	; 0x34
 80224aa:	89a3      	ldrh	r3, [r4, #12]
 80224ac:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80224b0:	81a3      	strh	r3, [r4, #12]
 80224b2:	2300      	movs	r3, #0
 80224b4:	6063      	str	r3, [r4, #4]
 80224b6:	6923      	ldr	r3, [r4, #16]
 80224b8:	6023      	str	r3, [r4, #0]
 80224ba:	89a3      	ldrh	r3, [r4, #12]
 80224bc:	f043 0308 	orr.w	r3, r3, #8
 80224c0:	81a3      	strh	r3, [r4, #12]
 80224c2:	6923      	ldr	r3, [r4, #16]
 80224c4:	b94b      	cbnz	r3, 80224da <__swsetup_r+0x9a>
 80224c6:	89a3      	ldrh	r3, [r4, #12]
 80224c8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80224cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80224d0:	d003      	beq.n	80224da <__swsetup_r+0x9a>
 80224d2:	4621      	mov	r1, r4
 80224d4:	4630      	mov	r0, r6
 80224d6:	f000 fa87 	bl	80229e8 <__smakebuf_r>
 80224da:	89a0      	ldrh	r0, [r4, #12]
 80224dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80224e0:	f010 0301 	ands.w	r3, r0, #1
 80224e4:	d00a      	beq.n	80224fc <__swsetup_r+0xbc>
 80224e6:	2300      	movs	r3, #0
 80224e8:	60a3      	str	r3, [r4, #8]
 80224ea:	6963      	ldr	r3, [r4, #20]
 80224ec:	425b      	negs	r3, r3
 80224ee:	61a3      	str	r3, [r4, #24]
 80224f0:	6923      	ldr	r3, [r4, #16]
 80224f2:	b943      	cbnz	r3, 8022506 <__swsetup_r+0xc6>
 80224f4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80224f8:	d1ba      	bne.n	8022470 <__swsetup_r+0x30>
 80224fa:	bd70      	pop	{r4, r5, r6, pc}
 80224fc:	0781      	lsls	r1, r0, #30
 80224fe:	bf58      	it	pl
 8022500:	6963      	ldrpl	r3, [r4, #20]
 8022502:	60a3      	str	r3, [r4, #8]
 8022504:	e7f4      	b.n	80224f0 <__swsetup_r+0xb0>
 8022506:	2000      	movs	r0, #0
 8022508:	e7f7      	b.n	80224fa <__swsetup_r+0xba>
 802250a:	bf00      	nop
 802250c:	20000104 	.word	0x20000104
 8022510:	08025460 	.word	0x08025460
 8022514:	08025480 	.word	0x08025480
 8022518:	08025440 	.word	0x08025440

0802251c <__register_exitproc>:
 802251c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022520:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80225dc <__register_exitproc+0xc0>
 8022524:	4606      	mov	r6, r0
 8022526:	f8d8 0000 	ldr.w	r0, [r8]
 802252a:	461f      	mov	r7, r3
 802252c:	460d      	mov	r5, r1
 802252e:	4691      	mov	r9, r2
 8022530:	f000 fa31 	bl	8022996 <__retarget_lock_acquire_recursive>
 8022534:	4b25      	ldr	r3, [pc, #148]	; (80225cc <__register_exitproc+0xb0>)
 8022536:	681c      	ldr	r4, [r3, #0]
 8022538:	b934      	cbnz	r4, 8022548 <__register_exitproc+0x2c>
 802253a:	4c25      	ldr	r4, [pc, #148]	; (80225d0 <__register_exitproc+0xb4>)
 802253c:	601c      	str	r4, [r3, #0]
 802253e:	4b25      	ldr	r3, [pc, #148]	; (80225d4 <__register_exitproc+0xb8>)
 8022540:	b113      	cbz	r3, 8022548 <__register_exitproc+0x2c>
 8022542:	681b      	ldr	r3, [r3, #0]
 8022544:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8022548:	6863      	ldr	r3, [r4, #4]
 802254a:	2b1f      	cmp	r3, #31
 802254c:	dd07      	ble.n	802255e <__register_exitproc+0x42>
 802254e:	f8d8 0000 	ldr.w	r0, [r8]
 8022552:	f000 fa22 	bl	802299a <__retarget_lock_release_recursive>
 8022556:	f04f 30ff 	mov.w	r0, #4294967295
 802255a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802255e:	b34e      	cbz	r6, 80225b4 <__register_exitproc+0x98>
 8022560:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8022564:	b988      	cbnz	r0, 802258a <__register_exitproc+0x6e>
 8022566:	4b1c      	ldr	r3, [pc, #112]	; (80225d8 <__register_exitproc+0xbc>)
 8022568:	b923      	cbnz	r3, 8022574 <__register_exitproc+0x58>
 802256a:	f8d8 0000 	ldr.w	r0, [r8]
 802256e:	f000 fa13 	bl	8022998 <__retarget_lock_release>
 8022572:	e7f0      	b.n	8022556 <__register_exitproc+0x3a>
 8022574:	f44f 7084 	mov.w	r0, #264	; 0x108
 8022578:	f7ff f9b6 	bl	80218e8 <malloc>
 802257c:	2800      	cmp	r0, #0
 802257e:	d0f4      	beq.n	802256a <__register_exitproc+0x4e>
 8022580:	2300      	movs	r3, #0
 8022582:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8022586:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802258a:	6863      	ldr	r3, [r4, #4]
 802258c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8022590:	2201      	movs	r2, #1
 8022592:	409a      	lsls	r2, r3
 8022594:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022598:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802259c:	4313      	orrs	r3, r2
 802259e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80225a2:	2e02      	cmp	r6, #2
 80225a4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80225a8:	bf02      	ittt	eq
 80225aa:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80225ae:	4313      	orreq	r3, r2
 80225b0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80225b4:	6863      	ldr	r3, [r4, #4]
 80225b6:	f8d8 0000 	ldr.w	r0, [r8]
 80225ba:	1c5a      	adds	r2, r3, #1
 80225bc:	3302      	adds	r3, #2
 80225be:	6062      	str	r2, [r4, #4]
 80225c0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80225c4:	f000 f9e9 	bl	802299a <__retarget_lock_release_recursive>
 80225c8:	2000      	movs	r0, #0
 80225ca:	e7c6      	b.n	802255a <__register_exitproc+0x3e>
 80225cc:	20015abc 	.word	0x20015abc
 80225d0:	20015a30 	.word	0x20015a30
 80225d4:	080252c8 	.word	0x080252c8
 80225d8:	080218e9 	.word	0x080218e9
 80225dc:	20000168 	.word	0x20000168

080225e0 <_close_r>:
 80225e0:	b538      	push	{r3, r4, r5, lr}
 80225e2:	4d06      	ldr	r5, [pc, #24]	; (80225fc <_close_r+0x1c>)
 80225e4:	2300      	movs	r3, #0
 80225e6:	4604      	mov	r4, r0
 80225e8:	4608      	mov	r0, r1
 80225ea:	602b      	str	r3, [r5, #0]
 80225ec:	f7df fe0c 	bl	8002208 <_close>
 80225f0:	1c43      	adds	r3, r0, #1
 80225f2:	d102      	bne.n	80225fa <_close_r+0x1a>
 80225f4:	682b      	ldr	r3, [r5, #0]
 80225f6:	b103      	cbz	r3, 80225fa <_close_r+0x1a>
 80225f8:	6023      	str	r3, [r4, #0]
 80225fa:	bd38      	pop	{r3, r4, r5, pc}
 80225fc:	20015ac4 	.word	0x20015ac4

08022600 <__sflush_r>:
 8022600:	898a      	ldrh	r2, [r1, #12]
 8022602:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022606:	4605      	mov	r5, r0
 8022608:	0710      	lsls	r0, r2, #28
 802260a:	460c      	mov	r4, r1
 802260c:	d458      	bmi.n	80226c0 <__sflush_r+0xc0>
 802260e:	684b      	ldr	r3, [r1, #4]
 8022610:	2b00      	cmp	r3, #0
 8022612:	dc05      	bgt.n	8022620 <__sflush_r+0x20>
 8022614:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8022616:	2b00      	cmp	r3, #0
 8022618:	dc02      	bgt.n	8022620 <__sflush_r+0x20>
 802261a:	2000      	movs	r0, #0
 802261c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022620:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8022622:	2e00      	cmp	r6, #0
 8022624:	d0f9      	beq.n	802261a <__sflush_r+0x1a>
 8022626:	2300      	movs	r3, #0
 8022628:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802262c:	682f      	ldr	r7, [r5, #0]
 802262e:	602b      	str	r3, [r5, #0]
 8022630:	d032      	beq.n	8022698 <__sflush_r+0x98>
 8022632:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8022634:	89a3      	ldrh	r3, [r4, #12]
 8022636:	075a      	lsls	r2, r3, #29
 8022638:	d505      	bpl.n	8022646 <__sflush_r+0x46>
 802263a:	6863      	ldr	r3, [r4, #4]
 802263c:	1ac0      	subs	r0, r0, r3
 802263e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8022640:	b10b      	cbz	r3, 8022646 <__sflush_r+0x46>
 8022642:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8022644:	1ac0      	subs	r0, r0, r3
 8022646:	2300      	movs	r3, #0
 8022648:	4602      	mov	r2, r0
 802264a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802264c:	6a21      	ldr	r1, [r4, #32]
 802264e:	4628      	mov	r0, r5
 8022650:	47b0      	blx	r6
 8022652:	1c43      	adds	r3, r0, #1
 8022654:	89a3      	ldrh	r3, [r4, #12]
 8022656:	d106      	bne.n	8022666 <__sflush_r+0x66>
 8022658:	6829      	ldr	r1, [r5, #0]
 802265a:	291d      	cmp	r1, #29
 802265c:	d82c      	bhi.n	80226b8 <__sflush_r+0xb8>
 802265e:	4a2a      	ldr	r2, [pc, #168]	; (8022708 <__sflush_r+0x108>)
 8022660:	40ca      	lsrs	r2, r1
 8022662:	07d6      	lsls	r6, r2, #31
 8022664:	d528      	bpl.n	80226b8 <__sflush_r+0xb8>
 8022666:	2200      	movs	r2, #0
 8022668:	6062      	str	r2, [r4, #4]
 802266a:	04d9      	lsls	r1, r3, #19
 802266c:	6922      	ldr	r2, [r4, #16]
 802266e:	6022      	str	r2, [r4, #0]
 8022670:	d504      	bpl.n	802267c <__sflush_r+0x7c>
 8022672:	1c42      	adds	r2, r0, #1
 8022674:	d101      	bne.n	802267a <__sflush_r+0x7a>
 8022676:	682b      	ldr	r3, [r5, #0]
 8022678:	b903      	cbnz	r3, 802267c <__sflush_r+0x7c>
 802267a:	6560      	str	r0, [r4, #84]	; 0x54
 802267c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802267e:	602f      	str	r7, [r5, #0]
 8022680:	2900      	cmp	r1, #0
 8022682:	d0ca      	beq.n	802261a <__sflush_r+0x1a>
 8022684:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8022688:	4299      	cmp	r1, r3
 802268a:	d002      	beq.n	8022692 <__sflush_r+0x92>
 802268c:	4628      	mov	r0, r5
 802268e:	f7ff f961 	bl	8021954 <_free_r>
 8022692:	2000      	movs	r0, #0
 8022694:	6360      	str	r0, [r4, #52]	; 0x34
 8022696:	e7c1      	b.n	802261c <__sflush_r+0x1c>
 8022698:	6a21      	ldr	r1, [r4, #32]
 802269a:	2301      	movs	r3, #1
 802269c:	4628      	mov	r0, r5
 802269e:	47b0      	blx	r6
 80226a0:	1c41      	adds	r1, r0, #1
 80226a2:	d1c7      	bne.n	8022634 <__sflush_r+0x34>
 80226a4:	682b      	ldr	r3, [r5, #0]
 80226a6:	2b00      	cmp	r3, #0
 80226a8:	d0c4      	beq.n	8022634 <__sflush_r+0x34>
 80226aa:	2b1d      	cmp	r3, #29
 80226ac:	d001      	beq.n	80226b2 <__sflush_r+0xb2>
 80226ae:	2b16      	cmp	r3, #22
 80226b0:	d101      	bne.n	80226b6 <__sflush_r+0xb6>
 80226b2:	602f      	str	r7, [r5, #0]
 80226b4:	e7b1      	b.n	802261a <__sflush_r+0x1a>
 80226b6:	89a3      	ldrh	r3, [r4, #12]
 80226b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80226bc:	81a3      	strh	r3, [r4, #12]
 80226be:	e7ad      	b.n	802261c <__sflush_r+0x1c>
 80226c0:	690f      	ldr	r7, [r1, #16]
 80226c2:	2f00      	cmp	r7, #0
 80226c4:	d0a9      	beq.n	802261a <__sflush_r+0x1a>
 80226c6:	0793      	lsls	r3, r2, #30
 80226c8:	680e      	ldr	r6, [r1, #0]
 80226ca:	bf08      	it	eq
 80226cc:	694b      	ldreq	r3, [r1, #20]
 80226ce:	600f      	str	r7, [r1, #0]
 80226d0:	bf18      	it	ne
 80226d2:	2300      	movne	r3, #0
 80226d4:	eba6 0807 	sub.w	r8, r6, r7
 80226d8:	608b      	str	r3, [r1, #8]
 80226da:	f1b8 0f00 	cmp.w	r8, #0
 80226de:	dd9c      	ble.n	802261a <__sflush_r+0x1a>
 80226e0:	6a21      	ldr	r1, [r4, #32]
 80226e2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80226e4:	4643      	mov	r3, r8
 80226e6:	463a      	mov	r2, r7
 80226e8:	4628      	mov	r0, r5
 80226ea:	47b0      	blx	r6
 80226ec:	2800      	cmp	r0, #0
 80226ee:	dc06      	bgt.n	80226fe <__sflush_r+0xfe>
 80226f0:	89a3      	ldrh	r3, [r4, #12]
 80226f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80226f6:	81a3      	strh	r3, [r4, #12]
 80226f8:	f04f 30ff 	mov.w	r0, #4294967295
 80226fc:	e78e      	b.n	802261c <__sflush_r+0x1c>
 80226fe:	4407      	add	r7, r0
 8022700:	eba8 0800 	sub.w	r8, r8, r0
 8022704:	e7e9      	b.n	80226da <__sflush_r+0xda>
 8022706:	bf00      	nop
 8022708:	20400001 	.word	0x20400001

0802270c <_fflush_r>:
 802270c:	b538      	push	{r3, r4, r5, lr}
 802270e:	690b      	ldr	r3, [r1, #16]
 8022710:	4605      	mov	r5, r0
 8022712:	460c      	mov	r4, r1
 8022714:	b913      	cbnz	r3, 802271c <_fflush_r+0x10>
 8022716:	2500      	movs	r5, #0
 8022718:	4628      	mov	r0, r5
 802271a:	bd38      	pop	{r3, r4, r5, pc}
 802271c:	b118      	cbz	r0, 8022726 <_fflush_r+0x1a>
 802271e:	6983      	ldr	r3, [r0, #24]
 8022720:	b90b      	cbnz	r3, 8022726 <_fflush_r+0x1a>
 8022722:	f000 f887 	bl	8022834 <__sinit>
 8022726:	4b14      	ldr	r3, [pc, #80]	; (8022778 <_fflush_r+0x6c>)
 8022728:	429c      	cmp	r4, r3
 802272a:	d11b      	bne.n	8022764 <_fflush_r+0x58>
 802272c:	686c      	ldr	r4, [r5, #4]
 802272e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022732:	2b00      	cmp	r3, #0
 8022734:	d0ef      	beq.n	8022716 <_fflush_r+0xa>
 8022736:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8022738:	07d0      	lsls	r0, r2, #31
 802273a:	d404      	bmi.n	8022746 <_fflush_r+0x3a>
 802273c:	0599      	lsls	r1, r3, #22
 802273e:	d402      	bmi.n	8022746 <_fflush_r+0x3a>
 8022740:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8022742:	f000 f928 	bl	8022996 <__retarget_lock_acquire_recursive>
 8022746:	4628      	mov	r0, r5
 8022748:	4621      	mov	r1, r4
 802274a:	f7ff ff59 	bl	8022600 <__sflush_r>
 802274e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8022750:	07da      	lsls	r2, r3, #31
 8022752:	4605      	mov	r5, r0
 8022754:	d4e0      	bmi.n	8022718 <_fflush_r+0xc>
 8022756:	89a3      	ldrh	r3, [r4, #12]
 8022758:	059b      	lsls	r3, r3, #22
 802275a:	d4dd      	bmi.n	8022718 <_fflush_r+0xc>
 802275c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802275e:	f000 f91c 	bl	802299a <__retarget_lock_release_recursive>
 8022762:	e7d9      	b.n	8022718 <_fflush_r+0xc>
 8022764:	4b05      	ldr	r3, [pc, #20]	; (802277c <_fflush_r+0x70>)
 8022766:	429c      	cmp	r4, r3
 8022768:	d101      	bne.n	802276e <_fflush_r+0x62>
 802276a:	68ac      	ldr	r4, [r5, #8]
 802276c:	e7df      	b.n	802272e <_fflush_r+0x22>
 802276e:	4b04      	ldr	r3, [pc, #16]	; (8022780 <_fflush_r+0x74>)
 8022770:	429c      	cmp	r4, r3
 8022772:	bf08      	it	eq
 8022774:	68ec      	ldreq	r4, [r5, #12]
 8022776:	e7da      	b.n	802272e <_fflush_r+0x22>
 8022778:	08025460 	.word	0x08025460
 802277c:	08025480 	.word	0x08025480
 8022780:	08025440 	.word	0x08025440

08022784 <std>:
 8022784:	2300      	movs	r3, #0
 8022786:	b510      	push	{r4, lr}
 8022788:	4604      	mov	r4, r0
 802278a:	e9c0 3300 	strd	r3, r3, [r0]
 802278e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022792:	6083      	str	r3, [r0, #8]
 8022794:	8181      	strh	r1, [r0, #12]
 8022796:	6643      	str	r3, [r0, #100]	; 0x64
 8022798:	81c2      	strh	r2, [r0, #14]
 802279a:	6183      	str	r3, [r0, #24]
 802279c:	4619      	mov	r1, r3
 802279e:	2208      	movs	r2, #8
 80227a0:	305c      	adds	r0, #92	; 0x5c
 80227a2:	f7ff f8cf 	bl	8021944 <memset>
 80227a6:	4b05      	ldr	r3, [pc, #20]	; (80227bc <std+0x38>)
 80227a8:	6263      	str	r3, [r4, #36]	; 0x24
 80227aa:	4b05      	ldr	r3, [pc, #20]	; (80227c0 <std+0x3c>)
 80227ac:	62a3      	str	r3, [r4, #40]	; 0x28
 80227ae:	4b05      	ldr	r3, [pc, #20]	; (80227c4 <std+0x40>)
 80227b0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80227b2:	4b05      	ldr	r3, [pc, #20]	; (80227c8 <std+0x44>)
 80227b4:	6224      	str	r4, [r4, #32]
 80227b6:	6323      	str	r3, [r4, #48]	; 0x30
 80227b8:	bd10      	pop	{r4, pc}
 80227ba:	bf00      	nop
 80227bc:	08022a81 	.word	0x08022a81
 80227c0:	08022aa3 	.word	0x08022aa3
 80227c4:	08022adb 	.word	0x08022adb
 80227c8:	08022aff 	.word	0x08022aff

080227cc <_cleanup_r>:
 80227cc:	4901      	ldr	r1, [pc, #4]	; (80227d4 <_cleanup_r+0x8>)
 80227ce:	f000 b8af 	b.w	8022930 <_fwalk_reent>
 80227d2:	bf00      	nop
 80227d4:	0802270d 	.word	0x0802270d

080227d8 <__sfmoreglue>:
 80227d8:	b570      	push	{r4, r5, r6, lr}
 80227da:	2268      	movs	r2, #104	; 0x68
 80227dc:	1e4d      	subs	r5, r1, #1
 80227de:	4355      	muls	r5, r2
 80227e0:	460e      	mov	r6, r1
 80227e2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80227e6:	f7ff f921 	bl	8021a2c <_malloc_r>
 80227ea:	4604      	mov	r4, r0
 80227ec:	b140      	cbz	r0, 8022800 <__sfmoreglue+0x28>
 80227ee:	2100      	movs	r1, #0
 80227f0:	e9c0 1600 	strd	r1, r6, [r0]
 80227f4:	300c      	adds	r0, #12
 80227f6:	60a0      	str	r0, [r4, #8]
 80227f8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80227fc:	f7ff f8a2 	bl	8021944 <memset>
 8022800:	4620      	mov	r0, r4
 8022802:	bd70      	pop	{r4, r5, r6, pc}

08022804 <__sfp_lock_acquire>:
 8022804:	4801      	ldr	r0, [pc, #4]	; (802280c <__sfp_lock_acquire+0x8>)
 8022806:	f000 b8c6 	b.w	8022996 <__retarget_lock_acquire_recursive>
 802280a:	bf00      	nop
 802280c:	20015ac2 	.word	0x20015ac2

08022810 <__sfp_lock_release>:
 8022810:	4801      	ldr	r0, [pc, #4]	; (8022818 <__sfp_lock_release+0x8>)
 8022812:	f000 b8c2 	b.w	802299a <__retarget_lock_release_recursive>
 8022816:	bf00      	nop
 8022818:	20015ac2 	.word	0x20015ac2

0802281c <__sinit_lock_acquire>:
 802281c:	4801      	ldr	r0, [pc, #4]	; (8022824 <__sinit_lock_acquire+0x8>)
 802281e:	f000 b8ba 	b.w	8022996 <__retarget_lock_acquire_recursive>
 8022822:	bf00      	nop
 8022824:	20015ac3 	.word	0x20015ac3

08022828 <__sinit_lock_release>:
 8022828:	4801      	ldr	r0, [pc, #4]	; (8022830 <__sinit_lock_release+0x8>)
 802282a:	f000 b8b6 	b.w	802299a <__retarget_lock_release_recursive>
 802282e:	bf00      	nop
 8022830:	20015ac3 	.word	0x20015ac3

08022834 <__sinit>:
 8022834:	b510      	push	{r4, lr}
 8022836:	4604      	mov	r4, r0
 8022838:	f7ff fff0 	bl	802281c <__sinit_lock_acquire>
 802283c:	69a3      	ldr	r3, [r4, #24]
 802283e:	b11b      	cbz	r3, 8022848 <__sinit+0x14>
 8022840:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022844:	f7ff bff0 	b.w	8022828 <__sinit_lock_release>
 8022848:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 802284c:	6523      	str	r3, [r4, #80]	; 0x50
 802284e:	4b13      	ldr	r3, [pc, #76]	; (802289c <__sinit+0x68>)
 8022850:	4a13      	ldr	r2, [pc, #76]	; (80228a0 <__sinit+0x6c>)
 8022852:	681b      	ldr	r3, [r3, #0]
 8022854:	62a2      	str	r2, [r4, #40]	; 0x28
 8022856:	42a3      	cmp	r3, r4
 8022858:	bf04      	itt	eq
 802285a:	2301      	moveq	r3, #1
 802285c:	61a3      	streq	r3, [r4, #24]
 802285e:	4620      	mov	r0, r4
 8022860:	f000 f820 	bl	80228a4 <__sfp>
 8022864:	6060      	str	r0, [r4, #4]
 8022866:	4620      	mov	r0, r4
 8022868:	f000 f81c 	bl	80228a4 <__sfp>
 802286c:	60a0      	str	r0, [r4, #8]
 802286e:	4620      	mov	r0, r4
 8022870:	f000 f818 	bl	80228a4 <__sfp>
 8022874:	2200      	movs	r2, #0
 8022876:	60e0      	str	r0, [r4, #12]
 8022878:	2104      	movs	r1, #4
 802287a:	6860      	ldr	r0, [r4, #4]
 802287c:	f7ff ff82 	bl	8022784 <std>
 8022880:	68a0      	ldr	r0, [r4, #8]
 8022882:	2201      	movs	r2, #1
 8022884:	2109      	movs	r1, #9
 8022886:	f7ff ff7d 	bl	8022784 <std>
 802288a:	68e0      	ldr	r0, [r4, #12]
 802288c:	2202      	movs	r2, #2
 802288e:	2112      	movs	r1, #18
 8022890:	f7ff ff78 	bl	8022784 <std>
 8022894:	2301      	movs	r3, #1
 8022896:	61a3      	str	r3, [r4, #24]
 8022898:	e7d2      	b.n	8022840 <__sinit+0xc>
 802289a:	bf00      	nop
 802289c:	08025290 	.word	0x08025290
 80228a0:	080227cd 	.word	0x080227cd

080228a4 <__sfp>:
 80228a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80228a6:	4607      	mov	r7, r0
 80228a8:	f7ff ffac 	bl	8022804 <__sfp_lock_acquire>
 80228ac:	4b1e      	ldr	r3, [pc, #120]	; (8022928 <__sfp+0x84>)
 80228ae:	681e      	ldr	r6, [r3, #0]
 80228b0:	69b3      	ldr	r3, [r6, #24]
 80228b2:	b913      	cbnz	r3, 80228ba <__sfp+0x16>
 80228b4:	4630      	mov	r0, r6
 80228b6:	f7ff ffbd 	bl	8022834 <__sinit>
 80228ba:	3648      	adds	r6, #72	; 0x48
 80228bc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80228c0:	3b01      	subs	r3, #1
 80228c2:	d503      	bpl.n	80228cc <__sfp+0x28>
 80228c4:	6833      	ldr	r3, [r6, #0]
 80228c6:	b30b      	cbz	r3, 802290c <__sfp+0x68>
 80228c8:	6836      	ldr	r6, [r6, #0]
 80228ca:	e7f7      	b.n	80228bc <__sfp+0x18>
 80228cc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80228d0:	b9d5      	cbnz	r5, 8022908 <__sfp+0x64>
 80228d2:	4b16      	ldr	r3, [pc, #88]	; (802292c <__sfp+0x88>)
 80228d4:	60e3      	str	r3, [r4, #12]
 80228d6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80228da:	6665      	str	r5, [r4, #100]	; 0x64
 80228dc:	f000 f85a 	bl	8022994 <__retarget_lock_init_recursive>
 80228e0:	f7ff ff96 	bl	8022810 <__sfp_lock_release>
 80228e4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80228e8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80228ec:	6025      	str	r5, [r4, #0]
 80228ee:	61a5      	str	r5, [r4, #24]
 80228f0:	2208      	movs	r2, #8
 80228f2:	4629      	mov	r1, r5
 80228f4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80228f8:	f7ff f824 	bl	8021944 <memset>
 80228fc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8022900:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8022904:	4620      	mov	r0, r4
 8022906:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022908:	3468      	adds	r4, #104	; 0x68
 802290a:	e7d9      	b.n	80228c0 <__sfp+0x1c>
 802290c:	2104      	movs	r1, #4
 802290e:	4638      	mov	r0, r7
 8022910:	f7ff ff62 	bl	80227d8 <__sfmoreglue>
 8022914:	4604      	mov	r4, r0
 8022916:	6030      	str	r0, [r6, #0]
 8022918:	2800      	cmp	r0, #0
 802291a:	d1d5      	bne.n	80228c8 <__sfp+0x24>
 802291c:	f7ff ff78 	bl	8022810 <__sfp_lock_release>
 8022920:	230c      	movs	r3, #12
 8022922:	603b      	str	r3, [r7, #0]
 8022924:	e7ee      	b.n	8022904 <__sfp+0x60>
 8022926:	bf00      	nop
 8022928:	08025290 	.word	0x08025290
 802292c:	ffff0001 	.word	0xffff0001

08022930 <_fwalk_reent>:
 8022930:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022934:	4606      	mov	r6, r0
 8022936:	4688      	mov	r8, r1
 8022938:	f100 0448 	add.w	r4, r0, #72	; 0x48
 802293c:	2700      	movs	r7, #0
 802293e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8022942:	f1b9 0901 	subs.w	r9, r9, #1
 8022946:	d505      	bpl.n	8022954 <_fwalk_reent+0x24>
 8022948:	6824      	ldr	r4, [r4, #0]
 802294a:	2c00      	cmp	r4, #0
 802294c:	d1f7      	bne.n	802293e <_fwalk_reent+0xe>
 802294e:	4638      	mov	r0, r7
 8022950:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022954:	89ab      	ldrh	r3, [r5, #12]
 8022956:	2b01      	cmp	r3, #1
 8022958:	d907      	bls.n	802296a <_fwalk_reent+0x3a>
 802295a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802295e:	3301      	adds	r3, #1
 8022960:	d003      	beq.n	802296a <_fwalk_reent+0x3a>
 8022962:	4629      	mov	r1, r5
 8022964:	4630      	mov	r0, r6
 8022966:	47c0      	blx	r8
 8022968:	4307      	orrs	r7, r0
 802296a:	3568      	adds	r5, #104	; 0x68
 802296c:	e7e9      	b.n	8022942 <_fwalk_reent+0x12>
	...

08022970 <_gettimeofday_r>:
 8022970:	b538      	push	{r3, r4, r5, lr}
 8022972:	4d07      	ldr	r5, [pc, #28]	; (8022990 <_gettimeofday_r+0x20>)
 8022974:	2300      	movs	r3, #0
 8022976:	4604      	mov	r4, r0
 8022978:	4608      	mov	r0, r1
 802297a:	4611      	mov	r1, r2
 802297c:	602b      	str	r3, [r5, #0]
 802297e:	f000 f91b 	bl	8022bb8 <_gettimeofday>
 8022982:	1c43      	adds	r3, r0, #1
 8022984:	d102      	bne.n	802298c <_gettimeofday_r+0x1c>
 8022986:	682b      	ldr	r3, [r5, #0]
 8022988:	b103      	cbz	r3, 802298c <_gettimeofday_r+0x1c>
 802298a:	6023      	str	r3, [r4, #0]
 802298c:	bd38      	pop	{r3, r4, r5, pc}
 802298e:	bf00      	nop
 8022990:	20015ac4 	.word	0x20015ac4

08022994 <__retarget_lock_init_recursive>:
 8022994:	4770      	bx	lr

08022996 <__retarget_lock_acquire_recursive>:
 8022996:	4770      	bx	lr

08022998 <__retarget_lock_release>:
 8022998:	4770      	bx	lr

0802299a <__retarget_lock_release_recursive>:
 802299a:	4770      	bx	lr

0802299c <__swhatbuf_r>:
 802299c:	b570      	push	{r4, r5, r6, lr}
 802299e:	460e      	mov	r6, r1
 80229a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80229a4:	2900      	cmp	r1, #0
 80229a6:	b096      	sub	sp, #88	; 0x58
 80229a8:	4614      	mov	r4, r2
 80229aa:	461d      	mov	r5, r3
 80229ac:	da08      	bge.n	80229c0 <__swhatbuf_r+0x24>
 80229ae:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80229b2:	2200      	movs	r2, #0
 80229b4:	602a      	str	r2, [r5, #0]
 80229b6:	061a      	lsls	r2, r3, #24
 80229b8:	d410      	bmi.n	80229dc <__swhatbuf_r+0x40>
 80229ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80229be:	e00e      	b.n	80229de <__swhatbuf_r+0x42>
 80229c0:	466a      	mov	r2, sp
 80229c2:	f000 f8b3 	bl	8022b2c <_fstat_r>
 80229c6:	2800      	cmp	r0, #0
 80229c8:	dbf1      	blt.n	80229ae <__swhatbuf_r+0x12>
 80229ca:	9a01      	ldr	r2, [sp, #4]
 80229cc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80229d0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80229d4:	425a      	negs	r2, r3
 80229d6:	415a      	adcs	r2, r3
 80229d8:	602a      	str	r2, [r5, #0]
 80229da:	e7ee      	b.n	80229ba <__swhatbuf_r+0x1e>
 80229dc:	2340      	movs	r3, #64	; 0x40
 80229de:	2000      	movs	r0, #0
 80229e0:	6023      	str	r3, [r4, #0]
 80229e2:	b016      	add	sp, #88	; 0x58
 80229e4:	bd70      	pop	{r4, r5, r6, pc}
	...

080229e8 <__smakebuf_r>:
 80229e8:	898b      	ldrh	r3, [r1, #12]
 80229ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80229ec:	079d      	lsls	r5, r3, #30
 80229ee:	4606      	mov	r6, r0
 80229f0:	460c      	mov	r4, r1
 80229f2:	d507      	bpl.n	8022a04 <__smakebuf_r+0x1c>
 80229f4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80229f8:	6023      	str	r3, [r4, #0]
 80229fa:	6123      	str	r3, [r4, #16]
 80229fc:	2301      	movs	r3, #1
 80229fe:	6163      	str	r3, [r4, #20]
 8022a00:	b002      	add	sp, #8
 8022a02:	bd70      	pop	{r4, r5, r6, pc}
 8022a04:	ab01      	add	r3, sp, #4
 8022a06:	466a      	mov	r2, sp
 8022a08:	f7ff ffc8 	bl	802299c <__swhatbuf_r>
 8022a0c:	9900      	ldr	r1, [sp, #0]
 8022a0e:	4605      	mov	r5, r0
 8022a10:	4630      	mov	r0, r6
 8022a12:	f7ff f80b 	bl	8021a2c <_malloc_r>
 8022a16:	b948      	cbnz	r0, 8022a2c <__smakebuf_r+0x44>
 8022a18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022a1c:	059a      	lsls	r2, r3, #22
 8022a1e:	d4ef      	bmi.n	8022a00 <__smakebuf_r+0x18>
 8022a20:	f023 0303 	bic.w	r3, r3, #3
 8022a24:	f043 0302 	orr.w	r3, r3, #2
 8022a28:	81a3      	strh	r3, [r4, #12]
 8022a2a:	e7e3      	b.n	80229f4 <__smakebuf_r+0xc>
 8022a2c:	4b0d      	ldr	r3, [pc, #52]	; (8022a64 <__smakebuf_r+0x7c>)
 8022a2e:	62b3      	str	r3, [r6, #40]	; 0x28
 8022a30:	89a3      	ldrh	r3, [r4, #12]
 8022a32:	6020      	str	r0, [r4, #0]
 8022a34:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8022a38:	81a3      	strh	r3, [r4, #12]
 8022a3a:	9b00      	ldr	r3, [sp, #0]
 8022a3c:	6163      	str	r3, [r4, #20]
 8022a3e:	9b01      	ldr	r3, [sp, #4]
 8022a40:	6120      	str	r0, [r4, #16]
 8022a42:	b15b      	cbz	r3, 8022a5c <__smakebuf_r+0x74>
 8022a44:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022a48:	4630      	mov	r0, r6
 8022a4a:	f000 f881 	bl	8022b50 <_isatty_r>
 8022a4e:	b128      	cbz	r0, 8022a5c <__smakebuf_r+0x74>
 8022a50:	89a3      	ldrh	r3, [r4, #12]
 8022a52:	f023 0303 	bic.w	r3, r3, #3
 8022a56:	f043 0301 	orr.w	r3, r3, #1
 8022a5a:	81a3      	strh	r3, [r4, #12]
 8022a5c:	89a0      	ldrh	r0, [r4, #12]
 8022a5e:	4305      	orrs	r5, r0
 8022a60:	81a5      	strh	r5, [r4, #12]
 8022a62:	e7cd      	b.n	8022a00 <__smakebuf_r+0x18>
 8022a64:	080227cd 	.word	0x080227cd

08022a68 <__malloc_lock>:
 8022a68:	4801      	ldr	r0, [pc, #4]	; (8022a70 <__malloc_lock+0x8>)
 8022a6a:	f7ff bf94 	b.w	8022996 <__retarget_lock_acquire_recursive>
 8022a6e:	bf00      	nop
 8022a70:	20015ac1 	.word	0x20015ac1

08022a74 <__malloc_unlock>:
 8022a74:	4801      	ldr	r0, [pc, #4]	; (8022a7c <__malloc_unlock+0x8>)
 8022a76:	f7ff bf90 	b.w	802299a <__retarget_lock_release_recursive>
 8022a7a:	bf00      	nop
 8022a7c:	20015ac1 	.word	0x20015ac1

08022a80 <__sread>:
 8022a80:	b510      	push	{r4, lr}
 8022a82:	460c      	mov	r4, r1
 8022a84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022a88:	f000 f884 	bl	8022b94 <_read_r>
 8022a8c:	2800      	cmp	r0, #0
 8022a8e:	bfab      	itete	ge
 8022a90:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8022a92:	89a3      	ldrhlt	r3, [r4, #12]
 8022a94:	181b      	addge	r3, r3, r0
 8022a96:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8022a9a:	bfac      	ite	ge
 8022a9c:	6563      	strge	r3, [r4, #84]	; 0x54
 8022a9e:	81a3      	strhlt	r3, [r4, #12]
 8022aa0:	bd10      	pop	{r4, pc}

08022aa2 <__swrite>:
 8022aa2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022aa6:	461f      	mov	r7, r3
 8022aa8:	898b      	ldrh	r3, [r1, #12]
 8022aaa:	05db      	lsls	r3, r3, #23
 8022aac:	4605      	mov	r5, r0
 8022aae:	460c      	mov	r4, r1
 8022ab0:	4616      	mov	r6, r2
 8022ab2:	d505      	bpl.n	8022ac0 <__swrite+0x1e>
 8022ab4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022ab8:	2302      	movs	r3, #2
 8022aba:	2200      	movs	r2, #0
 8022abc:	f000 f858 	bl	8022b70 <_lseek_r>
 8022ac0:	89a3      	ldrh	r3, [r4, #12]
 8022ac2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022ac6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8022aca:	81a3      	strh	r3, [r4, #12]
 8022acc:	4632      	mov	r2, r6
 8022ace:	463b      	mov	r3, r7
 8022ad0:	4628      	mov	r0, r5
 8022ad2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8022ad6:	f000 b817 	b.w	8022b08 <_write_r>

08022ada <__sseek>:
 8022ada:	b510      	push	{r4, lr}
 8022adc:	460c      	mov	r4, r1
 8022ade:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022ae2:	f000 f845 	bl	8022b70 <_lseek_r>
 8022ae6:	1c43      	adds	r3, r0, #1
 8022ae8:	89a3      	ldrh	r3, [r4, #12]
 8022aea:	bf15      	itete	ne
 8022aec:	6560      	strne	r0, [r4, #84]	; 0x54
 8022aee:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8022af2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8022af6:	81a3      	strheq	r3, [r4, #12]
 8022af8:	bf18      	it	ne
 8022afa:	81a3      	strhne	r3, [r4, #12]
 8022afc:	bd10      	pop	{r4, pc}

08022afe <__sclose>:
 8022afe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022b02:	f7ff bd6d 	b.w	80225e0 <_close_r>
	...

08022b08 <_write_r>:
 8022b08:	b538      	push	{r3, r4, r5, lr}
 8022b0a:	4d07      	ldr	r5, [pc, #28]	; (8022b28 <_write_r+0x20>)
 8022b0c:	4604      	mov	r4, r0
 8022b0e:	4608      	mov	r0, r1
 8022b10:	4611      	mov	r1, r2
 8022b12:	2200      	movs	r2, #0
 8022b14:	602a      	str	r2, [r5, #0]
 8022b16:	461a      	mov	r2, r3
 8022b18:	f7df fb68 	bl	80021ec <_write>
 8022b1c:	1c43      	adds	r3, r0, #1
 8022b1e:	d102      	bne.n	8022b26 <_write_r+0x1e>
 8022b20:	682b      	ldr	r3, [r5, #0]
 8022b22:	b103      	cbz	r3, 8022b26 <_write_r+0x1e>
 8022b24:	6023      	str	r3, [r4, #0]
 8022b26:	bd38      	pop	{r3, r4, r5, pc}
 8022b28:	20015ac4 	.word	0x20015ac4

08022b2c <_fstat_r>:
 8022b2c:	b538      	push	{r3, r4, r5, lr}
 8022b2e:	4d07      	ldr	r5, [pc, #28]	; (8022b4c <_fstat_r+0x20>)
 8022b30:	2300      	movs	r3, #0
 8022b32:	4604      	mov	r4, r0
 8022b34:	4608      	mov	r0, r1
 8022b36:	4611      	mov	r1, r2
 8022b38:	602b      	str	r3, [r5, #0]
 8022b3a:	f7df fb68 	bl	800220e <_fstat>
 8022b3e:	1c43      	adds	r3, r0, #1
 8022b40:	d102      	bne.n	8022b48 <_fstat_r+0x1c>
 8022b42:	682b      	ldr	r3, [r5, #0]
 8022b44:	b103      	cbz	r3, 8022b48 <_fstat_r+0x1c>
 8022b46:	6023      	str	r3, [r4, #0]
 8022b48:	bd38      	pop	{r3, r4, r5, pc}
 8022b4a:	bf00      	nop
 8022b4c:	20015ac4 	.word	0x20015ac4

08022b50 <_isatty_r>:
 8022b50:	b538      	push	{r3, r4, r5, lr}
 8022b52:	4d06      	ldr	r5, [pc, #24]	; (8022b6c <_isatty_r+0x1c>)
 8022b54:	2300      	movs	r3, #0
 8022b56:	4604      	mov	r4, r0
 8022b58:	4608      	mov	r0, r1
 8022b5a:	602b      	str	r3, [r5, #0]
 8022b5c:	f7df fb5c 	bl	8002218 <_isatty>
 8022b60:	1c43      	adds	r3, r0, #1
 8022b62:	d102      	bne.n	8022b6a <_isatty_r+0x1a>
 8022b64:	682b      	ldr	r3, [r5, #0]
 8022b66:	b103      	cbz	r3, 8022b6a <_isatty_r+0x1a>
 8022b68:	6023      	str	r3, [r4, #0]
 8022b6a:	bd38      	pop	{r3, r4, r5, pc}
 8022b6c:	20015ac4 	.word	0x20015ac4

08022b70 <_lseek_r>:
 8022b70:	b538      	push	{r3, r4, r5, lr}
 8022b72:	4d07      	ldr	r5, [pc, #28]	; (8022b90 <_lseek_r+0x20>)
 8022b74:	4604      	mov	r4, r0
 8022b76:	4608      	mov	r0, r1
 8022b78:	4611      	mov	r1, r2
 8022b7a:	2200      	movs	r2, #0
 8022b7c:	602a      	str	r2, [r5, #0]
 8022b7e:	461a      	mov	r2, r3
 8022b80:	f7df fb4c 	bl	800221c <_lseek>
 8022b84:	1c43      	adds	r3, r0, #1
 8022b86:	d102      	bne.n	8022b8e <_lseek_r+0x1e>
 8022b88:	682b      	ldr	r3, [r5, #0]
 8022b8a:	b103      	cbz	r3, 8022b8e <_lseek_r+0x1e>
 8022b8c:	6023      	str	r3, [r4, #0]
 8022b8e:	bd38      	pop	{r3, r4, r5, pc}
 8022b90:	20015ac4 	.word	0x20015ac4

08022b94 <_read_r>:
 8022b94:	b538      	push	{r3, r4, r5, lr}
 8022b96:	4d07      	ldr	r5, [pc, #28]	; (8022bb4 <_read_r+0x20>)
 8022b98:	4604      	mov	r4, r0
 8022b9a:	4608      	mov	r0, r1
 8022b9c:	4611      	mov	r1, r2
 8022b9e:	2200      	movs	r2, #0
 8022ba0:	602a      	str	r2, [r5, #0]
 8022ba2:	461a      	mov	r2, r3
 8022ba4:	f7df fb14 	bl	80021d0 <_read>
 8022ba8:	1c43      	adds	r3, r0, #1
 8022baa:	d102      	bne.n	8022bb2 <_read_r+0x1e>
 8022bac:	682b      	ldr	r3, [r5, #0]
 8022bae:	b103      	cbz	r3, 8022bb2 <_read_r+0x1e>
 8022bb0:	6023      	str	r3, [r4, #0]
 8022bb2:	bd38      	pop	{r3, r4, r5, pc}
 8022bb4:	20015ac4 	.word	0x20015ac4

08022bb8 <_gettimeofday>:
 8022bb8:	4b02      	ldr	r3, [pc, #8]	; (8022bc4 <_gettimeofday+0xc>)
 8022bba:	2258      	movs	r2, #88	; 0x58
 8022bbc:	601a      	str	r2, [r3, #0]
 8022bbe:	f04f 30ff 	mov.w	r0, #4294967295
 8022bc2:	4770      	bx	lr
 8022bc4:	20015ac4 	.word	0x20015ac4

08022bc8 <_init>:
 8022bc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022bca:	bf00      	nop
 8022bcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022bce:	bc08      	pop	{r3}
 8022bd0:	469e      	mov	lr, r3
 8022bd2:	4770      	bx	lr

08022bd4 <_fini>:
 8022bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022bd6:	bf00      	nop
 8022bd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022bda:	bc08      	pop	{r3}
 8022bdc:	469e      	mov	lr, r3
 8022bde:	4770      	bx	lr
