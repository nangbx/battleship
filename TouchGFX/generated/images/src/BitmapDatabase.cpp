// 4.22.0 0xb2a9bb18
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_board[]; // BITMAP_BOARD_ID = 0, Size: 322x322 pixels
extern const unsigned char image_board2[]; // BITMAP_BOARD2_ID = 1, Size: 322x322 pixels
extern const unsigned char image_boat[]; // BITMAP_BOAT_ID = 2, Size: 32x32 pixels
extern const unsigned char image_boat2[]; // BITMAP_BOAT2_ID = 3, Size: 32x32 pixels
extern const unsigned char image_hit[]; // BITMAP_HIT_ID = 4, Size: 34x34 pixels
extern const unsigned char image_miss_blue[]; // BITMAP_MISS_BLUE_ID = 5, Size: 34x34 pixels
extern const unsigned char image_miss_gray[]; // BITMAP_MISS_GRAY_ID = 6, Size: 34x34 pixels
extern const unsigned char image_white[]; // BITMAP_WHITE_ID = 7, Size: 362x500 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_board, 0, 322, 322, 290, 32, 30, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_board2, 0, 322, 322, 290, 32, 30, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_boat, 0, 32, 32, 2, 0, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_boat2, 0, 32, 32, 0, 2, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 28, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hit, 0, 34, 34, 12, 11, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_miss_blue, 0, 34, 34, 12, 11, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_miss_gray, 0, 34, 34, 32, 5, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 25, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_white, 0, 362, 500, 0, 0, 362, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 500, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
